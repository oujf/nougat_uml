format 213
"util" // android::frameworks::base::cmds::am::src::com::android::internal::util
  revision 2
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks\\base\\core\\java/com/android/internal/util/"
  java_package "com.android.internal.util"
  classview 494903 "util"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 7556919 "JournaledFile"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@deprecated Use {@link com.android.internal.os.AtomicFile} instead.  It would
be nice to update all existing uses of this to switch to AtomicFile, but since
their on-file semantics are slightly different that would run the risk of losing
data if at the point of the platform upgrade to the new code it would need to
roll back to the backup file.  This can be solved...  but is it worth it and
all of the testing needed to make sure it is correct?
"
      attribute 26500407 "mReal"
	package explicit_type "File"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26500535 "mTemp"
	package explicit_type "File"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26500663 "mWriting"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83190327 "JournaledFile"
	public explicit_return_type ""
	nparams 2
	  param inout name "real" explicit_type "File"
	  param inout name "temp" explicit_type "File"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83190455 "chooseForRead"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the file for you to read.
@more
Prefers the real file.  If it doesn't exist, uses the temp one, and then copies
it to the real one.  If there is both a real file and a temp one, assumes that the
temp one isn't fully written and deletes it.
"
      end

      operation 83190583 "chooseForWrite"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a file for you to write.
@more
If a write is already happening, throws.  In other words, you must provide your
own locking.
<p>
Call {@link #commit} to commit the changes, or {@link #rollback} to forget the changes.
"
      end

      operation 83190711 "commit"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Commit changes.
"
      end

      operation 83190839 "rollback"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Roll back changes.
"
      end
    end

    class 7574071 "ArrayUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ArrayUtils contains some methods that you can call to find out
the most efficient increments by which to grow arrays.
"
      attribute 26491575 "CACHE_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 73"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83155767 "ArrayUtils"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83155895 "newUnpaddedByteArray"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "minLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83156023 "newUnpaddedCharArray"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "minLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83156151 "newUnpaddedIntArray"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "minLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83156279 "newUnpaddedBooleanArray"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "minLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83156407 "newUnpaddedLongArray"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "minLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83156535 "newUnpaddedFloatArray"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "minLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83156663 "newUnpaddedObjectArray"
	class_operation public explicit_return_type "Object"
	nparams 1
	  param in name "minLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83156791 "newUnpaddedArray"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "clazz" explicit_type "Class"
	  param in name "minLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
      end

      operation 83156919 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "array1" explicit_type "byte"
	multiplicity "[]"
	  param inout name "array2" explicit_type "byte"
	multiplicity "[]"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the beginnings of two byte arrays are equal.

@param array1 the first byte array
@param array2 the second byte array
@param length the number of bytes to check
@return true if they're equal, false otherwise
"
      end

      operation 83157047 "emptyArray"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "kind" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an empty array of the specified type.  The intent is that
it will return the same empty array every time to avoid reallocation,
although this is not guaranteed.
"
      end

      operation 83157175 "isEmpty"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "array" explicit_type "Collection<?>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if given array is null or has zero elements.
"
      end

      operation 83157303 "isEmpty"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}@Nullable ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if given array is null or has zero elements.
"
      end

      operation 83157431 "isEmpty"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if given array is null or has zero elements.
"
      end

      operation 83157559 "isEmpty"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if given array is null or has zero elements.
"
      end

      operation 83157687 "isEmpty"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if given array is null or has zero elements.
"
      end

      operation 83157815 "isEmpty"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "array" explicit_type "boolean"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if given array is null or has zero elements.
"
      end

      operation 83157943 "contains"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "value" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}@Nullable ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that value is present as at least one of the elements of the array.
@param array the array to check in
@param value the value to check for
@return true if the value is present in the array
"
      end

      operation 83158071 "indexOf"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "value" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}@Nullable ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return first index of {@code value} in {@code array}, or {@code -1} if
not found.
"
      end

      operation 83158199 "containsAll"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "check" explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}@Nullable ${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test if all {@code check} items are contained in {@code array}.
"
      end

      operation 83158327 "containsAny"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "check" explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}@Nullable ${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test if any {@code check} items are contained in {@code array}.
"
      end

      operation 83158455 "contains"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83158583 "contains"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83158711 "total"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83158839 "convertToIntArray"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "list" explicit_type "List<Integer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83158967 "appendElement"
	class_operation public explicit_return_type "T"
	nparams 3
	  param inout name "kind" explicit_type "Class"
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "element" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}<T> ${p0}, @Nullable ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
@NonNull
"
	
	
	
	comment "Adds value to given array if not already present, providing set-like
behavior.
"
      end

      operation 83159095 "removeElement"
	class_operation public explicit_return_type "T"
	nparams 3
	  param inout name "kind" explicit_type "Class"
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "element" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}<T> ${p0}, @Nullable ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
@Nullable
"
	
	
	
	comment "Removes value from given array if present, providing set-like behavior.
"
      end

      operation 83159223 "appendInt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "cur" explicit_type "int"
	multiplicity "[]"
	  param in name "val" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Adds value to given array if not already present, providing set-like
behavior.
"
      end

      operation 83159351 "removeInt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "cur" explicit_type "int"
	multiplicity "[]"
	  param in name "val" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Removes value from given array if present, providing set-like behavior.
"
      end

      operation 83159479 "removeString"
	class_operation public explicit_return_type "String"
	nparams 2
	  param inout name "cur" explicit_type "String"
	multiplicity "[]"
	  param inout name "val" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Removes value from given array if present, providing set-like behavior.
"
      end

      operation 83159607 "appendLong"
	class_operation public explicit_return_type "long"
	nparams 2
	  param inout name "cur" explicit_type "long"
	multiplicity "[]"
	  param in name "val" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Adds value to given array if not already present, providing set-like
behavior.
"
      end

      operation 83159735 "removeLong"
	class_operation public explicit_return_type "long"
	nparams 2
	  param inout name "cur" explicit_type "long"
	multiplicity "[]"
	  param in name "val" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Removes value from given array if present, providing set-like behavior.
"
      end

      operation 83159863 "cloneOrNull"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
      end

      operation 83159991 "cloneOrNull"
	class_operation public return_type class_ref 7041591 // ArraySet
	nparams 1
	  param inout name "array" type class_ref 7041591 // ArraySet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}@Nullable ${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
      end

      operation 83160119 "add"
	class_operation public return_type class_ref 7041591 // ArraySet
	nparams 2
	  param inout name "cur" type class_ref 7041591 // ArraySet
	  param inout name "val" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}@Nullable ${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
      end

      operation 83160247 "remove"
	class_operation public return_type class_ref 7041591 // ArraySet
	nparams 2
	  param inout name "cur" type class_ref 7041591 // ArraySet
	  param inout name "val" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}@Nullable ${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
      end

      operation 83160375 "contains"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "cur" type class_ref 7041591 // ArraySet
	  param inout name "val" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}@Nullable ${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83160503 "add"
	class_operation public explicit_return_type "ArrayList<T>"
	nparams 2
	  param inout name "cur" explicit_type "ArrayList<T>"
	  param inout name "val" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
      end

      operation 83160631 "remove"
	class_operation public explicit_return_type "ArrayList<T>"
	nparams 2
	  param inout name "cur" explicit_type "ArrayList<T>"
	  param inout name "val" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
      end

      operation 83160759 "contains"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "cur" explicit_type "Collection<T>"
	  param inout name "val" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83160887 "trimToSize"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}@Nullable ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
      end

      operation 83161015 "referenceEquals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "ArrayList<T>"
	  param inout name "b" explicit_type "ArrayList<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the two ArrayLists are equal with respect to the objects they contain.
The objects must be in the same order and be reference equal (== not .equals()).
"
      end

      operation 83161143 "unstableRemoveIf"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "collection" explicit_type "ArrayList<T>"
	  param inout name "predicate" explicit_type "java.util.function.Predicate<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}@Nullable ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes elements that match the predicate in an efficient way that alters the order of
elements in the collection. This should only be used if order is not important.
@param collection The ArrayList from which to remove elements.
@param predicate The predicate that each element is tested against.
@return the number of elements removed.
"
      end
    end

    class 7574199 "AsyncChannel"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>An asynchronous channel between two handlers.</p>

<p>The handlers maybe in the same process or in another process. There
are two protocol styles that can be used with an AysncChannel. The
first is a simple request/reply protocol where the server does
not need to know which client is issuing the request.</p>

<p>In a simple request/reply protocol the client/source sends requests to the
server/destination. And the server uses the replyToMessage methods.
In this usage model there is no need for the destination to
use the connect methods. The typical sequence of operations is:</p>
<ol>
  <li>Client calls AsyncChannel#connectSync or Asynchronously:</li>
     <ol>For an asynchronous half connection client calls AsyncChannel#connect.</ol>
         <li>Client receives CMD_CHANNEL_HALF_CONNECTED from AsyncChannel</li>
     </ol>
  <li><code>comm-loop:</code></li>
  <li>Client calls AsyncChannel#sendMessage</li>
  <li>Server processes messages and optionally replies using AsyncChannel#replyToMessage
  <li>Loop to <code>comm-loop</code> until done</li>
  <li>When done Client calls {@link AsyncChannel#disconnect}</li>
  <li>Client/Server receives CMD_CHANNEL_DISCONNECTED from AsyncChannel</li>
</ol>
<br/>
<p>A second usage model is where the server/destination needs to know
which client it's connected too. For example the server needs to
send unsolicited messages back to the client. Or the server keeps
different state for each client. In this model the server will also
use the connect methods. The typical sequence of operation is:</p>
<ol>
  <li>Client calls AsyncChannel#fullyConnectSync or Asynchronously:<li>
     <ol>For an asynchronous full connection it calls AsyncChannel#connect</li>
         <li>Client receives CMD_CHANNEL_HALF_CONNECTED from AsyncChannel</li>
         <li>Client calls AsyncChannel#sendMessage(CMD_CHANNEL_FULL_CONNECTION)</li>
     </ol>
  <li>Server receives CMD_CHANNEL_FULL_CONNECTION</li>
  <li>Server calls AsyncChannel#connected</li>
  <li>Server sends AsyncChannel#sendMessage(CMD_CHANNEL_FULLY_CONNECTED)</li>
  <li>Client receives CMD_CHANNEL_FULLY_CONNECTED</li>
  <li><code>comm-loop:</code></li>
  <li>Client/Server uses AsyncChannel#sendMessage/replyToMessage
      to communicate and perform work</li>
  <li>Loop to <code>comm-loop</code> until done</li>
  <li>When done Client/Server calls {@link AsyncChannel#disconnect}</li>
  <li>Client/Server receives CMD_CHANNEL_DISCONNECTED from AsyncChannel</li>
</ol>

TODO: Consider simplifying where we have connect and fullyConnect with only one response
message RSP_CHANNEL_CONNECT instead of two, CMD_CHANNEL_HALF_CONNECTED and
CMD_CHANNEL_FULLY_CONNECTED. We'd also change CMD_CHANNEL_FULL_CONNECTION to REQ_CHANNEL_CONNECT.
"
      attribute 26491703 "DBG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Enable to turn on debugging 
"
      end

      attribute 26491831 "BASE"
	class_attribute const_attribute private explicit_type "int"
	init_value " Protocol.BASE_SYSTEM_ASYNC_CHANNEL"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26491959 "CMD_CHANNEL_HALF_CONNECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " BASE + 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Command sent when the channel is half connected. Half connected
means that the channel can be used to send commends to the destination
but the destination is unaware that the channel exists. The first
command sent to the destination is typically CMD_CHANNEL_FULL_CONNECTION if
it is desired to establish a long term connection, but any command maybe
sent.

msg.arg1 == 0 : STATUS_SUCCESSFUL
            1 : STATUS_BINDING_UNSUCCESSFUL
msg.obj  == the AsyncChannel
msg.replyTo == dstMessenger if successful

"
      end

      attribute 26492087 "CMD_CHANNEL_FULL_CONNECTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " BASE + 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Command typically sent when after receiving the CMD_CHANNEL_HALF_CONNECTED.
This is used to initiate a long term connection with the destination and
typically the destination will reply with CMD_CHANNEL_FULLY_CONNECTED.

msg.replyTo = srcMessenger.

"
      end

      attribute 26492215 "CMD_CHANNEL_FULLY_CONNECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " BASE + 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Command typically sent after the destination receives a CMD_CHANNEL_FULL_CONNECTION.
This signifies the acceptance or rejection of the channel by the sender.

msg.arg1 == 0 : Accept connection
              : All other values signify the destination rejected the connection
                and {@link AsyncChannel#disconnect} would typically be called.

"
      end

      attribute 26492343 "CMD_CHANNEL_DISCONNECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " BASE + 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Command sent when one side or the other wishes to disconnect. The sender
may or may not be able to receive a reply depending upon the protocol and
the state of the connection. The receiver should call {@link AsyncChannel#disconnect}
to close its side of the channel and it will receive a CMD_CHANNEL_DISCONNECTED
when the channel is closed.

msg.replyTo = messenger that is disconnecting

"
      end

      attribute 26492471 "CMD_CHANNEL_DISCONNECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " BASE + 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Command sent when the channel becomes disconnected. This is sent when the
channel is forcibly disconnected by the system or as a reply to CMD_CHANNEL_DISCONNECT.

msg.arg1 == 0 : STATUS_SUCCESSFUL
            1 : STATUS_BINDING_UNSUCCESSFUL
            2 : STATUS_SEND_UNSUCCESSFUL
              : All other values signify failure and the channel state is indeterminate
msg.obj  == the AsyncChannel
msg.replyTo = messenger disconnecting or null if it was never connected.

"
      end

      attribute 26492599 "CMD_TO_STRING_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " CMD_CHANNEL_DISCONNECTED - BASE + 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      extra_member 295735 "initialization"
	
	cpp "" ""
	java "  static {
        sCmdToString[CMD_CHANNEL_HALF_CONNECTED - BASE] = \"CMD_CHANNEL_HALF_CONNECTED\";
        sCmdToString[CMD_CHANNEL_FULL_CONNECTION - BASE] = \"CMD_CHANNEL_FULL_CONNECTION\";
        sCmdToString[CMD_CHANNEL_FULLY_CONNECTED - BASE] = \"CMD_CHANNEL_FULLY_CONNECTED\";
        sCmdToString[CMD_CHANNEL_DISCONNECT - BASE] = \"CMD_CHANNEL_DISCONNECT\";
        sCmdToString[CMD_CHANNEL_DISCONNECTED - BASE] = \"CMD_CHANNEL_DISCONNECTED\";
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      operation 83161271 "cmdToString"
	class_operation protected explicit_return_type "String"
	nparams 1
	  param in name "cmd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 26492727 "STATUS_SUCCESSFUL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Successful status always 0, !0 is an unsuccessful status 
"
      end

      attribute 26492855 "STATUS_BINDING_UNSUCCESSFUL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Error attempting to bind on a connect 
"
      end

      attribute 26492983 "STATUS_SEND_UNSUCCESSFUL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Error attempting to send a message 
"
      end

      attribute 26493111 "STATUS_FULL_CONNECTION_REFUSED_ALREADY_CONNECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " CMD_FULLY_CONNECTED refused because a connection already exists
"
      end

      attribute 26493239 "STATUS_REMOTE_DISCONNECTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Error indicating abnormal termination of destination messenger 
"
      end

      class 7574327 "AsyncChannelConnection"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17019703 // <realization>
	  relation 17019703 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17019703 // <realization>
	    b parent class_ref 6926775 // ServiceConnection
	end

	operation 83166519 "AsyncChannelConnection"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83166647 "onServiceConnected"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "className" type class_ref 6926647 // ComponentName
	    param inout name "service" type class_ref 6927031 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83166775 "onServiceDisconnected"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "className" type class_ref 6926647 // ComponentName
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 17018039 // mConnection (<unidirectional association>)
	relation 17018039 --->
	  a role_name "mConnection" private
	    comment " Service connection 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17018039 // mConnection (<unidirectional association>)
	  b parent class_ref 7574327 // AsyncChannelConnection
      end

      classrelation 17018167 // mSrcContext (<unidirectional association>)
	relation 17018167 --->
	  a role_name "mSrcContext" private
	    comment " Context for source 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17018167 // mSrcContext (<unidirectional association>)
	  b parent class_ref 6923703 // Context
      end

      classrelation 17018295 // mSrcHandler (<unidirectional association>)
	relation 17018295 --->
	  a role_name "mSrcHandler" private
	    comment " Handler for source 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17018295 // mSrcHandler (<unidirectional association>)
	  b parent class_ref 6926391 // Handler
      end

      classrelation 17018423 // mSrcMessenger (<unidirectional association>)
	relation 17018423 --->
	  a role_name "mSrcMessenger" private
	    comment " Messenger for source 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17018423 // mSrcMessenger (<unidirectional association>)
	  b parent class_ref 7214007 // Messenger
      end

      classrelation 17018551 // mDstMessenger (<unidirectional association>)
	relation 17018551 --->
	  a role_name "mDstMessenger" private
	    comment " Messenger for destination 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17018551 // mDstMessenger (<unidirectional association>)
	  b parent class_ref 7214007 // Messenger
      end

      class 7574455 "DeathMonitor"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17019831 // <realization>
	  relation 17019831 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17019831 // <realization>
	    b parent class_ref 6932023 // DeathRecipient
	end

	operation 83167031 "DeathMonitor"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83167159 "binderDied"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 17018679 // mDeathMonitor (<unidirectional association>)
	relation 17018679 --->
	  a role_name "mDeathMonitor" private
	    comment " Death Monitor for destination messenger 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17018679 // mDeathMonitor (<unidirectional association>)
	  b parent class_ref 7574455 // DeathMonitor
      end

      operation 83161399 "AsyncChannel"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "AsyncChannel constructor
"
      end

      operation 83161527 "connectSrcHandlerToPackageSync"
	public explicit_return_type "int"
	nparams 4
	  param inout name "srcContext" type class_ref 6923703 // Context
	  param inout name "srcHandler" type class_ref 6926391 // Handler
	  param inout name "dstPackageName" explicit_type "String"
	  param inout name "dstClassName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connect handler to named package/class synchronously.

@param srcContext is the context of the source
@param srcHandler is the hander to receive CONNECTED & DISCONNECTED
           messages
@param dstPackageName is the destination package name
@param dstClassName is the fully qualified class name (i.e. contains
           package name)

@return STATUS_SUCCESSFUL on success any other value is an error.
"
      end

      operation 83161655 "connectSync"
	public explicit_return_type "int"
	nparams 3
	  param inout name "srcContext" type class_ref 6923703 // Context
	  param inout name "srcHandler" type class_ref 6926391 // Handler
	  param inout name "dstMessenger" type class_ref 7214007 // Messenger
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connect a handler to Messenger synchronously.

@param srcContext is the context of the source
@param srcHandler is the hander to receive CONNECTED & DISCONNECTED
           messages
@param dstMessenger is the hander to send messages to.

@return STATUS_SUCCESSFUL on success any other value is an error.
"
      end

      operation 83161783 "connectSync"
	public explicit_return_type "int"
	nparams 3
	  param inout name "srcContext" type class_ref 6923703 // Context
	  param inout name "srcHandler" type class_ref 6926391 // Handler
	  param inout name "dstHandler" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "connect two local Handlers synchronously.

@param srcContext is the context of the source
@param srcHandler is the hander to receive CONNECTED & DISCONNECTED
           messages
@param dstHandler is the hander to send messages to.

@return STATUS_SUCCESSFUL on success any other value is an error.
"
      end

      operation 83161911 "fullyConnectSync"
	public explicit_return_type "int"
	nparams 3
	  param inout name "srcContext" type class_ref 6923703 // Context
	  param inout name "srcHandler" type class_ref 6926391 // Handler
	  param inout name "dstHandler" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fully connect two local Handlers synchronously.

@param srcContext is the context of the source
@param srcHandler is the hander to receive CONNECTED & DISCONNECTED
           messages
@param dstHandler is the hander to send messages to.

@return STATUS_SUCCESSFUL on success any other value is an error.
"
      end

      operation 83162039 "connect"
	public explicit_return_type "void"
	nparams 4
	  param inout name "srcContext" type class_ref 6923703 // Context
	  param inout name "srcHandler" type class_ref 6926391 // Handler
	  param inout name "dstPackageName" explicit_type "String"
	  param inout name "dstClassName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connect handler to named package/class.

Sends a CMD_CHANNEL_HALF_CONNECTED message to srcHandler when complete.
     msg.arg1 = status
     msg.obj = the AsyncChannel

@param srcContext is the context of the source
@param srcHandler is the hander to receive CONNECTED & DISCONNECTED
           messages
@param dstPackageName is the destination package name
@param dstClassName is the fully qualified class name (i.e. contains
           package name)
"
      end

      operation 83162167 "connect"
	public explicit_return_type "void"
	nparams 3
	  param inout name "srcContext" type class_ref 6923703 // Context
	  param inout name "srcHandler" type class_ref 6926391 // Handler
	  param inout name "klass" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<?> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connect handler to a class

Sends a CMD_CHANNEL_HALF_CONNECTED message to srcHandler when complete.
     msg.arg1 = status
     msg.obj = the AsyncChannel

@param srcContext
@param srcHandler
@param klass is the class to send messages to.
"
      end

      operation 83162295 "connect"
	public explicit_return_type "void"
	nparams 3
	  param inout name "srcContext" type class_ref 6923703 // Context
	  param inout name "srcHandler" type class_ref 6926391 // Handler
	  param inout name "dstMessenger" type class_ref 7214007 // Messenger
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connect handler and messenger.

Sends a CMD_CHANNEL_HALF_CONNECTED message to srcHandler when complete.
     msg.arg1 = status
     msg.obj = the AsyncChannel

@param srcContext
@param srcHandler
@param dstMessenger
"
      end

      operation 83162423 "connected"
	public explicit_return_type "void"
	nparams 3
	  param inout name "srcContext" type class_ref 6923703 // Context
	  param inout name "srcHandler" type class_ref 6926391 // Handler
	  param inout name "dstMessenger" type class_ref 7214007 // Messenger
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connect handler to messenger. This method is typically called
when a server receives a CMD_CHANNEL_FULL_CONNECTION request
and initializes the internal instance variables to allow communication
with the dstMessenger.

@param srcContext
@param srcHandler
@param dstMessenger
"
      end

      operation 83162551 "connect"
	public explicit_return_type "void"
	nparams 3
	  param inout name "srcContext" type class_ref 6923703 // Context
	  param inout name "srcHandler" type class_ref 6926391 // Handler
	  param inout name "dstHandler" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connect two local Handlers.

@param srcContext is the context of the source
@param srcHandler is the hander to receive CONNECTED & DISCONNECTED
           messages
@param dstHandler is the hander to send messages to.
"
      end

      operation 83162679 "connect"
	public explicit_return_type "void"
	nparams 2
	  param inout name "srcAsyncService" type class_ref 7574583 // AsyncService
	  param inout name "dstMessenger" type class_ref 7214007 // Messenger
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connect service and messenger.

Sends a CMD_CHANNEL_HALF_CONNECTED message to srcAsyncService when complete.
     msg.arg1 = status
     msg.obj = the AsyncChannel

@param srcAsyncService
@param dstMessenger
"
      end

      operation 83162807 "disconnected"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To close the connection call when handler receives CMD_CHANNEL_DISCONNECTED
"
      end

      operation 83162935 "disconnect"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disconnect
"
      end

      operation 83163063 "sendMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a message to the destination handler.

@param msg
"
      end

      operation 83163191 "sendMessage"
	public explicit_return_type "void"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a message to the destination handler

@param what
"
      end

      operation 83163319 "sendMessage"
	public explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a message to the destination handler

@param what
@param arg1
"
      end

      operation 83163447 "sendMessage"
	public explicit_return_type "void"
	nparams 3
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a message to the destination handler

@param what
@param arg1
@param arg2
"
      end

      operation 83163575 "sendMessage"
	public explicit_return_type "void"
	nparams 4
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a message to the destination handler

@param what
@param arg1
@param arg2
@param obj
"
      end

      operation 83163703 "sendMessage"
	public explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a message to the destination handler

@param what
@param obj
"
      end

      operation 83163831 "replyToMessage"
	public explicit_return_type "void"
	nparams 2
	  param inout name "srcMsg" type class_ref 134839 // Message
	  param inout name "dstMsg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reply to srcMsg sending dstMsg

@param srcMsg
@param dstMsg
"
      end

      operation 83163959 "replyToMessage"
	public explicit_return_type "void"
	nparams 2
	  param inout name "srcMsg" type class_ref 134839 // Message
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reply to srcMsg

@param srcMsg
@param what
"
      end

      operation 83164087 "replyToMessage"
	public explicit_return_type "void"
	nparams 3
	  param inout name "srcMsg" type class_ref 134839 // Message
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reply to srcMsg

@param srcMsg
@param what
@param arg1
"
      end

      operation 83164215 "replyToMessage"
	public explicit_return_type "void"
	nparams 4
	  param inout name "srcMsg" type class_ref 134839 // Message
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reply to srcMsg

@param srcMsg
@param what
@param arg1
@param arg2
"
      end

      operation 83164343 "replyToMessage"
	public explicit_return_type "void"
	nparams 5
	  param inout name "srcMsg" type class_ref 134839 // Message
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reply to srcMsg

@param srcMsg
@param what
@param arg1
@param arg2
@param obj
"
      end

      operation 83164471 "replyToMessage"
	public explicit_return_type "void"
	nparams 3
	  param inout name "srcMsg" type class_ref 134839 // Message
	  param in name "what" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reply to srcMsg

@param srcMsg
@param what
@param obj
"
      end

      operation 83164599 "sendMessageSynchronously"
	public return_type class_ref 134839 // Message
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send the Message synchronously.

@param msg to send
@return reply message or null if an error.
"
      end

      operation 83164727 "sendMessageSynchronously"
	public return_type class_ref 134839 // Message
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send the Message synchronously.

@param what
@return reply message or null if an error.
"
      end

      operation 83164855 "sendMessageSynchronously"
	public return_type class_ref 134839 // Message
	nparams 2
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send the Message synchronously.

@param what
@param arg1
@return reply message or null if an error.
"
      end

      operation 83164983 "sendMessageSynchronously"
	public return_type class_ref 134839 // Message
	nparams 3
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send the Message synchronously.

@param what
@param arg1
@param arg2
@return reply message or null if an error.
"
      end

      operation 83165111 "sendMessageSynchronously"
	public return_type class_ref 134839 // Message
	nparams 4
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send the Message synchronously.

@param what
@param arg1
@param arg2
@param obj
@return reply message or null if an error.
"
      end

      operation 83165239 "sendMessageSynchronously"
	public return_type class_ref 134839 // Message
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send the Message synchronously.

@param what
@param obj
@return reply message or null if an error.
"
      end

      class 7574711 "SyncMessenger"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17018807 // sStack (<unidirectional association>)
	  relation 17018807 --->
	    stereotype "Stack"
	    a role_name "sStack" init_value " new Stack<SyncMessenger>()" class_relation private
	      comment " A stack of SyncMessengers 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 17018807 // sStack (<unidirectional association>)
	    b parent class_ref 7574711 // SyncMessenger
	end

	attribute 26493367 "sCount"
	  class_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " A number of SyncMessengers created 
"
	end

	classrelation 17018935 // mHandlerThread (<unidirectional association>)
	  relation 17018935 --->
	    a role_name "mHandlerThread" private
	      comment " The handler thread 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17018935 // mHandlerThread (<unidirectional association>)
	    b parent class_ref 7159991 // HandlerThread
	end

	class 7574839 "SyncHandler"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 17019319 // <generalisation>
	    relation 17019319 ---|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 17019319 // <generalisation>
	      b parent class_ref 6926391 // Handler
	  end

	  classrelation 17019575 // mResultMsg (<unidirectional association>)
	    relation 17019575 --->
	      a role_name "mResultMsg" private
		comment " The resulting message 
"
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 17019575 // mResultMsg (<unidirectional association>)
	      b parent class_ref 134839 // Message
	  end

	  operation 83165495 "SyncHandler"
	    private explicit_return_type ""
	    nparams 1
	      param inout name "looper" type class_ref 134967 // Looper
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment " Constructor "
	  end

	  operation 83165623 "handleMessage"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "msg" type class_ref 134839 // Message
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment " Handle of the reply message "
	  end
	end

	classrelation 17019063 // mHandler (<unidirectional association>)
	  relation 17019063 --->
	    a role_name "mHandler" private
	      comment " The handler that will receive the result 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17019063 // mHandler (<unidirectional association>)
	    b parent class_ref 7574839 // SyncHandler
	end

	classrelation 17019191 // mMessenger (<unidirectional association>)
	  relation 17019191 --->
	    a role_name "mMessenger" private
	      comment " The messenger used to send the message 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17019191 // mMessenger (<unidirectional association>)
	    b parent class_ref 7214007 // Messenger
	end

	operation 83165367 "SyncMessenger"
	  private explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " private constructor "
	end

	operation 83165751 "obtain"
	  class_operation private return_type class_ref 7574711 // SyncMessenger
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the SyncMessenger
"
	end

	operation 83165879 "recycle"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Recycle this object
"
	end

	operation 83166007 "sendMessageSynchronously"
	  class_operation private return_type class_ref 134839 // Message
	  nparams 2
	    param inout name "dstMessenger" type class_ref 7214007 // Messenger
	    param inout name "msg" type class_ref 134839 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Send a message synchronously.

@param msg to send
@return result message or null if an error occurs
"
	end
      end

      operation 83166135 "replyHalfConnected"
	private explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reply to the src handler that we're half connected.
see: CMD_CHANNEL_HALF_CONNECTED for message contents

@param status to be stored in msg.arg1
"
      end

      operation 83166263 "linkToDeathMonitor"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Link to death monitor for destination messenger. Returns true if successfully binded to
destination messenger; false otherwise.
"
      end

      operation 83166391 "replyDisconnected"
	private explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reply to the src handler that we are disconnected
see: CMD_CHANNEL_DISCONNECTED for message contents

@param status to be stored in msg.arg1
"
      end

      operation 83166903 "log"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "s" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Log the string.

@param s
"
      end
    end

    class 7574583 "AsyncService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A service that receives Intents and IBinder transactions
as messages via an AsyncChannel.
<p>
The Start Intent arrives as CMD_ASYNC_SERVICE_ON_START_INTENT with msg.arg1 = flags,
msg.arg2 = startId, and msg.obj = intent.
<p>
"
      classrelation 17019959 // <generalisation>
	relation 17019959 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17019959 // <generalisation>
	  b parent class_ref 6923447 // Service
      end

      attribute 26493495 "DBG"
	class_attribute const_attribute protected explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26493623 "CMD_ASYNC_SERVICE_ON_START_INTENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.LAST_CALL_TRANSACTION"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The command sent when a onStartCommand is invoked 
"
      end

      attribute 26493751 "CMD_ASYNC_SERVICE_DESTROY"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.LAST_CALL_TRANSACTION + 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The command sent when a onDestroy is invoked 
"
      end

      classrelation 17020215 // mMessenger (<unidirectional association>)
	relation 17020215 --->
	  a role_name "mMessenger" protected
	    comment " Messenger transport 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17020215 // mMessenger (<unidirectional association>)
	  b parent class_ref 7214007 // Messenger
      end

      classrelation 17020343 // mHandler (<unidirectional association>)
	relation 17020343 --->
	  a role_name "mHandler" package
	    comment " Message Handler that will receive messages 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17020343 // mHandler (<unidirectional association>)
	  b parent class_ref 6926391 // Handler
      end

      class 7574967 "AsyncServiceInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17020471 // mHandler (<unidirectional association>)
	  relation 17020471 --->
	    a role_name "mHandler" public
	      comment " Message Handler that will receive messages 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17020471 // mHandler (<unidirectional association>)
	    b parent class_ref 6926391 // Handler
	end

	attribute 26493879 "mRestartFlags"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "The flags returned by onStartCommand on how to restart.
For instance @see android.app.Service#START_STICKY

"
	end
      end

      classrelation 17020599 // mAsyncServiceInfo (<unidirectional association>)
	relation 17020599 --->
	  a role_name "mAsyncServiceInfo" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17020599 // mAsyncServiceInfo (<unidirectional association>)
	  b parent class_ref 7574967 // AsyncServiceInfo
      end

      operation 83167287 "createHandler"
	abstract public return_type class_ref 7574967 // AsyncServiceInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the service's handler returning AsyncServiceInfo.

@return AsyncServiceInfo
"
      end

      operation 83167415 "getHandler"
	public return_type class_ref 6926391 // Handler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the handler
"
      end

      operation 83167543 "onCreate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "onCreate
"
      end

      operation 83167671 "onStartCommand"
	public explicit_return_type "int"
	nparams 3
	  param inout name "intent" type class_ref 6925623 // Intent
	  param in name "flags" explicit_type "int"
	  param in name "startId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Sends the CMD_ASYNC_SERVICE_ON_START_INTENT message.
"
      end

      operation 83167799 "onDestroy"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Called when service is destroyed. After returning the
service is dead and no more processing should be expected
to occur.
"
      end

      operation 83167927 "onBind"
	public return_type class_ref 6927031 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the Messenger's binder.
"
      end
    end

    class 7575095 "BitwiseInputStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An object that provides bitwise incremental read access to a byte array.

This is useful, for example, when accessing a series of fields that
may not be aligned on byte boundaries.

NOTE -- This class is not threadsafe.
"
      attribute 26494007 "mBuf"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The byte array being read from.
"
      end

      attribute 26494135 "mPos"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The current position offset, in bits, from the msb in byte 0.
"
      end

      attribute 26494263 "mEnd"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The last valid bit offset.
"
      end

      class 7575223 "AccessException"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83168055 "AccessException"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "s" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 83168183 "BitwiseInputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "buf" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create object from byte array.

@param buf a byte array containing data
"
      end

      operation 83168311 "available"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of bit still available for reading.
"
      end

      operation 83168439 "read"
	public explicit_return_type "int"
	nparams 1
	  param in name "bits" explicit_type "int"
	nexceptions 1
	  exception class_ref 7575223 // AccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read some data and increment the current position.

The 8-bit limit on access to bitwise streams is intentional to
avoid endianness issues.

@param bits the amount of data to read (gte 0, lte 8)
@return byte of read data (possibly partially filled, from lsb)
"
      end

      operation 83168567 "readByteArray"
	public explicit_return_type "byte"
	nparams 1
	  param in name "bits" explicit_type "int"
	nexceptions 1
	  exception class_ref 7575223 // AccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read data in bulk into a byte array and increment the current position.

@param bits the amount of data to read
@return newly allocated byte array of read data
"
      end

      operation 83168695 "skip"
	public explicit_return_type "void"
	nparams 1
	  param in name "bits" explicit_type "int"
	nexceptions 1
	  exception class_ref 7575223 // AccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increment the current position and ignore contained data.

@param bits the amount by which to increment the position
"
      end
    end

    class 7575351 "BitwiseOutputStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An object that provides bitwise incremental write access to a byte array.

This is useful, for example, when writing a series of fields that
may not be aligned on byte boundaries.

NOTE -- This class is not threadsafe.
"
      attribute 26494391 "mBuf"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The byte array being written to, which will be grown as needed.
"
      end

      attribute 26494519 "mPos"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The current position offset, in bits, from the msb in byte 0.
"
      end

      attribute 26494647 "mEnd"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The last bit offset, given the current buf length.
"
      end

      class 7575479 "AccessException"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83168823 "AccessException"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "s" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 83168951 "BitwiseOutputStream"
	public explicit_return_type ""
	nparams 1
	  param in name "startingLength" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create object from hint at desired size.

@param startingLength initial internal byte array length in bytes
"
      end

      operation 83169079 "toByteArray"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return byte array containing accumulated data, sized to just fit.

@return newly allocated byte array
"
      end

      operation 83169207 "possExpand"
	private explicit_return_type "void"
	nparams 1
	  param in name "bits" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocate a new internal buffer, if needed.

@param bits additional bits to be accommodated
"
      end

      operation 83169335 "write"
	public explicit_return_type "void"
	nparams 2
	  param in name "bits" explicit_type "int"
	  param in name "data" explicit_type "int"
	nexceptions 1
	  exception class_ref 7575479 // AccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write some data and increment the current position.

The 8-bit limit on access to bitwise streams is intentional to
avoid endianness issues.

@param bits the amount of data to write (gte 0, lte 8)
@param data to write, will be masked to expose only bits param from lsb
"
      end

      operation 83169463 "writeByteArray"
	public explicit_return_type "void"
	nparams 2
	  param in name "bits" explicit_type "int"
	  param inout name "arr" explicit_type "byte"
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 7575479 // AccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write data in bulk from a byte array and increment the current position.

@param bits the amount of data to write
@param arr the byte array containing data to be written
"
      end

      operation 83169591 "skip"
	public explicit_return_type "void"
	nparams 1
	  param in name "bits" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increment the current position, implicitly writing zeros.

@param bits the amount by which to increment the position
"
      end
    end

    class 7575607 "CallbackRegistry"
      visibility public 
      nformals 3
      formal name "C" type "" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      formal name "A" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Tracks callbacks for the event. This class supports reentrant modification
of the callbacks during notification without adversely disrupting notifications.
A common pattern for callbacks is to receive a notification and then remove
themselves. This class handles this behavior with constant memory under
most circumstances.

<p>A subclass of {@link CallbackRegistry.NotifierCallback} must be passed to
the constructor to define how notifications should be called. That implementation
does the actual notification on the listener.</p>

<p>This class supports only callbacks with at most two parameters.
Typically, these are the notification originator and a parameter, but these may
be used as required. If more than two parameters are required or primitive types
must be used, <code>A</code> should be some kind of containing structure that
the subclass may reuse between notifications.</p>

@param <C> The callback type.
@param <T> The notification sender type. Typically this is the containing class.
@param <A> Opaque argument used to pass additional data beyond an int.
"
      classrelation 17020983 // <realization>
	relation 17020983 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17020983 // <realization>
	  b parent class_ref 7554999 // Cloneable
      end

      attribute 26494775 "mCallbacks"
	private explicit_type "C"
	init_value " new ArrayList<C>()"
	stereotype "List"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " An ordered collection of listeners waiting to be notified. 
"
      end

      attribute 26494903 "mFirst64Removed"
	private explicit_type "long"
	init_value " 0x0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A bit flag for the first 64 listeners that are removed during notification.
The lowest significant bit corresponds to the 0th index into mCallbacks.
For a small number of callbacks, no additional array of objects needs to
be allocated.

"
      end

      attribute 26495031 "mRemainderRemoved"
	private explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Bit flags for the remaining callbacks that are removed during notification.
When there are more than 64 callbacks and one is marked for removal, a dynamic
array of bits are allocated for the callbacks.

"
      end

      attribute 26495159 "mNotificationLevel"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The reentrancy level of the notification. When we notify a callback, it may cause
further notifications. The reentrancy level must be tracked to let us clean up
the callback state when all notifications have been processed.

"
      end

      class 7575735 "NotifierCallback"
	abstract visibility public 
	nformals 3
	formal name "C" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "A" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83171639 "onNotifyCallback"
	  abstract cpp_inline public explicit_return_type "void"
	  nparams 4
	    param inout name "callback" explicit_type "C"
	    param inout name "sender" explicit_type "T"
	    param in name "arg" explicit_type "int"
	    param inout name "arg2" explicit_type "A"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Used to notify the callback.

@param callback The callback to notify.
@param sender The opaque sender object.
@param arg The opaque notification parameter.
@param arg2 An opaque argument passed in
       {@link CallbackRegistry#notifyCallbacks}
@see CallbackRegistry#CallbackRegistry(CallbackRegistry.NotifierCallback)
"
	end
      end

      classrelation 17021239 // mNotifier (<unidirectional association>)
	relation 17021239 --->
	  a role_name "mNotifier" const_relation private
	    comment " The notification mechanism for notifying an event. 
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<C, T, A> ${name}${value};
"
	    classrelation_ref 17021239 // mNotifier (<unidirectional association>)
	  b parent class_ref 7575735 // NotifierCallback
      end

      operation 83169719 "CallbackRegistry"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "notifier" type class_ref 7575735 // NotifierCallback
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<C, T, A> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an EventRegistry that notifies the event with notifier.
@param notifier The class to use to notify events.
"
      end

      operation 83169847 "notifyCallbacks"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param inout name "sender" explicit_type "T"
	  param in name "arg" explicit_type "int"
	  param inout name "arg2" explicit_type "A"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify all callbacks.

@param sender The originator. This is an opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param arg An opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param arg2 An opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
"
      end

      operation 83169975 "notifyFirst64Locked"
	cpp_inline private explicit_return_type "void"
	nparams 3
	  param inout name "sender" explicit_type "T"
	  param in name "arg" explicit_type "int"
	  param inout name "arg2" explicit_type "A"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify up to the first Long.SIZE callbacks that don't have a bit set in <code>removed</code>.

@param sender The originator. This is an opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param arg An opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param arg2 An opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
"
      end

      operation 83170103 "notifyRecurseLocked"
	cpp_inline private explicit_return_type "void"
	nparams 3
	  param inout name "sender" explicit_type "T"
	  param in name "arg" explicit_type "int"
	  param inout name "arg2" explicit_type "A"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify all callbacks using a recursive algorithm to avoid allocating on the heap.
This part captures the callbacks beyond Long.SIZE that have no bits allocated for
removal before it recurses into {@link #notifyRemainderLocked(Object, int, A, int)}.
<p>
Recursion is used to avoid allocating temporary state on the heap. Each stack has one
long (64 callbacks) worth of information of which has been removed.

@param sender The originator. This is an opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param arg An opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param arg2 An opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
"
      end

      operation 83170231 "notifyRemainderLocked"
	cpp_inline private explicit_return_type "void"
	nparams 4
	  param inout name "sender" explicit_type "T"
	  param in name "arg" explicit_type "int"
	  param inout name "arg2" explicit_type "A"
	  param in name "remainderIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify callbacks that have mRemainderRemoved bits set for remainderIndex. If
remainderIndex is -1, the first 64 will be notified instead.

@param sender The originator. This is an opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param arg An opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param arg2 An opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param remainderIndex The index into mRemainderRemoved that should be notified.
"
      end

      operation 83170359 "notifyCallbacksLocked"
	cpp_inline private explicit_return_type "void"
	nparams 6
	  param inout name "sender" explicit_type "T"
	  param in name "arg" explicit_type "int"
	  param inout name "arg2" explicit_type "A"
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param in name "bits" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, final ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify callbacks from startIndex to endIndex, using bits as the bit status
for whether they have been removed or not. bits should be from mRemainderRemoved or
mFirst64Removed. bits set to 0 indicates that all callbacks from startIndex to
endIndex should be notified.

@param sender The originator. This is an opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param arg An opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param arg2 An opaque parameter passed to
     {@link CallbackRegistry.NotifierCallback#onNotifyCallback(Object, Object, int, A)}
@param startIndex The index into the mCallbacks to start notifying.
@param endIndex One past the last index into mCallbacks to notify.
@param bits A bit field indicating which callbacks have been removed and shouldn't
            be notified.
"
      end

      operation 83170487 "add"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "callback" explicit_type "C"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a callback to be notified. If the callback is already in the list, another won't
be added. This does not affect current notifications.
@param callback The callback to add.
"
      end

      operation 83170615 "isRemovedLocked"
	cpp_inline private explicit_return_type "boolean"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the callback at index has been marked for removal.

@param index The index into mCallbacks to check.
@return true if the callback at index has been marked for removal.
"
      end

      operation 83170743 "removeRemovedCallbacks"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "startIndex" explicit_type "int"
	  param in name "removed" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes callbacks from startIndex to startIndex + Long.SIZE, based
on the bits set in removed.
@param startIndex The index into the mCallbacks to start removing callbacks.
@param removed The bits indicating removal, where each bit is set for one callback
               to be removed.
"
      end

      operation 83170871 "remove"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "callback" explicit_type "C"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a callback. This callback won't be notified after this call completes.
@param callback The callback to remove.
"
      end

      operation 83170999 "setRemovalBitLocked"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83171127 "copyListeners"
	cpp_inline public explicit_return_type "ArrayList<C>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a copy of the registered callbacks and returns it.

@return a copy of the registered callbacks.
"
      end

      operation 83171255 "isEmpty"
	cpp_inline public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there are no registered callbacks or false otherwise.

@return true if there are no registered callbacks or false otherwise.
"
      end

      operation 83171383 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all callbacks from the list.
"
      end

      operation 83171511 "clone"
	cpp_inline public return_type class_ref 7575607 // CallbackRegistry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<C, T, A> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7575863 "CharSequences"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@link CharSequence} utility methods.
"
      operation 83171767 "forAsciiBytes"
	class_operation public explicit_return_type "CharSequence"
	nparams 1
	  param in name "bytes" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapts {@link CharSequence} to an array of ASCII (7-bits per character)
bytes.

@param bytes ASCII bytes
"
      end

      operation 83171895 "forAsciiBytes"
	class_operation public explicit_return_type "CharSequence"
	nparams 3
	  param in name "bytes" explicit_type "byte"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}[] ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapts {@link CharSequence} to an array of ASCII (7-bits per character)
bytes.

@param bytes ASCII bytes
@param start index, inclusive
@param end index, exclusive

@throws IndexOutOfBoundsException if start or end are negative, if end
 is greater than length(), or if start is greater than end
"
      end

      operation 83172023 "validate"
	class_operation package explicit_return_type "void"
	nparams 3
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83172151 "equals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "CharSequence"
	  param inout name "b" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two character sequences for equality.
"
      end

      operation 83172279 "compareToIgnoreCase"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "me" explicit_type "CharSequence"
	  param inout name "another" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two character sequences with API like {@link Comparable#compareTo}.

@param me The CharSequence that receives the compareTo call.
@param another The other CharSequence.
@return See {@link Comparable#compareTo}.
"
      end
    end

    class 7575991 "DumpUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper functions for dumping the state of system services.
"
      operation 83172407 "DumpUtils"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83172535 "dumpAsync"
	class_operation public explicit_return_type "void"
	nparams 5
	  param inout name "handler" type class_ref 6926391 // Handler
	  param in name "dump" type class_ref 7576119 // Dump
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "prefix" explicit_type "String"
	  param in name "timeout" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, ${t2} ${p2}, final ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for dumping state owned by a handler thread.

Because the caller might be holding an important lock that the handler is
trying to acquire, we use a short timeout to avoid deadlocks.  The process
is inelegant but this function is only used for debugging purposes.
"
      end

      class 7576119 "Dump"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83172663 "dump"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "pw" explicit_type "PrintWriter"
	    param inout name "prefix" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 7576247 "FastMath"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Fast and loose math routines.
"
      operation 83172791 "round"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fast round from float to int. This is faster than Math.round()
thought it may return slightly different results. It does not try to
handle (in any meaningful way) NaN or infinities.
"
      end
    end

    class 7576375 "FastPrintWriter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 17021367 // <generalisation>
	relation 17021367 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17021367 // <generalisation>
	  b parent class_ref 7576503 // PrintWriter
      end

      class 7576631 "DummyWriter"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17021495 // <generalisation>
	  relation 17021495 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17021495 // <generalisation>
	    b parent class_ref 7576759 // Writer
	end

	operation 83172919 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83173047 "flush"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83173175 "write"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "buf" explicit_type "char"
	  multiplicity "[]"
	    param in name "offset" explicit_type "int"
	    param in name "count" explicit_type "int"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      attribute 26495287 "mBufferLen"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26495415 "mText"
	const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26495543 "mPos"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26495671 "mOutputStream"
	const_attribute private explicit_type "OutputStream"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26495799 "mAutoFlush"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26495927 "mWriter"
	const_attribute private explicit_type "Writer"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17021751 // mPrinter (<unidirectional association>)
	relation 17021751 --->
	  a role_name "mPrinter" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17021751 // mPrinter (<unidirectional association>)
	  b parent class_ref 6962999 // Printer
      end

      attribute 26496055 "mCharset"
	private explicit_type "CharsetEncoder"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26496183 "mBytes"
	const_attribute private explicit_type "ByteBuffer"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26496311 "mIoError"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83173303 "FastPrintWriter"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" explicit_type "OutputStream"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code PrintWriter} with {@code out} as its target
stream. By default, the new print writer does not automatically flush its
contents to the target stream when a newline is encountered.

@param out
           the target output stream.
@throws NullPointerException
            if {@code out} is {@code null}.
"
      end

      operation 83173431 "FastPrintWriter"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" explicit_type "OutputStream"
	  param inout name "autoFlush" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code PrintWriter} with {@code out} as its target
stream. The parameter {@code autoFlush} determines if the print writer
automatically flushes its contents to the target stream when a newline is
encountered.

@param out
           the target output stream.
@param autoFlush
           indicates whether contents are flushed upon encountering a
           newline sequence.
@throws NullPointerException
            if {@code out} is {@code null}.
"
      end

      operation 83173559 "FastPrintWriter"
	public explicit_return_type ""
	nparams 3
	  param inout name "out" explicit_type "OutputStream"
	  param inout name "autoFlush" explicit_type "boolean"
	  param in name "bufferLen" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code PrintWriter} with {@code out} as its target
stream and a custom buffer size. The parameter {@code autoFlush} determines
if the print writer automatically flushes its contents to the target stream
when a newline is encountered.

@param out
           the target output stream.
@param autoFlush
           indicates whether contents are flushed upon encountering a
           newline sequence.
@param bufferLen
           specifies the size of the FastPrintWriter's internal buffer; the
           default is 8192.
@throws NullPointerException
            if {@code out} is {@code null}.
"
      end

      operation 83173687 "FastPrintWriter"
	public explicit_return_type ""
	nparams 1
	  param inout name "wr" explicit_type "Writer"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code PrintWriter} with {@code wr} as its target
writer. By default, the new print writer does not automatically flush its
contents to the target writer when a newline is encountered.

<p>NOTE: Unlike PrintWriter, this version will still do buffering inside of
FastPrintWriter before sending data to the Writer.  This means you must call
flush() before retrieving any data from the Writer.</p>

@param wr
           the target writer.
@throws NullPointerException
            if {@code wr} is {@code null}.
"
      end

      operation 83173815 "FastPrintWriter"
	public explicit_return_type ""
	nparams 2
	  param inout name "wr" explicit_type "Writer"
	  param inout name "autoFlush" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code PrintWriter} with {@code wr} as its target
writer. The parameter {@code autoFlush} determines if the print writer
automatically flushes its contents to the target writer when a newline is
encountered.

@param wr
           the target writer.
@param autoFlush
           indicates whether to flush contents upon encountering a
           newline sequence.
@throws NullPointerException
            if {@code out} is {@code null}.
"
      end

      operation 83173943 "FastPrintWriter"
	public explicit_return_type ""
	nparams 3
	  param inout name "wr" explicit_type "Writer"
	  param inout name "autoFlush" explicit_type "boolean"
	  param in name "bufferLen" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code PrintWriter} with {@code wr} as its target
writer and a custom buffer size. The parameter {@code autoFlush} determines
if the print writer automatically flushes its contents to the target writer
when a newline is encountered.

@param wr
           the target writer.
@param autoFlush
           indicates whether to flush contents upon encountering a
           newline sequence.
@param bufferLen
           specifies the size of the FastPrintWriter's internal buffer; the
           default is 8192.
@throws NullPointerException
            if {@code wr} is {@code null}.
"
      end

      operation 83174071 "FastPrintWriter"
	public explicit_return_type ""
	nparams 1
	  param inout name "pr" type class_ref 6962999 // Printer
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code PrintWriter} with {@code pr} as its target
printer and the default buffer size.  Because a {@link Printer} is line-base,
autoflush is always enabled.

@param pr
           the target writer.
@throws NullPointerException
            if {@code pr} is {@code null}.
"
      end

      operation 83174199 "FastPrintWriter"
	public explicit_return_type ""
	nparams 2
	  param inout name "pr" type class_ref 6962999 // Printer
	  param in name "bufferLen" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code PrintWriter} with {@code pr} as its target
printer and a custom buffer size.  Because a {@link Printer} is line-base,
autoflush is always enabled.

@param pr
           the target writer.
@param bufferLen
           specifies the size of the FastPrintWriter's internal buffer; the
           default is 512.
@throws NullPointerException
            if {@code pr} is {@code null}.
"
      end

      operation 83174327 "initEncoder"
	private explicit_return_type "void"
	nparams 1
	  param inout name "csn" explicit_type "String"
	nexceptions 1
	  explicit_exception "UnsupportedEncodingException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83174455 "checkError"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flushes this writer and returns the value of the error flag.

@return {@code true} if either an {@code IOException} has been thrown
        previously or if {@code setError()} has been called;
        {@code false} otherwise.
@see #setError()
"
      end

      operation 83174583 "clearError"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the error state of the stream to false.
@since 1.6
"
      end

      operation 83174711 "setError"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the error flag of this writer to true.
"
      end

      operation 83174839 "initDefaultEncoder"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83174967 "appendLocked"
	private explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "char"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83175095 "appendLocked"
	private explicit_return_type "void"
	nparams 3
	  param inout name "str" explicit_type "String"
	  param in name "i" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83175223 "appendLocked"
	private explicit_return_type "void"
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "i" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83175351 "flushBytesLocked"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83175479 "flushLocked"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83175607 "flush"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Ensures that all pending data is sent out to the target. It also
flushes the target. If an I/O error occurs, this writer's error
state is set to {@code true}.
"
      end

      operation 83175735 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83175863 "print"
	public explicit_return_type "void"
	nparams 1
	  param inout name "charArray" explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the string representation of the specified character array
to the target.

@param charArray
           the character array to print to the target.
@see #print(String)
"
      end

      operation 83175991 "print"
	public explicit_return_type "void"
	nparams 1
	  param in name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the string representation of the specified character to the
target.

@param ch
           the character to print to the target.
@see #print(String)
"
      end

      operation 83176119 "print"
	public explicit_return_type "void"
	nparams 1
	  param inout name "str" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a string to the target. The string is converted to an array of
bytes using the encoding chosen during the construction of this writer.
The bytes are then written to the target with {@code write(int)}.
<p>
If an I/O error occurs, this writer's error flag is set to {@code true}.

@param str
           the string to print to the target.
@see #write(int)
"
      end

      operation 83176247 "print"
	public explicit_return_type "void"
	nparams 1
	  param in name "inum" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83176375 "print"
	public explicit_return_type "void"
	nparams 1
	  param in name "lnum" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83176503 "println"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints a newline. Flushes this writer if the autoFlush flag is set to {@code true}.
"
      end

      operation 83176631 "println"
	public explicit_return_type "void"
	nparams 1
	  param in name "inum" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83176759 "println"
	public explicit_return_type "void"
	nparams 1
	  param in name "lnum" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83176887 "println"
	public explicit_return_type "void"
	nparams 1
	  param inout name "chars" explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the string representation of the character array {@code chars} followed by a newline.
Flushes this writer if the autoFlush flag is set to {@code true}.
"
      end

      operation 83177015 "println"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints the string representation of the char {@code c} followed by a newline.
Flushes this writer if the autoFlush flag is set to {@code true}.
"
      end

      operation 83177143 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Writes {@code count} characters from {@code buffer} starting at {@code
offset} to the target.
<p>
This writer's error flag is set to {@code true} if this writer is closed
or an I/O error occurs.

@param buf
           the buffer to write to the target.
@param offset
           the index of the first character in {@code buffer} to write.
@param count
           the number of characters in {@code buffer} to write.
@throws IndexOutOfBoundsException
            if {@code offset < 0} or {@code count < 0}, or if {@code
            offset + count} is greater than the length of {@code buf}.
"
      end

      operation 83177271 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "oneChar" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Writes one character to the target. Only the two least significant bytes
of the integer {@code oneChar} are written.
<p>
This writer's error flag is set to {@code true} if this writer is closed
or an I/O error occurs.

@param oneChar
           the character to write to the target.
"
      end

      operation 83177399 "write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "str" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Writes the characters from the specified string to the target.

@param str
           the non-null string containing the characters to write.
"
      end

      operation 83177527 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "str" explicit_type "String"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Writes {@code count} characters from {@code str} starting at {@code
offset} to the target.

@param str
           the non-null string containing the characters to write.
@param offset
           the index of the first character in {@code str} to write.
@param count
           the number of characters from {@code str} to write.
@throws IndexOutOfBoundsException
            if {@code offset < 0} or {@code count < 0}, or if {@code
            offset + count} is greater than the length of {@code str}.
"
      end

      operation 83177655 "append"
	public explicit_return_type "PrintWriter"
	nparams 3
	  param inout name "csq" explicit_type "CharSequence"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Appends a subsequence of the character sequence {@code csq} to the
target. This method works the same way as {@code
PrintWriter.print(csq.subsequence(start, end).toString())}. If {@code
csq} is {@code null}, then the specified subsequence of the string \"null\"
will be written to the target.

@param csq
           the character sequence appended to the target.
@param start
           the index of the first char in the character sequence appended
           to the target.
@param end
           the index of the character following the last character of the
           subsequence appended to the target.
@return this writer.
@throws StringIndexOutOfBoundsException
            if {@code start > end}, {@code start < 0}, {@code end < 0} or
            either {@code start} or {@code end} are greater or equal than
            the length of {@code csq}.
"
      end
    end

    class 7576887 "FastXmlSerializer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is a quick and dirty implementation of XmlSerializer that isn't horribly
painfully slow like the normal one.  It only does what is needed for the
specific XML files being written with it.
"
      classrelation 17021879 // <realization>
	relation 17021879 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17021879 // <realization>
	  b parent class_ref 7577015 // XmlSerializer
      end

      attribute 26496439 "BUFFER_LEN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8192"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26496567 "mText"
	const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " new char[BUFFER_LEN]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26496695 "mPos"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26496823 "mWriter"
	private explicit_type "Writer"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26496951 "mOutputStream"
	private explicit_type "OutputStream"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26497079 "mCharset"
	private explicit_type "CharsetEncoder"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26497207 "mBytes"
	private explicit_type "ByteBuffer"
	init_value " ByteBuffer.allocate(BUFFER_LEN)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26497335 "mIndent"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26497463 "mInTag"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26497591 "mNesting"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26497719 "mLineStart"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83177783 "append"
	private explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "char"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83177911 "append"
	private explicit_return_type "void"
	nparams 3
	  param inout name "str" explicit_type "String"
	  param in name "i" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83178039 "append"
	private explicit_return_type "void"
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "i" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83178167 "append"
	private explicit_return_type "void"
	nparams 1
	  param inout name "str" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83178295 "appendIndent"
	private explicit_return_type "void"
	nparams 1
	  param in name "indent" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83178423 "escapeAndAppendString"
	private explicit_return_type "void"
	nparams 1
	  param in name "string" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83178551 "escapeAndAppendString"
	private explicit_return_type "void"
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83178679 "attribute"
	public explicit_return_type "XmlSerializer"
	nparams 3
	  param inout name "namespace" explicit_type "String"
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83178807 "cdsect"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83178935 "comment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83179063 "docdecl"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83179191 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83179319 "endTag"
	public explicit_return_type "XmlSerializer"
	nparams 2
	  param inout name "namespace" explicit_type "String"
	  param inout name "name" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83179447 "entityRef"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83179575 "flushBytes"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83179703 "flush"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83179831 "getDepth"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83179959 "getFeature"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83180087 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83180215 "getNamespace"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83180343 "getPrefix"
	public explicit_return_type "String"
	nparams 2
	  param inout name "namespace" explicit_type "String"
	  param inout name "generatePrefix" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IllegalArgumentException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83180471 "getProperty"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83180599 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83180727 "processingInstruction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83180855 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "state" explicit_type "boolean"
	nexceptions 2
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83180983 "setOutput"
	public explicit_return_type "void"
	nparams 2
	  param inout name "os" explicit_type "OutputStream"
	  param inout name "encoding" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83181111 "setOutput"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" explicit_type "Writer"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83181239 "setPrefix"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" explicit_type "String"
	  param inout name "namespace" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83181367 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	nexceptions 2
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83181495 "startDocument"
	public explicit_return_type "void"
	nparams 2
	  param inout name "encoding" explicit_type "String"
	  param inout name "standalone" explicit_type "Boolean"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83181623 "startTag"
	public explicit_return_type "XmlSerializer"
	nparams 2
	  param inout name "namespace" explicit_type "String"
	  param inout name "name" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83181751 "text"
	public explicit_return_type "XmlSerializer"
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "start" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83181879 "text"
	public explicit_return_type "XmlSerializer"
	nparams 1
	  param inout name "text" explicit_type "String"
	nexceptions 3
	  explicit_exception "IOException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7577143 "FileRotator"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility that rotates files over time, similar to {@code logrotate}. There is
a single \"active\" file, which is periodically rotated into historical files,
and eventually deleted entirely. Files are stored under a specific directory
with a well-known prefix.
<p>
Instead of manipulating files directly, users implement interfaces that
perform operations on {@link InputStream} and {@link OutputStream}. This
enables atomic rewriting of file contents in
{@link #rewriteActive(Rewriter, long)}.
<p>
Users must periodically call {@link #maybeRotate(long)} to perform actual
rotation. Not inherently thread safe.
"
      attribute 26497847 "LOGD"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26497975 "mBasePath"
	const_attribute private explicit_type "File"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26498103 "mRotateAgeMillis"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26498231 "mDeleteAgeMillis"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 7577271 "Reader"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83182007 "read"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "in" explicit_type "InputStream"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 7577399 "Writer"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83182135 "write"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "out" explicit_type "OutputStream"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 7577527 "Rewriter"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17022775 // <generalisation>
	  relation 17022775 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17022775 // <generalisation>
	    b parent class_ref 7577271 // Reader
	end

	classrelation 17022903 // <generalisation>
	  relation 17022903 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17022903 // <generalisation>
	    b parent class_ref 7577399 // Writer
	end

	operation 83182263 "reset"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83182391 "shouldWrite"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 83182519 "FileRotator"
	public explicit_return_type ""
	nparams 4
	  param inout name "basePath" explicit_type "File"
	  param inout name "prefix" explicit_type "String"
	  param in name "rotateAgeMillis" explicit_type "long"
	  param in name "deleteAgeMillis" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a file rotator.

@param basePath Directory under which all files will be placed.
@param prefix Filename prefix used to identify this rotator.
@param rotateAgeMillis Age in milliseconds beyond which an active file
           may be rotated into a historical file.
@param deleteAgeMillis Age in milliseconds beyond which a rotated file
           may be deleted.
"
      end

      operation 83182647 "deleteAll"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delete all files managed by this rotator.
"
      end

      operation 83182775 "dumpAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "os" explicit_type "OutputStream"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dump all files managed by this rotator for debugging purposes.
"
      end

      operation 83182903 "rewriteActive"
	public explicit_return_type "void"
	nparams 2
	  param inout name "rewriter" type class_ref 7577527 // Rewriter
	  param in name "currentTimeMillis" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process currently active file, first reading any existing data, then
writing modified data. Maintains a backup during write, which is restored
if the write fails.
"
      end

      operation 83183031 "combineActive"
	public explicit_return_type "void"
	nparams 3
	  param in name "reader" type class_ref 7577271 // Reader
	  param in name "writer" type class_ref 7577399 // Writer
	  param in name "currentTimeMillis" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
      end

      operation 83183159 "rewriteAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rewriter" type class_ref 7577527 // Rewriter
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process all files managed by this rotator, usually to rewrite historical
data. Each file is processed atomically.
"
      end

      operation 83183287 "rewriteSingle"
	private explicit_return_type "void"
	nparams 2
	  param inout name "rewriter" type class_ref 7577527 // Rewriter
	  param inout name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process a single file atomically, first reading any existing data, then
writing modified data. Maintains a backup during write, which is restored
if the write fails.
"
      end

      operation 83183415 "readMatching"
	public explicit_return_type "void"
	nparams 3
	  param inout name "reader" type class_ref 7577271 // Reader
	  param in name "matchStartMillis" explicit_type "long"
	  param in name "matchEndMillis" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read any rotated data that overlap the requested time range.
"
      end

      operation 83183543 "getActiveName"
	private explicit_return_type "String"
	nparams 1
	  param in name "currentTimeMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the currently active file, which may not exist yet.
"
      end

      operation 83183671 "maybeRotate"
	public explicit_return_type "void"
	nparams 1
	  param in name "currentTimeMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Examine all files managed by this rotator, renaming or deleting if their
age matches the configured thresholds.
"
      end

      operation 83183799 "readFile"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param inout name "reader" type class_ref 7577271 // Reader
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83183927 "writeFile"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param inout name "writer" type class_ref 7577399 // Writer
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83184055 "rethrowAsIoException"
	class_operation private explicit_return_type "IOException"
	nparams 1
	  param inout name "t" explicit_type "Throwable"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7577655 "FileInfo"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 26498359 "startMillis"
	  public explicit_type "long"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26498487 "endMillis"
	  public explicit_type "long"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 83184183 "FileInfo"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "prefix" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83184311 "parse"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "name" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Attempt parsing the given filename.

@return Whether parsing was successful.
"
	end

	operation 83184439 "build"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Build current state into filename.
"
	end

	operation 83184567 "isActive"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Test if current file is active (no end timestamp).
"
	end
      end
    end

    class 7577783 "GrowingArrayUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A helper class that aims to provide comparable growth performance to ArrayList, but on primitive
arrays. Common array operations are implemented for efficient use in dynamic containers.

All methods in this class assume that the length of an array is equivalent to its capacity and
NOT the number of elements in the array. The current size of the array is always passed in as a
parameter.

@hide
"
      operation 83184695 "append"
	class_operation public explicit_return_type "T"
	nparams 3
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param in name "currentSize" explicit_type "int"
	  param inout name "element" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends an element to the end of the array, growing the array if there is no more room.
@param array The array to which to append the element. This must NOT be null.
@param currentSize The number of elements in the array. Must be less than or equal to
                   array.length.
@param element The element to append.
@return the array to which the element was appended. This may be different than the given
        array.
"
      end

      operation 83184823 "append"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "currentSize" explicit_type "int"
	  param in name "element" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Primitive int version of {@link #append(Object[], int, Object)}.
"
      end

      operation 83184951 "append"
	class_operation public explicit_return_type "long"
	nparams 3
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param in name "currentSize" explicit_type "int"
	  param in name "element" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Primitive long version of {@link #append(Object[], int, Object)}.
"
      end

      operation 83185079 "append"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "array" explicit_type "boolean"
	multiplicity "[]"
	  param in name "currentSize" explicit_type "int"
	  param inout name "element" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Primitive boolean version of {@link #append(Object[], int, Object)}.
"
      end

      operation 83185207 "append"
	class_operation public explicit_return_type "float"
	nparams 3
	  param inout name "array" explicit_type "float"
	multiplicity "[]"
	  param in name "currentSize" explicit_type "int"
	  param in name "element" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Primitive float version of {@link #append(Object[], int, Object)}.
"
      end

      operation 83185335 "insert"
	class_operation public explicit_return_type "T"
	nparams 4
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param in name "currentSize" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts an element into the array at the specified index, growing the array if there is no
more room.

@param array The array to which to append the element. Must NOT be null.
@param currentSize The number of elements in the array. Must be less than or equal to
                   array.length.
@param element The element to insert.
@return the array to which the element was appended. This may be different than the given
        array.
"
      end

      operation 83185463 "insert"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "currentSize" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param in name "element" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Primitive int version of {@link #insert(Object[], int, int, Object)}.
"
      end

      operation 83185591 "insert"
	class_operation public explicit_return_type "long"
	nparams 4
	  param inout name "array" explicit_type "long"
	multiplicity "[]"
	  param in name "currentSize" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param in name "element" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Primitive long version of {@link #insert(Object[], int, int, Object)}.
"
      end

      operation 83185719 "insert"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "array" explicit_type "boolean"
	multiplicity "[]"
	  param in name "currentSize" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param inout name "element" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Primitive boolean version of {@link #insert(Object[], int, int, Object)}.
"
      end

      operation 83185847 "growSize"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "currentSize" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given the current size of an array, returns an ideal size to which the array should grow.
This is typically double the given size, but should not be relied upon to do so in the
future.
"
      end

      operation 83185975 "GrowingArrayUtils"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Uninstantiable"
      end
    end

    class 7577911 "HexDump"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 26498615 "HEX_DIGITS"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26498743 "HEX_LOWER_CASE_DIGITS"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83186103 "dumpHexString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83186231 "dumpHexString"
	class_operation public explicit_return_type "String"
	nparams 3
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83186359 "toHexString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "b" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83186487 "toHexString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83186615 "toHexString"
	class_operation public explicit_return_type "String"
	nparams 2
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	  param inout name "upperCase" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83186743 "toHexString"
	class_operation public explicit_return_type "String"
	nparams 3
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83186871 "toHexString"
	class_operation public explicit_return_type "String"
	nparams 4
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "upperCase" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83186999 "toHexString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83187127 "toByteArray"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "b" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83187255 "toByteArray"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83187383 "toByte"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83187511 "hexStringToByteArray"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param inout name "hexString" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83187639 "appendByteAsHex"
	class_operation public explicit_return_type "StringBuilder"
	nparams 3
	  param inout name "sb" explicit_type "StringBuilder"
	  param in name "b" explicit_type "byte"
	  param inout name "upperCase" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7578039 "ImageUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility class for image analysis and processing.

@hide
"
      attribute 26498871 "TOLERANCE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Amount (max is 255) that two channels can differ before the color is no longer \"gray\".
"
      end

      attribute 26498999 "ALPHA_TOLERANCE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 50"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Alpha amount for which values below are considered transparent.
"
      end

      attribute 26499127 "COMPACT_BITMAP_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 64"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Size of the smaller bitmap we're actually going to scan.
 pixels"
      end

      attribute 26499255 "mTempBuffer"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17023159 // mTempCompactBitmap (<unidirectional association>)
	relation 17023159 --->
	  a role_name "mTempCompactBitmap" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17023159 // mTempCompactBitmap (<unidirectional association>)
	  b parent class_ref 5824951 // Bitmap
      end

      classrelation 17023287 // mTempCompactBitmapCanvas (<unidirectional association>)
	relation 17023287 --->
	  a role_name "mTempCompactBitmapCanvas" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17023287 // mTempCompactBitmapCanvas (<unidirectional association>)
	  b parent class_ref 165175 // Canvas
      end

      classrelation 17023415 // mTempCompactBitmapPaint (<unidirectional association>)
	relation 17023415 --->
	  a role_name "mTempCompactBitmapPaint" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17023415 // mTempCompactBitmapPaint (<unidirectional association>)
	  b parent class_ref 5817143 // Paint
      end

      classrelation 17023543 // mTempMatrix (<unidirectional association>)
	relation 17023543 --->
	  a role_name "mTempMatrix" init_value " new Matrix()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17023543 // mTempMatrix (<unidirectional association>)
	  b parent class_ref 5825079 // Matrix
      end

      operation 83187767 "isGrayscale"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "bitmap" type class_ref 5824951 // Bitmap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether a bitmap is grayscale. Grayscale here means \"very close to a perfect
gray\".

Instead of scanning every pixel in the bitmap, we first resize the bitmap to no more than
COMPACT_BITMAP_SIZE^2 pixels using filtering. The hope is that any non-gray color elements
will survive the squeezing process, contaminating the result with color.
"
      end

      operation 83187895 "ensureBufferSize"
	private explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes sure that {@code mTempBuffer} has at least length {@code size}.
"
      end

      operation 83188023 "isGrayscale"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "color" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Classifies a color as grayscale or not. Grayscale here means \"very close to a perfect
gray\"; if all three channels are approximately equal, this will return true.

Note that really transparent colors are always grayscale.
"
      end

      operation 83188151 "buildScaledBitmap"
	class_operation public return_type class_ref 5824951 // Bitmap
	nparams 3
	  param inout name "drawable" type class_ref 5787831 // Drawable
	  param in name "maxWidth" explicit_type "int"
	  param in name "maxHeight" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a drawable to a bitmap, scaled to fit within maxWidth and maxHeight.
"
      end
    end

    class 7578167 "IndentingPrintWriter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Lightweight wrapper around {@link PrintWriter} that automatically indents
newlines based on internal state. It also automatically wraps long lines
based on given line length.
<p>
Delays writing indent until first actual write on a newline, enabling indent
modification after newline.
"
      classrelation 17023671 // <generalisation>
	relation 17023671 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17023671 // <generalisation>
	  b parent class_ref 7576503 // PrintWriter
      end

      attribute 26499383 "mWrapLength"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26499511 "mIndentBuilder"
	private explicit_type "StringBuilder"
	init_value " new StringBuilder()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Mutable version of current indent 
"
      end

      attribute 26499639 "mCurrentIndent"
	private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Cache of current {@link #mIndentBuilder} value 
"
      end

      attribute 26499767 "mCurrentLength"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Length of current line being built, excluding any indent 
"
      end

      attribute 26499895 "mEmptyLine"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Flag indicating if we're currently sitting on an empty line, and that
next write should be prefixed with the current indent.

"
      end

      attribute 26500023 "mSingleChar"
	private explicit_type "char"
	multiplicity "[]"
	init_value " new char[1]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83188279 "IndentingPrintWriter"
	public explicit_return_type ""
	nparams 2
	  param inout name "writer" explicit_type "Writer"
	  param inout name "singleIndent" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83188407 "IndentingPrintWriter"
	public explicit_return_type ""
	nparams 3
	  param inout name "writer" explicit_type "Writer"
	  param inout name "singleIndent" explicit_type "String"
	  param in name "wrapLength" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83188535 "increaseIndent"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83188663 "decreaseIndent"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83188791 "printPair"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83188919 "printPair"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83189047 "printHexPair"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" explicit_type "String"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83189175 "println"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83189303 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83189431 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "s" explicit_type "String"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83189559 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83189687 "maybeWriteIndent"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7578295 "IState"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@hide}

The interface for implementing states in a {@link StateMachine}
"
      attribute 26500151 "HANDLED"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Returned by processMessage to indicate the the message was processed.

"
      end

      attribute 26500279 "NOT_HANDLED"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Returned by processMessage to indicate the the message was NOT processed.

"
      end

      operation 83189815 "enter"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a state is entered.
"
      end

      operation 83189943 "exit"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a state is exited.
"
      end

      operation 83190071 "processMessage"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a message is to be processed by the
state machine.

This routine is never reentered thus no synchronization
is needed as only one processMessage method will ever be
executing within a state machine at any given time. This
does mean that processing by this routine must be completed
as expeditiously as possible as no subsequent messages will
be processed until this routine returns.

@param msg to process
@return HANDLED if processing has completed and NOT_HANDLED
        if the message wasn't processed.
"
      end

      operation 83190199 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Name of State for debugging purposes.

@return name of state.
"
      end
    end

    class 7578423 "LineBreakBufferedWriter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A writer that breaks up its output into chunks before writing to its out writer,
and which is linebreak aware, i.e., chunks will created along line breaks, if
possible.

Note: this class is not thread-safe.
"
      classrelation 17023927 // <generalisation>
	relation 17023927 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17023927 // <generalisation>
	  b parent class_ref 7576503 // PrintWriter
      end

      attribute 26500791 "buffer"
	private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "A buffer to collect data until the buffer size is reached.

Note: we manage a char[] ourselves to avoid an allocation when printing to the
      out writer. Otherwise a StringBuilder would have been simpler to use.

"
      end

      attribute 26500919 "bufferIndex"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The index of the first free element in the buffer.

"
      end

      attribute 26501047 "bufferSize"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "The chunk size (=maximum buffer size) to use for this writer.

"
      end

      attribute 26501175 "lastNewline"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Index of the last newline character discovered in the buffer. The writer will try
to split there.

"
      end

      operation 83190967 "LineBreakBufferedWriter"
	public explicit_return_type ""
	nparams 2
	  param inout name "out" explicit_type "Writer"
	  param in name "bufferSize" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new linebreak-aware buffered writer with the given output and buffer
size. The initial capacity will be a default value.
@param out The writer to write to.
@param bufferSize The maximum buffer size.
"
      end

      operation 83191095 "LineBreakBufferedWriter"
	public explicit_return_type ""
	nparams 3
	  param inout name "out" explicit_type "Writer"
	  param in name "bufferSize" explicit_type "int"
	  param in name "initialCapacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new linebreak-aware buffered writer with the given output, buffer
size and initial capacity.
@param out The writer to write to.
@param bufferSize The maximum buffer size.
@param initialCapacity The initial capacity of the internal buffer.
"
      end

      operation 83191223 "flush"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Flush the current buffer. This will ignore line breaks.
"
      end

      operation 83191351 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83191479 "println"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83191607 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83191735 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "s" explicit_type "String"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83191863 "appendToBuffer"
	private explicit_return_type "void"
	nparams 3
	  param inout name "buf" explicit_type "char"
	multiplicity "[]"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append the characters to the buffer. This will potentially resize the buffer,
and move the index along.
@param buf The char[] containing the data.
@param off The start index to copy from.
@param len The number of characters to copy.
"
      end

      operation 83191991 "appendToBuffer"
	private explicit_return_type "void"
	nparams 3
	  param inout name "s" explicit_type "String"
	  param in name "off" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append the characters from the given string to the buffer. This will potentially
resize the buffer, and move the index along.
@param s The string supplying the characters.
@param off The start index to copy from.
@param len The number of characters to copy.
"
      end

      operation 83192119 "ensureCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resize the buffer. We use the usual double-the-size plus constant scheme for
amortized O(1) insert. Note: we expect small buffers, so this won't check for
overflow.
@param capacity The size to be ensured.
"
      end

      operation 83192247 "removeFromBuffer"
	private explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the characters up to (and excluding) index i from the buffer. This will
not resize the buffer, but will update bufferIndex.
@param i The number of characters to remove from the front.
"
      end

      operation 83192375 "writeBuffer"
	private explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method, write the given part of the buffer, [start,length), to the output.
@param length The number of characters to flush.
"
      end
    end

    class 7578551 "LocalLog"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper class for logging serious issues, which also keeps a small
snapshot of the logged events that can be printed later, such as part
of a system service's dumpsys output.
@hide
"
      attribute 26501303 "mMaxLines"
	const_attribute private explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83192503 "LocalLog"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83192631 "w"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83192759 "dump"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "header" explicit_type "String"
	  param inout name "prefix" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7578679 "MemInfoReader"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 26501431 "mInfos"
	const_attribute package explicit_type "long"
	multiplicity "[]"
	init_value " new long[Debug.MEMINFO_COUNT]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83192887 "readMemInfo"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83193015 "getTotalSize"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Total amount of RAM available to the kernel.
"
      end

      operation 83193143 "getFreeSize"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Amount of RAM that is not being used for anything.
"
      end

      operation 83193271 "getCachedSize"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Amount of RAM that the kernel is being used for caches, not counting caches
that are mapped in to processes.
"
      end

      operation 83193399 "getKernelUsedSize"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Amount of RAM that is in use by the kernel for actual allocations.
"
      end

      operation 83193527 "getTotalSizeKb"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Total amount of RAM available to the kernel.
"
      end

      operation 83193655 "getFreeSizeKb"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Amount of RAM that is not being used for anything.
"
      end

      operation 83193783 "getCachedSizeKb"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Amount of RAM that the kernel is being used for caches, not counting caches
that are mapped in to processes.
"
      end

      operation 83193911 "getKernelUsedSizeKb"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Amount of RAM that is in use by the kernel for actual allocations.
"
      end

      operation 83194039 "getSwapTotalSizeKb"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83194167 "getSwapFreeSizeKb"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83194295 "getZramTotalSizeKb"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83194423 "getRawInfo"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7578807 "MessageUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Static utility class for dealing with {@link Message} objects.
"
      attribute 26501559 "DBG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      class 7578935 "DuplicateConstantError"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17024567 // <generalisation>
	  relation 17024567 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17024567 // <generalisation>
	    b parent class_ref 7579063 // Error
	end

	operation 83194551 "DuplicateConstantError"
	  private explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83194679 "DuplicateConstantError"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "name1" explicit_type "String"
	    param inout name "name2" explicit_type "String"
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 83194807 "findMessageNames"
	class_operation public return_type class_ref 6929975 // SparseArray
	nparams 2
	  param inout name "classes" explicit_type "Class"
	multiplicity "[]"
	  param inout name "prefixes" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the names of integer constants. Searches the specified {@code classes}, looking for
accessible static integer fields whose names begin with one of the specified {@prefixes}.

@param classes the classes to examine.
@prefixes only consider fields names starting with one of these prefixes.
@return a {@link SparseArray} mapping integer constants to their names.
"
      end

      operation 83194935 "findMessageNames"
	class_operation public return_type class_ref 6929975 // SparseArray
	nparams 1
	  param inout name "classNames" explicit_type "Class"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the names of integer constants. Searches the specified {@code classes}, looking for
accessible static integer values whose names begin with {@link #DEFAULT_PREFIXES}.

@param classNames the classes to examine.
@prefixes only consider fields names starting with one of these prefixes.
@return a {@link SparseArray} mapping integer constants to their names.
"
      end
    end

    class 7579191 "NotificationColorUtil"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper class to process legacy (Holo) notifications to make them look like material notifications.

@hide
"
      attribute 26501687 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17025079 // sInstance (<unidirectional association>)
	relation 17025079 --->
	  a role_name "sInstance" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17025079 // sInstance (<unidirectional association>)
	  b parent class_ref 7579191 // NotificationColorUtil
      end

      classrelation 17025207 // mImageUtils (<unidirectional association>)
	relation 17025207 --->
	  a role_name "mImageUtils" init_value " new ImageUtils()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17025207 // mImageUtils (<unidirectional association>)
	  b parent class_ref 7578039 // ImageUtils
      end

      classrelation 17025335 // mGrayscaleBitmapCache (<unidirectional association>)
	relation 17025335 --->
	  stereotype "WeakHashMap"
	  a role_name "mGrayscaleBitmapCache" init_value "
            new WeakHashMap<Bitmap, Pair<Boolean, Integer>>()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Pair<Boolean, Integer>> ${name}${value};
"
	    classrelation_ref 17025335 // mGrayscaleBitmapCache (<unidirectional association>)
	  b parent class_ref 5824951 // Bitmap
      end

      attribute 26501815 "mGrayscaleIconMaxSize"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " @dimen/notification_large_icon_width (64dp)"
      end

      operation 83195063 "getInstance"
	class_operation public return_type class_ref 7579191 // NotificationColorUtil
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83195191 "NotificationColorUtil"
	private explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 6923703 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83195319 "isGrayscaleIcon"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "bitmap" type class_ref 5824951 // Bitmap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether a Bitmap is a small grayscale icon.
Grayscale here means \"very close to a perfect gray\"; icon means \"no larger than 64dp\".

@param bitmap The bitmap to test.
@return True if the bitmap is grayscale; false if it is color or too large to examine.
"
      end

      operation 83195447 "isGrayscaleIcon"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "d" type class_ref 5787831 // Drawable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether a Drawable is a small grayscale icon.
Grayscale here means \"very close to a perfect gray\"; icon means \"no larger than 64dp\".

@param d The drawable to test.
@return True if the bitmap is grayscale; false if it is color or too large to examine.
"
      end

      operation 83195575 "isGrayscaleIcon"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "icon" type class_ref 5820471 // Icon
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83195703 "isGrayscaleIcon"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param in name "drawableResId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether a drawable with a resoure id is a small grayscale icon.
Grayscale here means \"very close to a perfect gray\"; icon means \"no larger than 64dp\".

@param context The context to load the drawable from.
@return True if the bitmap is grayscale; false if it is color or too large to examine.
"
      end

      operation 83195831 "invertCharSequenceColors"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "charSequence" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inverts all the grayscale colors set by {@link android.text.style.TextAppearanceSpan}s on
the text.

@param charSequence The text to process.
@return The color inverted text.
"
      end

      operation 83195959 "processTextAppearanceSpan"
	private return_type class_ref 7043255 // TextAppearanceSpan
	nparams 1
	  param inout name "span" type class_ref 7043255 // TextAppearanceSpan
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83196087 "processColor"
	private explicit_return_type "int"
	nparams 1
	  param in name "color" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83196215 "findContrastColor"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "color" explicit_type "int"
	  param in name "other" explicit_type "int"
	  param inout name "findFg" explicit_type "boolean"
	  param in name "minRatio" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a suitable color such that there's enough contrast.

@param color the color to start searching from.
@param other the color to ensure contrast against. Assumed to be lighter than {@param color}
@param findFg if true, we assume {@param color} is a foreground, otherwise a background.
@param minRatio the minimum contrast ratio required.
@return a color with the same hue as {@param color}, potentially darkened to meet the
         contrast ratio.
"
      end

      operation 83196343 "ensureLargeTextContrast"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "color" explicit_type "int"
	  param in name "bg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a text color with sufficient contrast over bg that has the same hue as the original
color, assuming it is for large text.
"
      end

      operation 83196471 "ensureTextContrast"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "color" explicit_type "int"
	  param in name "bg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a text color with sufficient contrast over bg that has the same hue as the original
color.
"
      end

      operation 83196599 "ensureTextBackgroundColor"
	class_operation public explicit_return_type "int"
	nparams 3
	  param in name "color" explicit_type "int"
	  param in name "textColor" explicit_type "int"
	  param in name "hintColor" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Finds a background color for a text view with given text color and hint text color, that
has the same hue as the original color.
"
      end

      operation 83196727 "contrastChange"
	class_operation private explicit_return_type "String"
	nparams 3
	  param in name "colorOld" explicit_type "int"
	  param in name "colorNew" explicit_type "int"
	  param in name "bg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83196855 "resolveColor"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param in name "color" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves {@param color} to an actual color if it is {@link Notification#COLOR_DEFAULT}
"
      end

      operation 83196983 "resolveContrastColor"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param in name "notificationColor" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves a Notification's color such that it has enough contrast to be used as the
color for the Notification's action and header text.

@param notificationColor the color of the notification or {@link Notification#COLOR_DEFAULT}
@return a color of the same hue with enough contrast against the backgrounds.
"
      end

      class 7579319 "ColorUtilsFromCompat"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 26501943 "XYZ_WHITE_REFERENCE_X"
	  class_attribute const_attribute private explicit_type "double"
	  init_value " 95.047"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26502071 "XYZ_WHITE_REFERENCE_Y"
	  class_attribute const_attribute private explicit_type "double"
	  init_value " 100"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26502199 "XYZ_WHITE_REFERENCE_Z"
	  class_attribute const_attribute private explicit_type "double"
	  init_value " 108.883"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26502327 "XYZ_EPSILON"
	  class_attribute const_attribute private explicit_type "double"
	  init_value " 0.008856"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26502455 "XYZ_KAPPA"
	  class_attribute const_attribute private explicit_type "double"
	  init_value " 903.3"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26502583 "MIN_ALPHA_SEARCH_MAX_ITERATIONS"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 10"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26502711 "MIN_ALPHA_SEARCH_PRECISION"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26502839 "TEMP_ARRAY"
	  class_attribute const_attribute private explicit_type "double[]"
	  init_value " new ThreadLocal<>()"
	  stereotype "ThreadLocal"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 83197111 "ColorUtilsFromCompat"
	  private explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83197239 "compositeColors"
	  class_operation public explicit_return_type "int"
	  nparams 2
	    param in name "foreground" explicit_type "int"
	    param in name "background" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @ColorInt ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Composite two potentially translucent colors over each other and returns the result.
"
	end

	operation 83197367 "compositeAlpha"
	  class_operation private explicit_return_type "int"
	  nparams 2
	    param in name "foregroundAlpha" explicit_type "int"
	    param in name "backgroundAlpha" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83197495 "compositeComponent"
	  class_operation private explicit_return_type "int"
	  nparams 5
	    param in name "fgC" explicit_type "int"
	    param in name "fgA" explicit_type "int"
	    param in name "bgC" explicit_type "int"
	    param in name "bgA" explicit_type "int"
	    param in name "a" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83197623 "calculateLuminance"
	  class_operation public explicit_return_type "double"
	  nparams 1
	    param in name "color" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@FloatRange(from = 0.0, to = 1.0)
"
	  
	  
	  
	  comment "Returns the luminance of a color as a float between {@code 0.0} and {@code 1.0}.
<p>Defined as the Y component in the XYZ representation of {@code color}.</p>
"
	end

	operation 83197751 "calculateContrast"
	  class_operation public explicit_return_type "double"
	  nparams 2
	    param in name "foreground" explicit_type "int"
	    param in name "background" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @ColorInt ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the contrast ratio between {@code foreground} and {@code background}.
{@code background} must be opaque.
<p>
Formula defined
<a href=\"http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\">here</a>.
"
	end

	operation 83197879 "colorToLAB"
	  class_operation public explicit_return_type "void"
	  nparams 2
	    param in name "color" explicit_type "int"
	    param inout name "outLab" explicit_type "double"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @NonNull ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convert the ARGB color to its CIE Lab representative components.

@param color  the ARGB color to convert. The alpha component is ignored
@param outLab 3-element array which holds the resulting LAB components
"
	end

	operation 83198007 "RGBToLAB"
	  class_operation public explicit_return_type "void"
	  nparams 4
	    param in name "r" explicit_type "int"
	    param in name "g" explicit_type "int"
	    param in name "b" explicit_type "int"
	    param inout name "outLab" explicit_type "double"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@IntRange(from = 0x0, to = 0xFF) ${t0} ${p0}, @IntRange(from = 0x0, to = 0xFF) ${t1} ${p1}, @IntRange(from = 0x0, to = 0xFF) ${t2} ${p2}, @NonNull ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convert RGB components to its CIE Lab representative components.

<ul>
<li>outLab[0] is L [0 ...1)</li>
<li>outLab[1] is a [-128...127)</li>
<li>outLab[2] is b [-128...127)</li>
</ul>

@param r      red component value [0..255]
@param g      green component value [0..255]
@param b      blue component value [0..255]
@param outLab 3-element array which holds the resulting LAB components
"
	end

	operation 83198135 "colorToXYZ"
	  class_operation public explicit_return_type "void"
	  nparams 2
	    param in name "color" explicit_type "int"
	    param inout name "outXyz" explicit_type "double"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @NonNull ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convert the ARGB color to it's CIE XYZ representative components.

<p>The resulting XYZ representation will use the D65 illuminant and the CIE
2° Standard Observer (1931).</p>

<ul>
<li>outXyz[0] is X [0 ...95.047)</li>
<li>outXyz[1] is Y [0...100)</li>
<li>outXyz[2] is Z [0...108.883)</li>
</ul>

@param color  the ARGB color to convert. The alpha component is ignored
@param outXyz 3-element array which holds the resulting LAB components
"
	end

	operation 83198263 "RGBToXYZ"
	  class_operation public explicit_return_type "void"
	  nparams 4
	    param in name "r" explicit_type "int"
	    param in name "g" explicit_type "int"
	    param in name "b" explicit_type "int"
	    param inout name "outXyz" explicit_type "double"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@IntRange(from = 0x0, to = 0xFF) ${t0} ${p0}, @IntRange(from = 0x0, to = 0xFF) ${t1} ${p1}, @IntRange(from = 0x0, to = 0xFF) ${t2} ${p2}, @NonNull ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convert RGB components to it's CIE XYZ representative components.

<p>The resulting XYZ representation will use the D65 illuminant and the CIE
2° Standard Observer (1931).</p>

<ul>
<li>outXyz[0] is X [0 ...95.047)</li>
<li>outXyz[1] is Y [0...100)</li>
<li>outXyz[2] is Z [0...108.883)</li>
</ul>

@param r      red component value [0..255]
@param g      green component value [0..255]
@param b      blue component value [0..255]
@param outXyz 3-element array which holds the resulting XYZ components
"
	end

	operation 83198391 "XYZToLAB"
	  class_operation public explicit_return_type "void"
	  nparams 4
	    param in name "x" explicit_type "double"
	    param in name "y" explicit_type "double"
	    param in name "z" explicit_type "double"
	    param inout name "outLab" explicit_type "double"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_X) ${t0} ${p0}, @FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_Y) ${t1} ${p1}, @FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_Z) ${t2} ${p2}, @NonNull ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Converts a color from CIE XYZ to CIE Lab representation.

<p>This method expects the XYZ representation to use the D65 illuminant and the CIE
2° Standard Observer (1931).</p>

<ul>
<li>outLab[0] is L [0 ...1)</li>
<li>outLab[1] is a [-128...127)</li>
<li>outLab[2] is b [-128...127)</li>
</ul>

@param x      X component value [0...95.047)
@param y      Y component value [0...100)
@param z      Z component value [0...108.883)
@param outLab 3-element array which holds the resulting Lab components
"
	end

	operation 83198519 "LABToXYZ"
	  class_operation public explicit_return_type "void"
	  nparams 4
	    param in name "l" explicit_type "double"
	    param in name "a" explicit_type "double"
	    param in name "b" explicit_type "double"
	    param inout name "outXyz" explicit_type "double"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@FloatRange(from = 0f, to = 100) final ${t0} ${p0}, @FloatRange(from = -128, to = 127) final ${t1} ${p1}, @FloatRange(from = -128, to = 127) final ${t2} ${p2}, @NonNull ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Converts a color from CIE Lab to CIE XYZ representation.

<p>The resulting XYZ representation will use the D65 illuminant and the CIE
2° Standard Observer (1931).</p>

<ul>
<li>outXyz[0] is X [0 ...95.047)</li>
<li>outXyz[1] is Y [0...100)</li>
<li>outXyz[2] is Z [0...108.883)</li>
</ul>

@param l      L component value [0...100)
@param a      A component value [-128...127)
@param b      B component value [-128...127)
@param outXyz 3-element array which holds the resulting XYZ components
"
	end

	operation 83198647 "XYZToColor"
	  class_operation public explicit_return_type "int"
	  nparams 3
	    param in name "x" explicit_type "double"
	    param in name "y" explicit_type "double"
	    param in name "z" explicit_type "double"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_X) ${t0} ${p0}, @FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_Y) ${t1} ${p1}, @FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_Z) ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@ColorInt
"
	  
	  
	  
	  comment "Converts a color from CIE XYZ to its RGB representation.

<p>This method expects the XYZ representation to use the D65 illuminant and the CIE
2° Standard Observer (1931).</p>

@param x X component value [0...95.047)
@param y Y component value [0...100)
@param z Z component value [0...108.883)
@return int containing the RGB representation
"
	end

	operation 83198775 "LABToColor"
	  class_operation public explicit_return_type "int"
	  nparams 3
	    param in name "l" explicit_type "double"
	    param in name "a" explicit_type "double"
	    param in name "b" explicit_type "double"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@FloatRange(from = 0f, to = 100) final ${t0} ${p0}, @FloatRange(from = -128, to = 127) final ${t1} ${p1}, @FloatRange(from = -128, to = 127) final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@ColorInt
"
	  
	  
	  
	  comment "Converts a color from CIE Lab to its RGB representation.

@param l L component value [0...100]
@param a A component value [-128...127]
@param b B component value [-128...127]
@return int containing the RGB representation
"
	end

	operation 83198903 "constrain"
	  class_operation private explicit_return_type "int"
	  nparams 3
	    param in name "amount" explicit_type "int"
	    param in name "low" explicit_type "int"
	    param in name "high" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83199031 "pivotXyzComponent"
	  class_operation private explicit_return_type "double"
	  nparams 1
	    param in name "component" explicit_type "double"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83199159 "getTempDouble3Array"
	  class_operation private explicit_return_type "double"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 7579447 "ParcelableString"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper class to adapt a simple String to cases where a Parcelable is expected.
@hide
"
      classrelation 17025463 // <realization>
	relation 17025463 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17025463 // <realization>
	  b parent class_ref 6932663 // Parcelable
      end

      operation 83199287 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83199415 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 6931895 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 17025719 // CREATOR (<unidirectional association>)
	relation 17025719 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<ParcelableString>() {
                @Override
                public ParcelableString createFromParcel(Parcel in) {
                    ParcelableString ret = new ParcelableString();
                    ret.string = in.readString();
                    return ret;
                }
                @Override
                public ParcelableString[] newArray(int size) {
                    return new ParcelableString[size];
                }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ParcelableString> ${name}${value};
"
	    classrelation_ref 17025719 // CREATOR (<unidirectional association>)
	  b parent class_ref 6932791 // Creator
      end
    end

    class 7579575 "Preconditions"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Simple static methods to be called at the start of your own methods to verify
correct arguments and state.
"
      operation 83199543 "checkArgument"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "expression" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83199671 "checkArgument"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "expression" explicit_type "boolean"
	  param in name "errorMessage" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that an expression checking an argument is true.

@param expression the expression to check
@param errorMessage the exception message to use if the check fails; will
    be converted to a string using {@link String#valueOf(Object)}
@throws IllegalArgumentException if {@code expression} is false
"
      end

      operation 83199799 "checkStringNotEmpty"
	class_operation public explicit_return_type "T"
	nparams 1
	  param in name "string" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends CharSequence> ${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Ensures that an string reference passed as a parameter to the calling
method is not empty.

@param string an string reference
@return the string reference that was validated
@throws IllegalArgumentException if {@code string} is empty
"
      end

      operation 83199927 "checkStringNotEmpty"
	class_operation public explicit_return_type "T"
	nparams 2
	  param in name "string" explicit_type "T"
	  param in name "errorMessage" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends CharSequence> ${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Ensures that an string reference passed as a parameter to the calling
method is not empty.

@param string an string reference
@param errorMessage the exception message to use if the check fails; will
    be converted to a string using {@link String#valueOf(Object)}
@return the string reference that was validated
@throws IllegalArgumentException if {@code string} is empty
"
      end

      operation 83200055 "checkNotNull"
	class_operation public explicit_return_type "T"
	nparams 1
	  param in name "reference" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Ensures that an object reference passed as a parameter to the calling
method is not null.

@param reference an object reference
@return the non-null reference that was validated
@throws NullPointerException if {@code reference} is null
"
      end

      operation 83200183 "checkNotNull"
	class_operation public explicit_return_type "T"
	nparams 2
	  param in name "reference" explicit_type "T"
	  param in name "errorMessage" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Ensures that an object reference passed as a parameter to the calling
method is not null.

@param reference an object reference
@param errorMessage the exception message to use if the check fails; will
    be converted to a string using {@link String#valueOf(Object)}
@return the non-null reference that was validated
@throws NullPointerException if {@code reference} is null
"
      end

      operation 83200311 "checkState"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "expression" explicit_type "boolean"
	  param inout name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures the truth of an expression involving the state of the calling
instance, but not involving any parameters to the calling method.

@param expression a boolean expression
@param message exception message
@throws IllegalStateException if {@code expression} is false
"
      end

      operation 83200439 "checkState"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "expression" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures the truth of an expression involving the state of the calling
instance, but not involving any parameters to the calling method.

@param expression a boolean expression
@throws IllegalStateException if {@code expression} is false
"
      end

      operation 83200567 "checkFlagsArgument"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "requestedFlags" explicit_type "int"
	  param in name "allowedFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the requested flags, throwing if any requested flags are outside
the allowed set.

@return the validated requested flags.
"
      end

      operation 83200695 "checkArgumentNonnegative"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "errorMessage" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@IntRange(from = 0)
"
	
	
	
	comment "Ensures that that the argument numeric value is non-negative.

@param value a numeric int value
@param errorMessage the exception message to use if the check fails
@return the validated numeric value
@throws IllegalArgumentException if {@code value} was negative
"
      end

      operation 83200823 "checkArgumentNonnegative"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@IntRange(from = 0)
"
	
	
	
	comment "Ensures that that the argument numeric value is non-negative.

@param value a numeric int value

@return the validated numeric value
@throws IllegalArgumentException if {@code value} was negative
"
      end

      operation 83200951 "checkArgumentNonnegative"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that that the argument numeric value is non-negative.

@param value a numeric long value
@return the validated numeric value
@throws IllegalArgumentException if {@code value} was negative
"
      end

      operation 83201079 "checkArgumentNonnegative"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "value" explicit_type "long"
	  param in name "errorMessage" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that that the argument numeric value is non-negative.

@param value a numeric long value
@param errorMessage the exception message to use if the check fails
@return the validated numeric value
@throws IllegalArgumentException if {@code value} was negative
"
      end

      operation 83201207 "checkArgumentPositive"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "errorMessage" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that that the argument numeric value is positive.

@param value a numeric int value
@param errorMessage the exception message to use if the check fails
@return the validated numeric value
@throws IllegalArgumentException if {@code value} was not positive
"
      end

      operation 83201335 "checkArgumentFinite"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "value" explicit_type "float"
	  param in name "valueName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the argument floating point value is a finite number.

<p>A finite number is defined to be both representable (that is, not NaN) and
not infinite (that is neither positive or negative infinity).</p>

@param value a floating point value
@param valueName the name of the argument to use if the check fails

@return the validated floating point value

@throws IllegalArgumentException if {@code value} was not finite
"
      end

      operation 83201463 "checkArgumentInRange"
	class_operation public explicit_return_type "float"
	nparams 4
	  param in name "value" explicit_type "float"
	  param in name "lower" explicit_type "float"
	  param in name "upper" explicit_type "float"
	  param inout name "valueName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the argument floating point value is within the inclusive range.

<p>While this can be used to range check against +/- infinity, note that all NaN numbers
will always be out of range.</p>

@param value a floating point value
@param lower the lower endpoint of the inclusive range
@param upper the upper endpoint of the inclusive range
@param valueName the name of the argument to use if the check fails

@return the validated floating point value

@throws IllegalArgumentException if {@code value} was not within the range
"
      end

      operation 83201591 "checkArgumentInRange"
	class_operation public explicit_return_type "int"
	nparams 4
	  param in name "value" explicit_type "int"
	  param in name "lower" explicit_type "int"
	  param in name "upper" explicit_type "int"
	  param inout name "valueName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the argument int value is within the inclusive range.

@param value a int value
@param lower the lower endpoint of the inclusive range
@param upper the upper endpoint of the inclusive range
@param valueName the name of the argument to use if the check fails

@return the validated int value

@throws IllegalArgumentException if {@code value} was not within the range
"
      end

      operation 83201719 "checkArgumentInRange"
	class_operation public explicit_return_type "long"
	nparams 4
	  param in name "value" explicit_type "long"
	  param in name "lower" explicit_type "long"
	  param in name "upper" explicit_type "long"
	  param inout name "valueName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the argument long value is within the inclusive range.

@param value a long value
@param lower the lower endpoint of the inclusive range
@param upper the upper endpoint of the inclusive range
@param valueName the name of the argument to use if the check fails

@return the validated long value

@throws IllegalArgumentException if {@code value} was not within the range
"
      end

      operation 83201847 "checkArrayElementsNotNull"
	class_operation public explicit_return_type "T"
	nparams 2
	  param in name "value" explicit_type "T"
	multiplicity "[]"
	  param in name "valueName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}final ${t0}[] ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the array is not {@code null}, and none of its elements are {@code null}.

@param value an array of boxed objects
@param valueName the name of the argument to use if the check fails

@return the validated array

@throws NullPointerException if the {@code value} or any of its elements were {@code null}
"
      end

      operation 83201975 "checkCollectionElementsNotNull"
	class_operation public explicit_return_type "C"
	nparams 2
	  param in name "value" explicit_type "C"
	  param in name "valueName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<C extends Collection<T>, T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Ensures that the {@link Collection} is not {@code null}, and none of its elements are
{@code null}.

@param value a {@link Collection} of boxed objects
@param valueName the name of the argument to use if the check fails

@return the validated {@link Collection}

@throws NullPointerException if the {@code value} or any of its elements were {@code null}
"
      end

      operation 83202103 "checkCollectionNotEmpty"
	class_operation public explicit_return_type "Collection<T>"
	nparams 2
	  param in name "value" explicit_type "Collection<T>"
	  param in name "valueName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the {@link Collection} is not {@code null}, and contains at least one element.

@param value a {@link Collection} of boxed elements.
@param valueName the name of the argument to use if the check fails.

@return the validated {@link Collection}

@throws NullPointerException if the {@code value} was {@code null}
@throws IllegalArgumentException if the {@code value} was empty
"
      end

      operation 83202231 "checkArrayElementsInRange"
	class_operation public explicit_return_type "float"
	nparams 4
	  param inout name "value" explicit_type "float"
	multiplicity "[]"
	  param in name "lower" explicit_type "float"
	  param in name "upper" explicit_type "float"
	  param inout name "valueName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that all elements in the argument floating point array are within the inclusive range

<p>While this can be used to range check against +/- infinity, note that all NaN numbers
will always be out of range.</p>

@param value a floating point array of values
@param lower the lower endpoint of the inclusive range
@param upper the upper endpoint of the inclusive range
@param valueName the name of the argument to use if the check fails

@return the validated floating point value

@throws IllegalArgumentException if any of the elements in {@code value} were out of range
@throws NullPointerException if the {@code value} was {@code null}
"
      end
    end

    class 7579703 "Predicate"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Predicate can determine a true or false value for any input of its
parameterized type. For example, a {@code RegexPredicate} might implement
{@code Predicate<String>}, and return true for any String that matches its
given regular expression.
<p/>
<p/>
Implementors of Predicate which may cause side effects upon evaluation are
strongly encouraged to state this fact clearly in their API documentation.
"
      operation 83202359 "apply"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "t" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7579831 "Predicates"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Predicates contains static methods for creating the standard set of
{@code Predicate} objects.
"
      operation 83202487 "Predicates"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83202615 "and"
	class_operation public return_type class_ref 7579703 // Predicate
	nparams 1
	  param inout name "components" explicit_type "Predicate<? super T>..."
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Predicate that evaluates to true iff each of its components
evaluates to true.  The components are evaluated in order, and evaluation
will be \"short-circuited\" as soon as the answer is determined.
"
      end

      operation 83202743 "and"
	class_operation public return_type class_ref 7579703 // Predicate
	nparams 1
	  param inout name "components" explicit_type "Iterable<? extends Predicate<? super T>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Predicate that evaluates to true iff each of its components
evaluates to true.  The components are evaluated in order, and evaluation
will be \"short-circuited\" as soon as the answer is determined.  Does not
defensively copy the iterable passed in, so future changes to it will alter
the behavior of this Predicate. If components is empty, the returned
Predicate will always evaluate to true.
"
      end

      operation 83202871 "or"
	class_operation public return_type class_ref 7579703 // Predicate
	nparams 1
	  param inout name "components" explicit_type "Predicate<? super T>..."
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Predicate that evaluates to true iff any one of its components
evaluates to true.  The components are evaluated in order, and evaluation
will be \"short-circuited\" as soon as the answer is determined.
"
      end

      operation 83202999 "or"
	class_operation public return_type class_ref 7579703 // Predicate
	nparams 1
	  param inout name "components" explicit_type "Iterable<? extends Predicate<? super T>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Predicate that evaluates to true iff any one of its components
evaluates to true.  The components are evaluated in order, and evaluation
will be \"short-circuited\" as soon as the answer is determined.  Does not
defensively copy the iterable passed in, so future changes to it will alter
the behavior of this Predicate. If components is empty, the returned
Predicate will always evaluate to false.
"
      end

      operation 83203127 "not"
	class_operation public return_type class_ref 7579703 // Predicate
	nparams 1
	  param inout name "predicate" type class_ref 7579703 // Predicate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}<T> ${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Predicate that evaluates to true iff the given Predicate
evaluates to false.
"
      end

      class 7579959 "AndPredicate"
	visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 7579703 // Predicate
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17025847 // <realization>
	  relation 17025847 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17025847 // <realization>
	    b parent class_ref 7579703 // Predicate
	end

	attribute 26502967 "components"
	  const_attribute private explicit_type "? extends Predicate<? super T>"
	  stereotype "Iterable"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 83203255 "AndPredicate"
	  cpp_inline private explicit_return_type ""
	  nparams 1
	    param inout name "components" explicit_type "Iterable<? extends Predicate<? super T>>"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83203383 "apply"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "t" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 7580087 "OrPredicate"
	visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 7579703 // Predicate
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17025975 // <realization>
	  relation 17025975 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17025975 // <realization>
	    b parent class_ref 7579703 // Predicate
	end

	attribute 26503095 "components"
	  const_attribute private explicit_type "? extends Predicate<? super T>"
	  stereotype "Iterable"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 83203511 "OrPredicate"
	  cpp_inline private explicit_return_type ""
	  nparams 1
	    param inout name "components" explicit_type "Iterable<? extends Predicate<? super T>>"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83203639 "apply"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "t" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 7580215 "NotPredicate"
	visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 7579703 // Predicate
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17026103 // <realization>
	  relation 17026103 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17026103 // <realization>
	    b parent class_ref 7579703 // Predicate
	end

	classrelation 17026231 // predicate (<unidirectional association>)
	  relation 17026231 --->
	    a role_name "predicate" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? super T> ${name}${value};
"
	      classrelation_ref 17026231 // predicate (<unidirectional association>)
	    b parent class_ref 7579703 // Predicate
	end

	operation 83203767 "NotPredicate"
	  cpp_inline private explicit_return_type ""
	  nparams 1
	    param inout name "predicate" type class_ref 7579703 // Predicate
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? super T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83203895 "apply"
	  cpp_inline public explicit_return_type "boolean"
	  nparams 1
	    param inout name "t" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 7580343 "ProcFileReader"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Reader that specializes in parsing {@code /proc/} files quickly. Walks
through the stream using a single space {@code ' '} as token separator, and
requires each line boundary to be explicitly acknowledged using
{@link #finishLine()}. Assumes {@link StandardCharsets#US_ASCII} encoding.
<p>
Currently doesn't support formats based on {@code \\0}, tabs, or repeated
delimiters.
"
      classrelation 17026359 // <realization>
	relation 17026359 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17026359 // <realization>
	  b parent class_ref 7549495 // Closeable
      end

      attribute 26503223 "mStream"
	const_attribute private explicit_type "InputStream"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26503351 "mBuffer"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26503479 "mTail"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Write pointer in {@link #mBuffer}. 
"
      end

      attribute 26503607 "mLineFinished"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Flag when last read token finished current line. 
"
      end

      operation 83204023 "ProcFileReader"
	public explicit_return_type ""
	nparams 1
	  param inout name "stream" explicit_type "InputStream"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83204151 "ProcFileReader"
	public explicit_return_type ""
	nparams 2
	  param inout name "stream" explicit_type "InputStream"
	  param in name "bufferSize" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83204279 "fillBuf"
	private explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read more data from {@link #mStream} into internal buffer.
"
      end

      operation 83204407 "consumeBuf"
	private explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consume number of bytes from beginning of internal buffer. If consuming
all remaining bytes, will attempt to {@link #fillBuf()}.
"
      end

      operation 83204535 "nextTokenIndex"
	private explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find buffer index of next token delimiter, usually space or newline.
Fills buffer as needed.

@return Index of next delimeter, otherwise -1 if no tokens remain on
        current line.
"
      end

      operation 83204663 "hasMoreData"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if stream has more data to be parsed.
"
      end

      operation 83204791 "finishLine"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finish current line, skipping any remaining data.
"
      end

      operation 83204919 "nextString"
	public explicit_return_type "String"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse and return next token as {@link String}.
"
      end

      operation 83205047 "nextLong"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse and return next token as base-10 encoded {@code long}.
"
      end

      operation 83205175 "nextOptionalLong"
	public explicit_return_type "long"
	nparams 1
	  param in name "def" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse and return next token as base-10 encoded {@code long}, or return
the given default value if no remaining tokens on current line.
"
      end

      operation 83205303 "parseAndConsumeString"
	private explicit_return_type "String"
	nparams 1
	  param in name "tokenIndex" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83205431 "parseAndConsumeLong"
	private explicit_return_type "long"
	nparams 1
	  param in name "tokenIndex" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83205559 "invalidLong"
	private explicit_return_type "NumberFormatException"
	nparams 1
	  param in name "tokenIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83205687 "nextInt"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse and return next token as base-10 encoded {@code int}.
"
      end

      operation 83205815 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7580471 "ProgressReporter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Tracks and reports progress of a single task to a {@link IProgressListener}.
The reported progress of a task ranges from 0-100, but the task can be
segmented into smaller pieces using {@link #startSegment(int)} and
{@link #endSegment(int[])}, and segments can be nested.
<p>
Here's an example in action; when finished the overall task progress will be
at 60.

<pre>
prog.setProgress(20);
{
    final int restore = prog.startSegment(40);
    for (int i = 0; i < N; i++) {
        prog.setProgress(i, N);
        ...
    }
    prog.endSegment(restore);
}
</pre>

@hide
"
      attribute 26503735 "STATE_INIT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26503863 "STATE_STARTED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26503991 "STATE_FINISHED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26504119 "mId"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17026487 // mListeners (<unidirectional association>)
	relation 17026487 --->
	  a role_name "mListeners" init_value " new RemoteCallbackList<>()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<IProgressListener> ${name}${value};
"
	    java_annotation "@GuardedBy(\"this\")
"
	    classrelation_ref 17026487 // mListeners (<unidirectional association>)
	  b parent class_ref 7187767 // RemoteCallbackList
      end

      attribute 26504247 "mState"
	private explicit_type "int"
	init_value " STATE_INIT"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GuardedBy(\"this\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26504375 "mProgress"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GuardedBy(\"this\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17026615 // mExtras (<unidirectional association>)
	relation 17026615 --->
	  a role_name "mExtras" init_value " new Bundle()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GuardedBy(\"this\")
"
	    classrelation_ref 17026615 // mExtras (<unidirectional association>)
	  b parent class_ref 6925879 // Bundle
      end

      attribute 26504503 "mSegmentRange"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[] { 0, 100 }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	java_annotation "@GuardedBy(\"this\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Current segment range: first element is starting progress of this
segment, second element is length of segment.

"
      end

      operation 83205943 "ProgressReporter"
	public explicit_return_type ""
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new task with the given identifier whose progress will be
reported to the given listener.
"
      end

      operation 83206071 "addListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 6990263 // IProgressListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add given listener to watch for progress events. The current state will
be immediately dispatched to the given listener.
"
      end

      operation 83206199 "setProgress"
	public explicit_return_type "void"
	nparams 1
	  param in name "progress" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the progress of the currently active segment.

@param progress Segment progress between 0-100.
"
      end

      operation 83206327 "setProgress"
	public explicit_return_type "void"
	nparams 2
	  param in name "progress" explicit_type "int"
	  param inout name "title" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the progress of the currently active segment.

@param progress Segment progress between 0-100.
"
      end

      operation 83206455 "setProgress"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param in name "m" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the fractional progress of the currently active segment.
"
      end

      operation 83206583 "setProgress"
	public explicit_return_type "void"
	nparams 3
	  param in name "n" explicit_type "int"
	  param in name "m" explicit_type "int"
	  param inout name "title" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the fractional progress of the currently active segment.
"
      end

      operation 83206711 "startSegment"
	public explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start a new inner segment that will contribute the given range towards
the currently active segment. You must pass the returned value to
{@link #endSegment(int[])} when finished.
"
      end

      operation 83206839 "endSegment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "lastRange" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End the current segment.
"
      end

      operation 83206967 "getProgress"
	package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83207095 "getSegmentRange"
	package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83207223 "start"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report this entire task as being started.
"
      end

      operation 83207351 "finish"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report this entire task as being finished.
"
      end

      operation 83207479 "notifyStarted"
	private explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83207607 "notifyProgress"
	private explicit_return_type "void"
	nparams 3
	  param in name "id" explicit_type "int"
	  param in name "progress" explicit_type "int"
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83207735 "notifyFinished"
	private explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "extras" type class_ref 6925879 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7580599 "Protocol"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class defines Message.what base addresses for various protocols that are recognized
to be unique by any {@link com.android.internal.util.Statemachine} implementation. This
allows for interaction between different StateMachine implementations without a conflict
of message codes.

As an example, all messages in {@link android.net.wifi.WifiStateMachine} will have message
codes with Message.what starting at Protocol.WIFI + 1 and less than or equal to Protocol.WIFI +
Protocol.MAX_MESSAGE

NOTE: After a value is created and source released a value shouldn't be changed to
maintain backwards compatibility.

{@hide}
"
      attribute 26504631 "MAX_MESSAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000FFFF"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26504759 "BASE_SYSTEM_RESERVED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00010000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Base reserved for system 
"
      end

      attribute 26504887 "BASE_SYSTEM_ASYNC_CHANNEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00011000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26505015 "BASE_WIFI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00020000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Non system protocols 
"
      end

      attribute 26505143 "BASE_WIFI_WATCHDOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00021000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26505271 "BASE_WIFI_P2P_MANAGER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00022000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26505399 "BASE_WIFI_P2P_SERVICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00023000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26505527 "BASE_WIFI_MONITOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00024000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26505655 "BASE_WIFI_MANAGER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00025000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26505783 "BASE_WIFI_CONTROLLER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00026000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26505911 "BASE_WIFI_SCANNER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00027000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26506039 "BASE_WIFI_SCANNER_SERVICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00027100"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26506167 "BASE_WIFI_RTT_MANAGER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00027200"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26506295 "BASE_WIFI_RTT_SERVICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00027300"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26506423 "BASE_WIFI_PASSPOINT_MANAGER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00028000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26506551 "BASE_WIFI_PASSPOINT_SERVICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00028100"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26506679 "BASE_WIFI_LOGGER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00028300"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26506807 "BASE_DHCP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00030000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26506935 "BASE_DATA_CONNECTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00040000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26507063 "BASE_DATA_CONNECTION_AC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00041000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26507191 "BASE_DATA_CONNECTION_TRACKER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00042000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26507319 "BASE_TETHERING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00050000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26507447 "BASE_NSD_MANAGER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00060000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26507575 "BASE_NETWORK_STATE_TRACKER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00070000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26507703 "BASE_CONNECTIVITY_MANAGER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00080000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26507831 "BASE_NETWORK_AGENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00081000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26507959 "BASE_NETWORK_MONITOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00082000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26508087 "BASE_NETWORK_FACTORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00083000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26508215 "BASE_ETHERNET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00084000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 7580727 "RingBufferIndices"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper class for implementing a ring buffer.  This supplies the indices, you supply
the array(s).
"
      attribute 26508343 "mCapacity"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26508471 "mStart"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " The first valid element and the next open slot.
"
      end

      attribute 26508599 "mSize"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83207863 "RingBufferIndices"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create ring buffer of the given capacity.
"
      end

      operation 83207991 "add"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new item to the ring buffer.  If the ring buffer is full, this
replaces the oldest item.
@return Returns the index at which the new item appears, for placing in your array.
"
      end

      operation 83208119 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clear the ring buffer.
"
      end

      operation 83208247 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current size of the ring buffer.
"
      end

      operation 83208375 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a position in the ring buffer that is [0..size()] to an offset
in the array(s) containing the ring buffer items.
"
      end
    end

    class 7580855 "ScreenShapeHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@hide
"
      operation 83208503 "getWindowOutsetBottomPx"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "resources" type class_ref 6923959 // Resources
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the bottom pixel window outset of a window given its style attributes.
@return An outset dimension in pixels or 0 if no outset should be applied.
"
      end
    end

    class 7580983 "SizedInputStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Reads exact number of bytes from wrapped stream, returning EOF once those
bytes have been read.
"
      classrelation 17026743 // <generalisation>
	relation 17026743 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17026743 // <generalisation>
	  b parent class_ref 7581111 // InputStream
      end

      attribute 26508727 "mWrapped"
	const_attribute private explicit_type "InputStream"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26508855 "mLength"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83208631 "SizedInputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "wrapped" explicit_type "InputStream"
	  param in name "length" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83208759 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83208887 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83209015 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "buffer" explicit_type "byte"
	multiplicity "[]"
	  param in name "byteOffset" explicit_type "int"
	  param in name "byteCount" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7581239 "State"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@hide}

The class for implementing states in a StateMachine
"
      classrelation 17026871 // <realization>
	relation 17026871 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17026871 // <realization>
	  b parent class_ref 7578295 // IState
      end

      operation 83209143 "State"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor
"
      end

      operation 83209271 "enter"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " (non-Javadoc)
@see com.android.internal.util.IState#enter()
"
      end

      operation 83209399 "exit"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " (non-Javadoc)
@see com.android.internal.util.IState#exit()
"
      end

      operation 83209527 "processMessage"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " (non-Javadoc)
@see com.android.internal.util.IState#processMessage(android.os.Message)
"
      end

      operation 83209655 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Name of State for debugging purposes.

This default implementation returns the class name, returning
the instance name would better in cases where a State class
is used for multiple states. But normally there is one class per
state and the class name is sufficient and easy to get. You may
want to provide a setName or some other mechanism for setting
another name if the class name is not appropriate.

@see com.android.internal.util.IState#processMessage(android.os.Message)
"
      end
    end

    class 7581367 "StateMachine"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "{@hide}

<p>The state machine defined here is a hierarchical state machine which processes messages
and can have states arranged hierarchically.</p>

<p>A state is a <code>State</code> object and must implement
<code>processMessage</code> and optionally <code>enter/exit/getName</code>.
The enter/exit methods are equivalent to the construction and destruction
in Object Oriented programming and are used to perform initialization and
cleanup of the state respectively. The <code>getName</code> method returns the
name of the state; the default implementation returns the class name. It may be
desirable to have <code>getName</code> return the the state instance name instead,
in particular if a particular state class has multiple instances.</p>

<p>When a state machine is created, <code>addState</code> is used to build the
hierarchy and <code>setInitialState</code> is used to identify which of these
is the initial state. After construction the programmer calls <code>start</code>
which initializes and starts the state machine. The first action the StateMachine
is to the invoke <code>enter</code> for all of the initial state's hierarchy,
starting at its eldest parent. The calls to enter will be done in the context
of the StateMachine's Handler, not in the context of the call to start, and they
will be invoked before any messages are processed. For example, given the simple
state machine below, mP1.enter will be invoked and then mS1.enter. Finally,
messages sent to the state machine will be processed by the current state;
in our simple state machine below that would initially be mS1.processMessage.</p>
<pre>
mP1
/   \\
mS2   mS1 ----&gt; initial state
</pre>
<p>After the state machine is created and started, messages are sent to a state
machine using <code>sendMessage</code> and the messages are created using
<code>obtainMessage</code>. When the state machine receives a message the
current state's <code>processMessage</code> is invoked. In the above example
mS1.processMessage will be invoked first. The state may use <code>transitionTo</code>
to change the current state to a new state.</p>

<p>Each state in the state machine may have a zero or one parent states. If
a child state is unable to handle a message it may have the message processed
by its parent by returning false or NOT_HANDLED. If a message is not handled by
a child state or any of its ancestors, <code>unhandledMessage</code> will be invoked
to give one last chance for the state machine to process the message.</p>

<p>When all processing is completed a state machine may choose to call
<code>transitionToHaltingState</code>. When the current <code>processingMessage</code>
returns the state machine will transfer to an internal <code>HaltingState</code>
and invoke <code>halting</code>. Any message subsequently received by the state
machine will cause <code>haltedProcessMessage</code> to be invoked.</p>

<p>If it is desirable to completely stop the state machine call <code>quit</code> or
<code>quitNow</code>. These will call <code>exit</code> of the current state and its parents,
call <code>onQuitting</code> and then exit Thread/Loopers.</p>

<p>In addition to <code>processMessage</code> each <code>State</code> has
an <code>enter</code> method and <code>exit</code> method which may be overridden.</p>

<p>Since the states are arranged in a hierarchy transitioning to a new state
causes current states to be exited and new states to be entered. To determine
the list of states to be entered/exited the common parent closest to
the current state is found. We then exit from the current state and its
parent's up to but not including the common parent state and then enter all
of the new states below the common parent down to the destination state.
If there is no common parent all states are exited and then the new states
are entered.</p>

<p>Two other methods that states can use are <code>deferMessage</code> and
<code>sendMessageAtFrontOfQueue</code>. The <code>sendMessageAtFrontOfQueue</code> sends
a message but places it on the front of the queue rather than the back. The
<code>deferMessage</code> causes the message to be saved on a list until a
transition is made to a new state. At which time all of the deferred messages
will be put on the front of the state machine queue with the oldest message
at the front. These will then be processed by the new current state before
any other messages that are on the queue or might be added later. Both of
these are protected and may only be invoked from within a state machine.</p>

<p>To illustrate some of these properties we'll use state machine with an 8
state hierarchy:</p>
<pre>
mP0
/   \\
mP1   mS0
/   \\
mS2   mS1
/  \\    \\
mS3  mS4  mS5  ---&gt; initial state
</pre>
<p>After starting mS5 the list of active states is mP0, mP1, mS1 and mS5.
So the order of calling processMessage when a message is received is mS5,
mS1, mP1, mP0 assuming each processMessage indicates it can't handle this
message by returning false or NOT_HANDLED.</p>

<p>Now assume mS5.processMessage receives a message it can handle, and during
the handling determines the machine should change states. It could call
transitionTo(mS4) and return true or HANDLED. Immediately after returning from
processMessage the state machine runtime will find the common parent,
which is mP1. It will then call mS5.exit, mS1.exit, mS2.enter and then
mS4.enter. The new list of active states is mP0, mP1, mS2 and mS4. So
when the next message is received mS4.processMessage will be invoked.</p>

<p>Now for some concrete examples, here is the canonical HelloWorld as a state machine.
It responds with \"Hello World\" being printed to the log for every message.</p>
<pre>
class HelloWorld extends StateMachine {
HelloWorld(String name) {
super(name);
addState(mState1);
setInitialState(mState1);
}

public static HelloWorld makeHelloWorld() {
HelloWorld hw = new HelloWorld(\"hw\");
hw.start();
return hw;
}

class State1 extends State {
&#64;Override public boolean processMessage(Message message) {
log(\"Hello World\");
return HANDLED;
}
}
State1 mState1 = new State1();
}

void testHelloWorld() {
HelloWorld hw = makeHelloWorld();
hw.sendMessage(hw.obtainMessage());
}
</pre>
<p>A more interesting state machine is one with four states
with two independent parent states.</p>
<pre>
mP1      mP2
/   \\
mS2   mS1
</pre>
<p>Here is a description of this state machine using pseudo code.</p>
<pre>
state mP1 {
enter { log(\"mP1.enter\"); }
exit { log(\"mP1.exit\");  }
on msg {
CMD_2 {
send(CMD_3);
defer(msg);
transitionTo(mS2);
return HANDLED;
}
return NOT_HANDLED;
}
}

INITIAL
state mS1 parent mP1 {
enter { log(\"mS1.enter\"); }
exit  { log(\"mS1.exit\");  }
on msg {
CMD_1 {
transitionTo(mS1);
return HANDLED;
}
return NOT_HANDLED;
}
}

state mS2 parent mP1 {
enter { log(\"mS2.enter\"); }
exit  { log(\"mS2.exit\");  }
on msg {
CMD_2 {
send(CMD_4);
return HANDLED;
}
CMD_3 {
defer(msg);
transitionTo(mP2);
return HANDLED;
}
return NOT_HANDLED;
}
}

state mP2 {
enter {
log(\"mP2.enter\");
send(CMD_5);
}
exit { log(\"mP2.exit\"); }
on msg {
CMD_3, CMD_4 { return HANDLED; }
CMD_5 {
transitionTo(HaltingState);
return HANDLED;
}
return NOT_HANDLED;
}
}
</pre>
<p>The implementation is below and also in StateMachineTest:</p>
<pre>
class Hsm1 extends StateMachine {
public static final int CMD_1 = 1;
public static final int CMD_2 = 2;
public static final int CMD_3 = 3;
public static final int CMD_4 = 4;
public static final int CMD_5 = 5;

public static Hsm1 makeHsm1() {
log(\"makeHsm1 E\");
Hsm1 sm = new Hsm1(\"hsm1\");
sm.start();
log(\"makeHsm1 X\");
return sm;
}

Hsm1(String name) {
super(name);
log(\"ctor E\");

// Add states, use indentation to show hierarchy
addState(mP1);
addState(mS1, mP1);
addState(mS2, mP1);
addState(mP2);

// Set the initial state
setInitialState(mS1);
log(\"ctor X\");
}

class P1 extends State {
&#64;Override public void enter() {
log(\"mP1.enter\");
}
&#64;Override public boolean processMessage(Message message) {
boolean retVal;
log(\"mP1.processMessage what=\" + message.what);
switch(message.what) {
case CMD_2:
// CMD_2 will arrive in mS2 before CMD_3
sendMessage(obtainMessage(CMD_3));
deferMessage(message);
transitionTo(mS2);
retVal = HANDLED;
break;
default:
// Any message we don't understand in this state invokes unhandledMessage
retVal = NOT_HANDLED;
break;
}
return retVal;
}
&#64;Override public void exit() {
log(\"mP1.exit\");
}
}

class S1 extends State {
&#64;Override public void enter() {
log(\"mS1.enter\");
}
&#64;Override public boolean processMessage(Message message) {
log(\"S1.processMessage what=\" + message.what);
if (message.what == CMD_1) {
// Transition to ourself to show that enter/exit is called
transitionTo(mS1);
return HANDLED;
} else {
// Let parent process all other messages
return NOT_HANDLED;
}
}
&#64;Override public void exit() {
log(\"mS1.exit\");
}
}

class S2 extends State {
&#64;Override public void enter() {
log(\"mS2.enter\");
}
&#64;Override public boolean processMessage(Message message) {
boolean retVal;
log(\"mS2.processMessage what=\" + message.what);
switch(message.what) {
case(CMD_2):
sendMessage(obtainMessage(CMD_4));
retVal = HANDLED;
break;
case(CMD_3):
deferMessage(message);
transitionTo(mP2);
retVal = HANDLED;
break;
default:
retVal = NOT_HANDLED;
break;
}
return retVal;
}
&#64;Override public void exit() {
log(\"mS2.exit\");
}
}

class P2 extends State {
&#64;Override public void enter() {
log(\"mP2.enter\");
sendMessage(obtainMessage(CMD_5));
}
&#64;Override public boolean processMessage(Message message) {
log(\"P2.processMessage what=\" + message.what);
switch(message.what) {
case(CMD_3):
break;
case(CMD_4):
break;
case(CMD_5):
transitionToHaltingState();
break;
}
return HANDLED;
}
&#64;Override public void exit() {
log(\"mP2.exit\");
}
}

&#64;Override
void onHalting() {
log(\"halting\");
synchronized (this) {
this.notifyAll();
}
}

P1 mP1 = new P1();
S1 mS1 = new S1();
S2 mS2 = new S2();
P2 mP2 = new P2();
}
</pre>
<p>If this is executed by sending two messages CMD_1 and CMD_2
(Note the synchronize is only needed because we use hsm.wait())</p>
<pre>
Hsm1 hsm = makeHsm1();
synchronize(hsm) {
hsm.sendMessage(obtainMessage(hsm.CMD_1));
hsm.sendMessage(obtainMessage(hsm.CMD_2));
try {
// wait for the messages to be handled
hsm.wait();
} catch (InterruptedException e) {
loge(\"exception while waiting \" + e.getMessage());
}
}
</pre>
<p>The output is:</p>
<pre>
D/hsm1    ( 1999): makeHsm1 E
D/hsm1    ( 1999): ctor E
D/hsm1    ( 1999): ctor X
D/hsm1    ( 1999): mP1.enter
D/hsm1    ( 1999): mS1.enter
D/hsm1    ( 1999): makeHsm1 X
D/hsm1    ( 1999): mS1.processMessage what=1
D/hsm1    ( 1999): mS1.exit
D/hsm1    ( 1999): mS1.enter
D/hsm1    ( 1999): mS1.processMessage what=2
D/hsm1    ( 1999): mP1.processMessage what=2
D/hsm1    ( 1999): mS1.exit
D/hsm1    ( 1999): mS2.enter
D/hsm1    ( 1999): mS2.processMessage what=2
D/hsm1    ( 1999): mS2.processMessage what=3
D/hsm1    ( 1999): mS2.exit
D/hsm1    ( 1999): mP1.exit
D/hsm1    ( 1999): mP2.enter
D/hsm1    ( 1999): mP2.processMessage what=3
D/hsm1    ( 1999): mP2.processMessage what=4
D/hsm1    ( 1999): mP2.processMessage what=5
D/hsm1    ( 1999): mP2.exit
D/hsm1    ( 1999): halting
</pre>
"
      attribute 26508983 "SM_QUIT_CMD"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Message.what value when quitting 
"
      end

      attribute 26509111 "SM_INIT_CMD"
	class_attribute const_attribute private explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Message.what value when initializing 
"
      end

      attribute 26509239 "HANDLED"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Convenience constant that maybe returned by processMessage
to indicate the the message was processed and is not to be
processed by parent states

"
      end

      attribute 26509367 "NOT_HANDLED"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Convenience constant that maybe returned by processMessage
to indicate the the message was NOT processed and is to be
processed by parent states

"
      end

      class 7581495 "LogRec"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17027127 // mSm (<unidirectional association>)
	  relation 17027127 --->
	    a role_name "mSm" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17027127 // mSm (<unidirectional association>)
	    b parent class_ref 7581367 // StateMachine
	end

	attribute 26509495 "mTime"
	  private explicit_type "long"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26509623 "mWhat"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 17027383 // mState (<unidirectional association>)
	  relation 17027383 --->
	    a role_name "mState" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17027383 // mState (<unidirectional association>)
	    b parent class_ref 7578295 // IState
	end

	classrelation 17027511 // mOrgState (<unidirectional association>)
	  relation 17027511 --->
	    a role_name "mOrgState" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17027511 // mOrgState (<unidirectional association>)
	    b parent class_ref 7578295 // IState
	end

	classrelation 17027639 // mDstState (<unidirectional association>)
	  relation 17027639 --->
	    a role_name "mDstState" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17027639 // mDstState (<unidirectional association>)
	    b parent class_ref 7578295 // IState
	end

	operation 83209783 "LogRec"
	  package explicit_return_type ""
	  nparams 6
	    param inout name "sm" type class_ref 7581367 // StateMachine
	    param inout name "msg" type class_ref 134839 // Message
	    param inout name "info" explicit_type "String"
	    param inout name "state" type class_ref 7578295 // IState
	    param inout name "orgState" type class_ref 7578295 // IState
	    param inout name "transToState" type class_ref 7578295 // IState
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructor

@param msg
@param state the state which handled the message
@param orgState is the first state the received the message but
did not processes the message.
@param transToState is the state that was transitioned to after the message was
processed.
"
	end

	operation 83209911 "update"
	  public explicit_return_type "void"
	  nparams 6
	    param inout name "sm" type class_ref 7581367 // StateMachine
	    param inout name "msg" type class_ref 134839 // Message
	    param inout name "info" explicit_type "String"
	    param inout name "state" type class_ref 7578295 // IState
	    param inout name "orgState" type class_ref 7578295 // IState
	    param inout name "dstState" type class_ref 7578295 // IState
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Update the information in the record.
@param state that handled the message
@param orgState is the first state the received the message
@param dstState is the state that was the transition target when logging
"
	end

	operation 83210039 "getTime"
	  public explicit_return_type "long"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return time stamp
"
	end

	operation 83210167 "getWhat"
	  public explicit_return_type "long"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return msg.what
"
	end

	operation 83210295 "getInfo"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the command that was executing
"
	end

	operation 83210423 "getState"
	  public return_type class_ref 7578295 // IState
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the state that handled this message
"
	end

	operation 83210551 "getDestState"
	  public return_type class_ref 7578295 // IState
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the state destination state if a transition is occurring or null if none.
"
	end

	operation 83210679 "getOriginalState"
	  public return_type class_ref 7578295 // IState
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the original state that received the message.
"
	end

	operation 83210807 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 7581623 "LogRecords"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 26509751 "DEFAULT_SIZE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 20"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 17027767 // mLogRecVector (<unidirectional association>)
	  relation 17027767 --->
	    stereotype "Vector"
	    a role_name "mLogRecVector" init_value " new Vector<LogRec>()" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 17027767 // mLogRecVector (<unidirectional association>)
	    b parent class_ref 7581495 // LogRec
	end

	attribute 26509879 "mMaxSize"
	  private explicit_type "int"
	  init_value " DEFAULT_SIZE"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26510007 "mOldestIndex"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26510135 "mCount"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26510263 "mLogOnlyTransitions"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 83210935 "LogRecords"
	  private explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "private constructor use add
"
	end

	operation 83211063 "setSize"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "maxSize" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set size of messages to maintain and clears all current records.

@param maxSize number of records to maintain at anyone time.
"
	end

	operation 83211191 "setLogOnlyTransitions"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "enable" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83211319 "logOnlyTransitions"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83211447 "size"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the number of recent records.
"
	end

	operation 83211575 "count"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the total number of records processed since size was set.
"
	end

	operation 83211703 "cleanup"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Clear the list of records.
"
	end

	operation 83211831 "get"
	  package return_type class_ref 7581495 // LogRec
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the information on a particular record. 0 is the oldest
record and size()-1 is the newest record. If the index is to
large null is returned.
"
	end

	operation 83211959 "add"
	  package explicit_return_type "void"
	  nparams 6
	    param inout name "sm" type class_ref 7581367 // StateMachine
	    param inout name "msg" type class_ref 134839 // Message
	    param inout name "messageInfo" explicit_type "String"
	    param inout name "state" type class_ref 7578295 // IState
	    param inout name "orgState" type class_ref 7578295 // IState
	    param inout name "transToState" type class_ref 7578295 // IState
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a processed message.

@param msg
@param messageInfo to be stored
@param state that handled the message
@param orgState is the first state the received the message but
did not processes the message.
@param transToState is the state that was transitioned to after the message was
processed.

"
	end
      end

      class 7581751 "SmHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17027895 // <generalisation>
	  relation 17027895 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17027895 // <generalisation>
	    b parent class_ref 6926391 // Handler
	end

	attribute 26510391 "mHasQuit"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " true if StateMachine has quit 
"
	end

	attribute 26510519 "mDbg"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " The debug flag 
"
	end

	classrelation 17028151 // mMsg (<unidirectional association>)
	  relation 17028151 --->
	    a role_name "mMsg" private
	      comment " The current message 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17028151 // mMsg (<unidirectional association>)
	    b parent class_ref 134839 // Message
	end

	classrelation 17028279 // mLogRecords (<unidirectional association>)
	  relation 17028279 --->
	    a role_name "mLogRecords" init_value " new LogRecords()" private
	      comment " A list of log records including messages this state machine has processed 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17028279 // mLogRecords (<unidirectional association>)
	    b parent class_ref 7581623 // LogRecords
	end

	attribute 26510647 "mIsConstructionCompleted"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " true if construction of the state machine has not been completed 
"
	end

	class 7581879 "StateInfo"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 17029047 // state (<unidirectional association>)
	    relation 17029047 --->
	      a role_name "state" package
		comment " The state 
"
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 17029047 // state (<unidirectional association>)
	      b parent class_ref 7581239 // State
	  end

	  classrelation 17029175 // parentStateInfo (<unidirectional association>)
	    relation 17029175 --->
	      a role_name "parentStateInfo" package
		comment " The parent of this state, null if there is no parent 
"
		cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 17029175 // parentStateInfo (<unidirectional association>)
	      b parent class_ref 7581879 // StateInfo
	  end

	  attribute 26511031 "active"
	    package explicit_type "boolean"
	    cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    mysql_decl ""
	    MysqlColumn
	    comment " True when the state has been entered and on the stack 
"
	  end

	  operation 83212087 "toString"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Convert StateInfo to string
"
	  end
	end

	classrelation 17028407 // mStateStack (<unidirectional association>)
	  relation 17028407 --->
	    a role_name "mStateStack" multiplicity "[]" private
	      comment " Stack used to manage the current hierarchy of states 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 17028407 // mStateStack (<unidirectional association>)
	    b parent class_ref 7581879 // StateInfo
	end

	attribute 26510775 "mStateStackTopIndex"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Top of mStateStack 
"
	end

	classrelation 17028535 // mTempStateStack (<unidirectional association>)
	  relation 17028535 --->
	    a role_name "mTempStateStack" multiplicity "[]" private
	      comment " A temporary stack used to manage the state stack 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 17028535 // mTempStateStack (<unidirectional association>)
	    b parent class_ref 7581879 // StateInfo
	end

	attribute 26510903 "mTempStateStackCount"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " The top of the mTempStateStack 
"
	end

	class 7582007 "HaltingState"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 17029815 // <generalisation>
	    relation 17029815 ---|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 17029815 // <generalisation>
	      b parent class_ref 7581239 // State
	  end

	  operation 83212215 "processMessage"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "msg" type class_ref 134839 // Message
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	classrelation 17028663 // mHaltingState (<unidirectional association>)
	  relation 17028663 --->
	    a role_name "mHaltingState" init_value " new HaltingState()" private
	      comment " State used when state machine is halted 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17028663 // mHaltingState (<unidirectional association>)
	    b parent class_ref 7582007 // HaltingState
	end

	class 7582135 "QuittingState"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 17029943 // <generalisation>
	    relation 17029943 ---|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 17029943 // <generalisation>
	      b parent class_ref 7581239 // State
	  end

	  operation 83212343 "processMessage"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "msg" type class_ref 134839 // Message
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	classrelation 17028791 // mQuittingState (<unidirectional association>)
	  relation 17028791 --->
	    a role_name "mQuittingState" init_value " new QuittingState()" private
	      comment " State used when state machine is quitting 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17028791 // mQuittingState (<unidirectional association>)
	    b parent class_ref 7582135 // QuittingState
	end

	classrelation 17028919 // mSm (<unidirectional association>)
	  relation 17028919 --->
	    a role_name "mSm" private
	      comment " Reference to the StateMachine 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17028919 // mSm (<unidirectional association>)
	    b parent class_ref 7581367 // StateMachine
	end

	classrelation 17029303 // mStateInfo (<unidirectional association>)
	  relation 17029303 --->
	    stereotype "HashMap"
	    a role_name "mStateInfo" init_value " new HashMap<State, StateInfo>()" private
	      comment " The map of all of the states in the state machine 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, StateInfo> ${name}${value};
"
	      classrelation_ref 17029303 // mStateInfo (<unidirectional association>)
	    b parent class_ref 7581239 // State
	end

	classrelation 17029431 // mInitialState (<unidirectional association>)
	  relation 17029431 --->
	    a role_name "mInitialState" private
	      comment " The initial state that will process the first message 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17029431 // mInitialState (<unidirectional association>)
	    b parent class_ref 7581239 // State
	end

	classrelation 17029559 // mDestState (<unidirectional association>)
	  relation 17029559 --->
	    a role_name "mDestState" private
	      comment " The destination state when transitionTo has been invoked 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17029559 // mDestState (<unidirectional association>)
	    b parent class_ref 7581239 // State
	end

	classrelation 17029687 // mDeferredMessages (<unidirectional association>)
	  relation 17029687 --->
	    stereotype "ArrayList"
	    a role_name "mDeferredMessages" init_value " new ArrayList<Message>()" private
	      comment " The list of deferred messages 
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 17029687 // mDeferredMessages (<unidirectional association>)
	    b parent class_ref 134839 // Message
	end

	operation 83212471 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 134839 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Handle messages sent to the state machine by calling
the current state's processMessage. It also handles
the enter/exit calls and placing any deferred messages
back onto the queue when transitioning to a new state.
"
	end

	operation 83212599 "performTransitions"
	  private explicit_return_type "void"
	  nparams 2
	    param inout name "msgProcessedState" type class_ref 7581239 // State
	    param inout name "msg" type class_ref 134839 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Do any transitions
@param msgProcessedState is the state that processed the message
"
	end

	operation 83212727 "cleanupAfterQuitting"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cleanup all the static variables and the looper after the SM has been quit.
"
	end

	operation 83212855 "completeConstruction"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Complete the construction of the state machine.
"
	end

	operation 83212983 "processMsg"
	  private return_type class_ref 7581239 // State
	  nparams 1
	    param inout name "msg" type class_ref 134839 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Process the message. If the current state doesn't handle
it, call the states parent and so on. If it is never handled then
call the state machines unhandledMessage method.
@return the state that processed the message
"
	end

	operation 83213111 "invokeExitMethods"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "commonStateInfo" type class_ref 7581879 // StateInfo
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Call the exit method for each state from the top of stack
up to the common ancestor state.
"
	end

	operation 83213239 "invokeEnterMethods"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "stateStackEnteringIndex" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Invoke the enter method starting at the entering index to top of state stack
"
	end

	operation 83213367 "moveDeferredMessageAtFrontOfQueue"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Move the deferred message to the front of the message queue.
"
	end

	operation 83213495 "moveTempStateStackToStateStack"
	  private explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Move the contents of the temporary stack to the state stack
reversing the order of the items on the temporary stack as
they are moved.

@return index into mStateStack where entering needs to start
"
	end

	operation 83213623 "setupTempStateStackWithStatesToEnter"
	  private return_type class_ref 7581879 // StateInfo
	  nparams 1
	    param inout name "destState" type class_ref 7581239 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Setup the mTempStateStack with the states we are going to enter.

This is found by searching up the destState's ancestors for a
state that is already active i.e. StateInfo.active == true.
The destStae and all of its inactive parents will be on the
TempStateStack as the list of states to enter.

@return StateInfo of the common ancestor for the destState and
current state or null if there is no common parent.
"
	end

	operation 83213751 "setupInitialStateStack"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Initialize StateStack to mInitialState.
"
	end

	operation 83213879 "getCurrentMessage"
	  private return_type class_ref 134839 // Message
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return current message
"
	end

	operation 83214007 "getCurrentState"
	  private return_type class_ref 7578295 // IState
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return current state
"
	end

	operation 83214135 "addState"
	  private return_type class_ref 7581879 // StateInfo
	  nparams 2
	    param inout name "state" type class_ref 7581239 // State
	    param inout name "parent" type class_ref 7581239 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a new state to the state machine. Bottom up addition
of states is allowed but the same state may only exist
in one hierarchy.

@param state the state to add
@param parent the parent of state
@return stateInfo for this state
"
	end

	operation 83214263 "SmHandler"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "looper" type class_ref 134967 // Looper
	    param inout name "sm" type class_ref 7581367 // StateMachine
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructor

@param looper for dispatching messages
@param sm the hierarchical state machine
"
	end

	operation 83214391 "setInitialState"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "initialState" type class_ref 7581239 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#setInitialState(State) "
	end

	operation 83214519 "transitionTo"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "destState" type class_ref 7578295 // IState
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#transitionTo(IState) "
	end

	operation 83214647 "deferMessage"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 134839 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#deferMessage(Message) "
	end

	operation 83214775 "quit"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#quit() "
	end

	operation 83214903 "quitNow"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#quitNow() "
	end

	operation 83215031 "isQuit"
	  private explicit_return_type "boolean"
	  nparams 1
	    param inout name "msg" type class_ref 134839 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Validate that the message was sent by quit or quitNow. "
	end

	operation 83215159 "isDbg"
	  private explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#isDbg() "
	end

	operation 83215287 "setDbg"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "dbg" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#setDbg(boolean) "
	end
      end

      classrelation 17030071 // mSmHandler (<unidirectional association>)
	relation 17030071 --->
	  a role_name "mSmHandler" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17030071 // mSmHandler (<unidirectional association>)
	  b parent class_ref 7581751 // SmHandler
      end

      classrelation 17030199 // mSmThread (<unidirectional association>)
	relation 17030199 --->
	  a role_name "mSmThread" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17030199 // mSmThread (<unidirectional association>)
	  b parent class_ref 7159991 // HandlerThread
      end

      operation 83215415 "initStateMachine"
	private explicit_return_type "void"
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "looper" type class_ref 134967 // Looper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize.

@param looper for this state machine
@param name of the state machine
"
      end

      operation 83215543 "StateMachine"
	protected explicit_return_type ""
	nparams 1
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor creates a StateMachine with its own thread.

@param name of the state machine
"
      end

      operation 83215671 "StateMachine"
	protected explicit_return_type ""
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "looper" type class_ref 134967 // Looper
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor creates a StateMachine using the looper.

@param name of the state machine
"
      end

      operation 83215799 "StateMachine"
	protected explicit_return_type ""
	nparams 2
	  param inout name "name" explicit_type "String"
	  param inout name "handler" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor creates a StateMachine using the handler.

@param name of the state machine
"
      end

      operation 83215927 "onPreHandleMessage"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies subclass that the StateMachine handler is about to process the Message msg
@param msg The message that is being handled
"
      end

      operation 83216055 "onPostHandleMessage"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies subclass that the StateMachine handler has finished processing the Message msg and
has possibly transitioned to a new state.
@param msg The message that is being handled
"
      end

      operation 83216183 "addState"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "state" type class_ref 7581239 // State
	  param inout name "parent" type class_ref 7581239 // State
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new state to the state machine
@param state the state to add
@param parent the parent of state
"
      end

      operation 83216311 "addState"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "state" type class_ref 7581239 // State
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new state to the state machine, parent will be null
@param state to add
"
      end

      operation 83216439 "setInitialState"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "initialState" type class_ref 7581239 // State
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the initial state. This must be invoked before
and messages are sent to the state machine.

@param initialState is the state which will receive the first message.
"
      end

      operation 83216567 "getCurrentMessage"
	protected return_type class_ref 134839 // Message
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return current message
"
      end

      operation 83216695 "getCurrentState"
	protected return_type class_ref 7578295 // IState
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return current state
"
      end

      operation 83216823 "transitionTo"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "destState" type class_ref 7578295 // IState
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "transition to destination state. Upon returning
from processMessage the current state's exit will
be executed and upon the next message arriving
destState.enter will be invoked.

this function can also be called inside the enter function of the
previous transition target, but the behavior is undefined when it is
called mid-way through a previous transition (for example, calling this
in the enter() routine of a intermediate node when the current transition
target is one of the nodes descendants).

@param destState will be the state that receives the next message.
"
      end

      operation 83216951 "transitionToHaltingState"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "transition to halt state. Upon returning
from processMessage we will exit all current
states, execute the onHalting() method and then
for all subsequent messages haltedProcessMessage
will be called.
"
      end

      operation 83217079 "deferMessage"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defer this message until next state transition.
Upon transitioning all deferred messages will be
placed on the queue and reprocessed in the original
order. (i.e. The next state the oldest messages will
be processed first)

@param msg is deferred until the next transition.
"
      end

      operation 83217207 "unhandledMessage"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when message wasn't handled

@param msg that couldn't be handled.
"
      end

      operation 83217335 "haltedProcessMessage"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called for any message that is received after
transitionToHalting is called.
"
      end

      operation 83217463 "onHalting"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will be called once after handling a message that called
transitionToHalting. All subsequent messages will invoke
{@link StateMachine#haltedProcessMessage(Message)}
"
      end

      operation 83217591 "onQuitting"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will be called once after a quit message that was NOT handled by
the derived StateMachine. The StateMachine will stop and any subsequent messages will be
ignored. In addition, if this StateMachine created the thread, the thread will
be stopped after this method returns.
"
      end

      operation 83217719 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the name
"
      end

      operation 83217847 "setLogRecSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxSize" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set number of log records to maintain and clears all current records.

@param maxSize number of messages to maintain at anyone time.
"
      end

      operation 83217975 "setLogOnlyTransitions"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set to log only messages that cause a state transition

@param enable {@code true} to enable, {@code false} to disable
"
      end

      operation 83218103 "getLogRecSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return number of log records
"
      end

      operation 83218231 "getLogRecCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the total number of records processed
"
      end

      operation 83218359 "getLogRec"
	public return_type class_ref 7581495 // LogRec
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return a log record, or null if index is out of range
"
      end

      operation 83218487 "copyLogRecs"
	public return_type class_ref 7581495 // LogRec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Collection<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return a copy of LogRecs as a collection
"
      end

      operation 83218615 "addLogRec"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "string" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add the string to LogRecords.

@param string
"
      end

      operation 83218743 "recordLogRec"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if msg should be saved in the log, default is true.
"
      end

      operation 83218871 "getLogRecString"
	protected explicit_return_type "String"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a string to be logged by LogRec, default
is an empty string. Override if additional information is desired.

@param msg that was processed
@return information to be logged as a String
"
      end

      operation 83218999 "getWhatToString"
	protected explicit_return_type "String"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the string for msg.what
"
      end

      operation 83219127 "getHandler"
	public return_type class_ref 6926391 // Handler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return Handler, maybe null if state machine has quit.
"
      end

      operation 83219255 "obtainMessage"
	public return_type class_ref 134839 // Message
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a message and set Message.target state machine handler.

Note: The handler can be null if the state machine has quit,
which means target will be null and may cause a AndroidRuntimeException
in MessageQueue#enqueMessage if sent directly or if sent using
StateMachine#sendMessage the message will just be ignored.

@return  A Message object from the global pool
"
      end

      operation 83219383 "obtainMessage"
	public return_type class_ref 134839 // Message
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a message and set Message.target state machine handler, what.

Note: The handler can be null if the state machine has quit,
which means target will be null and may cause a AndroidRuntimeException
in MessageQueue#enqueMessage if sent directly or if sent using
StateMachine#sendMessage the message will just be ignored.

@param what is the assigned to Message.what.
@return  A Message object from the global pool
"
      end

      operation 83219511 "obtainMessage"
	public return_type class_ref 134839 // Message
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a message and set Message.target state machine handler,
what and obj.

Note: The handler can be null if the state machine has quit,
which means target will be null and may cause a AndroidRuntimeException
in MessageQueue#enqueMessage if sent directly or if sent using
StateMachine#sendMessage the message will just be ignored.

@param what is the assigned to Message.what.
@param obj is assigned to Message.obj.
@return  A Message object from the global pool
"
      end

      operation 83219639 "obtainMessage"
	public return_type class_ref 134839 // Message
	nparams 2
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a message and set Message.target state machine handler,
what, arg1 and arg2

Note: The handler can be null if the state machine has quit,
which means target will be null and may cause a AndroidRuntimeException
in MessageQueue#enqueMessage if sent directly or if sent using
StateMachine#sendMessage the message will just be ignored.

@param what  is assigned to Message.what
@param arg1  is assigned to Message.arg1
@return  A Message object from the global pool
"
      end

      operation 83219767 "obtainMessage"
	public return_type class_ref 134839 // Message
	nparams 3
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a message and set Message.target state machine handler,
what, arg1 and arg2

Note: The handler can be null if the state machine has quit,
which means target will be null and may cause a AndroidRuntimeException
in MessageQueue#enqueMessage if sent directly or if sent using
StateMachine#sendMessage the message will just be ignored.

@param what  is assigned to Message.what
@param arg1  is assigned to Message.arg1
@param arg2  is assigned to Message.arg2
@return  A Message object from the global pool
"
      end

      operation 83219895 "obtainMessage"
	public return_type class_ref 134839 // Message
	nparams 4
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a message and set Message.target state machine handler,
what, arg1, arg2 and obj

Note: The handler can be null if the state machine has quit,
which means target will be null and may cause a AndroidRuntimeException
in MessageQueue#enqueMessage if sent directly or if sent using
StateMachine#sendMessage the message will just be ignored.

@param what  is assigned to Message.what
@param arg1  is assigned to Message.arg1
@param arg2  is assigned to Message.arg2
@param obj is assigned to Message.obj
@return  A Message object from the global pool
"
      end

      operation 83220023 "sendMessage"
	public explicit_return_type "void"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine.

Message is ignored if state machine has quit.
"
      end

      operation 83220151 "sendMessage"
	public explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine.

Message is ignored if state machine has quit.
"
      end

      operation 83220279 "sendMessage"
	public explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine.

Message is ignored if state machine has quit.
"
      end

      operation 83220407 "sendMessage"
	public explicit_return_type "void"
	nparams 3
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine.

Message is ignored if state machine has quit.
"
      end

      operation 83220535 "sendMessage"
	public explicit_return_type "void"
	nparams 4
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine.

Message is ignored if state machine has quit.
"
      end

      operation 83220663 "sendMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine.

Message is ignored if state machine has quit.
"
      end

      operation 83220791 "sendMessageDelayed"
	public explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "int"
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine after a delay.

Message is ignored if state machine has quit.
"
      end

      operation 83220919 "sendMessageDelayed"
	public explicit_return_type "void"
	nparams 3
	  param in name "what" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine after a delay.

Message is ignored if state machine has quit.
"
      end

      operation 83221047 "sendMessageDelayed"
	public explicit_return_type "void"
	nparams 3
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine after a delay.

Message is ignored if state machine has quit.
"
      end

      operation 83221175 "sendMessageDelayed"
	public explicit_return_type "void"
	nparams 4
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine after a delay.

Message is ignored if state machine has quit.
"
      end

      operation 83221303 "sendMessageDelayed"
	public explicit_return_type "void"
	nparams 5
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine after a delay.

Message is ignored if state machine has quit.
"
      end

      operation 83221431 "sendMessageDelayed"
	public explicit_return_type "void"
	nparams 2
	  param inout name "msg" type class_ref 134839 // Message
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine after a delay.

Message is ignored if state machine has quit.
"
      end

      operation 83221559 "sendMessageAtFrontOfQueue"
	protected explicit_return_type "void"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to the front of the queue for this state machine.
Protected, may only be called by instances of StateMachine.

Message is ignored if state machine has quit.
"
      end

      operation 83221687 "sendMessageAtFrontOfQueue"
	protected explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to the front of the queue for this state machine.
Protected, may only be called by instances of StateMachine.

Message is ignored if state machine has quit.
"
      end

      operation 83221815 "sendMessageAtFrontOfQueue"
	protected explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to the front of the queue for this state machine.
Protected, may only be called by instances of StateMachine.

Message is ignored if state machine has quit.
"
      end

      operation 83221943 "sendMessageAtFrontOfQueue"
	protected explicit_return_type "void"
	nparams 3
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to the front of the queue for this state machine.
Protected, may only be called by instances of StateMachine.

Message is ignored if state machine has quit.
"
      end

      operation 83222071 "sendMessageAtFrontOfQueue"
	protected explicit_return_type "void"
	nparams 4
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to the front of the queue for this state machine.
Protected, may only be called by instances of StateMachine.

Message is ignored if state machine has quit.
"
      end

      operation 83222199 "sendMessageAtFrontOfQueue"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to the front of the queue for this state machine.
Protected, may only be called by instances of StateMachine.

Message is ignored if state machine has quit.
"
      end

      operation 83222327 "removeMessages"
	protected explicit_return_type "void"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a message from the message queue.
Protected, may only be called by instances of StateMachine.
"
      end

      operation 83222455 "removeDeferredMessages"
	protected explicit_return_type "void"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a message from the deferred messages queue.
"
      end

      operation 83222583 "hasDeferredMessages"
	protected explicit_return_type "boolean"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if there are any pending messages with code 'what' in deferred messages queue.
"
      end

      operation 83222711 "hasMessages"
	protected explicit_return_type "boolean"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if there are any pending posts of messages with code 'what' in
the message queue. This does NOT check messages in deferred message queue.
"
      end

      operation 83222839 "isQuit"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "msg" type class_ref 134839 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validate that the message was sent by
{@link StateMachine#quit} or {@link StateMachine#quitNow}.
"
      end

      operation 83222967 "quit"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Quit the state machine after all currently queued up messages are processed.
"
      end

      operation 83223095 "quitNow"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Quit the state machine immediately all currently queued messages will be discarded.
"
      end

      operation 83223223 "isDbg"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return if debugging is enabled
"
      end

      operation 83223351 "setDbg"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dbg" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set debug enable/disabled.

@param dbg is true to enable debugging.
"
      end

      operation 83223479 "start"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start the state machine.
"
      end

      operation 83223607 "dump"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "args" explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dump the current state.

@param fd
@param pw
@param args
"
      end

      operation 83223735 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83223863 "logAndAddLogRec"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Log with debug and add to the LogRecords.

@param s is string log
"
      end

      operation 83223991 "log"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Log with debug

@param s is string log
"
      end

      operation 83224119 "logd"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Log with debug attribute

@param s is string log
"
      end

      operation 83224247 "logv"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Log with verbose attribute

@param s is string log
"
      end

      operation 83224375 "logi"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Log with info attribute

@param s is string log
"
      end

      operation 83224503 "logw"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Log with warning attribute

@param s is string log
"
      end

      operation 83224631 "loge"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "s" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Log with error attribute

@param s is string log
"
      end

      operation 83224759 "loge"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "s" explicit_type "String"
	  param inout name "e" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Log with error attribute

@param s is string log
@param e is a Throwable which logs additional information.
"
      end
    end

    class 7582263 "TypedProperties"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A {@code Map} that publishes a set of typed properties, defined by
zero or more {@code Reader}s containing textual definitions and assignments.
"
      classrelation 17030327 // <realization>
	relation 17030327 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}<String, Object>"
	    classrelation_ref 17030327 // <realization>
	  b parent class_ref 7561655 // HashMap
      end

      operation 83224887 "initTokenizer"
	class_operation package explicit_return_type "StreamTokenizer"
	nparams 1
	  param inout name "r" explicit_type "Reader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiates a {@link java.io.StreamTokenizer} and sets its syntax tables
appropriately for the {@code TypedProperties} file format.

@param r The {@code Reader} that the {@code StreamTokenizer} will read from
@return a newly-created and initialized {@code StreamTokenizer}
"
      end

      class 7582391 "ParseException"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17030455 // <generalisation>
	  relation 17030455 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17030455 // <generalisation>
	    b parent class_ref 7582519 // IllegalArgumentException
	end

	operation 83225015 "ParseException"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "state" explicit_type "StreamTokenizer"
	    param inout name "expected" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 26511159 "TYPE_UNSET"
	class_attribute const_attribute package explicit_type "int"
	init_value " 'x'"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Constants used to represent the supported types.
"
      end

      attribute 26511287 "TYPE_BOOLEAN"
	class_attribute const_attribute package explicit_type "int"
	init_value " 'Z'"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26511415 "TYPE_BYTE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 'I' | 1 << 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26511543 "TYPE_SHORT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 'I' | 2 << 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " TYPE_CHAR: character literal syntax not supported; use short.
"
      end

      attribute 26511671 "TYPE_INT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 'I' | 4 << 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26511799 "TYPE_LONG"
	class_attribute const_attribute package explicit_type "int"
	init_value " 'I' | 8 << 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26511927 "TYPE_FLOAT"
	class_attribute const_attribute package explicit_type "int"
	init_value " 'F' | 4 << 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26512055 "TYPE_DOUBLE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 'F' | 8 << 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26512183 "TYPE_STRING"
	class_attribute const_attribute package explicit_type "int"
	init_value " 'L' | 's' << 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26512311 "TYPE_ERROR"
	class_attribute const_attribute package explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83225143 "interpretType"
	class_operation package explicit_return_type "int"
	nparams 1
	  param inout name "typeName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a string to an internal type constant.

@param typeName the type name to convert
@return the type constant that corresponds to {@code typeName},
        or {@code TYPE_ERROR} if the type is unknown
"
      end

      operation 83225271 "parse"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "r" explicit_type "Reader"
	  param inout name "map" explicit_type "Map<String, Object>"
	nexceptions 2
	  exception class_ref 7582391 // ParseException
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the data in the reader.

@param r The {@code Reader} containing input data to parse
@param map The {@code Map} to insert parameter values into
@throws ParseException if the input data is malformed
@throws IOException if there is a problem reading from the {@code Reader}
"
      end

      operation 83225399 "parseValue"
	class_operation package explicit_return_type "Object"
	nparams 2
	  param inout name "st" explicit_type "StreamTokenizer"
	  param in name "type" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the next token in the StreamTokenizer as the specified type.

@param st The token source
@param type The type to interpret next token as
@return a Boolean, Number subclass, or String representing the value.
        Null strings are represented by the String instance NULL_STRING
@throws IOException if there is a problem reading from the {@code StreamTokenizer}
"
      end

      operation 83225527 "TypedProperties"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty TypedProperties instance.
"
      end

      operation 83225655 "load"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" explicit_type "Reader"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads zero or more properties from the specified Reader.
Properties that have already been loaded are preserved unless
the new Reader overrides or unsets earlier values for the
same properties.
<p>
File syntax:
<blockquote>
    <tt>
    &lt;type&gt; &lt;property-name&gt; = &lt;value&gt; ;
    <br />
    unset ( &lt;property-name&gt; ) ;
    </tt>
    <p>
    \"//\" comments everything until the end of the line.
    \"/&#2a;\" comments everything until the next appearance of \"&#2a;/\".
    <p>
    Blank lines are ignored.
    <p>
    The only required whitespace is between the type and
    the property name.
    <p>
    &lt;type&gt; is one of {boolean, byte, short, int, long,
    float, double, String}, and is case-sensitive.
    <p>
    &lt;property-name&gt; is a valid fully-qualified class name
    (one or more valid identifiers separated by dot characters).
    <p>
    &lt;value&gt; depends on the type:
    <ul>
    <li> boolean: one of {true, false} (case-sensitive)
    <li> byte, short, int, long: a valid Java integer constant
         (including non-base-10 constants like 0xabc and 074)
         whose value does not overflow the type.  NOTE: these are
         interpreted as Java integer values, so they are all signed.
    <li> float, double: a valid Java floating-point constant.
         If the type is float, the value must fit in 32 bits.
    <li> String: a double-quoted string value, or the word {@code null}.
         NOTE: the contents of the string must be 7-bit clean ASCII;
         C-style octal escapes are recognized, but Unicode escapes are not.
    </ul>
    <p>
    Passing a property-name to {@code unset()} will unset the property,
    removing its value and type information, as if it had never been
    defined.
</blockquote>

@param r The Reader to load properties from
@throws IOException if an error occurs when reading the data
@throws IllegalArgumentException if the data is malformed
"
      end

      operation 83225783 "get"
	public explicit_return_type "Object"
	nparams 1
	  param inout name "key" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 7582647 "TypeException"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17030711 // <generalisation>
	  relation 17030711 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17030711 // <generalisation>
	    b parent class_ref 7582519 // IllegalArgumentException
	end

	operation 83225911 "TypeException"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "property" explicit_type "String"
	    param inout name "value" explicit_type "Object"
	    param inout name "requestedType" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 83226039 "getBoolean"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "property" explicit_type "String"
	  param inout name "def" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a boolean property, or the default if the property
has not been defined.

@param property The name of the property to return
@param def The default value to return if the property is not set
@return the value of the property
@throws TypeException if the property is set and is not a boolean
"
      end

      operation 83226167 "getByte"
	public explicit_return_type "byte"
	nparams 2
	  param inout name "property" explicit_type "String"
	  param in name "def" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a byte property, or the default if the property
has not been defined.

@param property The name of the property to return
@param def The default value to return if the property is not set
@return the value of the property
@throws TypeException if the property is set and is not a byte
"
      end

      operation 83226295 "getShort"
	public explicit_return_type "short"
	nparams 2
	  param inout name "property" explicit_type "String"
	  param in name "def" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a short property, or the default if the property
has not been defined.

@param property The name of the property to return
@param def The default value to return if the property is not set
@return the value of the property
@throws TypeException if the property is set and is not a short
"
      end

      operation 83226423 "getInt"
	public explicit_return_type "int"
	nparams 2
	  param inout name "property" explicit_type "String"
	  param in name "def" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of an integer property, or the default if the property
has not been defined.

@param property The name of the property to return
@param def The default value to return if the property is not set
@return the value of the property
@throws TypeException if the property is set and is not an integer
"
      end

      operation 83226551 "getLong"
	public explicit_return_type "long"
	nparams 2
	  param inout name "property" explicit_type "String"
	  param in name "def" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a long property, or the default if the property
has not been defined.

@param property The name of the property to return
@param def The default value to return if the property is not set
@return the value of the property
@throws TypeException if the property is set and is not a long
"
      end

      operation 83226679 "getFloat"
	public explicit_return_type "float"
	nparams 2
	  param inout name "property" explicit_type "String"
	  param in name "def" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a float property, or the default if the property
has not been defined.

@param property The name of the property to return
@param def The default value to return if the property is not set
@return the value of the property
@throws TypeException if the property is set and is not a float
"
      end

      operation 83226807 "getDouble"
	public explicit_return_type "double"
	nparams 2
	  param inout name "property" explicit_type "String"
	  param in name "def" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a double property, or the default if the property
has not been defined.

@param property The name of the property to return
@param def The default value to return if the property is not set
@return the value of the property
@throws TypeException if the property is set and is not a double
"
      end

      operation 83226935 "getString"
	public explicit_return_type "String"
	nparams 2
	  param inout name "property" explicit_type "String"
	  param inout name "def" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a string property, or the default if the property
has not been defined.

@param property The name of the property to return
@param def The default value to return if the property is not set
@return the value of the property
@throws TypeException if the property is set and is not a string
"
      end

      operation 83227063 "getBoolean"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "property" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Getters with implicit defaults


Returns the value of a boolean property, or false
if the property has not been defined.

@param property The name of the property to return
@return the value of the property
@throws TypeException if the property is set and is not a boolean
"
      end

      operation 83227191 "getByte"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "property" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a byte property, or 0
if the property has not been defined.

@param property The name of the property to return
@return the value of the property
@throws TypeException if the property is set and is not a byte
"
      end

      operation 83227319 "getShort"
	public explicit_return_type "short"
	nparams 1
	  param inout name "property" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a short property, or 0
if the property has not been defined.

@param property The name of the property to return
@return the value of the property
@throws TypeException if the property is set and is not a short
"
      end

      operation 83227447 "getInt"
	public explicit_return_type "int"
	nparams 1
	  param inout name "property" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of an integer property, or 0
if the property has not been defined.

@param property The name of the property to return
@return the value of the property
@throws TypeException if the property is set and is not an integer
"
      end

      operation 83227575 "getLong"
	public explicit_return_type "long"
	nparams 1
	  param inout name "property" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a long property, or 0
if the property has not been defined.

@param property The name of the property to return
@return the value of the property
@throws TypeException if the property is set and is not a long
"
      end

      operation 83227703 "getFloat"
	public explicit_return_type "float"
	nparams 1
	  param inout name "property" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a float property, or 0.0
if the property has not been defined.

@param property The name of the property to return
@return the value of the property
@throws TypeException if the property is set and is not a float
"
      end

      operation 83227831 "getDouble"
	public explicit_return_type "double"
	nparams 1
	  param inout name "property" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a double property, or 0.0
if the property has not been defined.

@param property The name of the property to return
@return the value of the property
@throws TypeException if the property is set and is not a double
"
      end

      operation 83227959 "getString"
	public explicit_return_type "String"
	nparams 1
	  param inout name "property" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a String property, or \"\"
if the property has not been defined.

@param property The name of the property to return
@return the value of the property
@throws TypeException if the property is set and is not a string
"
      end

      attribute 26512439 "STRING_TYPE_MISMATCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Values returned by getStringInfo()
"
      end

      attribute 26512567 "STRING_NOT_SET"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26512695 "STRING_NULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26512823 "STRING_SET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83228087 "getStringInfo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "property" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides string type information about a property.

@param property the property to check
@return STRING_SET if the property is a string and is non-null.
        STRING_NULL if the property is a string and is null.
        STRING_NOT_SET if the property is not set (no type or value).
        STRING_TYPE_MISMATCH if the property is set but is not a string.
"
      end
    end

    class 7582775 "UserIcons"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper class that generates default user icons.
"
      attribute 26512951 "USER_ICON_COLORS"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " {
        R.color.user_icon_1,
        R.color.user_icon_2,
        R.color.user_icon_3,
        R.color.user_icon_4,
        R.color.user_icon_5,
        R.color.user_icon_6,
        R.color.user_icon_7,
        R.color.user_icon_8
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83228215 "convertToBitmap"
	class_operation public return_type class_ref 5824951 // Bitmap
	nparams 1
	  param inout name "icon" type class_ref 5787831 // Drawable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a given drawable to a bitmap.
"
      end

      operation 83228343 "getDefaultUserIcon"
	class_operation public return_type class_ref 5787831 // Drawable
	nparams 2
	  param in name "userId" explicit_type "int"
	  param inout name "light" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a default user icon for the given user.

Note that for guest users, you should pass in {@code UserHandle.USER_NULL}.
@param userId the user id or {@code UserHandle.USER_NULL} for a non-user specific icon
@param light whether we want a light icon (suitable for a dark background)
"
      end
    end

    class 7582903 "VirtualRefBasePtr"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper class that contains a strong reference to a VirtualRefBase native
object. This will incStrong in the ctor, and decStrong in the finalizer
"
      attribute 26513079 "mNativePtr"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83228471 "VirtualRefBasePtr"
	public explicit_return_type ""
	nparams 1
	  param in name "ptr" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83228599 "get"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83228727 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83228855 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83228983 "nIncStrong"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "ptr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end

      operation 83229111 "nDecStrong"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "ptr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	
      end
    end

    class 7583031 "WakeupMessage"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An AlarmListener that sends the specified message to a Handler and keeps the system awake until
the message is processed.

This is useful when using the AlarmManager direct callback interface to wake up the system and
request that an object whose API consists of messages (such as a StateMachine) perform some
action.

In this situation, using AlarmManager.onAlarmListener by itself will wake up the system to send
the message, but does not guarantee that the system will be awake until the target object has
processed it. This is because as soon as the onAlarmListener sends the message and returns, the
AlarmManager releases its wakelock and the system is free to go to sleep again.
"
      classrelation 17030839 // <realization>
	relation 17030839 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17030839 // <realization>
	  b parent class_ref 7003319 // OnAlarmListener
      end

      classrelation 17030967 // mAlarmManager (<unidirectional association>)
	relation 17030967 --->
	  a role_name "mAlarmManager" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17030967 // mAlarmManager (<unidirectional association>)
	  b parent class_ref 7003063 // AlarmManager
      end

      classrelation 17031095 // mHandler (<unidirectional association>)
	relation 17031095 --->
	  a role_name "mHandler" const_relation protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@VisibleForTesting
"
	    classrelation_ref 17031095 // mHandler (<unidirectional association>)
	  b parent class_ref 6926391 // Handler
      end

      attribute 26513207 "mCmd"
	const_attribute protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@VisibleForTesting
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26513335 "mArg1"
	const_attribute protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@VisibleForTesting
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26513463 "mArg2"
	const_attribute protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@VisibleForTesting
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26513591 "mScheduled"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83229239 "WakeupMessage"
	public explicit_return_type ""
	nparams 6
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "handler" type class_ref 6926391 // Handler
	  param inout name "cmdName" explicit_type "String"
	  param in name "cmd" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83229367 "WakeupMessage"
	public explicit_return_type ""
	nparams 5
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "handler" type class_ref 6926391 // Handler
	  param inout name "cmdName" explicit_type "String"
	  param in name "cmd" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83229495 "WakeupMessage"
	public explicit_return_type ""
	nparams 4
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "handler" type class_ref 6926391 // Handler
	  param inout name "cmdName" explicit_type "String"
	  param in name "cmd" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83229623 "schedule"
	public explicit_return_type "void"
	nparams 1
	  param in name "when" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedule the message to be delivered at the time in milliseconds of the
{@link android.os.SystemClock#elapsedRealtime SystemClock.elapsedRealtime()} clock and wakeup
the device when it goes off. If schedule is called multiple times without the message being
dispatched then the alarm is rescheduled to the new time.
"
      end

      operation 83229751 "cancel"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancel all pending messages. This includes alarms that may have been fired, but have not been
run on the handler yet.
"
      end

      operation 83229879 "onAlarm"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7583159 "XmlUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment " {@hide} "
      operation 83230007 "skipCurrentTag"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "parser" explicit_type "XmlPullParser"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83230135 "convertValueToList"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "value" explicit_type "CharSequence"
	  param inout name "options" explicit_type "String"
	multiplicity "[]"
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83230263 "convertValueToBoolean"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "value" explicit_type "CharSequence"
	  param inout name "defaultValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83230391 "convertValueToInt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "charSeq" explicit_type "CharSequence"
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83230519 "convertValueToUnsignedInt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "value" explicit_type "String"
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83230647 "parseUnsignedIntAttribute"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "charSeq" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83230775 "writeMapXml"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "val" explicit_type "Map"
	  param inout name "out" explicit_type "OutputStream"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a Map into an output stream as XML.  The map can later be
read back with readMapXml().

@param val The map to be flattened.
@param out Where to write the XML data.

@see #writeMapXml(Map, String, XmlSerializer)
@see #writeListXml
@see #writeValueXml
@see #readMapXml
"
      end

      operation 83230903 "writeListXml"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "val" explicit_type "List"
	  param inout name "out" explicit_type "OutputStream"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a List into an output stream as XML.  The list can later be
read back with readListXml().

@param val The list to be flattened.
@param out Where to write the XML data.

@see #writeListXml(List, String, XmlSerializer)
@see #writeMapXml
@see #writeValueXml
@see #readListXml
"
      end

      operation 83231031 "writeMapXml"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "val" explicit_type "Map"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a Map into an XmlSerializer.  The map can later be read back
with readThisMapXml().

@param val The map to be flattened.
@param name Name attribute to include with this list's tag, or null for
            none.
@param out XmlSerializer to write the map into.

@see #writeMapXml(Map, OutputStream)
@see #writeListXml
@see #writeValueXml
@see #readMapXml
"
      end

      operation 83231159 "writeMapXml"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "val" explicit_type "Map"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	  param inout name "callback" type class_ref 7583287 // WriteMapCallback
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a Map into an XmlSerializer.  The map can later be read back
with readThisMapXml().

@param val The map to be flattened.
@param name Name attribute to include with this list's tag, or null for
            none.
@param out XmlSerializer to write the map into.
@param callback Method to call when an Object type is not recognized.

@see #writeMapXml(Map, OutputStream)
@see #writeListXml
@see #writeValueXml
@see #readMapXml

@hide
"
      end

      class 7583287 "WriteMapCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83237815 "writeUnknownObject"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "v" explicit_type "Object"
	    param inout name "name" explicit_type "String"
	    param inout name "out" explicit_type "XmlSerializer"
	  nexceptions 2
	    explicit_exception "XmlPullParserException"
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called from writeMapXml when an Object type is not recognized. The implementer
must write out the entire element including start and end tags.

@param v The object to be written out
@param name The mapping key for v. Must be written into the \"name\" attribute of the
            start tag.
@param out The XML output stream.
@throws XmlPullParserException on unrecognized Object type.
@throws IOException on XmlSerializer serialization errors.
@hide
"
	end
      end

      operation 83231287 "writeMapXml"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "val" explicit_type "Map"
	  param inout name "out" explicit_type "XmlSerializer"
	  param inout name "callback" type class_ref 7583287 // WriteMapCallback
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a Map into an XmlSerializer.  The map can later be read back
with readThisMapXml(). This method presumes that the start tag and
name attribute have already been written and does not write an end tag.

@param val The map to be flattened.
@param out XmlSerializer to write the map into.

@see #writeMapXml(Map, OutputStream)
@see #writeListXml
@see #writeValueXml
@see #readMapXml

@hide
"
      end

      operation 83231415 "writeListXml"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "val" explicit_type "List"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a List into an XmlSerializer.  The list can later be read back
with readThisListXml().

@param val The list to be flattened.
@param name Name attribute to include with this list's tag, or null for
            none.
@param out XmlSerializer to write the list into.

@see #writeListXml(List, OutputStream)
@see #writeMapXml
@see #writeValueXml
@see #readListXml
"
      end

      operation 83231543 "writeSetXml"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "val" explicit_type "Set"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83231671 "writeByteArrayXml"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "val" explicit_type "byte"
	multiplicity "[]"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a byte[] into an XmlSerializer.  The list can later be read back
with readThisByteArrayXml().

@param val The byte array to be flattened.
@param name Name attribute to include with this array's tag, or null for
            none.
@param out XmlSerializer to write the array into.

@see #writeMapXml
@see #writeValueXml
"
      end

      operation 83231799 "writeIntArrayXml"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "val" explicit_type "int"
	multiplicity "[]"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten an int[] into an XmlSerializer.  The list can later be read back
with readThisIntArrayXml().

@param val The int array to be flattened.
@param name Name attribute to include with this array's tag, or null for
            none.
@param out XmlSerializer to write the array into.

@see #writeMapXml
@see #writeValueXml
@see #readThisIntArrayXml
"
      end

      operation 83231927 "writeLongArrayXml"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "val" explicit_type "long"
	multiplicity "[]"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a long[] into an XmlSerializer.  The list can later be read back
with readThisLongArrayXml().

@param val The long array to be flattened.
@param name Name attribute to include with this array's tag, or null for
            none.
@param out XmlSerializer to write the array into.

@see #writeMapXml
@see #writeValueXml
@see #readThisIntArrayXml
"
      end

      operation 83232055 "writeDoubleArrayXml"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "val" explicit_type "double"
	multiplicity "[]"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a double[] into an XmlSerializer.  The list can later be read back
with readThisDoubleArrayXml().

@param val The double array to be flattened.
@param name Name attribute to include with this array's tag, or null for
            none.
@param out XmlSerializer to write the array into.

@see #writeMapXml
@see #writeValueXml
@see #readThisIntArrayXml
"
      end

      operation 83232183 "writeStringArrayXml"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "val" explicit_type "String"
	multiplicity "[]"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a String[] into an XmlSerializer.  The list can later be read back
with readThisStringArrayXml().

@param val The String array to be flattened.
@param name Name attribute to include with this array's tag, or null for
            none.
@param out XmlSerializer to write the array into.

@see #writeMapXml
@see #writeValueXml
@see #readThisIntArrayXml
"
      end

      operation 83232311 "writeBooleanArrayXml"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "val" explicit_type "boolean"
	multiplicity "[]"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a boolean[] into an XmlSerializer.  The list can later be read back
with readThisBooleanArrayXml().

@param val The boolean array to be flattened.
@param name Name attribute to include with this array's tag, or null for
            none.
@param out XmlSerializer to write the array into.

@see #writeMapXml
@see #writeValueXml
@see #readThisIntArrayXml
"
      end

      operation 83232439 "writeValueXml"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "v" explicit_type "Object"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten an object's value into an XmlSerializer.  The value can later
be read back with readThisValueXml().

Currently supported value types are: null, String, Integer, Long,
Float, Double Boolean, Map, List.

@param v The object to be flattened.
@param name Name attribute to include with this value's tag, or null
            for none.
@param out XmlSerializer to write the object into.

@see #writeMapXml
@see #writeListXml
@see #readValueXml
"
      end

      operation 83232567 "writeValueXml"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "v" explicit_type "Object"
	  param inout name "name" explicit_type "String"
	  param inout name "out" explicit_type "XmlSerializer"
	  param inout name "callback" type class_ref 7583287 // WriteMapCallback
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten an object's value into an XmlSerializer.  The value can later
be read back with readThisValueXml().

Currently supported value types are: null, String, Integer, Long,
Float, Double Boolean, Map, List.

@param v The object to be flattened.
@param name Name attribute to include with this value's tag, or null
            for none.
@param out XmlSerializer to write the object into.
@param callback Handler for Object types not recognized.

@see #writeMapXml
@see #writeListXml
@see #readValueXml
"
      end

      operation 83232695 "readMapXml"
	class_operation public explicit_return_type "String"
	nparams 1
	  param inout name "in" explicit_type "InputStream"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}HashMap<${type}, ?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Read a HashMap from an InputStream containing XML.  The stream can
previously have been written by writeMapXml().

@param in The InputStream from which to read.

@return HashMap The resulting map.

@see #readListXml
@see #readValueXml
@see #readThisMapXml
#see #writeMapXml
"
      end

      operation 83232823 "readListXml"
	class_operation public explicit_return_type "ArrayList"
	nparams 1
	  param inout name "in" explicit_type "InputStream"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read an ArrayList from an InputStream containing XML.  The stream can
previously have been written by writeListXml().

@param in The InputStream from which to read.

@return ArrayList The resulting list.

@see #readMapXml
@see #readValueXml
@see #readThisListXml
@see #writeListXml
"
      end

      operation 83232951 "readSetXml"
	class_operation public explicit_return_type "HashSet"
	nparams 1
	  param inout name "in" explicit_type "InputStream"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a HashSet from an InputStream containing XML. The stream can
previously have been written by writeSetXml().

@param in The InputStream from which to read.

@return HashSet The resulting set.

@throws XmlPullParserException
@throws java.io.IOException

@see #readValueXml
@see #readThisSetXml
@see #writeSetXml
"
      end

      operation 83233079 "readThisMapXml"
	class_operation public explicit_return_type "String"
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}HashMap<${type}, ?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a HashMap object from an XmlPullParser.  The XML data could
previously have been generated by writeMapXml().  The XmlPullParser
must be positioned <em>after</em> the tag that begins the map.

@param parser The XmlPullParser from which to read the map data.
@param endTag Name of the tag that will end the map, usually \"map\".
@param name An array of one string, used to return the name attribute
            of the map's tag.

@return HashMap The newly generated map.

@see #readMapXml
"
      end

      operation 83233207 "readThisMapXml"
	class_operation public explicit_return_type "String"
	nparams 4
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	  param inout name "callback" type class_ref 7583415 // ReadMapCallback
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}HashMap<${type}, ?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a HashMap object from an XmlPullParser.  The XML data could
previously have been generated by writeMapXml().  The XmlPullParser
must be positioned <em>after</em> the tag that begins the map.

@param parser The XmlPullParser from which to read the map data.
@param endTag Name of the tag that will end the map, usually \"map\".
@param name An array of one string, used to return the name attribute
            of the map's tag.

@return HashMap The newly generated map.

@see #readMapXml
@hide
"
      end

      class 7583415 "ReadMapCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83237943 "readThisUnknownObjectXml"
	  public explicit_return_type "Object"
	  nparams 2
	    param inout name "in" explicit_type "XmlPullParser"
	    param inout name "tag" explicit_type "String"
	  nexceptions 2
	    explicit_exception "XmlPullParserException"
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called from readThisMapXml when a START_TAG is not recognized. The input stream
is positioned within the start tag so that attributes can be read using in.getAttribute.

@param in the XML input stream
@param tag the START_TAG that was not recognized.
@return the Object parsed from the stream which will be put into the map.
@throws XmlPullParserException if the START_TAG is not recognized.
@throws IOException on XmlPullParser serialization errors.
@hide
"
	end
      end

      operation 83233335 "readThisArrayMapXml"
	class_operation public return_type class_ref 6930743 // ArrayMap
	nparams 4
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	  param inout name "callback" type class_ref 7583415 // ReadMapCallback
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, ?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #readThisMapXml}, but returns an ArrayMap instead of HashMap.
@hide
"
      end

      operation 83233463 "readThisListXml"
	class_operation public explicit_return_type "ArrayList"
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read an ArrayList object from an XmlPullParser.  The XML data could
previously have been generated by writeListXml().  The XmlPullParser
must be positioned <em>after</em> the tag that begins the list.

@param parser The XmlPullParser from which to read the list data.
@param endTag Name of the tag that will end the list, usually \"list\".
@param name An array of one string, used to return the name attribute
            of the list's tag.

@return HashMap The newly generated list.

@see #readListXml
"
      end

      operation 83233591 "readThisListXml"
	class_operation private explicit_return_type "ArrayList"
	nparams 5
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	  param inout name "callback" type class_ref 7583415 // ReadMapCallback
	  param inout name "arrayMap" explicit_type "boolean"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read an ArrayList object from an XmlPullParser.  The XML data could
previously have been generated by writeListXml().  The XmlPullParser
must be positioned <em>after</em> the tag that begins the list.

@param parser The XmlPullParser from which to read the list data.
@param endTag Name of the tag that will end the list, usually \"list\".
@param name An array of one string, used to return the name attribute
            of the list's tag.

@return HashMap The newly generated list.

@see #readListXml
"
      end

      operation 83233719 "readThisSetXml"
	class_operation public explicit_return_type "HashSet"
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a HashSet object from an XmlPullParser. The XML data could previously
have been generated by writeSetXml(). The XmlPullParser must be positioned
<em>after</em> the tag that begins the set.

@param parser The XmlPullParser from which to read the set data.
@param endTag Name of the tag that will end the set, usually \"set\".
@param name An array of one string, used to return the name attribute
            of the set's tag.

@return HashSet The newly generated set.

@throws XmlPullParserException
@throws java.io.IOException

@see #readSetXml
"
      end

      operation 83233847 "readThisSetXml"
	class_operation private explicit_return_type "HashSet"
	nparams 5
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	  param inout name "callback" type class_ref 7583415 // ReadMapCallback
	  param inout name "arrayMap" explicit_type "boolean"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a HashSet object from an XmlPullParser. The XML data could previously
have been generated by writeSetXml(). The XmlPullParser must be positioned
<em>after</em> the tag that begins the set.

@param parser The XmlPullParser from which to read the set data.
@param endTag Name of the tag that will end the set, usually \"set\".
@param name An array of one string, used to return the name attribute
            of the set's tag.

@return HashSet The newly generated set.

@throws XmlPullParserException
@throws java.io.IOException

@see #readSetXml
@hide
"
      end

      operation 83233975 "readThisIntArrayXml"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read an int[] object from an XmlPullParser.  The XML data could
previously have been generated by writeIntArrayXml().  The XmlPullParser
must be positioned <em>after</em> the tag that begins the list.

@param parser The XmlPullParser from which to read the list data.
@param endTag Name of the tag that will end the list, usually \"list\".
@param name An array of one string, used to return the name attribute
            of the list's tag.

@return Returns a newly generated int[].

@see #readListXml
"
      end

      operation 83234103 "readThisLongArrayXml"
	class_operation public explicit_return_type "long"
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a long[] object from an XmlPullParser.  The XML data could
previously have been generated by writeLongArrayXml().  The XmlPullParser
must be positioned <em>after</em> the tag that begins the list.

@param parser The XmlPullParser from which to read the list data.
@param endTag Name of the tag that will end the list, usually \"list\".
@param name An array of one string, used to return the name attribute
            of the list's tag.

@return Returns a newly generated long[].

@see #readListXml
"
      end

      operation 83234231 "readThisDoubleArrayXml"
	class_operation public explicit_return_type "double"
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a double[] object from an XmlPullParser.  The XML data could
previously have been generated by writeDoubleArrayXml().  The XmlPullParser
must be positioned <em>after</em> the tag that begins the list.

@param parser The XmlPullParser from which to read the list data.
@param endTag Name of the tag that will end the list, usually \"double-array\".
@param name An array of one string, used to return the name attribute
            of the list's tag.

@return Returns a newly generated double[].

@see #readListXml
"
      end

      operation 83234359 "readThisStringArrayXml"
	class_operation public explicit_return_type "String"
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a String[] object from an XmlPullParser.  The XML data could
previously have been generated by writeStringArrayXml().  The XmlPullParser
must be positioned <em>after</em> the tag that begins the list.

@param parser The XmlPullParser from which to read the list data.
@param endTag Name of the tag that will end the list, usually \"string-array\".
@param name An array of one string, used to return the name attribute
            of the list's tag.

@return Returns a newly generated String[].

@see #readListXml
"
      end

      operation 83234487 "readThisBooleanArrayXml"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "endTag" explicit_type "String"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a boolean[] object from an XmlPullParser.  The XML data could
previously have been generated by writeBooleanArrayXml().  The XmlPullParser
must be positioned <em>after</em> the tag that begins the list.

@param parser The XmlPullParser from which to read the list data.
@param endTag Name of the tag that will end the list, usually \"string-array\".
@param name An array of one string, used to return the name attribute
            of the list's tag.

@return Returns a newly generated boolean[].

@see #readListXml
"
      end

      operation 83234615 "readValueXml"
	class_operation public explicit_return_type "Object"
	nparams 2
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a flattened object from an XmlPullParser.  The XML data could
previously have been written with writeMapXml(), writeListXml(), or
writeValueXml().  The XmlPullParser must be positioned <em>at</em> the
tag that defines the value.

@param parser The XmlPullParser from which to read the object.
@param name An array of one string, used to return the name attribute
            of the value's tag.

@return Object The newly generated value object.

@see #readMapXml
@see #readListXml
@see #writeValueXml
"
      end

      operation 83234743 "readThisValueXml"
	class_operation private explicit_return_type "Object"
	nparams 4
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	multiplicity "[]"
	  param inout name "callback" type class_ref 7583415 // ReadMapCallback
	  param inout name "arrayMap" explicit_type "boolean"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83234871 "readThisPrimitiveValueXml"
	class_operation private explicit_return_type "Object"
	nparams 2
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "tagName" explicit_type "String"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "java.io.IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83234999 "beginDocument"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "firstElementName" explicit_type "String"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83235127 "nextElement"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "parser" explicit_type "XmlPullParser"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83235255 "nextElementWithin"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "parser" explicit_type "XmlPullParser"
	  param in name "outerDepth" explicit_type "int"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "XmlPullParserException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83235383 "readIntAttribute"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "in" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83235511 "readIntAttribute"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "in" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83235639 "writeIntAttribute"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "out" explicit_type "XmlSerializer"
	  param inout name "name" explicit_type "String"
	  param in name "value" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83235767 "readLongAttribute"
	class_operation public explicit_return_type "long"
	nparams 3
	  param inout name "in" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83235895 "readLongAttribute"
	class_operation public explicit_return_type "long"
	nparams 2
	  param inout name "in" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83236023 "writeLongAttribute"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "out" explicit_type "XmlSerializer"
	  param inout name "name" explicit_type "String"
	  param in name "value" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83236151 "readFloatAttribute"
	class_operation public explicit_return_type "float"
	nparams 2
	  param inout name "in" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83236279 "writeFloatAttribute"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "out" explicit_type "XmlSerializer"
	  param inout name "name" explicit_type "String"
	  param in name "value" explicit_type "float"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83236407 "readBooleanAttribute"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "in" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83236535 "readBooleanAttribute"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "in" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	  param inout name "defaultValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83236663 "writeBooleanAttribute"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "out" explicit_type "XmlSerializer"
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83236791 "readUriAttribute"
	class_operation public return_type class_ref 6927159 // Uri
	nparams 2
	  param inout name "in" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83236919 "writeUriAttribute"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "out" explicit_type "XmlSerializer"
	  param inout name "name" explicit_type "String"
	  param inout name "value" type class_ref 6927159 // Uri
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83237047 "readStringAttribute"
	class_operation public explicit_return_type "String"
	nparams 2
	  param inout name "in" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83237175 "writeStringAttribute"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "out" explicit_type "XmlSerializer"
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "String"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83237303 "readByteArrayAttribute"
	class_operation public explicit_return_type "byte"
	nparams 2
	  param inout name "in" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83237431 "writeByteArrayAttribute"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "out" explicit_type "XmlSerializer"
	  param inout name "name" explicit_type "String"
	  param inout name "value" explicit_type "byte"
	multiplicity "[]"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83237559 "readBitmapAttribute"
	class_operation public return_type class_ref 5824951 // Bitmap
	nparams 2
	  param inout name "in" explicit_type "XmlPullParser"
	  param inout name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83237687 "writeBitmapAttribute"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "out" explicit_type "XmlSerializer"
	  param inout name "name" explicit_type "String"
	  param inout name "value" type class_ref 5824951 // Bitmap
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
      end
    end
  end

  deploymentview 433207 "util"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 3048375 "ArrayUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.util.ArraySet;
import dalvik.system.VMRuntime;
import libcore.util.EmptyArray;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Objects;
${definition}"
      associated_classes
	class_ref 7574071 // ArrayUtils
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3048503 "AsyncChannel"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.IBinder;
import android.os.Looper;
import android.os.Message;
import android.os.Messenger;
import android.os.RemoteException;
import android.util.Slog;
import java.util.Stack;
${definition}"
      associated_classes
	class_ref 7574199 // AsyncChannel
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3048631 "AsyncService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Service;
import android.content.Intent;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.Messenger;
import android.util.Slog;
${definition}"
      associated_classes
	class_ref 7574583 // AsyncService
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3048759 "BitwiseInputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7575095 // BitwiseInputStream
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3048887 "BitwiseOutputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7575351 // BitwiseOutputStream
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3049015 "CallbackRegistry"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 7575607 // CallbackRegistry
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3049143 "CharSequences"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7575863 // CharSequences
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3049271 "DumpUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import java.io.PrintWriter;
import java.io.StringWriter;
${definition}"
      associated_classes
	class_ref 7575991 // DumpUtils
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3049399 "FastMath"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7576247 // FastMath
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3049527 "FastPrintWriter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import android.util.Printer;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import java.nio.charset.CoderResult;
import java.nio.charset.CodingErrorAction;
${definition}"
      associated_classes
	class_ref 7576375 // FastPrintWriter
      end
    end

    artifact 3049655 "FastXmlSerializer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.xmlpull.v1.XmlSerializer;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import java.nio.charset.CoderResult;
import java.nio.charset.CodingErrorAction;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
${definition}"
      associated_classes
	class_ref 7576887 // FastXmlSerializer
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3049783 "FileRotator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.FileUtils;
import android.util.Slog;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import libcore.io.IoUtils;
import libcore.io.Streams;
${definition}"
      associated_classes
	class_ref 7577143 // FileRotator
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3049911 "GrowingArrayUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7577783 // GrowingArrayUtils
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3050039 "HexDump"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7577911 // HexDump
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3050167 "ImageUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.PorterDuff;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
${definition}"
      associated_classes
	class_ref 7578039 // ImageUtils
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License
"
    end

    artifact 3050295 "IndentingPrintWriter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.PrintWriter;
import java.io.Writer;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 7578167 // IndentingPrintWriter
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3050423 "IState"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Message;
${definition}"
      associated_classes
	class_ref 7578295 // IState
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3050551 "JournaledFile"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 7556919 // JournaledFile
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3050679 "LineBreakBufferedWriter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.PrintWriter;
import java.io.Writer;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 7578423 // LineBreakBufferedWriter
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3050807 "LocalLog"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.PrintWriter;
import java.util.ArrayList;
import android.util.Slog;
${definition}"
      associated_classes
	class_ref 7578551 // LocalLog
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3050935 "MemInfoReader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Debug;
import android.os.StrictMode;
${definition}"
      associated_classes
	class_ref 7578679 // MemInfoReader
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3051063 "MessageUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Message;
import android.util.Log;
import android.util.SparseArray;
import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
${definition}"
      associated_classes
	class_ref 7578807 // MessageUtils
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3051191 "NotificationColorUtil"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.ColorInt;
import android.annotation.FloatRange;
import android.annotation.IntRange;
import android.annotation.NonNull;
import android.app.Notification;
import android.content.Context;
import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.graphics.drawable.AnimationDrawable;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.Icon;
import android.graphics.drawable.VectorDrawable;
import android.text.SpannableStringBuilder;
import android.text.Spanned;
import android.text.style.TextAppearanceSpan;
import android.util.Log;
import android.util.Pair;
import java.util.Arrays;
import java.util.WeakHashMap;
${definition}"
      associated_classes
	class_ref 7579191 // NotificationColorUtil
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License
"
    end

    artifact 3051319 "ParcelableString"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 7579447 // ParcelableString
      end
      comment "Copyright 2014, The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3051447 "Preconditions"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.IntRange;
import android.annotation.NonNull;
import android.text.TextUtils;
import java.util.Collection;
${definition}"
      associated_classes
	class_ref 7579575 // Preconditions
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3051575 "Predicate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7579703 // Predicate
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3051703 "Predicates"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 7579831 // Predicates
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3051831 "ProcFileReader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Closeable;
import java.io.IOException;
import java.io.InputStream;
import java.net.ProtocolException;
import java.nio.charset.StandardCharsets;
${definition}"
      associated_classes
	class_ref 7580343 // ProcFileReader
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3051959 "ProgressReporter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.Nullable;
import android.content.Intent;
import android.os.Bundle;
import android.os.IProgressListener;
import android.os.RemoteCallbackList;
import android.os.RemoteException;
import android.util.MathUtils;
import com.android.internal.annotations.GuardedBy;
${definition}"
      associated_classes
	class_ref 7580471 // ProgressReporter
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3052087 "Protocol"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7580599 // Protocol
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3052215 "RingBufferIndices"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7580727 // RingBufferIndices
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License
"
    end

    artifact 3052343 "ScreenShapeHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.Resources;
import android.os.Build;
import android.os.SystemProperties;
import android.view.ViewRootImpl;
${definition}"
      associated_classes
	class_ref 7580855 // ScreenShapeHelper
      end
    end

    artifact 3052471 "SizedInputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import libcore.io.Streams;
import java.io.IOException;
import java.io.InputStream;
${definition}"
      associated_classes
	class_ref 7580983 // SizedInputStream
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3052599 "State"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Message;
${definition}"
      associated_classes
	class_ref 7581239 // State
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3052727 "StateMachine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import android.os.HandlerThread;
import android.os.Looper;
import android.os.Message;
import android.text.TextUtils;
import android.util.Log;
import java.io.FileDescriptor;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Iterator;
import java.util.HashMap;
import java.util.Vector;
${definition}"
      associated_classes
	class_ref 7581367 // StateMachine
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3052855 "TypedProperties"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.Pattern;
${definition}"
      associated_classes
	class_ref 7582263 // TypedProperties
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3052983 "UserIcons"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.PorterDuff.Mode;
import android.graphics.drawable.Drawable;
import android.os.UserHandle;
import com.android.internal.R;
${definition}"
      associated_classes
	class_ref 7582775 // UserIcons
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3053111 "VirtualRefBasePtr"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7582903 // VirtualRefBasePtr
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3053239 "WakeupMessage"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.AlarmManager;
import android.content.Context;
import android.os.Handler;
import android.os.Message;
import com.android.internal.annotations.VisibleForTesting;
${definition}"
      associated_classes
	class_ref 7583031 // WakeupMessage
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3053367 "XmlUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Bitmap.CompressFormat;
import android.net.Uri;
import android.text.TextUtils;
import android.util.ArrayMap;
import android.util.Base64;
import android.util.Xml;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlSerializer;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ProtocolException;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 7583159 // XmlUtils
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
