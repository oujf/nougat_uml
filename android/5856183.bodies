class NetworkStatsBenchmark
!!!47743159.java!!!	setUp() : void
        mNetworkStats = new NetworkStats(0, mSize + 2);
        int uid = 0;
        NetworkStats.Entry recycle = new NetworkStats.Entry();
        for (int i = 0; i < mSize; i++) {
            recycle.iface = (i < mSize / 2) ? TUN_IFACE : UNDERLYING_IFACE;
            recycle.uid = uid;
            recycle.set = i % 2;
            recycle.tag = NetworkStats.TAG_NONE;
            recycle.rxBytes = 60000;
            recycle.rxPackets = 60;
            recycle.txBytes = 150000;
            recycle.txPackets = 1500;
            recycle.operations = 0;
            mNetworkStats.addValues(recycle);
            if (recycle.set == 1) {
                uid++;
            }
        }
        recycle.iface = UNDERLYING_IFACE;
        recycle.uid = TUN_UID;
        recycle.set = NetworkStats.SET_FOREGROUND;
        recycle.tag = NetworkStats.TAG_NONE;
        recycle.rxBytes = 90000 * mSize;
        recycle.rxPackets = 40 * mSize;
        recycle.txBytes = 180000 * mSize;
        recycle.txPackets = 1200 * mSize;
        recycle.operations = 0;
        mNetworkStats.addValues(recycle);
!!!47743287.java!!!	timeMigrateTun(in reps : int) : void
        for (int i = 0; i < reps; i++) {
            NetworkStats stats = mNetworkStats.clone();
            stats.migrateTun(TUN_UID, TUN_IFACE, UNDERLYING_IFACE);
        }
!!!47743415.java!!!	timeClone(in reps : int) : void
        for (int i = 0; i < reps; i++) {
            NetworkStats stats = mNetworkStats.clone();
        }
