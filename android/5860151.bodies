class SenderRunnable
!!!47766967.java!!!	SenderRunnable(inout bttraffic : BTtraffic, inout remoteAddr : String, inout intent : Intent)
            this.bttraffic = bttraffic;
            this.remoteAddr = remoteAddr;
            this.pkgsize = intent.getIntExtra("size", defaultpkgsize);
            this.period = intent.getIntExtra("period", defaultperiod);
!!!47767095.java!!!	run() : void
            BluetoothDevice device = null;
            try {
                device = BluetoothAdapter.getDefaultAdapter().getRemoteDevice(remoteAddr);
            } catch (IllegalArgumentException e) {
                Log.d(TAG, "Invalid BT MAC address!\n");
            }
            if (device == null) {
                Log.d(TAG, "can't find matching device, stopping thread and service");
                bttraffic.stopService();
                return;
            }

            BluetoothSocket socket = null;
            try {
                Log.d(TAG, "connecting to device with MAC addr: " + remoteAddr);
                socket = device.createInsecureRfcommSocketToServiceRecord(SERVICE_UUID);
                socket.connect();
                Log.d(TAG, "connected, starting to send");
                doSending(socket.getOutputStream());
                Log.d(TAG, "send stopped, stopping service");
            } catch (Exception e) {
                Log.d(TAG, "error while sending", e);
            } finally {
                Log.d(TAG, "finishing, closing thread and service");
                safeClose(socket);
                if (!bttraffic.isShuttingDown)
                    bttraffic.stopService();
            }
!!!47767223.java!!!	doSending(inout outputStream : OutputStream) : void
            Log.w(TAG, "doSending");
            try {
                Random random = new Random(System.currentTimeMillis());

                byte[] bytes = new byte[pkgsize];
                random.nextBytes(bytes);
                while (!Thread.interrupted()) {
                    writeBytes(outputStream, bytes.length);
                    outputStream.write(bytes, 0, bytes.length);
                    if (period < 0)
                        break;
                    if (period == 0)
                        continue;

                    SystemClock.sleep(period);
                }
                Log.d(TAG, "Sender interrupted");
            } catch (IOException e) {
                Log.d(TAG, "doSending got error", e);
            }
!!!47767351.java!!!	writeBytes(inout outputStream : OutputStream, in value : int) : void
            lengthBuffer.putInt(value);
            lengthBuffer.flip();
            outputStream.write(lengthBuffer.array(), lengthBuffer.position(), lengthBuffer.limit());
