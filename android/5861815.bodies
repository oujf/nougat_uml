class WifiConnectionTest
!!!47777463.java!!!	WifiConnectionTest()
        super(WifiConnectionTest.class.getSimpleName());
!!!47777591.java!!!	setUp() : void
        super.setUp();
        assertTrue("Failed to enable wifi", enableWifi());
!!!47777719.java!!!	tearDown() : void
        removeConfiguredNetworksAndDisableWifi();
        super.tearDown();
!!!47777847.java!!!	testWifiConnections() : void
        List<WifiConfiguration> wifiConfigs = loadConfigurations();

        printWifiConfigurations(wifiConfigs);

        assertFalse("No configurations to test against", wifiConfigs.isEmpty());

        boolean shouldPause = false;
        for (WifiConfiguration config : wifiConfigs) {
            if (shouldPause) {
                logv("Pausing for %d seconds", PAUSE_DURATION_MS / 1000);
                SystemClock.sleep(PAUSE_DURATION_MS);
            }
            logv("Start wifi connection test to: %s", config.SSID);
            connectToWifi(config);

            // verify that connection actually works
            assertTrue("No connectivity at end of test", checkNetworkConnectivity());

            // Disconnect and remove the network
            assertTrue("Unable to remove network", disconnectAP());
            logv("End wifi connection test to: %s", config.SSID);

            shouldPause = true;
        }
!!!47777975.java!!!	loadConfigurations() : WifiConfiguration
        BufferedReader reader = null;
        try {
            reader = new BufferedReader(new FileReader(new File(WIFI_CONFIG_FILE)));
            StringBuffer jsonBuffer = new StringBuffer();
            String line;
            while ((line = reader.readLine()) != null) {
                jsonBuffer.append(line);
            }
            return WifiConfigurationHelper.parseJson(jsonBuffer.toString());
        } catch (IllegalArgumentException | IOException e) {
            throw new AssertionError("Error parsing file", e);
        } finally {
            if (reader != null) {
                try {
                    reader.close();
                } catch (IOException e) {
                    // Ignore
                }
            }
        }
!!!47778103.java!!!	printWifiConfigurations(inout wifiConfigs : List<WifiConfiguration>) : void
        logv("Wifi configurations to be tested");
        for (WifiConfiguration config : wifiConfigs) {
            logv(config.toString());
        }
