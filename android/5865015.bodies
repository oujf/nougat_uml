class ActivityInstrumentationTestCase2
!!!47787063.java!!!	ActivityInstrumentationTestCase2(inout pkg : String, inout activityClass : Class)
        this(activityClass);
!!!47787191.java!!!	ActivityInstrumentationTestCase2(inout activityClass : Class)
        mActivityClass = activityClass;
!!!47787319.java!!!	getActivity() : T
        Activity a = super.getActivity();
        if (a == null) {
            // set initial touch mode
            getInstrumentation().setInTouchMode(mInitialTouchMode);
            final String targetPackage = getInstrumentation().getTargetContext().getPackageName();
            // inject custom intent, if provided
            if (mActivityIntent == null) {
                a = launchActivity(targetPackage, mActivityClass, null);
            } else {
                a = launchActivityWithIntent(targetPackage, mActivityClass, mActivityIntent);
            }
            setActivity(a);
        }
        return (T) a;
!!!47787447.java!!!	setActivityIntent(inout i : Intent) : void
        mActivityIntent = i;
!!!47787575.java!!!	setActivityInitialTouchMode(inout initialTouchMode : boolean) : void
        mInitialTouchMode = initialTouchMode;
!!!47787703.java!!!	setUp() : void
        super.setUp();

        mInitialTouchMode = false;
        mActivityIntent = null;
!!!47787831.java!!!	tearDown() : void
        // Finish the Activity off (unless was never launched anyway)
        Activity a = super.getActivity();
        if (a != null) {
            a.finish();
            setActivity(null);
        }

        // Scrub out members - protects against memory leaks in the case where someone
        // creates a non-static inner class (thus referencing the test case) and gives it to
        // someone else to hold onto
        scrubClass(ActivityInstrumentationTestCase2.class);

        super.tearDown();
!!!47787959.java!!!	runTest() : void
        try {
            Method method = getClass().getMethod(getName(), (Class[]) null);
            if (method.isAnnotationPresent(UiThreadTest.class)) {
                getActivity();
            }
        } catch (Exception e) {
            // eat the exception here; super.runTest() will catch it again and handle it properly
        }
        super.runTest();
