format 213
"bluetoothmidiservice" // android::frameworks::base::cmds::am::src::com::android::bluetoothmidiservice
  revision 2
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks\\base\\media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/"
  java_package "com.android.bluetoothmidiservice"
  classview 496951 "bluetoothmidiservice"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 7631287 "BluetoothMidiDevice"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class used to implement a Bluetooth MIDI device.
"
      attribute 26680375 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26680503 "MAX_PACKET_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26680631 "MIDI_SERVICE"
	class_attribute const_attribute private explicit_type "UUID"
	init_value " UUID.fromString(
            \"03B80E5A-EDE8-4B33-A751-6CE34EC4C700\")"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "  Bluetooth MIDI Gatt service UUID
"
      end

      attribute 26680759 "MIDI_CHARACTERISTIC"
	class_attribute const_attribute private explicit_type "UUID"
	init_value " UUID.fromString(
            \"7772E5DB-3868-4112-A1A9-F2669D106BF3\")"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Bluetooth MIDI Gatt characteristic UUID
"
      end

      attribute 26680887 "CLIENT_CHARACTERISTIC_CONFIG"
	class_attribute const_attribute private explicit_type "UUID"
	init_value " UUID.fromString(
            \"00002902-0000-1000-8000-00805f9b34fb\")"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Descriptor UUID for enabling characteristic changed notifications
"
      end

      classrelation 17180215 // mBluetoothDevice (<unidirectional association>)
	relation 17180215 --->
	  a role_name "mBluetoothDevice" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17180215 // mBluetoothDevice (<unidirectional association>)
	  b parent class_ref 7078071 // BluetoothDevice
      end

      classrelation 17180343 // mService (<unidirectional association>)
	relation 17180343 --->
	  a role_name "mService" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17180343 // mService (<unidirectional association>)
	  b parent class_ref 7631415 // BluetoothMidiService
      end

      classrelation 17180471 // mMidiManager (<unidirectional association>)
	relation 17180471 --->
	  a role_name "mMidiManager" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17180471 // mMidiManager (<unidirectional association>)
	  b parent class_ref 6115639 // MidiManager
      end

      classrelation 17180599 // mOutputReceiver (<unidirectional association>)
	relation 17180599 --->
	  a role_name "mOutputReceiver" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17180599 // mOutputReceiver (<unidirectional association>)
	  b parent class_ref 5808055 // MidiReceiver
      end

      classrelation 17180727 // mEventScheduler (<unidirectional association>)
	relation 17180727 --->
	  a role_name "mEventScheduler" init_value " new MidiEventScheduler()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17180727 // mEventScheduler (<unidirectional association>)
	  b parent class_ref 7553847 // MidiEventScheduler
      end

      classrelation 17180855 // mDeviceServer (<unidirectional association>)
	relation 17180855 --->
	  a role_name "mDeviceServer" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17180855 // mDeviceServer (<unidirectional association>)
	  b parent class_ref 6114743 // MidiDeviceServer
      end

      classrelation 17180983 // mBluetoothGatt (<unidirectional association>)
	relation 17180983 --->
	  a role_name "mBluetoothGatt" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17180983 // mBluetoothGatt (<unidirectional association>)
	  b parent class_ref 7082551 // BluetoothGatt
      end

      classrelation 17181111 // mCharacteristic (<unidirectional association>)
	relation 17181111 --->
	  a role_name "mCharacteristic" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17181111 // mCharacteristic (<unidirectional association>)
	  b parent class_ref 7083319 // BluetoothGattCharacteristic
      end

      class 7631543 "PacketReceiver"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17182007 // <realization>
	  relation 17182007 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17182007 // <realization>
	    b parent class_ref 7632055 // PacketReceiver
	end

	attribute 26681015 "mWriteBuffers"
	  const_attribute private explicit_type "byte"
	  multiplicity "[][]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " buffers of every possible packet size
"
	end

	operation 83727799 "PacketReceiver"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83727927 "writePacket"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "buffer" explicit_type "byte"
	  multiplicity "[]"
	    param in name "count" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 17181239 // mPacketReceiver (<unidirectional association>)
	relation 17181239 --->
	  a role_name "mPacketReceiver" init_value " new PacketReceiver()" const_relation private
	    comment " PacketReceiver for receiving formatted packets from our BluetoothPacketEncoder
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17181239 // mPacketReceiver (<unidirectional association>)
	  b parent class_ref 7631543 // PacketReceiver
      end

      classrelation 17181367 // mPacketEncoder (<unidirectional association>)
	relation 17181367 --->
	  a role_name "mPacketEncoder" init_value " new BluetoothPacketEncoder(mPacketReceiver, MAX_PACKET_SIZE)" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17181367 // mPacketEncoder (<unidirectional association>)
	  b parent class_ref 7631671 // BluetoothPacketEncoder
      end

      classrelation 17181495 // mPacketDecoder (<unidirectional association>)
	relation 17181495 --->
	  a role_name "mPacketDecoder" init_value " new BluetoothPacketDecoder(MAX_PACKET_SIZE)" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17181495 // mPacketDecoder (<unidirectional association>)
	  b parent class_ref 7631799 // BluetoothPacketDecoder
      end

      classrelation 17181623 // mDeviceServerCallback (<unidirectional association>)
	relation 17181623 --->
	  a role_name "mDeviceServerCallback" init_value " new MidiDeviceServer.Callback() {
        @Override
        public void onDeviceStatusChanged(MidiDeviceServer server, MidiDeviceStatus status) {
        }

        @Override
        public void onClose() {
            close();
        }
    }" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17181623 // mDeviceServerCallback (<unidirectional association>)
	  b parent class_ref 6114871 // Callback
      end

      classrelation 17181751 // mGattCallback (<unidirectional association>)
	relation 17181751 --->
	  a role_name "mGattCallback" init_value " new BluetoothGattCallback() {
        @Override
        public void onConnectionStateChange(BluetoothGatt gatt, int status,
                int newState) {
            String intentAction;
            if (newState == BluetoothProfile.STATE_CONNECTED) {
                Log.i(TAG, \"Connected to GATT server.\");
                Log.i(TAG, \"Attempting to start service discovery:\" +
                        mBluetoothGatt.discoverServices());
            } else if (newState == BluetoothProfile.STATE_DISCONNECTED) {
                Log.i(TAG, \"Disconnected from GATT server.\");
                close();
            }
        }

        @Override
        public void onServicesDiscovered(BluetoothGatt gatt, int status) {
            if (status == BluetoothGatt.GATT_SUCCESS) {
                List<BluetoothGattService> services = mBluetoothGatt.getServices();
                for (BluetoothGattService service : services) {
                    if (MIDI_SERVICE.equals(service.getUuid())) {
                        Log.d(TAG, \"found MIDI_SERVICE\");
                        List<BluetoothGattCharacteristic> characteristics
                            = service.getCharacteristics();
                        for (BluetoothGattCharacteristic characteristic : characteristics) {
                            if (MIDI_CHARACTERISTIC.equals(characteristic.getUuid())) {
                                Log.d(TAG, \"found MIDI_CHARACTERISTIC\");
                                mCharacteristic = characteristic;

                                // Specification says to read the characteristic first and then
                                // switch to receiving notifications
                                mBluetoothGatt.readCharacteristic(characteristic);
                                break;
                            }
                        }
                        break;
                    }
                }
            } else {
                Log.e(TAG, \"onServicesDiscovered received: \" + status);
                close();
            }
        }

        @Override
        public void onCharacteristicRead(BluetoothGatt gatt,
                BluetoothGattCharacteristic characteristic,
                int status) {
            Log.d(TAG, \"onCharacteristicRead \" + status);

            // switch to receiving notifications after initial characteristic read
            mBluetoothGatt.setCharacteristicNotification(characteristic, true);

            // Use writeType that requests acknowledgement.
            // This improves compatibility with various BLE-MIDI devices.
            int originalWriteType = characteristic.getWriteType();
            characteristic.setWriteType(BluetoothGattCharacteristic.WRITE_TYPE_DEFAULT);

            BluetoothGattDescriptor descriptor = characteristic.getDescriptor(
                    CLIENT_CHARACTERISTIC_CONFIG);
            if (descriptor != null) {
                descriptor.setValue(BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE);
                boolean result = mBluetoothGatt.writeDescriptor(descriptor);
                Log.d(TAG, \"writeDescriptor returned \" + result);
            } else {
                Log.e(TAG, \"No CLIENT_CHARACTERISTIC_CONFIG for device \" + mBluetoothDevice);
            }

            characteristic.setWriteType(originalWriteType);
        }

        @Override
        public void onCharacteristicWrite(BluetoothGatt gatt,
                BluetoothGattCharacteristic characteristic,
                int status) {
            Log.d(TAG, \"onCharacteristicWrite \" + status);
            mPacketEncoder.writeComplete();
        }

        @Override
        public void onCharacteristicChanged(BluetoothGatt gatt,
                                            BluetoothGattCharacteristic characteristic) {
            if (DEBUG) {
                logByteArray(\"Received \", characteristic.getValue(), 0,
                        characteristic.getValue().length);
            }
            mPacketDecoder.decodePacket(characteristic.getValue(), mOutputReceiver);
        }
    }" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17181751 // mGattCallback (<unidirectional association>)
	  b parent class_ref 7082679 // BluetoothGattCallback
      end

      operation 83728055 "BluetoothMidiDevice"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" type class_ref 6923703 // Context
	  param inout name "device" type class_ref 7078071 // BluetoothDevice
	  param inout name "service" type class_ref 7631415 // BluetoothMidiService
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83728183 "close"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83728311 "getBinder"
	public return_type class_ref 6927031 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83728439 "logByteArray"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "prefix" explicit_type "String"
	  param inout name "value" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7631415 "BluetoothMidiService"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 17182135 // <generalisation>
	relation 17182135 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17182135 // <generalisation>
	  b parent class_ref 6923447 // Service
      end

      classrelation 17182391 // mDeviceServerMap (<unidirectional association>)
	relation 17182391 --->
	  stereotype "HashMap"
	  a role_name "mDeviceServerMap" init_value " new HashMap<BluetoothDevice,BluetoothMidiDevice>()" const_relation private
	    comment " BluetoothMidiDevices keyed by BluetoothDevice
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type},BluetoothMidiDevice> ${name}${value};
"
	    classrelation_ref 17182391 // mDeviceServerMap (<unidirectional association>)
	  b parent class_ref 7078071 // BluetoothDevice
      end

      operation 83728567 "onBind"
	public return_type class_ref 6927031 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 6925623 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 17182519 // mBinder (<unidirectional association>)
	relation 17182519 --->
	  a role_name "mBinder" init_value " new IBluetoothMidiService.Stub() {

        public IBinder addBluetoothDevice(BluetoothDevice bluetoothDevice) {
            BluetoothMidiDevice device;
            if (bluetoothDevice == null) {
                Log.e(TAG, \"no BluetoothDevice in addBluetoothDevice()\");
                return null;
            }
            synchronized (mDeviceServerMap) {
                device = mDeviceServerMap.get(bluetoothDevice);
                if (device == null) {
                    device = new BluetoothMidiDevice(BluetoothMidiService.this,
                            bluetoothDevice, BluetoothMidiService.this);
                    mDeviceServerMap.put(bluetoothDevice, device);
                }
            }
            return device.getBinder();
        }

    }" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17182519 // mBinder (<unidirectional association>)
	  b parent class_ref 7619511 // Stub
      end

      operation 83728695 "deviceClosed"
	package explicit_return_type "void"
	nparams 1
	  param inout name "device" type class_ref 7078071 // BluetoothDevice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7631671 "BluetoothPacketEncoder"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class accumulates MIDI messages to form a MIDI packet.
"
      classrelation 17183031 // <generalisation>
	relation 17183031 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17183031 // <generalisation>
	  b parent class_ref 7631927 // PacketEncoder
      end

      attribute 26681655 "MILLISECOND_NANOS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1000000L"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26681783 "MILLISECOND_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x1FFF"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " mask for generating 13 bit timestamps
"
      end

      classrelation 17183287 // mPacketReceiver (<unidirectional association>)
	relation 17183287 --->
	  a role_name "mPacketReceiver" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17183287 // mPacketReceiver (<unidirectional association>)
	  b parent class_ref 7632055 // PacketReceiver
      end

      attribute 26681911 "mAccumulationBuffer"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " buffer for accumulating messages to write
"
      end

      attribute 26682039 "mAccumulatedBytes"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of bytes currently in mAccumulationBuffer
"
      end

      attribute 26682167 "mPacketTimestamp"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " timestamp for first message in current packet
"
      end

      attribute 26682295 "mRunningStatus"
	private explicit_type "byte"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " current running status, or zero if none
"
      end

      attribute 26682423 "mWritePending"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17183543 // mFramedDataReceiver (<unidirectional association>)
	relation 17183543 --->
	  a role_name "mFramedDataReceiver" init_value " new MidiReceiver() {
        @Override
        public void onSend(byte[] msg, int offset, int count, long timestamp)
                throws IOException {

            synchronized (mLock) {
                int milliTimestamp = (int)(timestamp / MILLISECOND_NANOS) & MILLISECOND_MASK;
                byte status = msg[offset];
                boolean isSysExStart = (status == MidiConstants.STATUS_SYSTEM_EXCLUSIVE);
                boolean isSysExContinuation = ((status & 0x80) == 0);

                int bytesNeeded;
                if (isSysExStart || isSysExContinuation) {
                    // SysEx messages can be split into multiple packets
                    bytesNeeded = 1;
                } else {
                    bytesNeeded = count;
                }

                boolean needsTimestamp = (milliTimestamp != mPacketTimestamp);
                if (isSysExStart) {
                    // SysEx start byte must be preceded by a timestamp
                    needsTimestamp = true;
                } else if (isSysExContinuation) {
                    // SysEx continuation packets must not have timestamp byte
                    needsTimestamp = false;
                }
                if (needsTimestamp) bytesNeeded++;  // add one for timestamp byte
                if (status == mRunningStatus) bytesNeeded--;    // subtract one for status byte

                if (mAccumulatedBytes + bytesNeeded > mAccumulationBuffer.length) {
                    // write out our data if there is no more room
                    // if necessary, block until previous packet is sent
                    flushLocked(true);
                }

                // write the header if necessary
                if (appendHeader(milliTimestamp)) {
                     needsTimestamp = !isSysExContinuation;
                }

                // write new timestamp byte if necessary
                if (needsTimestamp) {
                    // timestamp byte with bits 0 - 6 of timestamp
                    mAccumulationBuffer[mAccumulatedBytes++] =
                            (byte)(0x80 | (milliTimestamp & 0x7F));
                    mPacketTimestamp = milliTimestamp;
                }

                if (isSysExStart || isSysExContinuation) {
                    // MidiFramer will end the packet with SysEx End if there is one in the buffer
                    boolean hasSysExEnd =
                            (msg[offset + count - 1] == MidiConstants.STATUS_END_SYSEX);
                    int remaining = (hasSysExEnd ? count - 1 : count);

                    while (remaining > 0) {
                        if (mAccumulatedBytes == mAccumulationBuffer.length) {
                            // write out our data if there is no more room
                            // if necessary, block until previous packet is sent
                            flushLocked(true);
                            appendHeader(milliTimestamp);
                        }

                        int copy = mAccumulationBuffer.length - mAccumulatedBytes;
                        if (copy > remaining) copy = remaining;
                        System.arraycopy(msg, offset, mAccumulationBuffer, mAccumulatedBytes, copy);
                        mAccumulatedBytes += copy;
                        offset += copy;
                        remaining -= copy;
                    }

                    if (hasSysExEnd) {
                        // SysEx End command must be preceeded by a timestamp byte
                        if (mAccumulatedBytes + 2 > mAccumulationBuffer.length) {
                            // write out our data if there is no more room
                            // if necessary, block until previous packet is sent
                            flushLocked(true);
                            appendHeader(milliTimestamp);
                        }
                        mAccumulationBuffer[mAccumulatedBytes++] =
                                (byte)(0x80 | (milliTimestamp & 0x7F));
                        mAccumulationBuffer[mAccumulatedBytes++] = MidiConstants.STATUS_END_SYSEX;
                    }
                } else {
                    // Non-SysEx message
                    if (status != mRunningStatus) {
                        mAccumulationBuffer[mAccumulatedBytes++] = status;
                        if (MidiConstants.allowRunningStatus(status)) {
                            mRunningStatus = status;
                        } else if (MidiConstants.cancelsRunningStatus(status)) {
                            mRunningStatus = 0;
                        }
                    }

                    // now copy data bytes
                    int dataLength = count - 1;
                    System.arraycopy(msg, offset + 1, mAccumulationBuffer, mAccumulatedBytes,
                            dataLength);
                    mAccumulatedBytes += dataLength;
                }

                // write the packet if possible, but do not block
                flushLocked(false);
            }
        }
    }" const_relation private
	    comment " This receives normalized data from mMidiFramer and accumulates it into a packet buffer
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17183543 // mFramedDataReceiver (<unidirectional association>)
	  b parent class_ref 5808055 // MidiReceiver
      end

      operation 83729207 "appendHeader"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "milliTimestamp" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 17183671 // mMidiFramer (<unidirectional association>)
	relation 17183671 --->
	  a role_name "mMidiFramer" init_value " new MidiFramer(mFramedDataReceiver)" const_relation private
	    comment " MidiFramer for normalizing incoming data
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17183671 // mMidiFramer (<unidirectional association>)
	  b parent class_ref 7554231 // MidiFramer
      end

      operation 83729335 "BluetoothPacketEncoder"
	public explicit_return_type ""
	nparams 2
	  param inout name "packetReceiver" type class_ref 7632055 // PacketReceiver
	  param in name "maxPacketSize" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83729463 "onSend"
	public explicit_return_type "void"
	nparams 4
	  param inout name "msg" explicit_type "byte"
	multiplicity "[]"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "timestamp" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83729591 "writeComplete"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83729719 "flushLocked"
	private explicit_return_type "void"
	nparams 1
	  param inout name "canBlock" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7631799 "BluetoothPacketDecoder"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is an abstract base class that decodes a packet buffer and passes it to a
{@link android.media.midi.MidiReceiver}
"
      classrelation 17182647 // <generalisation>
	relation 17182647 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17182647 // <generalisation>
	  b parent class_ref 7632183 // PacketDecoder
      end

      attribute 26681143 "mBuffer"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17182903 // mTimeTracker (<unidirectional association>)
	relation 17182903 --->
	  a role_name "mTimeTracker" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17182903 // mTimeTracker (<unidirectional association>)
	  b parent class_ref 7632311 // MidiBtleTimeTracker
      end

      attribute 26681271 "TIMESTAMP_MASK_HIGH"
	const_attribute private explicit_type "int"
	init_value " 0x1F80"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26681399 "TIMESTAMP_MASK_LOW"
	const_attribute private explicit_type "int"
	init_value " 0x7F"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26681527 "HEADER_TIMESTAMP_MASK"
	const_attribute private explicit_type "int"
	init_value " 0x3F"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83728951 "BluetoothPacketDecoder"
	public explicit_return_type ""
	nparams 1
	  param in name "maxPacketSize" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83729079 "decodePacket"
	public explicit_return_type "void"
	nparams 2
	  param inout name "buffer" explicit_type "byte"
	multiplicity "[]"
	  param inout name "receiver" type class_ref 5808055 // MidiReceiver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 7631927 "PacketEncoder"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is an abstract base class that encodes MIDI data into a packet buffer.
PacketEncoder receives data via its {@link android.media.midi.MidiReceiver#onReceive} method
and notifies its client of packets to write via the {@link PacketEncoder.PacketReceiver}
interface.
"
      class 7632055 "PacketReceiver"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83727543 "writePacket"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "buffer" explicit_type "byte"
	  multiplicity "[]"
	    param in name "count" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Called to write an accumulated packet.
@param buffer the packet buffer to write
@param count the number of bytes in the packet buffer to write
"
	end
      end

      classrelation 17181879 // <generalisation>
	relation 17181879 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 17181879 // <generalisation>
	  b parent class_ref 5808055 // MidiReceiver
      end

      operation 83727671 "writeComplete"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to inform PacketEncoder when the previous write is complete.
"
      end
    end

    class 7632183 "PacketDecoder"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is an abstract base class that decodes a packet buffer and passes it to a
{@link android.media.midi.MidiReceiver}
"
      operation 83728823 "decodePacket"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "buffer" explicit_type "byte"
	multiplicity "[]"
	  param inout name "receiver" type class_ref 5808055 // MidiReceiver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes MIDI data in a packet and passes it to a {@link android.media.midi.MidiReceiver}
@param buffer the packet to decode
@param receiver the {@link android.media.midi.MidiReceiver} to receive the decoded MIDI data
"
      end
    end

    class 7632311 "MidiBtleTimeTracker"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Convert MIDI over BTLE timestamps to system nanotime.
"
      attribute 26682551 "NANOS_PER_MILLI"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1000000L"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26682679 "RANGE_MILLIS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 0x2000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " per MIDI / BTLE standard"
      end

      attribute 26682807 "RANGE_NANOS"
	class_attribute const_attribute private explicit_type "long"
	init_value " RANGE_MILLIS * NANOS_PER_MILLI"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26682935 "mWindowMillis"
	private explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " typical max connection interval"
      end

      attribute 26683063 "mWindowNanos"
	private explicit_type "long"
	init_value " mWindowMillis * NANOS_PER_MILLI"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26683191 "mPreviousTimestamp"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Used to calculate deltas."
      end

      attribute 26683319 "mPreviousNow"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26683447 "mPeripheralTimeMillis"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Our model of the peripherals millisecond clock.
"
      end

      attribute 26683575 "mBaseHostTimeNanos"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Host time that corresponds to time=0 on the peripheral.
"
      end

      attribute 26683703 "mPreviousResult"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " To prevent retrograde timestamp"
      end

      operation 83729847 "MidiBtleTimeTracker"
	public explicit_return_type ""
	nparams 1
	  param in name "now" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83729975 "convertTimestampToNanotime"
	public explicit_return_type "long"
	nparams 2
	  param in name "timestamp" explicit_type "int"
	  param in name "now" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param timestamp
           13-bit millis in range of 0 to 8191
@param now
           current time in nanoseconds
@return nanoseconds corresponding to the timestamp
"
      end

      operation 83730103 "getWindowMillis"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83730231 "setWindowMillis"
	public explicit_return_type "void"
	nparams 1
	  param in name "window" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 434487 "bluetoothmidiservice"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 3075255 "PacketEncoder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.media.midi.MidiReceiver;
${definition}"
      associated_classes
	class_ref 7631927 // PacketEncoder
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3075383 "BluetoothMidiDevice"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothGatt;
import android.bluetooth.BluetoothGattCallback;
import android.bluetooth.BluetoothGattCharacteristic;
import android.bluetooth.BluetoothGattDescriptor;
import android.bluetooth.BluetoothGattService;
import android.bluetooth.BluetoothProfile;
import android.content.Context;
import android.media.midi.MidiDeviceInfo;
import android.media.midi.MidiDeviceServer;
import android.media.midi.MidiDeviceStatus;
import android.media.midi.MidiManager;
import android.media.midi.MidiReceiver;
import android.os.Bundle;
import android.os.IBinder;
import android.util.Log;
import com.android.internal.midi.MidiEventScheduler;
import com.android.internal.midi.MidiEventScheduler.MidiEvent;
import libcore.io.IoUtils;
import java.io.IOException;
import java.util.List;
import java.util.UUID;
${definition}"
      associated_classes
	class_ref 7631287 // BluetoothMidiDevice
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3075511 "BluetoothMidiService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Service;
import android.bluetooth.BluetoothDevice;
import android.content.Intent;
import android.media.midi.IBluetoothMidiService;
import android.media.midi.MidiManager;
import android.os.IBinder;
import android.util.Log;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 7631415 // BluetoothMidiService
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3075639 "PacketDecoder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.media.midi.MidiReceiver;
${definition}"
      associated_classes
	class_ref 7632183 // PacketDecoder
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3075767 "BluetoothPacketDecoder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.media.midi.MidiReceiver;
import android.util.Log;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 7631799 // BluetoothPacketDecoder
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3075895 "BluetoothPacketEncoder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.media.midi.MidiReceiver;
import com.android.internal.midi.MidiConstants;
import com.android.internal.midi.MidiFramer;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 7631671 // BluetoothPacketEncoder
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3076023 "MidiBtleTimeTracker"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 7632311 // MidiBtleTimeTracker
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
