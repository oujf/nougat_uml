format 213
"helpers" // android::frameworks::base::cmds::am::src::com::android::mediaframeworktest::helpers
  revision 2
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks\\base\\media/tests/MediaFrameworkTest/src/com/android/mediaframeworktest/helpers/"
  java_package "com.android.mediaframeworktest.helpers"
  classview 497591 "helpers"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 7639607 "CameraErrorCollector"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A camera test ErrorCollector class to gather the test failures during a test,
instead of failing the test immediately for each failure.


(non-Javadoc)
@see android.hardware.camera2.cts.helpers.CameraErrorCollector
"
      attribute 26718263 "LOG_ERRORS"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " Log.isLoggable(TAG, Log.ERROR)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83832503 "verify"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83832631 "addMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an unconditional error to the table.

<p>Execution continues, but test will fail at the end.</p>

@param message A string containing the failure reason.
"
      end

      operation 83832759 "addError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "error" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds a Throwable to the table. <p>Execution continues, but the test will fail at the end.</p>
"
      end

      operation 83832887 "addErrorSuper"
	private explicit_return_type "void"
	nparams 1
	  param inout name "error" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83833015 "checkThat"
	public explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "T"
	  param in name "matcher" explicit_type "Matcher<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds a failure to the table if {@code matcher} does not match {@code value}.
Execution continues, but the test will fail at the end if the match fails.
The camera id is included into the failure log.
"
      end

      operation 83833143 "checkThat"
	public explicit_return_type "void"
	nparams 3
	  param in name "reason" explicit_type "String"
	  param in name "value" explicit_type "T"
	  param in name "matcher" explicit_type "Matcher<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Adds a failure with the given {@code reason} to the table if
{@code matcher} does not match {@code value}. Execution continues, but
the test will fail at the end if the match fails. The camera id is
included into the failure log.
"
      end

      operation 83833271 "setCameraId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "id" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the camera id to this error collector object for logging purpose.

@param id The camera id to be set.
"
      end

      operation 83833399 "expectTrue"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "msg" explicit_type "String"
	  param inout name "condition" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a failure to the table if {@code condition} is not {@code true}.
<p>
Execution continues, but the test will fail at the end if the condition
failed.
</p>

@param msg Message to be logged when check fails.
@param condition Log the failure if it is not true.
"
      end

      operation 83833527 "expectEquals"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "msg" explicit_type "String"
	  param inout name "expected" explicit_type "T"
	  param inout name "actual" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the two values are equal.

@param msg Message to be logged when check fails.
@param expected Expected value to be checked against.
@param actual Actual value to be checked.
@return {@code true} if the two values are equal, {@code false} otherwise.

@throws IllegalArgumentException if {@code expected} was {@code null}
"
      end

      operation 83833655 "expectNotEquals"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "msg" explicit_type "String"
	  param inout name "expected" explicit_type "T"
	  param inout name "actual" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the two values are not equal.

@param msg Message to be logged when check fails.
@param expected Expected value to be checked against.
@param actual Actual value to be checked.
@return {@code true} if the two values are not equal, {@code false} otherwise.
"
      end

      operation 83833783 "expectEquals"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "msg" explicit_type "String"
	  param inout name "expected" explicit_type "T"
	multiplicity "[]"
	  param inout name "actual" explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the two arrays of values are deeply equal.

@param msg Message to be logged when check fails.
@param expected Expected array of values to be checked against.
@param actual Actual array of values to be checked.
@return {@code true} if the two arrays of values are deeply equal, {@code false} otherwise.

@throws IllegalArgumentException if {@code expected} was {@code null}
"
      end

      operation 83833911 "expectNotEquals"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "msg" explicit_type "String"
	  param inout name "expected" explicit_type "T"
	multiplicity "[]"
	  param inout name "actual" explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the two arrays of values are not deeply equal.

@param msg Message to be logged when check fails.
@param expected Expected array of values to be checked against.
@param actual Actual array of values to be checked.
@return {@code true} if the two arrays of values are not deeply equal, {@code false}
         otherwise.

@throws IllegalArgumentException if {@code expected} was {@code null}
"
      end

      operation 83834039 "expectGreater"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "msg" explicit_type "String"
	  param inout name "expected" explicit_type "T"
	  param inout name "actual" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that the {@code actual} value is greater than the {@code expected} value.

@param msg Message to be logged when check fails.
@param expected The expected value to check that the actual value is larger than.
@param actual Actual value to check.
@return {@code true} if {@code actual} is greater than {@code expected}.
"
      end

      operation 83834167 "expectGreaterOrEqual"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "msg" explicit_type "String"
	  param inout name "expected" explicit_type "T"
	  param inout name "actual" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that the {@code actual} value is greater than or equal to the {@code expected} value.

@param msg Message to be logged when check fails.
@param expected The expected value to check that the actual value is larger than or equal to.
@param actual Actual value to check.
@return {@code true} if {@code actual} is greater than or equal to {@code expected}.
"
      end

      operation 83834295 "expectLess"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "msg" explicit_type "String"
	  param inout name "expected" explicit_type "T"
	  param inout name "actual" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that the {@code actual} value is less than the {@code expected} value.

@param msg Message to be logged when check fails.
@param expected The expected value to check that the actual value is less than.
@param actual Actual value to check.
@return {@code true} if {@code actual} is less than {@code expected}.
"
      end

      operation 83834423 "expectLessOrEqual"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "msg" explicit_type "String"
	  param inout name "expected" explicit_type "T"
	  param inout name "actual" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that the {@code actual} value is less than or equal to the {@code expected} value.

@param msg Message to be logged when check fails.
@param expected The expected value to check that the actual value is less than or equal to.
@param actual Actual value to check.
@return {@code true} if {@code actual} is less than or equal to {@code expected}.
"
      end

      operation 83834551 "expectEquals"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "msg" explicit_type "String"
	  param in name "expected" explicit_type "float"
	  param in name "actual" explicit_type "float"
	  param in name "tolerance" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the two float values are equal with given error tolerance.

@param msg Message to be logged when check fails.
@param expected Expected value to be checked against.
@param actual Actual value to be checked.
@param tolerance The error margin for the equality check.
@return {@code true} if the two values are equal, {@code false} otherwise.
"
      end

      operation 83834679 "expectEquals"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "msg" explicit_type "String"
	  param in name "expected" explicit_type "double"
	  param in name "actual" explicit_type "double"
	  param in name "tolerance" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the two double values are equal with given error tolerance.

@param msg Message to be logged when check fails.
@param expected Expected value to be checked against.
@param actual Actual value to be checked.
@param tolerance The error margin for the equality check
@return {@code true} if the two values are equal, {@code false} otherwise.
"
      end

      operation 83834807 "expectValuesGreaterOrEqual"
	public explicit_return_type "void"
	nparams 3
	  param inout name "msg" explicit_type "String"
	  param inout name "list" explicit_type "List<T>"
	  param inout name "min" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that all values in the list are greater than or equal to the min value.

@param msg Message to be logged when check fails
@param list The list of values to be checked
@param min The smallest allowed value
"
      end

      operation 83834935 "expectValuesGreaterOrEqual"
	public explicit_return_type "void"
	nparams 3
	  param inout name "msg" explicit_type "String"
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "min" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that all values in the array are greater than or equal to the min value.

@param msg Message to be logged when check fails
@param array The array of values to be checked
@param min The smallest allowed value
"
      end

      operation 83835063 "expectValuesInRange"
	public explicit_return_type "void"
	nparams 4
	  param inout name "msg" explicit_type "String"
	  param inout name "list" explicit_type "List<T>"
	  param inout name "min" explicit_type "T"
	  param inout name "max" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Expect the list of values are in the range.

@param msg Message to be logged
@param list The list of values to be checked
@param min The min value of the range
@param max The max value of the range
"
      end

      operation 83835191 "expectValuesInRange"
	public explicit_return_type "void"
	nparams 4
	  param inout name "msg" explicit_type "String"
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "min" explicit_type "T"
	  param inout name "max" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Expect the array of values are in the range.

@param msg Message to be logged
@param array The array of values to be checked
@param min The min value of the range
@param max The max value of the range
"
      end

      operation 83835319 "expectValuesInRange"
	public explicit_return_type "void"
	nparams 4
	  param inout name "msg" explicit_type "String"
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Expect the array of values are in the range.

@param msg Message to be logged
@param array The array of values to be checked
@param min The min value of the range
@param max The max value of the range
"
      end

      operation 83835447 "expectInRange"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "msg" explicit_type "String"
	  param inout name "value" explicit_type "T"
	  param inout name "min" explicit_type "T"
	  param inout name "max" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Expect the value is in the range.

@param msg Message to be logged
@param value The value to be checked
@param min The min value of the range
@param max The max value of the range

@return {@code true} if the value was in range, {@code false} otherwise
"
      end

      operation 83835575 "expectMeteringRegionsAreSimilar"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "msg" explicit_type "String"
	  param inout name "expected" type class_ref 7152951 // MeteringRectangle
	multiplicity "[]"
	  param inout name "actual" type class_ref 7152951 // MeteringRectangle
	multiplicity "[]"
	  param in name "errorPercent" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that two metering region arrays are similar enough by ensuring that each of their width,
height, and all corners are within {@code errorPercent} of each other.

<p>Note that the length of the arrays must be the same, and each weight must be the same
as well. We assume the order is also equivalent.</p>

<p>At most 1 error per each dissimilar metering region is collected.</p>

@param msg Message to be logged
@param expected The reference 'expected' values to be used to check against
@param actual The actual values that were received
@param errorPercent Within how many percent the components should be

@return {@code true} if all expects passed, {@code false} otherwise
"
      end

      operation 83835703 "expectRectsAreSimilar"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "msg" explicit_type "String"
	  param inout name "expected" type class_ref 5772599 // Rect
	  param inout name "actual" type class_ref 5772599 // Rect
	  param in name "errorPercent" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that two rectangles are similar enough by ensuring that their width, height,
and all corners are within {@code errorPercent} of each other.

<p>Only the first error is collected, to avoid spamming several error messages when
the rectangle is hugely dissimilar.</p>

@param msg Message to be logged
@param expected The reference 'expected' value to be used to check against
@param actual The actual value that was received
@param errorPercent Within how many percent the components should be

@return {@code true} if all expects passed, {@code false} otherwise
"
      end

      operation 83835831 "expectSizesAreSimilar"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "msg" explicit_type "String"
	  param inout name "expected" type class_ref 6985911 // Size
	  param inout name "actual" type class_ref 6985911 // Size
	  param in name "errorPercent" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that two sizes are similar enough by ensuring that their width and height
are within {@code errorPercent} of each other.

<p>Only the first error is collected, to avoid spamming several error messages when
the rectangle is hugely dissimilar.</p>

@param msg Message to be logged
@param expected The reference 'expected' value to be used to check against
@param actual The actual value that was received
@param errorPercent Within how many percent the components should be

@return {@code true} if all expects passed, {@code false} otherwise
"
      end

      operation 83835959 "expectRectCentered"
	public explicit_return_type "void"
	nparams 4
	  param inout name "msg" explicit_type "String"
	  param inout name "expectedBounds" type class_ref 6985911 // Size
	  param inout name "actual" type class_ref 5772599 // Rect
	  param in name "errorPercent" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that the rectangle is centered within a certain tolerance of {@code errorPercent},
with respect to the {@code bounds} bounding rectangle.

@param msg Message to be logged
@param expectedBounds The width/height of the bounding rectangle
@param actual The actual value that was received
@param errorPercent Within how many percent the centering should be
"
      end

      operation 83836087 "expectSimilarValues"
	private explicit_return_type "boolean"
	nparams 6
	  param inout name "formattedMsg" explicit_type "String"
	  param inout name "tooSmall" explicit_type "String"
	  param inout name "tooLarge" explicit_type "String"
	  param in name "actualValue" explicit_type "int"
	  param in name "expectedValue" explicit_type "int"
	  param in name "errorPercent" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83836215 "expectNotNull"
	public explicit_return_type "void"
	nparams 2
	  param inout name "msg" explicit_type "String"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83836343 "expectNull"
	public explicit_return_type "void"
	nparams 2
	  param inout name "msg" explicit_type "String"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83836471 "checkArrayMonotonicityAndNotAllEqual"
	public explicit_return_type "void"
	nparams 2
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	  param inout name "ascendingOrder" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the values in the array are monotonically increasing (decreasing) and not all
equal.

@param array The array of values to be checked
@param ascendingOrder The monotonicity ordering to be checked with
"
      end

      operation 83836599 "expectKeyValueNotNull"
	public explicit_return_type "T"
	nparams 2
	  param inout name "characteristics" type class_ref 7148855 // CameraCharacteristics
	  param inout name "key" type class_ref 7149111 // Key
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key value is not null and return the value.

@param characteristics The {@link CameraCharacteristics} to get the key from.
@param key The {@link CameraCharacteristics} key to be checked.

@return The value of the key.
"
      end

      operation 83836727 "expectKeyValueNotNull"
	public explicit_return_type "T"
	nparams 2
	  param inout name "request" type class_ref 7147831 // CaptureRequest
	  param inout name "key" type class_ref 7149623 // Key
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key value is not null and return the value.

@param request The {@link CaptureRequest} to get the key from.
@param key The {@link CaptureRequest} key to be checked.

@return The value of the key.
"
      end

      operation 83836855 "expectKeyValueNotNull"
	public explicit_return_type "T"
	nparams 2
	  param inout name "request" type class_ref 7151543 // Builder
	  param inout name "key" type class_ref 7149623 // Key
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key value is not null and return the value.

@param request The {@link CaptureRequest#Builder} to get the key from.
@param key The {@link CaptureRequest} key to be checked.
@return The value of the key.
"
      end

      operation 83836983 "expectKeyValueNotNull"
	public explicit_return_type "T"
	nparams 2
	  param inout name "result" type class_ref 7148343 // CaptureResult
	  param inout name "key" type class_ref 7149751 // Key
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key value is not null and return the value.

@param result The {@link CaptureResult} to get the key from.
@param key The {@link CaptureResult} key to be checked.
@return The value of the key.
"
      end

      operation 83837111 "expectKeyValueNotNull"
	public explicit_return_type "T"
	nparams 3
	  param inout name "msg" explicit_type "String"
	  param inout name "result" type class_ref 7148343 // CaptureResult
	  param inout name "key" type class_ref 7149751 // Key
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<T> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key value is not null and return the value.

@param msg The message to be logged.
@param result The {@link CaptureResult} to get the key from.
@param key The {@link CaptureResult} key to be checked.
@return The value of the key.
"
      end

      operation 83837239 "expectKeyValueNotEquals"
	public explicit_return_type "void"
	nparams 3
	  param inout name "request" type class_ref 7151543 // Builder
	  param inout name "key" type class_ref 7149623 // Key
	  param inout name "expected" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key is non-null and the value is not equal to target.

@param request The The {@link CaptureRequest#Builder} to get the key from.
@param key The {@link CaptureRequest} key to be checked.
@param expected The expected value of the CaptureRequest key.
"
      end

      operation 83837367 "expectKeyValueNotEquals"
	public explicit_return_type "void"
	nparams 3
	  param inout name "result" type class_ref 7148343 // CaptureResult
	  param inout name "key" type class_ref 7149751 // Key
	  param inout name "expected" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key is non-null and the value is not equal to target.

@param result The {@link CaptureResult} to get the key from.
@param key The {@link CaptureResult} key to be checked.
@param expected The expected value of the CaptureResult key.
"
      end

      operation 83837495 "expectKeyValueEquals"
	public explicit_return_type "void"
	nparams 3
	  param inout name "result" type class_ref 7148343 // CaptureResult
	  param inout name "key" type class_ref 7149751 // Key
	  param inout name "expected" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the value is non-null and the value is equal to target.

@param result The  {@link CaptureResult} to lookup the value in.
@param key The {@link CaptureResult} key to be checked.
@param expected The expected value of the {@link CaptureResult} key.
"
      end

      operation 83837623 "expectKeyValueEquals"
	public explicit_return_type "void"
	nparams 3
	  param inout name "request" type class_ref 7151543 // Builder
	  param inout name "key" type class_ref 7149623 // Key
	  param inout name "expected" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key is non-null and the value is equal to target.

<p>Only check non-null if the target is null.</p>

@param request The The {@link CaptureRequest#Builder} to get the key from.
@param key The {@link CaptureRequest} key to be checked.
@param expected The expected value of the CaptureRequest key.
"
      end

      operation 83837751 "expectKeyValueGreaterOrEqual"
	public explicit_return_type "void"
	nparams 3
	  param inout name "result" type class_ref 7148343 // CaptureResult
	  param inout name "key" type class_ref 7149751 // Key
	  param inout name "expected" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key is non-null, and the key value is greater than the expected value.

@param result {@link CaptureResult} to check.
@param key The {@link CaptureResult} key to be checked.
@param expected The expected to be compared to the value for the given key.
"
      end

      operation 83837879 "expectKeyValueGreaterThan"
	public explicit_return_type "void"
	nparams 3
	  param inout name "characteristics" type class_ref 7148855 // CameraCharacteristics
	  param inout name "key" type class_ref 7149111 // Key
	  param inout name "expected" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key is non-null, and the key value is greater than the expected value.

@param characteristics {@link CameraCharacteristics} to check.
@param key The {@link CameraCharacteristics} key to be checked.
@param expected The expected to be compared to the value for the given key.
"
      end

      operation 83838007 "expectKeyValueInRange"
	public explicit_return_type "void"
	nparams 4
	  param inout name "characteristics" type class_ref 7148855 // CameraCharacteristics
	  param inout name "key" type class_ref 7149111 // Key
	  param inout name "min" explicit_type "T"
	  param inout name "max" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Comparable<? super T>> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key is non-null, and the key value is in the expected range.

@param characteristics {@link CameraCharacteristics} to check.
@param key The {@link CameraCharacteristics} key to be checked.
@param min The min value of the range
@param max The max value of the range
"
      end

      operation 83838135 "expectKeyValueIsIn"
	public explicit_return_type "void"
	nparams 3
	  param inout name "characteristics" type class_ref 7148855 // CameraCharacteristics
	  param inout name "key" type class_ref 7149111 // Key
	  param inout name "" explicit_type "T...expected"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key is non-null, and the key value is one of the expected values.

@param characteristics {@link CameraCharacteristics} to check.
@param key The {@link CameraCharacteristics} key to be checked.
@param expected The expected values for the given key.
"
      end

      operation 83838263 "expectKeyValueIsIn"
	public explicit_return_type "void"
	nparams 3
	  param inout name "request" type class_ref 7151543 // Builder
	  param inout name "key" type class_ref 7149623 // Key
	  param inout name "" explicit_type "T...expected"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key is non-null, and the key value is one of the expected values.

@param request The The {@link CaptureRequest#Builder} to get the key from.
@param key The {@link CaptureRequest} key to be checked.
@param expected The expected values of the CaptureRequest key.
"
      end

      operation 83838391 "expectKeyValueContains"
	public explicit_return_type "void"
	nparams 3
	  param inout name "characteristics" type class_ref 7148855 // CameraCharacteristics
	  param inout name "key" type class_ref 7149111 // Key
	  param inout name "expected" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T[]> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key is non-null, and the key value contains the expected element.

@param characteristics {@link CameraCharacteristics} to check.
@param key The {@link CameraCharacteristics} key to be checked.
@param expected The expected element to be contained in the value for the given key.
"
      end

      operation 83838519 "expectKeyValueContains"
	public explicit_return_type "void"
	nparams 3
	  param inout name "characteristics" type class_ref 7148855 // CameraCharacteristics
	  param inout name "key" type class_ref 7149111 // Key
	  param in name "expected" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<int[]> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key is non-null, and the key value contains the expected element.

@param characteristics {@link CameraCharacteristics} to check.
@param key The {@link CameraCharacteristics} key to be checked.
@param expected The expected element to be contained in the value for the given key.
"
      end

      operation 83838647 "expectKeyValueContains"
	public explicit_return_type "void"
	nparams 3
	  param inout name "characteristics" type class_ref 7148855 // CameraCharacteristics
	  param inout name "key" type class_ref 7149111 // Key
	  param inout name "expected" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<boolean[]> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the key is non-null, and the key value contains the expected element.

@param characteristics {@link CameraCharacteristics} to check.
@param key The {@link CameraCharacteristics} key to be checked.
@param expected The expected element to be contained in the value for the given key.
"
      end

      operation 83838775 "expectContains"
	public explicit_return_type "void"
	nparams 3
	  param inout name "reason" explicit_type "String"
	  param inout name "values" explicit_type "T"
	multiplicity "[]"
	  param inout name "expected" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the {@code values} array contains the expected element.

@param reason reason to print for failure.
@param values array to check for membership in.
@param expected the value to check.
"
      end

      operation 83838903 "expectContains"
	public explicit_return_type "void"
	nparams 2
	  param inout name "values" explicit_type "T"
	multiplicity "[]"
	  param inout name "expected" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7647159 "IntInMatcher"
	visibility private 
	nactuals 1
	actual class class_ref 7647287 // InMatcher
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17241911 // <realization>
	  relation 17241911 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17241911 // <realization>
	    b parent class_ref 7647287 // InMatcher
	end

	operation 83839799 "IntInMatcher"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "values" explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 83839927 "expectContains"
	public explicit_return_type "void"
	nparams 3
	  param inout name "reason" explicit_type "String"
	  param inout name "values" explicit_type "int"
	multiplicity "[]"
	  param in name "expected" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the {@code values} array contains the expected element.

<p>Specialized for primitive int arrays</p>

@param reason reason to print for failure.
@param values array to check for membership in.
@param expected the value to check.
"
      end

      operation 83840055 "expectContains"
	public explicit_return_type "void"
	nparams 2
	  param inout name "values" explicit_type "int"
	multiplicity "[]"
	  param in name "expected" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 7647543 "BooleanInMatcher"
	visibility private 
	nactuals 1
	actual class class_ref 7647287 // InMatcher
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17242039 // <realization>
	  relation 17242039 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17242039 // <realization>
	    b parent class_ref 7647287 // InMatcher
	end

	operation 83840183 "BooleanInMatcher"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "values" explicit_type "boolean"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 83840311 "expectContains"
	public explicit_return_type "void"
	nparams 3
	  param inout name "reason" explicit_type "String"
	  param inout name "values" explicit_type "boolean"
	multiplicity "[]"
	  param inout name "expected" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the {@code values} array contains the expected element.

<p>Specialized for primitive boolean arrays</p>

@param reason reason to print for failure.
@param values array to check for membership in.
@param expected the value to check.
"
      end

      operation 83840439 "expectContains"
	public explicit_return_type "void"
	nparams 2
	  param inout name "values" explicit_type "boolean"
	multiplicity "[]"
	  param inout name "expected" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the {@code values} array contains the expected element.

<p>Specialized for primitive boolean arrays</p>

@param values array to check for membership in.
@param expected the value to check.
"
      end

      operation 83840567 "expectValuesUnique"
	public explicit_return_type "void"
	nparams 2
	  param inout name "msg" explicit_type "String"
	  param inout name "list" explicit_type "List<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the element inside of the list are unique.

@param msg The message to be logged
@param list The list of values to be checked
"
      end

      operation 83840695 "expectImageProperties"
	public explicit_return_type "void"
	nparams 5
	  param inout name "msg" explicit_type "String"
	  param inout name "image" type class_ref 5893943 // Image
	  param in name "format" explicit_type "int"
	  param inout name "size" type class_ref 6985911 // Size
	  param in name "timestampNs" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7639735 "StaticMetadata"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helpers to get common static info out of the camera.

<p>Avoid boiler plate by putting repetitive get/set patterns in this class.</p>

<p>Attempt to be durable against the camera device having bad or missing metadata
by providing reasonable defaults and logging warnings when that happens.</p>


(non-Javadoc)
@see android.hardware.camera2.cts.helpers.StaticMetadata
"
      attribute 26722999 "IGNORE_SIZE_CHECK"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26723127 "SENSOR_INFO_EXPOSURE_TIME_RANGE_MIN_AT_MOST"
	class_attribute const_attribute private explicit_type "long"
	init_value " 100000L"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 100us"
      end

      attribute 26723255 "SENSOR_INFO_EXPOSURE_TIME_RANGE_MAX_AT_LEAST"
	class_attribute const_attribute private explicit_type "long"
	init_value " 100000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 100ms"
      end

      attribute 26723383 "SENSOR_INFO_SENSITIVITY_RANGE_MIN_AT_MOST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 100"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26723511 "SENSOR_INFO_SENSITIVITY_RANGE_MAX_AT_LEAST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 800"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26723639 "STATISTICS_INFO_MAX_FACE_COUNT_MIN_AT_LEAST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26723767 "TONEMAP_MAX_CURVE_POINTS_AT_LEAST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 64"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26723895 "CONTROL_AE_COMPENSATION_RANGE_DEFAULT_MIN"
	class_attribute const_attribute private explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26724023 "CONTROL_AE_COMPENSATION_RANGE_DEFAULT_MAX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17247671 // CONTROL_AE_COMPENSATION_STEP_DEFAULT (<unidirectional association>)
	relation 17247671 --->
	  a role_name "CONTROL_AE_COMPENSATION_STEP_DEFAULT" init_value " new Rational(1, 2)" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17247671 // CONTROL_AE_COMPENSATION_STEP_DEFAULT (<unidirectional association>)
	  b parent class_ref 7150007 // Rational
      end

      attribute 26724151 "REQUEST_PIPELINE_MAX_DEPTH_MAX"
	class_attribute const_attribute private explicit_type "byte"
	init_value " 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26724279 "MAX_REPROCESS_MAX_CAPTURE_STALL"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17247799 // mCharacteristics (<unidirectional association>)
	relation 17247799 --->
	  a role_name "mCharacteristics" const_relation private
	    comment " TODO: Consider making this work across any metadata object, not just camera characteristics
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17247799 // mCharacteristics (<unidirectional association>)
	  b parent class_ref 7148855 // CameraCharacteristics
      end

      class 7649207 "CheckLevel"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 26724407 "WARN"
	  public type class_ref 7649207 // CheckLevel
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Only log warnings for metadata check failures. Execution continues. 
"
	end

	attribute 26724535 "COLLECT"
	  public type class_ref 7649207 // CheckLevel
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment "Use ErrorCollector to collect the metadata check failures, Execution
continues.

"
	end

	attribute 26724663 "ASSERT"
	  public type class_ref 7649207 // CheckLevel
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Assert the metadata check failures. Execution aborts. "
	end
      end

      classrelation 17247927 // mLevel (<unidirectional association>)
	relation 17247927 --->
	  a role_name "mLevel" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17247927 // mLevel (<unidirectional association>)
	  b parent class_ref 7649207 // CheckLevel
      end

      classrelation 17248055 // mCollector (<unidirectional association>)
	relation 17248055 --->
	  a role_name "mCollector" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17248055 // mCollector (<unidirectional association>)
	  b parent class_ref 7639607 // CameraErrorCollector
      end

      operation 83855415 "StaticMetadata"
	public explicit_return_type ""
	nparams 1
	  param inout name "characteristics" type class_ref 7148855 // CameraCharacteristics
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new StaticMetadata object.

<p> Default constructor, only log warnings for the static metadata check failures</p>

@param characteristics static info for a camera
@throws IllegalArgumentException if characteristics was null
"
      end

      operation 83855543 "StaticMetadata"
	public explicit_return_type ""
	nparams 2
	  param inout name "characteristics" type class_ref 7148855 // CameraCharacteristics
	  param inout name "collector" type class_ref 7639607 // CameraErrorCollector
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new StaticMetadata object with {@link CameraErrorCollector}.
<p>
When level is not {@link CheckLevel.COLLECT}, the {@link CameraErrorCollector} will be
ignored, otherwise, it will be used to log the check failures.
</p>

@param characteristics static info for a camera
@param collector The {@link CameraErrorCollector} used by this StaticMetadata
@throws IllegalArgumentException if characteristics or collector was null.
"
      end

      operation 83855671 "StaticMetadata"
	public explicit_return_type ""
	nparams 3
	  param inout name "characteristics" type class_ref 7148855 // CameraCharacteristics
	  param inout name "level" type class_ref 7649207 // CheckLevel
	  param inout name "collector" type class_ref 7639607 // CameraErrorCollector
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new StaticMetadata object with {@link CheckLevel} and
{@link CameraErrorCollector}.
<p>
When level is not {@link CheckLevel.COLLECT}, the {@link CameraErrorCollector} will be
ignored, otherwise, it will be used to log the check failures.
</p>

@param characteristics static info for a camera
@param level The {@link CheckLevel} of this StaticMetadata
@param collector The {@link CameraErrorCollector} used by this StaticMetadata
@throws IllegalArgumentException if characteristics was null or level was
        {@link CheckLevel.COLLECT} but collector was null.
"
      end

      operation 83855799 "getCharacteristics"
	public return_type class_ref 7148855 // CameraCharacteristics
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the CameraCharacteristics associated with this StaticMetadata.

@return A non-null CameraCharacteristics object
"
      end

      operation 83855927 "isHardwareLevelFull"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether or not the hardware level reported by android.info.supportedHardwareLevel
is {@value CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_FULL}.

<p>If the camera device is not reporting the hardwareLevel, this
will cause the test to fail.</p>

@return {@code true} if the device is {@code FULL}, {@code false} otherwise.
"
      end

      operation 83856055 "getHardwareLevelChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether or not the hardware level reported by android.info.supportedHardwareLevel
Return the supported hardware level of the device, or fail if no value is reported.

@return the supported hardware level as a constant defined for
     {@link CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}.
"
      end

      operation 83856183 "isHardwareLevelLegacy"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether or not the hardware level reported by android.info.supportedHardwareLevel
is {@value CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY}.

<p>If the camera device is not reporting the hardwareLevel, this
will cause the test to fail.</p>

@return {@code true} if the device is {@code LEGACY}, {@code false} otherwise.
"
      end

      operation 83856311 "isPerFrameControlSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether or not the per frame control is supported by the camera device.

@return {@code true} if per frame control is supported, {@code false} otherwise.
"
      end

      operation 83856439 "getSyncMaxLatency"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the maximum number of frames to wait for a request settings being applied

@return CameraMetadata.SYNC_MAX_LATENCY_UNKNOWN for unknown latency
        CameraMetadata.SYNC_MAX_LATENCY_PER_FRAME_CONTROL for per frame control
        a positive int otherwise
"
      end

      operation 83856567 "isHardwareLevelLimited"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether or not the hardware level reported by android.info.supportedHardwareLevel
is {@value CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED}.

<p>If the camera device is incorrectly reporting the hardwareLevel, this
will always return {@code true}.</p>

@return {@code true} if the device is {@code LIMITED}, {@code false} otherwise.
"
      end

      operation 83856695 "isHardwareLevelLimitedOrBetter"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether or not the hardware level reported by {@code android.info.supportedHardwareLevel}
is at least {@link CameraMetadata#INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED}.

<p>If the camera device is incorrectly reporting the hardwareLevel, this
will always return {@code false}.</p>

@return
         {@code true} if the device is {@code LIMITED} or {@code FULL},
         {@code false} otherwise (i.e. LEGACY).
"
      end

      operation 83856823 "getPartialResultCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the maximum number of partial result a request can expect

@return 1 if partial result is not supported.
        a integer value larger than 1 if partial result is supported.
"
      end

      operation 83856951 "getExposureClampToRange"
	public explicit_return_type "long"
	nparams 1
	  param in name "exposure" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the exposure time value and clamp to the range if needed.

@param exposure Input exposure time value to check.
@return Exposure value in the legal range.
"
      end

      operation 83857079 "hasFocuser"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the camera device support focuser.

@return true if camera device support focuser, false otherwise.
"
      end

      operation 83857207 "hasFlash"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the camera device has flash unit.
@return true if flash unit is available, false otherwise.
"
      end

      operation 83857335 "getMinimumFocusDistanceChecked"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get minimum focus distance.

@return minimum focus distance, 0 if minimum focus distance is invalid.
"
      end

      operation 83857463 "getFocusDistanceCalibrationChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get focusDistanceCalibration.

@return focusDistanceCalibration, UNCALIBRATED if value is invalid.
"
      end

      operation 83857591 "getAeMaxRegionsChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get max AE regions and do sanity check.

@return AE max regions supported by the camera device
"
      end

      operation 83857719 "getAwbMaxRegionsChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get max AWB regions and do sanity check.

@return AWB max regions supported by the camera device
"
      end

      operation 83857847 "getAfMaxRegionsChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get max AF regions and do sanity check.

@return AF max regions supported by the camera device
"
      end

      operation 83857975 "getAeAvailableAntiBandingModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the available anti-banding modes.

@return The array contains available anti-banding modes.
"
      end

      operation 83858103 "isAntiBandingOffModeSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the antibanding OFF mode is supported.

@return true if antibanding OFF mode is supported, false otherwise.
"
      end

      operation 83858231 "getFlashInfoChecked"
	public explicit_return_type "Boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83858359 "getAvailableTestPatternModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83858487 "getAvailableThumbnailSizesChecked"
	public return_type class_ref 6985911 // Size
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available thumbnail sizes and do the sanity check.

@return The array of available thumbnail sizes
"
      end

      operation 83858615 "getAvailableFocalLengthsChecked"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available focal lengths and do the sanity check.

@return The array of available focal lengths
"
      end

      operation 83858743 "getAvailableAperturesChecked"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available apertures and do the sanity check.

@return The non-null array of available apertures
"
      end

      operation 83858871 "getAvailableHotPixelModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get and check the available hot pixel map modes.

@return the available hot pixel map modes
"
      end

      operation 83858999 "getAvailableFaceDetectModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get and check available face detection modes.

@return The non-null array of available face detection modes
"
      end

      operation 83859127 "getMaxFaceCountChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get and check max face detected count.

@return max number of faces that can be detected
"
      end

      operation 83859255 "getAvailableToneMapModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get and check the available tone map modes.

@return the available tone map modes
"
      end

      operation 83859383 "getMaxTonemapCurvePointChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get and check max tonemap curve point.

@return Max tonemap curve points.
"
      end

      operation 83859511 "getPixelArraySizeChecked"
	public return_type class_ref 6985911 // Size
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get and check pixel array size.
"
      end

      operation 83859639 "getPreCorrectedActiveArraySizeChecked"
	public return_type class_ref 5772599 // Rect
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get and check pre-correction active array size.
"
      end

      operation 83859767 "getActiveArraySizeChecked"
	public return_type class_ref 5772599 // Rect
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get and check active array size.
"
      end

      operation 83859895 "getRawDimensChecked"
	public return_type class_ref 6985911 // Size
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the dimensions to use for RAW16 buffers.
"
      end

      operation 83860023 "getSensitivityClampToRange"
	public explicit_return_type "int"
	nparams 1
	  param in name "sensitivity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the sensitivity value and clamp to the range if needed.

@param sensitivity Input sensitivity value to check.
@return Sensitivity value in legal range.
"
      end

      operation 83860151 "getMaxAnalogSensitivityChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get maxAnalogSensitivity for a camera device.
<p>
This is only available for FULL capability device, return 0 if it is unavailable.
</p>

@return maxAnalogSensitivity, 0 if it is not available.
"
      end

      operation 83860279 "getHyperfocalDistanceChecked"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get hyperfocalDistance and do the sanity check.
<p>
Note that, this tag is optional, will return -1 if this tag is not
available.
</p>

@return hyperfocalDistance of this device, -1 if this tag is not available.
"
      end

      operation 83860407 "getSensitivityMinimumOrDefault"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the minimum value for a sensitivity range from android.sensor.info.sensitivityRange.

<p>If the camera is incorrectly reporting values, log a warning and return
the default value instead, which is the largest minimum value required to be supported
by all camera devices.</p>

@return The value reported by the camera device or the defaultValue otherwise.
"
      end

      operation 83860535 "getSensitivityMinimumOrDefault"
	public explicit_return_type "int"
	nparams 1
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the minimum value for a sensitivity range from android.sensor.info.sensitivityRange.

<p>If the camera is incorrectly reporting values, log a warning and return
the default value instead.</p>

@param defaultValue Value to return if no legal value is available
@return The value reported by the camera device or the defaultValue otherwise.
"
      end

      operation 83860663 "getSensitivityMaximumOrDefault"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the maximum value for a sensitivity range from android.sensor.info.sensitivityRange.

<p>If the camera is incorrectly reporting values, log a warning and return
the default value instead, which is the smallest maximum value required to be supported
by all camera devices.</p>

@return The value reported by the camera device or the defaultValue otherwise.
"
      end

      operation 83860791 "getSensitivityMaximumOrDefault"
	public explicit_return_type "int"
	nparams 1
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the maximum value for a sensitivity range from android.sensor.info.sensitivityRange.

<p>If the camera is incorrectly reporting values, log a warning and return
the default value instead.</p>

@param defaultValue Value to return if no legal value is available
@return The value reported by the camera device or the defaultValue otherwise.
"
      end

      operation 83860919 "getExposureMinimumOrDefault"
	public explicit_return_type "long"
	nparams 1
	  param in name "defaultValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the minimum value for an exposure range from android.sensor.info.exposureTimeRange.

<p>If the camera is incorrectly reporting values, log a warning and return
the default value instead.</p>

@param defaultValue Value to return if no legal value is available
@return The value reported by the camera device or the defaultValue otherwise.
"
      end

      operation 83861047 "getExposureMinimumOrDefault"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the minimum value for an exposure range from android.sensor.info.exposureTimeRange.

<p>If the camera is incorrectly reporting values, log a warning and return
the default value instead, which is the largest minimum value required to be supported
by all camera devices.</p>

@return The value reported by the camera device or the defaultValue otherwise.
"
      end

      operation 83861175 "getExposureMaximumOrDefault"
	public explicit_return_type "long"
	nparams 1
	  param in name "defaultValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the maximum value for an exposure range from android.sensor.info.exposureTimeRange.

<p>If the camera is incorrectly reporting values, log a warning and return
the default value instead.</p>

@param defaultValue Value to return if no legal value is available
@return The value reported by the camera device or the defaultValue otherwise.
"
      end

      operation 83861303 "getExposureMaximumOrDefault"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the maximum value for an exposure range from android.sensor.info.exposureTimeRange.

<p>If the camera is incorrectly reporting values, log a warning and return
the default value instead, which is the smallest maximum value required to be supported
by all camera devices.</p>

@return The value reported by the camera device or the defaultValue otherwise.
"
      end

      operation 83861431 "getAvailableControlModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "get android.control.availableModes and do the sanity check.

@return available control modes.
"
      end

      operation 83861559 "isSceneModeSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83861687 "getAeAvailableModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get aeAvailableModes and do the sanity check.

<p>Depending on the check level this class has, for WAR or COLLECT levels,
If the aeMode list is invalid, return an empty mode array. The the caller doesn't
have to abort the execution even the aeMode list is invalid.</p>
@return AE available modes
"
      end

      operation 83861815 "getAwbAvailableModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available AWB modes and do the sanity check.

@return array that contains available AWB modes, empty array if awbAvailableModes is
unavailable.
"
      end

      operation 83861943 "getAfAvailableModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available AF modes and do the sanity check.

@return array that contains available AF modes, empty array if afAvailableModes is
unavailable.
"
      end

      operation 83862071 "getRawOutputSizesChecked"
	public return_type class_ref 6985911 // Size
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get supported raw output sizes and do the check.

@return Empty size array if raw output is not supported
"
      end

      operation 83862199 "getJpegOutputSizesChecked"
	public return_type class_ref 6985911 // Size
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get supported jpeg output sizes and do the check.

@return Empty size array if jpeg output is not supported
"
      end

      class 7649335 "StreamDirection"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 26724791 "Output"
	  public type class_ref 7649335 // StreamDirection
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Stream is used with {@link android.hardware.camera2.CameraDevice#configureOutputs} 
"
	end

	attribute 26724919 "Input"
	  public type class_ref 7649335 // StreamDirection
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Stream is used with {@code CameraDevice#configureInputs} -- NOT YET PUBLIC "
	end
      end

      operation 83862327 "getAvailableFormats"
	public explicit_return_type "int"
	nparams 1
	  param inout name "direction" type class_ref 7649335 // StreamDirection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available formats for a given direction.

@param direction The stream direction, input or output.
@return The formats of the given direction, empty array if no available format is found.
"
      end

      operation 83862455 "getValidOutputFormatsForInput"
	public explicit_return_type "int"
	nparams 1
	  param in name "inputFormat" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get valid output formats for a given input format.

@param inputFormat The input format used to produce the output images.
@return The output formats for the given input format, empty array if
        no available format is found.
"
      end

      operation 83862583 "getAvailableSizesForFormatChecked"
	public return_type class_ref 6985911 // Size
	nparams 2
	  param in name "format" explicit_type "int"
	  param inout name "direction" type class_ref 7649335 // StreamDirection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available sizes for given format and direction.

@param format The format for the requested size array.
@param direction The stream direction, input or output.
@return The sizes of the given format, empty array if no available size is found.
"
      end

      operation 83862711 "getAvailableSizesForFormatChecked"
	public return_type class_ref 6985911 // Size
	nparams 4
	  param in name "format" explicit_type "int"
	  param inout name "direction" type class_ref 7649335 // StreamDirection
	  param inout name "fastSizes" explicit_type "boolean"
	  param inout name "slowSizes" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available sizes for given format and direction, and whether to limit to slow or fast
resolutions.

@param format The format for the requested size array.
@param direction The stream direction, input or output.
@param fastSizes whether to include getOutputSizes() sizes (generally faster)
@param slowSizes whether to include getHighResolutionOutputSizes() sizes (generally slower)
@return The sizes of the given format, empty array if no available size is found.
"
      end

      operation 83862839 "getAeAvailableTargetFpsRangesChecked"
	public return_type class_ref 7149879 // Range
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Integer>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"raw\")
"
	
	
	
	comment "Get available AE target fps ranges.

@return Empty int array if aeAvailableTargetFpsRanges is invalid.
"
      end

      operation 83862967 "getAeMaxTargetFpsRange"
	public return_type class_ref 7149879 // Range
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Integer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the highest supported target FPS range.
Prioritizes maximizing the min FPS, then the max FPS without lowering min FPS.
"
      end

      operation 83863095 "getMaxFrameDurationChecked"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get max frame duration.

@return 0 if maxFrameDuration is null
"
      end

      operation 83863223 "getAvailableMinFrameDurationsForFormatChecked"
	public return_type class_ref 6985911 // Size
	nparams 1
	  param in name "format" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}HashMap<${type}, Long> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available minimal frame durations for a given format.

@param format One of the format from {@link ImageFormat}.
@return HashMap of minimal frame durations for different sizes, empty HashMap
        if availableMinFrameDurations is null.
"
      end

      operation 83863351 "getAvailableEdgeModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83863479 "getAvailableNoiseReductionModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83863607 "getAeCompensationStepChecked"
	public return_type class_ref 7150007 // Rational
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get value of key android.control.aeCompensationStep and do the sanity check.

@return default value if the value is null.
"
      end

      operation 83863735 "getAeCompensationRangeChecked"
	public return_type class_ref 7149879 // Range
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Integer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get value of key android.control.aeCompensationRange and do the sanity check.

@return default value if the value is null or malformed.
"
      end

      operation 83863863 "getAvailableVideoStabilizationModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get availableVideoStabilizationModes and do the sanity check.

@return available video stabilization modes, empty array if it is unavailable.
"
      end

      operation 83863991 "isVideoStabilizationSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83864119 "getAvailableOpticalStabilizationChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get availableOpticalStabilization and do the sanity check.

@return available optical stabilization modes, empty array if it is unavailable.
"
      end

      operation 83864247 "getAvailableMaxDigitalZoomChecked"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the scaler's max digital zoom ({@code >= 1.0f}) ratio between crop and active array
@return the max zoom ratio, or {@code 1.0f} if the value is unavailable
"
      end

      operation 83864375 "getAvailableSceneModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83864503 "getAvailableEffectModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83864631 "getAvailableColorAberrationModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get and check the available color aberration modes

@return the available color aberration modes
"
      end

      operation 83864759 "getPipelineMaxDepthChecked"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get max pipeline depth and do the sanity check.

@return max pipeline depth, default value if it is not available.
"
      end

      operation 83864887 "getAvailableLensShadingModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available lens shading modes.
"
      end

      operation 83865015 "getAvailableLensShadingMapModesChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available lens shading map modes.
"
      end

      operation 83865143 "getAvailableCapabilitiesChecked"
	public explicit_return_type "List<Integer>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get available capabilities and do the sanity check.

@return reported available capabilities list, empty list if the value is unavailable.
"
      end

      operation 83865271 "isCapabilitySupported"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "capability" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether the current device supports a capability or not.

@param capability (non-negative)

@return {@code true} if the capability is supported, {@code false} otherwise.

@throws IllegalArgumentException if {@code capability} was negative

@see CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES
"
      end

      operation 83865399 "areCharacteristicsKeysAvailable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "keys" explicit_type "Collection<Key<?>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether or not all the {@code keys} are available characteristics keys
(as in {@link CameraCharacteristics#getKeys}.

<p>If this returns {@code true}, then querying for this key from a characteristics
object will always return a non-{@code null} value.</p>

@param keys collection of camera characteristics keys
@return whether or not all characteristics keys are available
"
      end

      operation 83865527 "areResultKeysAvailable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "keys" explicit_type "Collection<CaptureResult.Key<?>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether or not all the {@code keys} are available result keys
(as in {@link CameraCharacteristics#getAvailableCaptureResultKeys}.

<p>If this returns {@code true}, then querying for this key from a result
object will almost always return a non-{@code null} value.</p>

<p>In some cases (e.g. lens shading map), the request must have additional settings
configured in order for the key to correspond to a value.</p>

@param keys collection of capture result keys
@return whether or not all result keys are available
"
      end

      operation 83865655 "areRequestKeysAvailable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "keys" explicit_type "Collection<CaptureRequest.Key<?>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether or not all the {@code keys} are available request keys
(as in {@link CameraCharacteristics#getAvailableCaptureRequestKeys}.

<p>If this returns {@code true}, then setting this key in the request builder
may have some effect (and if it's {@code false}, then the camera device will
definitely ignore it).</p>

<p>In some cases (e.g. manual control of exposure), other keys must be also be set
in order for a key to take effect (e.g. control.mode set to OFF).</p>

@param keys collection of capture request keys
@return whether or not all result keys are available
"
      end

      operation 83865783 "areKeysAvailable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "keys" explicit_type "Key<?>..."
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SafeVarargs
"
	
	
	
	comment "Determine whether or not all the {@code keys} are available characteristics keys
(as in {@link CameraCharacteristics#getKeys}.

<p>If this returns {@code true}, then querying for this key from a characteristics
object will always return a non-{@code null} value.</p>

@param keys one or more camera characteristic keys
@return whether or not all characteristics keys are available
"
      end

      operation 83865911 "areKeysAvailable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "keys" explicit_type "CaptureResult.Key<?>..."
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SafeVarargs
"
	
	
	
	comment "Determine whether or not all the {@code keys} are available result keys
(as in {@link CameraCharacteristics#getAvailableCaptureResultKeys}.

<p>If this returns {@code true}, then querying for this key from a result
object will almost always return a non-{@code null} value.</p>

<p>In some cases (e.g. lens shading map), the request must have additional settings
configured in order for the key to correspond to a value.</p>

@param keys one or more capture result keys
@return whether or not all result keys are available
"
      end

      operation 83866039 "areKeysAvailable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "keys" explicit_type "CaptureRequest.Key<?>..."
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SafeVarargs
"
	
	
	
	comment "Determine whether or not all the {@code keys} are available request keys
(as in {@link CameraCharacteristics#getAvailableCaptureRequestKeys}.

<p>If this returns {@code true}, then setting this key in the request builder
may have some effect (and if it's {@code false}, then the camera device will
definitely ignore it).</p>

<p>In some cases (e.g. manual control of exposure), other keys must be also be set
in order for a key to take effect (e.g. control.mode set to OFF).</p>

@param keys one or more capture request keys
@return whether or not all result keys are available
"
      end

      operation 83866167 "isAeLockSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if camera device support AE lock control

@return {@code true} if AE lock control is supported
"
      end

      operation 83866295 "isAwbLockSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if camera device support AWB lock control

@return {@code true} if AWB lock control is supported
"
      end

      operation 83866423 "isManualLensShadingMapSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if camera device support manual lens shading map control

@return {@code true} if manual lens shading map control is supported
"
      end

      operation 83866551 "isColorCorrectionSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if camera device support manual color correction control

@return {@code true} if manual color correction control is supported
"
      end

      operation 83866679 "isManualToneMapSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if camera device support manual tone mapping control

@return {@code true} if manual tone mapping control is supported
"
      end

      operation 83866807 "isManualColorAberrationControlSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if camera device support manual color aberration control

@return {@code true} if manual color aberration control is supported
"
      end

      operation 83866935 "isEdgeModeControlSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if camera device support edge mode control

@return {@code true} if edge mode control is supported
"
      end

      operation 83867063 "isHotPixelMapModeControlSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if camera device support hot pixel mode control

@return {@code true} if hot pixel mode control is supported
"
      end

      operation 83867191 "isNoiseReductionModeControlSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if camera device support noise reduction mode control

@return {@code true} if noise reduction mode control is supported
"
      end

      operation 83867319 "getMaxNumOutputStreamsRawChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get max number of output raw streams and do the basic sanity check.

@return reported max number of raw output stream
"
      end

      operation 83867447 "getMaxNumOutputStreamsProcessedChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get max number of output processed streams and do the basic sanity check.

@return reported max number of processed output stream
"
      end

      operation 83867575 "getMaxNumOutputStreamsProcessedStallChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get max number of output stalling processed streams and do the basic sanity check.

@return reported max number of stalling processed output stream
"
      end

      operation 83867703 "getLensFacingChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get lens facing and do the sanity check
@return lens facing, return default value (BACK) if value is unavailable.
"
      end

      operation 83867831 "getMaxCaptureStallOrDefault"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get maxCaptureStall frames or default value (if value doesn't exist)
@return maxCaptureStall frames or default value.
"
      end

      operation 83867959 "getScalerCroppingTypeChecked"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the scaler's cropping type (center only or freeform)
@return cropping type, return default value (CENTER_ONLY) if value is unavailable
"
      end

      operation 83868087 "isConstrainedHighSpeedVideoSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the constrained high speed video is supported by the camera device.
The high speed FPS ranges and sizes are sanitized in
ExtendedCameraCharacteristicsTest#testConstrainedHighSpeedCapability.

@return true if the constrained high speed video is supported, false otherwise.
"
      end

      operation 83868215 "isHighSpeedVideoSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if high speed video is supported (HIGH_SPEED_VIDEO scene mode is
supported, supported high speed fps ranges and sizes are valid).

@return true if high speed video is supported.
"
      end

      operation 83868343 "isDepthOutputSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if depth output is supported, based on the depth capability
"
      end

      operation 83868471 "isColorOutputSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if standard outputs (PRIVATE, YUV, JPEG) outputs are supported, based on the
backwards-compatible capability
"
      end

      operation 83868599 "isOpticalBlackRegionSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if optical black regions key is supported.
"
      end

      operation 83868727 "isDynamicBlackLevelSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the dynamic black level is supported.

<p>
Note that: This also indicates if the white level is supported, as dynamic black and white
level must be all supported or none of them is supported.
</p>
"
      end

      operation 83868855 "getArrayElementOrDefault"
	private explicit_return_type "T"
	nparams 5
	  param inout name "key" type class_ref 7149111 // Key
	  param inout name "defaultValue" explicit_type "T"
	  param inout name "name" explicit_type "String"
	  param in name "index" explicit_type "int"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value in index for a fixed-size array from a given key.

<p>If the camera device is incorrectly reporting values, log a warning and return
the default value instead.</p>

@param key Key to fetch
@param defaultValue Default value to return if camera device uses invalid values
@param name Human-readable name for the array index (logging only)
@param index Array index of the subelement
@param size Expected fixed size of the array

@return The value reported by the camera device, or the defaultValue otherwise.
"
      end

      operation 83868983 "getArrayElementNonNull"
	private explicit_return_type "T"
	nparams 2
	  param inout name "key" type class_ref 7149111 // Key
	  param in name "element" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetch an array sub-element from an array value given by a key.

<p>
Prints a warning if the sub-element was null.
</p>

<p>Use for variable-size arrays since this does not check the array size.</p>

@param key Metadata key to look up
@param element A non-negative index value.
@return The array sub-element, or null if the checking failed.
"
      end

      operation 83869111 "getArrayElementCheckRangeNonNull"
	private explicit_return_type "T"
	nparams 3
	  param inout name "key" type class_ref 7149111 // Key
	  param in name "element" explicit_type "int"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetch an array sub-element from an array value given by a key.

<p>
Prints a warning if the array size does not match the size, or if the sub-element was null.
</p>

@param key Metadata key to look up
@param element The index in [0,size)
@param size A positive size value or otherwise {@value #IGNORE_SIZE_CHECK}
@return The array sub-element, or null if the checking failed.
"
      end

      operation 83869239 "getValueFromKeyNonNull"
	public explicit_return_type "T"
	nparams 1
	  param inout name "key" type class_ref 7149111 // Key
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the key, logging warnings for null values.
"
      end

      operation 83869367 "checkArrayValuesInRange"
	private explicit_return_type "void"
	nparams 4
	  param inout name "key" type class_ref 7149111 // Key
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<int[]> ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83869495 "checkArrayValuesInRange"
	private explicit_return_type "void"
	nparams 4
	  param inout name "key" type class_ref 7149111 // Key
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	  param in name "min" explicit_type "byte"
	  param in name "max" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<byte[]> ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83869623 "checkElementDistinct"
	private explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 7149111 // Key
	  param inout name "list" explicit_type "List<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<U, T> ${type} ${name}${(}${t0}<U> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the uniqueness of the values in a list.

@param key The key to be checked
@param list The list contains the value of the key
"
      end

      operation 83869751 "checkTrueForKey"
	private explicit_return_type "void"
	nparams 3
	  param inout name "key" type class_ref 7149111 // Key
	  param inout name "message" explicit_type "String"
	  param inout name "condition" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83869879 "containsAllOrNone"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "observedModes" explicit_type "Collection<T>"
	  param inout name "coupledModes" explicit_type "Collection<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper function to check if the coupled modes are either all present or all non-present "
      end

      operation 83870007 "failKeyCheck"
	private explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 7149111 // Key
	  param inout name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7639863 "CameraTestResultPrinter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 26718903 "INST_STATUS_IN_PROGRESS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17244215 // mInst (<unidirectional association>)
	relation 17244215 --->
	  a role_name "mInst" init_value " null" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17244215 // mInst (<unidirectional association>)
	  b parent class_ref 6953015 // Instrumentation
      end

      attribute 26719031 "mWriteToFile"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83841719 "CameraTestResultPrinter"
	public explicit_return_type ""
	nparams 2
	  param inout name "instrumentation" type class_ref 6953015 // Instrumentation
	  param inout name "writeToFile" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83841847 "printStatus"
	public explicit_return_type "void"
	nparams 3
	  param in name "numAttempts" explicit_type "int"
	  param in name "iteration" explicit_type "int"
	  param inout name "cameraId" explicit_type "String"
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83841975 "printStatus"
	public explicit_return_type "void"
	nparams 2
	  param in name "numAttempts" explicit_type "int"
	  param in name "iteration" explicit_type "int"
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Report the test results to instrumentation status or a file.
"
      end

      operation 83842103 "sendInstrumentationStatus"
	private explicit_return_type "void"
	nparams 3
	  param in name "numAttempts" explicit_type "int"
	  param in name "iteration" explicit_type "int"
	  param inout name "cameraId" explicit_type "String"
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write stats to instrumentation results.
"
      end

      operation 83842231 "writeToFile"
	private explicit_return_type "void"
	nparams 3
	  param in name "numAttempts" explicit_type "int"
	  param in name "iteration" explicit_type "int"
	  param inout name "cameraId" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83842359 "purgeFiles"
	private explicit_return_type "void"
	nparams 1
	  param inout name "path" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove sub directories and their contents, but not given directory."
      end
    end

    class 7639991 "CameraTestUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A package private utility class for wrapping up the camera2 framework test common utility
functions


(non-Javadoc)
@see android.hardware.camera2.cts.CameraTestUtils
"
      class 7640119 "SimpleCaptureCallback"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17246519 // <generalisation>
	  relation 17246519 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17246519 // <generalisation>
	    b parent class_ref 7147959 // CaptureCallback
	end

	classrelation 17246647 // mQueue (<unidirectional association>)
	  relation 17246647 --->
	    stereotype "LinkedBlockingQueue"
	    a role_name "mQueue" init_value "
                new LinkedBlockingQueue<TotalCaptureResult>()" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 17246647 // mQueue (<unidirectional association>)
	    b parent class_ref 7148471 // TotalCaptureResult
	end

	classrelation 17246775 // mFailureQueue (<unidirectional association>)
	  relation 17246775 --->
	    stereotype "LinkedBlockingQueue"
	    a role_name "mFailureQueue" init_value "
                new LinkedBlockingQueue<>()" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 17246775 // mFailureQueue (<unidirectional association>)
	    b parent class_ref 7148599 // CaptureFailure
	end

	classrelation 17246903 // mCaptureStartQueue (<unidirectional association>)
	  relation 17246903 --->
	    stereotype "LinkedBlockingQueue"
	    a role_name "mCaptureStartQueue" init_value "
                new LinkedBlockingQueue<>()" const_relation private
	      comment " Pair<CaptureRequest, Long> is a pair of capture request and timestamp.
"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}<CaptureRequest, Long>> ${name}${value};
"
	      classrelation_ref 17246903 // mCaptureStartQueue (<unidirectional association>)
	    b parent class_ref 7022135 // Pair
	end

	attribute 26722487 "mNumFramesArrived"
	  private explicit_type "AtomicLong"
	  init_value " new AtomicLong(0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 83844407 "onCaptureStarted"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "session" type class_ref 7147575 // CameraCaptureSession
	    param inout name "request" type class_ref 7147831 // CaptureRequest
	    param in name "timestamp" explicit_type "long"
	    param in name "frameNumber" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83844535 "onCaptureCompleted"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "session" type class_ref 7147575 // CameraCaptureSession
	    param inout name "request" type class_ref 7147831 // CaptureRequest
	    param inout name "result" type class_ref 7148471 // TotalCaptureResult
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83844663 "onCaptureFailed"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "session" type class_ref 7147575 // CameraCaptureSession
	    param inout name "request" type class_ref 7147831 // CaptureRequest
	    param inout name "failure" type class_ref 7148599 // CaptureFailure
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83844791 "onCaptureSequenceCompleted"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "session" type class_ref 7147575 // CameraCaptureSession
	    param in name "sequenceId" explicit_type "int"
	    param in name "frameNumber" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83844919 "getTotalNumFrames"
	  public explicit_return_type "long"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83845047 "getCaptureResult"
	  public return_type class_ref 7148343 // CaptureResult
	  nparams 1
	    param in name "timeout" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83845175 "getCaptureResult"
	  public return_type class_ref 7148471 // TotalCaptureResult
	  nparams 2
	    param in name "timeout" explicit_type "long"
	    param in name "timestamp" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83845303 "getTotalCaptureResult"
	  public return_type class_ref 7148471 // TotalCaptureResult
	  nparams 1
	    param in name "timeout" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83845431 "getCaptureResultForRequest"
	  public return_type class_ref 7148343 // CaptureResult
	  nparams 2
	    param inout name "myRequest" type class_ref 7147831 // CaptureRequest
	    param in name "numResultsWait" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the {@link #CaptureResult capture result} for a given
{@link #CaptureRequest capture request}.

@param myRequest The {@link #CaptureRequest capture request} whose
           corresponding {@link #CaptureResult capture result} was
           being waited for
@param numResultsWait Number of frames to wait for the capture result
           before timeout.
@throws TimeoutRuntimeException If more than numResultsWait results are
           seen before the result matching myRequest arrives, or each
           individual wait for result times out after
           {@value #CAPTURE_RESULT_TIMEOUT_MS}ms.
"
	end

	operation 83845559 "getTotalCaptureResultForRequest"
	  public return_type class_ref 7148471 // TotalCaptureResult
	  nparams 2
	    param inout name "myRequest" type class_ref 7147831 // CaptureRequest
	    param in name "numResultsWait" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the {@link #TotalCaptureResult total capture result} for a given
{@link #CaptureRequest capture request}.

@param myRequest The {@link #CaptureRequest capture request} whose
           corresponding {@link #TotalCaptureResult capture result} was
           being waited for
@param numResultsWait Number of frames to wait for the capture result
           before timeout.
@throws TimeoutRuntimeException If more than numResultsWait results are
           seen before the result matching myRequest arrives, or each
           individual wait for result times out after
           {@value #CAPTURE_RESULT_TIMEOUT_MS}ms.
"
	end

	operation 83845687 "getTotalCaptureResultsForRequests"
	  public return_type class_ref 7148471 // TotalCaptureResult
	  nparams 2
	    param inout name "captureRequests" explicit_type "List<CaptureRequest>"
	    param in name "numResultsWait" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get an array of {@link #TotalCaptureResult total capture results} for a given list of
{@link #CaptureRequest capture requests}. This can be used when the order of results
may not the same as the order of requests.

@param captureRequests The list of {@link #CaptureRequest capture requests} whose
           corresponding {@link #TotalCaptureResult capture results} are
           being waited for.
@param numResultsWait Number of frames to wait for the capture results
           before timeout.
@throws TimeoutRuntimeException If more than numResultsWait results are
           seen before all the results matching captureRequests arrives.
"
	end

	operation 83845815 "getCaptureFailures"
	  public return_type class_ref 7148599 // CaptureFailure
	  nparams 1
	    param in name "maxNumFailures" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get an array list of {@link #CaptureFailure capture failure} with maxNumFailures entries
at most. If it times out before maxNumFailures failures are received, return the failures
received so far.

@param maxNumFailures The maximal number of failures to return. If it times out before
                      the maximal number of failures are received, return the received
                      failures so far.
@throws UnsupportedOperationException If an error happens while waiting on the failure.
"
	end

	operation 83845943 "waitForCaptureStart"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "request" type class_ref 7147831 // CaptureRequest
	    param inout name "timestamp" explicit_type "Long"
	    param in name "numCaptureStartsWait" explicit_type "int"
	  nexceptions 1
	    explicit_exception "Exception"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Wait until the capture start of a request and expected timestamp arrives or it times
out after a number of capture starts.

@param request The request for the capture start to wait for.
@param timestamp The timestamp for the capture start to wait for.
@param numCaptureStartsWait The number of capture start events to wait for before timing
                            out.
"
	end

	operation 83846071 "hasMoreResults"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83846199 "drain"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 26719159 "VERBOSE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " Log.isLoggable(TAG, Log.VERBOSE)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26719287 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " Log.isLoggable(TAG, Log.DEBUG)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17244599 // SIZE_BOUND_1080P (<unidirectional association>)
	relation 17244599 --->
	  a role_name "SIZE_BOUND_1080P" init_value " new Size(1920, 1088)" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17244599 // SIZE_BOUND_1080P (<unidirectional association>)
	  b parent class_ref 6985911 // Size
      end

      classrelation 17244727 // SIZE_BOUND_2160P (<unidirectional association>)
	relation 17244727 --->
	  a role_name "SIZE_BOUND_2160P" init_value " new Size(3840, 2160)" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17244727 // SIZE_BOUND_2160P (<unidirectional association>)
	  b parent class_ref 6985911 // Size
      end

      classrelation 17244855 // PREVIEW_SIZE_BOUND (<unidirectional association>)
	relation 17244855 --->
	  a role_name "PREVIEW_SIZE_BOUND" init_value " SIZE_BOUND_1080P" class_relation const_relation public
	    comment " Only test the preview size that is no larger than 1080p.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17244855 // PREVIEW_SIZE_BOUND (<unidirectional association>)
	  b parent class_ref 6985911 // Size
      end

      attribute 26719415 "CAMERA_OPEN_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Default timeouts for reaching various states
"
      end

      attribute 26719543 "CAMERA_CLOSE_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26719671 "CAMERA_IDLE_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26719799 "CAMERA_ACTIVE_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26719927 "CAMERA_BUSY_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26720055 "CAMERA_UNCONFIGURED_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26720183 "CAMERA_CONFIGURE_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26720311 "CAPTURE_RESULT_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26720439 "CAPTURE_IMAGE_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26720567 "SESSION_CONFIGURE_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26720695 "SESSION_CLOSE_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26720823 "SESSION_READY_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26720951 "SESSION_ACTIVE_TIMEOUT_MS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26721079 "MAX_READER_IMAGES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26721207 "EXIF_DATETIME_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 19"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26721335 "EXIF_DATETIME_ERROR_MARGIN_SEC"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26721463 "EXIF_FOCAL_LENGTH_ERROR_MARGIN"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.001f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26721591 "EXIF_EXPOSURE_TIME_ERROR_MARGIN_RATIO"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.05f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26721719 "EXIF_EXPOSURE_TIME_MIN_ERROR_MARGIN_SEC"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.002f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26721847 "EXIF_APERTURE_ERROR_MARGIN"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.001f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17244983 // sTestLocation0 (<unidirectional association>)
	relation 17244983 --->
	  a role_name "sTestLocation0" init_value " new Location(LocationManager.GPS_PROVIDER)" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17244983 // sTestLocation0 (<unidirectional association>)
	  b parent class_ref 6060087 // Location
      end

      classrelation 17245111 // sTestLocation1 (<unidirectional association>)
	relation 17245111 --->
	  a role_name "sTestLocation1" init_value " new Location(LocationManager.GPS_PROVIDER)" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17245111 // sTestLocation1 (<unidirectional association>)
	  b parent class_ref 6060087 // Location
      end

      classrelation 17245239 // sTestLocation2 (<unidirectional association>)
	relation 17245239 --->
	  a role_name "sTestLocation2" init_value " new Location(LocationManager.NETWORK_PROVIDER)" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17245239 // sTestLocation2 (<unidirectional association>)
	  b parent class_ref 6060087 // Location
      end

      extra_member 295991 "initialization"
	
	cpp "" ""
	java "  static {
        sTestLocation0.setTime(1199145600L);
        sTestLocation0.setLatitude(37.736071);
        sTestLocation0.setLongitude(-122.441983);
        sTestLocation0.setAltitude(21.0);

        sTestLocation1.setTime(1199145601L);
        sTestLocation1.setLatitude(0.736071);
        sTestLocation1.setLongitude(0.441983);
        sTestLocation1.setAltitude(1.0);

        sTestLocation2.setTime(1199145602L);
        sTestLocation2.setLatitude(-89.736071);
        sTestLocation2.setLongitude(-179.441983);
        sTestLocation2.setAltitude(100000.0);
    }"
	php ""
	python ""
	idl ""
	mysql ""
      end

      class 7647927 "ExifTestData"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17247287 // gpsLocation (<unidirectional association>)
	  relation 17247287 --->
	    a role_name "gpsLocation" const_relation public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17247287 // gpsLocation (<unidirectional association>)
	    b parent class_ref 6060087 // Location
	end

	attribute 26722615 "jpegOrientation"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26722743 "jpegQuality"
	  const_attribute public explicit_type "byte"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 26722871 "thumbnailQuality"
	  const_attribute public explicit_type "byte"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 83853751 "ExifTestData"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "location" type class_ref 6060087 // Location
	    param in name "orientation" explicit_type "int"
	    param in name "jpgQuality" explicit_type "byte"
	    param in name "thumbQuality" explicit_type "byte"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 17245495 // EXIF_TEST_DATA (<unidirectional association>)
	relation 17245495 --->
	  a role_name "EXIF_TEST_DATA" multiplicity "[]" init_value " {
            new ExifTestData(
                    /*gpsLocation*/ sTestLocation0,
                    /* orientation */90,
                    /* jpgQuality */(byte) 80,
                    /* thumbQuality */(byte) 75),
            new ExifTestData(
                    /*gpsLocation*/ sTestLocation1,
                    /* orientation */180,
                    /* jpgQuality */(byte) 90,
                    /* thumbQuality */(byte) 85),
            new ExifTestData(
                    /*gpsLocation*/ sTestLocation2,
                    /* orientation */270,
                    /* jpgQuality */(byte) 100,
                    /* thumbQuality */(byte) 100)
    }" class_relation const_relation public
	    comment " Exif test data vectors.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 17245495 // EXIF_TEST_DATA (<unidirectional association>)
	  b parent class_ref 7647927 // ExifTestData
      end

      operation 83842487 "makeImageReader"
	class_operation public return_type class_ref 5893431 // ImageReader
	nparams 5
	  param inout name "size" type class_ref 6985911 // Size
	  param in name "format" explicit_type "int"
	  param in name "maxNumImages" explicit_type "int"
	  param inout name "listener" type class_ref 5893815 // OnImageAvailableListener
	  param inout name "handler" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an {@link ImageReader} object and get the surface.

@param size The size of this ImageReader to be created.
@param format The format of this ImageReader to be created
@param maxNumImages The max number of images that can be acquired simultaneously.
@param listener The listener used by this ImageReader to notify callbacks.
@param handler The handler to use for any listener callbacks.
"
      end

      operation 83842615 "makeImageWriter"
	class_operation public return_type class_ref 6081335 // ImageWriter
	nparams 4
	  param inout name "inputSurface" type class_ref 6952247 // Surface
	  param in name "maxImages" explicit_type "int"
	  param inout name "listener" type class_ref 6081463 // OnImageReleasedListener
	  param inout name "handler" type class_ref 6926391 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an ImageWriter and hook up the ImageListener.

@param inputSurface The input surface of the ImageWriter.
@param maxImages The max number of Images that can be dequeued simultaneously.
@param listener The listener used by this ImageWriter to notify callbacks
@param handler The handler to post listener callbacks.
@return ImageWriter object created.
"
      end

      operation 83842743 "closeImageReader"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "reader" type class_ref 5893431 // ImageReader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close pending images and clean up an {@link ImageReader} object.
@param reader an {@link ImageReader} to close.
"
      end

      operation 83842871 "closeImageWriter"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 6081335 // ImageWriter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close pending images and clean up an {@link ImageWriter} object.
@param writer an {@link ImageWriter} to close.
"
      end

      class 7648055 "ImageDropperListener"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17245623 // <realization>
	  relation 17245623 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17245623 // <realization>
	    b parent class_ref 5893815 // OnImageAvailableListener
	end

	operation 83842999 "onImageAvailable"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "reader" type class_ref 5893431 // ImageReader
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 7648183 "ImageVerifierListener"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17245751 // <realization>
	  relation 17245751 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17245751 // <realization>
	    b parent class_ref 5893815 // OnImageAvailableListener
	end

	classrelation 17245879 // mSize (<unidirectional association>)
	  relation 17245879 --->
	    a role_name "mSize" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17245879 // mSize (<unidirectional association>)
	    b parent class_ref 6985911 // Size
	end

	attribute 26721975 "mFormat"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	operation 83843127 "ImageVerifierListener"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "sz" type class_ref 6985911 // Size
	    param in name "format" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83843255 "onImageAvailable"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "reader" type class_ref 5893431 // ImageReader
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 7648311 "SimpleImageReaderListener"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17246007 // <realization>
	  relation 17246007 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17246007 // <realization>
	    b parent class_ref 5893815 // OnImageAvailableListener
	end

	classrelation 17246135 // mQueue (<unidirectional association>)
	  relation 17246135 --->
	    stereotype "LinkedBlockingQueue"
	    a role_name "mQueue" init_value "
                new LinkedBlockingQueue<Image>()" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 17246135 // mQueue (<unidirectional association>)
	    b parent class_ref 5893943 // Image
	end

	attribute 26722103 "mAsyncMode"
	  const_attribute private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " Indicate whether this listener will drop images or not,
 when the queued images reaches the reader maxImages
"
	end

	attribute 26722231 "mMaxImages"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	  comment " maxImages held by the queue in async mode.
"
	end

	operation 83843383 "SimpleImageReaderListener"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a synchronous SimpleImageReaderListener that queues the images
automatically when they are available, no image will be dropped. If
the caller doesn't call getImage(), the producer will eventually run
into buffer starvation.
"
	end

	operation 83843511 "SimpleImageReaderListener"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "asyncMode" explicit_type "boolean"
	    param in name "maxImages" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a synchronous/asynchronous SimpleImageReaderListener that
queues the images automatically when they are available. For
asynchronous listener, image will be dropped if the queued images
reach to maxImages queued. If the caller doesn't call getImage(), the
producer will not be blocked. For synchronous listener, no image will
be dropped. If the caller doesn't call getImage(), the producer will
eventually run into buffer starvation.

@param asyncMode If the listener is operating at asynchronous mode.
@param maxImages The max number of images held by this listener.



@param asyncMode
"
	end

	operation 83843639 "onImageAvailable"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "reader" type class_ref 5893431 // ImageReader
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83843767 "getImage"
	  public return_type class_ref 5893943 // Image
	  nparams 1
	    param in name "timeout" explicit_type "long"
	  nexceptions 1
	    explicit_exception "InterruptedException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get an image from the image reader.

@param timeout Timeout value for the wait.
@return The image from the image reader.
"
	end

	operation 83843895 "drain"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Drain the pending images held by this listener currently.

"
	end
      end

      class 7648439 "SimpleImageWriterListener"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17246263 // <realization>
	  relation 17246263 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17246263 // <realization>
	    b parent class_ref 6081463 // OnImageReleasedListener
	end

	attribute 26722359 "mImageReleasedSema"
	  const_attribute private explicit_type "Semaphore"
	  init_value " new Semaphore(0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 17246391 // mWriter (<unidirectional association>)
	  relation 17246391 --->
	    a role_name "mWriter" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 17246391 // mWriter (<unidirectional association>)
	    b parent class_ref 6081335 // ImageWriter
	end

	operation 83844023 "onImageReleased"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "writer" type class_ref 6081335 // ImageWriter
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83844151 "SimpleImageWriterListener"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "writer" type class_ref 6081335 // ImageWriter
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83844279 "waitForImageReleased"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "timeoutMs" explicit_type "long"
	  nexceptions 1
	    explicit_exception "InterruptedException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 83846327 "openCamera"
	class_operation public return_type class_ref 7147703 // CameraDevice
	nparams 4
	  param inout name "manager" type class_ref 7152055 // CameraManager
	  param inout name "cameraId" explicit_type "String"
	  param inout name "listener" type class_ref 7151671 // StateCallback
	  param inout name "handler" type class_ref 6926391 // Handler
	nexceptions 2
	  exception class_ref 7147319 // CameraAccessException
	  explicit_exception "BlockingOpenException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Block until the camera is opened.

<p>Don't use this to test #onDisconnected/#onError since this will throw
an AssertionError if it fails to open the camera device.</p>

@return CameraDevice opened camera device

@throws IllegalArgumentException
           If the handler is null, or if the handler's looper is current.
@throws CameraAccessException
           If open fails immediately.
@throws BlockingOpenException
           If open fails after blocking for some amount of time.
@throws TimeoutRuntimeException
           If opening times out. Typically unrecoverable.
"
      end

      operation 83846455 "openCamera"
	class_operation public return_type class_ref 7147703 // CameraDevice
	nparams 3
	  param inout name "manager" type class_ref 7152055 // CameraManager
	  param inout name "cameraId" explicit_type "String"
	  param inout name "handler" type class_ref 6926391 // Handler
	nexceptions 2
	  exception class_ref 7147319 // CameraAccessException
	  explicit_exception "BlockingOpenException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Block until the camera is opened.

<p>Don't use this to test #onDisconnected/#onError since this will throw
an AssertionError if it fails to open the camera device.</p>

@throws IllegalArgumentException
           If the handler is null, or if the handler's looper is current.
@throws CameraAccessException
           If open fails immediately.
@throws BlockingOpenException
           If open fails after blocking for some amount of time.
@throws TimeoutRuntimeException
           If opening times out. Typically unrecoverable.
"
      end

      operation 83846583 "configureCameraSession"
	class_operation public return_type class_ref 7147575 // CameraCaptureSession
	nparams 5
	  param inout name "camera" type class_ref 7147703 // CameraDevice
	  param inout name "outputSurfaces" explicit_type "List<Surface>"
	  param inout name "isHighSpeed" explicit_type "boolean"
	  param inout name "listener" type class_ref 7148087 // StateCallback
	  param inout name "handler" type class_ref 6926391 // Handler
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Configure a new camera session with output surfaces and type.

@param camera The CameraDevice to be configured.
@param outputSurfaces The surface list that used for camera output.
@param listener The callback CameraDevice will notify when capture results are available.
"
      end

      operation 83846711 "configureCameraSession"
	class_operation public return_type class_ref 7147575 // CameraCaptureSession
	nparams 4
	  param inout name "camera" type class_ref 7147703 // CameraDevice
	  param inout name "outputSurfaces" explicit_type "List<Surface>"
	  param inout name "listener" type class_ref 7148087 // StateCallback
	  param inout name "handler" type class_ref 6926391 // Handler
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Configure a new camera session with output surfaces.

@param camera The CameraDevice to be configured.
@param outputSurfaces The surface list that used for camera output.
@param listener The callback CameraDevice will notify when capture results are available.
"
      end

      operation 83846839 "configureReprocessableCameraSession"
	class_operation public return_type class_ref 7147575 // CameraCaptureSession
	nparams 5
	  param inout name "camera" type class_ref 7147703 // CameraDevice
	  param inout name "inputConfiguration" type class_ref 7151415 // InputConfiguration
	  param inout name "outputSurfaces" explicit_type "List<Surface>"
	  param inout name "listener" type class_ref 7148087 // StateCallback
	  param inout name "handler" type class_ref 6926391 // Handler
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83846967 "assertArrayNotEmpty"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "arr" explicit_type "T"
	  param inout name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83847095 "checkYuvFormat"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "format" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the format is a legal YUV format camera supported.
"
      end

      operation 83847223 "checkImage"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "image" type class_ref 5893943 // Image
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "format" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if image size and format match given size and format.
"
      end

      operation 83847351 "getDataFromImage"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param inout name "image" type class_ref 5893943 // Image
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Read data from all planes of an Image into a contiguous unpadded, unpacked
1-D linear byte array, such that it can be write into disk, or accessed by
software conveniently. It supports YUV_420_888/NV21/YV12 and JPEG input
Image format.</p>

<p>For YUV_420_888/NV21/YV12/Y8/Y16, it returns a byte array that contains
the Y plane data first, followed by U(Cb), V(Cr) planes if there is any
(xstride = width, ystride = height for chroma and luma components).</p>

<p>For JPEG, it returns a 1-D byte array contains a complete JPEG image.</p>
"
      end

      operation 83847479 "checkAndroidImageFormat"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "image" type class_ref 5893943 // Image
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Check android image format validity for an image, only support below formats:</p>

<p>YUV_420_888/NV21/YV12, can add more for future</p>
"
      end

      operation 83847607 "dumpFile"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "fileName" explicit_type "String"
	  param inout name "data" type class_ref 5824951 // Bitmap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83847735 "dumpFile"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "fileName" explicit_type "String"
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83847863 "getSupportedSizeForFormat"
	class_operation public return_type class_ref 6985911 // Size
	nparams 3
	  param in name "format" explicit_type "int"
	  param inout name "cameraId" explicit_type "String"
	  param inout name "cameraManager" type class_ref 7152055 // CameraManager
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the available output sizes for the user-defined {@code format}.

<p>Note that implementation-defined/hidden formats are not supported.</p>
"
      end

      operation 83847991 "getSupportedSizeForClass"
	class_operation public return_type class_ref 6985911 // Size
	nparams 3
	  param inout name "klass" explicit_type "Class"
	  param inout name "cameraId" explicit_type "String"
	  param inout name "cameraManager" type class_ref 7152055 // CameraManager
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the available output sizes for the given class.

"
      end

      class 7648567 "SizeComparator"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83848119 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "lhs" type class_ref 6985911 // Size
	    param inout name "rhs" type class_ref 6985911 // Size
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 83848247 "getSupportedPreviewSizes"
	class_operation public return_type class_ref 6985911 // Size
	nparams 3
	  param inout name "cameraId" explicit_type "String"
	  param inout name "cameraManager" type class_ref 7152055 // CameraManager
	  param inout name "bound" type class_ref 6985911 // Size
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get sorted size list in descending order. Remove the sizes larger than
the bound. If the bound is null, don't do the size bound filtering.
"
      end

      operation 83848375 "getAscendingOrderSizes"
	class_operation public return_type class_ref 6985911 // Size
	nparams 2
	  param in name "sizeList" explicit_type "List<Size>"
	  param inout name "ascending" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a sorted list of sizes from a given size list.

<p>
The size is compare by area it covers, if the areas are same, then
compare the widths.
</p>

@param sizeList The input size list to be sorted
@param ascending True if the order is ascending, otherwise descending order
@return The ordered list of sizes
"
      end

      operation 83848503 "getSortedSizesForFormat"
	class_operation public return_type class_ref 6985911 // Size
	nparams 4
	  param inout name "cameraId" explicit_type "String"
	  param inout name "cameraManager" type class_ref 7152055 // CameraManager
	  param in name "format" explicit_type "int"
	  param inout name "bound" type class_ref 6985911 // Size
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get sorted (descending order) size list for given format. Remove the sizes larger than
the bound. If the bound is null, don't do the size bound filtering.
"
      end

      operation 83848631 "getSupportedVideoSizes"
	class_operation public return_type class_ref 6985911 // Size
	nparams 3
	  param inout name "cameraId" explicit_type "String"
	  param inout name "cameraManager" type class_ref 7152055 // CameraManager
	  param inout name "bound" type class_ref 6985911 // Size
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get supported video size list for a given camera device.

<p>
Filter out the sizes that are larger than the bound. If the bound is
null, don't do the size bound filtering.
</p>
"
      end

      operation 83848759 "getSupportedStillSizes"
	class_operation public return_type class_ref 6985911 // Size
	nparams 3
	  param inout name "cameraId" explicit_type "String"
	  param inout name "cameraManager" type class_ref 7152055 // CameraManager
	  param inout name "bound" type class_ref 6985911 // Size
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get supported video size list (descending order) for a given camera device.

<p>
Filter out the sizes that are larger than the bound. If the bound is
null, don't do the size bound filtering.
</p>
"
      end

      operation 83848887 "getMinPreviewSize"
	class_operation public return_type class_ref 6985911 // Size
	nparams 2
	  param inout name "cameraId" explicit_type "String"
	  param inout name "cameraManager" type class_ref 7152055 // CameraManager
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83849015 "getMaxPreviewSize"
	class_operation public return_type class_ref 6985911 // Size
	nparams 2
	  param inout name "cameraId" explicit_type "String"
	  param inout name "cameraManager" type class_ref 7152055 // CameraManager
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get max supported preview size for a camera device.
"
      end

      operation 83849143 "getMaxPreviewSize"
	class_operation public return_type class_ref 6985911 // Size
	nparams 3
	  param inout name "cameraId" explicit_type "String"
	  param inout name "cameraManager" type class_ref 7152055 // CameraManager
	  param inout name "bound" type class_ref 6985911 // Size
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get max preview size for a camera device in the supported sizes that are no larger
than the bound.
"
      end

      operation 83849271 "getMaxDepthSize"
	class_operation public return_type class_ref 6985911 // Size
	nparams 2
	  param inout name "cameraId" explicit_type "String"
	  param inout name "cameraManager" type class_ref 7152055 // CameraManager
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get max depth size for a camera device.
"
      end

      operation 83849399 "getMaxSize"
	class_operation public return_type class_ref 6985911 // Size
	nparams 1
	  param inout name "" explicit_type "Size...sizes"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the largest size by area.

@param sizes an array of sizes, must have at least 1 element

@return Largest Size

@throws IllegalArgumentException if sizes was null or had 0 elements
"
      end

      operation 83849527 "contains"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "elem" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the given {@code array} contains the given element.

@param array {@code array} to check for {@code elem}
@param elem {@code elem} to test for
@return {@code true} if the given element is contained
"
      end

      operation 83849655 "toObject"
	class_operation public explicit_return_type "Byte"
	nparams 1
	  param inout name "array" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get object array from byte array.

@param array Input byte array to be converted
@return Byte object array converted from input byte array
"
      end

      operation 83849783 "toObject"
	class_operation public explicit_return_type "Integer"
	nparams 1
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get object array from int array.

@param array Input int array to be converted
@return Integer object array converted from input int array
"
      end

      operation 83849911 "toObject"
	class_operation public explicit_return_type "Float"
	nparams 1
	  param inout name "array" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get object array from float array.

@param array Input float array to be converted
@return Float object array converted from input float array
"
      end

      operation 83850039 "toObject"
	class_operation public explicit_return_type "Double"
	nparams 1
	  param inout name "array" explicit_type "double"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get object array from double array.

@param array Input double array to be converted
@return Double object array converted from input double array
"
      end

      operation 83850167 "convertPrimitiveArrayToObjectArray"
	class_operation private explicit_return_type "T"
	nparams 2
	  param in name "array" explicit_type "Object"
	  param in name "wrapperClass" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}final ${t0} ${p0}, final ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert a primitive input array into its object array version (e.g. from int[] to Integer[]).

@param array Input array object
@param wrapperClass The boxed class it converts to
@return Boxed version of primitive array
"
      end

      operation 83850295 "validateImage"
	class_operation public explicit_return_type "void"
	nparams 5
	  param inout name "image" type class_ref 5893943 // Image
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "format" explicit_type "int"
	  param inout name "filePath" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validate image based on format and size.

@param image The image to be validated.
@param width The image width.
@param height The image height.
@param format The image format.
@param filePath The debug dump file path, null if don't want to dump to
           file.
@throws UnsupportedOperationException if calling with an unknown format
"
      end

      class 7648695 "MockStateCallback"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17247159 // <generalisation>
	  relation 17247159 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17247159 // <generalisation>
	    b parent class_ref 7151671 // StateCallback
	end

	operation 83850423 "onOpened"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "camera" type class_ref 7147703 // CameraDevice
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83850551 "onDisconnected"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "camera" type class_ref 7147703 // CameraDevice
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83850679 "onError"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "camera" type class_ref 7147703 // CameraDevice
	    param in name "error" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 83850807 "MockStateCallback"
	  private explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 83850935 "mock"
	  class_operation public return_type class_ref 7648695 // MockStateCallback
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a Mockito-ready mocked StateCallback.
"
	end
      end

      operation 83851063 "validateJpegData"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "jpegData" explicit_type "byte"
	multiplicity "[]"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "filePath" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83851191 "validateYuvData"
	class_operation private explicit_return_type "void"
	nparams 6
	  param inout name "yuvData" explicit_type "byte"
	multiplicity "[]"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "format" explicit_type "int"
	  param in name "ts" explicit_type "long"
	  param inout name "filePath" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83851319 "validateRaw16Data"
	class_operation private explicit_return_type "void"
	nparams 6
	  param inout name "rawData" explicit_type "byte"
	multiplicity "[]"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "format" explicit_type "int"
	  param in name "ts" explicit_type "long"
	  param inout name "filePath" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83851447 "validateRawPrivateData"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "rawData" explicit_type "byte"
	multiplicity "[]"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "ts" explicit_type "long"
	  param inout name "filePath" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83851575 "validateDepth16Data"
	class_operation private explicit_return_type "void"
	nparams 6
	  param inout name "depthData" explicit_type "byte"
	multiplicity "[]"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "format" explicit_type "int"
	  param in name "ts" explicit_type "long"
	  param inout name "filePath" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83851703 "validateDepthPointCloudData"
	class_operation private explicit_return_type "void"
	nparams 6
	  param inout name "depthData" explicit_type "byte"
	multiplicity "[]"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "format" explicit_type "int"
	  param in name "ts" explicit_type "long"
	  param inout name "filePath" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83851831 "getValueNotNull"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "result" type class_ref 7148343 // CaptureResult
	  param inout name "key" type class_ref 7149751 // Key
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83851959 "getValueNotNull"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "characteristics" type class_ref 7148855 // CameraCharacteristics
	  param inout name "key" type class_ref 7149111 // Key
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83852087 "getCropRegionForZoom"
	class_operation public return_type class_ref 5772599 // Rect
	nparams 4
	  param in name "zoomFactor" explicit_type "float"
	  param in name "center" type class_ref 6018615 // PointF
	  param in name "maxZoom" explicit_type "float"
	  param in name "activeArray" type class_ref 5772599 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a crop region for a given zoom factor and center position.
<p>
The center position is normalized position in range of [0, 1.0], where
(0, 0) represents top left corner, (1.0. 1.0) represents bottom right
corner. The center position could limit the effective minimal zoom
factor, for example, if the center position is (0.75, 0.75), the
effective minimal zoom position becomes 2.0. If the requested zoom factor
is smaller than 2.0, a crop region with 2.0 zoom factor will be returned.
</p>
<p>
The aspect ratio of the crop region is maintained the same as the aspect
ratio of active array.
</p>

@param zoomFactor The zoom factor to generate the crop region, it must be
           >= 1.0
@param center The normalized zoom center point that is in the range of [0, 1].
@param maxZoom The max zoom factor supported by this device.
@param activeArray The active array size of this device.
@return crop region for the given normalized center and zoom factor.
"
      end

      operation 83852215 "getExpectedOutputRegion"
	class_operation public return_type class_ref 7152951 // MeteringRectangle
	nparams 2
	  param inout name "requestRegions" type class_ref 7152951 // MeteringRectangle
	multiplicity "[]"
	  param inout name "cropRect" type class_ref 5772599 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculate output 3A region from the intersection of input 3A region and cropped region.

@param requestRegions The input 3A regions
@param cropRect The cropped region
@return expected 3A regions output in capture result
"
      end

      operation 83852343 "imageCopy"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "src" type class_ref 5893943 // Image
	  param inout name "dst" type class_ref 5893943 // Image
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy source image data to destination image.

@param src The source image to be copied from.
@param dst The destination image to be copied to.
@throws IllegalArgumentException If the source and destination images have
            different format, or one of the images is not copyable.
"
      end

      operation 83852471 "isImageStronglyEqual"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "lhsImg" type class_ref 5893943 // Image
	  param inout name "rhsImg" type class_ref 5893943 // Image
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Checks whether the two images are strongly equal.
</p>
<p>
Two images are strongly equal if and only if the data, formats, sizes,
and timestamps are same. For {@link ImageFormat#PRIVATE PRIVATE} format
images, the image data is not not accessible thus the data comparison is
effectively skipped as the number of planes is zero.
</p>
<p>
Note that this method compares the pixel data even outside of the crop
region, which may not be necessary for general use case.
</p>

@param lhsImg First image to be compared with.
@param rhsImg Second image to be compared with.
@return true if the two images are equal, false otherwise.
@throws IllegalArgumentException If either of image is null.
"
      end

      operation 83852599 "setJpegKeys"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "builder" type class_ref 7151543 // Builder
	  param inout name "exifData" type class_ref 7647927 // ExifTestData
	  param inout name "thumbnailSize" type class_ref 6985911 // Size
	  param inout name "collector" type class_ref 7639607 // CameraErrorCollector
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set jpeg related keys in a capture request builder.

@param builder The capture request builder to set the keys inl
@param exifData The exif data to set.
@param thumbnailSize The thumbnail size to set.
@param collector The camera error collector to collect errors.
"
      end

      operation 83852727 "basicValidateJpegImage"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "image" type class_ref 5893943 // Image
	  param inout name "expectedSize" type class_ref 6985911 // Size
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simple validation of JPEG image size and format.
<p>
Only validate the image object sanity. It is fast, but doesn't actually
check the buffer data. Assert is used here as it make no sense to
continue the test if the jpeg image captured has some serious failures.
</p>

@param image The captured jpeg image
@param expectedSize Expected capture jpeg size
"
      end

      operation 83852855 "verifyJpegKeys"
	class_operation public explicit_return_type "void"
	nparams 7
	  param inout name "image" type class_ref 5893943 // Image
	  param inout name "captureResult" type class_ref 7148343 // CaptureResult
	  param inout name "expectedSize" type class_ref 6985911 // Size
	  param inout name "expectedThumbnailSize" type class_ref 6985911 // Size
	  param inout name "expectedExifData" type class_ref 7647927 // ExifTestData
	  param inout name "staticInfo" type class_ref 7639735 // StaticMetadata
	  param inout name "collector" type class_ref 7639607 // CameraErrorCollector
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verify the JPEG EXIF and JPEG related keys in a capture result are expected.
- Capture request get values are same as were set.
- capture result's exif data is the same as was set by
  the capture request.
- new tags in the result set by the camera service are
  present and semantically correct.

@param image The output JPEG image to verify.
@param captureResult The capture result to verify.
@param expectedSize The expected JPEG size.
@param expectedThumbnailSize The expected thumbnail size.
@param expectedExifData The expected EXIF data
@param staticInfo The static metadata for the camera device.
@param jpegFilename The filename to dump the jpeg to.
@param collector The camera error collector to collect errors.
"
      end

      operation 83852983 "getExifOrientationInDegree"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "exifOrientation" explicit_type "int"
	  param inout name "collector" type class_ref 7639607 // CameraErrorCollector
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the degree of an EXIF orientation.
"
      end

      operation 83853111 "validateFocalLength"
	class_operation private explicit_return_type "float"
	nparams 3
	  param inout name "result" type class_ref 7148343 // CaptureResult
	  param inout name "staticInfo" type class_ref 7639735 // StaticMetadata
	  param inout name "collector" type class_ref 7639607 // CameraErrorCollector
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validate and return the focal length.

@param result Capture result to get the focal length
@return Focal length from capture result or -1 if focal length is not available.
"
      end

      operation 83853239 "validateAperture"
	class_operation private explicit_return_type "float"
	nparams 3
	  param inout name "result" type class_ref 7148343 // CaptureResult
	  param inout name "staticInfo" type class_ref 7639735 // StaticMetadata
	  param inout name "collector" type class_ref 7639607 // CameraErrorCollector
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validate and return the aperture.

@param result Capture result to get the aperture
@return Aperture from capture result or -1 if aperture is not available.
"
      end

      operation 83853367 "getClosestValueInArray"
	class_operation private explicit_return_type "float"
	nparams 2
	  param inout name "values" explicit_type "float"
	multiplicity "[]"
	  param in name "target" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the closest value in an array of floats.
"
      end

      operation 83853495 "areGpsFieldsEqual"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 6060087 // Location
	  param inout name "b" type class_ref 6060087 // Location
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return if two Location's GPS field are the same.
"
      end

      operation 83853623 "verifyJpegExifExtraTags"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "exif" type class_ref 6080183 // ExifInterface
	  param inout name "jpegSize" type class_ref 6985911 // Size
	  param inout name "result" type class_ref 7148343 // CaptureResult
	  param inout name "staticInfo" type class_ref 7639735 // StaticMetadata
	  param inout name "collector" type class_ref 7639607 // CameraErrorCollector
	nexceptions 1
	  explicit_exception "ParseException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verify extra tags in JPEG EXIF
"
      end

      operation 83853879 "getPreviewSizeBound"
	class_operation public return_type class_ref 6985911 // Size
	nparams 2
	  param inout name "windowManager" type class_ref 6929463 // WindowManager
	  param inout name "bound" type class_ref 6985911 // Size
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7645239 "CameraTestHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 17242167 // mCamera (<unidirectional association>)
	relation 17242167 --->
	  a role_name "mCamera" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17242167 // mCamera (<unidirectional association>)
	  b parent class_ref 7141047 // Camera
      end

      attribute 26718519 "CAMERA_ID"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26718647 "WAIT_GENERIC"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3 * 1000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 3 seconds"
      end

      attribute 26718775 "WAIT_ZOOM_ANIMATION"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5 * 1000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " 5 seconds"
      end

      class 7647671 "CameraErrorCallback"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 17242807 // <realization>
	  relation 17242807 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 17242807 // <realization>
	    b parent class_ref 7142199 // ErrorCallback
	end

	operation 83840823 "onError"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "error" explicit_type "int"
	    param inout name "camera" type class_ref 7141047 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 17242679 // mCameraErrorCallback (<unidirectional association>)
	relation 17242679 --->
	  a role_name "mCameraErrorCallback" init_value " new CameraErrorCallback()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17242679 // mCameraErrorCallback (<unidirectional association>)
	  b parent class_ref 7647671 // CameraErrorCallback
      end

      classrelation 17242935 // shutterCallback (<unidirectional association>)
	relation 17242935 --->
	  a role_name "shutterCallback" init_value " new ShutterCallback() {
        @Override
        public void onShutter() {
            Log.v(TAG, \"Shutter\");
        }
    }" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17242935 // shutterCallback (<unidirectional association>)
	  b parent class_ref 7141303 // ShutterCallback
      end

      classrelation 17243063 // rawCallback (<unidirectional association>)
	relation 17243063 --->
	  a role_name "rawCallback" init_value " new PictureCallback() {
        @Override
        public void onPictureTaken(byte[] data, Camera camera) {
            Log.v(TAG, \"Raw picture taken\");
        }
    }" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17243063 // rawCallback (<unidirectional association>)
	  b parent class_ref 7141431 // PictureCallback
      end

      classrelation 17243191 // jpegCallback (<unidirectional association>)
	relation 17243191 --->
	  a role_name "jpegCallback" init_value " new PictureCallback() {
        @Override
        public void onPictureTaken(byte[] data, Camera camera) {
            FileOutputStream fos = null;

            try {
                Log.v(TAG, \"JPEG picture taken\");
                fos = new FileOutputStream(String.format(\"%s/%s/%s-%d.jpg\",
                        Environment.getExternalStorageDirectory(), CAMERA_STRESS_IMAGES_DIRECTORY,
                        CAMERA_STRESS_IMAGES_PREFIX, System.currentTimeMillis()));
                fos.write(data);
            } catch (FileNotFoundException e) {
                Log.e(TAG, \"File not found: \" + e.toString());
            } catch (IOException e) {
                Log.e(TAG, \"Error accessing file: \" + e.toString());
            } finally {
                try {
                    if (fos != null) {
                        fos.close();
                    }
                } catch (IOException e) {
                    Log.e(TAG, \"Error closing file: \" + e.toString());
                }
            }
        }
    }" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17243191 // jpegCallback (<unidirectional association>)
	  b parent class_ref 7141431 // PictureCallback
      end

      operation 83840951 "setupCameraTest"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method for prepping test
"
      end

      operation 83841079 "getCameraParameters"
	public return_type class_ref 7142583 // Parameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method for getting the available parameters of the default camera
"
      end

      operation 83841207 "capturePhoto"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method for taking a photo
"
      end

      operation 83841335 "cleanupTestImages"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method for cleaning up pics taken during tests
"
      end

      operation 83841463 "setParameters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "params" type class_ref 7142583 // Parameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method for setting the camera parameters
"
      end

      operation 83841591 "startCameraPreview"
	public explicit_return_type "void"
	nparams 1
	  param inout name "surfaceHolder" type class_ref 6939447 // SurfaceHolder
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method for starting up the camera preview
"
      end
    end

    class 7646519 "AssertHelpers"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper set of methods to add extra useful assert functionality missing in junit.


(non-Javadoc)
@see android.hardware.camera2.cts.helpers.AssertHelpers
"
      attribute 26717495 "MAX_FORMAT_STRING"
	class_attribute const_attribute private explicit_type "int"
	init_value " 50"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83828535 "assertArrayNotAllZeroes"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "message" explicit_type "String"
	  param inout name "data" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assert that at least one of the elements in data is non-zero.

<p>An empty or a null array always fails.</p>
"
      end

      operation 83828663 "assertArrayNotGreater"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "message" explicit_type "String"
	  param inout name "left" explicit_type "float"
	multiplicity "[]"
	  param inout name "right" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assert that every element in left is less than or equals to the corresponding element in
right.

<p>Array sizes must match.</p>

@param message Message to use in case the assertion fails
@param left Left array
@param right Right array
"
      end

      operation 83828791 "assertArrayWithinLowerBound"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "message" explicit_type "String"
	  param inout name "value" explicit_type "float"
	multiplicity "[]"
	  param in name "lowerBound" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assert that every element in the value array is greater than the lower bound (exclusive).

@param value an array of items
@param lowerBound the exclusive lower bound
"
      end

      operation 83828919 "assertArrayWithinUpperBound"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "message" explicit_type "String"
	  param inout name "value" explicit_type "float"
	multiplicity "[]"
	  param in name "upperBound" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assert that every element in the value array is less than the upper bound (exclusive).

@param value an array of items
@param upperBound the exclusive upper bound
"
      end

      operation 83829047 "assertInRange"
	class_operation public explicit_return_type "void"
	nparams 3
	  param in name "value" explicit_type "float"
	  param in name "low" explicit_type "float"
	  param in name "high" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assert that {@code low <= value <= high}
"
      end

      operation 83829175 "assertArrayContains"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "message" explicit_type "String"
	  param inout name "actual" explicit_type "T"
	multiplicity "[]"
	  param inout name "checkVals" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assert that the given array contains the given value.

@param message message to print on failure.
@param actual array to test.
@param checkVals value to check for array membership.
"
      end

      operation 83829303 "assertArrayContains"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "message" explicit_type "String"
	  param inout name "actual" explicit_type "int"
	multiplicity "[]"
	  param in name "checkVals" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assert that the given array contains the given value.

@param message message to print on failure.
@param actual array to test.
@param checkVals value to check for array membership.
"
      end

      operation 83829431 "assertArrayContainsAnyOf"
	class_operation public explicit_return_type "T"
	nparams 3
	  param inout name "message" explicit_type "String"
	  param inout name "actual" explicit_type "T"
	multiplicity "[]"
	  param inout name "checkVals" explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assert that the given array contains at least one of the given values.

@param message message to print on failure.
@param actual array to test
@param checkVals values to check for array membership.
@return the value contained, or null.
"
      end

      operation 83829559 "assertArrayContainsAnyOf"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "message" explicit_type "String"
	  param inout name "actual" explicit_type "int"
	multiplicity "[]"
	  param inout name "checkVals" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assert that the given array contains at least one of the given values.

@param message message to print on failure.
@param actual array to test
@param checkVals values to check for array membership.
@return the value contained.
"
      end

      operation 83829687 "assertCollectionContainsAnyOf"
	class_operation public explicit_return_type "T"
	nparams 3
	  param inout name "message" explicit_type "String"
	  param inout name "actual" explicit_type "Collection<T>"
	  param inout name "checkVals" explicit_type "Collection<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assert that the given {@link Collection} contains at least one of the given values.

@param message message to print on failure.
@param actual {@link Collection} to test.
@param checkVals a {@link Collection} of values to check for membership.
@return the value contained, or null.
"
      end

      operation 83829815 "buildList"
	class_operation private explicit_return_type "List<T>"
	nparams 1
	  param inout name "array" explicit_type "T"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83829943 "buildList"
	class_operation private explicit_return_type "List<Integer>"
	nparams 1
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83830071 "formatCollection"
	class_operation private explicit_return_type "String"
	nparams 2
	  param inout name "collection" explicit_type "Collection<T>"
	  param in name "maxLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83830199 "AssertHelpers"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Suppress default constructor for noninstantiability"
      end
    end

    class 7646647 "Camera2Focuser"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A focuser utility class to assist camera to do auto focus.
<p>
This class need create repeating request and single request to do auto focus.
The repeating request is used to get the auto focus states; the single
request is used to trigger the auto focus. This class assumes the camera device
supports auto-focus. Don't use this class if the camera device doesn't have focuser
unit.
</p>


(non-Javadoc)
@see android.hardware.camera2.cts.helpers.Camera2Focuser
"
      attribute 26717623 "VERBOSE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " Log.isLoggable(TAG, Log.VERBOSE)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26717751 "mAutoFocus"
	const_attribute private explicit_type "AutoFocusStateMachine"
	init_value " new AutoFocusStateMachine(this)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17240375 // mHandler (<unidirectional association>)
	relation 17240375 --->
	  a role_name "mHandler" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17240375 // mHandler (<unidirectional association>)
	  b parent class_ref 6926391 // Handler
      end

      class 7646903 "AutoFocusListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83830327 "onAutoFocusLocked"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "success" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This callback is called when auto focus completes and locked.

@param success true if focus was successful, false if otherwise
"
	end
      end

      classrelation 17240503 // mAutoFocusListener (<unidirectional association>)
	relation 17240503 --->
	  a role_name "mAutoFocusListener" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17240503 // mAutoFocusListener (<unidirectional association>)
	  b parent class_ref 7646903 // AutoFocusListener
      end

      classrelation 17240631 // mCamera (<unidirectional association>)
	relation 17240631 --->
	  a role_name "mCamera" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17240631 // mCamera (<unidirectional association>)
	  b parent class_ref 7147703 // CameraDevice
      end

      classrelation 17240759 // mSession (<unidirectional association>)
	relation 17240759 --->
	  a role_name "mSession" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17240759 // mSession (<unidirectional association>)
	  b parent class_ref 7147575 // CameraCaptureSession
      end

      classrelation 17240887 // mRequestSurface (<unidirectional association>)
	relation 17240887 --->
	  a role_name "mRequestSurface" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17240887 // mRequestSurface (<unidirectional association>)
	  b parent class_ref 6952247 // Surface
      end

      classrelation 17241015 // mStaticInfo (<unidirectional association>)
	relation 17241015 --->
	  a role_name "mStaticInfo" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17241015 // mStaticInfo (<unidirectional association>)
	  b parent class_ref 7639735 // StaticMetadata
      end

      attribute 26717879 "mAfRun"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17241143 // mAfRegions (<unidirectional association>)
	relation 17241143 --->
	  a role_name "mAfRegions" multiplicity "[]" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 17241143 // mAfRegions (<unidirectional association>)
	  b parent class_ref 7152951 // MeteringRectangle
      end

      attribute 26718007 "mLocked"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 26718135 "mSuccess"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 17241271 // mRepeatingBuilder (<unidirectional association>)
	relation 17241271 --->
	  a role_name "mRepeatingBuilder" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 17241271 // mRepeatingBuilder (<unidirectional association>)
	  b parent class_ref 7151543 // Builder
      end

      operation 83830455 "Camera2Focuser"
	public explicit_return_type ""
	nparams 6
	  param inout name "camera" type class_ref 7147703 // CameraDevice
	  param inout name "session" type class_ref 7147575 // CameraCaptureSession
	  param inout name "requestSurface" type class_ref 6952247 // Surface
	  param inout name "listener" type class_ref 7646903 // AutoFocusListener
	  param inout name "staticInfo" type class_ref 7148855 // CameraCharacteristics
	  param inout name "handler" type class_ref 6926391 // Handler
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a focuser object, with given capture requestSurface, listener
and handler.
<p>
The focuser object will use camera and requestSurface to submit capture
request and receive focus state changes. The {@link AutoFocusListener} is
used to notify the auto focus callback.
</p>

@param camera The camera device associated with this focuser
@param session The camera capture session associated with this focuser
@param requestSurface The surface to issue the capture request with
@param listener The auto focus listener to notify AF result
@param staticInfo The CameraCharacteristics of the camera device
@param handler The handler used to post auto focus callbacks
@throws CameraAccessException
"
      end

      operation 83830583 "onAutoFocusSuccess"
	public explicit_return_type "void"
	nparams 2
	  param inout name "result" type class_ref 7148343 // CaptureResult
	  param inout name "locked" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83830711 "onAutoFocusFail"
	public explicit_return_type "void"
	nparams 2
	  param inout name "result" type class_ref 7148343 // CaptureResult
	  param inout name "locked" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83830839 "onAutoFocusScan"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 7148343 // CaptureResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83830967 "onAutoFocusInactive"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 7148343 // CaptureResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83831095 "touchForAutoFocus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "afRegions" type class_ref 7152951 // MeteringRectangle
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start a active auto focus scan based on the given regions.

<p>This is usually used for touch for focus, it can make the auto-focus converge based
on some particular region aggressively. But it is usually slow as a full active scan
is initiated. After the auto focus is converged, the {@link cancelAutoFocus} must be called
to resume the continuous auto-focus.</p>

@param afRegions The AF regions used by focuser auto focus, full active
array size is used if afRegions is null.
@throws CameraAccessException
"
      end

      operation 83831223 "startAutoFocus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "afRegions" type class_ref 7152951 // MeteringRectangle
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start auto focus scan.
<p>
Start an auto focus scan if it was not done yet. If AF passively focused,
lock it. If AF is already locked, return. Otherwise, initiate a full
active scan. This is suitable for still capture: focus should need to be
accurate, but the AF latency also need to be as short as possible.
</p>

@param afRegions The AF regions used by focuser auto focus, full active
           array size is used if afRegions is null.
@throws CameraAccessException
"
      end

      operation 83831351 "cancelAutoFocus"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancel ongoing auto focus, unlock the auto-focus if it was locked, and
resume to passive continuous auto focus.

@throws CameraAccessException
"
      end

      operation 83831479 "getCurrentAfMode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get current AF mode.
@return current AF mode
@throws IllegalStateException if there auto focus is not running.
"
      end

      operation 83831607 "startAutoFocusLocked"
	private explicit_return_type "void"
	nparams 2
	  param inout name "forceActive" explicit_type "boolean"
	  param inout name "afRegions" type class_ref 7152951 // MeteringRectangle
	multiplicity "[]"
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83831735 "startAutoFocusFullActiveLocked"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83831863 "dispatchAutoFocusStatusLocked"
	private explicit_return_type "void"
	nparams 1
	  param in name "success" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83831991 "createRequestBuilder"
	private return_type class_ref 7151543 // Builder
	nparams 0
	nexceptions 1
	  exception class_ref 7147319 // CameraAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create request builder, set the af regions.
@throws CameraAccessException
"
      end

      operation 83832119 "setAfRegions"
	private explicit_return_type "void"
	nparams 1
	  param inout name "afRegions" type class_ref 7152951 // MeteringRectangle
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set AF regions, fall back to default region if afRegions is null.

@param afRegions The AF regions to set
@throws IllegalArgumentException if the region is malformed (length is 0).
"
      end

      operation 83832247 "setDefaultAfRegions"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set default AF region to full active array size.
"
      end

      operation 83832375 "createCaptureListener"
	private return_type class_ref 7147959 // CaptureCallback
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 7647287 "InMatcher"
      visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A {@link Matcher} class for checking if value contained in a {@link Collection} or array.


(non-Javadoc)
@see android.hardware.camera2.cts.helpers.InMatcher
"
      attribute 26718391 "mValues"
	protected explicit_type "T"
	stereotype "Collection"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 83839031 "InMatcher"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "values" explicit_type "Collection<T>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83839159 "InMatcher"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "" explicit_type "T...values"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 83839287 "matches"
	cpp_inline public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
@Override
"
	
	
	
      end

      operation 83839415 "describeTo"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "description" explicit_type "Description"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 83839543 "in"
	class_operation cpp_inline public explicit_return_type "Matcher<T>"
	nparams 1
	  param inout name "" explicit_type "T...operand"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Factory
"
	
	
	
      end

      operation 83839671 "in"
	class_operation cpp_inline public explicit_return_type "Matcher<T>"
	nparams 1
	  param inout name "operand" explicit_type "Collection<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Factory
"
	
	
	
      end
    end

    class 7648823 "CameraUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility class containing helper functions for the Camera framework tests.


(non-Javadoc)
@see android.hardware.cts.helpers.CameraUtils
"
      operation 83854007 "isLegacyHAL"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "context" type class_ref 6923703 // Context
	  param in name "cameraId" explicit_type "int"
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if this device only supports {@code LEGACY} mode operation in the
Camera2 API for the given camera ID.

@param context {@link Context} to access the {@link CameraManager} in.
@param cameraId the ID of the camera device to check.
@return {@code true} if this device only supports {@code LEGACY} mode.
"
      end

      operation 83854135 "compareSizes"
	class_operation public explicit_return_type "int"
	nparams 4
	  param in name "widthA" explicit_type "int"
	  param in name "heightA" explicit_type "int"
	  param in name "widthB" explicit_type "int"
	  param in name "heightB" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shared size comparison method used by size comparators.

<p>Compares the number of pixels it covers.If two the areas of two sizes are same, compare
the widths.</p>
"
      end

      class 7648951 "LegacySizeComparator"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	operation 83854263 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "lhs" type class_ref 7142711 // Size
	    param inout name "rhs" type class_ref 7142711 // Size
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 7649079 "Preconditions"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper set of methods to perform precondition checks before starting method execution.

<p>Typically used to sanity check arguments or the current object state.</p>


(non-Javadoc)
@see android.hardware.camera2.cts.helpers.Preconditions
"
      operation 83854391 "checkBitFlags"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "argName" explicit_type "String"
	  param in name "arg" explicit_type "int"
	  param inout name "flagsName" explicit_type "String"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the value has the expected bitwise flags set.

@param argName Name of the argument
@param arg Argument to check
@param flagsName Name of the bitwise flags
@param flags Bit flags to check.
@return arg

@throws IllegalArgumentException if the bitwise flags weren't set
"
      end

      operation 83854519 "checkEquals"
	class_operation public explicit_return_type "T"
	nparams 4
	  param inout name "argName" explicit_type "String"
	  param inout name "arg" explicit_type "T"
	  param inout name "expectedName" explicit_type "String"
	  param inout name "expectedValue" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the value is {@link Object#equals equal} to the expected value.

@param argName Name of the argument
@param arg Argument to check
@param expectedName Name of the expected value
@param expectedValue Expected value
@return arg

@throws IllegalArgumentException if the values were not equal
"
      end

      operation 83854647 "checkNotNull"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "argName" explicit_type "String"
	  param inout name "arg" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the value is not {@code null}.

<p>
Returns the value directly, so you can use {@code checkNotNull(\"value\", value)} inline.
</p>

@param argName Name of the argument
@param arg Argument to check
@return arg

@throws NullPointerException if arg was {@code null}
"
      end

      operation 83854775 "checkNotNull"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "arg" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the value is not {@code null}.

<p>
Returns the value directly, so you can use {@code checkNotNull(\"value\", value)} inline.
</p>

@param arg Argument to check
@return arg

@throws NullPointerException if arg was {@code null}
"
      end

      operation 83854903 "checkState"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "message" explicit_type "String"
	  param inout name "state" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the state is currently {@link true}.

@param message Message to raise an exception with if the state checking fails.
@param state State to check

@throws IllegalStateException if state was {@code false}

@return The state value (always {@code true}).
"
      end

      operation 83855031 "checkCollectionElementsNotNull"
	class_operation public explicit_return_type "Collection<T>"
	nparams 2
	  param in name "value" explicit_type "Collection<T>"
	  param in name "valueName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the {@link Collection} is not {@code null}, and none of its elements are
{@code null}.

@param value a {@link Collection} of boxed objects
@param valueName the name of the argument to use if the check fails

@return the validated {@link Collection}

@throws NullPointerException if the {@code value} or any of its elements were {@code null}
"
      end

      operation 83855159 "checkCollectionNotEmpty"
	class_operation public explicit_return_type "Collection<T>"
	nparams 2
	  param in name "value" explicit_type "Collection<T>"
	  param in name "valueName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that the {@link Collection} is not {@code null}, and contains at least one element.

@param value a {@link Collection} of boxed elements.
@param valueName the name of the argument to use if the check fails.

@return the validated {@link Collection}

@throws NullPointerException if the {@code value} was {@code null}
@throws IllegalArgumentException if the {@code value} was empty
"
      end

      operation 83855287 "Preconditions"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Suppress default constructor for noninstantiability"
      end
    end
  end

  deploymentview 435767 "helpers"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 3083319 "AssertHelpers"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import static junit.framework.Assert.assertEquals;
import static junit.framework.Assert.assertTrue;
import static junit.framework.Assert.fail;
${definition}"
      associated_classes
	class_ref 7646519 // AssertHelpers
      end
      comment "Copyright 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3083447 "Camera2Focuser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.ex.camera2.pos.AutoFocusStateMachine;
import com.android.ex.camera2.pos.AutoFocusStateMachine.AutoFocusStateListener;
import android.hardware.camera2.CameraAccessException;
import android.hardware.camera2.CameraCaptureSession;
import android.hardware.camera2.CameraCaptureSession.CaptureCallback;
import android.hardware.camera2.CameraCharacteristics;
import android.hardware.camera2.CameraDevice;
import android.hardware.camera2.CaptureRequest;
import android.hardware.camera2.CaptureResult;
import android.hardware.camera2.TotalCaptureResult;
import android.hardware.camera2.params.MeteringRectangle;
import android.os.Handler;
import android.util.Log;
import android.view.Surface;
${definition}"
      associated_classes
	class_ref 7646647 // Camera2Focuser
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3083575 "InMatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.hamcrest.BaseMatcher;
import org.hamcrest.Description;
import org.hamcrest.Factory;
import org.hamcrest.Matcher;
import java.util.Arrays;
import java.util.Collection;
import java.util.Objects;
${definition}"
      associated_classes
	class_ref 7647287 // InMatcher
      end
      comment "Copyright 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3083703 "CameraErrorCollector"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.hamcrest.CoreMatchers;
import org.hamcrest.Matcher;
import org.junit.rules.ErrorCollector;
import android.graphics.Rect;
import android.hardware.camera2.CameraCharacteristics;
import android.hardware.camera2.CaptureRequest;
import android.hardware.camera2.CaptureRequest.Builder;
import android.hardware.camera2.CaptureResult;
import android.hardware.camera2.params.MeteringRectangle;
import android.media.Image;
import android.util.Log;
import android.util.Size;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Objects;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 7639607 // CameraErrorCollector
      end
      comment "Copyright 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3083831 "CameraTestHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import junit.framework.Assert;
import android.hardware.Camera;
import android.hardware.Camera.Parameters;
import android.hardware.Camera.PictureCallback;
import android.hardware.Camera.ShutterCallback;
import android.os.Environment;
import android.util.Log;
import android.view.SurfaceHolder;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 7645239 // CameraTestHelper
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3083959 "CameraTestResultPrinter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Instrumentation;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
${definition}"
      associated_classes
	class_ref 7639863 // CameraTestResultPrinter
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3084087 "CameraTestUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.ex.camera2.blocking.BlockingCameraManager;
import com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException;
import com.android.ex.camera2.blocking.BlockingSessionCallback;
import com.android.ex.camera2.blocking.BlockingStateCallback;
import com.android.ex.camera2.exceptions.TimeoutRuntimeException;
import junit.framework.Assert;
import org.mockito.Mockito;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.ImageFormat;
import android.graphics.PointF;
import android.graphics.Rect;
import android.hardware.camera2.CameraAccessException;
import android.hardware.camera2.CameraCaptureSession;
import android.hardware.camera2.CameraCharacteristics;
import android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession;
import android.hardware.camera2.CameraDevice;
import android.hardware.camera2.CameraManager;
import android.hardware.camera2.CaptureFailure;
import android.hardware.camera2.CaptureRequest;
import android.hardware.camera2.CaptureResult;
import android.hardware.camera2.TotalCaptureResult;
import android.hardware.camera2.params.InputConfiguration;
import android.hardware.camera2.params.MeteringRectangle;
import android.hardware.camera2.params.StreamConfigurationMap;
import android.location.Location;
import android.location.LocationManager;
import android.media.ExifInterface;
import android.media.Image;
import android.media.Image.Plane;
import android.media.ImageReader;
import android.media.ImageWriter;
import android.os.Build;
import android.os.Environment;
import android.os.Handler;
import android.util.Log;
import android.util.Pair;
import android.util.Size;
import android.view.Display;
import android.view.Surface;
import android.view.WindowManager;
import java.io.FileOutputStream;
import java.io.IOException;
import java.lang.reflect.Array;
import java.nio.ByteBuffer;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.Semaphore;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicLong;
${definition}"
      associated_classes
	class_ref 7639991 // CameraTestUtils
      end
      comment "Copyright 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3084215 "CameraUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.hardware.Camera;
import android.hardware.camera2.CameraCharacteristics;
import android.hardware.camera2.CameraManager;
import java.util.Comparator;
${definition}"
      associated_classes
	class_ref 7648823 // CameraUtils
      end
      comment "Copyright 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3084343 "Preconditions"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Collection;
import java.util.Objects;
${definition}"
      associated_classes
	class_ref 7649079 // Preconditions
      end
      comment "Copyright 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 3084471 "StaticMetadata"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import junit.framework.Assert;
import android.graphics.ImageFormat;
import android.graphics.Rect;
import android.hardware.camera2.CameraCharacteristics;
import android.hardware.camera2.CameraCharacteristics.Key;
import android.hardware.camera2.CameraMetadata;
import android.hardware.camera2.CaptureRequest;
import android.hardware.camera2.CaptureResult;
import android.hardware.camera2.params.StreamConfigurationMap;
import android.util.Log;
import android.util.Range;
import android.util.Rational;
import android.util.Size;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import static com.android.mediaframeworktest.helpers.AssertHelpers.assertArrayContainsAnyOf;
${definition}"
      associated_classes
	class_ref 7639735 // StaticMetadata
      end
      comment "Copyright 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
