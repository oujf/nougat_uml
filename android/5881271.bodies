class ConfigurationBoundResourceCacheTest
!!!47911863.java!!!	ConfigurationBoundResourceCacheTest()
        super(ResourceCacheActivity.class);
!!!47911991.java!!!	setUp() : void
        super.setUp();
        mCache = new ConfigurationBoundResourceCache<>();
!!!47912119.java!!!	testGetEmpty() : void
        final Resources res = getActivity().getResources();
        assertNull(mCache.getInstance(-1, res, null));
!!!47912247.java!!!	testSetGet() : void
        mCache.put(1, null, new DummyFloatConstantState(5f));
        final Resources res = getActivity().getResources();
        assertEquals(5f, mCache.getInstance(1, res, null));
        assertNotSame(5f, mCache.getInstance(1, res, null));
        assertEquals(null, mCache.getInstance(1, res, getActivity().getTheme()));
!!!47912375.java!!!	testSetGetThemed() : void
        mCache.put(1, getActivity().getTheme(), new DummyFloatConstantState(5f));
        final Resources res = getActivity().getResources();
        assertEquals(null, mCache.getInstance(1, res, null));
        assertEquals(5f, mCache.getInstance(1, res, getActivity().getTheme()));
        assertNotSame(5f, mCache.getInstance(1, res, getActivity().getTheme()));
!!!47912503.java!!!	testMultiThreadPutGet() : void
        mCache.put(1, getActivity().getTheme(), new DummyFloatConstantState(5f));
        mCache.put(1, null, new DummyFloatConstantState(10f));
        final Resources res = getActivity().getResources();
        assertEquals(10f, mCache.getInstance(1, res, null));
        assertNotSame(10f, mCache.getInstance(1, res, null));
        assertEquals(5f, mCache.getInstance(1, res, getActivity().getTheme()));
        assertNotSame(5f, mCache.getInstance(1, res, getActivity().getTheme()));
!!!47912631.java!!!	testVoidConfigChange() : void
        TypedValue staticValue = new TypedValue();
        long key = 3L;
        final Resources res = getActivity().getResources();
        res.getValue(R.dimen.resource_cache_test_generic, staticValue, true);
        float staticDim = TypedValue.complexToDimension(staticValue.data, res.getDisplayMetrics());
        mCache.put(key, getActivity().getTheme(),
                new DummyFloatConstantState(staticDim, staticValue.changingConfigurations));
        final Configuration cfg = res.getConfiguration();
        Configuration newCnf = new Configuration(cfg);
        newCnf.orientation = cfg.orientation == Configuration.ORIENTATION_LANDSCAPE ?
                Configuration.ORIENTATION_PORTRAIT
                : Configuration.ORIENTATION_LANDSCAPE;
        int changes = calcConfigChanges(res, newCnf);
        assertEquals(staticDim, mCache.getInstance(key, res, getActivity().getTheme()));
        mCache.onConfigurationChange(changes);
        assertEquals(staticDim, mCache.getInstance(key, res, getActivity().getTheme()));
!!!47912759.java!!!	testEffectiveConfigChange() : void
        TypedValue changingValue = new TypedValue();
        long key = 4L;
        final Resources res = getActivity().getResources();
        res.getValue(R.dimen.resource_cache_test_orientation_dependent, changingValue, true);
        float changingDim = TypedValue.complexToDimension(changingValue.data,
                res.getDisplayMetrics());
        mCache.put(key, getActivity().getTheme(),
                new DummyFloatConstantState(changingDim, changingValue.changingConfigurations));

        final Configuration cfg = res.getConfiguration();
        Configuration newCnf = new Configuration(cfg);
        newCnf.orientation = cfg.orientation == Configuration.ORIENTATION_LANDSCAPE ?
                Configuration.ORIENTATION_PORTRAIT
                : Configuration.ORIENTATION_LANDSCAPE;
        int changes = calcConfigChanges(res, newCnf);
        assertEquals(changingDim, mCache.getInstance(key, res, getActivity().getTheme()));
        mCache.onConfigurationChange(changes);
        assertNull(mCache.get(key, getActivity().getTheme()));
!!!47912887.java!!!	testConfigChangeMultipleResources() : void
        TypedValue staticValue = new TypedValue();
        TypedValue changingValue = new TypedValue();
        final Resources res = getActivity().getResources();
        res.getValue(R.dimen.resource_cache_test_generic, staticValue, true);
        res.getValue(R.dimen.resource_cache_test_orientation_dependent, changingValue, true);
        float staticDim = TypedValue.complexToDimension(staticValue.data, res.getDisplayMetrics());
        float changingDim = TypedValue.complexToDimension(changingValue.data,
                res.getDisplayMetrics());
        mCache.put(R.dimen.resource_cache_test_generic, getActivity().getTheme(),
                new DummyFloatConstantState(staticDim, staticValue.changingConfigurations));
        mCache.put(R.dimen.resource_cache_test_orientation_dependent, getActivity().getTheme(),
                new DummyFloatConstantState(changingDim, changingValue.changingConfigurations));
        final Configuration cfg = res.getConfiguration();
        Configuration newCnf = new Configuration(cfg);
        newCnf.orientation = cfg.orientation == Configuration.ORIENTATION_LANDSCAPE ?
                Configuration.ORIENTATION_PORTRAIT
                : Configuration.ORIENTATION_LANDSCAPE;
        int changes = calcConfigChanges(res, newCnf);
        assertEquals(staticDim, mCache.getInstance(R.dimen.resource_cache_test_generic, res,
                getActivity().getTheme()));
        assertEquals(changingDim,
                mCache.getInstance(R.dimen.resource_cache_test_orientation_dependent, res,
                        getActivity().getTheme()));
        mCache.onConfigurationChange(changes);
        assertEquals(staticDim, mCache.getInstance(R.dimen.resource_cache_test_generic, res,
                getActivity().getTheme()));
        assertNull(mCache.getInstance(R.dimen.resource_cache_test_orientation_dependent, res,
                getActivity().getTheme()));
!!!47913015.java!!!	testConfigChangeMultipleThemes() : void
        TypedValue[] staticValues = new TypedValue[]{new TypedValue(), new TypedValue()};
        TypedValue[] changingValues = new TypedValue[]{new TypedValue(), new TypedValue()};
        float staticDim = 0;
        float changingDim = 0;
        final Resources res = getActivity().getResources();
        for (int i = 0; i < 2; i++) {
            res.getValue(R.dimen.resource_cache_test_generic, staticValues[i], true);
            staticDim = TypedValue
                    .complexToDimension(staticValues[i].data, res.getDisplayMetrics());

            res.getValue(R.dimen.resource_cache_test_orientation_dependent, changingValues[i],
                    true);
            changingDim = TypedValue.complexToDimension(changingValues[i].data,
                    res.getDisplayMetrics());
            final Resources.Theme theme = i == 0 ? getActivity().getTheme() : null;
            mCache.put(R.dimen.resource_cache_test_generic, theme,
                    new DummyFloatConstantState(staticDim, staticValues[i].changingConfigurations));
            mCache.put(R.dimen.resource_cache_test_orientation_dependent, theme,
                    new DummyFloatConstantState(changingDim,
                            changingValues[i].changingConfigurations));
        }
        final Configuration cfg = res.getConfiguration();
        Configuration newCnf = new Configuration(cfg);
        newCnf.orientation = cfg.orientation == Configuration.ORIENTATION_LANDSCAPE ?
                Configuration.ORIENTATION_PORTRAIT
                : Configuration.ORIENTATION_LANDSCAPE;
        int changes = calcConfigChanges(res, newCnf);
        for (int i = 0; i < 2; i++) {
            final Resources.Theme theme = i == 0 ? getActivity().getTheme() : null;
            assertEquals(staticDim,
                    mCache.getInstance(R.dimen.resource_cache_test_generic, res, theme));
            assertEquals(changingDim,
                    mCache.getInstance(R.dimen.resource_cache_test_orientation_dependent, res,
                            theme));
        }
        mCache.onConfigurationChange(changes);
        for (int i = 0; i < 2; i++) {
            final Resources.Theme theme = i == 0 ? getActivity().getTheme() : null;
            assertEquals(staticDim,
                    mCache.getInstance(R.dimen.resource_cache_test_generic, res, theme));
            assertNull(mCache.getInstance(R.dimen.resource_cache_test_orientation_dependent, res,
                    theme));
        }
!!!47913143.java!!!	calcConfigChanges(inout resources : Resources, inout configuration : Configuration) : int
        return resources.calcConfigChanges(configuration);
