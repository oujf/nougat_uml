class DynamicLayoutBlocksTest
!!!48070199.java!!!	defineInitialState(inout ends : int [[]], inout indices : int [[]]) : void
        initialBlockEnds = ends;
        initialBlockIndices = indices;
        assertEquals(initialBlockEnds.length, initialBlockIndices.length);
!!!48070327.java!!!	printBlocks(inout message : String) : void
        System.out.print(message);
        for (int i = 0; i < dl.getNumberOfBlocks(); i++) {
            System.out.print("  " + Integer.toString(dl.getBlockEndLines()[i]));
        }
        System.out.println();
!!!48070455.java!!!	checkInvariants() : void
        assertTrue(dl.getNumberOfBlocks() > 0);
        assertTrue(dl.getNumberOfBlocks() <= dl.getBlockEndLines().length);
        assertEquals(dl.getBlockEndLines().length, dl.getBlockIndices().length);

        for (int i = 1; i < dl.getNumberOfBlocks(); i++) {
            assertTrue(dl.getBlockEndLines()[i] > dl.getBlockEndLines()[i-1]);
        }
!!!48070583.java!!!	update(in startLine : int, in endLine : int, in newLineCount : int) : void
        dl.setBlocksDataForTest(initialBlockEnds, initialBlockIndices, initialBlockEnds.length);
        checkInvariants();
        dl.updateBlocks(startLine, endLine, newLineCount);
!!!48070711.java!!!	assertState(inout sizes : int [[]], inout indices : int [[]]) : void
        checkInvariants();

        assertEquals(sizes.length, dl.getNumberOfBlocks());
        assertEquals(indices.length, dl.getNumberOfBlocks());

        int[] ends = new int[sizes.length];
        for (int i = 0; i < ends.length; i++) {
            ends[i] = i == 0 ? (sizes[0] == 0 ? 0 : sizes[0] - 1) : ends[i - 1] + sizes[i];
        }

        for (int i = 0; i < dl.getNumberOfBlocks(); i++) {
            assertEquals(ends[i], dl.getBlockEndLines()[i]);
            assertEquals(indices[i], dl.getBlockIndices()[i]);
        }
!!!48070839.java!!!	assertState(inout sizes : int [[]]) : void
        int[] ids = new int[sizes.length];
        for (int i = 0; i < sizes.length; i++) {
            ids[i] = DynamicLayout.INVALID_BLOCK_INDEX;
        }
        assertState(sizes, ids);
!!!48070967.java!!!	testFrom0() : void
        defineInitialState( new int[] { 0 }, new int[] { 123 });

        update(0, 0, 0);
        assertState( new int[] { 0 } );

        update(0, 0, 1);
        assertState( new int[] { 0 } );

        update(0, 0, 10);
        assertState( new int[] { 10 } );
!!!48071095.java!!!	testFrom1ReplaceByEmpty() : void
        defineInitialState( new int[] { 100 }, new int[] { 123 });

        update(0, 0, 0);
        assertState( new int[] { 100 } );

        update(0, 10, 0);
        assertState( new int[] { 90 } );

        update(0, 100, 0);
        assertState( new int[] { 0 } );

        update(20, 30, 0);
        assertState( new int[] { 20, 70 } );

        update(20, 20, 0);
        assertState( new int[] { 20, 80 } );

        update(40, 100, 0);
        assertState( new int[] { 40 } );

        update(100, 100, 0);
        assertState( new int[] { 100 } );
!!!48071223.java!!!	testFrom1ReplaceFromFirstLine() : void
        defineInitialState( new int[] { 100 }, new int[] { 123 });

        update(0, 0, 1);
        assertState( new int[] { 0, 100 } );

        update(0, 0, 10);
        assertState( new int[] { 10, 100 } );

        update(0, 30, 31);
        assertState( new int[] { 31, 70 } );

        update(0, 100, 20);
        assertState( new int[] { 20 } );
!!!48071351.java!!!	testFrom1ReplaceFromCenter() : void
        defineInitialState( new int[] { 100 }, new int[] { 123 });

        update(20, 20, 1);
        assertState( new int[] { 20, 1, 80 } );

        update(20, 20, 10);
        assertState( new int[] { 20, 10, 80 } );

        update(20, 30, 50);
        assertState( new int[] { 20, 50, 70 } );

        update(20, 100, 50);
        assertState( new int[] { 20, 50 } );
!!!48071479.java!!!	testFrom1ReplaceFromEnd() : void
        defineInitialState( new int[] { 100 }, new int[] { 123 });

        update(100, 100, 0);
        assertState( new int[] { 100 } );

        update(100, 100, 1);
        assertState( new int[] { 100, 1 } );

        update(100, 100, 10);
        assertState( new int[] { 100, 10 } );
!!!48071607.java!!!	testFrom2ReplaceFromFirstLine() : void
        defineInitialState( new int[] { 10, 20 }, new int[] { 123, 456 });

        update(0, 4, 50);
        assertState( new int[] { 50, 10-4, 20-10 }, new int[] { ___, ___, 456 } );

        update(0, 10, 50);
        assertState( new int[] { 50, 20-10 }, new int[] { ___, 456 } );

        update(0, 15, 50);
        assertState( new int[] { 50, 20-15 }, new int[] { ___, ___ } );

        update(0, 20, 50);
        assertState( new int[] { 50 }, new int[] { ___ } );
!!!48071735.java!!!	testFrom2ReplaceFromFirstBlock() : void
        defineInitialState( new int[] { 10, 20 }, new int[] { 123, 456 });

        update(3, 7, 50);
        assertState( new int[] { 3, 50, 10-7, 20-10 }, new int[] { ___, ___, ___, 456 } );

        update(3, 10, 50);
        assertState( new int[] { 3, 50, 20-10 }, new int[] { ___, ___, 456 } );

        update(3, 14, 50);
        assertState( new int[] { 3, 50, 20-14 }, new int[] { ___, ___, ___ } );

        update(3, 20, 50);
        assertState( new int[] { 3, 50 }, new int[] { ___, ___ } );
!!!48071863.java!!!	testFrom2ReplaceFromBottomBoundary() : void
        defineInitialState( new int[] { 10, 20 }, new int[] { 123, 456 });

        update(10, 10, 50);
        assertState( new int[] { 10, 50, 20-10 }, new int[] { ___, ___, 456 } );

        update(10, 14, 50);
        assertState( new int[] { 10, 50, 20-14 }, new int[] { ___, ___, ___ } );

        update(10, 20, 50);
        assertState( new int[] { 10, 50 }, new int[] { ___, ___ } );
!!!48071991.java!!!	testFrom2ReplaceFromTopBoundary() : void
        defineInitialState( new int[] { 10, 20 }, new int[] { 123, 456 });

        update(11, 11, 50);
        assertState( new int[] { 11, 50, 20-11 }, new int[] { 123, ___, ___ } );

        update(11, 14, 50);
        assertState( new int[] { 11, 50, 20-14 }, new int[] { 123, ___, ___ } );

        update(11, 20, 50);
        assertState( new int[] { 11, 50 }, new int[] { 123, ___ } );
!!!48072119.java!!!	testFrom2ReplaceFromSecondBlock() : void
        defineInitialState( new int[] { 10, 20 }, new int[] { 123, 456 });

        update(14, 14, 50);
        assertState( new int[] { 11, 14-11, 50, 20-14 }, new int[] { 123, ___, ___, ___ } );

        update(14, 17, 50);
        assertState( new int[] { 11, 14-11, 50, 20-17 }, new int[] { 123, ___, ___, ___ } );

        update(14, 20, 50);
        assertState( new int[] { 11, 14-11, 50 }, new int[] { 123, ___, ___ } );
!!!48072247.java!!!	testFrom2RemoveFromFirst() : void
        defineInitialState( new int[] { 10, 20 }, new int[] { 123, 456 });

        update(0, 4, 0);
        assertState( new int[] { 10-4, 20-10 }, new int[] { ___, 456 } );

        update(0, 10, 0);
        assertState( new int[] { 20-10 }, new int[] { 456 } );

        update(0, 14, 0);
        assertState( new int[] { 20-14 }, new int[] { ___ } );

        update(0, 20, 0);
        assertState( new int[] { 0 }, new int[] { ___ } );
!!!48072375.java!!!	testFrom2RemoveFromFirstBlock() : void
        defineInitialState( new int[] { 10, 20 }, new int[] { 123, 456 });

        update(4, 7, 0);
        assertState( new int[] { 4, 10-7, 20-10 }, new int[] { ___, ___, 456 } );

        update(4, 10, 0);
        assertState( new int[] { 4, 20-10 }, new int[] { ___, 456 } );

        update(4, 14, 0);
        assertState( new int[] { 4, 20-14 }, new int[] { ___, ___ } );

        update(4, 20, 0);
        assertState( new int[] { 4 }, new int[] { ___ } );
!!!48072503.java!!!	testFrom2RemoveFromSecondBlock() : void
        defineInitialState( new int[] { 10, 20 }, new int[] { 123, 456 });

        update(14, 17, 0);
        assertState( new int[] { 11, 14-11, 20-17 }, new int[] { 123, ___, ___ } );

        update(14, 20, 0);
        assertState( new int[] { 11, 14-11 }, new int[] { 123, ___ } );
!!!48072631.java!!!	testFrom3ReplaceFromFirstBlock() : void
        defineInitialState( new int[] { 10, 30, 60 }, new int[] { 123, 456, 789 });

        update(3, 7, 50);
        assertState( new int[] { 3, 50, 10-7, 30-10, 60-30 }, new int[] { ___, ___, ___, 456, 789 } );

        update(3, 10, 50);
        assertState( new int[] { 3, 50, 30-10, 60-30 }, new int[] { ___, ___, 456, 789 } );

        update(3, 17, 50);
        assertState( new int[] { 3, 50, 30-17, 60-30 }, new int[] { ___, ___, ___, 789 } );

        update(3, 30, 50);
        assertState( new int[] { 3, 50, 60-30 }, new int[] { ___, ___, 789 } );

        update(3, 40, 50);
        assertState( new int[] { 3, 50, 60-40 }, new int[] { ___, ___, ___ } );

        update(3, 60, 50);
        assertState( new int[] { 3, 50 }, new int[] { ___, ___ } );
!!!48072759.java!!!	testFrom3ReplaceFromSecondBlock() : void
        defineInitialState( new int[] { 10, 30, 60 }, new int[] { 123, 456, 789 });

        update(13, 17, 50);
        assertState( new int[] { 11, 2, 50, 30-17, 60-30 }, new int[] { 123, ___, ___, ___, 789 } );

        update(13, 30, 50);
        assertState( new int[] { 11, 2, 50, 60-30 }, new int[] { 123, ___, ___, 789 } );

        update(13, 40, 50);
        assertState( new int[] { 11, 2, 50, 60-40 }, new int[] { 123, ___, ___, ___ } );

        update(13, 60, 50);
        assertState( new int[] { 11, 2, 50 }, new int[] { 123, ___, ___ } );
