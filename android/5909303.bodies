class MockSpanned
!!!48085303.java!!!	clear() : void
            allSpans.clear();
            nonEmptySpans.clear();
!!!48085431.java!!!	addSpan() : TextUtilsTest::MockSpanned
            Object o = new Object();
            allSpans.add(o);
            nonEmptySpans.add(o);
            return this;
!!!48085559.java!!!	addEmptySpan() : TextUtilsTest::MockSpanned
            Object o = new Object();
            allSpans.add(o);
            return this;
!!!48085687.java!!!	test() : void
            Object[] nonEmpty = TextUtils.removeEmptySpans(allSpans.toArray(), this, Object.class);
            assertEquals("Mismatched array size", nonEmptySpans.size(), nonEmpty.length);
            for (int i=0; i<nonEmpty.length; i++) {
                assertEquals("Span differ", nonEmptySpans.get(i), nonEmpty[i]);
            }
!!!48085815.java!!!	charAt(in arg0 : int) : char
            return 0;
!!!48085943.java!!!	length() : int
            return 0;
!!!48086071.java!!!	subSequence(in arg0 : int, in arg1 : int) : CharSequence
            return null;
!!!48086199.java!!!	getSpans(in start : int, in end : int, inout type : Class) : T
            return null;
!!!48086327.java!!!	getSpanStart(inout tag : Object) : int
            return 0;
!!!48086455.java!!!	getSpanEnd(inout tag : Object) : int
            return nonEmptySpans.contains(tag) ? 1 : 0;
!!!48086583.java!!!	getSpanFlags(inout tag : Object) : int
            return 0;
!!!48086711.java!!!	nextSpanTransition(in start : int, in limit : int, inout type : Class) : int
            return 0;
