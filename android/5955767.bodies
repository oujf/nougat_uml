class ListTouchBottomGravityTest
!!!48320567.java!!!	ListTouchBottomGravityTest()
        super("com.android.frameworks.coretests", ListBottomGravity.class);
!!!48320695.java!!!	setUp() : void
        super.setUp();

        mActivity = getActivity();
        mListView = getActivity().getListView();
!!!48320823.java!!!	testPreconditions() : void
        assertNotNull(mActivity);
        assertNotNull(mListView);
        
        // First item should be selected
        assertEquals(mListView.getAdapter().getCount() - 1, mListView.getSelectedItemPosition());
!!!48320951.java!!!	testPullDown() : void
        View firstChild = mListView.getChildAt(0);
        
        TouchUtils.dragViewToBottom(this, firstChild);
        
        View lastChild = mListView.getChildAt(mListView.getChildCount() - 1);
        
        // Nothing should be selected
        assertEquals("Selection still available after touch", -1, 
                mListView.getSelectedItemPosition());
        
        assertEquals("List is not scrolled to the bottom", mListView.getAdapter().getCount() - 1,
                lastChild.getId());

        assertEquals("Last item is not touching the bottom edge", 
                mListView.getHeight() - mListView.getListPaddingBottom(), lastChild.getBottom());
!!!48321079.java!!!	testPushUp() : void
        View lastChild = mListView.getChildAt(mListView.getChildCount() - 1);
        
        TouchUtils.dragViewToTop(this, lastChild);

        lastChild = mListView.getChildAt(mListView.getChildCount() - 1);
        
        // Nothing should be selected
        assertEquals("Selection still available after touch", -1, 
                mListView.getSelectedItemPosition());
        
        assertEquals("List is not scrolled to the bottom", mListView.getAdapter().getCount() - 1,
                lastChild.getId());

        assertEquals("Last item is not touching the bottom edge",  
                mListView.getHeight() - mListView.getListPaddingBottom(), lastChild.getBottom());
