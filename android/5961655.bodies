class KernelWakelockReaderTest
!!!48357687.java!!!	setUp() : void
        super.setUp();
        mReader = new KernelWakelockReader();
!!!48357815.java!!!	testParseEmptyFile() : void
        KernelWakelockStats staleStats = mReader.parseProcWakelocks(new byte[0], 0, true,
                new KernelWakelockStats());
        assertTrue(staleStats.isEmpty());
!!!48357943.java!!!	testOnlyHeader() : void
        byte[] buffer = new ProcFileBuilder().getBytes();
        KernelWakelockStats staleStats = mReader.parseProcWakelocks(buffer, buffer.length, true,
                new KernelWakelockStats());
        assertTrue(staleStats.isEmpty());
!!!48358071.java!!!	testOneWakelock() : void
        byte[] buffer = new ProcFileBuilder()
                .addLine("Wakelock", 34, 123) // Milliseconds
                .getBytes();
        KernelWakelockStats staleStats = mReader.parseProcWakelocks(buffer, buffer.length, true,
                new KernelWakelockStats());
        assertEquals(1, staleStats.size());
        assertTrue(staleStats.containsKey("Wakelock"));

        KernelWakelockStats.Entry entry = staleStats.get("Wakelock");
        assertEquals(34, entry.mCount);
        assertEquals(123 * 1000, entry.mTotalTime); // Microseconds
!!!48358199.java!!!	testTwoWakelocks() : void
        byte[] buffer = new ProcFileBuilder()
                .addLine("Wakelock", 1, 10)
                .addLine("Fakelock", 2, 20)
                .getBytes();
        KernelWakelockStats staleStats = mReader.parseProcWakelocks(buffer, buffer.length, true,
                new KernelWakelockStats());
        assertEquals(2, staleStats.size());
        assertTrue(staleStats.containsKey("Wakelock"));
        assertTrue(staleStats.containsKey("Fakelock"));
!!!48358327.java!!!	testDuplicateWakelocksAccumulate() : void
        byte[] buffer = new ProcFileBuilder()
                .addLine("Wakelock", 1, 10) // Milliseconds
                .addLine("Wakelock", 1, 10) // Milliseconds
                .getBytes();
        KernelWakelockStats staleStats = mReader.parseProcWakelocks(buffer, buffer.length, true,
                new KernelWakelockStats());
        assertEquals(1, staleStats.size());
        assertTrue(staleStats.containsKey("Wakelock"));

        KernelWakelockStats.Entry entry = staleStats.get("Wakelock");
        assertEquals(2, entry.mCount);
        assertEquals(20 * 1000, entry.mTotalTime); // Microseconds
!!!48358455.java!!!	testWakelocksBecomeStale() : void
        byte[] buffer = new ProcFileBuilder()
                .addLine("Fakelock", 3, 30)
                .getBytes();
        KernelWakelockStats staleStats = new KernelWakelockStats();

        staleStats = mReader.parseProcWakelocks(buffer, buffer.length, true, staleStats);
        assertEquals(1, staleStats.size());
        assertTrue(staleStats.containsKey("Fakelock"));

        buffer = new ProcFileBuilder()
                .addLine("Wakelock", 1, 10)
                .getBytes();

        staleStats = mReader.parseProcWakelocks(buffer, buffer.length, true, staleStats);
        assertEquals(1, staleStats.size());
        assertTrue(staleStats.containsKey("Wakelock"));
        assertFalse(staleStats.containsKey("Fakelock"));
