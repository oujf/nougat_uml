class MessageUtilsTest
!!!68888375.java!!!	makeSparseArray(inout keys : int [[]], inout values : String [[]]) : SparseArray
        assertEquals("Must specify same number of keys and values", keys.length, values.length);
        SparseArray<String> out = new SparseArray<>();
        for (int i = 0; i < keys.length; i++) {
            out.put(keys[i], values[i]);
        }
        return out;
!!!68888503.java!!!	assertSparseArrayEquals(inout a1 : SparseArray, inout a2 : SparseArray) : void
        String msg = String.format("%s != %s", a1.toString(), a2.toString());
        assertEquals(msg, a1.size(), a2.size());
        int size = a1.size();
        for (int i = 0; i < size; i++) {
            assertEquals(msg, a1.keyAt(i), a2.keyAt(i));
            assertEquals(msg, a1.valueAt(i), a2.valueAt(i));
        }
!!!68888631.java!!!	basicOperation() : void
        SparseArray<String> expected = makeSparseArray(
            new int[]{12, 45, 55, 56},
            new String[]{"CMD_DO_SOMETHING", "EVENT_SOMETHING_HAPPENED", "EVENT_BAR", "CMD_FOO"});
        assertSparseArrayEquals(expected, MessageUtils.findMessageNames(CLASSES));
!!!68888759.java!!!	withPrefixes() : void
        SparseArray<String> expected = makeSparseArray(
            new int[]{45, 55},
            new String[]{"EVENT_SOMETHING_HAPPENED", "EVENT_BAR"});
        assertSparseArrayEquals(expected, MessageUtils.findMessageNames(CLASSES,
                new String[]{"EVENT_"}));
!!!68888887.java!!!	duplicateConstants() : void
        MessageUtils.findMessageNames(CLASSES, new String[]{"CMD_", "NOTIFICATION_"});
