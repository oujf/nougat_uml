class NinePatch
!!!69007543.java!!!	NinePatch(inout bitmap : Bitmap, inout chunk : byte [[]])
        this(bitmap, chunk, null);
!!!69007671.java!!!	NinePatch(inout bitmap : Bitmap, inout chunk : byte [[]], inout srcName : String)
        mBitmap = bitmap;
        mSrcName = srcName;
        mNativeChunk = validateNinePatchChunk(chunk);
!!!69007799.java!!!	NinePatch(inout patch : NinePatch)
        mBitmap = patch.mBitmap;
        mSrcName = patch.mSrcName;
        if (patch.mPaint != null) {
            mPaint = new Paint(patch.mPaint);
        }
        // No need to validate the 9patch chunk again, it was done by
        // the instance we're copying from
        mNativeChunk = patch.mNativeChunk;
!!!69007927.java!!!	finalize() : void
        try {
            if (mNativeChunk != 0) {
                // only attempt to destroy correctly initilized chunks
                nativeFinalize(mNativeChunk);
                mNativeChunk = 0;
            }
        } finally {
            super.finalize();
        }
!!!69008055.java!!!	getName() : String
        return mSrcName;
!!!69008183.java!!!	getPaint() : Paint
        return mPaint;
!!!69008311.java!!!	setPaint(inout p : Paint) : void
        mPaint = p;
!!!69008439.java!!!	getBitmap() : Bitmap
        return mBitmap;
!!!69008567.java!!!	draw(inout canvas : Canvas, inout location : RectF) : void
        canvas.drawPatch(this, location, mPaint);
!!!69008695.java!!!	draw(inout canvas : Canvas, inout location : Rect) : void
        canvas.drawPatch(this, location, mPaint);
!!!69008823.java!!!	draw(inout canvas : Canvas, inout location : Rect, inout paint : Paint) : void
        canvas.drawPatch(this, location, paint);
!!!69008951.java!!!	getDensity() : int
        return mBitmap.mDensity;
!!!69009079.java!!!	getWidth() : int
        return mBitmap.getWidth();
!!!69009207.java!!!	getHeight() : int
        return mBitmap.getHeight();
!!!69009335.java!!!	hasAlpha() : boolean
        return mBitmap.hasAlpha();
!!!69009463.java!!!	getTransparentRegion(inout bounds : Rect) : Region
        long r = nativeGetTransparentRegion(mBitmap, mNativeChunk, bounds);
        return r != 0 ? new Region(r) : null;
