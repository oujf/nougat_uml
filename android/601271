format 213
"animation" // android::frameworks::base::cmds::am::src::com::android::server::wm::animation
  revision 1
  modified_by 55 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "D:\\Workspace\\AndroidSourceCode\\nougat_src\\frameworks\\base\\services\\core\\java/com/android/server/wm/animation/"
  java_package "com.android.server.wm.animation"
  classview 510775 "animation"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 7833527 "ClipRectLRAnimation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Special case of ClipRectAnimation that animates only the left/right
dimensions of the clip, picking up the other dimensions from whatever is
set on the transform already.

@hide
"
      classrelation 18116151 // <generalisation>
	relation 18116151 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 18116151 // <generalisation>
	  b parent class_ref 7418807 // ClipRectAnimation
      end

      operation 85801015 "ClipRectLRAnimation"
	public explicit_return_type ""
	nparams 4
	  param in name "fromL" explicit_type "int"
	  param in name "fromR" explicit_type "int"
	  param in name "toL" explicit_type "int"
	  param in name "toR" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor. Passes in 0 for Top/Bottom parameters of ClipRectAnimation
"
      end

      operation 85801143 "applyTransformation"
	protected explicit_return_type "void"
	nparams 2
	  param in name "it" explicit_type "float"
	  param inout name "tr" type class_ref 6952119 // Transformation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Calculates and sets clip rect on given transformation. It uses existing values
on the Transformation for Top/Bottom clip parameters.
"
      end
    end

    class 7833655 "ClipRectTBAnimation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Special case of ClipRectAnimation that animates only the top/bottom
dimensions of the clip, picking up the other dimensions from whatever is
set on the transform already. In addition to that, information about a vertical translation
animation can be specified so this animation simulates as the clip would be applied after instead
of before applying the translation.
"
      classrelation 18116279 // <generalisation>
	relation 18116279 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 18116279 // <generalisation>
	  b parent class_ref 7418807 // ClipRectAnimation
      end

      attribute 27586999 "mFromTranslateY"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 27587127 "mToTranslateY"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 18116407 // mTranslateInterpolator (<unidirectional association>)
	relation 18116407 --->
	  a role_name "mTranslateInterpolator" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 18116407 // mTranslateInterpolator (<unidirectional association>)
	  b parent class_ref 7277239 // Interpolator
      end

      attribute 27587255 "mNormalizedTime"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 85801271 "ClipRectTBAnimation"
	public explicit_return_type ""
	nparams 7
	  param in name "fromT" explicit_type "int"
	  param in name "fromB" explicit_type "int"
	  param in name "toT" explicit_type "int"
	  param in name "toB" explicit_type "int"
	  param in name "fromTranslateY" explicit_type "int"
	  param in name "toTranslateY" explicit_type "int"
	  param inout name "translateInterpolator" type class_ref 7277239 // Interpolator
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor. Passes in 0 for Left/Right parameters of ClipRectAnimation
"
      end

      operation 85801399 "getTransformation"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "currentTime" explicit_type "long"
	  param inout name "outTransformation" type class_ref 6952119 // Transformation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 85801527 "applyTransformation"
	protected explicit_return_type "void"
	nparams 2
	  param in name "it" explicit_type "float"
	  param inout name "tr" type class_ref 6952119 // Transformation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Calculates and sets clip rect on given transformation. It uses existing values
on the Transformation for Left/Right clip parameters.
"
      end
    end

    class 7833783 "CurvedTranslateAnimation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Translate animation which follows a curved path.
"
      classrelation 18116535 // <generalisation>
	relation 18116535 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 18116535 // <generalisation>
	  b parent class_ref 6942135 // Animation
      end

      classrelation 18116663 // mKeyframes (<unidirectional association>)
	relation 18116663 --->
	  a role_name "mKeyframes" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 18116663 // mKeyframes (<unidirectional association>)
	  b parent class_ref 6970167 // PathKeyframes
      end

      operation 85801655 "CurvedTranslateAnimation"
	public explicit_return_type ""
	nparams 1
	  param inout name "path" type class_ref 5842743 // Path
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 85801783 "applyTransformation"
	protected explicit_return_type "void"
	nparams 2
	  param in name "interpolatedTime" explicit_type "float"
	  param inout name "t" type class_ref 6952119 // Transformation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end
  end

  deploymentview 448055 "animation"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 3162679 "ClipRectLRAnimation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.graphics.Rect;
import android.view.animation.ClipRectAnimation;
import android.view.animation.Transformation;
${definition}"
      associated_classes
	class_ref 7833527 // ClipRectLRAnimation
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License
"
    end

    artifact 3162807 "ClipRectTBAnimation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.graphics.Rect;
import android.view.animation.ClipRectAnimation;
import android.view.animation.Interpolator;
import android.view.animation.Transformation;
import android.view.animation.TranslateAnimation;
${definition}"
      associated_classes
	class_ref 7833655 // ClipRectTBAnimation
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License
"
    end

    artifact 3162935 "CurvedTranslateAnimation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.KeyframeSet;
import android.animation.PathKeyframes;
import android.graphics.Path;
import android.graphics.PointF;
import android.view.animation.Animation;
import android.view.animation.Transformation;
${definition}"
      associated_classes
	class_ref 7833783 // CurvedTranslateAnimation
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License
"
    end
  end
end
