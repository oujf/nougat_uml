class Color
!!!68974903.java!!!	alpha(in color : int) : int
        return color >>> 24;
!!!68975031.java!!!	red(in color : int) : int
        return (color >> 16) & 0xFF;
!!!68975159.java!!!	green(in color : int) : int
        return (color >> 8) & 0xFF;
!!!68975287.java!!!	blue(in color : int) : int
        return color & 0xFF;
!!!68975415.java!!!	rgb(in red : int, in green : int, in blue : int) : int
        return (0xFF << 24) | (red << 16) | (green << 8) | blue;
!!!68975543.java!!!	argb(in alpha : int, in red : int, in green : int, in blue : int) : int
        return (alpha << 24) | (red << 16) | (green << 8) | blue;
!!!68975671.java!!!	luminance(in color : int) : float
        double red = Color.red(color) / 255.0;
        red = red < 0.03928 ? red / 12.92 : Math.pow((red + 0.055) / 1.055, 2.4);
        double green = Color.green(color) / 255.0;
        green = green < 0.03928 ? green / 12.92 : Math.pow((green + 0.055) / 1.055, 2.4);
        double blue = Color.blue(color) / 255.0;
        blue = blue < 0.03928 ? blue / 12.92 : Math.pow((blue + 0.055) / 1.055, 2.4);
        return (float) ((0.2126 * red) + (0.7152 * green) + (0.0722 * blue));
!!!68975799.java!!!	parseColor(inout colorString : String) : int
        if (colorString.charAt(0) == '#') {
            // Use a long to avoid rollovers on #ffXXXXXX
            long color = Long.parseLong(colorString.substring(1), 16);
            if (colorString.length() == 7) {
                // Set the alpha value
                color |= 0x00000000ff000000;
            } else if (colorString.length() != 9) {
                throw new IllegalArgumentException("Unknown color");
            }
            return (int)color;
        } else {
            Integer color = sColorNameMap.get(colorString.toLowerCase(Locale.ROOT));
            if (color != null) {
                return color;
            }
        }
        throw new IllegalArgumentException("Unknown color");
!!!68975927.java!!!	RGBToHSV(in red : int, in green : int, in blue : int, inout hsv : float [[]]) : void
        if (hsv.length < 3) {
            throw new RuntimeException("3 components required for hsv");
        }
        nativeRGBToHSV(red, green, blue, hsv);
!!!68976055.java!!!	colorToHSV(in color : int, inout hsv : float [[]]) : void
        RGBToHSV((color >> 16) & 0xFF, (color >> 8) & 0xFF, color & 0xFF, hsv);
!!!68976183.java!!!	HSVToColor(inout hsv : float [[]]) : int
        return HSVToColor(0xFF, hsv);
!!!68976311.java!!!	HSVToColor(in alpha : int, inout hsv : float [[]]) : int
        if (hsv.length < 3) {
            throw new RuntimeException("3 components required for hsv");
        }
        return nativeHSVToColor(alpha, hsv);
!!!68976695.java!!!	getHtmlColor(inout color : String) : int
        Integer i = sColorNameMap.get(color.toLowerCase(Locale.ROOT));
        if (i != null) {
            return i;
        } else {
            try {
                return XmlUtils.convertValueToInt(color, -1);
            } catch (NumberFormatException nfe) {
                return -1;
            }
        }
