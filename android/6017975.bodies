class PathMeasure
!!!69049911.java!!!	PathMeasure()
        mPath = null;
        native_instance = native_create(0, false);
!!!69050039.java!!!	PathMeasure(inout path : Path, inout forceClosed : boolean)
        // The native implementation does not copy the path, prevent it from being GC'd
        mPath = path;
        native_instance = native_create(path != null ? path.ni() : 0,
                                        forceClosed);
!!!69050167.java!!!	setPath(inout path : Path, inout forceClosed : boolean) : void
        mPath = path;
        native_setPath(native_instance,
                       path != null ? path.ni() : 0,
                       forceClosed);
!!!69050295.java!!!	getLength() : float
        return native_getLength(native_instance);
!!!69050423.java!!!	getPosTan(in distance : float, inout pos : float [[]], inout tan : float [[]]) : boolean
        if (pos != null && pos.length < 2 ||
            tan != null && tan.length < 2) {
            throw new ArrayIndexOutOfBoundsException();
        }
        return native_getPosTan(native_instance, distance, pos, tan);
!!!69050551.java!!!	getMatrix(in distance : float, inout matrix : Matrix, in flags : int) : boolean
        return native_getMatrix(native_instance, distance, matrix.native_instance, flags);
!!!69050679.java!!!	getSegment(in startD : float, in stopD : float, inout dst : Path, inout startWithMoveTo : boolean) : boolean
        // Skia used to enforce this as part of it's API, but has since relaxed that restriction
        // so to maintain consistency in our API we enforce the preconditions here.
        float length = getLength();
        if (startD < 0) {
            startD = 0;
        }
        if (stopD > length) {
            stopD = length;
        }
        if (startD >= stopD) {
            return false;
        }

        dst.isSimplePath = false;
        return native_getSegment(native_instance, startD, stopD, dst.ni(), startWithMoveTo);
!!!69050807.java!!!	isClosed() : boolean
        return native_isClosed(native_instance);
!!!69050935.java!!!	nextContour() : boolean
        return native_nextContour(native_instance);
!!!69051063.java!!!	finalize() : void
        native_destroy(native_instance);
        native_instance = 0;  // Other finalizers can still call us.
