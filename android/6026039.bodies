class InsetState
!!!69177655.java!!!	InsetState(inout orig : InsetDrawable::InsetState, inout res : Resources)
            super(orig, res);

            if (orig != null) {
                mInsetLeft = orig.mInsetLeft;
                mInsetTop = orig.mInsetTop;
                mInsetRight = orig.mInsetRight;
                mInsetBottom = orig.mInsetBottom;

                if (orig.mDensity != mDensity) {
                    applyDensityScaling(orig.mDensity, mDensity);
                }
            }
!!!69177783.java!!!	onDensityChanged(in sourceDensity : int, in targetDensity : int) : void
            super.onDensityChanged(sourceDensity, targetDensity);

            applyDensityScaling(sourceDensity, targetDensity);
!!!69177911.java!!!	applyDensityScaling(in sourceDensity : int, in targetDensity : int) : void
            mInsetLeft = Bitmap.scaleFromDensity(mInsetLeft, sourceDensity, targetDensity);
            mInsetTop = Bitmap.scaleFromDensity(mInsetTop, sourceDensity, targetDensity);
            mInsetRight = Bitmap.scaleFromDensity(mInsetRight, sourceDensity, targetDensity);
            mInsetBottom = Bitmap.scaleFromDensity(mInsetBottom, sourceDensity, targetDensity);
!!!69178039.java!!!	newDrawable(inout res : Resources) : Drawable
            // If this drawable is being created for a different density,
            // just create a new constant state and call it a day.
            final InsetState state;
            if (res != null) {
                final int densityDpi = res.getDisplayMetrics().densityDpi;
                final int density = densityDpi == 0 ? DisplayMetrics.DENSITY_DEFAULT : densityDpi;
                if (density != mDensity) {
                    state = new InsetState(this, res);
                } else {
                    state = this;
                }
            } else {
                state = this;
            }

            return new InsetDrawable(state, res);
