class AndroidKeyStoreAuthenticatedAESCipherSpi
!!!69310263.java!!!	AndroidKeyStoreAuthenticatedAESCipherSpi(in keymasterBlockMode : int, in keymasterPadding : int)
        mKeymasterBlockMode = keymasterBlockMode;
        mKeymasterPadding = keymasterPadding;
!!!69310391.java!!!	resetAll() : void
        mIv = null;
        mIvHasBeenUsed = false;
        super.resetAll();
!!!69310519.java!!!	initKey(in opmode : int, inout key : Key) : void
        if (!(key instanceof AndroidKeyStoreSecretKey)) {
            throw new InvalidKeyException(
                    "Unsupported key: " + ((key != null) ? key.getClass().getName() : "null"));
        }
        if (!KeyProperties.KEY_ALGORITHM_AES.equalsIgnoreCase(key.getAlgorithm())) {
            throw new InvalidKeyException(
                    "Unsupported key algorithm: " + key.getAlgorithm() + ". Only " +
                    KeyProperties.KEY_ALGORITHM_AES + " supported");
        }
        setKey((AndroidKeyStoreSecretKey) key);
!!!69310647.java!!!	addAlgorithmSpecificParametersToBegin(inout keymasterArgs : KeymasterArguments) : void
        if ((isEncrypting()) && (mIvHasBeenUsed)) {
            // IV is being reused for encryption: this violates security best practices.
            throw new IllegalStateException(
                    "IV has already been used. Reusing IV in encryption mode violates security best"
                    + " practices.");
        }

        keymasterArgs.addEnum(KeymasterDefs.KM_TAG_ALGORITHM, KeymasterDefs.KM_ALGORITHM_AES);
        keymasterArgs.addEnum(KeymasterDefs.KM_TAG_BLOCK_MODE, mKeymasterBlockMode);
        keymasterArgs.addEnum(KeymasterDefs.KM_TAG_PADDING, mKeymasterPadding);
        if (mIv != null) {
            keymasterArgs.addBytes(KeymasterDefs.KM_TAG_NONCE, mIv);
        }
!!!69310775.java!!!	loadAlgorithmSpecificParametersFromBeginResult(inout keymasterArgs : KeymasterArguments) : void
        mIvHasBeenUsed = true;

        // NOTE: Keymaster doesn't always return an IV, even if it's used.
        byte[] returnedIv = keymasterArgs.getBytes(KeymasterDefs.KM_TAG_NONCE, null);
        if ((returnedIv != null) && (returnedIv.length == 0)) {
            returnedIv = null;
        }

        if (mIv == null) {
            mIv = returnedIv;
        } else if ((returnedIv != null) && (!Arrays.equals(returnedIv, mIv))) {
            throw new ProviderException("IV in use differs from provided IV");
        }
!!!69310903.java!!!	engineGetBlockSize() : int
        return BLOCK_SIZE_BYTES;
!!!69311031.java!!!	engineGetIV() : byte
        return ArrayUtils.cloneIfNotEmpty(mIv);
!!!69311159.java!!!	setIv(inout iv : byte [[]]) : void
        mIv = iv;
!!!69311287.java!!!	getIv() : byte
        return mIv;
