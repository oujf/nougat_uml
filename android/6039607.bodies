class AndroidKeyStoreECDSASignatureSpi
!!!69319863.java!!!	AndroidKeyStoreECDSASignatureSpi(in keymasterDigest : int)
        mKeymasterDigest = keymasterDigest;
!!!69319991.java!!!	initKey(inout key : AndroidKeyStoreKey) : void
        if (!KeyProperties.KEY_ALGORITHM_EC.equalsIgnoreCase(key.getAlgorithm())) {
            throw new InvalidKeyException("Unsupported key algorithm: " + key.getAlgorithm()
                    + ". Only" + KeyProperties.KEY_ALGORITHM_EC + " supported");
        }

        KeyCharacteristics keyCharacteristics = new KeyCharacteristics();
        int errorCode = getKeyStore().getKeyCharacteristics(
                key.getAlias(), null, null, key.getUid(), keyCharacteristics);
        if (errorCode != KeyStore.NO_ERROR) {
            throw getKeyStore().getInvalidKeyException(key.getAlias(), key.getUid(), errorCode);
        }
        long keySizeBits = keyCharacteristics.getUnsignedInt(KeymasterDefs.KM_TAG_KEY_SIZE, -1);
        if (keySizeBits == -1) {
            throw new InvalidKeyException("Size of key not known");
        } else if (keySizeBits > Integer.MAX_VALUE) {
            throw new InvalidKeyException("Key too large: " + keySizeBits + " bits");
        }
        mGroupSizeBits = (int) keySizeBits;

        super.initKey(key);
!!!69320119.java!!!	resetAll() : void
        mGroupSizeBits = -1;
        super.resetAll();
!!!69320247.java!!!	resetWhilePreservingInitState() : void
        super.resetWhilePreservingInitState();
!!!69320375.java!!!	addAlgorithmSpecificParametersToBegin(inout keymasterArgs : KeymasterArguments) : void
        keymasterArgs.addEnum(KeymasterDefs.KM_TAG_ALGORITHM, KeymasterDefs.KM_ALGORITHM_EC);
        keymasterArgs.addEnum(KeymasterDefs.KM_TAG_DIGEST, mKeymasterDigest);
!!!69320503.java!!!	getAdditionalEntropyAmountForSign() : int
        return (mGroupSizeBits + 7) / 8;
!!!69320631.java!!!	getGroupSizeBits() : int
        if (mGroupSizeBits == -1) {
            throw new IllegalStateException("Not initialized");
        }
        return mGroupSizeBits;
