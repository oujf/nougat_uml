class PKCS1Padding
!!!69334071.java!!!	PKCS1Padding()
            super(KeymasterDefs.KM_PAD_RSA_PKCS1_1_5_ENCRYPT);
!!!69334199.java!!!	adjustConfigForEncryptingWithPrivateKey() : boolean
            // RSA encryption with PCKS#1 padding using private key is a way to implement RSA
            // signatures with PKCS#1 padding. We have to support this for legacy reasons.
            setKeymasterPurposeOverride(KeymasterDefs.KM_PURPOSE_SIGN);
            setKeymasterPaddingOverride(KeymasterDefs.KM_PAD_RSA_PKCS1_1_5_SIGN);
            return true;
!!!69334455.java!!!	initAlgorithmSpecificParameters(inout params : AlgorithmParameterSpec) : void
            if (params != null) {
                throw new InvalidAlgorithmParameterException(
                        "Unexpected parameters: " + params + ". No parameters supported");
            }
!!!69334583.java!!!	initAlgorithmSpecificParameters(inout params : AlgorithmParameters) : void

            if (params != null) {
                throw new InvalidAlgorithmParameterException(
                        "Unexpected parameters: " + params + ". No parameters supported");
            }
!!!69334711.java!!!	engineGetParameters() : AlgorithmParameters
            return null;
!!!69334839.java!!!	getAdditionalEntropyAmountForBegin() : int
            return 0;
!!!69334967.java!!!	getAdditionalEntropyAmountForFinish() : int
            return (isEncrypting()) ? getModulusSizeBytes() : 0;
