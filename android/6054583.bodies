class Criteria
!!!69410871.java!!!	Criteria(inout criteria : Criteria)
        mHorizontalAccuracy = criteria.mHorizontalAccuracy;
        mVerticalAccuracy = criteria.mVerticalAccuracy;
        mSpeedAccuracy = criteria.mSpeedAccuracy;
        mBearingAccuracy = criteria.mBearingAccuracy;
        mPowerRequirement = criteria.mPowerRequirement;
        mAltitudeRequired = criteria.mAltitudeRequired;
        mBearingRequired = criteria.mBearingRequired;
        mSpeedRequired = criteria.mSpeedRequired;
        mCostAllowed = criteria.mCostAllowed;
!!!69410999.java!!!	setHorizontalAccuracy(in accuracy : int) : void
        if (accuracy < NO_REQUIREMENT || accuracy > ACCURACY_HIGH) {
            throw new IllegalArgumentException("accuracy=" + accuracy);
        }
        mHorizontalAccuracy = accuracy;
!!!69411127.java!!!	getHorizontalAccuracy() : int
        return mHorizontalAccuracy;
!!!69411255.java!!!	setVerticalAccuracy(in accuracy : int) : void
        if (accuracy < NO_REQUIREMENT || accuracy > ACCURACY_HIGH) {
            throw new IllegalArgumentException("accuracy=" + accuracy);
        }
        mVerticalAccuracy = accuracy;
!!!69411383.java!!!	getVerticalAccuracy() : int
        return mVerticalAccuracy;
!!!69411511.java!!!	setSpeedAccuracy(in accuracy : int) : void
        if (accuracy < NO_REQUIREMENT || accuracy > ACCURACY_HIGH) {
            throw new IllegalArgumentException("accuracy=" + accuracy);
        }
        mSpeedAccuracy = accuracy;
!!!69411639.java!!!	getSpeedAccuracy() : int
        return mSpeedAccuracy;
!!!69411767.java!!!	setBearingAccuracy(in accuracy : int) : void
        if (accuracy < NO_REQUIREMENT || accuracy > ACCURACY_HIGH) {
            throw new IllegalArgumentException("accuracy=" + accuracy);
        }
        mBearingAccuracy = accuracy;
!!!69411895.java!!!	getBearingAccuracy() : int
        return mBearingAccuracy;
!!!69412023.java!!!	setAccuracy(in accuracy : int) : void
        if (accuracy < NO_REQUIREMENT || accuracy > ACCURACY_COARSE) {
            throw new IllegalArgumentException("accuracy=" + accuracy);
        }
        if (accuracy == ACCURACY_FINE) {
            mHorizontalAccuracy = ACCURACY_HIGH;
        } else {
            mHorizontalAccuracy = ACCURACY_LOW;
        }
!!!69412151.java!!!	getAccuracy() : int
        if (mHorizontalAccuracy >= ACCURACY_HIGH) {
            return ACCURACY_FINE;
        } else {
            return ACCURACY_COARSE;
        }
!!!69412279.java!!!	setPowerRequirement(in level : int) : void
        if (level < NO_REQUIREMENT || level > POWER_HIGH) {
            throw new IllegalArgumentException("level=" + level);
        }
        mPowerRequirement = level;
!!!69412407.java!!!	getPowerRequirement() : int
        return mPowerRequirement;
!!!69412535.java!!!	setCostAllowed(inout costAllowed : boolean) : void
        mCostAllowed = costAllowed;
!!!69412663.java!!!	isCostAllowed() : boolean
        return mCostAllowed;
!!!69412791.java!!!	setAltitudeRequired(inout altitudeRequired : boolean) : void
        mAltitudeRequired = altitudeRequired;
!!!69412919.java!!!	isAltitudeRequired() : boolean
        return mAltitudeRequired;
!!!69413047.java!!!	setSpeedRequired(inout speedRequired : boolean) : void
        mSpeedRequired = speedRequired;
!!!69413175.java!!!	isSpeedRequired() : boolean
        return mSpeedRequired;
!!!69413303.java!!!	setBearingRequired(inout bearingRequired : boolean) : void
        mBearingRequired = bearingRequired;
!!!69413431.java!!!	isBearingRequired() : boolean
        return mBearingRequired;
!!!69413559.java!!!	describeContents() : int
        return 0;
!!!69413687.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeInt(mHorizontalAccuracy);
        parcel.writeInt(mVerticalAccuracy);
        parcel.writeInt(mSpeedAccuracy);
        parcel.writeInt(mBearingAccuracy);
        parcel.writeInt(mPowerRequirement);
        parcel.writeInt(mAltitudeRequired ? 1 : 0);
        parcel.writeInt(mBearingRequired ? 1 : 0);
        parcel.writeInt(mSpeedRequired ? 1 : 0);
        parcel.writeInt(mCostAllowed ? 1 : 0);
!!!69413815.java!!!	powerToString(in power : int) : String
        switch (power) {
            case NO_REQUIREMENT:
                return "NO_REQ";
            case POWER_LOW:
                return "LOW";
            case POWER_MEDIUM:
                return "MEDIUM";
            case POWER_HIGH:
                return "HIGH";
            default:
                return "???";
        }
!!!69413943.java!!!	accuracyToString(in accuracy : int) : String
        switch (accuracy) {
            case NO_REQUIREMENT:
                return "---";
            case ACCURACY_HIGH:
                return "HIGH";
            case ACCURACY_MEDIUM:
                return "MEDIUM";
            case ACCURACY_LOW:
                return "LOW";
            default:
                return "???";
        }
!!!69414071.java!!!	toString() : String
        StringBuilder s = new StringBuilder();
        s.append("Criteria[power=").append(powerToString(mPowerRequirement));
        s.append(" acc=").append(accuracyToString(mHorizontalAccuracy));
        s.append(']');
        return s.toString();
