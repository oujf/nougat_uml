class GnssClock
!!!69419703.java!!!	GnssClock()
        initialize();
!!!69419831.java!!!	set(inout clock : GnssClock) : void
        mFlags = clock.mFlags;
        mLeapSecond = clock.mLeapSecond;
        mTimeNanos = clock.mTimeNanos;
        mTimeUncertaintyNanos = clock.mTimeUncertaintyNanos;
        mFullBiasNanos = clock.mFullBiasNanos;
        mBiasNanos = clock.mBiasNanos;
        mBiasUncertaintyNanos = clock.mBiasUncertaintyNanos;
        mDriftNanosPerSecond = clock.mDriftNanosPerSecond;
        mDriftUncertaintyNanosPerSecond = clock.mDriftUncertaintyNanosPerSecond;
        mHardwareClockDiscontinuityCount = clock.mHardwareClockDiscontinuityCount;
!!!69419959.java!!!	reset() : void
        initialize();
!!!69420087.java!!!	hasLeapSecond() : boolean
        return isFlagSet(HAS_LEAP_SECOND);
!!!69420215.java!!!	getLeapSecond() : int
        return mLeapSecond;
!!!69420343.java!!!	setLeapSecond(in leapSecond : int) : void
        setFlag(HAS_LEAP_SECOND);
        mLeapSecond = leapSecond;
!!!69420471.java!!!	resetLeapSecond() : void
        resetFlag(HAS_LEAP_SECOND);
        mLeapSecond = Integer.MIN_VALUE;
!!!69420599.java!!!	getTimeNanos() : long
        return mTimeNanos;
!!!69420727.java!!!	setTimeNanos(in timeNanos : long) : void
        mTimeNanos = timeNanos;
!!!69420855.java!!!	hasTimeUncertaintyNanos() : boolean
        return isFlagSet(HAS_TIME_UNCERTAINTY);
!!!69420983.java!!!	getTimeUncertaintyNanos() : double
        return mTimeUncertaintyNanos;
!!!69421111.java!!!	setTimeUncertaintyNanos(in timeUncertaintyNanos : double) : void
        setFlag(HAS_TIME_UNCERTAINTY);
        mTimeUncertaintyNanos = timeUncertaintyNanos;
!!!69421239.java!!!	resetTimeUncertaintyNanos() : void
        resetFlag(HAS_TIME_UNCERTAINTY);
        mTimeUncertaintyNanos = Double.NaN;
!!!69421367.java!!!	hasFullBiasNanos() : boolean
        return isFlagSet(HAS_FULL_BIAS);
!!!69421495.java!!!	getFullBiasNanos() : long
        return mFullBiasNanos;
!!!69421623.java!!!	setFullBiasNanos(in value : long) : void
        setFlag(HAS_FULL_BIAS);
        mFullBiasNanos = value;
!!!69421751.java!!!	resetFullBiasNanos() : void
        resetFlag(HAS_FULL_BIAS);
        mFullBiasNanos = Long.MIN_VALUE;
!!!69421879.java!!!	hasBiasNanos() : boolean
        return isFlagSet(HAS_BIAS);
!!!69422007.java!!!	getBiasNanos() : double
        return mBiasNanos;
!!!69422135.java!!!	setBiasNanos(in biasNanos : double) : void
        setFlag(HAS_BIAS);
        mBiasNanos = biasNanos;
!!!69422263.java!!!	resetBiasNanos() : void
        resetFlag(HAS_BIAS);
        mBiasNanos = Double.NaN;
!!!69422391.java!!!	hasBiasUncertaintyNanos() : boolean
        return isFlagSet(HAS_BIAS_UNCERTAINTY);
!!!69422519.java!!!	getBiasUncertaintyNanos() : double
        return mBiasUncertaintyNanos;
!!!69422647.java!!!	setBiasUncertaintyNanos(in biasUncertaintyNanos : double) : void
        setFlag(HAS_BIAS_UNCERTAINTY);
        mBiasUncertaintyNanos = biasUncertaintyNanos;
!!!69422775.java!!!	resetBiasUncertaintyNanos() : void
        resetFlag(HAS_BIAS_UNCERTAINTY);
        mBiasUncertaintyNanos = Double.NaN;
!!!69422903.java!!!	hasDriftNanosPerSecond() : boolean
        return isFlagSet(HAS_DRIFT);
!!!69423031.java!!!	getDriftNanosPerSecond() : double
        return mDriftNanosPerSecond;
!!!69423159.java!!!	setDriftNanosPerSecond(in driftNanosPerSecond : double) : void
        setFlag(HAS_DRIFT);
        mDriftNanosPerSecond = driftNanosPerSecond;
!!!69423287.java!!!	resetDriftNanosPerSecond() : void
        resetFlag(HAS_DRIFT);
        mDriftNanosPerSecond = Double.NaN;
!!!69423415.java!!!	hasDriftUncertaintyNanosPerSecond() : boolean
        return isFlagSet(HAS_DRIFT_UNCERTAINTY);
!!!69423543.java!!!	getDriftUncertaintyNanosPerSecond() : double
        return mDriftUncertaintyNanosPerSecond;
!!!69423671.java!!!	setDriftUncertaintyNanosPerSecond(in driftUncertaintyNanosPerSecond : double) : void
        setFlag(HAS_DRIFT_UNCERTAINTY);
        mDriftUncertaintyNanosPerSecond = driftUncertaintyNanosPerSecond;
!!!69423799.java!!!	resetDriftUncertaintyNanosPerSecond() : void
        resetFlag(HAS_DRIFT_UNCERTAINTY);
        mDriftUncertaintyNanosPerSecond = Double.NaN;
!!!69423927.java!!!	getHardwareClockDiscontinuityCount() : int
        return mHardwareClockDiscontinuityCount;
!!!69424055.java!!!	setHardwareClockDiscontinuityCount(in value : int) : void
        mHardwareClockDiscontinuityCount = value;
!!!69424183.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeInt(mFlags);
        parcel.writeInt(mLeapSecond);
        parcel.writeLong(mTimeNanos);
        parcel.writeDouble(mTimeUncertaintyNanos);
        parcel.writeLong(mFullBiasNanos);
        parcel.writeDouble(mBiasNanos);
        parcel.writeDouble(mBiasUncertaintyNanos);
        parcel.writeDouble(mDriftNanosPerSecond);
        parcel.writeDouble(mDriftUncertaintyNanosPerSecond);
        parcel.writeInt(mHardwareClockDiscontinuityCount);
!!!69424311.java!!!	describeContents() : int
        return 0;
!!!69424439.java!!!	toString() : String
        final String format = "   %-15s = %s\n";
        final String formatWithUncertainty = "   %-15s = %-25s   %-26s = %s\n";
        StringBuilder builder = new StringBuilder("GnssClock:\n");

        builder.append(String.format(format, "LeapSecond", hasLeapSecond() ? mLeapSecond : null));

        builder.append(String.format(
                formatWithUncertainty,
                "TimeNanos",
                mTimeNanos,
                "TimeUncertaintyNanos",
                hasTimeUncertaintyNanos() ? mTimeUncertaintyNanos : null));

        builder.append(String.format(
                format,
                "FullBiasNanos",
                hasFullBiasNanos() ? mFullBiasNanos : null));

        builder.append(String.format(
                formatWithUncertainty,
                "BiasNanos",
                hasBiasNanos() ? mBiasNanos : null,
                "BiasUncertaintyNanos",
                hasBiasUncertaintyNanos() ? mBiasUncertaintyNanos : null));

        builder.append(String.format(
                formatWithUncertainty,
                "DriftNanosPerSecond",
                hasDriftNanosPerSecond() ? mDriftNanosPerSecond : null,
                "DriftUncertaintyNanosPerSecond",
                hasDriftUncertaintyNanosPerSecond() ? mDriftUncertaintyNanosPerSecond : null));

        builder.append(String.format(
                format,
                "HardwareClockDiscontinuityCount",
                mHardwareClockDiscontinuityCount));

        return builder.toString();
!!!69424567.java!!!	initialize() : void
        mFlags = HAS_NO_FLAGS;
        resetLeapSecond();
        setTimeNanos(Long.MIN_VALUE);
        resetTimeUncertaintyNanos();
        resetFullBiasNanos();
        resetBiasNanos();
        resetBiasUncertaintyNanos();
        resetDriftNanosPerSecond();
        resetDriftUncertaintyNanosPerSecond();
        setHardwareClockDiscontinuityCount(Integer.MIN_VALUE);
!!!69424695.java!!!	setFlag(in flag : int) : void
        mFlags |= flag;
!!!69424823.java!!!	resetFlag(in flag : int) : void
        mFlags &= ~flag;
!!!69424951.java!!!	isFlagSet(in flag : int) : boolean
        return (mFlags & flag) == flag;
