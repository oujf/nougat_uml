class GpsClock
!!!69442743.java!!!	GpsClock()
        initialize();
!!!69442871.java!!!	set(inout clock : GpsClock) : void
        mFlags = clock.mFlags;
        mLeapSecond = clock.mLeapSecond;
        mType = clock.mType;
        mTimeInNs = clock.mTimeInNs;
        mTimeUncertaintyInNs = clock.mTimeUncertaintyInNs;
        mFullBiasInNs = clock.mFullBiasInNs;
        mBiasInNs = clock.mBiasInNs;
        mBiasUncertaintyInNs = clock.mBiasUncertaintyInNs;
        mDriftInNsPerSec = clock.mDriftInNsPerSec;
        mDriftUncertaintyInNsPerSec = clock.mDriftUncertaintyInNsPerSec;
!!!69442999.java!!!	reset() : void
        initialize();
!!!69443127.java!!!	getType() : byte
        return mType;
!!!69443255.java!!!	setType(in value : byte) : void
        mType = value;
!!!69443383.java!!!	getTypeString() : String
        switch (mType) {
            case TYPE_UNKNOWN:
                return "Unknown";
            case TYPE_GPS_TIME:
                return "GpsTime";
            case TYPE_LOCAL_HW_TIME:
                return "LocalHwClock";
            default:
                return "<Invalid:" + mType + ">";
        }
!!!69443511.java!!!	hasLeapSecond() : boolean
        return isFlagSet(HAS_LEAP_SECOND);
!!!69443639.java!!!	getLeapSecond() : short
        return mLeapSecond;
!!!69443767.java!!!	setLeapSecond(in leapSecond : short) : void
        setFlag(HAS_LEAP_SECOND);
        mLeapSecond = leapSecond;
!!!69443895.java!!!	resetLeapSecond() : void
        resetFlag(HAS_LEAP_SECOND);
        mLeapSecond = Short.MIN_VALUE;
!!!69444023.java!!!	getTimeInNs() : long
        return mTimeInNs;
!!!69444151.java!!!	setTimeInNs(in timeInNs : long) : void
        mTimeInNs = timeInNs;
!!!69444279.java!!!	hasTimeUncertaintyInNs() : boolean
        return isFlagSet(HAS_TIME_UNCERTAINTY);
!!!69444407.java!!!	getTimeUncertaintyInNs() : double
        return mTimeUncertaintyInNs;
!!!69444535.java!!!	setTimeUncertaintyInNs(in timeUncertaintyInNs : double) : void
        setFlag(HAS_TIME_UNCERTAINTY);
        mTimeUncertaintyInNs = timeUncertaintyInNs;
!!!69444663.java!!!	resetTimeUncertaintyInNs() : void
        resetFlag(HAS_TIME_UNCERTAINTY);
        mTimeUncertaintyInNs = Double.NaN;
!!!69444791.java!!!	hasFullBiasInNs() : boolean
        return isFlagSet(HAS_FULL_BIAS);
!!!69444919.java!!!	getFullBiasInNs() : long
        return mFullBiasInNs;
!!!69445047.java!!!	setFullBiasInNs(in value : long) : void
        setFlag(HAS_FULL_BIAS);
        mFullBiasInNs = value;
!!!69445175.java!!!	resetFullBiasInNs() : void
        resetFlag(HAS_FULL_BIAS);
        mFullBiasInNs = Long.MIN_VALUE;
!!!69445303.java!!!	hasBiasInNs() : boolean
        return isFlagSet(HAS_BIAS);
!!!69445431.java!!!	getBiasInNs() : double
        return mBiasInNs;
!!!69445559.java!!!	setBiasInNs(in biasInNs : double) : void
        setFlag(HAS_BIAS);
        mBiasInNs = biasInNs;
!!!69445687.java!!!	resetBiasInNs() : void
        resetFlag(HAS_BIAS);
        mBiasInNs = Double.NaN;
!!!69445815.java!!!	hasBiasUncertaintyInNs() : boolean
        return isFlagSet(HAS_BIAS_UNCERTAINTY);
!!!69445943.java!!!	getBiasUncertaintyInNs() : double
        return mBiasUncertaintyInNs;
!!!69446071.java!!!	setBiasUncertaintyInNs(in biasUncertaintyInNs : double) : void
        setFlag(HAS_BIAS_UNCERTAINTY);
        mBiasUncertaintyInNs = biasUncertaintyInNs;
!!!69446199.java!!!	resetBiasUncertaintyInNs() : void
        resetFlag(HAS_BIAS_UNCERTAINTY);
        mBiasUncertaintyInNs = Double.NaN;
!!!69446327.java!!!	hasDriftInNsPerSec() : boolean
        return isFlagSet(HAS_DRIFT);
!!!69446455.java!!!	getDriftInNsPerSec() : double
        return mDriftInNsPerSec;
!!!69446583.java!!!	setDriftInNsPerSec(in driftInNsPerSec : double) : void
        setFlag(HAS_DRIFT);
        mDriftInNsPerSec = driftInNsPerSec;
!!!69446711.java!!!	resetDriftInNsPerSec() : void
        resetFlag(HAS_DRIFT);
        mDriftInNsPerSec = Double.NaN;
!!!69446839.java!!!	hasDriftUncertaintyInNsPerSec() : boolean
        return isFlagSet(HAS_DRIFT_UNCERTAINTY);
!!!69446967.java!!!	getDriftUncertaintyInNsPerSec() : double
        return mDriftUncertaintyInNsPerSec;
!!!69447095.java!!!	setDriftUncertaintyInNsPerSec(in driftUncertaintyInNsPerSec : double) : void
        setFlag(HAS_DRIFT_UNCERTAINTY);
        mDriftUncertaintyInNsPerSec = driftUncertaintyInNsPerSec;
!!!69447223.java!!!	resetDriftUncertaintyInNsPerSec() : void
        resetFlag(HAS_DRIFT_UNCERTAINTY);
        mDriftUncertaintyInNsPerSec = Double.NaN;
!!!69447351.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeInt(mFlags);
        parcel.writeInt(mLeapSecond);
        parcel.writeByte(mType);
        parcel.writeLong(mTimeInNs);
        parcel.writeDouble(mTimeUncertaintyInNs);
        parcel.writeLong(mFullBiasInNs);
        parcel.writeDouble(mBiasInNs);
        parcel.writeDouble(mBiasUncertaintyInNs);
        parcel.writeDouble(mDriftInNsPerSec);
        parcel.writeDouble(mDriftUncertaintyInNsPerSec);
!!!69447479.java!!!	describeContents() : int
        return 0;
!!!69447607.java!!!	toString() : String
        final String format = "   %-15s = %s\n";
        final String formatWithUncertainty = "   %-15s = %-25s   %-26s = %s\n";
        StringBuilder builder = new StringBuilder("GpsClock:\n");

        builder.append(String.format(format, "Type", getTypeString()));

        builder.append(String.format(format, "LeapSecond", hasLeapSecond() ? mLeapSecond : null));

        builder.append(String.format(
                formatWithUncertainty,
                "TimeInNs",
                mTimeInNs,
                "TimeUncertaintyInNs",
                hasTimeUncertaintyInNs() ? mTimeUncertaintyInNs : null));

        builder.append(String.format(
                format,
                "FullBiasInNs",
                hasFullBiasInNs() ? mFullBiasInNs : null));

        builder.append(String.format(
                formatWithUncertainty,
                "BiasInNs",
                hasBiasInNs() ? mBiasInNs : null,
                "BiasUncertaintyInNs",
                hasBiasUncertaintyInNs() ? mBiasUncertaintyInNs : null));

        builder.append(String.format(
                formatWithUncertainty,
                "DriftInNsPerSec",
                hasDriftInNsPerSec() ? mDriftInNsPerSec : null,
                "DriftUncertaintyInNsPerSec",
                hasDriftUncertaintyInNsPerSec() ? mDriftUncertaintyInNsPerSec : null));

        return builder.toString();
!!!69447735.java!!!	initialize() : void
        mFlags = HAS_NO_FLAGS;
        resetLeapSecond();
        setType(TYPE_UNKNOWN);
        setTimeInNs(Long.MIN_VALUE);
        resetTimeUncertaintyInNs();
        resetFullBiasInNs();
        resetBiasInNs();
        resetBiasUncertaintyInNs();
        resetDriftInNsPerSec();
        resetDriftUncertaintyInNsPerSec();
!!!69447863.java!!!	setFlag(in flag : short) : void
        mFlags |= flag;
!!!69447991.java!!!	resetFlag(in flag : short) : void
        mFlags &= ~flag;
!!!69448119.java!!!	isFlagSet(in flag : short) : boolean
        return (mFlags & flag) == flag;
