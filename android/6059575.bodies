class GpsStatus
!!!69469111.java!!!	setStatus(in svCount : int, inout svidWithFlags : int [[]], inout cn0s : float [[]], inout elevations : float [[]], inout azimuths : float [[]]) : void
        clearSatellites();
        for (int i = 0; i < svCount; i++) {
            final int constellationType =
                    (svidWithFlags[i] >> GnssStatus.CONSTELLATION_TYPE_SHIFT_WIDTH)
                    & GnssStatus.CONSTELLATION_TYPE_MASK;
            int prn = svidWithFlags[i] >> GnssStatus.SVID_SHIFT_WIDTH;
            // Other satellites passed through these APIs before GnssSvStatus was availble.
            // GPS, SBAS & QZSS can pass through at their nominally
            // assigned prn number (as long as it fits in the valid 0-255 range below.)
            // Glonass, and Beidou are passed through with the defacto standard offsets
            // Other future constellation reporting (e.g. Galileo) needs to use
            // GnssSvStatus on (N level) HAL & Java layers.
            if (constellationType == GnssStatus.CONSTELLATION_GLONASS) {
                prn += GLONASS_SVID_OFFSET;
            } else if (constellationType == GnssStatus.CONSTELLATION_BEIDOU) {
                prn += BEIDOU_SVID_OFFSET;
            } else if (constellationType == GnssStatus.CONSTELLATION_SBAS) {
                prn += SBAS_SVID_OFFSET;
            } else if ((constellationType != GnssStatus.CONSTELLATION_GPS) &&
                    (constellationType != GnssStatus.CONSTELLATION_QZSS)) {
                continue;
            }
            if (prn > 0 && prn <= NUM_SATELLITES) {
                GpsSatellite satellite = mSatellites.get(prn);
                if (satellite == null) {
                    satellite = new GpsSatellite(prn);
                    mSatellites.put(prn, satellite);
                }

                satellite.mValid = true;
                satellite.mSnr = cn0s[i];
                satellite.mElevation = elevations[i];
                satellite.mAzimuth = azimuths[i];
                satellite.mHasEphemeris =
                        (svidWithFlags[i] & GnssStatus.GNSS_SV_FLAGS_HAS_EPHEMERIS_DATA) != 0;
                satellite.mHasAlmanac =
                        (svidWithFlags[i] & GnssStatus.GNSS_SV_FLAGS_HAS_ALMANAC_DATA) != 0;
                satellite.mUsedInFix =
                        (svidWithFlags[i] & GnssStatus.GNSS_SV_FLAGS_USED_IN_FIX) != 0;
            }
        }
!!!69469239.java!!!	setStatus(inout status : GnssStatus, in timeToFirstFix : int) : void
        mTimeToFirstFix = timeToFirstFix;
        setStatus(status.mSvCount, status.mSvidWithFlags, status.mCn0DbHz, status.mElevations,
                status.mAzimuths);
!!!69469367.java!!!	setTimeToFirstFix(in ttff : int) : void
        mTimeToFirstFix = ttff;
!!!69469495.java!!!	getTimeToFirstFix() : int
        return mTimeToFirstFix;
!!!69469623.java!!!	getSatellites() : GpsSatellite
        return mSatelliteList;
!!!69469751.java!!!	getMaxSatellites() : int
        return NUM_SATELLITES;
!!!69469879.java!!!	clearSatellites() : void
        int satellitesCount = mSatellites.size();
        for (int i = 0; i < satellitesCount; i++) {
            GpsSatellite satellite = mSatellites.valueAt(i);
            satellite.mValid = false;
        }
