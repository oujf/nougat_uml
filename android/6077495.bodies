class PAC
!!!69598263.java!!!	fromBytes(in data1 : byte, in data2 : byte) : Cea608CCParser::PAC
            int[] rowTable = {11, 1, 3, 12, 14, 5, 7, 9};
            int row = rowTable[data1 & 0x07] + ((data2 & 0x20) >> 5);
            int style = 0;
            if ((data2 & 1) != 0) {
                style |= STYLE_UNDERLINE;
            }
            if ((data2 & 0x10) != 0) {
                // indent code
                int indent = (data2 >> 1) & 0x7;
                return new PAC(row, indent * 4, style, COLOR_WHITE);
            } else {
                // style code
                int color = (data2 >> 1) & 0x7;

                if (color == COLOR_INVALID) {
                    // WHITE ITALICS
                    color = COLOR_WHITE;
                    style |= STYLE_ITALICS;
                }
                return new PAC(row, -1, style, color);
            }
!!!69598391.java!!!	PAC(in row : int, in col : int, in style : int, in color : int)
            super(style, color);
            mRow = row;
            mCol = col;
!!!69598519.java!!!	isIndentPAC() : boolean
            return (mCol >= 0);
!!!69598647.java!!!	getRow() : int
            return mRow;
!!!69598775.java!!!	getCol() : int
            return mCol;
!!!69598903.java!!!	toString() : String
            return String.format("{%d, %d}, %s",
                    mRow, mCol, super.toString());
