class CCLineBuilder
!!!69599543.java!!!	CCLineBuilder(inout str : String)
            mDisplayChars = new StringBuilder(str);
            mMidRowStyles = new StyleCode[mDisplayChars.length()];
            mPACStyles = new StyleCode[mDisplayChars.length()];
!!!69599671.java!!!	setCharAt(in index : int, in ch : char) : void
            mDisplayChars.setCharAt(index, ch);
            mMidRowStyles[index] = null;
!!!69599799.java!!!	setMidRowAt(in index : int, inout m : Cea608CCParser::StyleCode) : void
            mDisplayChars.setCharAt(index, ' ');
            mMidRowStyles[index] = m;
!!!69599927.java!!!	setPACAt(in index : int, inout pac : Cea608CCParser::PAC) : void
            mPACStyles[index] = pac;
!!!69600055.java!!!	charAt(in index : int) : char
            return mDisplayChars.charAt(index);
!!!69600183.java!!!	length() : int
            return mDisplayChars.length();
!!!69600311.java!!!	applyStyleSpan(inout styledText : SpannableStringBuilder, inout s : Cea608CCParser::StyleCode, in start : int, in end : int) : void
            if (s.isItalics()) {
                styledText.setSpan(
                        new StyleSpan(android.graphics.Typeface.ITALIC),
                        start, end, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
            }
            if (s.isUnderline()) {
                styledText.setSpan(
                        new UnderlineSpan(),
                        start, end, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
            }
!!!69600439.java!!!	getStyledText(inout captionStyle : CaptioningManager::CaptionStyle) : SpannableStringBuilder
            SpannableStringBuilder styledText = new SpannableStringBuilder(mDisplayChars);
            int start = -1, next = 0;
            int styleStart = -1;
            StyleCode curStyle = null;
            while (next < mDisplayChars.length()) {
                StyleCode newStyle = null;
                if (mMidRowStyles[next] != null) {
                    // apply mid-row style change
                    newStyle = mMidRowStyles[next];
                } else if (mPACStyles[next] != null
                    && (styleStart < 0 || start < 0)) {
                    // apply PAC style change, only if:
                    // 1. no style set, or
                    // 2. style set, but prev char is none-displayable
                    newStyle = mPACStyles[next];
                }
                if (newStyle != null) {
                    curStyle = newStyle;
                    if (styleStart >= 0 && start >= 0) {
                        applyStyleSpan(styledText, newStyle, styleStart, next);
                    }
                    styleStart = next;
                }

                if (mDisplayChars.charAt(next) != TS) {
                    if (start < 0) {
                        start = next;
                    }
                } else if (start >= 0) {
                    int expandedStart = mDisplayChars.charAt(start) == ' ' ? start : start - 1;
                    int expandedEnd = mDisplayChars.charAt(next - 1) == ' ' ? next : next + 1;
                    styledText.setSpan(
                            new MutableBackgroundColorSpan(captionStyle.backgroundColor),
                            expandedStart, expandedEnd,
                            Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
                    if (styleStart >= 0) {
                        applyStyleSpan(styledText, curStyle, styleStart, expandedEnd);
                    }
                    start = -1;
                }
                next++;
            }

            return styledText;
