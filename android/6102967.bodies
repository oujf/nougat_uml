class RemoteDisplay
!!!69785271.java!!!	RemoteDisplay(inout listener : RemoteDisplay::Listener, inout handler : Handler, inout opPackageName : String)
        mListener = listener;
        mHandler = handler;
        mOpPackageName = opPackageName;
!!!69785399.java!!!	finalize() : void
        try {
            dispose(true);
        } finally {
            super.finalize();
        }
!!!69785527.java!!!	listen(inout iface : String, inout listener : RemoteDisplay::Listener, inout handler : Handler, inout opPackageName : String) : RemoteDisplay
        if (iface == null) {
            throw new IllegalArgumentException("iface must not be null");
        }
        if (listener == null) {
            throw new IllegalArgumentException("listener must not be null");
        }
        if (handler == null) {
            throw new IllegalArgumentException("handler must not be null");
        }

        RemoteDisplay display = new RemoteDisplay(listener, handler, opPackageName);
        display.startListening(iface);
        return display;
!!!69785655.java!!!	dispose() : void
        dispose(false);
!!!69785783.java!!!	pause() : void
        nativePause(mPtr);
!!!69785911.java!!!	resume() : void
        nativeResume(mPtr);
!!!69786039.java!!!	dispose(inout finalized : boolean) : void
        if (mPtr != 0) {
            if (mGuard != null) {
                if (finalized) {
                    mGuard.warnIfOpen();
                } else {
                    mGuard.close();
                }
            }

            nativeDispose(mPtr);
            mPtr = 0;
        }
!!!69786167.java!!!	startListening(inout iface : String) : void
        mPtr = nativeListen(iface, mOpPackageName);
        if (mPtr == 0) {
            throw new IllegalStateException("Could not start listening for "
                    + "remote display connection on \"" + iface + "\"");
        }
        mGuard.open("dispose");
!!!69786295.java!!!	notifyDisplayConnected(in surface : Surface, in width : int, in height : int, in flags : int, in session : int) : void
        mHandler.post(new Runnable() {
            @Override
            public void run() {
                mListener.onDisplayConnected(surface, width, height, flags, session);
            }
        });
!!!69786423.java!!!	notifyDisplayDisconnected() : void
        mHandler.post(new Runnable() {
            @Override
            public void run() {
                mListener.onDisplayDisconnected();
            }
        });
!!!69786551.java!!!	notifyDisplayError(in error : int) : void
        mHandler.post(new Runnable() {
            @Override
            public void run() {
                mListener.onDisplayError(error);
            }
        });
