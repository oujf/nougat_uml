class GLEnvironment
!!!70074167.java!!!	GLEnvironment()
        nativeAllocate();
!!!70074423.java!!!	tearDown() : void
        if (glEnvId != -1) {
            nativeDeallocate();
            glEnvId = -1;
        }
!!!70074551.java!!!	finalize() : void
        tearDown();
!!!70074679.java!!!	initWithNewContext() : void
        mManageContext = true;
        if (!nativeInitWithNewContext()) {
            throw new RuntimeException("Could not initialize GLEnvironment with new context!");
        }
!!!70074807.java!!!	initWithCurrentContext() : void
        mManageContext = false;
        if (!nativeInitWithCurrentContext()) {
            throw new RuntimeException("Could not initialize GLEnvironment with current context!");
        }
!!!70074935.java!!!	isActive() : boolean
        return nativeIsActive();
!!!70075063.java!!!	isContextActive() : boolean
        return nativeIsContextActive();
!!!70075191.java!!!	isAnyContextActive() : boolean
        return nativeIsAnyContextActive();
!!!70075319.java!!!	activate() : void
        if (Looper.myLooper() != null && Looper.myLooper().equals(Looper.getMainLooper())) {
            Log.e("FilterFramework", "Activating GL context in UI thread!");
        }
        if (mManageContext && !nativeActivate()) {
            throw new RuntimeException("Could not activate GLEnvironment!");
        }
!!!70075447.java!!!	deactivate() : void
        if (mManageContext && !nativeDeactivate()) {
            throw new RuntimeException("Could not deactivate GLEnvironment!");
        }
!!!70075575.java!!!	swapBuffers() : void
        if (!nativeSwapBuffers()) {
            throw new RuntimeException("Error swapping EGL buffers!");
        }
!!!70075703.java!!!	registerSurface(inout surface : Surface) : int
        int result = nativeAddSurface(surface);
        if (result < 0) {
            throw new RuntimeException("Error registering surface " + surface + "!");
        }
        return result;
!!!70075831.java!!!	registerSurfaceTexture(inout surfaceTexture : SurfaceTexture, in width : int, in height : int) : int
        Surface surface = new Surface(surfaceTexture);
        int result = nativeAddSurfaceWidthHeight(surface, width, height);
        surface.release();
        if (result < 0) {
            throw new RuntimeException("Error registering surfaceTexture " + surfaceTexture + "!");
        }
        return result;
!!!70075959.java!!!	registerSurfaceFromMediaRecorder(inout mediaRecorder : MediaRecorder) : int
        int result = nativeAddSurfaceFromMediaRecorder(mediaRecorder);
        if (result < 0) {
            throw new RuntimeException("Error registering surface from "
                                    + "MediaRecorder" + mediaRecorder + "!");
        }
        return result;
!!!70076087.java!!!	activateSurfaceWithId(in surfaceId : int) : void
        if (!nativeActivateSurfaceId(surfaceId)) {
            throw new RuntimeException("Could not activate surface " + surfaceId + "!");
        }
!!!70076215.java!!!	unregisterSurfaceId(in surfaceId : int) : void
        if (!nativeRemoveSurfaceId(surfaceId)) {
            throw new RuntimeException("Could not unregister surface " + surfaceId + "!");
        }
!!!70076343.java!!!	setSurfaceTimestamp(in timestamp : long) : void
        if (!nativeSetSurfaceTimestamp(timestamp)) {
            throw new RuntimeException("Could not set timestamp for current surface!");
        }
