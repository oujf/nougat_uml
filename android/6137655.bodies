class SimpleFrameManager
!!!70035511.java!!!	newFrame(inout format : FrameFormat) : Frame
        return createNewFrame(format);
!!!70035639.java!!!	newBoundFrame(inout format : FrameFormat, in bindingType : int, in bindingId : long) : Frame
        Frame result = null;
        switch(format.getTarget()) {
            case FrameFormat.TARGET_GPU: {
                GLFrame glFrame = new GLFrame(format, this, bindingType, bindingId);
                glFrame.init(getGLEnvironment());
                result = glFrame;
                break;
            }

            default:
                throw new RuntimeException("Attached frames are not supported for target type: "
                    + FrameFormat.targetToString(format.getTarget()) + "!");
        }
        return result;
!!!70035767.java!!!	createNewFrame(inout format : FrameFormat) : Frame
        Frame result = null;
        switch(format.getTarget()) {
            case FrameFormat.TARGET_SIMPLE:
                result = new SimpleFrame(format, this);
                break;

            case FrameFormat.TARGET_NATIVE:
                result = new NativeFrame(format, this);
                break;

            case FrameFormat.TARGET_GPU: {
                GLFrame glFrame = new GLFrame(format, this);
                glFrame.init(getGLEnvironment());
                result = glFrame;
                break;
            }

            case FrameFormat.TARGET_VERTEXBUFFER: {
                result = new VertexFrame(format, this);
                break;
            }

            default:
                throw new RuntimeException("Unsupported frame target type: " +
                                           FrameFormat.targetToString(format.getTarget()) + "!");
        }
        return result;
!!!70035895.java!!!	retainFrame(inout frame : Frame) : Frame
        frame.incRefCount();
        return frame;
!!!70036023.java!!!	releaseFrame(inout frame : Frame) : Frame
        int refCount = frame.decRefCount();
        if (refCount == 0 && frame.hasNativeAllocation()) {
            frame.releaseNativeAllocation();
            return null;
        } else if (refCount < 0) {
            throw new RuntimeException("Frame reference count dropped below 0!");
        }
        return frame;
