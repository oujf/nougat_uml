class FilterPort
!!!70037431.java!!!	FilterPort(inout filter : Filter, inout name : String)
        mName = name;
        mFilter = filter;
        mLogVerbose = Log.isLoggable(TAG, Log.VERBOSE);
!!!70037559.java!!!	isAttached() : boolean
        return mFilter != null;
!!!70037687.java!!!	getPortFormat() : FrameFormat
        return mPortFormat;
!!!70037815.java!!!	setPortFormat(inout format : FrameFormat) : void
        mPortFormat = format;
!!!70037943.java!!!	getFilter() : Filter
        return mFilter;
!!!70038071.java!!!	getName() : String
        return mName;
!!!70038199.java!!!	setBlocking(inout blocking : boolean) : void
        mIsBlocking = blocking;
!!!70038327.java!!!	setChecksType(inout checksType : boolean) : void
        mChecksType = checksType;
!!!70038455.java!!!	open() : void
        if (!mIsOpen) {
            if (mLogVerbose) Log.v(TAG, "Opening " + this);
        }
        mIsOpen = true;
!!!70038583.java!!!	close() : void
        if (mIsOpen) {
            if (mLogVerbose) Log.v(TAG, "Closing " + this);
        }
        mIsOpen = false;
!!!70038711.java!!!	isOpen() : boolean
        return mIsOpen;
!!!70038839.java!!!	isBlocking() : boolean
        return mIsBlocking;
!!!70039863.java!!!	toString() : String
        return "port '" + mName + "' of " + mFilter;
!!!70039991.java!!!	assertPortIsOpen() : void
        if (!isOpen()) {
            throw new RuntimeException("Illegal operation on closed " + this + "!");
        }
!!!70040119.java!!!	checkFrameType(inout frame : Frame, inout forceCheck : boolean) : void
        if ((mChecksType || forceCheck)
            && mPortFormat != null
            && !frame.getFormat().isCompatibleWith(mPortFormat)) {
            throw new RuntimeException("Frame passed to " + this + " is of incorrect type! "
                + "Expected " + mPortFormat + " but got " + frame.getFormat());
        }
!!!70040247.java!!!	checkFrameManager(inout frame : Frame, inout context : FilterContext) : void
        if (frame.getFrameManager() != null
            && frame.getFrameManager() != context.getFrameManager()) {
            throw new RuntimeException("Frame " + frame + " is managed by foreign FrameManager! ");
        }
