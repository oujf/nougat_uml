class SimpleFrame
!!!70112823.java!!!	SimpleFrame(inout format : FrameFormat, inout frameManager : FrameManager)
        super(format, frameManager);
        initWithFormat(format);
        setReusable(false);
!!!70112951.java!!!	wrapObject(inout object : Object, inout frameManager : FrameManager) : SimpleFrame
        FrameFormat format = ObjectFormat.fromObject(object, FrameFormat.TARGET_SIMPLE);
        SimpleFrame result = new SimpleFrame(format, frameManager);
        result.setObjectValue(object);
        return result;
!!!70113079.java!!!	initWithFormat(inout format : FrameFormat) : void
        final int count = format.getLength();
        final int baseType = format.getBaseType();
        switch (baseType) {
            case FrameFormat.TYPE_BYTE:
                mObject = new byte[count];
                break;
            case FrameFormat.TYPE_INT16:
                mObject = new short[count];
                break;
            case FrameFormat.TYPE_INT32:
                mObject = new int[count];
                break;
            case FrameFormat.TYPE_FLOAT:
                mObject = new float[count];
                break;
            case FrameFormat.TYPE_DOUBLE:
                mObject = new double[count];
                break;
            default:
                mObject = null;
                break;
        }
!!!70113207.java!!!	hasNativeAllocation() : boolean
        return false;
!!!70113463.java!!!	getObjectValue() : Object
        return mObject;
!!!70113591.java!!!	setInts(inout ints : int [[]]) : void
        assertFrameMutable();
        setGenericObjectValue(ints);
!!!70113719.java!!!	getInts() : int
        return (mObject instanceof int[]) ? (int[])mObject : null;
!!!70113847.java!!!	setFloats(inout floats : float [[]]) : void
        assertFrameMutable();
        setGenericObjectValue(floats);
!!!70113975.java!!!	getFloats() : float
        return (mObject instanceof float[]) ? (float[])mObject : null;
!!!70114103.java!!!	setData(inout buffer : ByteBuffer, in offset : int, in length : int) : void
        assertFrameMutable();
        setGenericObjectValue(ByteBuffer.wrap(buffer.array(), offset, length));
!!!70114231.java!!!	getData() : ByteBuffer
        return (mObject instanceof ByteBuffer) ? (ByteBuffer)mObject : null;
!!!70114359.java!!!	setBitmap(inout bitmap : Bitmap) : void
        assertFrameMutable();
        setGenericObjectValue(bitmap);
!!!70114487.java!!!	getBitmap() : Bitmap
        return (mObject instanceof Bitmap) ? (Bitmap)mObject : null;
!!!70114615.java!!!	setFormatObjectClass(inout objectClass : Class) : void
        MutableFrameFormat format = getFormat().mutableCopy();
        format.setObjectClass(objectClass);
        setFormat(format);
!!!70114743.java!!!	setGenericObjectValue(inout object : Object) : void
        // Update the FrameFormat class
        // TODO: Take this out! FrameFormats should not be modified and convenience formats used
        // instead!
        FrameFormat format = getFormat();
        if (format.getObjectClass() == null) {
            setFormatObjectClass(object.getClass());
        } else if (!format.getObjectClass().isAssignableFrom(object.getClass())) {
            throw new RuntimeException(
                "Attempting to set object value of type '" + object.getClass() + "' on " +
                "SimpleFrame of type '" + format.getObjectClass() + "'!");
        }

        // Set the object value
        mObject = object;
!!!70114871.java!!!	toString() : String
        return "SimpleFrame (" + getFormat() + ")";
