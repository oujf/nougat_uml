class PatternScanner
!!!70129975.java!!!	PatternScanner(inout input : String)
        mInput = input;
!!!70130103.java!!!	PatternScanner(inout input : String, inout ignorePattern : Pattern)
        mInput = input;
        mIgnorePattern = ignorePattern;
        skip(mIgnorePattern);
!!!70130231.java!!!	tryEat(inout pattern : Pattern) : String
        // Skip ignore pattern
        if (mIgnorePattern != null) {
            skip(mIgnorePattern);
        }

        // Create the matcher
        Matcher matcher = pattern.matcher(mInput);
        matcher.region(mOffset, mInput.length());

        // Attempt to match
        String result = null;
        if (matcher.lookingAt()) {
            updateLineCount(mOffset, matcher.end());
            mOffset = matcher.end();
            result = mInput.substring(matcher.start(), matcher.end());
        }

        // Skip ignore pattern
        if (result != null && mIgnorePattern != null) {
            skip(mIgnorePattern);
        }

        return result;
!!!70130359.java!!!	eat(inout pattern : Pattern, inout tokenName : String) : String
        String result = tryEat(pattern);
        if (result == null) {
            throw new RuntimeException(unexpectedTokenMessage(tokenName));
        }
        return result;
!!!70130487.java!!!	peek(inout pattern : Pattern) : boolean
        // Skip ignore pattern
        if (mIgnorePattern != null) {
            skip(mIgnorePattern);
        }

        // Create the matcher
        Matcher matcher = pattern.matcher(mInput);
        matcher.region(mOffset, mInput.length());

        // Attempt to match
        return matcher.lookingAt();
!!!70130615.java!!!	skip(inout pattern : Pattern) : void
        Matcher matcher = pattern.matcher(mInput);
        matcher.region(mOffset, mInput.length());
        if (matcher.lookingAt()) {
            updateLineCount(mOffset, matcher.end());
            mOffset = matcher.end();
        }
!!!70130743.java!!!	atEnd() : boolean
        return mOffset >= mInput.length();
!!!70130871.java!!!	lineNo() : int
        return mLineNo;
!!!70130999.java!!!	unexpectedTokenMessage(inout tokenName : String) : String
        String line = mInput.substring(mStartOfLine, mOffset);
        return "Unexpected token on line " + (mLineNo + 1) + " after '" + line + "' <- Expected " +
                tokenName + "!";
!!!70131127.java!!!	updateLineCount(in start : int, in end : int) : void
        for (int i = start; i < end; ++i) {
            if (mInput.charAt(i) == '\n') {
                ++mLineNo;
                mStartOfLine = i + 1;
            }
        }
