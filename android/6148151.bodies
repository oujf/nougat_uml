class CropRectFilter
!!!70148535.java!!!	CropRectFilter(inout name : String)
        super(name);
!!!70148663.java!!!	setupPorts() : void
        addMaskedInputPort("image", ImageFormat.create(ImageFormat.COLORSPACE_RGBA));
        addOutputBasedOnInput("image", "image");
!!!70148791.java!!!	initProgram(inout context : FilterContext, in target : int) : void
        switch (target) {
            case FrameFormat.TARGET_GPU:
                ShaderProgram shaderProgram = ShaderProgram.createIdentity(context);
                shaderProgram.setMaximumTileSize(mTileSize);
                mProgram = shaderProgram;
                break;

            default:
                throw new RuntimeException("Filter Sharpen does not support frames of " +
                    "target " + target + "!");
        }
        mTarget = target;
!!!70148919.java!!!	fieldPortValueUpdated(inout name : String, inout context : FilterContext) : void
        if (mProgram != null) {
            updateSourceRect(mWidth, mHeight);
        }
!!!70149047.java!!!	process(inout context : FilterContext) : void
        // Get input frame
        Frame input = pullInput("image");
        FrameFormat inputFormat = input.getFormat();

        // Create output frame
        FrameFormat outputFormat = ImageFormat.create(mOutputWidth, mOutputHeight,
                                                      ImageFormat.COLORSPACE_RGBA,
                                                      FrameFormat.TARGET_GPU);
        Frame output = context.getFrameManager().newFrame(outputFormat);

        // Create program if not created already
        if (mProgram == null || inputFormat.getTarget() != mTarget) {
            initProgram(context, inputFormat.getTarget());
        }

        // Check if the frame size has changed
        if (inputFormat.getWidth() != mWidth || inputFormat.getHeight() != mHeight) {
            updateSourceRect(inputFormat.getWidth(), inputFormat.getHeight());
        }

        // Process
        mProgram.process(input, output);

        // Push output
        pushOutput("image", output);

        // Release pushed frame
        output.release();
!!!70149175.java!!!	updateSourceRect(in width : int, in height : int) : void
        mWidth = width;
        mHeight = height;

        /*
        Log.e("CropFilter", mWidth + ", " + mHeight + ", " +
                            (float) mXorigin / mWidth + ", " +
                            (float) mYorigin / mHeight + ", " +
                            (float) mOutputWidth / mWidth + ", " +
                            (float) mOutputHeight / mHeight);
        */

        ((ShaderProgram) mProgram).setSourceRect((float) mXorigin / mWidth,
                                                 (float) mYorigin / mHeight,
                                                 (float) mOutputWidth / mWidth,
                                                 (float) mOutputHeight / mHeight);
