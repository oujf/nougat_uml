class CameraEffectsRecordingSample
!!!70188471.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        mRunButton = (Button) findViewById(R.id.runbutton);
        mCameraView = (SurfaceView) findViewById(R.id.cameraview);
        mRunButton.setOnClickListener(mRunButtonClick);

        Intent intent = getIntent();
        if (intent.hasExtra("OUTPUT_FILENAME")) {
            mOutFileName = intent.getStringExtra("OUTPUT_FILENAME");
        }
        // Set up the references and load the filter graph
        createGraph();
!!!70188599.java!!!	onKeyDown(in keyCode : int, inout event : KeyEvent) : boolean
        switch (keyCode) {
            case KeyEvent.KEYCODE_CAMERA:
                mRunButton.performClick();
                return true;
        }
        return super.onKeyDown(keyCode, event);
!!!70188727.java!!!	createGraph() : void
        Bitmap sourceBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.android);
        GraphEnvironment graphEnvironment = new GraphEnvironment();
        graphEnvironment.createGLEnvironment();
        graphEnvironment.addReferences("cameraView", mCameraView);
        graphEnvironment.addReferences("cameraId", mCameraId);
        graphEnvironment.addReferences("outputFileName", mOutFileName);
        int graphId = graphEnvironment.loadGraph(this, R.raw.cameraeffectsrecordingsample);
        mRunner = graphEnvironment.getRunner(graphId, GraphEnvironment.MODE_ASYNCHRONOUS);
!!!70188855.java!!!	onPause() : void
        super.onPause();
        if (mRunner.isRunning()) {
            mRunner.stop();
            mRunButton.setText("Record");
        }
