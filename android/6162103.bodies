class GLSurfaceView
!!!70224823.java!!!	GLSurfaceView(inout context : Context)
        super(context);
        init();
!!!70224951.java!!!	GLSurfaceView(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        init();
!!!70225079.java!!!	finalize() : void
        try {
            if (mGLThread != null) {
                // GLThread may still be running if this view was never
                // attached to a window.
                mGLThread.requestExitAndWait();
            }
        } finally {
            super.finalize();
        }
!!!70225207.java!!!	init() : void
        // Install a SurfaceHolder.Callback so we get notified when the
        // underlying surface is created and destroyed
        SurfaceHolder holder = getHolder();
        holder.addCallback(this);
        // setFormat is done by SurfaceView in SDK 2.3 and newer. Uncomment
        // this statement if back-porting to 2.2 or older:
        // holder.setFormat(PixelFormat.RGB_565);
        //
        // setType is not needed for SDK 2.0 or newer. Uncomment this
        // statement if back-porting this code to older SDKs.
        // holder.setType(SurfaceHolder.SURFACE_TYPE_GPU);
!!!70225335.java!!!	setGLWrapper(inout glWrapper : GLSurfaceView::GLWrapper) : void
        mGLWrapper = glWrapper;
!!!70225463.java!!!	setDebugFlags(in debugFlags : int) : void
        mDebugFlags = debugFlags;
!!!70225591.java!!!	getDebugFlags() : int
        return mDebugFlags;
!!!70225719.java!!!	setPreserveEGLContextOnPause(inout preserveOnPause : boolean) : void
        mPreserveEGLContextOnPause = preserveOnPause;
!!!70225847.java!!!	getPreserveEGLContextOnPause() : boolean
        return mPreserveEGLContextOnPause;
!!!70225975.java!!!	setRenderer(inout renderer : GLSurfaceView::Renderer) : void
        checkRenderThreadState();
        if (mEGLConfigChooser == null) {
            mEGLConfigChooser = new SimpleEGLConfigChooser(true);
        }
        if (mEGLContextFactory == null) {
            mEGLContextFactory = new DefaultContextFactory();
        }
        if (mEGLWindowSurfaceFactory == null) {
            mEGLWindowSurfaceFactory = new DefaultWindowSurfaceFactory();
        }
        mRenderer = renderer;
        mGLThread = new GLThread(mThisWeakRef);
        mGLThread.start();
!!!70226103.java!!!	setEGLContextFactory(inout factory : GLSurfaceView::EGLContextFactory) : void
        checkRenderThreadState();
        mEGLContextFactory = factory;
!!!70226231.java!!!	setEGLWindowSurfaceFactory(inout factory : GLSurfaceView::EGLWindowSurfaceFactory) : void
        checkRenderThreadState();
        mEGLWindowSurfaceFactory = factory;
!!!70226359.java!!!	setEGLConfigChooser(inout configChooser : GLSurfaceView::EGLConfigChooser) : void
        checkRenderThreadState();
        mEGLConfigChooser = configChooser;
!!!70226487.java!!!	setEGLConfigChooser(inout needDepth : boolean) : void
        setEGLConfigChooser(new SimpleEGLConfigChooser(needDepth));
!!!70226615.java!!!	setEGLConfigChooser(in redSize : int, in greenSize : int, in blueSize : int, in alphaSize : int, in depthSize : int, in stencilSize : int) : void
        setEGLConfigChooser(new ComponentSizeChooser(redSize, greenSize,
                blueSize, alphaSize, depthSize, stencilSize));
!!!70226743.java!!!	setEGLContextClientVersion(in version : int) : void
        checkRenderThreadState();
        mEGLContextClientVersion = version;
!!!70226871.java!!!	setRenderMode(in renderMode : int) : void
        mGLThread.setRenderMode(renderMode);
!!!70226999.java!!!	getRenderMode() : int
        return mGLThread.getRenderMode();
!!!70227127.java!!!	requestRender() : void
        mGLThread.requestRender();
!!!70227255.java!!!	surfaceCreated(inout holder : SurfaceHolder) : void
        mGLThread.surfaceCreated();
!!!70227383.java!!!	surfaceDestroyed(inout holder : SurfaceHolder) : void
        // Surface will be destroyed when we return
        mGLThread.surfaceDestroyed();
!!!70227511.java!!!	surfaceChanged(inout holder : SurfaceHolder, in format : int, in w : int, in h : int) : void
        mGLThread.onWindowResize(w, h);
!!!70227639.java!!!	surfaceRedrawNeeded(inout holder : SurfaceHolder) : void
        if (mGLThread != null) {
            mGLThread.requestRenderAndWait();
        }
!!!70227767.java!!!	onPause() : void
        mGLThread.onPause();
!!!70227895.java!!!	onResume() : void
        mGLThread.onResume();
!!!70228023.java!!!	queueEvent(inout r : Runnable) : void
        mGLThread.queueEvent(r);
!!!70228151.java!!!	onAttachedToWindow() : void
        super.onAttachedToWindow();
        if (LOG_ATTACH_DETACH) {
            Log.d(TAG, "onAttachedToWindow reattach =" + mDetached);
        }
        if (mDetached && (mRenderer != null)) {
            int renderMode = RENDERMODE_CONTINUOUSLY;
            if (mGLThread != null) {
                renderMode = mGLThread.getRenderMode();
            }
            mGLThread = new GLThread(mThisWeakRef);
            if (renderMode != RENDERMODE_CONTINUOUSLY) {
                mGLThread.setRenderMode(renderMode);
            }
            mGLThread.start();
        }
        mDetached = false;
!!!70228279.java!!!	onDetachedFromWindow() : void
        if (LOG_ATTACH_DETACH) {
            Log.d(TAG, "onDetachedFromWindow");
        }
        if (mGLThread != null) {
            mGLThread.requestExitAndWait();
        }
        mDetached = true;
        super.onDetachedFromWindow();
!!!70235575.java!!!	checkRenderThreadState() : void
        if (mGLThread != null) {
            throw new IllegalStateException(
                    "setRenderer has already been called for this instance.");
        }
