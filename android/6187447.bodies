class ScoBroadcastReceiver
!!!70417847.java!!!	onReceive(inout context : Context, inout intent : Intent) : void
            String action = intent.getAction();

            if (action.equals(BluetoothHeadset.ACTION_AUDIO_STATE_CHANGED)) {
                int state = intent.getIntExtra(BluetoothProfile.EXTRA_STATE, -1);
                mVdStateTxt.setText(Integer.toString(state));
                Log.e(TAG, "BluetoothHeadset.ACTION_AUDIO_STATE_CHANGED: "+state);
            } else if (action.equals(AudioManager.ACTION_SCO_AUDIO_STATE_CHANGED)) {
                mChangedState = intent.getIntExtra(AudioManager.EXTRA_SCO_AUDIO_STATE, -1);
                Log.e(TAG, "ACTION_SCO_AUDIO_STATE_CHANGED: "+mChangedState);
                mScoStateTxt.setText("changed: "+Integer.toString(mChangedState)+ 
                        " updated: "+Integer.toString(mUpdatedState)+
                        " prev updated: "+Integer.toString(mUpdatedPrevState));
            } else if (action.equals(AudioManager.ACTION_SCO_AUDIO_STATE_UPDATED)) {
                mUpdatedState = intent.getIntExtra(AudioManager.EXTRA_SCO_AUDIO_STATE, -1);
                mUpdatedPrevState = intent.getIntExtra(AudioManager.EXTRA_SCO_AUDIO_PREVIOUS_STATE, -1);
                Log.e(TAG, "ACTION_SCO_AUDIO_STATE_UPDATED, state: "+mUpdatedState+" prev state: "+mUpdatedPrevState);
                mScoStateTxt.setText("changed: "+Integer.toString(mChangedState)+ 
                        " updated: "+Integer.toString(mUpdatedState)+
                        " prev updated: "+Integer.toString(mUpdatedPrevState));
                if (mForceScoOn && mUpdatedState == AudioManager.SCO_AUDIO_STATE_DISCONNECTED) {
                    mForceScoOn = false;
                    mScoButton.setChecked(mForceScoOn);
                    mAudioManager.stopBluetoothSco();
                }
            }
