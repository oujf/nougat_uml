class DurableUtils
!!!70845367.java!!!	writeToArray(inout d : D) : byte
        final ByteArrayOutputStream out = new ByteArrayOutputStream();
        d.write(new DataOutputStream(out));
        return out.toByteArray();
!!!70845495.java!!!	readFromArray(inout data : byte [[]], inout d : D) : D
        if (data == null) throw new IOException("Missing data");
        final ByteArrayInputStream in = new ByteArrayInputStream(data);
        d.reset();
        try {
            d.read(new DataInputStream(in));
        } catch (IOException e) {
            d.reset();
            throw e;
        }
        return d;
!!!70845623.java!!!	writeToArrayOrNull(inout d : D) : byte
        try {
            return writeToArray(d);
        } catch (IOException e) {
            Log.w(TAG, "Failed to write", e);
            return null;
        }
!!!70845751.java!!!	readFromArrayOrNull(inout data : byte [[]], inout d : D) : D
        try {
            return readFromArray(data, d);
        } catch (IOException e) {
            Log.w(TAG, "Failed to read", e);
            return null;
        }
!!!70845879.java!!!	writeToParcel(inout parcel : Parcel, inout d : D) : void
        try {
            parcel.writeByteArray(writeToArray(d));
        } catch (IOException e) {
            throw new BadParcelableException(e);
        }
!!!70846007.java!!!	readFromParcel(inout parcel : Parcel, inout d : D) : D
        try {
            return readFromArray(parcel.createByteArray(), d);
        } catch (IOException e) {
            throw new BadParcelableException(e);
        }
!!!70846135.java!!!	writeNullableString(inout out : DataOutputStream, inout value : String) : void
        if (value != null) {
            out.write(1);
            out.writeUTF(value);
        } else {
            out.write(0);
        }
!!!70846263.java!!!	readNullableString(inout in : DataInputStream) : String
        if (in.read() != 0) {
            return in.readUTF();
        } else {
            return null;
        }
