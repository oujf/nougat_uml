class FileOperations
!!!70858423.java!!!	createJobId() : String
        return idBuilder.getNext();
!!!70858551.java!!!	start(inout activity : Activity, inout srcDocs : List<DocumentInfo>, inout stack : DocumentStack, in operationType : int) : String

        if (DEBUG) Log.d(TAG, "Handling generic 'start' call.");

        switch (operationType) {
            case OPERATION_COPY:
                return FileOperations.copy(activity, srcDocs, stack);
            case OPERATION_MOVE:
                throw new IllegalArgumentException("Moving requires providing the source parent.");
            case OPERATION_DELETE:
                throw new UnsupportedOperationException("Delete isn't currently supported.");
            default:
                throw new UnsupportedOperationException("Unknown operation: " + operationType);
        }
!!!70858679.java!!!	start(inout activity : Activity, inout srcDocs : List<DocumentInfo>, inout srcParent : DocumentInfo, inout stack : DocumentStack, in operationType : int) : String

        if (DEBUG) Log.d(TAG, "Handling generic 'start' call.");

        switch (operationType) {
            case OPERATION_COPY:
                return FileOperations.copy(activity, srcDocs, stack);
            case OPERATION_MOVE:
                return FileOperations.move(activity, srcDocs, srcParent, stack);
            case OPERATION_DELETE:
                throw new UnsupportedOperationException("Delete isn't currently supported.");
            default:
                throw new UnsupportedOperationException("Unknown operation: " + operationType);
        }
!!!70858807.java!!!	cancel(inout activity : Activity, inout jobId : String) : void
        if (DEBUG) Log.d(TAG, "Attempting to canceling operation: " + jobId);

        Intent intent = new Intent(activity, FileOperationService.class);
        intent.putExtra(EXTRA_CANCEL, true);
        intent.putExtra(EXTRA_JOB_ID, jobId);

        activity.startService(intent);
!!!70858935.java!!!	copy(inout activity : Activity, inout srcDocs : List<DocumentInfo>, inout destination : DocumentStack) : String
        String jobId = createJobId();
        if (DEBUG) Log.d(TAG, "Initiating 'copy' operation id: " + jobId);

        Intent intent = createBaseIntent(OPERATION_COPY, activity, jobId, srcDocs, destination);

        createSharedSnackBar(activity, R.plurals.copy_begin, srcDocs.size())
                .show();

        activity.startService(intent);

        return jobId;
!!!70859063.java!!!	move(inout activity : Activity, inout srcDocs : List<DocumentInfo>, inout srcParent : DocumentInfo, inout destination : DocumentStack) : String
        String jobId = createJobId();
        if (DEBUG) Log.d(TAG, "Initiating 'move' operation id: " + jobId);

        Intent intent = createBaseIntent(OPERATION_MOVE, activity, jobId, srcDocs, srcParent,
                destination);

        createSharedSnackBar(activity, R.plurals.move_begin, srcDocs.size())
                .show();

        activity.startService(intent);

        return jobId;
!!!70859191.java!!!	delete(inout activity : Activity, inout srcDocs : List<DocumentInfo>, inout srcParent : DocumentInfo, inout location : DocumentStack) : String
        String jobId = createJobId();
        if (DEBUG) Log.d(TAG, "Initiating 'delete' operation id " + jobId + ".");

        Intent intent = createBaseIntent(OPERATION_DELETE, activity, jobId, srcDocs, srcParent,
                location);
        activity.startService(intent);

        return jobId;
!!!70859319.java!!!	createBaseIntent(in operationType : int, inout context : Context, inout jobId : String, inout srcDocs : List<DocumentInfo>, inout localeStack : DocumentStack) : Intent

        Intent intent = new Intent(context, FileOperationService.class);
        intent.putExtra(EXTRA_JOB_ID, jobId);
        intent.putParcelableArrayListExtra(EXTRA_SRC_LIST, asArrayList(srcDocs));
        intent.putExtra(EXTRA_STACK, (Parcelable) localeStack);
        intent.putExtra(EXTRA_OPERATION, operationType);

        return intent;
!!!70859447.java!!!	createBaseIntent(in operationType : int, inout context : Context, inout jobId : String, inout srcDocs : List<DocumentInfo>, inout srcParent : DocumentInfo, inout localeStack : DocumentStack) : Intent

        Intent intent = new Intent(context, FileOperationService.class);
        intent.putExtra(EXTRA_JOB_ID, jobId);
        intent.putParcelableArrayListExtra(EXTRA_SRC_LIST, asArrayList(srcDocs));
        intent.putExtra(EXTRA_SRC_PARENT, srcParent);
        intent.putExtra(EXTRA_STACK, (Parcelable) localeStack);
        intent.putExtra(EXTRA_OPERATION, operationType);

        return intent;
!!!70859575.java!!!	createSharedSnackBar(inout activity : Activity, in contentId : int, in fileCount : int) : Snackbar
        Resources res = activity.getResources();
        return Snackbars.makeSnackbar(
                activity,
                getQuantityString(activity, contentId, fileCount),
                Snackbar.LENGTH_SHORT);
