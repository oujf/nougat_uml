class MoveJob
!!!70861623.java!!!	MoveJob(inout service : Context, inout appContext : Context, inout listener : Job::Listener, inout id : String, inout destination : DocumentStack, inout srcs : List<DocumentInfo>, inout srcParent : DocumentInfo)
        super(service, appContext, listener, OPERATION_MOVE, id, destination, srcs);
        this.mSrcParent = srcParent;
!!!70861751.java!!!	createProgressBuilder() : Notification::Builder
        return super.createProgressBuilder(
                service.getString(R.string.move_notification_title),
                R.drawable.ic_menu_copy,
                service.getString(android.R.string.cancel),
                R.drawable.ic_cab_cancel);
!!!70861879.java!!!	getSetupNotification() : Notification
        return getSetupNotification(service.getString(R.string.move_preparing));
!!!70862007.java!!!	getProgressNotification() : Notification
        return getProgressNotification(R.string.copy_remaining);
!!!70862135.java!!!	getFailureNotification() : Notification
        return getFailureNotification(
                R.plurals.move_error_notification_title, R.drawable.ic_menu_copy);
!!!70862263.java!!!	processDocument(inout src : DocumentInfo, inout srcParent : DocumentInfo, inout dest : DocumentInfo) : void

        // TODO: When optimized move kicks in, we're not making any progress updates. FIX IT!

        // When moving within the same provider, try to use optimized moving.
        // If not supported, then fallback to byte-by-byte copy/move.
        if (src.authority.equals(dest.authority)) {
            if ((src.flags & Document.FLAG_SUPPORTS_MOVE) != 0) {
                try {
                    if (DocumentsContract.moveDocument(getClient(src), src.derivedUri,
                            srcParent != null ? srcParent.derivedUri : mSrcParent.derivedUri,
                            dest.derivedUri) != null) {
                        return;
                    }
                } catch (RemoteException | RuntimeException e) {
                    Log.e(TAG, "Provider side move failed for: " + src.derivedUri
                            + " due to an exception: ", e);
                }
                // If optimized move fails, then fallback to byte-by-byte copy.
                if (DEBUG) Log.d(TAG, "Fallback to byte-by-byte move for: " + src.derivedUri);
            }
        }

        // Moving virtual files by bytes is not supported. This is because, it would involve
        // conversion, and the source file should not be deleted in such case (as it's a different
        // file).
        if (src.isVirtualDocument()) {
            throw new ResourceException("Cannot move virtual file %s byte by byte.",
                    src.derivedUri);
        }

        // If we couldn't do an optimized copy...we fall back to vanilla byte copy.
        byteCopyDocument(src, dest);

        // Remove the source document.
        deleteDocument(src, srcParent);
!!!70862391.java!!!	toString() : String
        return new StringBuilder()
                .append("MoveJob")
                .append("{")
                .append("id=" + id)
                .append(", srcs=" + mSrcs)
                .append(", srcParent=" + mSrcParent)
                .append(", destination=" + stack)
                .append("}")
                .toString();
