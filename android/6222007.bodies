class FilesActivityUiTest
!!!70867255.java!!!	FilesActivityUiTest()
        super(FilesActivity.class);
!!!70867383.java!!!	getInitialRoot() : RootInfo
        return null;
!!!70867511.java!!!	initTestFiles() : void
        mDocsHelper.createDocument(rootDir0, "text/plain", "file0.log");
        mDocsHelper.createDocument(rootDir0, "image/png", "file1.png");
        mDocsHelper.createDocument(rootDir0, "text/csv", "file2.csv");

        mDocsHelper.createDocument(rootDir1, "text/plain", "anotherFile0.log");
        mDocsHelper.createDocument(rootDir1, "text/plain", "poodles.text");
!!!70867639.java!!!	testRootsListed() : void
        initTestFiles();

        // Should also have Drive, but that requires pre-configuration of devices
        // We omit for now.
        bots.roots.assertRootsPresent(
                "Images",
                "Videos",
                "Audio",
                "Downloads",
                ROOT_0_ID,
                ROOT_1_ID);

        // Separate logic for "Documents" root, which presence depends on the config setting
        if (Shared.shouldShowDocumentsRoot(context, new Intent(DocumentsContract.ACTION_BROWSE))) {
            bots.roots.assertRootsPresent("Documents");
        } else {
            bots.roots.assertRootsAbsent("Documents");
        }
!!!70867767.java!!!	testFilesListed() : void
        initTestFiles();

        bots.roots.openRoot(ROOT_0_ID);
        bots.directory.assertDocumentsPresent("file0.log", "file1.png", "file2.csv");
!!!70867895.java!!!	testLoadsDownloadsDirectoryByDefault() : void
        initTestFiles();

        device.waitForIdle();
        bots.main.assertWindowTitle("Downloads");
!!!70868023.java!!!	testRootClickSetsWindowTitle() : void
        initTestFiles();

        bots.roots.openRoot("Downloads");
        bots.main.assertWindowTitle("Downloads");
!!!70868151.java!!!	testFilesList_LiveUpdate() : void
        initTestFiles();

        bots.roots.openRoot(ROOT_0_ID);
        mDocsHelper.createDocument(rootDir0, "yummers/sandwich", "Ham & Cheese.sandwich");

        bots.directory.waitForDocument("Ham & Cheese.sandwich");
        bots.directory.assertDocumentsPresent(
                "file0.log", "file1.png", "file2.csv", "Ham & Cheese.sandwich");
!!!70868279.java!!!	testCreateDirectory() : void
        initTestFiles();

        bots.roots.openRoot(ROOT_0_ID);

        bots.main.openOverflowMenu();
        bots.main.menuNewFolder().click();
        bots.main.setDialogText("Kung Fu Panda");

        bots.keyboard.pressEnter();

        bots.directory.assertDocumentsPresent("Kung Fu Panda");
!!!70868407.java!!!	testDeleteDocument() : void
        initTestFiles();

        bots.roots.openRoot(ROOT_0_ID);

        bots.directory.clickDocument("file1.png");
        device.waitForIdle();
        bots.main.menuDelete().click();

        bots.main.findDialogOkButton().click();

        bots.directory.assertDocumentsAbsent("file1.png");
!!!70868535.java!!!	testDeleteDocument_Cancel() : void
        initTestFiles();

        bots.roots.openRoot(ROOT_0_ID);

        bots.directory.clickDocument("file1.png");
        device.waitForIdle();
        bots.main.menuDelete().click();

        bots.main.findDialogCancelButton().click();

        bots.directory.assertDocumentsPresent("file1.png");
!!!70868663.java!!!	testKeyboard_tab() : void
        bots.main.pressKey(KeyEvent.KEYCODE_TAB);
        bots.roots.assertHasFocus();
        bots.main.pressKey(KeyEvent.KEYCODE_TAB);
        bots.directory.assertHasFocus();
!!!70868791.java!!!	testKeyboard_arrowsDirList() : void
        for (int i = 0; i < 10; i++) {
            bots.main.pressKey(KeyEvent.KEYCODE_DPAD_LEFT);
            bots.directory.assertHasFocus();
        }
        for (int i = 0; i < 10; i++) {
            bots.main.pressKey(KeyEvent.KEYCODE_DPAD_RIGHT);
            bots.directory.assertHasFocus();
        }
!!!70868919.java!!!	testKeyboard_arrowsRootsList() : void
        bots.main.pressKey(KeyEvent.KEYCODE_TAB);
        for (int i = 0; i < 10; i++) {
            bots.main.pressKey(KeyEvent.KEYCODE_DPAD_RIGHT);
            bots.roots.assertHasFocus();
        }
        for (int i = 0; i < 10; i++) {
            bots.main.pressKey(KeyEvent.KEYCODE_DPAD_LEFT);
            bots.roots.assertHasFocus();
        }
!!!70869047.java!!!	testDownload_Queued() : void
        DownloadManager dm = (DownloadManager) context.getSystemService(
                Context.DOWNLOAD_SERVICE);
        // This downloads ends up being queued (because DNS can't be resolved).
        // We'll still see an entry in the downloads UI with a "Queued" label.
        dm.enqueue(new Request(Uri.parse("http://hammychamp.toodles")));

        bots.roots.openRoot("Downloads");
        bots.directory.assertDocumentsPresent("Queued");
!!!70869175.java!!!	testDownload_RetryUnsuccessful() : void
        DownloadManager dm = (DownloadManager) context.getSystemService(
                Context.DOWNLOAD_SERVICE);
        // This downloads fails! But it'll still show up.
        dm.enqueue(new Request(Uri.parse("http://www.google.com/hamfancy")));

        bots.roots.openRoot("Downloads");
        UiObject doc = bots.directory.findDocument("Unsuccessful");
        doc.waitForExists(TIMEOUT);

        int toolType = Configurator.getInstance().getToolType();
        Configurator.getInstance().setToolType(MotionEvent.TOOL_TYPE_FINGER);
        doc.click();
        Configurator.getInstance().setToolType(toolType);

        assertTrue(bots.main.findDownloadRetryDialog().exists());

        device.pressBack(); // to clear the dialog.
