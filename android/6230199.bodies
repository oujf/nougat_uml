class NekoTile
!!!70946359.java!!!	onCreate() : void
        super.onCreate();
        mPrefs = new PrefState(this);
!!!70946487.java!!!	onStartListening() : void
        super.onStartListening();
        mPrefs.setListener(this);
        updateState();
!!!70946615.java!!!	onStopListening() : void
        super.onStopListening();
        mPrefs.setListener(null);
!!!70946743.java!!!	onPrefsChanged() : void
        updateState();
!!!70946871.java!!!	updateState() : void
        Tile tile = getQsTile();
        int foodState = mPrefs.getFoodState();
        Food food = new Food(foodState);
        tile.setIcon(food.getIcon(this));
        tile.setLabel(food.getName(this));
        tile.setState(foodState != 0 ? Tile.STATE_ACTIVE : Tile.STATE_INACTIVE);
        tile.updateTile();
!!!70946999.java!!!	onClick() : void
        if (mPrefs.getFoodState() != 0) {
            // there's already food loaded, let's empty it
            mPrefs.setFoodState(0);
            NekoService.cancelJob(this);
        } else {
            // time to feed the cats
            if (isLocked()) {
                if (isSecure()) {
                    Log.d(TAG, "startActivityAndCollapse");
                    Intent intent = new Intent(this, NekoLockedActivity.class);
                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                    startActivityAndCollapse(intent);
                } else {
                    unlockAndRun(new Runnable() {
                        @Override
                        public void run() {
                            showNekoDialog();
                        }
                    });
                }
            } else {
                showNekoDialog();
            }
        }
!!!70947127.java!!!	showNekoDialog() : void
        Log.d(TAG, "showNekoDialog");
        showDialog(new NekoDialog(this));
