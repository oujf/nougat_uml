class MtpDocumentsService
!!!71051831.java!!!	onBind(inout intent : Intent) : IBinder
        // The service is used via intents.
        return null;
!!!71051959.java!!!	onCreate() : void
        super.onCreate();
        mNotificationManager = getSystemService(NotificationManager.class);
!!!71052087.java!!!	onStartCommand(inout intent : Intent, in flags : int, in startId : int) : int
        // If intent is null, the service was restarted.
        if (intent == null || ACTION_UPDATE_NOTIFICATION.equals(intent.getAction())) {
            return updateForegroundState() ? START_STICKY : START_NOT_STICKY;
        }
        return START_NOT_STICKY;
!!!71052215.java!!!	updateForegroundState() : boolean
        final MtpDocumentsProvider provider = MtpDocumentsProvider.getInstance();
        int notificationId = 0;
        Notification notification = null;
        // TODO: Hide notification if the device has already been removed.
        for (final MtpDeviceRecord record : provider.getOpenedDeviceRecordsCache()) {
            final String title = getResources().getString(
                    R.string.accessing_notification_title,
                    record.name);
            notificationId = record.deviceId;
            notification = new Notification.Builder(this)
                    .setLocalOnly(true)
                    .setContentTitle(title)
                    .setSmallIcon(com.android.internal.R.drawable.stat_sys_data_usb)
                    .setCategory(Notification.CATEGORY_SYSTEM)
                    .setPriority(Notification.PRIORITY_LOW)
                    .build();
            mNotificationManager.notify(record.deviceId, notification);
        }

        if (notification != null) {
            startForeground(notificationId, notification);
            return true;
        } else {
            stopForeground(true /* removeNotification */);
            stopSelf();
            return false;
        }
!!!71052343.java!!!	logErrorMessage(inout exp : Exception) : void
        if (exp.getMessage() != null) {
            Log.e(MtpDocumentsProvider.TAG, exp.getMessage());
        } else {
            Log.e(MtpDocumentsProvider.TAG, exp.toString());
        }
