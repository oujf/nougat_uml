class TestMtpManager
!!!71062071.java!!!	pack(inout  : int...args) : String
        return Arrays.toString(args);
!!!71062199.java!!!	TestMtpManager(inout context : Context)
        super(context);
!!!71062327.java!!!	addValidDevice(inout device : MtpDeviceRecord) : void
        mDevices.put(device.deviceId, device);
!!!71062455.java!!!	setObjectHandles(in deviceId : int, in storageId : int, in parentHandle : int, inout objectHandles : int [[]]) : void
        mObjectHandles.put(pack(deviceId, storageId, parentHandle), objectHandles);
!!!71062583.java!!!	setObjectInfo(in deviceId : int, inout objectInfo : MtpObjectInfo) : void
        mObjectInfos.put(pack(deviceId, objectInfo.getObjectHandle()), objectInfo);
!!!71062711.java!!!	setImportFileBytes(in deviceId : int, in objectHandle : int, inout bytes : byte [[]]) : void
        mImportFileBytes.put(pack(deviceId, objectHandle), bytes);
!!!71062839.java!!!	getImportFileBytes(in deviceId : int, in objectHandle : int) : byte
        return mImportFileBytes.get(pack(deviceId, objectHandle));
!!!71062967.java!!!	setThumbnail(in deviceId : int, in objectHandle : int, inout bytes : byte [[]]) : void
        mThumbnailBytes.put(pack(deviceId, objectHandle), bytes);
!!!71063095.java!!!	setObjectSizeLong(in deviceId : int, in objectHandle : int, in format : int, in value : long) : void
        mObjectSizeLongs.put(pack(deviceId, objectHandle, format), value);
!!!71063223.java!!!	getDevices() : MtpDeviceRecord
        final MtpDeviceRecord[] result = new MtpDeviceRecord[mDevices.size()];
        for (int i = 0; i < mDevices.size(); i++) {
            final MtpDeviceRecord device = mDevices.valueAt(i);
            if (device.opened) {
                result[i] = device;
            } else {
                result[i] = new MtpDeviceRecord(
                        device.deviceId, device.name, device.deviceKey, device.opened,
                        new MtpRoot[0], null, null);
            }
        }
        return result;
!!!71063351.java!!!	openDevice(in deviceId : int) : MtpDeviceRecord
        final MtpDeviceRecord device = mDevices.get(deviceId);
        if (device == null) {
            throw new IOException();
        }
        final MtpDeviceRecord record = new MtpDeviceRecord(
                device.deviceId, device.name, device.deviceKey, true, device.roots,
                device.operationsSupported, device.eventsSupported);
        mDevices.put(deviceId, record);
        return record;
!!!71063479.java!!!	closeDevice(in deviceId : int) : void
        final MtpDeviceRecord device = mDevices.get(deviceId);
        if (device == null) {
            throw new IOException();
        }
        mDevices.put(
                deviceId,
                new MtpDeviceRecord(device.deviceId, device.name, device.deviceKey, false,
                        device.roots, device.operationsSupported, device.eventsSupported));
!!!71063607.java!!!	getObjectInfo(in deviceId : int, in objectHandle : int) : MtpObjectInfo
        final String key = pack(deviceId, objectHandle);
        if (mObjectInfos.containsKey(key)) {
            return mObjectInfos.get(key);
        } else {
            throw new IOException("getObjectInfo error: " + key);
        }
!!!71063735.java!!!	getObjectHandles(in deviceId : int, in storageId : int, in parentObjectHandle : int) : int
        final String key = pack(deviceId, storageId, parentObjectHandle);
        if (mObjectHandles.containsKey(key)) {
            return mObjectHandles.get(key);
        } else {
            throw new IOException("getObjectHandles error: " + key);
        }
!!!71063863.java!!!	importFile(in deviceId : int, in objectHandle : int, inout target : ParcelFileDescriptor) : void
        final String key = pack(deviceId, objectHandle);
        if (mImportFileBytes.containsKey(key)) {
            try (final ParcelFileDescriptor.AutoCloseOutputStream outputStream =
                    new ParcelFileDescriptor.AutoCloseOutputStream(target)) {
                outputStream.write(mImportFileBytes.get(key));
            }
        } else {
            throw new IOException("importFile error: " + key);
        }
!!!71063991.java!!!	createDocument(in deviceId : int, inout objectInfo : MtpObjectInfo, inout source : ParcelFileDescriptor) : int
        final String key = pack(deviceId, CREATED_DOCUMENT_HANDLE);
        if (mObjectInfos.containsKey(key)) {
            throw new IOException();
        }
        final MtpObjectInfo newInfo = new MtpObjectInfo.Builder(objectInfo).
                setObjectHandle(CREATED_DOCUMENT_HANDLE).build();
        mObjectInfos.put(key, newInfo);
        if (objectInfo.getFormat() != 0x3001) {
            try (final ParcelFileDescriptor.AutoCloseInputStream inputStream =
                    new ParcelFileDescriptor.AutoCloseInputStream(source)) {
                final byte[] buffer = new byte[objectInfo.getCompressedSize()];
                if (inputStream.read(buffer, 0, objectInfo.getCompressedSize()) !=
                        objectInfo.getCompressedSize()) {
                    throw new IOException();
                }

                mImportFileBytes.put(pack(deviceId, CREATED_DOCUMENT_HANDLE), buffer);
            }
        }
        return CREATED_DOCUMENT_HANDLE;
!!!71064119.java!!!	getThumbnail(in deviceId : int, in objectHandle : int) : byte
        final String key = pack(deviceId, objectHandle);
        if (mThumbnailBytes.containsKey(key)) {
            return mThumbnailBytes.get(key);
        } else {
            throw new IOException("getThumbnail error: " + key);
        }
!!!71064247.java!!!	deleteDocument(in deviceId : int, in objectHandle : int) : void
        final String key = pack(deviceId, objectHandle);
        if (mObjectInfos.containsKey(key)) {
            mObjectInfos.remove(key);
        } else {
            throw new IOException();
        }
!!!71064375.java!!!	getParent(in deviceId : int, in objectHandle : int) : int
        final String key = pack(deviceId, objectHandle);
        if (mObjectInfos.containsKey(key)) {
            return mObjectInfos.get(key).getParent();
        } else {
            throw new IOException();
        }
!!!71064503.java!!!	getObject(in deviceId : int, in objectHandle : int, in expectedSize : int) : byte
        return mImportFileBytes.get(pack(deviceId, objectHandle));
!!!71064631.java!!!	getPartialObject(in deviceId : int, in objectHandle : int, in offset : long, in size : long, inout buffer : byte [[]]) : long
        final byte[] bytes = mImportFileBytes.get(pack(deviceId, objectHandle));
        int i = 0;
        while (i < size && i + offset < bytes.length) {
            buffer[i] = bytes[(int) (i + offset)];
            i++;
        }
        return i;
!!!71064759.java!!!	getObjectSizeLong(in deviceId : int, in objectHandle : int, in format : int) : long
        final String key = pack(deviceId, objectHandle, format);
        if (mObjectSizeLongs.containsKey(key)) {
            return mObjectSizeLongs.get(key);
        } else {
            throw new IOException();
        }
