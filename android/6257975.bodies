class OMAScalar
!!!71137975.java!!!	OMAScalar(inout parent : OMAConstructed, inout name : String, inout context : String, inout value : String, inout avps : String)
        this(parent, name, context, value, buildAttributes(avps));
!!!71138103.java!!!	OMAScalar(inout parent : OMAConstructed, inout name : String, inout context : String, inout value : String, inout avps : Map<String, String>)
        super(parent, name, context, avps);
        mValue = value;
!!!71138231.java!!!	reparent(inout parent : OMAConstructed) : OMAScalar
        return new OMAScalar(parent, getName(), getContext(), mValue, getAttributes());
!!!71138359.java!!!	getScalarValue(inout path : Iterator<String>) : String
        return mValue;
!!!71138487.java!!!	getListValue(inout path : Iterator<String>) : OMANode
        throw new OMAException("Scalar encountered in list path: " + getPathString());
!!!71138615.java!!!	isLeaf() : boolean
        return true;
!!!71138743.java!!!	getChildren() : OMANode
        throw new UnsupportedOperationException();
!!!71138871.java!!!	getValue() : String
        return mValue;
!!!71138999.java!!!	getChild(inout name : String) : OMANode
        throw new OMAException("'" + getName() + "' is a scalar node");
!!!71139127.java!!!	addChild(inout name : String, inout context : String, inout value : String, inout path : String) : OMANode
        throw new UnsupportedOperationException();
!!!71139255.java!!!	toString(inout sb : StringBuilder, in level : int) : void
        sb.append(getPathString()).append('=').append(mValue);
        if (getContext() != null) {
            sb.append(" (").append(getContext()).append(')');
        }
        sb.append('\n');
!!!71139383.java!!!	marshal(inout out : OutputStream, in level : int) : void
        OMAConstants.indent(level, out);
        OMAConstants.serializeString(getName(), out);
        out.write((byte) '=');
        OMAConstants.serializeString(getValue(), out);
        out.write((byte) '\n');
!!!71139511.java!!!	fillPayload(inout sb : StringBuilder) : void
        sb.append('<').append(MOTree.ValueTag).append('>');
        sb.append(mValue);
        sb.append("</").append(MOTree.ValueTag).append(">\n");
