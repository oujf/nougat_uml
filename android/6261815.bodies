class WFATrustManager
!!!71163703.java!!!	WFATrustManager(inout ks : KeyStore, inout homeSP : HomeSP, in flowType : int)
            mKeyStore = ks;
            mHomeSP = homeSP;
            mFlowType = flowType;
!!!71163831.java!!!	checkClientTrusted(inout chain : X509Certificate [[]], inout authType : String) : void
            // N/A
!!!71163959.java!!!	checkServerTrusted(inout chain : X509Certificate [[]], inout authType : String) : void
            Log.d("TLSOSU", "Checking " + chain.length + " certs.");

            try {
                CertPathValidator validator =
                        CertPathValidator.getInstance(CertPathValidator.getDefaultType());
                CertificateFactory certFactory = CertificateFactory.getInstance("X.509");
                CertPath path = certFactory.generateCertPath(
                        Arrays.asList(chain));
                Set<TrustAnchor> trustAnchors = new HashSet<>();
                if (mHomeSP == null) {
                    for (X509Certificate cert : getRootCerts(mKeyStore)) {
                        trustAnchors.add(new TrustAnchor(cert, null));
                    }
                } else {
                    String prefix = mFlowType == OSUManager.FLOW_REMEDIATION ?
                            OSUManager.CERT_REM_ALIAS : OSUManager.CERT_POLICY_ALIAS;

                    X509Certificate cert = getCert(mKeyStore, prefix + mHomeSP.getFQDN());
                    if (cert == null) {
                        cert = getCert(mKeyStore, OSUManager.CERT_SHARED_ALIAS + mHomeSP.getFQDN());
                    }
                    if (cert == null) {
                        for (X509Certificate root : getRootCerts(mKeyStore)) {
                            trustAnchors.add(new TrustAnchor(root, null));
                        }
                    } else {
                        trustAnchors.add(new TrustAnchor(cert, null));
                    }
                }
                PKIXParameters params = new PKIXParameters(trustAnchors);
                params.setRevocationEnabled(false);
                params.addCertPathChecker(sEKUChecker);
                validator.validate(path, params);
                mTrustChain = chain;
            } catch (GeneralSecurityException gse) {
                throw new SecurityException(gse);
            }
            mTrustChain = chain;
!!!71164087.java!!!	getAcceptedIssuers() : X509Certificate
            return null;
!!!71164215.java!!!	getTrustChain() : X509Certificate
            return mTrustChain != null ? mTrustChain : new X509Certificate[0];
