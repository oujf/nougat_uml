class SPVerifier
!!!71167031.java!!!	SPVerifier(inout osuInfo : OSUInfo)
        mOSUInfo = osuInfo;
!!!71168055.java!!!	complement(in value : int) : int
        return value >= 0 ? value : (~value) + 1;
!!!71168183.java!!!	castObject(inout object : Asn1Object, inout klass : Class) : T
        if (object.getClass() != klass) {
            throw new IOException("Object is an " + object.getClass().getSimpleName() +
                    " expected an " + klass.getSimpleName());
        }
        return klass.cast(object);
!!!71168311.java!!!	getFirstInner(inout container : Asn1Object, inout klass : Class) : T
        if (container.getClass() != Asn1Constructed.class) {
            throw new IOException("Not a container");
        }
        Iterator<Asn1Object> children = container.getChildren().iterator();
        if (!children.hasNext()) {
            throw new IOException("No content");
        }
        return castObject(children.next(), klass);
!!!71168439.java!!!	verify(inout osuCert : X509Certificate) : void
        if (osuCert == null) {
            throw new IOException("No OSU cert found");
        }

        checkName(castObject(getExtension(osuCert, OidMappings.IdCeSubjectAltName),
                Asn1Constructed.class));

        List<LogoTypeImage> logos = getImageData(getExtension(osuCert, OidMappings.IdPeLogotype));
        Log.d(OSUManager.TAG, "Logos: " + logos);
        for (LogoTypeImage logoTypeImage : logos) {
            if (logoTypeImage.verify(mOSUInfo)) {
                return;
            }
        }
        throw new IOException("Failed to match icon against any cert logo");
!!!71168567.java!!!	getImageData(inout logoExtension : Asn1Object) : SPVerifier::LogoTypeImage
        Asn1Constructed logo = castObject(logoExtension, Asn1Constructed.class);
        Asn1Constructed communityLogo = castObject(logo.getChildren().iterator().next(),
                Asn1Constructed.class);
        if (communityLogo.getTag() != 0) {
            throw new IOException("Expected tag [0] for communityLogos");
        }

        List<LogoTypeImage> images = new ArrayList<>();
        Asn1Constructed communityLogoSeq = castObject(communityLogo.getChildren().iterator().next(),
                Asn1Constructed.class);
        for (Asn1Object logoTypeData : communityLogoSeq.getChildren()) {
            if (logoTypeData.getTag() != 0) {
                throw new IOException("Expected tag [0] for LogotypeData");
            }
            for (Asn1Object logoTypeImage : castObject(logoTypeData.getChildren().iterator().next(),
                    Asn1Constructed.class).getChildren()) {
                // only read the image SEQUENCE and skip any audio [1] tags
                if (logoTypeImage.getAsn1Class() == Asn1Class.Universal) {
                    images.add(new LogoTypeImage(castObject(logoTypeImage, Asn1Constructed.class)));
                }
            }
        }
        return images;
!!!71168695.java!!!	checkName(inout altName : Asn1Constructed) : void
        Map<String, I18Name> friendlyNames = new HashMap<>();
        for (Asn1Object name : altName.getChildren()) {
            if (name.getAsn1Class() == Asn1Class.Context && name.getTag() == OtherName) {
                Asn1Constructed otherName = (Asn1Constructed) name;
                Iterator<Asn1Object> children = otherName.getChildren().iterator();
                if (children.hasNext()) {
                    Asn1Object oidObject = children.next();
                    if (OidMappings.sIdWfaHotspotFriendlyName.equals(oidObject) &&
                            children.hasNext()) {
                        Asn1Constructed value = castObject(children.next(), Asn1Constructed.class);
                        String text = castObject(value.getChildren().iterator().next(),
                                Asn1String.class).getString();
                        I18Name friendlyName = new I18Name(text);
                        friendlyNames.put(friendlyName.getLanguage(), friendlyName);
                    }
                }
            }
        }
        Log.d(OSUManager.TAG, "Friendly names: " + friendlyNames.values());
        for (I18Name osuName : mOSUInfo.getOSUProvider().getNames()) {
            I18Name friendlyName = friendlyNames.get(osuName.getLanguage());
            if (!osuName.equals(friendlyName)) {
                throw new IOException("Friendly name '" + osuName + " not in certificate");
            }
        }
!!!71168823.java!!!	getExtension(inout certificate : X509Certificate, inout extension : String) : Asn1Object
        byte[] data = certificate.getExtensionValue(extension);
        if (data == null) {
            return null;
        }
        Asn1Octets octetString = (Asn1Octets) Asn1Decoder.decode(ByteBuffer.wrap(data)).
                iterator().next();
        Asn1Constructed sequence = castObject(Asn1Decoder.decode(
                        ByteBuffer.wrap(octetString.getOctets())).iterator().next(),
                Asn1Constructed.class);
        Log.d(OSUManager.TAG, "Extension " + extension + ": " + sequence);
        return sequence;
