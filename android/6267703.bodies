class MDNSFilterPlugin
!!!71197111.java!!!	MDNSFilterPlugin(inout context : Context, inout name : String, inout packageName : CharSequence, inout mDNSNames : List<String>)
        mContext = Preconditions.checkNotNull(context, "context");
        mName = mContext.getResources().getIdentifier(Preconditions.checkStringNotEmpty(name,
                "name"), null, "com.android.printservice.recommendation");
        mPackageName = Preconditions.checkStringNotEmpty(packageName);
        mMDNSNames = new HashSet<>(Preconditions
                .checkCollectionNotEmpty(Preconditions.checkCollectionElementsNotNull(mDNSNames,
                        "mDNSNames"), "mDNSNames"));

        mResolveQueue = NsdResolveQueue.getInstance();
        mPrinters = new HashSet<>();
!!!71197239.java!!!	getPackageName() : CharSequence
        return mPackageName;
!!!71197367.java!!!	getNDSManager() : NsdManager
        return (NsdManager) mContext.getSystemService(Context.NSD_SERVICE);
!!!71197495.java!!!	start(inout callback : PrintServicePlugin::PrinterDiscoveryCallback) : void
        mCallback = callback;

        DiscoveryListenerMultiplexer.addListener(getNDSManager(), PRINTER_SERVICE_TYPE, this);
!!!71197623.java!!!	getName() : int
        return mName;
!!!71197751.java!!!	stop() : void
        mCallback.onChanged(0);
        mCallback = null;

        DiscoveryListenerMultiplexer.removeListener(getNDSManager(), this);
!!!71197879.java!!!	onStartDiscoveryFailed(inout serviceType : String, in errorCode : int) : void
        Log.w(LOG_TAG, "Failed to start network discovery for type " + serviceType + ": "
                + errorCode);
!!!71198007.java!!!	onStopDiscoveryFailed(inout serviceType : String, in errorCode : int) : void
        Log.w(LOG_TAG, "Failed to stop network discovery for type " + serviceType + ": "
                + errorCode);
!!!71198135.java!!!	onDiscoveryStarted(inout serviceType : String) : void
        // empty
!!!71198263.java!!!	onDiscoveryStopped(inout serviceType : String) : void
        mPrinters.clear();
!!!71198391.java!!!	onServiceFound(inout serviceInfo : NsdServiceInfo) : void
        mResolveQueue.resolve(getNDSManager(), serviceInfo,
                new NsdManager.ResolveListener() {
            @Override
            public void onResolveFailed(NsdServiceInfo serviceInfo, int errorCode) {
                Log.w(LOG_TAG, "Service found: could not resolve " + serviceInfo + ": " +
                        errorCode);
            }

            @Override
            public void onServiceResolved(NsdServiceInfo serviceInfo) {
                if (MDNSUtils.isVendorPrinter(serviceInfo, mMDNSNames)) {
                    if (mCallback != null) {
                        boolean added = mPrinters.add(serviceInfo.getHost().getHostAddress());

                        if (added) {
                            mCallback.onChanged(mPrinters.size());
                        }
                    }
                }
            }
        });
!!!71198519.java!!!	onServiceLost(inout serviceInfo : NsdServiceInfo) : void
        mResolveQueue.resolve(getNDSManager(), serviceInfo,
                new NsdManager.ResolveListener() {
            @Override
            public void onResolveFailed(NsdServiceInfo serviceInfo, int errorCode) {
                Log.w(LOG_TAG, "Service lost: Could not resolve " + serviceInfo + ": "
                        + errorCode);
            }

            @Override
            public void onServiceResolved(NsdServiceInfo serviceInfo) {
                if (MDNSUtils.isVendorPrinter(serviceInfo, mMDNSNames)) {
                    if (mCallback != null) {
                        boolean removed = mPrinters
                                .remove(serviceInfo.getHost().getHostAddress());

                        if (removed) {
                            mCallback.onChanged(mPrinters.size());
                        }
                    }
                }
            }
        });
