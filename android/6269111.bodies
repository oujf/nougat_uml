class ServiceResolveQueue
!!!71201719.java!!!	createInstance(inout nsdManager : NsdManager) : void
        if (sInstance == null) sInstance = new ServiceResolveQueue(nsdManager);
!!!71201847.java!!!	getInstance(inout nsdManager : NsdManager) : ServiceResolveQueue
        synchronized (sLock) {
            createInstance(nsdManager);
            return sInstance;
        }
!!!71201975.java!!!	destroyInstance() : void
        sInstance = null;
!!!71202231.java!!!	ServiceResolveQueue(inout nsdManager : NsdManager)
        mNsdManager = nsdManager;
        mNsdResolveQueue = NsdResolveQueue.getInstance();
!!!71202359.java!!!	queueRequest(inout serviceInfo : NsdServiceInfo, inout callback : ServiceResolveQueue::ResolveCallback) : void
        synchronized (mLock) {
            Pair<NsdServiceInfo, ResolveCallback> newRequest = Pair.create(serviceInfo, callback);
            if (mQueue.contains(newRequest)) return;
            mQueue.add(newRequest);
            makeNextRequest();
        }
!!!71202487.java!!!	removeRequest(inout serviceInfo : NsdServiceInfo, inout callback : ServiceResolveQueue::ResolveCallback) : void
        synchronized (mLock) {
            Pair<NsdServiceInfo, ResolveCallback> newRequest = Pair.create(serviceInfo, callback);
            mQueue.remove(newRequest);
            if ((mCurrentRequest != null) && newRequest.equals(mCurrentRequest)) mCurrentRequest = null;
        }
!!!71202615.java!!!	makeNextRequest() : void
        synchronized (mLock) {
            if (mCurrentRequest != null) return;
            if (mQueue.isEmpty()) return;
            mCurrentRequest = mQueue.removeFirst();
            mNsdResolveQueue.resolve(mNsdManager, mCurrentRequest.first,
                    new NsdManager.ResolveListener() {
                        @Override
                        public void onResolveFailed(NsdServiceInfo nsdServiceInfo, int i) {
                            synchronized (mLock) {
                                if (mCurrentRequest != null) mQueue.add(mCurrentRequest);
                                makeNextRequest();
                            }
                        }

                        @Override
                        public void onServiceResolved(NsdServiceInfo nsdServiceInfo) {
                            synchronized (mLock) {
                                if (mCurrentRequest != null) {
                                    mCurrentRequest.second.serviceResolved(nsdServiceInfo);
                                    mCurrentRequest = null;
                                }
                                makeNextRequest();
                            }
                        }
                    });

        }
