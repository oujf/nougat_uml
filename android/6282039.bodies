class MyHandler
!!!71285559.java!!!	MyHandler(inout looper : Looper)
            super(looper, null, false);
!!!71285687.java!!!	cancelQueuedOperations() : void
            mPendingOperations.clear();
!!!71285815.java!!!	enqueueOperation(inout message : Message) : void
            mPendingOperations.add(message);
            handleNextOperation();
!!!71285943.java!!!	handleNextOperation() : void
            while (!mPendingOperations.isEmpty() && !mAsyncOperationInProgress) {
                Message operation = mPendingOperations.remove(0);
                handleMessage(operation);
            }
!!!71286071.java!!!	handleMessage(inout message : Message) : void
            switch (message.what) {
                case MSG_OPEN: {
                    try {
                        File file = mFileProvider.acquireFile(PrintPreviewController.this);
                        ParcelFileDescriptor pfd = ParcelFileDescriptor.open(file,
                                ParcelFileDescriptor.MODE_READ_ONLY);

                        mAsyncOperationInProgress = true;
                        mPageAdapter.open(pfd, new Runnable() {
                            @Override
                            public void run() {
                                if (mDocumentPageCount == PrintDocumentInfo.PAGE_COUNT_UNKNOWN) {
                                    mDocumentPageCount = mPageAdapter.getFilePageCount();
                                    mActivity.updateOptionsUi();
                                }
                                mOnAsyncOperationDoneCallback.run();
                            }
                        });
                    } catch (FileNotFoundException fnfe) {
                        /* ignore - file guaranteed to be there */
                    }
                } break;

                case MSG_CLOSE: {
                    mAsyncOperationInProgress = true;
                    mPageAdapter.close(new Runnable() {
                        @Override
                        public void run() {
                            mFileProvider.releaseFile();
                            mOnAsyncOperationDoneCallback.run();
                        }
                    });
                } break;

                case MSG_UPDATE: {
                    SomeArgs args = (SomeArgs) message.obj;
                    PageRange[] writtenPages = (PageRange[]) args.arg1;
                    PageRange[] selectedPages = (PageRange[]) args.arg2;
                    MediaSize mediaSize = (MediaSize) args.arg3;
                    Margins margins = (Margins) args.arg4;
                    final int pageCount = args.argi1;
                    args.recycle();

                    mPageAdapter.update(writtenPages, selectedPages, pageCount,
                            mediaSize, margins);

                } break;

                case MSG_START_PRELOAD: {
                    mPreloadController.startPreloadContent();
                } break;
            }
