class BluetoothEventManager
!!!71346615.java!!!	addHandler(inout action : String, inout handler : BluetoothEventManager::Handler) : void
        mHandlerMap.put(action, handler);
        mAdapterIntentFilter.addAction(action);
!!!71346743.java!!!	addProfileHandler(inout action : String, inout handler : BluetoothEventManager::Handler) : void
        mHandlerMap.put(action, handler);
        mProfileIntentFilter.addAction(action);
!!!71346871.java!!!	setProfileManager(inout manager : LocalBluetoothProfileManager) : void
        mProfileManager = manager;
!!!71346999.java!!!	BluetoothEventManager(inout adapter : LocalBluetoothAdapter, inout deviceManager : CachedBluetoothDeviceManager, inout context : Context)
        mLocalAdapter = adapter;
        mDeviceManager = deviceManager;
        mAdapterIntentFilter = new IntentFilter();
        mProfileIntentFilter = new IntentFilter();
        mHandlerMap = new HashMap<String, Handler>();
        mContext = context;

        // Bluetooth on/off broadcasts
        addHandler(BluetoothAdapter.ACTION_STATE_CHANGED, new AdapterStateChangedHandler());
        // Generic connected/not broadcast
        addHandler(BluetoothAdapter.ACTION_CONNECTION_STATE_CHANGED,
                new ConnectionStateChangedHandler());

        // Discovery broadcasts
        addHandler(BluetoothAdapter.ACTION_DISCOVERY_STARTED, new ScanningStateChangedHandler(true));
        addHandler(BluetoothAdapter.ACTION_DISCOVERY_FINISHED, new ScanningStateChangedHandler(false));
        addHandler(BluetoothDevice.ACTION_FOUND, new DeviceFoundHandler());
        addHandler(BluetoothDevice.ACTION_DISAPPEARED, new DeviceDisappearedHandler());
        addHandler(BluetoothDevice.ACTION_NAME_CHANGED, new NameChangedHandler());
        addHandler(BluetoothDevice.ACTION_ALIAS_CHANGED, new NameChangedHandler());

        // Pairing broadcasts
        addHandler(BluetoothDevice.ACTION_BOND_STATE_CHANGED, new BondStateChangedHandler());
        addHandler(BluetoothDevice.ACTION_PAIRING_CANCEL, new PairingCancelHandler());

        // Fine-grained state broadcasts
        addHandler(BluetoothDevice.ACTION_CLASS_CHANGED, new ClassChangedHandler());
        addHandler(BluetoothDevice.ACTION_UUID, new UuidChangedHandler());

        // Dock event broadcasts
        addHandler(Intent.ACTION_DOCK_EVENT, new DockEventHandler());

        mContext.registerReceiver(mBroadcastReceiver, mAdapterIntentFilter, null, mReceiverHandler);
!!!71347127.java!!!	registerProfileIntentReceiver() : void
        mContext.registerReceiver(mBroadcastReceiver, mProfileIntentFilter, null, mReceiverHandler);
!!!71347255.java!!!	setReceiverHandler(inout handler : Handler) : void
        mContext.unregisterReceiver(mBroadcastReceiver);
        mReceiverHandler = handler;
        mContext.registerReceiver(mBroadcastReceiver, mAdapterIntentFilter, null, mReceiverHandler);
        registerProfileIntentReceiver();
!!!71347383.java!!!	registerCallback(inout callback : BluetoothCallback) : void
        synchronized (mCallbacks) {
            mCallbacks.add(callback);
        }
!!!71347511.java!!!	unregisterCallback(inout callback : BluetoothCallback) : void
        synchronized (mCallbacks) {
            mCallbacks.remove(callback);
        }
!!!71348279.java!!!	dispatchConnectionStateChanged(inout cachedDevice : CachedBluetoothDevice, in state : int) : void
        synchronized (mCallbacks) {
            for (BluetoothCallback callback : mCallbacks) {
                callback.onConnectionStateChanged(cachedDevice, state);
            }
        }
!!!71348407.java!!!	dispatchDeviceAdded(inout cachedDevice : CachedBluetoothDevice) : void
        synchronized (mCallbacks) {
            for (BluetoothCallback callback : mCallbacks) {
                callback.onDeviceAdded(cachedDevice);
            }
        }
!!!71349559.java!!!	readPairedDevices() : boolean
        Set<BluetoothDevice> bondedDevices = mLocalAdapter.getBondedDevices();
        if (bondedDevices == null) {
            return false;
        }

        boolean deviceAdded = false;
        for (BluetoothDevice device : bondedDevices) {
            CachedBluetoothDevice cachedDevice = mDeviceManager.findDevice(device);
            if (cachedDevice == null) {
                cachedDevice = mDeviceManager.addDevice(mLocalAdapter, mProfileManager, device);
                dispatchDeviceAdded(cachedDevice);
                deviceAdded = true;
            }
        }

        return deviceAdded;
