class QSTileView
!!!71681463.java!!!	QSTileView(inout context : Context, inout icon : QSIconView)
        this(context, icon, false);
!!!71681591.java!!!	QSTileView(inout context : Context, inout icon : QSIconView, inout collapsedView : boolean)
        super(context, icon, collapsedView);

        mContext = context;
        final Resources res = context.getResources();
        mTileSpacingPx = res.getDimensionPixelSize(R.dimen.qs_tile_spacing);

        setClipChildren(false);

        setClickable(true);
        updateTopPadding();
        setId(View.generateViewId());
        createLabel();
        setOrientation(VERTICAL);
        setGravity(Gravity.CENTER);
!!!71681719.java!!!	getLabel() : TextView
        return mLabel;
!!!71681847.java!!!	updateTopPadding() : void
        Resources res = getResources();
        int padding = res.getDimensionPixelSize(R.dimen.qs_tile_padding_top);
        int largePadding = res.getDimensionPixelSize(R.dimen.qs_tile_padding_top_large_text);
        float largeFactor = (MathUtils.constrain(getResources().getConfiguration().fontScale,
                1.0f, FontSizeUtils.LARGE_TEXT_SCALE) - 1f) / (FontSizeUtils.LARGE_TEXT_SCALE - 1f);
        mTilePaddingTopPx = Math.round((1 - largeFactor) * padding + largeFactor * largePadding);
        setPadding(mTileSpacingPx, mTilePaddingTopPx + mTileSpacingPx, mTileSpacingPx,
                mTileSpacingPx);
        requestLayout();
!!!71681975.java!!!	onConfigurationChanged(inout newConfig : Configuration) : void
        super.onConfigurationChanged(newConfig);
        updateTopPadding();
        FontSizeUtils.updateFontSize(mLabel, R.dimen.qs_tile_text_size);
!!!71682103.java!!!	createLabel() : void
        View view = LayoutInflater.from(mContext).inflate(R.layout.qs_tile_label, null);
        mLabel = (TextView) view.findViewById(R.id.tile_label);
        mPadLock = (ImageView) view.findViewById(R.id.restricted_padlock);
        addView(view);
!!!71682231.java!!!	handleStateChanged(inout state : QSTile::State) : void
        super.handleStateChanged(state);
        if (!Objects.equal(mLabel.getText(), state.label)) {
            mLabel.setText(state.label);
        }
        mLabel.setEnabled(!state.disabledByPolicy);
        mPadLock.setVisibility(state.disabledByPolicy ? View.VISIBLE : View.GONE);
