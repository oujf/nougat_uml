class SystemBarScrimViews
!!!71854007.java!!!	SystemBarScrimViews(inout activity : RecentsActivity)
        mContext = activity;
        mNavBarScrimView = activity.findViewById(R.id.nav_bar_scrim);
        mNavBarScrimView.forceHasOverlappingRendering(false);
        mNavBarScrimEnterDuration = activity.getResources().getInteger(
                R.integer.recents_nav_bar_scrim_enter_duration);
        mHasNavBarScrim = Recents.getSystemServices().hasTransposedNavigationBar();
        mHasDockedTasks = Recents.getSystemServices().hasDockedTask();
!!!71854135.java!!!	updateNavBarScrim(inout animateNavBarScrim : boolean, inout hasStackTasks : boolean, inout animation : AnimationProps) : void
        prepareEnterRecentsAnimation(isNavBarScrimRequired(hasStackTasks), animateNavBarScrim);
        if (animateNavBarScrim && animation != null) {
            animateNavBarScrimVisibility(true, animation);
        }
!!!71854263.java!!!	prepareEnterRecentsAnimation(inout hasNavBarScrim : boolean, inout animateNavBarScrim : boolean) : void
        mHasNavBarScrim = hasNavBarScrim;
        mShouldAnimateNavBarScrim = animateNavBarScrim;

        mNavBarScrimView.setVisibility(mHasNavBarScrim && !mShouldAnimateNavBarScrim ?
                View.VISIBLE : View.INVISIBLE);
!!!71854391.java!!!	animateNavBarScrimVisibility(inout visible : boolean, inout animation : AnimationProps) : void
        int toY = 0;
        if (visible) {
            mNavBarScrimView.setVisibility(View.VISIBLE);
            mNavBarScrimView.setTranslationY(mNavBarScrimView.getMeasuredHeight());
        } else {
            toY = mNavBarScrimView.getMeasuredHeight();
        }
        if (animation != AnimationProps.IMMEDIATE) {
            mNavBarScrimView.animate()
                    .translationY(toY)
                    .setDuration(animation.getDuration(AnimationProps.BOUNDS))
                    .setInterpolator(animation.getInterpolator(AnimationProps.BOUNDS))
                    .start();
        } else {
            mNavBarScrimView.setTranslationY(toY);
        }
!!!71854519.java!!!	isNavBarScrimRequired(inout hasStackTasks : boolean) : boolean
        return hasStackTasks && !mHasTransposedNavBar && !mHasDockedTasks;
!!!71854647.java!!!	onBusEvent(inout event : EnterRecentsWindowAnimationCompletedEvent) : void
        if (mHasNavBarScrim) {
            AnimationProps animation = mShouldAnimateNavBarScrim
                    ? new AnimationProps()
                            .setDuration(AnimationProps.BOUNDS, mNavBarScrimEnterDuration)
                            .setInterpolator(AnimationProps.BOUNDS, Interpolators.DECELERATE_QUINT)
                    : AnimationProps.IMMEDIATE;
            animateNavBarScrimVisibility(true, animation);
        }
!!!71854775.java!!!	onBusEvent(inout event : DismissRecentsToHomeAnimationStarted) : void
        if (mHasNavBarScrim) {
            AnimationProps animation = createBoundsAnimation(
                    TaskStackAnimationHelper.EXIT_TO_HOME_TRANSLATION_DURATION);
            animateNavBarScrimVisibility(false, animation);
        }
!!!71854903.java!!!	onBusEvent(inout event : DismissAllTaskViewsEvent) : void
        if (mHasNavBarScrim) {
            AnimationProps animation = createBoundsAnimation(
                    TaskStackAnimationHelper.EXIT_TO_HOME_TRANSLATION_DURATION);
            animateNavBarScrimVisibility(false, animation);
        }
!!!71855031.java!!!	onBusEvent(inout event : ConfigurationChangedEvent) : void
        if (event.fromDeviceOrientationChange) {
            mHasNavBarScrim = Recents.getSystemServices().hasTransposedNavigationBar();
        }
        animateScrimToCurrentNavBarState(event.hasStackTasks);
!!!71855159.java!!!	onBusEvent(inout event : MultiWindowStateChangedEvent) : void
        mHasDockedTasks = event.inMultiWindow;
        animateScrimToCurrentNavBarState(event.stack.getStackTaskCount() > 0);
!!!71855287.java!!!	onBusEvent(in event : DragEndEvent) : void
        // Hide the nav bar scrims once we drop to a dock region
        if (event.dropTarget instanceof TaskStack.DockState) {
            animateScrimToCurrentNavBarState(false /* hasStackTasks */);
        }
!!!71855415.java!!!	onBusEvent(in event : DragEndCancelledEvent) : void
        // Restore the scrims to the normal state
        animateScrimToCurrentNavBarState(event.stack.getStackTaskCount() > 0);
!!!71855543.java!!!	animateScrimToCurrentNavBarState(inout hasStackTasks : boolean) : void
        boolean hasNavBarScrim = isNavBarScrimRequired(hasStackTasks);
        if (mHasNavBarScrim != hasNavBarScrim) {
            AnimationProps animation = hasNavBarScrim
                    ? createBoundsAnimation(DEFAULT_ANIMATION_DURATION)
                    : AnimationProps.IMMEDIATE;
            animateNavBarScrimVisibility(hasNavBarScrim, animation);
        }
        mHasNavBarScrim = hasNavBarScrim;
!!!71855671.java!!!	createBoundsAnimation(in duration : int) : AnimationProps
        return new AnimationProps()
                .setDuration(AnimationProps.BOUNDS, duration)
                .setInterpolator(AnimationProps.BOUNDS, Interpolators.FAST_OUT_SLOW_IN);
