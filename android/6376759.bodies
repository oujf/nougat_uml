class Entry
!!!71973175.java!!!	Entry(inout n : StatusBarNotification, inout ic : StatusBarIconView)
            this.key = n.getKey();
            this.notification = n;
            this.icon = ic;
!!!71973303.java!!!	setInterruption() : void
            interruption = true;
!!!71973431.java!!!	hasInterrupted() : boolean
            return interruption;
!!!71973559.java!!!	reset() : void
            // NOTE: Icon needs to be preserved for now.
            // We should fix this at some point.
            autoRedacted = false;
            legacy = false;
            lastFullScreenIntentLaunchTime = NOT_LAUNCHED_YET;
            if (row != null) {
                row.reset();
            }
!!!71973687.java!!!	getContentView() : View
            return row.getPrivateLayout().getContractedChild();
!!!71973815.java!!!	getExpandedContentView() : View
            return row.getPrivateLayout().getExpandedChild();
!!!71973943.java!!!	getHeadsUpContentView() : View
            return row.getPrivateLayout().getHeadsUpChild();
!!!71974071.java!!!	getPublicContentView() : View
            return row.getPublicLayout().getContractedChild();
!!!71974199.java!!!	cacheContentViews(inout ctx : Context, inout updatedNotification : Notification) : boolean
            boolean applyInPlace = false;
            if (updatedNotification != null) {
                final Notification.Builder updatedNotificationBuilder
                        = Notification.Builder.recoverBuilder(ctx, updatedNotification);
                final RemoteViews newContentView = updatedNotificationBuilder.createContentView();
                final RemoteViews newBigContentView =
                        updatedNotificationBuilder.createBigContentView();
                final RemoteViews newHeadsUpContentView =
                        updatedNotificationBuilder.createHeadsUpContentView();
                final RemoteViews newPublicNotification
                        = updatedNotificationBuilder.makePublicContentView();

                boolean sameCustomView = Objects.equals(
                        notification.getNotification().extras.getBoolean(
                                Notification.EXTRA_CONTAINS_CUSTOM_VIEW),
                        updatedNotification.extras.getBoolean(
                                Notification.EXTRA_CONTAINS_CUSTOM_VIEW));
                applyInPlace = compareRemoteViews(cachedContentView, newContentView)
                        && compareRemoteViews(cachedBigContentView, newBigContentView)
                        && compareRemoteViews(cachedHeadsUpContentView, newHeadsUpContentView)
                        && compareRemoteViews(cachedPublicContentView, newPublicNotification)
                        && sameCustomView;
                cachedPublicContentView = newPublicNotification;
                cachedHeadsUpContentView = newHeadsUpContentView;
                cachedBigContentView = newBigContentView;
                cachedContentView = newContentView;
            } else {
                final Notification.Builder builder
                        = Notification.Builder.recoverBuilder(ctx, notification.getNotification());

                cachedContentView = builder.createContentView();
                cachedBigContentView = builder.createBigContentView();
                cachedHeadsUpContentView = builder.createHeadsUpContentView();
                cachedPublicContentView = builder.makePublicContentView();

                applyInPlace = false;
            }
            return applyInPlace;
!!!71974327.java!!!	compareRemoteViews(in a : RemoteViews, in b : RemoteViews) : boolean
            return (a == null && b == null) ||
                    (a != null && b != null
                    && b.getPackage() != null
                    && a.getPackage() != null
                    && a.getPackage().equals(b.getPackage())
                    && a.getLayoutId() == b.getLayoutId());
!!!71974455.java!!!	notifyFullScreenIntentLaunched() : void
            lastFullScreenIntentLaunchTime = SystemClock.elapsedRealtime();
!!!71974583.java!!!	hasJustLaunchedFullScreenIntent() : boolean
            return SystemClock.elapsedRealtime() < lastFullScreenIntentLaunchTime + LAUNCH_COOLDOWN;
