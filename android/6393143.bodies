class MultiUserSwitch
!!!72127287.java!!!	MultiUserSwitch(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        mUserManager = UserManager.get(getContext());
!!!72127415.java!!!	onFinishInflate() : void
        super.onFinishInflate();
        setOnClickListener(this);
        refreshContentDescription();
!!!72127543.java!!!	setQsPanel(inout qsPanel : QSPanel) : void
        mQsPanel = qsPanel;
        setUserSwitcherController(qsPanel.getHost().getUserSwitcherController());
!!!72127671.java!!!	hasMultipleUsers() : boolean
        if (mUserListener == null) {
            return false;
        }
        return mUserListener.getCount() != 0;
!!!72127799.java!!!	setUserSwitcherController(inout userSwitcherController : UserSwitcherController) : void
        mUserSwitcherController = userSwitcherController;
        registerListener();
        refreshContentDescription();
!!!72127927.java!!!	setKeyguardUserSwitcher(inout keyguardUserSwitcher : KeyguardUserSwitcher) : void
        mKeyguardUserSwitcher = keyguardUserSwitcher;
!!!72128055.java!!!	setKeyguardMode(inout keyguardShowing : boolean) : void
        mKeyguardMode = keyguardShowing;
        registerListener();
!!!72128183.java!!!	registerListener() : void
        if (mUserManager.isUserSwitcherEnabled() && mUserListener == null) {

            final UserSwitcherController controller = mUserSwitcherController;
            if (controller != null) {
                mUserListener = new UserSwitcherController.BaseUserAdapter(controller) {
                    @Override
                    public void notifyDataSetChanged() {
                        refreshContentDescription();
                    }

                    @Override
                    public View getView(int position, View convertView, ViewGroup parent) {
                        return null;
                    }
                };
                refreshContentDescription();
            }
        }
!!!72128311.java!!!	onClick(inout v : View) : void
        if (mUserManager.isUserSwitcherEnabled()) {
            if (mKeyguardMode) {
                if (mKeyguardUserSwitcher != null) {
                    mKeyguardUserSwitcher.show(true /* animate */);
                }
            } else if (mQsPanel != null && mUserSwitcherController != null) {
                View center = getChildCount() > 0 ? getChildAt(0) : this;

                center.getLocationInWindow(mTmpInt2);
                mTmpInt2[0] += center.getWidth() / 2;
                mTmpInt2[1] += center.getHeight() / 2;

                mQsPanel.showDetailAdapter(true,
                        mUserSwitcherController.userDetailAdapter,
                        mTmpInt2);
            }
        } else {
            if (mQsPanel != null) {
                Intent intent = ContactsContract.QuickContact.composeQuickContactsIntent(
                        getContext(), v, ContactsContract.Profile.CONTENT_URI,
                        ContactsContract.QuickContact.MODE_LARGE, null);
                mQsPanel.getHost().startActivityDismissingKeyguard(intent);
            }
        }
!!!72128439.java!!!	setClickable(inout clickable : boolean) : void
        super.setClickable(clickable);
        refreshContentDescription();
!!!72128567.java!!!	refreshContentDescription() : void
        String currentUser = null;
        if (mUserManager.isUserSwitcherEnabled()
                && mUserSwitcherController != null) {
            currentUser = mUserSwitcherController.getCurrentUserName(mContext);
        }

        String text = null;

        if (!TextUtils.isEmpty(currentUser)) {
            text = mContext.getString(
                    R.string.accessibility_quick_settings_user,
                    currentUser);
        }

        if (!TextUtils.equals(getContentDescription(), text)) {
            setContentDescription(text);
        }
!!!72128695.java!!!	onInitializeAccessibilityEvent(inout event : AccessibilityEvent) : void
        super.onInitializeAccessibilityEvent(event);
        event.setClassName(Button.class.getName());
!!!72128823.java!!!	onInitializeAccessibilityNodeInfo(inout info : AccessibilityNodeInfo) : void
        super.onInitializeAccessibilityNodeInfo(info);
        info.setClassName(Button.class.getName());
!!!72128951.java!!!	hasOverlappingRendering() : boolean
        return false;
