class LightStatusBarController
!!!72124215.java!!!	LightStatusBarController(inout iconController : StatusBarIconController, inout batteryController : BatteryController)
        mIconController = iconController;
        mBatteryController = batteryController;
!!!72124343.java!!!	setFingerprintUnlockController(inout fingerprintUnlockController : FingerprintUnlockController) : void
        mFingerprintUnlockController = fingerprintUnlockController;
!!!72124471.java!!!	onSystemUiVisibilityChanged(in fullscreenStackVis : int, in dockedStackVis : int, in mask : int, inout fullscreenStackBounds : Rect, inout dockedStackBounds : Rect, inout sbModeChanged : boolean, in statusBarMode : int) : void
        int oldFullscreen = mFullscreenStackVisibility;
        int newFullscreen = (oldFullscreen & ~mask) | (fullscreenStackVis & mask);
        int diffFullscreen = newFullscreen ^ oldFullscreen;
        int oldDocked = mDockedStackVisibility;
        int newDocked = (oldDocked & ~mask) | (dockedStackVis & mask);
        int diffDocked = newDocked ^ oldDocked;
        if ((diffFullscreen & View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR) != 0
                || (diffDocked & View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR) != 0
                || sbModeChanged
                || !mLastFullscreenBounds.equals(fullscreenStackBounds)
                || !mLastDockedBounds.equals(dockedStackBounds)) {

            mFullscreenLight = isLight(newFullscreen, statusBarMode);
            mDockedLight = isLight(newDocked, statusBarMode);
            update(fullscreenStackBounds, dockedStackBounds);
        }
        mFullscreenStackVisibility = newFullscreen;
        mDockedStackVisibility = newDocked;
        mLastFullscreenBounds.set(fullscreenStackBounds);
        mLastDockedBounds.set(dockedStackBounds);
!!!72124599.java!!!	isLight(in vis : int, in statusBarMode : int) : boolean
        boolean isTransparentBar = (statusBarMode == MODE_TRANSPARENT
                || statusBarMode == MODE_LIGHTS_OUT_TRANSPARENT);
        boolean allowLight = isTransparentBar && !mBatteryController.isPowerSave();
        boolean light = (vis & View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR) != 0;
        return allowLight && light;
!!!72124727.java!!!	animateChange() : boolean
        if (mFingerprintUnlockController == null) {
            return false;
        }
        int unlockMode = mFingerprintUnlockController.getMode();
        return unlockMode != FingerprintUnlockController.MODE_WAKE_AND_UNLOCK_PULSING
                && unlockMode != FingerprintUnlockController.MODE_WAKE_AND_UNLOCK;
!!!72124855.java!!!	update(inout fullscreenStackBounds : Rect, inout dockedStackBounds : Rect) : void
        boolean hasDockedStack = !dockedStackBounds.isEmpty();

        // If both are light or fullscreen is light and there is no docked stack, all icons get
        // dark.
        if ((mFullscreenLight && mDockedLight) || (mFullscreenLight && !hasDockedStack)) {
            mIconController.setIconsDarkArea(null);
            mIconController.setIconsDark(true, animateChange());

        }

        // If no one is light or the fullscreen is not light and there is no docked stack,
        // all icons become white.
        else if ((!mFullscreenLight && !mDockedLight) || (!mFullscreenLight && !hasDockedStack)) {
            mIconController.setIconsDark(false, animateChange());

        }

        // Not the same for every stack, magic!
        else {
            Rect bounds = mFullscreenLight ? fullscreenStackBounds : dockedStackBounds;
            if (bounds.isEmpty()) {
                mIconController.setIconsDarkArea(null);
            } else {
                mIconController.setIconsDarkArea(bounds);
            }
            mIconController.setIconsDark(true, animateChange());
        }
