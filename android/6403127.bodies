class PreciseDataConnectionState
!!!75449655.java!!!	PreciseDataConnectionState(in state : int, in networkType : int, inout apnType : String, inout apn : String, inout reason : String, inout linkProperties : LinkProperties, inout failCause : String)
        mState = state;
        mNetworkType = networkType;
        mAPNType = apnType;
        mAPN = apn;
        mReason = reason;
        mLinkProperties = linkProperties;
        mFailCause = failCause;
!!!75449911.java!!!	PreciseDataConnectionState(inout in : Parcel)
        mState = in.readInt();
        mNetworkType = in.readInt();
        mAPNType = in.readString();
        mAPN = in.readString();
        mReason = in.readString();
        mLinkProperties = (LinkProperties)in.readParcelable(null);
        mFailCause = in.readString();
!!!75450039.java!!!	getDataConnectionState() : int
        return mState;
!!!75450167.java!!!	getDataConnectionNetworkType() : int
        return mNetworkType;
!!!75450295.java!!!	getDataConnectionAPNType() : String
        return mAPNType;
!!!75450423.java!!!	getDataConnectionAPN() : String
        return mAPN;
!!!75450551.java!!!	getDataConnectionChangeReason() : String
        return mReason;
!!!75450679.java!!!	getDataConnectionLinkProperties() : LinkProperties
        return mLinkProperties;
!!!75450807.java!!!	getDataConnectionFailCause() : String
        return mFailCause;
!!!75450935.java!!!	describeContents() : int
        return 0;
!!!75451063.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        out.writeInt(mState);
        out.writeInt(mNetworkType);
        out.writeString(mAPNType);
        out.writeString(mAPN);
        out.writeString(mReason);
        out.writeParcelable(mLinkProperties, flags);
        out.writeString(mFailCause);
!!!75451191.java!!!	hashCode() : int
        final int prime = 31;
        int result = 1;
        result = prime * result + mState;
        result = prime * result + mNetworkType;
        result = prime * result + ((mAPNType == null) ? 0 : mAPNType.hashCode());
        result = prime * result + ((mAPN == null) ? 0 : mAPN.hashCode());
        result = prime * result + ((mReason == null) ? 0 : mReason.hashCode());
        result = prime * result + ((mLinkProperties == null) ? 0 : mLinkProperties.hashCode());
        result = prime * result + ((mFailCause == null) ? 0 : mFailCause.hashCode());
        return result;
!!!75451319.java!!!	equals(inout obj : Object) : boolean
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        PreciseDataConnectionState other = (PreciseDataConnectionState) obj;
        if (mAPN == null) {
            if (other.mAPN != null) {
                return false;
            }
        } else if (!mAPN.equals(other.mAPN)) {
            return false;
        }
        if (mAPNType == null) {
            if (other.mAPNType != null) {
                return false;
            }
        } else if (!mAPNType.equals(other.mAPNType)) {
            return false;
        }
        if (mFailCause == null) {
            if (other.mFailCause != null) {
                return false;
            }
        } else if (!mFailCause.equals(other.mFailCause)) {
            return false;
        }
        if (mLinkProperties == null) {
            if (other.mLinkProperties != null) {
                return false;
            }
        } else if (!mLinkProperties.equals(other.mLinkProperties)) {
            return false;
        }
        if (mNetworkType != other.mNetworkType) {
            return false;
        }
        if (mReason == null) {
            if (other.mReason != null) {
                return false;
            }
        } else if (!mReason.equals(other.mReason)) {
            return false;
        }
        if (mState != other.mState) {
            return false;
        }
        return true;
!!!75451447.java!!!	toString() : String
        StringBuilder sb = new StringBuilder();

        sb.append("Data Connection state: " + mState);
        sb.append(", Network type: " + mNetworkType);
        sb.append(", APN type: " + mAPNType);
        sb.append(", APN: " + mAPN);
        sb.append(", Change reason: " + mReason);
        sb.append(", Link properties: " + mLinkProperties);
        sb.append(", Fail cause: " + mFailCause);

        return sb.toString();
