class PipControlsView
!!!72410935.java!!!	PipControlsView(inout context : Context)
        this(context, null, 0, 0);
!!!72411063.java!!!	PipControlsView(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, 0, 0);
!!!72411191.java!!!	PipControlsView(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int)
        this(context, attrs, defStyleAttr, 0);
!!!72411319.java!!!	PipControlsView(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int, in defStyleRes : int)
        super(context, attrs, defStyleAttr, defStyleRes);
        LayoutInflater inflater = (LayoutInflater) getContext()
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        inflater.inflate(R.layout.tv_pip_controls, this);

        setOrientation(LinearLayout.HORIZONTAL);
        setGravity(Gravity.TOP | Gravity.CENTER_HORIZONTAL);
!!!72411447.java!!!	onFinishInflate() : void
        super.onFinishInflate();

        mFullButtonView = (PipControlButtonView) findViewById(R.id.full_button);
        mFullButtonView.setOnFocusChangeListener(mFocusChangeListener);
        mFullButtonView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                mPipManager.movePipToFullscreen();
            }
        });

        mCloseButtonView = (PipControlButtonView) findViewById(R.id.close_button);
        mCloseButtonView.setOnFocusChangeListener(mFocusChangeListener);
        mCloseButtonView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                mPipManager.closePip();
                if (mListener != null) {
                    mListener.onClosed();
                }
            }
        });

        mPlayPauseButtonView = (PipControlButtonView) findViewById(R.id.play_pause_button);
        mPlayPauseButtonView.setOnFocusChangeListener(mFocusChangeListener);
        mPlayPauseButtonView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (mMediaController == null || mMediaController.getPlaybackState() == null) {
                    return;
                }
                long actions = mMediaController.getPlaybackState().getActions();
                int state = mMediaController.getPlaybackState().getState();
                if (mPipManager.getPlaybackState() == PLAYBACK_STATE_PAUSED) {
                    mMediaController.getTransportControls().play();
                } else if (mPipManager.getPlaybackState() == PLAYBACK_STATE_PLAYING) {
                    mMediaController.getTransportControls().pause();
                }
                // View will be updated later in {@link mMediaControllerCallback}
            }
        });
!!!72411575.java!!!	onAttachedToWindow() : void
        super.onAttachedToWindow();
        updateMediaController();
        mPipManager.addMediaListener(mPipMediaListener);
!!!72411703.java!!!	onDetachedFromWindow() : void
        super.onDetachedFromWindow();
        mPipManager.removeMediaListener(mPipMediaListener);
        if (mMediaController != null) {
            mMediaController.unregisterCallback(mMediaControllerCallback);
        }
!!!72411831.java!!!	updateMediaController() : void
        MediaController newController = mPipManager.getMediaController();
        if (mMediaController == newController) {
            return;
        }
        if (mMediaController != null) {
            mMediaController.unregisterCallback(mMediaControllerCallback);
        }
        mMediaController = newController;
        if (mMediaController != null) {
            mMediaController.registerCallback(mMediaControllerCallback);
        }
        updatePlayPauseView();
!!!72411959.java!!!	updatePlayPauseView() : void
        int state = mPipManager.getPlaybackState();
        if (state == PLAYBACK_STATE_UNAVAILABLE) {
            mPlayPauseButtonView.setVisibility(View.GONE);
        } else {
            mPlayPauseButtonView.setVisibility(View.VISIBLE);
            if (state == PLAYBACK_STATE_PLAYING) {
                mPlayPauseButtonView.setImageResource(R.drawable.ic_pause_white_24dp);
                mPlayPauseButtonView.setText(R.string.pip_pause);
            } else {
                mPlayPauseButtonView.setImageResource(R.drawable.ic_play_arrow_white_24dp);
                mPlayPauseButtonView.setText(R.string.pip_play);
            }
        }
!!!72412087.java!!!	reset() : void
        mFullButtonView.reset();
        mCloseButtonView.reset();
        mPlayPauseButtonView.reset();
        mFullButtonView.requestFocus();
!!!72412215.java!!!	setListener(inout listener : PipControlsView::Listener) : void
        mListener = listener;
!!!72412343.java!!!	getFocusedButton() : PipControlButtonView
        return mFocusedChild;
