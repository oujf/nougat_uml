class RenderThread
!!!72573879.java!!!	RenderThread(inout renderer : GLSurfaceView::Renderer)
            super("RenderThread");
            mRenderer = renderer;
            start();
!!!72574007.java!!!	checkRenderer() : void
            if (mRenderer == null) {
                throw new IllegalArgumentException("Renderer is null!");
            }
!!!72574135.java!!!	checkSurface() : void
            if (mSurface == null) {
                throw new IllegalArgumentException("surface is null!");
            }
!!!72574263.java!!!	setSurface(inout surface : SurfaceTexture) : void
            // If the surface is null we're being torn down, don't need a
            // renderer then
            if (surface != null) {
                checkRenderer();
            }
            mSurface = surface;
            exec(CHANGE_SURFACE);
!!!72574391.java!!!	setSize(in width : int, in height : int) : void
            checkRenderer();
            checkSurface();
            mWidth = width;
            mHeight = height;
            exec(RESIZE_SURFACE);
!!!72574519.java!!!	render() : void
            checkRenderer();
            if (mSurface != null) {
                exec(RENDER);
                mSurface.updateTexImage();
            }
!!!72574647.java!!!	finish() : void
            mSurface = null;
            exec(FINISH);
            try {
                join();
            } catch (InterruptedException e) {
                // Ignore
            }
!!!72574775.java!!!	exec(in msgid : int) : void
            synchronized (mLock) {
                if (mExecMsgId != INVALID) {
                    throw new IllegalArgumentException(
                            "Message already set - multithreaded access?");
                }
                mExecMsgId = msgid;
                mLock.notify();
                try {
                    mLock.wait();
                } catch (InterruptedException e) {
                    // Ignore
                }
            }
!!!72574903.java!!!	handleMessageLocked(in what : int) : void
            switch (what) {
            case CHANGE_SURFACE:
                if (mEglHelper.createSurface(mSurface)) {
                    mGL = mEglHelper.createGL();
                    mRenderer.onSurfaceCreated(mGL, mEglHelper.mEglConfig);
                }
                break;
            case RESIZE_SURFACE:
                mRenderer.onSurfaceChanged(mGL, mWidth, mHeight);
                break;
            case RENDER:
                mRenderer.onDrawFrame(mGL);
                mEglHelper.swap();
                break;
            case FINISH:
                mEglHelper.destroySurface();
                mEglHelper.finish();
                mFinished = true;
                break;
            }
!!!72575031.java!!!	run() : void
            synchronized (mLock) {
                mEglHelper.start();
                while (!mFinished) {
                    while (mExecMsgId == INVALID) {
                        try {
                            mLock.wait();
                        } catch (InterruptedException e) {
                            // Ignore
                        }
                    }
                    handleMessageLocked(mExecMsgId);
                    mExecMsgId = INVALID;
                    mLock.notify();
                }
                mExecMsgId = FINISH;
            }
