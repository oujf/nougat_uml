class RenderScript
!!!72726327.java!!!	getMinorID() : long
        return 1;
!!!72726455.java!!!	getMinorVersion() : long
        return sMinorVersion;
!!!72726839.java!!!	nContextCreateGL(in dev : long, in ver : int, in sdkVer : int, in colorMin : int, in colorPref : int, in alphaMin : int, in alphaPref : int, in depthMin : int, in depthPref : int, in stencilMin : int, in stencilPref : int, in samplesMin : int, in samplesPref : int, in samplesQ : float, in dpi : int) : long
        return rsnContextCreateGL(dev, ver, sdkVer, colorMin, colorPref,
                                  alphaMin, alphaPref, depthMin, depthPref,
                                  stencilMin, stencilPref,
                                  samplesMin, samplesPref, samplesQ, dpi);
!!!72727095.java!!!	nContextCreate(in dev : long, in ver : int, in sdkVer : int, in contextType : int) : long
        return rsnContextCreate(dev, ver, sdkVer, contextType);
!!!72727351.java!!!	nContextDestroy() : void
        validate();

        // take teardown lock
        // teardown lock can only be taken when no objects are being destroyed
        ReentrantReadWriteLock.WriteLock wlock = mRWLock.writeLock();
        wlock.lock();

        long curCon = mContext;
        // context is considered dead as of this point
        mContext = 0;

        wlock.unlock();
        rsnContextDestroy(curCon);
!!!72727607.java!!!	nContextSetSurface(in w : int, in h : int, inout sur : Surface) : void
        validate();
        rsnContextSetSurface(mContext, w, h, sur);
!!!72727863.java!!!	nContextSetSurfaceTexture(in w : int, in h : int, inout sur : SurfaceTexture) : void
        validate();
        rsnContextSetSurfaceTexture(mContext, w, h, sur);
!!!72728119.java!!!	nContextSetPriority(in p : int) : void
        validate();
        rsnContextSetPriority(mContext, p);
!!!72728375.java!!!	nContextSetCacheDir(inout cacheDir : String) : void
        validate();
        rsnContextSetCacheDir(mContext, cacheDir);
!!!72728631.java!!!	nContextDump(in bits : int) : void
        validate();
        rsnContextDump(mContext, bits);
!!!72728887.java!!!	nContextFinish() : void
        validate();
        rsnContextFinish(mContext);
!!!72729143.java!!!	nContextSendMessage(in id : int, inout data : int [[]]) : void
        validate();
        rsnContextSendMessage(mContext, id, data);
!!!72729399.java!!!	nContextBindRootScript(in script : long) : void
        validate();
        rsnContextBindRootScript(mContext, script);
!!!72729655.java!!!	nContextBindSampler(in sampler : int, in slot : int) : void
        validate();
        rsnContextBindSampler(mContext, sampler, slot);
!!!72729911.java!!!	nContextBindProgramStore(in pfs : long) : void
        validate();
        rsnContextBindProgramStore(mContext, pfs);
!!!72730167.java!!!	nContextBindProgramFragment(in pf : long) : void
        validate();
        rsnContextBindProgramFragment(mContext, pf);
!!!72730423.java!!!	nContextBindProgramVertex(in pv : long) : void
        validate();
        rsnContextBindProgramVertex(mContext, pv);
!!!72730679.java!!!	nContextBindProgramRaster(in pr : long) : void
        validate();
        rsnContextBindProgramRaster(mContext, pr);
!!!72730935.java!!!	nContextPause() : void
        validate();
        rsnContextPause(mContext);
!!!72731191.java!!!	nContextResume() : void
        validate();
        rsnContextResume(mContext);
!!!72731447.java!!!	nClosureCreate(in kernelID : long, in returnValue : long, inout fieldIDs : long [[]], inout values : long [[]], inout sizes : int [[]], inout depClosures : long [[]], inout depFieldIDs : long [[]]) : long
      validate();
      long c = rsnClosureCreate(mContext, kernelID, returnValue, fieldIDs, values,
          sizes, depClosures, depFieldIDs);
      if (c == 0) {
          throw new RSRuntimeException("Failed creating closure.");
      }
      return c;
!!!72731703.java!!!	nInvokeClosureCreate(in invokeID : long, inout params : byte [[]], inout fieldIDs : long [[]], inout values : long [[]], inout sizes : int [[]]) : long
      validate();
      long c = rsnInvokeClosureCreate(mContext, invokeID, params, fieldIDs,
          values, sizes);
      if (c == 0) {
          throw new RSRuntimeException("Failed creating closure.");
      }
      return c;
!!!72731959.java!!!	nClosureSetArg(in closureID : long, in index : int, in value : long, in size : int) : void
      validate();
      rsnClosureSetArg(mContext, closureID, index, value, size);
!!!72732215.java!!!	nClosureSetGlobal(in closureID : long, in fieldID : long, in value : long, in size : int) : void
      validate(); // TODO: is this necessary?
      rsnClosureSetGlobal(mContext, closureID, fieldID, value, size);
!!!72732471.java!!!	nScriptGroup2Create(inout name : String, inout cachePath : String, inout closures : long [[]]) : long
      validate();
      long g = rsnScriptGroup2Create(mContext, name, cachePath, closures);
      if (g == 0) {
          throw new RSRuntimeException("Failed creating script group.");
      }
      return g;
!!!72732727.java!!!	nScriptGroup2Execute(in groupID : long) : void
      validate();
      rsnScriptGroup2Execute(mContext, groupID);
!!!72732983.java!!!	nAssignName(in obj : long, inout name : byte [[]]) : void
        validate();
        rsnAssignName(mContext, obj, name);
!!!72733239.java!!!	nGetName(in obj : long) : String
        validate();
        return rsnGetName(mContext, obj);
!!!72733495.java!!!	nObjDestroy(in id : long) : void
        // There is a race condition here.  The calling code may be run
        // by the gc while teardown is occuring.  This protects againts
        // deleting dead objects.
        if (mContext != 0) {
            rsnObjDestroy(mContext, id);
        }
!!!72733751.java!!!	nElementCreate(in type : long, in kind : int, inout norm : boolean, in vecSize : int) : long
        validate();
        return rsnElementCreate(mContext, type, kind, norm, vecSize);
!!!72734007.java!!!	nElementCreate2(inout elements : long [[]], inout names : String [[]], inout arraySizes : int [[]]) : long
        validate();
        return rsnElementCreate2(mContext, elements, names, arraySizes);
!!!72734263.java!!!	nElementGetNativeData(in id : long, inout elementData : int [[]]) : void
        validate();
        rsnElementGetNativeData(mContext, id, elementData);
!!!72734519.java!!!	nElementGetSubElements(in id : long, inout IDs : long [[]], inout names : String [[]], inout arraySizes : int [[]]) : void
        validate();
        rsnElementGetSubElements(mContext, id, IDs, names, arraySizes);
!!!72734775.java!!!	nTypeCreate(in eid : long, in x : int, in y : int, in z : int, inout mips : boolean, inout faces : boolean, in yuv : int) : long
        validate();
        return rsnTypeCreate(mContext, eid, x, y, z, mips, faces, yuv);
!!!72735031.java!!!	nTypeGetNativeData(in id : long, inout typeData : long [[]]) : void
        validate();
        rsnTypeGetNativeData(mContext, id, typeData);
!!!72735287.java!!!	nAllocationCreateTyped(in type : long, in mip : int, in usage : int, in pointer : long) : long
        validate();
        return rsnAllocationCreateTyped(mContext, type, mip, usage, pointer);
!!!72735543.java!!!	nAllocationCreateFromBitmap(in type : long, in mip : int, inout bmp : Bitmap, in usage : int) : long
        validate();
        return rsnAllocationCreateFromBitmap(mContext, type, mip, bmp, usage);
!!!72735799.java!!!	nAllocationCreateBitmapBackedAllocation(in type : long, in mip : int, inout bmp : Bitmap, in usage : int) : long
        validate();
        return rsnAllocationCreateBitmapBackedAllocation(mContext, type, mip, bmp, usage);
!!!72736055.java!!!	nAllocationCubeCreateFromBitmap(in type : long, in mip : int, inout bmp : Bitmap, in usage : int) : long
        validate();
        return rsnAllocationCubeCreateFromBitmap(mContext, type, mip, bmp, usage);
!!!72736311.java!!!	nAllocationCreateBitmapRef(in type : long, inout bmp : Bitmap) : long
        validate();
        return rsnAllocationCreateBitmapRef(mContext, type, bmp);
!!!72736567.java!!!	nAllocationCreateFromAssetStream(in mips : int, in assetStream : int, in usage : int) : long
        validate();
        return rsnAllocationCreateFromAssetStream(mContext, mips, assetStream, usage);
!!!72736823.java!!!	nAllocationCopyToBitmap(in alloc : long, inout bmp : Bitmap) : void
        validate();
        rsnAllocationCopyToBitmap(mContext, alloc, bmp);
!!!72737079.java!!!	nAllocationSyncAll(in alloc : long, in src : int) : void
        validate();
        rsnAllocationSyncAll(mContext, alloc, src);
!!!72737335.java!!!	nAllocationGetByteBuffer(in alloc : long, inout stride : long [[]], in xBytesSize : int, in dimY : int, in dimZ : int) : ByteBuffer
        validate();
        return rsnAllocationGetByteBuffer(mContext, alloc, stride, xBytesSize, dimY, dimZ);
!!!72737591.java!!!	nAllocationSetupBufferQueue(in alloc : long, in numAlloc : int) : void
        validate();
        rsnAllocationSetupBufferQueue(mContext, alloc, numAlloc);
!!!72737847.java!!!	nAllocationShareBufferQueue(in alloc1 : long, in alloc2 : long) : void
        validate();
        rsnAllocationShareBufferQueue(mContext, alloc1, alloc2);
!!!72738103.java!!!	nAllocationGetSurface(in alloc : long) : Surface
        validate();
        return rsnAllocationGetSurface(mContext, alloc);
!!!72738359.java!!!	nAllocationSetSurface(in alloc : long, inout sur : Surface) : void
        validate();
        rsnAllocationSetSurface(mContext, alloc, sur);
!!!72738615.java!!!	nAllocationIoSend(in alloc : long) : void
        validate();
        rsnAllocationIoSend(mContext, alloc);
!!!72738871.java!!!	nAllocationIoReceive(in alloc : long) : long
        validate();
        return rsnAllocationIoReceive(mContext, alloc);
!!!72739127.java!!!	nAllocationGenerateMipmaps(in alloc : long) : void
        validate();
        rsnAllocationGenerateMipmaps(mContext, alloc);
!!!72739383.java!!!	nAllocationCopyFromBitmap(in alloc : long, inout bmp : Bitmap) : void
        validate();
        rsnAllocationCopyFromBitmap(mContext, alloc, bmp);
!!!72739639.java!!!	nAllocationData1D(in id : long, in off : int, in mip : int, in count : int, inout d : Object, in sizeBytes : int, inout dt : Element::DataType, in mSize : int, inout usePadding : boolean) : void
        validate();
        rsnAllocationData1D(mContext, id, off, mip, count, d, sizeBytes, dt.mID, mSize, usePadding);
!!!72739895.java!!!	nAllocationElementData(in id : long, in xoff : int, in yoff : int, in zoff : int, in mip : int, in compIdx : int, inout d : byte [[]], in sizeBytes : int) : void
        validate();
        rsnAllocationElementData(mContext, id, xoff, yoff, zoff, mip, compIdx, d, sizeBytes);
!!!72740151.java!!!	nAllocationData2D(in dstAlloc : long, in dstXoff : int, in dstYoff : int, in dstMip : int, in dstFace : int, in width : int, in height : int, in srcAlloc : long, in srcXoff : int, in srcYoff : int, in srcMip : int, in srcFace : int) : void
        validate();
        rsnAllocationData2D(mContext,
                            dstAlloc, dstXoff, dstYoff,
                            dstMip, dstFace,
                            width, height,
                            srcAlloc, srcXoff, srcYoff,
                            srcMip, srcFace);
!!!72740407.java!!!	nAllocationData2D(in id : long, in xoff : int, in yoff : int, in mip : int, in face : int, in w : int, in h : int, inout d : Object, in sizeBytes : int, inout dt : Element::DataType, in mSize : int, inout usePadding : boolean) : void
        validate();
        rsnAllocationData2D(mContext, id, xoff, yoff, mip, face, w, h, d, sizeBytes, dt.mID, mSize, usePadding);
!!!72740663.java!!!	nAllocationData2D(in id : long, in xoff : int, in yoff : int, in mip : int, in face : int, inout b : Bitmap) : void
        validate();
        rsnAllocationData2D(mContext, id, xoff, yoff, mip, face, b);
!!!72740919.java!!!	nAllocationData3D(in dstAlloc : long, in dstXoff : int, in dstYoff : int, in dstZoff : int, in dstMip : int, in width : int, in height : int, in depth : int, in srcAlloc : long, in srcXoff : int, in srcYoff : int, in srcZoff : int, in srcMip : int) : void
        validate();
        rsnAllocationData3D(mContext,
                            dstAlloc, dstXoff, dstYoff, dstZoff,
                            dstMip, width, height, depth,
                            srcAlloc, srcXoff, srcYoff, srcZoff, srcMip);
!!!72741175.java!!!	nAllocationData3D(in id : long, in xoff : int, in yoff : int, in zoff : int, in mip : int, in w : int, in h : int, in depth : int, inout d : Object, in sizeBytes : int, inout dt : Element::DataType, in mSize : int, inout usePadding : boolean) : void
        validate();
        rsnAllocationData3D(mContext, id, xoff, yoff, zoff, mip, w, h, depth, d, sizeBytes,
                            dt.mID, mSize, usePadding);
!!!72741431.java!!!	nAllocationRead(in id : long, inout d : Object, inout dt : Element::DataType, in mSize : int, inout usePadding : boolean) : void
        validate();
        rsnAllocationRead(mContext, id, d, dt.mID, mSize, usePadding);
!!!72741687.java!!!	nAllocationRead1D(in id : long, in off : int, in mip : int, in count : int, inout d : Object, in sizeBytes : int, inout dt : Element::DataType, in mSize : int, inout usePadding : boolean) : void
        validate();
        rsnAllocationRead1D(mContext, id, off, mip, count, d, sizeBytes, dt.mID, mSize, usePadding);
!!!72741943.java!!!	nAllocationElementRead(in id : long, in xoff : int, in yoff : int, in zoff : int, in mip : int, in compIdx : int, inout d : byte [[]], in sizeBytes : int) : void
        validate();
        rsnAllocationElementRead(mContext, id, xoff, yoff, zoff, mip, compIdx, d, sizeBytes);
!!!72742199.java!!!	nAllocationRead2D(in id : long, in xoff : int, in yoff : int, in mip : int, in face : int, in w : int, in h : int, inout d : Object, in sizeBytes : int, inout dt : Element::DataType, in mSize : int, inout usePadding : boolean) : void
        validate();
        rsnAllocationRead2D(mContext, id, xoff, yoff, mip, face, w, h, d, sizeBytes, dt.mID, mSize, usePadding);
!!!72742455.java!!!	nAllocationRead3D(in id : long, in xoff : int, in yoff : int, in zoff : int, in mip : int, in w : int, in h : int, in depth : int, inout d : Object, in sizeBytes : int, inout dt : Element::DataType, in mSize : int, inout usePadding : boolean) : void
        validate();
        rsnAllocationRead3D(mContext, id, xoff, yoff, zoff, mip, w, h, depth, d, sizeBytes, dt.mID, mSize, usePadding);
!!!72742711.java!!!	nAllocationGetType(in id : long) : long
        validate();
        return rsnAllocationGetType(mContext, id);
!!!72742967.java!!!	nAllocationResize1D(in id : long, in dimX : int) : void
        validate();
        rsnAllocationResize1D(mContext, id, dimX);
!!!72743223.java!!!	nAllocationAdapterCreate(in allocId : long, in typeId : long) : long
        validate();
        return rsnAllocationAdapterCreate(mContext, allocId, typeId);
!!!72743479.java!!!	nAllocationAdapterOffset(in id : long, in x : int, in y : int, in z : int, in mip : int, in face : int, in a1 : int, in a2 : int, in a3 : int, in a4 : int) : void
        validate();
        rsnAllocationAdapterOffset(mContext, id, x, y, z, mip, face, a1, a2, a3, a4);
!!!72743735.java!!!	nFileA3DCreateFromAssetStream(in assetStream : long) : long
        validate();
        return rsnFileA3DCreateFromAssetStream(mContext, assetStream);
!!!72743991.java!!!	nFileA3DCreateFromFile(inout path : String) : long
        validate();
        return rsnFileA3DCreateFromFile(mContext, path);
!!!72744247.java!!!	nFileA3DCreateFromAsset(inout mgr : AssetManager, inout path : String) : long
        validate();
        return rsnFileA3DCreateFromAsset(mContext, mgr, path);
!!!72744503.java!!!	nFileA3DGetNumIndexEntries(in fileA3D : long) : int
        validate();
        return rsnFileA3DGetNumIndexEntries(mContext, fileA3D);
!!!72744759.java!!!	nFileA3DGetIndexEntries(in fileA3D : long, in numEntries : int, inout IDs : int [[]], inout names : String [[]]) : void
        validate();
        rsnFileA3DGetIndexEntries(mContext, fileA3D, numEntries, IDs, names);
!!!72745015.java!!!	nFileA3DGetEntryByIndex(in fileA3D : long, in index : int) : long
        validate();
        return rsnFileA3DGetEntryByIndex(mContext, fileA3D, index);
!!!72745271.java!!!	nFontCreateFromFile(inout fileName : String, in size : float, in dpi : int) : long
        validate();
        return rsnFontCreateFromFile(mContext, fileName, size, dpi);
!!!72745527.java!!!	nFontCreateFromAssetStream(inout name : String, in size : float, in dpi : int, in assetStream : long) : long
        validate();
        return rsnFontCreateFromAssetStream(mContext, name, size, dpi, assetStream);
!!!72745783.java!!!	nFontCreateFromAsset(inout mgr : AssetManager, inout path : String, in size : float, in dpi : int) : long
        validate();
        return rsnFontCreateFromAsset(mContext, mgr, path, size, dpi);
!!!72746039.java!!!	nScriptBindAllocation(in script : long, in alloc : long, in slot : int) : void
        validate();
        rsnScriptBindAllocation(mContext, script, alloc, slot);
!!!72746295.java!!!	nScriptSetTimeZone(in script : long, inout timeZone : byte [[]]) : void
        validate();
        rsnScriptSetTimeZone(mContext, script, timeZone);
!!!72746551.java!!!	nScriptInvoke(in id : long, in slot : int) : void
        validate();
        rsnScriptInvoke(mContext, id, slot);
!!!72746807.java!!!	nScriptForEach(in id : long, in slot : int, inout ains : long [[]], in aout : long, inout params : byte [[]], inout limits : int [[]]) : void
        validate();
        rsnScriptForEach(mContext, id, slot, ains, aout, params, limits);
!!!72747063.java!!!	nScriptReduce(in id : long, in slot : int, inout ains : long [[]], in aout : long, inout limits : int [[]]) : void
        validate();
        rsnScriptReduce(mContext, id, slot, ains, aout, limits);
!!!72747319.java!!!	nScriptInvokeV(in id : long, in slot : int, inout params : byte [[]]) : void
        validate();
        rsnScriptInvokeV(mContext, id, slot, params);
!!!72747575.java!!!	nScriptSetVarI(in id : long, in slot : int, in val : int) : void
        validate();
        rsnScriptSetVarI(mContext, id, slot, val);
!!!72747831.java!!!	nScriptGetVarI(in id : long, in slot : int) : int
        validate();
        return rsnScriptGetVarI(mContext, id, slot);
!!!72748087.java!!!	nScriptSetVarJ(in id : long, in slot : int, in val : long) : void
        validate();
        rsnScriptSetVarJ(mContext, id, slot, val);
!!!72748343.java!!!	nScriptGetVarJ(in id : long, in slot : int) : long
        validate();
        return rsnScriptGetVarJ(mContext, id, slot);
!!!72748599.java!!!	nScriptSetVarF(in id : long, in slot : int, in val : float) : void
        validate();
        rsnScriptSetVarF(mContext, id, slot, val);
!!!72748855.java!!!	nScriptGetVarF(in id : long, in slot : int) : float
        validate();
        return rsnScriptGetVarF(mContext, id, slot);
!!!72749111.java!!!	nScriptSetVarD(in id : long, in slot : int, in val : double) : void
        validate();
        rsnScriptSetVarD(mContext, id, slot, val);
!!!72749367.java!!!	nScriptGetVarD(in id : long, in slot : int) : double
        validate();
        return rsnScriptGetVarD(mContext, id, slot);
!!!72749623.java!!!	nScriptSetVarV(in id : long, in slot : int, inout val : byte [[]]) : void
        validate();
        rsnScriptSetVarV(mContext, id, slot, val);
!!!72749879.java!!!	nScriptGetVarV(in id : long, in slot : int, inout val : byte [[]]) : void
        validate();
        rsnScriptGetVarV(mContext, id, slot, val);
!!!72750135.java!!!	nScriptSetVarVE(in id : long, in slot : int, inout val : byte [[]], in e : long, inout dims : int [[]]) : void
        validate();
        rsnScriptSetVarVE(mContext, id, slot, val, e, dims);
!!!72750391.java!!!	nScriptSetVarObj(in id : long, in slot : int, in val : long) : void
        validate();
        rsnScriptSetVarObj(mContext, id, slot, val);
!!!72750647.java!!!	nScriptCCreate(inout resName : String, inout cacheDir : String, inout script : byte [[]], in length : int) : long
        validate();
        return rsnScriptCCreate(mContext, resName, cacheDir, script, length);
!!!72750903.java!!!	nScriptIntrinsicCreate(in id : int, in eid : long) : long
        validate();
        return rsnScriptIntrinsicCreate(mContext, id, eid);
!!!72751159.java!!!	nScriptKernelIDCreate(in sid : long, in slot : int, in sig : int) : long
        validate();
        return rsnScriptKernelIDCreate(mContext, sid, slot, sig);
!!!72751415.java!!!	nScriptInvokeIDCreate(in sid : long, in slot : int) : long
        validate();
        return rsnScriptInvokeIDCreate(mContext, sid, slot);
!!!72751671.java!!!	nScriptFieldIDCreate(in sid : long, in slot : int) : long
        validate();
        return rsnScriptFieldIDCreate(mContext, sid, slot);
!!!72751927.java!!!	nScriptGroupCreate(inout kernels : long [[]], inout src : long [[]], inout dstk : long [[]], inout dstf : long [[]], inout types : long [[]]) : long
        validate();
        return rsnScriptGroupCreate(mContext, kernels, src, dstk, dstf, types);
!!!72752183.java!!!	nScriptGroupSetInput(in group : long, in kernel : long, in alloc : long) : void
        validate();
        rsnScriptGroupSetInput(mContext, group, kernel, alloc);
!!!72752439.java!!!	nScriptGroupSetOutput(in group : long, in kernel : long, in alloc : long) : void
        validate();
        rsnScriptGroupSetOutput(mContext, group, kernel, alloc);
!!!72752695.java!!!	nScriptGroupExecute(in group : long) : void
        validate();
        rsnScriptGroupExecute(mContext, group);
!!!72752951.java!!!	nSamplerCreate(in magFilter : int, in minFilter : int, in wrapS : int, in wrapT : int, in wrapR : int, in aniso : float) : long
        validate();
        return rsnSamplerCreate(mContext, magFilter, minFilter, wrapS, wrapT, wrapR, aniso);
!!!72753207.java!!!	nProgramStoreCreate(inout r : boolean, inout g : boolean, inout b : boolean, inout a : boolean, inout depthMask : boolean, inout dither : boolean, in srcMode : int, in dstMode : int, in depthFunc : int) : long
        validate();
        return rsnProgramStoreCreate(mContext, r, g, b, a, depthMask, dither, srcMode,
                                     dstMode, depthFunc);
!!!72753463.java!!!	nProgramRasterCreate(inout pointSprite : boolean, in cullMode : int) : long
        validate();
        return rsnProgramRasterCreate(mContext, pointSprite, cullMode);
!!!72753719.java!!!	nProgramBindConstants(in pv : long, in slot : int, in mID : long) : void
        validate();
        rsnProgramBindConstants(mContext, pv, slot, mID);
!!!72753975.java!!!	nProgramBindTexture(in vpf : long, in slot : int, in a : long) : void
        validate();
        rsnProgramBindTexture(mContext, vpf, slot, a);
!!!72754231.java!!!	nProgramBindSampler(in vpf : long, in slot : int, in s : long) : void
        validate();
        rsnProgramBindSampler(mContext, vpf, slot, s);
!!!72754487.java!!!	nProgramFragmentCreate(inout shader : String, inout texNames : String [[]], inout params : long [[]]) : long
        validate();
        return rsnProgramFragmentCreate(mContext, shader, texNames, params);
!!!72754743.java!!!	nProgramVertexCreate(inout shader : String, inout texNames : String [[]], inout params : long [[]]) : long
        validate();
        return rsnProgramVertexCreate(mContext, shader, texNames, params);
!!!72754999.java!!!	nMeshCreate(inout vtx : long [[]], inout idx : long [[]], inout prim : int [[]]) : long
        validate();
        return rsnMeshCreate(mContext, vtx, idx, prim);
!!!72755255.java!!!	nMeshGetVertexBufferCount(in id : long) : int
        validate();
        return rsnMeshGetVertexBufferCount(mContext, id);
!!!72755511.java!!!	nMeshGetIndexCount(in id : long) : int
        validate();
        return rsnMeshGetIndexCount(mContext, id);
!!!72755767.java!!!	nMeshGetVertices(in id : long, inout vtxIds : long [[]], in vtxIdCount : int) : void
        validate();
        rsnMeshGetVertices(mContext, id, vtxIds, vtxIdCount);
!!!72756023.java!!!	nMeshGetIndices(in id : long, inout idxIds : long [[]], inout primitives : int [[]], in vtxIdCount : int) : void
        validate();
        rsnMeshGetIndices(mContext, id, idxIds, primitives, vtxIdCount);
!!!72756279.java!!!	nScriptIntrinsicBLAS_Single(in id : long, in func : int, in TransA : int, in TransB : int, in Side : int, in Uplo : int, in Diag : int, in M : int, in N : int, in K : int, in alpha : float, in A : long, in B : long, in beta : float, in C : long, in incX : int, in incY : int, in KL : int, in KU : int) : void
        validate();
        rsnScriptIntrinsicBLAS_Single(mContext, id, func, TransA, TransB, Side, Uplo, Diag, M, N, K, alpha, A, B, beta, C, incX, incY, KL, KU);
!!!72756535.java!!!	nScriptIntrinsicBLAS_Double(in id : long, in func : int, in TransA : int, in TransB : int, in Side : int, in Uplo : int, in Diag : int, in M : int, in N : int, in K : int, in alpha : double, in A : long, in B : long, in beta : double, in C : long, in incX : int, in incY : int, in KL : int, in KU : int) : void
        validate();
        rsnScriptIntrinsicBLAS_Double(mContext, id, func, TransA, TransB, Side, Uplo, Diag, M, N, K, alpha, A, B, beta, C, incX, incY, KL, KU);
!!!72756791.java!!!	nScriptIntrinsicBLAS_Complex(in id : long, in func : int, in TransA : int, in TransB : int, in Side : int, in Uplo : int, in Diag : int, in M : int, in N : int, in K : int, in alphaX : float, in alphaY : float, in A : long, in B : long, in betaX : float, in betaY : float, in C : long, in incX : int, in incY : int, in KL : int, in KU : int) : void
        validate();
        rsnScriptIntrinsicBLAS_Complex(mContext, id, func, TransA, TransB, Side, Uplo, Diag, M, N, K, alphaX, alphaY, A, B, betaX, betaY, C, incX, incY, KL, KU);
!!!72757047.java!!!	nScriptIntrinsicBLAS_Z(in id : long, in func : int, in TransA : int, in TransB : int, in Side : int, in Uplo : int, in Diag : int, in M : int, in N : int, in K : int, in alphaX : double, in alphaY : double, in A : long, in B : long, in betaX : double, in betaY : double, in C : long, in incX : int, in incY : int, in KL : int, in KU : int) : void
        validate();
        rsnScriptIntrinsicBLAS_Z(mContext, id, func, TransA, TransB, Side, Uplo, Diag, M, N, K, alphaX, alphaY, A, B, betaX, betaY, C, incX, incY, KL, KU);
!!!72757303.java!!!	nScriptIntrinsicBLAS_BNNM(in id : long, in M : int, in N : int, in K : int, in A : long, in a_offset : int, in B : long, in b_offset : int, in C : long, in c_offset : int, in c_mult_int : int) : void
        validate();
        rsnScriptIntrinsicBLAS_BNNM(mContext, id, M, N, K, A, a_offset, B, b_offset, C, c_offset, c_mult_int);
!!!72757559.java!!!	setMessageHandler(inout msg : RenderScript::RSMessageHandler) : void
        mMessageCallback = msg;
!!!72757687.java!!!	getMessageHandler() : RenderScript::RSMessageHandler
        return mMessageCallback;
!!!72757815.java!!!	sendMessage(in id : int, inout data : int [[]]) : void
        nContextSendMessage(id, data);
!!!72758071.java!!!	setErrorHandler(inout msg : RenderScript::RSErrorHandler) : void
        mErrorCallback = msg;
!!!72758199.java!!!	getErrorHandler() : RenderScript::RSErrorHandler
        return mErrorCallback;
!!!72758455.java!!!	validateObject(inout o : BaseObj) : void
        if (o != null) {
            if (o.mRS != this) {
                throw new RSIllegalArgumentException("Attempting to use an object across contexts.");
            }
        }
!!!72758583.java!!!	validate() : void
        if (mContext == 0) {
            throw new RSInvalidStateException("Calling RS with no Context active.");
        }
!!!72758711.java!!!	setPriority(inout p : RenderScript::Priority) : void
        validate();
        nContextSetPriority(p.mID);
!!!72759095.java!!!	RenderScript(inout ctx : Context)
        mContextType = ContextType.NORMAL;
        if (ctx != null) {
            mApplicationContext = ctx.getApplicationContext();
        }
        mRWLock = new ReentrantReadWriteLock();
        try {
            registerNativeAllocation.invoke(sRuntime, 4 * 1024 * 1024); // 4MB for GC sake
        } catch (Exception e) {
            Log.e(RenderScript.LOG_TAG, "Couldn't invoke registerNativeAllocation:" + e);
            throw new RSRuntimeException("Couldn't invoke registerNativeAllocation:" + e);
        }

!!!72759223.java!!!	getApplicationContext() : Context
        return mApplicationContext;
!!!72759351.java!!!	getCachePath() : String
        if (mCachePath == null) {
            final String CACHE_PATH = "com.android.renderscript.cache";
            if (RenderScriptCacheDir.mCacheDir == null) {
                throw new RSRuntimeException("RenderScript code cache directory uninitialized.");
            }
            File f = new File(RenderScriptCacheDir.mCacheDir, CACHE_PATH);
            mCachePath = f.getAbsolutePath();
            f.mkdirs();
        }
        return mCachePath;
!!!72759479.java!!!	internalCreate(inout ctx : Context, in sdkVersion : int, inout ct : RenderScript::ContextType, in flags : int) : RenderScript
        if (!sInitialized) {
            Log.e(LOG_TAG, "RenderScript.create() called when disabled; someone is likely to crash");
            return null;
        }

        if ((flags & ~(CREATE_FLAG_LOW_LATENCY | CREATE_FLAG_LOW_POWER |
                       CREATE_FLAG_WAIT_FOR_ATTACH)) != 0) {
            throw new RSIllegalArgumentException("Invalid flags passed.");
        }

        RenderScript rs = new RenderScript(ctx);

        long device = rs.nDeviceCreate();
        rs.mContext = rs.nContextCreate(device, flags, sdkVersion, ct.mID);
        rs.mContextType = ct;
        rs.mContextFlags = flags;
        rs.mContextSdkVersion = sdkVersion;
        if (rs.mContext == 0) {
            throw new RSDriverException("Failed to create RS context.");
        }

        // set up cache directory for entire context
        rs.nContextSetCacheDir(RenderScript.getCachePath());

        rs.mMessageThread = new MessageThread(rs);
        rs.mMessageThread.start();
        return rs;
!!!72759607.java!!!	create(inout ctx : Context) : RenderScript
        return create(ctx, ContextType.NORMAL);
!!!72759735.java!!!	create(inout ctx : Context, inout ct : RenderScript::ContextType) : RenderScript
        return create(ctx, ct, CREATE_FLAG_NONE);
!!!72759863.java!!!	create(inout ctx : Context, inout ct : RenderScript::ContextType, in flags : int) : RenderScript
        int v = ctx.getApplicationInfo().targetSdkVersion;
        return create(ctx, v, ct, flags);
!!!72759991.java!!!	create(inout ctx : Context, in sdkVersion : int) : RenderScript
        return create(ctx, sdkVersion, ContextType.NORMAL, CREATE_FLAG_NONE);
!!!72760119.java!!!	create(inout ctx : Context, in sdkVersion : int, inout ct : RenderScript::ContextType, in flags : int) : RenderScript
        if (sdkVersion < 23) {
            return internalCreate(ctx, sdkVersion, ct, flags);
        }

        synchronized (mProcessContextList) {
            for (RenderScript prs : mProcessContextList) {
                if ((prs.mContextType == ct) &&
                    (prs.mContextFlags == flags) &&
                    (prs.mContextSdkVersion == sdkVersion)) {

                    return prs;
                }
            }

            RenderScript prs = internalCreate(ctx, sdkVersion, ct, flags);
            prs.mIsProcessContext = true;
            mProcessContextList.add(prs);
            return prs;
        }
!!!72760247.java!!!	releaseAllContexts() : void
        ArrayList<RenderScript> oldList;
        synchronized (mProcessContextList) {
            oldList = mProcessContextList;
            mProcessContextList = new ArrayList<RenderScript>();
        }

        for (RenderScript prs : oldList) {
            prs.mIsProcessContext = false;
            prs.destroy();
        }
        oldList.clear();
!!!72760375.java!!!	createMultiContext(inout ctx : Context, inout ct : RenderScript::ContextType, in flags : int, in API_number : int) : RenderScript
        return internalCreate(ctx, API_number, ct, flags);
!!!72760503.java!!!	contextDump() : void
        validate();
        nContextDump(0);
!!!72760631.java!!!	finish() : void
        nContextFinish();
!!!72760759.java!!!	helpDestroy() : void
        boolean shouldDestroy = false;
        synchronized(this) {
            if (!mDestroyed) {
                shouldDestroy = true;
                mDestroyed = true;
            }
        }

        if (shouldDestroy) {
            nContextFinish();

            nContextDeinitToClient(mContext);
            mMessageThread.mRun = false;

            // Wait for mMessageThread to join.  Try in a loop, in case this thread gets interrupted
            // during the wait.  If interrupted, set the "interrupted" status of the current thread.
            boolean hasJoined = false, interrupted = false;
            while (!hasJoined) {
                try {
                    mMessageThread.join();
                    hasJoined = true;
                } catch (InterruptedException e) {
                    interrupted = true;
                }
            }
            if (interrupted) {
                Log.v(LOG_TAG, "Interrupted during wait for MessageThread to join");
                Thread.currentThread().interrupt();
            }

            nContextDestroy();
        }
!!!72760887.java!!!	finalize() : void
        helpDestroy();
        super.finalize();
!!!72761015.java!!!	destroy() : void
        if (mIsProcessContext) {
            // users cannot destroy a process context
            return;
        }
        validate();
        helpDestroy();
!!!72761143.java!!!	isAlive() : boolean
        return mContext != 0;
!!!72761271.java!!!	safeID(inout o : BaseObj) : long
        if(o != null) {
            return o.getID(this);
        }
        return 0;
