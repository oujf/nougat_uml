class Double3
!!!72630327.java!!!	Double3(inout data : Double3)
        this.x = data.x;
        this.y = data.y;
        this.z = data.z;
!!!72630455.java!!!	Double3(in x : double, in y : double, in z : double)
        this.x = x;
        this.y = y;
        this.z = z;
!!!72630583.java!!!	add(inout a : Double3, inout b : Double3) : Double3
        Double3 res = new Double3();
        res.x = a.x + b.x;
        res.y = a.y + b.y;
        res.z = a.z + b.z;

        return res;
!!!72630711.java!!!	add(inout value : Double3) : void
        x += value.x;
        y += value.y;
        z += value.z;
!!!72630839.java!!!	add(in value : double) : void
        x += value;
        y += value;
        z += value;
!!!72630967.java!!!	add(inout a : Double3, in b : double) : Double3
        Double3 res = new Double3();
        res.x = a.x + b;
        res.y = a.y + b;
        res.z = a.z + b;

        return res;
!!!72631095.java!!!	sub(inout value : Double3) : void
        x -= value.x;
        y -= value.y;
        z -= value.z;
!!!72631223.java!!!	sub(inout a : Double3, inout b : Double3) : Double3
        Double3 res = new Double3();
        res.x = a.x - b.x;
        res.y = a.y - b.y;
        res.z = a.z - b.z;

        return res;
!!!72631351.java!!!	sub(in value : double) : void
        x -= value;
        y -= value;
        z -= value;
!!!72631479.java!!!	sub(inout a : Double3, in b : double) : Double3
        Double3 res = new Double3();
        res.x = a.x - b;
        res.y = a.y - b;
        res.z = a.z - b;

        return res;
!!!72631607.java!!!	mul(inout value : Double3) : void
        x *= value.x;
        y *= value.y;
        z *= value.z;
!!!72631735.java!!!	mul(inout a : Double3, inout b : Double3) : Double3
        Double3 res = new Double3();
        res.x = a.x * b.x;
        res.y = a.y * b.y;
        res.z = a.z * b.z;

        return res;
!!!72631863.java!!!	mul(in value : double) : void
        x *= value;
        y *= value;
        z *= value;
!!!72631991.java!!!	mul(inout a : Double3, in b : double) : Double3
        Double3 res = new Double3();
        res.x = a.x * b;
        res.y = a.y * b;
        res.z = a.z * b;

        return res;
!!!72632119.java!!!	div(inout value : Double3) : void
        x /= value.x;
        y /= value.y;
        z /= value.z;
!!!72632247.java!!!	div(inout a : Double3, inout b : Double3) : Double3
        Double3 res = new Double3();
        res.x = a.x / b.x;
        res.y = a.y / b.y;
        res.z = a.z / b.z;

        return res;
!!!72632375.java!!!	div(in value : double) : void
        x /= value;
        y /= value;
        z /= value;
!!!72632503.java!!!	div(inout a : Double3, in b : double) : Double3
        Double3 res = new Double3();
        res.x = a.x / b;
        res.y = a.y / b;
        res.z = a.z / b;

        return res;
!!!72632631.java!!!	dotProduct(inout a : Double3) : double
        return (x * a.x) + (y * a.y) + (z * a.z);
!!!72632759.java!!!	dotProduct(inout a : Double3, inout b : Double3) : double
        return (b.x * a.x) + (b.y * a.y) + (b.z * a.z);
!!!72632887.java!!!	addMultiple(inout a : Double3, in factor : double) : void
        x += a.x * factor;
        y += a.y * factor;
        z += a.z * factor;
!!!72633015.java!!!	set(inout a : Double3) : void
        this.x = a.x;
        this.y = a.y;
        this.z = a.z;
!!!72633143.java!!!	negate() : void
        x = -x;
        y = -y;
        z = -z;
!!!72633271.java!!!	length() : int
        return 3;
!!!72633399.java!!!	elementSum() : double
        return x + y + z;
!!!72633527.java!!!	get(in i : int) : double
        switch (i) {
        case 0:
            return x;
        case 1:
            return y;
        case 2:
            return z;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!72633655.java!!!	setAt(in i : int, in value : double) : void
        switch (i) {
        case 0:
            x = value;
            return;
        case 1:
            y = value;
            return;
        case 2:
            z = value;
            return;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!72633783.java!!!	addAt(in i : int, in value : double) : void
        switch (i) {
        case 0:
            x += value;
            return;
        case 1:
            y += value;
            return;
        case 2:
            z += value;
            return;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!72633911.java!!!	setValues(in x : double, in y : double, in z : double) : void
        this.x = x;
        this.y = y;
        this.z = z;
!!!72634039.java!!!	copyTo(inout data : double [[]], in offset : int) : void
        data[offset] = x;
        data[offset + 1] = y;
        data[offset + 2] = z;
