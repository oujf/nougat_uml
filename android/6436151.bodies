class Short3
!!!72820663.java!!!	Short3(in i : short)
        this.x = this.y = this.z = i;
!!!72820791.java!!!	Short3(in x : short, in y : short, in z : short)
        this.x = x;
        this.y = y;
        this.z = z;
!!!72820919.java!!!	Short3(inout source : Short3)
        this.x = source.x;
        this.y = source.y;
        this.z = source.z;
!!!72821047.java!!!	add(inout a : Short3) : void
        this.x += a.x;
        this.y += a.y;
        this.z += a.z;
!!!72821175.java!!!	add(inout a : Short3, inout b : Short3) : Short3
        Short3 result = new Short3();
        result.x = (short)(a.x + b.x);
        result.y = (short)(a.y + b.y);
        result.z = (short)(a.z + b.z);

        return result;
!!!72821303.java!!!	add(in value : short) : void
        x += value;
        y += value;
        z += value;
!!!72821431.java!!!	add(inout a : Short3, in b : short) : Short3
        Short3 result = new Short3();
        result.x = (short)(a.x + b);
        result.y = (short)(a.y + b);
        result.z = (short)(a.z + b);

        return result;
!!!72821559.java!!!	sub(inout a : Short3) : void
        this.x -= a.x;
        this.y -= a.y;
        this.z -= a.z;
!!!72821687.java!!!	sub(inout a : Short3, inout b : Short3) : Short3
        Short3 result = new Short3();
        result.x = (short)(a.x - b.x);
        result.y = (short)(a.y - b.y);
        result.z = (short)(a.z - b.z);

        return result;
!!!72821815.java!!!	sub(in value : short) : void
        x -= value;
        y -= value;
        z -= value;
!!!72821943.java!!!	sub(inout a : Short3, in b : short) : Short3
        Short3 result = new Short3();
        result.x = (short)(a.x - b);
        result.y = (short)(a.y - b);
        result.z = (short)(a.z - b);

        return result;
!!!72822071.java!!!	mul(inout a : Short3) : void
        this.x *= a.x;
        this.y *= a.y;
        this.z *= a.z;
!!!72822199.java!!!	mul(inout a : Short3, inout b : Short3) : Short3
        Short3 result = new Short3();
        result.x = (short)(a.x * b.x);
        result.y = (short)(a.y * b.y);
        result.z = (short)(a.z * b.z);

        return result;
!!!72822327.java!!!	mul(in value : short) : void
        x *= value;
        y *= value;
        z *= value;
!!!72822455.java!!!	mul(inout a : Short3, in b : short) : Short3
        Short3 result = new Short3();
        result.x = (short)(a.x * b);
        result.y = (short)(a.y * b);
        result.z = (short)(a.z * b);

        return result;
!!!72822583.java!!!	div(inout a : Short3) : void
        this.x /= a.x;
        this.y /= a.y;
        this.z /= a.z;
!!!72822711.java!!!	div(inout a : Short3, inout b : Short3) : Short3
        Short3 result = new Short3();
        result.x = (short)(a.x / b.x);
        result.y = (short)(a.y / b.y);
        result.z = (short)(a.z / b.z);

        return result;
!!!72822839.java!!!	div(in value : short) : void
        x /= value;
        y /= value;
        z /= value;
!!!72822967.java!!!	div(inout a : Short3, in b : short) : Short3
        Short3 result = new Short3();
        result.x = (short)(a.x / b);
        result.y = (short)(a.y / b);
        result.z = (short)(a.z / b);

        return result;
!!!72823095.java!!!	mod(inout a : Short3) : void
        this.x %= a.x;
        this.y %= a.y;
        this.z %= a.z;
!!!72823223.java!!!	mod(inout a : Short3, inout b : Short3) : Short3
        Short3 result = new Short3();
        result.x = (short)(a.x % b.x);
        result.y = (short)(a.y % b.y);
        result.z = (short)(a.z % b.z);

        return result;
!!!72823351.java!!!	mod(in value : short) : void
        x %= value;
        y %= value;
        z %= value;
!!!72823479.java!!!	mod(inout a : Short3, in b : short) : Short3
        Short3 result = new Short3();
        result.x = (short)(a.x % b);
        result.y = (short)(a.y % b);
        result.z = (short)(a.z % b);

        return result;
!!!72823607.java!!!	length() : short
        return 3;
!!!72823735.java!!!	negate() : void
        this.x = (short)(-x);
        this.y = (short)(-y);
        this.z = (short)(-z);
!!!72823863.java!!!	dotProduct(inout a : Short3) : short
        return (short)((x * a.x) + (y * a.y) + (z * a.z));
!!!72823991.java!!!	dotProduct(inout a : Short3, inout b : Short3) : short
        return (short)((b.x * a.x) + (b.y * a.y) + (b.z * a.z));
!!!72824119.java!!!	addMultiple(inout a : Short3, in factor : short) : void
        x += a.x * factor;
        y += a.y * factor;
        z += a.z * factor;
!!!72824247.java!!!	set(inout a : Short3) : void
        this.x = a.x;
        this.y = a.y;
        this.z = a.z;
!!!72824375.java!!!	setValues(in a : short, in b : short, in c : short) : void
        this.x = a;
        this.y = b;
        this.z = c;
!!!72824503.java!!!	elementSum() : short
        return (short)(x + y + z);
!!!72824631.java!!!	get(in i : int) : short
        switch (i) {
        case 0:
            return (short)(x);
        case 1:
            return (short)(y);
        case 2:
            return (short)(z);
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!72824759.java!!!	setAt(in i : int, in value : short) : void
        switch (i) {
        case 0:
            x = value;
            return;
        case 1:
            y = value;
            return;
        case 2:
            z = value;
            return;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!72824887.java!!!	addAt(in i : int, in value : short) : void
        switch (i) {
        case 0:
            x += value;
            return;
        case 1:
            y += value;
            return;
        case 2:
            z += value;
            return;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!72825015.java!!!	copyTo(inout data : short [[]], in offset : int) : void
        data[offset] = (short)(x);
        data[offset + 1] = (short)(y);
        data[offset + 2] = (short)(z);
