class Long4
!!!72699319.java!!!	Long4(in i : long)
        this.x = this.y = this.z = this.w = i;
!!!72699447.java!!!	Long4(in x : long, in y : long, in z : long, in w : long)
        this.x = x;
        this.y = y;
        this.z = z;
        this.w = w;
!!!72699575.java!!!	Long4(inout source : Long4)
        this.x = source.x;
        this.y = source.y;
        this.z = source.z;
        this.w = source.w;
!!!72699703.java!!!	add(inout a : Long4) : void
        this.x += a.x;
        this.y += a.y;
        this.z += a.z;
        this.w += a.w;
!!!72699831.java!!!	add(inout a : Long4, inout b : Long4) : Long4
        Long4 result = new Long4();
        result.x = a.x + b.x;
        result.y = a.y + b.y;
        result.z = a.z + b.z;
        result.w = a.w + b.w;

        return result;
!!!72699959.java!!!	add(in value : long) : void
        x += value;
        y += value;
        z += value;
        w += value;
!!!72700087.java!!!	add(inout a : Long4, in b : long) : Long4
        Long4 result = new Long4();
        result.x = a.x + b;
        result.y = a.y + b;
        result.z = a.z + b;
        result.w = a.w + b;

        return result;
!!!72700215.java!!!	sub(inout a : Long4) : void
        this.x -= a.x;
        this.y -= a.y;
        this.z -= a.z;
        this.w -= a.w;
!!!72700343.java!!!	sub(inout a : Long4, inout b : Long4) : Long4
        Long4 result = new Long4();
        result.x = a.x - b.x;
        result.y = a.y - b.y;
        result.z = a.z - b.z;
        result.w = a.w - b.w;

        return result;
!!!72700471.java!!!	sub(in value : long) : void
        x -= value;
        y -= value;
        z -= value;
        w -= value;
!!!72700599.java!!!	sub(inout a : Long4, in b : long) : Long4
        Long4 result = new Long4();
        result.x = a.x - b;
        result.y = a.y - b;
        result.z = a.z - b;
        result.w = a.w - b;

        return result;
!!!72700727.java!!!	mul(inout a : Long4) : void
        this.x *= a.x;
        this.y *= a.y;
        this.z *= a.z;
        this.w *= a.w;
!!!72700855.java!!!	mul(inout a : Long4, inout b : Long4) : Long4
        Long4 result = new Long4();
        result.x = a.x * b.x;
        result.y = a.y * b.y;
        result.z = a.z * b.z;
        result.w = a.w * b.w;

        return result;
!!!72700983.java!!!	mul(in value : long) : void
        x *= value;
        y *= value;
        z *= value;
        w *= value;
!!!72701111.java!!!	mul(inout a : Long4, in b : long) : Long4
        Long4 result = new Long4();
        result.x = a.x * b;
        result.y = a.y * b;
        result.z = a.z * b;
        result.w = a.w * b;

        return result;
!!!72701239.java!!!	div(inout a : Long4) : void
        this.x /= a.x;
        this.y /= a.y;
        this.z /= a.z;
        this.w /= a.w;
!!!72701367.java!!!	div(inout a : Long4, inout b : Long4) : Long4
        Long4 result = new Long4();
        result.x = a.x / b.x;
        result.y = a.y / b.y;
        result.z = a.z / b.z;
        result.w = a.w / b.w;

        return result;
!!!72701495.java!!!	div(in value : long) : void
        x /= value;
        y /= value;
        z /= value;
        w /= value;
!!!72701623.java!!!	div(inout a : Long4, in b : long) : Long4
        Long4 result = new Long4();
        result.x = a.x / b;
        result.y = a.y / b;
        result.z = a.z / b;
        result.w = a.w / b;

        return result;
!!!72701751.java!!!	mod(inout a : Long4) : void
        this.x %= a.x;
        this.y %= a.y;
        this.z %= a.z;
        this.w %= a.w;
!!!72701879.java!!!	mod(inout a : Long4, inout b : Long4) : Long4
        Long4 result = new Long4();
        result.x = a.x % b.x;
        result.y = a.y % b.y;
        result.z = a.z % b.z;
        result.w = a.w % b.w;

        return result;
!!!72702007.java!!!	mod(in value : long) : void
        x %= value;
        y %= value;
        z %= value;
        w %= value;
!!!72702135.java!!!	mod(inout a : Long4, in b : long) : Long4
        Long4 result = new Long4();
        result.x = a.x % b;
        result.y = a.y % b;
        result.z = a.z % b;
        result.w = a.w % b;

        return result;
!!!72702263.java!!!	length() : long
        return 4;
!!!72702391.java!!!	negate() : void
        this.x = -x;
        this.y = -y;
        this.z = -z;
        this.w = -w;
!!!72702519.java!!!	dotProduct(inout a : Long4) : long
        return (long)((x * a.x) + (y * a.y) + (z * a.z) + (w * a.w));
!!!72702647.java!!!	dotProduct(inout a : Long4, inout b : Long4) : long
        return (long)((b.x * a.x) + (b.y * a.y) + (b.z * a.z) + (b.w * a.w));
!!!72702775.java!!!	addMultiple(inout a : Long4, in factor : long) : void
        x += a.x * factor;
        y += a.y * factor;
        z += a.z * factor;
        w += a.w * factor;
!!!72702903.java!!!	set(inout a : Long4) : void
        this.x = a.x;
        this.y = a.y;
        this.z = a.z;
        this.w = a.w;
!!!72703031.java!!!	setValues(in a : long, in b : long, in c : long, in d : long) : void
        this.x = a;
        this.y = b;
        this.z = c;
        this.w = d;
!!!72703159.java!!!	elementSum() : long
        return (long)(x + y + z + w);
!!!72703287.java!!!	get(in i : int) : long
        switch (i) {
        case 0:
            return (long)(x);
        case 1:
            return (long)(y);
        case 2:
            return (long)(z);
        case 3:
            return (long)(w);
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!72703415.java!!!	setAt(in i : int, in value : long) : void
        switch (i) {
        case 0:
            x = value;
            return;
        case 1:
            y = value;
            return;
        case 2:
            z = value;
            return;
        case 3:
            w = value;
            return;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!72703543.java!!!	addAt(in i : int, in value : long) : void
        switch (i) {
        case 0:
            x += value;
            return;
        case 1:
            y += value;
            return;
        case 2:
            z += value;
            return;
        case 3:
            w += value;
            return;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!72703671.java!!!	copyTo(inout data : long [[]], in offset : int) : void
        data[offset] = (long)(x);
        data[offset + 1] = (long)(y);
        data[offset + 2] = (long)(z);
        data[offset + 3] = (long)(w);
