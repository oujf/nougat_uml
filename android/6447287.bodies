class ScriptIntrinsicConvolve5x5
!!!72810679.java!!!	ScriptIntrinsicConvolve5x5(in id : long, inout rs : RenderScript)
        super(id, rs);
!!!72810807.java!!!	create(inout rs : RenderScript, inout e : Element) : ScriptIntrinsicConvolve5x5
        if (!e.isCompatible(Element.U8(rs)) &&
            !e.isCompatible(Element.U8_2(rs)) &&
            !e.isCompatible(Element.U8_3(rs)) &&
            !e.isCompatible(Element.U8_4(rs)) &&
            !e.isCompatible(Element.F32(rs)) &&
            !e.isCompatible(Element.F32_2(rs)) &&
            !e.isCompatible(Element.F32_3(rs)) &&
            !e.isCompatible(Element.F32_4(rs))) {
            throw new RSIllegalArgumentException("Unsuported element type.");
        }

        long id = rs.nScriptIntrinsicCreate(4, e.getID(rs));
        return new ScriptIntrinsicConvolve5x5(id, rs);

!!!72810935.java!!!	setInput(inout ain : Allocation) : void
        mInput = ain;
        setVar(1, ain);
!!!72811063.java!!!	setCoefficients(inout v : float [[]]) : void
        FieldPacker fp = new FieldPacker(25*4);
        for (int ct=0; ct < mValues.length; ct++) {
            mValues[ct] = v[ct];
            fp.addF32(mValues[ct]);
        }
        setVar(0, fp);
!!!72811191.java!!!	forEach(inout aout : Allocation) : void
        forEach(0, (Allocation) null, aout, null);
!!!72811319.java!!!	forEach(inout aout : Allocation, inout opt : Script::LaunchOptions) : void
        forEach(0, (Allocation) null, aout, null, opt);
!!!72811447.java!!!	getKernelID() : Script::KernelID
        return createKernelID(0, 2, null, null);
!!!72811575.java!!!	getFieldID_Input() : Script::FieldID
        return createFieldID(1, null);
