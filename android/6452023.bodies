class AutoclickController
!!!72878775.java!!!	AutoclickController(inout context : Context, in userId : int)
        mContext = context;
        mUserId = userId;
!!!72878903.java!!!	onMotionEvent(inout event : MotionEvent, inout rawEvent : MotionEvent, in policyFlags : int) : void
        if (event.isFromSource(InputDevice.SOURCE_MOUSE)) {
            if (mClickScheduler == null) {
                Handler handler = new Handler(mContext.getMainLooper());
                mClickScheduler =
                        new ClickScheduler(handler, AccessibilityManager.AUTOCLICK_DELAY_DEFAULT);
                mClickDelayObserver = new ClickDelayObserver(mUserId, handler);
                mClickDelayObserver.start(mContext.getContentResolver(), mClickScheduler);
            }

            handleMouseMotion(event, policyFlags);
        } else if (mClickScheduler != null) {
            mClickScheduler.cancel();
        }

        if (mNext != null) {
            mNext.onMotionEvent(event, rawEvent, policyFlags);
        }
!!!72879031.java!!!	onKeyEvent(inout event : KeyEvent, in policyFlags : int) : void
        if (mClickScheduler != null) {
            if (KeyEvent.isModifierKey(event.getKeyCode())) {
                mClickScheduler.updateMetaState(event.getMetaState());
            } else {
                mClickScheduler.cancel();
            }
        }

        if (mNext != null) {
          mNext.onKeyEvent(event, policyFlags);
        }
!!!72879159.java!!!	onAccessibilityEvent(inout event : AccessibilityEvent) : void
        if (mNext != null) {
            mNext.onAccessibilityEvent(event);
        }
!!!72879287.java!!!	setNext(inout next : EventStreamTransformation) : void
        mNext = next;
!!!72879415.java!!!	clearEvents(in inputSource : int) : void
        if (inputSource == InputDevice.SOURCE_MOUSE && mClickScheduler != null) {
            mClickScheduler.cancel();
        }

        if (mNext != null) {
            mNext.clearEvents(inputSource);
        }
!!!72879543.java!!!	onDestroy() : void
        if (mClickDelayObserver != null) {
            mClickDelayObserver.stop();
            mClickDelayObserver = null;
        }
        if (mClickScheduler != null) {
            mClickScheduler.cancel();
            mClickScheduler = null;
        }
!!!72879671.java!!!	handleMouseMotion(inout event : MotionEvent, in policyFlags : int) : void
        switch (event.getActionMasked()) {
            case MotionEvent.ACTION_HOVER_MOVE: {
                if (event.getPointerCount() == 1) {
                    mClickScheduler.update(event, policyFlags);
                } else {
                    mClickScheduler.cancel();
                }
            } break;
            // Ignore hover enter and exit.
            case MotionEvent.ACTION_HOVER_ENTER:
            case MotionEvent.ACTION_HOVER_EXIT:
                break;
            default:
                mClickScheduler.cancel();
        }
