class SpecAnimationBridge
!!!72890295.java!!!	SpecAnimationBridge(inout context : Context, inout lock : Object)
            mLock = lock;
            final Looper mainLooper = context.getMainLooper();
            mMainThreadId = mainLooper.getThread().getId();

            mHandler = new UpdateHandler(context);
            mWindowManager = LocalServices.getService(WindowManagerInternal.class);

            final MagnificationSpecProperty property = new MagnificationSpecProperty();
            final MagnificationSpecEvaluator evaluator = new MagnificationSpecEvaluator();
            final long animationDuration = context.getResources().getInteger(
                    R.integer.config_longAnimTime);
            mTransformationAnimator = ObjectAnimator.ofObject(this, property, evaluator,
                    mSentMagnificationSpec);
            mTransformationAnimator.setDuration(animationDuration);
            mTransformationAnimator.setInterpolator(new DecelerateInterpolator(2.5f));
!!!72890423.java!!!	setEnabled(inout enabled : boolean) : void
            synchronized (mLock) {
                if (enabled != mEnabled) {
                    mEnabled = enabled;
                    if (!mEnabled) {
                        mSentMagnificationSpec.clear();
                        mWindowManager.setMagnificationSpec(mSentMagnificationSpec);
                    }
                }
            }
!!!72890551.java!!!	updateSentSpec(inout spec : MagnificationSpec, inout animate : boolean) : void
            if (Thread.currentThread().getId() == mMainThreadId) {
                // Already on the main thread, don't bother proxying.
                updateSentSpecInternal(spec, animate);
            } else {
                mHandler.obtainMessage(ACTION_UPDATE_SPEC,
                        animate ? 1 : 0, 0, spec).sendToTarget();
            }
!!!72890679.java!!!	updateSentSpecInternal(inout spec : MagnificationSpec, inout animate : boolean) : void
            if (mTransformationAnimator.isRunning()) {
                mTransformationAnimator.cancel();
            }

            // If the current and sent specs don't match, update the sent spec.
            synchronized (mLock) {
                final boolean changed = !mSentMagnificationSpec.equals(spec);
                if (changed) {
                    if (animate) {
                        animateMagnificationSpecLocked(spec);
                    } else {
                        setMagnificationSpecLocked(spec);
                    }
                }
            }
!!!72890807.java!!!	animateMagnificationSpecLocked(inout toSpec : MagnificationSpec) : void
            mTransformationAnimator.setObjectValues(mSentMagnificationSpec, toSpec);
            mTransformationAnimator.start();
!!!72890935.java!!!	setMagnificationSpecLocked(inout spec : MagnificationSpec) : void
            if (mEnabled) {
                if (DEBUG_SET_MAGNIFICATION_SPEC) {
                    Slog.i(LOG_TAG, "Sending: " + spec);
                }

                mSentMagnificationSpec.setTo(spec);
                mWindowManager.setMagnificationSpec(spec);
            }
