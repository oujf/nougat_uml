class ComputeWorker
!!!73020983.java!!!	ComputeWorker(in start : int, in end : int, in step : int, inout bitmaps : List<Bitmap>, in pixelCount : int, inout results : List<WorkerResult>, inout signal : CountDownLatch)
            mStart = start;
            mEnd = end;
            mStep = step;
            mBitmaps = bitmaps;
            mResults = results;
            mSignal = signal;

            // Minimum number of pixels we want to be able to pack
            int threshold = (int) (pixelCount * PACKING_THRESHOLD);
            // Make sure we can find at least one configuration
            while (threshold > MAX_SIZE * MAX_SIZE) {
                threshold >>= 1;
            }
            mThreshold = threshold;
!!!73021111.java!!!	run() : void
            if (DEBUG_ATLAS) Log.d(LOG_TAG, "Running " + Thread.currentThread().getName());

            Atlas.Entry entry = new Atlas.Entry();

            for (int width = mEnd; width > mStart; width -= mStep) {
                for (int height = MAX_SIZE; height > MIN_SIZE; height -= STEP) {
                    // If the atlas is not big enough, skip it
                    if (width * height <= mThreshold) continue;

                    boolean packSuccess = false;

                    for (Atlas.Type type : Atlas.Type.values()) {
                        final int count = packBitmaps(type, width, height, entry);
                        if (count > 0) {
                            mResults.add(new WorkerResult(type, width, height, count));
                            if (count == mBitmaps.size()) {
                                // If we were able to pack everything let's stop here
                                // Changing the type further won't make things better
                                packSuccess = true;
                                break;
                            }
                        }
                    }

                    // If we were not able to pack everything let's stop here
                    // Decreasing the height further won't make things better
                    if (!packSuccess) {
                        break;
                    }
                }
            }

            if (mSignal != null) {
                mSignal.countDown();
            }
!!!73021239.java!!!	packBitmaps(inout type : Atlas::Type, in width : int, in height : int, inout entry : Atlas::Entry) : int
            int total = 0;
            Atlas atlas = new Atlas(type, width, height);

            final int count = mBitmaps.size();
            for (int i = 0; i < count; i++) {
                final Bitmap bitmap = mBitmaps.get(i);
                if (atlas.pack(bitmap.getWidth(), bitmap.getHeight(), entry) != null) {
                    total++;
                }
            }

            return total;
