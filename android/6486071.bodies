class LockSettingsStrongAuth
!!!73149367.java!!!	LockSettingsStrongAuth(inout context : Context)
        mDefaultStrongAuthFlags = StrongAuthTracker.getDefaultFlags(context);
!!!73149495.java!!!	handleAddStrongAuthTracker(inout tracker : IStrongAuthTracker) : void
        for (int i = 0; i < mStrongAuthTrackers.size(); i++) {
            if (mStrongAuthTrackers.get(i).asBinder() == tracker.asBinder()) {
                return;
            }
        }
        mStrongAuthTrackers.add(tracker);

        for (int i = 0; i < mStrongAuthForUser.size(); i++) {
            int key = mStrongAuthForUser.keyAt(i);
            int value = mStrongAuthForUser.valueAt(i);
            try {
                tracker.onStrongAuthRequiredChanged(value, key);
            } catch (RemoteException e) {
                Slog.e(TAG, "Exception while adding StrongAuthTracker.", e);
            }
        }
!!!73149623.java!!!	handleRemoveStrongAuthTracker(inout tracker : IStrongAuthTracker) : void
        for (int i = 0; i < mStrongAuthTrackers.size(); i++) {
            if (mStrongAuthTrackers.get(i).asBinder() == tracker.asBinder()) {
                mStrongAuthTrackers.remove(i);
                return;
            }
        }
!!!73149751.java!!!	handleRequireStrongAuth(in strongAuthReason : int, in userId : int) : void
        if (userId == UserHandle.USER_ALL) {
            for (int i = 0; i < mStrongAuthForUser.size(); i++) {
                int key = mStrongAuthForUser.keyAt(i);
                handleRequireStrongAuthOneUser(strongAuthReason, key);
            }
        } else {
            handleRequireStrongAuthOneUser(strongAuthReason, userId);
        }
!!!73149879.java!!!	handleRequireStrongAuthOneUser(in strongAuthReason : int, in userId : int) : void
        int oldValue = mStrongAuthForUser.get(userId, mDefaultStrongAuthFlags);
        int newValue = strongAuthReason == STRONG_AUTH_NOT_REQUIRED
                ? STRONG_AUTH_NOT_REQUIRED
                : (oldValue | strongAuthReason);
        if (oldValue != newValue) {
            mStrongAuthForUser.put(userId, newValue);
            notifyStrongAuthTrackers(newValue, userId);
        }
!!!73150007.java!!!	handleRemoveUser(in userId : int) : void
        int index = mStrongAuthForUser.indexOfKey(userId);
        if (index >= 0) {
            mStrongAuthForUser.removeAt(index);
            notifyStrongAuthTrackers(mDefaultStrongAuthFlags, userId);
        }
!!!73150135.java!!!	notifyStrongAuthTrackers(in strongAuthReason : int, in userId : int) : void
        for (int i = 0; i < mStrongAuthTrackers.size(); i++) {
            try {
                mStrongAuthTrackers.get(i).onStrongAuthRequiredChanged(strongAuthReason, userId);
            } catch (DeadObjectException e) {
                Slog.d(TAG, "Removing dead StrongAuthTracker.");
                mStrongAuthTrackers.remove(i);
                i--;
            } catch (RemoteException e) {
                Slog.e(TAG, "Exception while notifying StrongAuthTracker.", e);
            }
        }
!!!73150263.java!!!	registerStrongAuthTracker(inout tracker : IStrongAuthTracker) : void
        mHandler.obtainMessage(MSG_REGISTER_TRACKER, tracker).sendToTarget();
!!!73150391.java!!!	unregisterStrongAuthTracker(inout tracker : IStrongAuthTracker) : void
        mHandler.obtainMessage(MSG_UNREGISTER_TRACKER, tracker).sendToTarget();
!!!73150519.java!!!	removeUser(in userId : int) : void
        mHandler.obtainMessage(MSG_REMOVE_USER, userId, 0).sendToTarget();
!!!73150647.java!!!	requireStrongAuth(in strongAuthReason : int, in userId : int) : void
        if (userId == UserHandle.USER_ALL || userId >= UserHandle.USER_SYSTEM) {
            mHandler.obtainMessage(MSG_REQUIRE_STRONG_AUTH, strongAuthReason,
                    userId).sendToTarget();
        } else {
            throw new IllegalArgumentException(
                    "userId must be an explicit user id or USER_ALL");
        }
!!!73150775.java!!!	reportUnlock(in userId : int) : void
        requireStrongAuth(STRONG_AUTH_NOT_REQUIRED, userId);
