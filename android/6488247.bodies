class HandlerChecker
!!!73154743.java!!!	HandlerChecker(inout handler : Handler, inout name : String, in waitMaxMillis : long)
            mHandler = handler;
            mName = name;
            mWaitMax = waitMaxMillis;
            mCompleted = true;
!!!73154871.java!!!	addMonitor(inout monitor : Watchdog::Monitor) : void
            mMonitors.add(monitor);
!!!73154999.java!!!	scheduleCheckLocked() : void
            if (mMonitors.size() == 0 && mHandler.getLooper().getQueue().isPolling()) {
                // If the target looper has recently been polling, then
                // there is no reason to enqueue our checker on it since that
                // is as good as it not being deadlocked.  This avoid having
                // to do a context switch to check the thread.  Note that we
                // only do this if mCheckReboot is false and we have no
                // monitors, since those would need to be executed at this point.
                mCompleted = true;
                return;
            }

            if (!mCompleted) {
                // we already have a check in flight, so no need
                return;
            }

            mCompleted = false;
            mCurrentMonitor = null;
            mStartTime = SystemClock.uptimeMillis();
            mHandler.postAtFrontOfQueue(this);
!!!73155127.java!!!	isOverdueLocked() : boolean
            return (!mCompleted) && (SystemClock.uptimeMillis() > mStartTime + mWaitMax);
!!!73155255.java!!!	getCompletionStateLocked() : int
            if (mCompleted) {
                return COMPLETED;
            } else {
                long latency = SystemClock.uptimeMillis() - mStartTime;
                if (latency < mWaitMax/2) {
                    return WAITING;
                } else if (latency < mWaitMax) {
                    return WAITED_HALF;
                }
            }
            return OVERDUE;
!!!73155383.java!!!	getThread() : Thread
            return mHandler.getLooper().getThread();
!!!73155511.java!!!	getName() : String
            return mName;
!!!73155639.java!!!	describeBlockedStateLocked() : String
            if (mCurrentMonitor == null) {
                return "Blocked in handler on " + mName + " (" + getThread().getName() + ")";
            } else {
                return "Blocked in monitor " + mCurrentMonitor.getClass().getName()
                        + " on " + mName + " (" + getThread().getName() + ")";
            }
!!!73155767.java!!!	run() : void
            final int size = mMonitors.size();
            for (int i = 0 ; i < size ; i++) {
                synchronized (Watchdog.this) {
                    mCurrentMonitor = mMonitors.get(i);
                }
                mCurrentMonitor.monitor();
            }

            synchronized (Watchdog.this) {
                mCompleted = true;
                mCurrentMonitor = null;
            }
