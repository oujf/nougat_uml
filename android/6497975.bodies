class Vibration
!!!73248183.java!!!	Vibration(inout token : IBinder, in millis : long, in usageHint : int, in uid : int, inout opPkg : String)
            this(token, millis, null, 0, usageHint, uid, opPkg);
!!!73248311.java!!!	Vibration(inout token : IBinder, inout pattern : long [[]], in repeat : int, in usageHint : int, in uid : int, inout opPkg : String)
            this(token, 0, pattern, repeat, usageHint, uid, opPkg);
!!!73248439.java!!!	Vibration(inout token : IBinder, in millis : long, inout pattern : long [[]], in repeat : int, in usageHint : int, in uid : int, inout opPkg : String)
            mToken = token;
            mTimeout = millis;
            mStartTime = SystemClock.uptimeMillis();
            mPattern = pattern;
            mRepeat = repeat;
            mUsageHint = usageHint;
            mUid = uid;
            mOpPkg = opPkg;
!!!73248567.java!!!	binderDied() : void
            synchronized (mVibrations) {
                mVibrations.remove(this);
                if (this == mCurrentVibration) {
                    doCancelVibrateLocked();
                    startNextVibrationLocked();
                }
            }
!!!73248695.java!!!	hasLongerTimeout(in millis : long) : boolean
            if (mTimeout == 0) {
                // This is a pattern, return false to play the simple
                // vibration.
                return false;
            }
            if ((mStartTime + mTimeout)
                    < (SystemClock.uptimeMillis() + millis)) {
                // If this vibration will end before the time passed in, let
                // the new vibration play.
                return false;
            }
            return true;
!!!73248823.java!!!	isSystemHapticFeedback() : boolean
            return (mUid == Process.SYSTEM_UID || mUid == 0 || SYSTEM_UI_PACKAGE.equals(mOpPkg))
                    && mRepeat < 0;
