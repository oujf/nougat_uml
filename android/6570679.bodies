class DelayedDiskWrite
!!!74058423.java!!!	write(in filePath : String, in w : DelayedDiskWrite::Writer) : void
        write(filePath, w, true);
!!!74058551.java!!!	write(in filePath : String, in w : DelayedDiskWrite::Writer, in open : boolean) : void
        if (TextUtils.isEmpty(filePath)) {
            throw new IllegalArgumentException("empty file path");
        }

        /* Do a delayed write to disk on a separate handler thread */
        synchronized (this) {
            if (++mWriteSequence == 1) {
                mDiskWriteHandlerThread = new HandlerThread("DelayedDiskWriteThread");
                mDiskWriteHandlerThread.start();
                mDiskWriteHandler = new Handler(mDiskWriteHandlerThread.getLooper());
            }
        }

        mDiskWriteHandler.post(new Runnable() {
            @Override
            public void run() {
                doWrite(filePath, w, open);
            }
        });
!!!74058679.java!!!	doWrite(inout filePath : String, inout w : DelayedDiskWrite::Writer, inout open : boolean) : void
        DataOutputStream out = null;
        try {
            if (open) {
                out = new DataOutputStream(new BufferedOutputStream(
                        new FileOutputStream(filePath)));
            }
            w.onWriteCalled(out);
        } catch (IOException e) {
            loge("Error writing data file " + filePath);
        } finally {
            if (out != null) {
                try {
                    out.close();
                } catch (Exception e) {}
            }

            // Quit if no more writes sent
            synchronized (this) {
                if (--mWriteSequence == 0) {
                    mDiskWriteHandler.getLooper().quit();
                    mDiskWriteHandler = null;
                    mDiskWriteHandlerThread = null;
                }
            }
        }
!!!74058807.java!!!	loge(inout s : String) : void
        Log.e(TAG, s);
