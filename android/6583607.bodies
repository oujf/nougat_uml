class PackageSettingBase
!!!74339895.java!!!	PackageSettingBase(inout name : String, inout realName : String, inout codePath : File, inout resourcePath : File, inout legacyNativeLibraryPathString : String, inout primaryCpuAbiString : String, inout secondaryCpuAbiString : String, inout cpuAbiOverrideString : String, in pVersionCode : int, in pkgFlags : int, in pkgPrivateFlags : int, inout parentPackageName : String, inout childPackageNames : List<String>)
        super(pkgFlags, pkgPrivateFlags);
        this.name = name;
        this.realName = realName;
        this.parentPackageName = parentPackageName;
        this.childPackageNames = (childPackageNames != null)
                ? new ArrayList<>(childPackageNames) : null;
        init(codePath, resourcePath, legacyNativeLibraryPathString, primaryCpuAbiString,
                secondaryCpuAbiString, cpuAbiOverrideString, pVersionCode);
!!!74340023.java!!!	PackageSettingBase(inout base : PackageSettingBase)
        super(base);

        name = base.name;
        realName = base.realName;
        codePath = base.codePath;
        codePathString = base.codePathString;
        resourcePath = base.resourcePath;
        resourcePathString = base.resourcePathString;
        legacyNativeLibraryPathString = base.legacyNativeLibraryPathString;
        primaryCpuAbiString = base.primaryCpuAbiString;
        secondaryCpuAbiString = base.secondaryCpuAbiString;
        cpuAbiOverrideString = base.cpuAbiOverrideString;
        timeStamp = base.timeStamp;
        firstInstallTime = base.firstInstallTime;
        lastUpdateTime = base.lastUpdateTime;
        versionCode = base.versionCode;

        uidError = base.uidError;

        signatures = new PackageSignatures(base.signatures);

        installPermissionsFixed = base.installPermissionsFixed;
        userState.clear();
        for (int i=0; i<base.userState.size(); i++) {
            userState.put(base.userState.keyAt(i),
                    new PackageUserState(base.userState.valueAt(i)));
        }
        installStatus = base.installStatus;

        origPackage = base.origPackage;

        installerPackageName = base.installerPackageName;
        isOrphaned = base.isOrphaned;
        volumeUuid = base.volumeUuid;

        keySetData = new PackageKeySetData(base.keySetData);

        parentPackageName = base.parentPackageName;
        childPackageNames = (base.childPackageNames != null)
                ? new ArrayList<>(base.childPackageNames) : null;
!!!74340151.java!!!	init(inout codePath : File, inout resourcePath : File, inout legacyNativeLibraryPathString : String, inout primaryCpuAbiString : String, inout secondaryCpuAbiString : String, inout cpuAbiOverrideString : String, in pVersionCode : int) : void
        this.codePath = codePath;
        this.codePathString = codePath.toString();
        this.resourcePath = resourcePath;
        this.resourcePathString = resourcePath.toString();
        this.legacyNativeLibraryPathString = legacyNativeLibraryPathString;
        this.primaryCpuAbiString = primaryCpuAbiString;
        this.secondaryCpuAbiString = secondaryCpuAbiString;
        this.cpuAbiOverrideString = cpuAbiOverrideString;
        this.versionCode = pVersionCode;
!!!74340279.java!!!	setInstallerPackageName(inout packageName : String) : void
        installerPackageName = packageName;
!!!74340407.java!!!	getInstallerPackageName() : String
        return installerPackageName;
!!!74340535.java!!!	setVolumeUuid(inout volumeUuid : String) : void
        this.volumeUuid = volumeUuid;
!!!74340663.java!!!	getVolumeUuid() : String
        return volumeUuid;
!!!74340791.java!!!	setInstallStatus(in newStatus : int) : void
        installStatus = newStatus;
!!!74340919.java!!!	getInstallStatus() : int
        return installStatus;
!!!74341047.java!!!	setTimeStamp(in newStamp : long) : void
        timeStamp = newStamp;
!!!74341175.java!!!	copyFrom(inout base : PackageSettingBase) : void
        mPermissionsState.copyFrom(base.mPermissionsState);
        primaryCpuAbiString = base.primaryCpuAbiString;
        secondaryCpuAbiString = base.secondaryCpuAbiString;
        cpuAbiOverrideString = base.cpuAbiOverrideString;
        timeStamp = base.timeStamp;
        firstInstallTime = base.firstInstallTime;
        lastUpdateTime = base.lastUpdateTime;
        signatures = base.signatures;
        installPermissionsFixed = base.installPermissionsFixed;
        userState.clear();
        for (int i=0; i<base.userState.size(); i++) {
            userState.put(base.userState.keyAt(i), base.userState.valueAt(i));
        }
        installStatus = base.installStatus;
        keySetData = base.keySetData;
        verificationInfo = base.verificationInfo;
        installerPackageName = base.installerPackageName;
        volumeUuid = base.volumeUuid;
!!!74341303.java!!!	modifyUserState(in userId : int) : PackageUserState
        PackageUserState state = userState.get(userId);
        if (state == null) {
            state = new PackageUserState();
            userState.put(userId, state);
        }
        return state;
!!!74341431.java!!!	readUserState(in userId : int) : PackageUserState
        PackageUserState state = userState.get(userId);
        if (state != null) {
            return state;
        }
        return DEFAULT_USER_STATE;
!!!74341559.java!!!	setEnabled(in state : int, in userId : int, inout callingPackage : String) : void
        PackageUserState st = modifyUserState(userId);
        st.enabled = state;
        st.lastDisableAppCaller = callingPackage;
!!!74341687.java!!!	getEnabled(in userId : int) : int
        return readUserState(userId).enabled;
!!!74341815.java!!!	getLastDisabledAppCaller(in userId : int) : String
        return readUserState(userId).lastDisableAppCaller;
!!!74341943.java!!!	setInstalled(inout inst : boolean, in userId : int) : void
        modifyUserState(userId).installed = inst;
!!!74342071.java!!!	getInstalled(in userId : int) : boolean
        return readUserState(userId).installed;
!!!74342199.java!!!	isAnyInstalled(inout users : int [[]]) : boolean
        for (int user: users) {
            if (readUserState(user).installed) {
                return true;
            }
        }
        return false;
!!!74342327.java!!!	queryInstalledUsers(inout users : int [[]], inout installed : boolean) : int
        int num = 0;
        for (int user : users) {
            if (getInstalled(user) == installed) {
                num++;
            }
        }
        int[] res = new int[num];
        num = 0;
        for (int user : users) {
            if (getInstalled(user) == installed) {
                res[num] = user;
                num++;
            }
        }
        return res;
!!!74342455.java!!!	getCeDataInode(in userId : int) : long
        return readUserState(userId).ceDataInode;
!!!74342583.java!!!	setCeDataInode(in ceDataInode : long, in userId : int) : void
        modifyUserState(userId).ceDataInode = ceDataInode;
!!!74342711.java!!!	getStopped(in userId : int) : boolean
        return readUserState(userId).stopped;
!!!74342839.java!!!	setStopped(inout stop : boolean, in userId : int) : void
        modifyUserState(userId).stopped = stop;
!!!74342967.java!!!	getNotLaunched(in userId : int) : boolean
        return readUserState(userId).notLaunched;
!!!74343095.java!!!	setNotLaunched(inout stop : boolean, in userId : int) : void
        modifyUserState(userId).notLaunched = stop;
!!!74343223.java!!!	getHidden(in userId : int) : boolean
        return readUserState(userId).hidden;
!!!74343351.java!!!	setHidden(inout hidden : boolean, in userId : int) : void
        modifyUserState(userId).hidden = hidden;
!!!74343479.java!!!	getSuspended(in userId : int) : boolean
        return readUserState(userId).suspended;
!!!74343607.java!!!	setSuspended(inout suspended : boolean, in userId : int) : void
        modifyUserState(userId).suspended = suspended;
!!!74343735.java!!!	getBlockUninstall(in userId : int) : boolean
        return readUserState(userId).blockUninstall;
!!!74343863.java!!!	setBlockUninstall(inout blockUninstall : boolean, in userId : int) : void
        modifyUserState(userId).blockUninstall = blockUninstall;
!!!74343991.java!!!	setUserState(in userId : int, in ceDataInode : long, in enabled : int, inout installed : boolean, inout stopped : boolean, inout notLaunched : boolean, inout hidden : boolean, inout suspended : boolean, inout lastDisableAppCaller : String, inout enabledComponents : ArraySet, inout disabledComponents : ArraySet, inout blockUninstall : boolean, in domainVerifState : int, in linkGeneration : int) : void
        PackageUserState state = modifyUserState(userId);
        state.ceDataInode = ceDataInode;
        state.enabled = enabled;
        state.installed = installed;
        state.stopped = stopped;
        state.notLaunched = notLaunched;
        state.hidden = hidden;
        state.suspended = suspended;
        state.lastDisableAppCaller = lastDisableAppCaller;
        state.enabledComponents = enabledComponents;
        state.disabledComponents = disabledComponents;
        state.blockUninstall = blockUninstall;
        state.domainVerificationStatus = domainVerifState;
        state.appLinkGeneration = linkGeneration;
!!!74344119.java!!!	getEnabledComponents(in userId : int) : ArraySet
        return readUserState(userId).enabledComponents;
!!!74344247.java!!!	getDisabledComponents(in userId : int) : ArraySet
        return readUserState(userId).disabledComponents;
!!!74344375.java!!!	setEnabledComponents(inout components : ArraySet, in userId : int) : void
        modifyUserState(userId).enabledComponents = components;
!!!74344503.java!!!	setDisabledComponents(inout components : ArraySet, in userId : int) : void
        modifyUserState(userId).disabledComponents = components;
!!!74344631.java!!!	setEnabledComponentsCopy(inout components : ArraySet, in userId : int) : void
        modifyUserState(userId).enabledComponents = components != null
                ? new ArraySet<String>(components) : null;
!!!74344759.java!!!	setDisabledComponentsCopy(inout components : ArraySet, in userId : int) : void
        modifyUserState(userId).disabledComponents = components != null
                ? new ArraySet<String>(components) : null;
!!!74344887.java!!!	modifyUserStateComponents(in userId : int, inout disabled : boolean, inout enabled : boolean) : PackageUserState
        PackageUserState state = modifyUserState(userId);
        if (disabled && state.disabledComponents == null) {
            state.disabledComponents = new ArraySet<String>(1);
        }
        if (enabled && state.enabledComponents == null) {
            state.enabledComponents = new ArraySet<String>(1);
        }
        return state;
!!!74345015.java!!!	addDisabledComponent(inout componentClassName : String, in userId : int) : void
        modifyUserStateComponents(userId, true, false).disabledComponents.add(componentClassName);
!!!74345143.java!!!	addEnabledComponent(inout componentClassName : String, in userId : int) : void
        modifyUserStateComponents(userId, false, true).enabledComponents.add(componentClassName);
!!!74345271.java!!!	enableComponentLPw(inout componentClassName : String, in userId : int) : boolean
        PackageUserState state = modifyUserStateComponents(userId, false, true);
        boolean changed = state.disabledComponents != null
                ? state.disabledComponents.remove(componentClassName) : false;
        changed |= state.enabledComponents.add(componentClassName);
        return changed;
!!!74345399.java!!!	disableComponentLPw(inout componentClassName : String, in userId : int) : boolean
        PackageUserState state = modifyUserStateComponents(userId, true, false);
        boolean changed = state.enabledComponents != null
                ? state.enabledComponents.remove(componentClassName) : false;
        changed |= state.disabledComponents.add(componentClassName);
        return changed;
!!!74345527.java!!!	restoreComponentLPw(inout componentClassName : String, in userId : int) : boolean
        PackageUserState state = modifyUserStateComponents(userId, true, true);
        boolean changed = state.disabledComponents != null
                ? state.disabledComponents.remove(componentClassName) : false;
        changed |= state.enabledComponents != null
                ? state.enabledComponents.remove(componentClassName) : false;
        return changed;
!!!74345655.java!!!	getCurrentEnabledStateLPr(inout componentName : String, in userId : int) : int
        PackageUserState state = readUserState(userId);
        if (state.enabledComponents != null && state.enabledComponents.contains(componentName)) {
            return COMPONENT_ENABLED_STATE_ENABLED;
        } else if (state.disabledComponents != null
                && state.disabledComponents.contains(componentName)) {
            return COMPONENT_ENABLED_STATE_DISABLED;
        } else {
            return COMPONENT_ENABLED_STATE_DEFAULT;
        }
!!!74345783.java!!!	removeUser(in userId : int) : void
        userState.delete(userId);
!!!74345911.java!!!	getIntentFilterVerificationInfo() : IntentFilterVerificationInfo
        return verificationInfo;
!!!74346039.java!!!	setIntentFilterVerificationInfo(inout info : IntentFilterVerificationInfo) : void
        verificationInfo = info;
!!!74346167.java!!!	getDomainVerificationStatusForUser(in userId : int) : long
        PackageUserState state = readUserState(userId);
        long result = (long) state.appLinkGeneration;
        result |= ((long) state.domainVerificationStatus) << 32;
        return result;
!!!74346295.java!!!	setDomainVerificationStatusForUser(in status : int, in generation : int, in userId : int) : void
        PackageUserState state = modifyUserState(userId);
        state.domainVerificationStatus = status;
        if (status == PackageManager.INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ALWAYS) {
            state.appLinkGeneration = generation;
        }
!!!74346423.java!!!	clearDomainVerificationStatusForUser(in userId : int) : void
        modifyUserState(userId).domainVerificationStatus =
                PackageManager.INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_UNDEFINED;
