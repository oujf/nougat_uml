class OtaDexoptShellCommand
!!!74224951.java!!!	OtaDexoptShellCommand(inout service : OtaDexoptService)
        mInterface = service;
!!!74225079.java!!!	onCommand(inout cmd : String) : int
        if (cmd == null) {
            return handleDefaultCommands(null);
        }

        final PrintWriter pw = getOutPrintWriter();
        try {
            switch(cmd) {
                case "prepare":
                    return runOtaPrepare();
                case "cleanup":
                    return runOtaCleanup();
                case "done":
                    return runOtaDone();
                case "step":
                    return runOtaStep();
                default:
                    return handleDefaultCommands(cmd);
            }
        } catch (RemoteException e) {
            pw.println("Remote exception: " + e);
        }
        return -1;
!!!74225207.java!!!	runOtaPrepare() : int
        mInterface.prepare();
        getOutPrintWriter().println("Success");
        return 0;
!!!74225335.java!!!	runOtaCleanup() : int
        mInterface.cleanup();
        return 0;
!!!74225463.java!!!	runOtaDone() : int
        final PrintWriter pw = getOutPrintWriter();
        if (mInterface.isDone()) {
            pw.println("OTA complete.");
        } else {
            pw.println("OTA incomplete.");
        }
        return 0;
!!!74225591.java!!!	runOtaStep() : int
        mInterface.dexoptNextPackage();
        return 0;
!!!74225719.java!!!	onHelp() : void
        final PrintWriter pw = getOutPrintWriter();
        pw.println("OTA Dexopt (ota) commands:");
        pw.println("  help");
        pw.println("    Print this help text.");
        pw.println("");
        pw.println("  prepare");
        pw.println("    Prepare an OTA dexopt pass, collecting all packages.");
        pw.println("  done");
        pw.println("    Replies whether the OTA is complete or not.");
        pw.println("  step");
        pw.println("    OTA dexopt the next package.");
        pw.println("  cleanup");
        pw.println("    Clean up internal states. Ends an OTA session.");
