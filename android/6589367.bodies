class MoveCallbacks
!!!74328375.java!!!	MoveCallbacks(inout looper : Looper)
            super(looper);
!!!74328503.java!!!	register(inout callback : IPackageMoveObserver) : void
            mCallbacks.register(callback);
!!!74328631.java!!!	unregister(inout callback : IPackageMoveObserver) : void
            mCallbacks.unregister(callback);
!!!74328759.java!!!	handleMessage(inout msg : Message) : void
            final SomeArgs args = (SomeArgs) msg.obj;
            final int n = mCallbacks.beginBroadcast();
            for (int i = 0; i < n; i++) {
                final IPackageMoveObserver callback = mCallbacks.getBroadcastItem(i);
                try {
                    invokeCallback(callback, msg.what, args);
                } catch (RemoteException ignored) {
                }
            }
            mCallbacks.finishBroadcast();
            args.recycle();
!!!74328887.java!!!	invokeCallback(inout callback : IPackageMoveObserver, in what : int, inout args : SomeArgs) : void
            switch (what) {
                case MSG_CREATED: {
                    callback.onCreated(args.argi1, (Bundle) args.arg2);
                    break;
                }
                case MSG_STATUS_CHANGED: {
                    callback.onStatusChanged(args.argi1, args.argi2, (long) args.arg3);
                    break;
                }
            }
!!!74329015.java!!!	notifyCreated(in moveId : int, inout extras : Bundle) : void
            Slog.v(TAG, "Move " + moveId + " created " + extras.toString());

            final SomeArgs args = SomeArgs.obtain();
            args.argi1 = moveId;
            args.arg2 = extras;
            obtainMessage(MSG_CREATED, args).sendToTarget();
!!!74329143.java!!!	notifyStatusChanged(in moveId : int, in status : int) : void
            notifyStatusChanged(moveId, status, -1);
!!!74329271.java!!!	notifyStatusChanged(in moveId : int, in status : int, in estMillis : long) : void
            Slog.v(TAG, "Move " + moveId + " status " + status);

            final SomeArgs args = SomeArgs.obtain();
            args.argi1 = moveId;
            args.argi2 = status;
            args.arg3 = estMillis;
            obtainMessage(MSG_STATUS_CHANGED, args).sendToTarget();

            synchronized (mLastStatus) {
                mLastStatus.put(moveId, status);
            }
