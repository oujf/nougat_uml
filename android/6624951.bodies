class DragAndDropPermissionsHandler
!!!74695991.java!!!	DragAndDropPermissionsHandler(inout clipData : ClipData, in sourceUid : int, inout targetPackage : String, in mode : int, in sourceUserId : int, in targetUserId : int)
        mSourceUid = sourceUid;
        mTargetPackage = targetPackage;
        mMode = mode;
        mSourceUserId = sourceUserId;
        mTargetUserId = targetUserId;

        clipData.collectUris(mUris);
!!!74696119.java!!!	take(inout activityToken : IBinder) : void
        if (mActivityToken != null || mPermissionOwnerToken != null) {
            return;
        }
        mActivityToken = activityToken;

        // Will throw if Activity is not found.
        IBinder permissionOwner = ActivityManagerNative.getDefault().
                getUriPermissionOwnerForActivity(mActivityToken);

        doTake(permissionOwner);
!!!74696247.java!!!	doTake(inout permissionOwner : IBinder) : void
        long origId = Binder.clearCallingIdentity();
        try {
            for (int i = 0; i < mUris.size(); i++) {
                ActivityManagerNative.getDefault().grantUriPermissionFromOwner(
                        permissionOwner, mSourceUid, mTargetPackage, mUris.get(i), mMode,
                        mSourceUserId, mTargetUserId);
            }
        } finally {
            Binder.restoreCallingIdentity(origId);
        }
!!!74696375.java!!!	takeTransient(inout permissionOwnerToken : IBinder) : void
        if (mActivityToken != null || mPermissionOwnerToken != null) {
            return;
        }
        mPermissionOwnerToken = permissionOwnerToken;
        mPermissionOwnerToken.linkToDeath(this, 0);

        doTake(mPermissionOwnerToken);
!!!74696503.java!!!	release() : void
        if (mActivityToken == null && mPermissionOwnerToken == null) {
            return;
        }

        IBinder permissionOwner = null;
        if (mActivityToken != null) {
            try {
                permissionOwner = ActivityManagerNative.getDefault().
                        getUriPermissionOwnerForActivity(mActivityToken);
            } catch (Exception e) {
                // Activity is destroyed, permissions already revoked.
                return;
            } finally {
                mActivityToken = null;
            }
        } else {
            permissionOwner = mPermissionOwnerToken;
            mPermissionOwnerToken.unlinkToDeath(this, 0);
            mPermissionOwnerToken = null;
        }

        for (int i = 0; i < mUris.size(); ++i) {
            ActivityManagerNative.getDefault().revokeUriPermissionFromOwner(
                    permissionOwner, mUris.get(i), mMode, mSourceUserId);
        }
!!!74696631.java!!!	binderDied() : void
        try {
            release();
        } catch (RemoteException e) {
            // Cannot happen, local call.
        }
