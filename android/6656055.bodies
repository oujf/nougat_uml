class DpmTestUtils
!!!75109175.java!!!	clearDir(inout dir : File) : void
        if (dir.exists()) {
            Assert.assertTrue("failed to delete dir", FileUtils.deleteContents(dir));
        }
        dir.mkdirs();
        Log.i(DpmTestBase.TAG, "Created " + dir);
!!!75109303.java!!!	getListSizeAllowingNull(inout list : List<?>) : int
        return list == null ? 0 : list.size();
!!!75109431.java!!!	newRestrictions(inout  : String...restrictions) : Bundle
        final Bundle ret = new Bundle();
        for (String restriction : restrictions) {
            ret.putBoolean(restriction, true);
        }
        return ret;
!!!75109559.java!!!	assertRestrictions(inout expected : Bundle, inout actual : Bundle) : void
        final ArrayList<String> elist;
        if (expected == null) {
            elist = null;
        } else {
            elist = Lists.newArrayList();
            for (String key : expected.keySet()) {
                if (expected.getBoolean(key)) {
                    elist.add(key);
                }
            }
            Collections.sort(elist);
        }

        final ArrayList<String> alist;
        if (actual == null) {
            alist = null;
        } else {
            alist = Lists.newArrayList();
            for (String key : actual.keySet()) {
                if (actual.getBoolean(key)) {
                    alist.add(key);
                }
            }
            Collections.sort(alist);
        }

        assertEquals(elist, alist);
!!!75109687.java!!!	cloneParcelable(inout source : T) : T
        Parcel p = Parcel.obtain();
        p.writeParcelable(source, 0);
        p.setDataPosition(0);
        final T clone = p.readParcelable(DpmTestUtils.class.getClassLoader());
        p.recycle();
        return clone;
!!!75109815.java!!!	readAsset(inout context : Context, inout assetPath : String) : String
        final StringBuilder sb = new StringBuilder();
        try (BufferedReader br = new BufferedReader(
                new InputStreamReader(
                        context.getResources().getAssets().open(assetPath)))) {
            String line;
            while ((line = br.readLine()) != null) {
                sb.append(line);
                sb.append(System.lineSeparator());
            }
        }
        return sb.toString();
!!!75109943.java!!!	writeToFile(inout path : File, inout content : String) : void
        path.getParentFile().mkdirs();

        try (FileWriter writer = new FileWriter(path)) {
            Log.i(DpmTestBase.TAG, "Writing to " + path);
            Log.i(DpmTestBase.TAG, content);
            writer.write(content);
        }
!!!75110071.java!!!	checkAssertRestrictions(inout a : Bundle, inout b : Bundle) : boolean
        try {
            assertRestrictions(a, b);
            return true;
        } catch (AssertionFailedError e) {
            return false;
        }
!!!75110199.java!!!	testAssertRestrictions() : void
        final Bundle a = newRestrictions();
        final Bundle b = newRestrictions("a");
        final Bundle c = newRestrictions("a");
        final Bundle d = newRestrictions("b", "c");
        final Bundle e = newRestrictions("b", "c");

        assertTrue(checkAssertRestrictions(null, null));
        assertFalse(checkAssertRestrictions(null, a));
        assertFalse(checkAssertRestrictions(a, null));
        assertTrue(checkAssertRestrictions(a, a));

        assertFalse(checkAssertRestrictions(a, b));
        assertTrue(checkAssertRestrictions(b, c));

        assertFalse(checkAssertRestrictions(c, d));
        assertTrue(checkAssertRestrictions(d, e));
