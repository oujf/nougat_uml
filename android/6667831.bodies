class SoundTriggerDbHelper
!!!75229879.java!!!	SoundTriggerDbHelper(inout context : Context)
        super(context, NAME, null, VERSION);
!!!75230007.java!!!	onCreate(inout db : SQLiteDatabase) : void
        // creating required tables
        db.execSQL(CREATE_TABLE_ST_SOUND_MODEL);
!!!75230135.java!!!	onUpgrade(inout db : SQLiteDatabase, in oldVersion : int, in newVersion : int) : void
        // TODO: For now, drop older tables and recreate new ones.
        db.execSQL("DROP TABLE IF EXISTS " + GenericSoundModelContract.TABLE);
        onCreate(db);
!!!75230263.java!!!	updateGenericSoundModel(inout soundModel : SoundTrigger::GenericSoundModel) : boolean
        synchronized(this) {
            SQLiteDatabase db = getWritableDatabase();
            ContentValues values = new ContentValues();
            values.put(GenericSoundModelContract.KEY_MODEL_UUID, soundModel.uuid.toString());
            values.put(GenericSoundModelContract.KEY_VENDOR_UUID, soundModel.vendorUuid.toString());
            values.put(GenericSoundModelContract.KEY_DATA, soundModel.data);

            try {
                return db.insertWithOnConflict(GenericSoundModelContract.TABLE, null, values,
                        SQLiteDatabase.CONFLICT_REPLACE) != -1;
            } finally {
                db.close();
            }

        }
!!!75230391.java!!!	getGenericSoundModel(inout model_uuid : UUID) : SoundTrigger::GenericSoundModel
        synchronized(this) {

            // Find the corresponding sound model ID for the keyphrase.
            String selectQuery = "SELECT  * FROM " + GenericSoundModelContract.TABLE
                    + " WHERE " + GenericSoundModelContract.KEY_MODEL_UUID + "= '" +
                    model_uuid + "'";
            SQLiteDatabase db = getReadableDatabase();
            Cursor c = db.rawQuery(selectQuery, null);
            try {
                if (c.moveToFirst()) {
                    do {
                        byte[] data = c.getBlob(c.getColumnIndex(
                                GenericSoundModelContract.KEY_DATA));
                        String vendor_uuid = c.getString(
                                c.getColumnIndex(GenericSoundModelContract.KEY_VENDOR_UUID));
                        return new GenericSoundModel(model_uuid, UUID.fromString(vendor_uuid),
                                data);
                    } while (c.moveToNext());
                }
            } finally {
                c.close();
                db.close();
            }
        }
        return null;
!!!75230519.java!!!	deleteGenericSoundModel(inout model_uuid : UUID) : boolean
        synchronized(this) {
            GenericSoundModel soundModel = getGenericSoundModel(model_uuid);
            if (soundModel == null) {
                return false;
            }
            // Delete all sound models for the given keyphrase and specified user.
            SQLiteDatabase db = getWritableDatabase();
            String soundModelClause = GenericSoundModelContract.KEY_MODEL_UUID
                    + "='" + soundModel.uuid.toString() + "'";
            try {
                return db.delete(GenericSoundModelContract.TABLE, soundModelClause, null) != 0;
            } finally {
                db.close();
            }
        }
