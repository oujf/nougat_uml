class PhoneAccount
!!!75352631.java!!!	PhoneAccount(inout account : PhoneAccountHandle, inout address : Uri, inout subscriptionAddress : Uri, in capabilities : int, inout icon : Icon, in highlightColor : int, inout label : CharSequence, inout shortDescription : CharSequence, inout supportedUriSchemes : List<String>, inout extras : Bundle, inout isEnabled : boolean)
        mAccountHandle = account;
        mAddress = address;
        mSubscriptionAddress = subscriptionAddress;
        mCapabilities = capabilities;
        mIcon = icon;
        mHighlightColor = highlightColor;
        mLabel = label;
        mShortDescription = shortDescription;
        mSupportedUriSchemes = Collections.unmodifiableList(supportedUriSchemes);
        mExtras = extras;
        mIsEnabled = isEnabled;
!!!75352759.java!!!	builder(inout accountHandle : PhoneAccountHandle, inout label : CharSequence) : PhoneAccount::Builder
        return new Builder(accountHandle, label);
!!!75352887.java!!!	toBuilder() : PhoneAccount::Builder
 return new Builder(this);
!!!75353015.java!!!	getAccountHandle() : PhoneAccountHandle
        return mAccountHandle;
!!!75353143.java!!!	getAddress() : Uri
        return mAddress;
!!!75353271.java!!!	getSubscriptionAddress() : Uri
        return mSubscriptionAddress;
!!!75353399.java!!!	getCapabilities() : int
        return mCapabilities;
!!!75353527.java!!!	hasCapabilities(in capability : int) : boolean
        return (mCapabilities & capability) == capability;
!!!75353655.java!!!	getLabel() : CharSequence
        return mLabel;
!!!75353783.java!!!	getShortDescription() : CharSequence
        return mShortDescription;
!!!75353911.java!!!	getSupportedUriSchemes() : String
        return mSupportedUriSchemes;
!!!75354039.java!!!	getExtras() : Bundle
        return mExtras;
!!!75354167.java!!!	getIcon() : Icon
        return mIcon;
!!!75354295.java!!!	isEnabled() : boolean
        return mIsEnabled;
!!!75354423.java!!!	supportsUriScheme(inout uriScheme : String) : boolean
        if (mSupportedUriSchemes == null || uriScheme == null) {
            return false;
        }

        for (String scheme : mSupportedUriSchemes) {
            if (scheme != null && scheme.equals(uriScheme)) {
                return true;
            }
        }
        return false;
!!!75354551.java!!!	getHighlightColor() : int
        return mHighlightColor;
!!!75354679.java!!!	setIsEnabled(inout isEnabled : boolean) : void
        mIsEnabled = isEnabled;
!!!75354807.java!!!	describeContents() : int
        return 0;
!!!75354935.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        if (mAccountHandle == null) {
            out.writeInt(0);
        } else {
            out.writeInt(1);
            mAccountHandle.writeToParcel(out, flags);
        }
        if (mAddress == null) {
            out.writeInt(0);
        } else {
            out.writeInt(1);
            mAddress.writeToParcel(out, flags);
        }
        if (mSubscriptionAddress == null) {
            out.writeInt(0);
        } else {
            out.writeInt(1);
            mSubscriptionAddress.writeToParcel(out, flags);
        }
        out.writeInt(mCapabilities);
        out.writeInt(mHighlightColor);
        out.writeCharSequence(mLabel);
        out.writeCharSequence(mShortDescription);
        out.writeStringList(mSupportedUriSchemes);

        if (mIcon == null) {
            out.writeInt(0);
        } else {
            out.writeInt(1);
            mIcon.writeToParcel(out, flags);
        }
        out.writeByte((byte) (mIsEnabled ? 1 : 0));
        out.writeBundle(mExtras);
!!!75355063.java!!!	PhoneAccount(inout in : Parcel)
        if (in.readInt() > 0) {
            mAccountHandle = PhoneAccountHandle.CREATOR.createFromParcel(in);
        } else {
            mAccountHandle = null;
        }
        if (in.readInt() > 0) {
            mAddress = Uri.CREATOR.createFromParcel(in);
        } else {
            mAddress = null;
        }
        if (in.readInt() > 0) {
            mSubscriptionAddress = Uri.CREATOR.createFromParcel(in);
        } else {
            mSubscriptionAddress = null;
        }
        mCapabilities = in.readInt();
        mHighlightColor = in.readInt();
        mLabel = in.readCharSequence();
        mShortDescription = in.readCharSequence();
        mSupportedUriSchemes = Collections.unmodifiableList(in.createStringArrayList());
        if (in.readInt() > 0) {
            mIcon = Icon.CREATOR.createFromParcel(in);
        } else {
            mIcon = null;
        }
        mIsEnabled = in.readByte() == 1;
        mExtras = in.readBundle();
!!!75355191.java!!!	toString() : String
        StringBuilder sb = new StringBuilder().append("[[")
                .append(mIsEnabled ? 'X' : ' ')
                .append("] PhoneAccount: ")
                .append(mAccountHandle)
                .append(" Capabilities: ")
                .append(capabilitiesToString(mCapabilities))
                .append(" Schemes: ");
        for (String scheme : mSupportedUriSchemes) {
            sb.append(scheme)
                    .append(" ");
        }
        sb.append(" Extras: ");
        sb.append(mExtras);
        sb.append("]");
        return sb.toString();
!!!75355319.java!!!	capabilitiesToString(in capabilities : int) : String
        StringBuilder sb = new StringBuilder();
        if (hasCapabilities(CAPABILITY_VIDEO_CALLING)) {
            sb.append("Video ");
        }
        if (hasCapabilities(CAPABILITY_VIDEO_CALLING_RELIES_ON_PRESENCE)) {
            sb.append("Presence ");
        }
        if (hasCapabilities(CAPABILITY_CALL_PROVIDER)) {
            sb.append("CallProvider ");
        }
        if (hasCapabilities(CAPABILITY_CALL_SUBJECT)) {
            sb.append("CallSubject ");
        }
        if (hasCapabilities(CAPABILITY_CONNECTION_MANAGER)) {
            sb.append("ConnectionMgr ");
        }
        if (hasCapabilities(CAPABILITY_EMERGENCY_CALLS_ONLY)) {
            sb.append("EmergOnly ");
        }
        if (hasCapabilities(CAPABILITY_MULTI_USER)) {
            sb.append("MultiUser ");
        }
        if (hasCapabilities(CAPABILITY_PLACE_EMERGENCY_CALLS)) {
            sb.append("PlaceEmerg ");
        }
        if (hasCapabilities(CAPABILITY_EMERGENCY_VIDEO_CALLING)) {
            sb.append("EmergVideo ");
        }
        if (hasCapabilities(CAPABILITY_SIM_SUBSCRIPTION)) {
            sb.append("SimSub ");
        }
        return sb.toString();
