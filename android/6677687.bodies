class RemoteConnectionService
!!!75375543.java!!!	RemoteConnectionService(inout outgoingConnectionServiceRpc : IConnectionService, inout ourConnectionServiceImpl : ConnectionService)
        mOutgoingConnectionServiceRpc = outgoingConnectionServiceRpc;
        mOutgoingConnectionServiceRpc.asBinder().linkToDeath(mDeathRecipient, 0);
        mOurConnectionServiceImpl = ourConnectionServiceImpl;
!!!75375671.java!!!	toString() : String
        return "[RemoteCS - " + mOutgoingConnectionServiceRpc.asBinder().toString() + "]";
!!!75375799.java!!!	createRemoteConnection(inout connectionManagerPhoneAccount : PhoneAccountHandle, inout request : ConnectionRequest, inout isIncoming : boolean) : RemoteConnection
        final String id = UUID.randomUUID().toString();
        final ConnectionRequest newRequest = new ConnectionRequest(
                request.getAccountHandle(),
                request.getAddress(),
                request.getExtras(),
                request.getVideoState());
        try {
            if (mConnectionById.isEmpty()) {
                mOutgoingConnectionServiceRpc.addConnectionServiceAdapter(mServant.getStub());
            }
            RemoteConnection connection =
                    new RemoteConnection(id, mOutgoingConnectionServiceRpc, newRequest);
            mPendingConnections.add(connection);
            mConnectionById.put(id, connection);
            mOutgoingConnectionServiceRpc.createConnection(
                    connectionManagerPhoneAccount,
                    id,
                    newRequest,
                    isIncoming,
                    false /* isUnknownCall */);
            connection.registerCallback(new RemoteConnection.Callback() {
                @Override
                public void onDestroyed(RemoteConnection connection) {
                    mConnectionById.remove(id);
                    maybeDisconnectAdapter();
                }
            });
            return connection;
        } catch (RemoteException e) {
            return RemoteConnection.failure(
                    new DisconnectCause(DisconnectCause.ERROR, e.toString()));
        }
!!!75375927.java!!!	hasConnection(inout callId : String) : boolean
        return mConnectionById.containsKey(callId);
!!!75376055.java!!!	findConnectionForAction(inout callId : String, inout action : String) : RemoteConnection
        if (mConnectionById.containsKey(callId)) {
            return mConnectionById.get(callId);
        }
        Log.w(this, "%s - Cannot find Connection %s", action, callId);
        return NULL_CONNECTION;
!!!75376183.java!!!	findConferenceForAction(inout callId : String, inout action : String) : RemoteConference
        if (mConferenceById.containsKey(callId)) {
            return mConferenceById.get(callId);
        }
        Log.w(this, "%s - Cannot find Conference %s", action, callId);
        return NULL_CONFERENCE;
!!!75376311.java!!!	maybeDisconnectAdapter() : void
        if (mConnectionById.isEmpty() && mConferenceById.isEmpty()) {
            try {
                mOutgoingConnectionServiceRpc.removeConnectionServiceAdapter(mServant.getStub());
            } catch (RemoteException e) {
            }
        }
