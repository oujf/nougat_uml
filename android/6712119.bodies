class AssistInteractionSession
!!!75682743.java!!!	AssistInteractionSession(inout context : Context)
        super(context);
!!!75682871.java!!!	AssistInteractionSession(inout context : Context, inout handler : Handler)
        super(context, handler);
!!!75683511.java!!!	onCreate() : void
        super.onCreate();
        // Simulate slowness of Assist app
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
!!!75683639.java!!!	onCreateContentView() : View
        View v = getLayoutInflater().inflate(R.layout.assist, null);
        mScrim = v.findViewById(R.id.scrim);
        mBackground = v.findViewById(R.id.background);
        mDensity = mScrim.getResources().getDisplayMetrics().density;
        mCard1 = v.findViewById(R.id.card1);
        mCard2 = v.findViewById(R.id.card2);
        mNavbarScrim = v.findViewById(R.id.navbar_scrim);
        return v;
!!!75683767.java!!!	onShow(inout args : Bundle, in showFlags : int) : void
        super.onShow(args, showFlags);
        if ((showFlags & SHOW_SOURCE_ASSIST_GESTURE) != 0) {
            mBackground.getViewTreeObserver().addOnPreDrawListener(
                    new ViewTreeObserver.OnPreDrawListener() {
                        @Override
                        public boolean onPreDraw() {
                            mBackground.getViewTreeObserver().removeOnPreDrawListener(this);
                            playAssistAnimation();
                            return true;
                        }
                    });
        }
!!!75683895.java!!!	onLockscreenShown() : void
        super.onLockscreenShown();
        Log.i("Assistant", "Lockscreen was shown");
!!!75684023.java!!!	playAssistAnimation() : void
        Interpolator linearOutSlowIn = AnimationUtils.loadInterpolator(mBackground.getContext(),
                android.R.interpolator.linear_out_slow_in);
        Interpolator fastOutSlowIn = AnimationUtils.loadInterpolator(mBackground.getContext(),
                android.R.interpolator.fast_out_slow_in);
        mScrim.setAlpha(0f);
        mScrim.animate()
                .alpha(1f)
                .setStartDelay(100)
                .setDuration(500);
        mBackground.setTranslationY(50 * mDensity);
        mBackground.animate()
                .translationY(0)
                .setDuration(300)
                .setInterpolator(linearOutSlowIn);
        int centerX = mBackground.getWidth()/2;
        int centerY = (int) (mBackground.getHeight()/5*3.8f);
        int radius = (int) Math.sqrt(centerX*centerX + centerY*centerY) + 1;
        Animator animator = ViewAnimationUtils.createCircularReveal(mBackground, centerX, centerY,
                0, radius);
        animator.setDuration(300);
        animator.setInterpolator(fastOutSlowIn);
        animator.start();

        ValueAnimator colorAnim = ValueAnimator.ofArgb(Color.WHITE, 0xffe0e0e0);
        colorAnim.setDuration(300);
        colorAnim.setInterpolator(fastOutSlowIn);
        colorAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
            @Override
            public void onAnimationUpdate(ValueAnimator animation) {
                mBackground.setBackgroundColor((Integer) animation.getAnimatedValue());
            }
        });
        colorAnim.start();


        mCard1.setY(mBackground.getHeight());
        mCard2.setTranslationY(mCard1.getTranslationY());
        mCard1.animate()
                .translationY(0)
                .setDuration(500)
                .setInterpolator(linearOutSlowIn)
                .setStartDelay(100);
        mCard2.animate()
                .translationY(0)
                .setInterpolator(linearOutSlowIn)
                .setStartDelay(150)
                .setDuration(500);

        mNavbarScrim.setAlpha(0f);
        mNavbarScrim.animate()
                .alpha(1f)
                .setDuration(500)
                .setStartDelay(100);
!!!75684151.java!!!	onHide() : void
        super.onHide();
