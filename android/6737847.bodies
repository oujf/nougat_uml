class BitmapsView
!!!75770295.java!!!	BitmapsView(inout c : Context)
            super(c);

            Bitmap texture = BitmapFactory.decodeResource(c.getResources(), R.drawable.spot_mask);
            mBitmap1 = Bitmap.createBitmap(texture.getWidth(), texture.getHeight(),
                    Bitmap.Config.ALPHA_8);
            Canvas canvas = new Canvas(mBitmap1);
            canvas.drawBitmap(texture, 0.0f, 0.0f, null);

            texture = BitmapFactory.decodeResource(c.getResources(), R.drawable.sunset1);
            BitmapShader shader = new BitmapShader(texture,
                    Shader.TileMode.REPEAT, Shader.TileMode.REPEAT);

            final float width = texture.getWidth() / 3.0f;
            final float height = texture.getHeight() / 3.0f;

            mVertices = new float[] {
                    0.0f, 0.0f, width, 0.0f, width * 2, 0.0f, width * 3, 0.0f,
                    0.0f, height, width, height, width * 2, height, width * 4, height,
                    0.0f, height * 2, width, height * 2, width * 2, height * 2, width * 3, height * 2,
                    0.0f, height * 4, width, height * 4, width * 2, height * 4, width * 4, height * 4,
            };

            mBitmapPaint = new Paint();
            mBitmapPaint.setFilterBitmap(true);
            mBitmapPaint.setShader(shader);
!!!75770423.java!!!	onDraw(inout canvas : Canvas) : void
            super.onDraw(canvas);

            canvas.drawColor(0xffffffff);
            canvas.drawBitmap(mBitmap1, 0.0f, 0.0f, mBitmapPaint);

            Matrix matrix = new Matrix();
            matrix.setScale(2.0f, 2.0f);
            matrix.postTranslate(0.0f, mBitmap1.getHeight());
            canvas.drawBitmap(mBitmap1, matrix, mBitmapPaint);

            Rect src = new Rect(0, 0, mBitmap1.getWidth() / 2, mBitmap1.getHeight() / 2);
            Rect dst = new Rect(0, mBitmap1.getHeight() * 3, mBitmap1.getWidth(),
                    mBitmap1.getHeight() * 4);
            canvas.drawBitmap(mBitmap1, src, dst, mBitmapPaint);

            canvas.translate(0.0f, mBitmap1.getHeight() * 4);
            canvas.drawBitmapMesh(mBitmap1, 3, 3, mVertices, 0, null, 0, mBitmapPaint);

            invalidate();
