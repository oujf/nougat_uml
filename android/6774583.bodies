class PlayerBinder
!!!75882679.java!!!	sendRequest(inout action : String, inout params : Bundle, inout cb : IRequestCallback) : void
            if (RequestUtils.ACTION_SET_CONTENT.equals(action)) {
                mSession.setContent(params);
            } else if (RequestUtils.ACTION_SET_NEXT_CONTENT.equals(action)) {
                mSession.setNextContent(params);
            }
!!!75882807.java!!!	registerCallback(in cb : IPlayerCallback) : void
            if (!mCbs.contains(cb)) {
                mCbs.add(cb);
                cb.asBinder().linkToDeath(new IBinder.DeathRecipient() {
                    @Override
                    public void binderDied() {
                        mCbs.remove(cb);
                    }
                }, 0);
            }
            try {
                cb.onSessionChanged(getSessionToken());
            } catch (RemoteException e) {
                mCbs.remove(cb);
                throw e;
            }
!!!75882935.java!!!	unregisterCallback(inout cb : IPlayerCallback) : void
            mCbs.remove(cb);
!!!75883063.java!!!	getSessionToken() : MediaSession::Token
            if (mSession == null) {
                Log.e(TAG, "Error in PlayerService: mSession=null in getSessionToken()");
                return null;
            }
            return mSession.getSessionToken();
!!!75883191.java!!!	setIcon(inout icon : Bitmap) : void
            mSession.setIcon(icon);
