class ElementLayoutActivity
!!!75982135.java!!!	onCreate(in savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        setContentView(R.layout.flowlayout);

        mLayout = (FlowLayout)findViewById(R.id.root_flow_layout);
        mLayout.setBackgroundColor(BACKGROUND_COLOR);

        mIndicator = new TextView(this);
        mLayout.addView(mIndicator);
        mIndicator.setText("***\n***");
        mIndicator.setBackgroundColor(BACKGROUND_COLOR);
        mIndicatorState = 0.0f;

        // Need constantly invalidate view in order to get max redraw rate.
        mLayout.getViewTreeObserver().addOnPreDrawListener(this);

        // Read requested number of elements in layout.
        int numElements = getIntent().getIntExtra(NUM_ELEMENTS_KEY, DEFAULT_NUM_ELEMENTS);

        for (int i = 0; i < numElements; ++i) {
            switch (mRandom.nextInt(5)) {
            case 0:
                createRadioButton();
                break;
            case 1:
                createToggleButton();
                break;
            case 2:
                createSwitch();
                break;
            case 3:
                createTextView();
                break;
            case 4:
                createChronometer();
                break;
            }
        }

        setContentView(mLayout);
!!!75982263.java!!!	createTextView() : void
        TextView textView = new TextView(this);
        int lineCnt = mRandom.nextInt(4);
        StringBuffer buffer = new StringBuffer();
        for (int i = 0; i < lineCnt; ++i) {
            if (i != 0) {
                buffer.append("\n");
            }
            buffer.append("Line:" + mRandom.nextInt());
        }
        textView.setText(buffer);
        mLayout.addView(textView);
!!!75982391.java!!!	createRadioButton() : void
        RadioButton button = new RadioButton(this);
        button.setText("RadioButton:" + mRandom.nextInt());
        mLayout.addView(button);
!!!75982519.java!!!	createToggleButton() : void
        ToggleButton button = new ToggleButton(this);
        button.setChecked(mRandom.nextBoolean());
        mLayout.addView(button);
!!!75982647.java!!!	createSwitch() : void
        Switch button = new Switch(this);
        button.setChecked(mRandom.nextBoolean());
        mLayout.addView(button);
!!!75982775.java!!!	createChronometer() : void
        Chronometer chronometer = new Chronometer(this);
        chronometer.setBase(mRandom.nextLong());
        mLayout.addView(chronometer);
        chronometer.start();
!!!75982903.java!!!	onResume() : void
        super.onResume();
!!!75983031.java!!!	onPause() : void
        super.onPause();
!!!75983159.java!!!	onPreDraw() : boolean
        // Interpolate indicator color
        int background = 0xff000000;
        for (int i = 0; i < 3; ++i) {
            int shift = 8 * i;
            int colorB = (BACKGROUND_COLOR >> shift) & 0xff;
            int colorI = (INDICATOR_COLOR >> shift) & 0xff;
            int color = (int)((float)colorB * (1.0f - mIndicatorState) +
                    (float)colorI * mIndicatorState);
            if (color > 255) {
                color = 255;
            }
            background |= (color << shift);
        }

        mIndicator.setBackgroundColor(background);
        mIndicatorState += (3 / 60.0f);  // around 3 times per second
        mIndicatorState = mIndicatorState - (int)mIndicatorState;

        mLayout.postInvalidate();
        return true;
