class Utils
!!!75984823.java!!!	waitForActivity(inout instrumentation : Instrumentation, inout selector : BySelector) : UiObject2
        UiDevice device = UiDevice.getInstance(instrumentation);
        UiObject2 window = device.wait(Until.findObject(selector), WAIT_FOR_ACTIVITY_TIMEOUT);
        if (window == null) {
            throw new RuntimeException(selector.toString() + " has not been started.");
        }

        // Get root object.
        while (window.getParent() != null) {
            window = window.getParent();
        }
        return window;
!!!75984951.java!!!	waitForElementLayout(inout instrumentation : Instrumentation) : UiObject2
        return waitForActivity(instrumentation, ROOT_ELEMENT_LAYOUT);
!!!75985079.java!!!	startElementLayout(inout instrumentation : Instrumentation, in numElements : int) : UiObject2
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setComponent(new ComponentName(PACKAGE, ELEMENT_LAYOUT_CLASS));
        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.putExtra(ElementLayoutActivity.NUM_ELEMENTS_KEY, numElements);
        instrumentation.getTargetContext().startActivity(intent);
        return waitForElementLayout(instrumentation);
!!!75985207.java!!!	getDeviceRotation(inout instrumentation : Instrumentation) : int
        try {
            UiDevice device = UiDevice.getInstance(instrumentation);
            switch (device.getDisplayRotation()) {
            case UiAutomation.ROTATION_FREEZE_90:
                return ROTATION_MODE_LEFT;
            case UiAutomation.ROTATION_FREEZE_270:
                return ROTATION_MODE_RIGHT;
            case UiAutomation.ROTATION_FREEZE_0:
            case UiAutomation.ROTATION_FREEZE_180:
                return ROTATION_MODE_NATURAL;
            }
        } catch(Exception e) {
            throw new RuntimeException();
        }
        throw new RuntimeException("Unsupported device rotation.");
!!!75985335.java!!!	rotateDevice(inout instrumentation : Instrumentation, in rotationMode : int) : void
        try {
            UiDevice device = UiDevice.getInstance(instrumentation);
            long startTime = System.currentTimeMillis();
            switch (rotationMode) {
            case ROTATION_MODE_NATURAL:
                device.setOrientationNatural();
                break;
            case ROTATION_MODE_LEFT:
                device.setOrientationLeft();
                break;
            case ROTATION_MODE_RIGHT:
                device.setOrientationRight();
                break;
            default:
                throw new RuntimeException("Unsupported rotation mode: " + rotationMode);
            }

            long toSleep = ROTATION_ANIMATION_TIME_FULL_SCREEN_MS -
                    (System.currentTimeMillis() - startTime);
            if (toSleep > 0) {
                SystemClock.sleep(toSleep);
            }
        } catch(Exception e) {
            throw new RuntimeException(e);
        }
