class BridgeRenderSession
!!!76161975.java!!!	getResult() : Result
        return mLastResult;
!!!76162103.java!!!	getImage() : BufferedImage
        return mSession.getImage();
!!!76162231.java!!!	isAlphaChannelImage() : boolean
        return mSession.isAlphaChannelImage();
!!!76162359.java!!!	getRootViews() : List<ViewInfo>
        return mSession.getViewInfos();
!!!76162487.java!!!	getSystemRootViews() : List<ViewInfo>
        return mSession.getSystemViewInfos();
!!!76162615.java!!!	getDefaultProperties() : Object
        return mSession.getDefaultProperties();
!!!76162743.java!!!	render(in timeout : long, inout forceMeasure : boolean) : Result
        try {
            Bridge.prepareThread();
            mLastResult = mSession.acquire(timeout);
            if (mLastResult.isSuccess()) {
                if (forceMeasure) {
                    mSession.invalidateRenderingSize();
                }
                mLastResult = mSession.render(false /*freshRender*/);
            }
        } finally {
            mSession.release();
            Bridge.cleanupThread();
        }

        return mLastResult;
!!!76162871.java!!!	animate(inout targetObject : Object, inout animationName : String, inout isFrameworkAnimation : boolean, inout listener : IAnimationListener) : Result
        try {
            Bridge.prepareThread();
            mLastResult = mSession.acquire(RenderParams.DEFAULT_TIMEOUT);
            if (mLastResult.isSuccess()) {
                mLastResult = mSession.animate(targetObject, animationName, isFrameworkAnimation,
                        listener);
            }
        } finally {
            mSession.release();
            Bridge.cleanupThread();
        }

        return mLastResult;
!!!76162999.java!!!	insertChild(inout parentView : Object, inout childXml : ILayoutPullParser, in index : int, inout listener : IAnimationListener) : Result
        if (parentView instanceof ViewGroup == false) {
            throw new IllegalArgumentException("parentView is not a ViewGroup");
        }

        try {
            Bridge.prepareThread();
            mLastResult = mSession.acquire(RenderParams.DEFAULT_TIMEOUT);
            if (mLastResult.isSuccess()) {
                mLastResult = mSession.insertChild((ViewGroup) parentView, childXml, index,
                        listener);
            }
        } finally {
            mSession.release();
            Bridge.cleanupThread();
        }

        return mLastResult;
!!!76163127.java!!!	moveChild(inout parentView : Object, inout childView : Object, in index : int, inout layoutParams : Map<String, String>, inout listener : IAnimationListener) : Result
        if (parentView instanceof ViewGroup == false) {
            throw new IllegalArgumentException("parentView is not a ViewGroup");
        }
        if (childView instanceof View == false) {
            throw new IllegalArgumentException("childView is not a View");
        }

        try {
            Bridge.prepareThread();
            mLastResult = mSession.acquire(RenderParams.DEFAULT_TIMEOUT);
            if (mLastResult.isSuccess()) {
                mLastResult = mSession.moveChild((ViewGroup) parentView, (View) childView, index,
                        layoutParams, listener);
            }
        } finally {
            mSession.release();
            Bridge.cleanupThread();
        }

        return mLastResult;
!!!76163255.java!!!	removeChild(inout childView : Object, inout listener : IAnimationListener) : Result
        if (childView instanceof View == false) {
            throw new IllegalArgumentException("childView is not a View");
        }

        try {
            Bridge.prepareThread();
            mLastResult = mSession.acquire(RenderParams.DEFAULT_TIMEOUT);
            if (mLastResult.isSuccess()) {
                mLastResult = mSession.removeChild((View) childView, listener);
            }
        } finally {
            mSession.release();
            Bridge.cleanupThread();
        }

        return mLastResult;
!!!76163383.java!!!	setSystemTimeNanos(in nanos : long) : void
        System_Delegate.setNanosTime(nanos);
!!!76163511.java!!!	setSystemBootTimeNanos(in nanos : long) : void
        System_Delegate.setBootTimeNanos(nanos);
!!!76163639.java!!!	setElapsedFrameTimeNanos(in nanos : long) : void
        if (mSession != null) {
            mSession.setElapsedFrameTimeNanos(nanos);
        }
!!!76163767.java!!!	dispose() : void
        if (mSession != null) {
            mSession.dispose();
        }
!!!76163895.java!!!	BridgeRenderSession(inout scene : RenderSessionImpl, inout lastResult : Result)
        mSession = scene;
        if (scene != null) {
            mSession.setScene(this);
        }
        mLastResult = lastResult;
