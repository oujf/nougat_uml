class NavigationBar
!!!76259383.java!!!	NavigationBar(inout context : BridgeContext, inout density : Density, in orientation : int, inout isRtl : boolean, inout rtlEnabled : boolean, in simulatedPlatformVersion : int)
        this(context, density, orientation, isRtl, rtlEnabled, simulatedPlatformVersion,
          getShortestWidth(context)>= 600 ? LAYOUT_600DP_XML : LAYOUT_XML);
!!!76259511.java!!!	NavigationBar(inout context : BridgeContext, inout density : Density, in orientation : int, inout isRtl : boolean, inout rtlEnabled : boolean, in simulatedPlatformVersion : int, inout layoutPath : String)
        super(context, orientation, layoutPath, "navigation_bar.xml", simulatedPlatformVersion);

        int color = getBarColor(ATTR_COLOR, ATTR_TRANSLUCENT);
        setBackgroundColor(color == 0 ? 0xFF000000 : color);

        // Cannot access the inside items through id because no R.id values have been
        // created for them.
        // We do know the order though.
        // 0 is a spacer.
        int back = 1;
        int recent = 5;
        if (orientation == LinearLayout.VERTICAL || (isRtl && !rtlEnabled)) {
            // If RTL is enabled, then layoutlib mirrors the layout for us.
            back = 5;
            recent = 1;
        }

        //noinspection SpellCheckingInspection
        loadIcon(back, "ic_sysbar_back.png", density, isRtl);
        //noinspection SpellCheckingInspection
        loadIcon(3, "ic_sysbar_home.png", density, isRtl);
        //noinspection SpellCheckingInspection
        loadIcon(recent, "ic_sysbar_recent.png", density, isRtl);
        setupNavBar(context, orientation);
!!!76259639.java!!!	setupNavBar(inout context : BridgeContext, in orientation : int) : void
        float sw = getShortestWidth(context);
        View leftPadding = getChildAt(0);
        View rightPadding = getChildAt(6);
        setSize(context, leftPadding, orientation, getSidePadding(sw));
        setSize(context, rightPadding, orientation, getSidePadding(sw));
        int navButtonWidth = getWidth(sw);
        for (int i = 1; i < 6; i += 2) {
            View navButton = getChildAt(i);
            setSize(context, navButton, orientation, navButtonWidth);
        }
        if (sw >= 600) {
            setSize(context, getChildAt(2), orientation, 128);
            setSize(context, getChildAt(4), orientation, 128);
        }
!!!76259767.java!!!	setSize(inout context : BridgeContext, inout view : View, in orientation : int, in size : int) : void
        size *= context.getMetrics().density;
        LayoutParams layoutParams = (LayoutParams) view.getLayoutParams();
        if (orientation == HORIZONTAL) {
            layoutParams.width = size;
        } else {
            layoutParams.height = size;
        }
        view.setLayoutParams(layoutParams);
!!!76259895.java!!!	getSidePadding(in sw : float) : int
        if (sw >= 400) {
            return PADDING_WIDTH_SW400;
        }
        if (sw >= 360) {
            return PADDING_WIDTH_SW360;
        }
        return PADDING_WIDTH_DEFAULT;
!!!76260023.java!!!	getWidth(in sw : float) : int
        if (sw >= 600) {
            return WIDTH_SW600;
        }
        if (sw >= 360) {
            return WIDTH_SW360;
        }
        return WIDTH_DEFAULT;
!!!76260151.java!!!	getShortestWidth(inout context : BridgeContext) : float
        DisplayMetrics metrics = context.getMetrics();
        float sw = metrics.widthPixels < metrics.heightPixels ?
                metrics.widthPixels : metrics.heightPixels;
        sw /= metrics.density;
        return sw;
!!!76260279.java!!!	getStyleableTextView() : TextView
        return null;
