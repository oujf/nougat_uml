class FakeAdapter
!!!76289207.java!!!	FakeAdapter(inout adapterRef : ResourceReference, inout binding : AdapterBinding, inout callback : LayoutlibCallback)
        mAdapterRef = adapterRef;
        mCallback = callback;

        final int repeatCount = binding.getRepeatCount();
        final int itemCount = binding.getItemCount();

        // Need an array to count for each type.
        // This is likely too big, but is the max it can be.
        int[] typeCount = new int[itemCount];

        // We put several repeating sets.
        for (int r = 0 ; r < repeatCount ; r++) {
            // loop on the type of list items, and add however many for each type.
            for (DataBindingItem dataBindingItem : binding) {
                ResourceReference viewRef = dataBindingItem.getViewReference();
                int typeIndex = mTypes.indexOf(viewRef);
                if (typeIndex == -1) {
                    typeIndex = mTypes.size();
                    mTypes.add(viewRef);
                }

                int count = dataBindingItem.getCount();

                int index = typeCount[typeIndex];
                typeCount[typeIndex] += count;

                for (int k = 0 ; k < count ; k++) {
                    mItems.add(new AdapterItem(dataBindingItem, typeIndex, mItems.size(), index++));
                }
            }
        }
!!!76289335.java!!!	isEnabled(in position : int) : boolean
        return true;
!!!76289463.java!!!	getCount() : int
        return mItems.size();
!!!76289591.java!!!	getItem(in position : int) : Object
        return mItems.get(position);
!!!76289719.java!!!	getItemId(in position : int) : long
        return position;
!!!76289847.java!!!	getItemViewType(in position : int) : int
        return mItems.get(position).getType();
!!!76289975.java!!!	getView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
        // we don't care about recycling here because we never scroll.
        AdapterItem item = mItems.get(position);
        @SuppressWarnings("deprecation")
        Pair<View, Boolean> pair = AdapterHelper.getView(item, null, parent, mCallback,
                mAdapterRef, mSkipCallbackParser);
        mSkipCallbackParser = pair.getSecond();
        return pair.getFirst();
!!!76290103.java!!!	getViewTypeCount() : int
        return mTypes.size();
!!!76290231.java!!!	getDropDownView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
        // pass
        return null;
