class LayoutPullParser
!!!76322231.java!!!	LayoutPullParser(inout layoutPath : String)
        assert layoutPath.startsWith("/");
        try {
            init(getClass().getResourceAsStream(layoutPath));
        } catch (XmlPullParserException e) {
            throw new IOError(e);
        }
!!!76322359.java!!!	LayoutPullParser(inout layoutFile : File)
        try {
            init(new FileInputStream(layoutFile));
        } catch (XmlPullParserException | FileNotFoundException e) {
            throw new IOError(e);
        }
!!!76322487.java!!!	init(inout stream : InputStream) : void
        setFeature(FEATURE_PROCESS_NAMESPACES, true);
        setInput(stream, null);
!!!76322615.java!!!	getViewCookie() : Object
        // TODO: Implement this properly.
        String name = super.getName();
        if (name == null) {
            return null;
        }

        // Store tools attributes if this looks like a layout we'll need adapter view
        // bindings for in the LayoutlibCallback.
        if (LIST_VIEW.equals(name) || EXPANDABLE_LIST_VIEW.equals(name) || GRID_VIEW.equals(name) || SPINNER.equals(name)) {
            Map<String, String> map = null;
            int count = getAttributeCount();
            for (int i = 0; i < count; i++) {
                String namespace = getAttributeNamespace(i);
                if (namespace != null && namespace.equals(TOOLS_URI)) {
                    String attribute = getAttributeName(i);
                    if (attribute.equals(ATTR_IGNORE)) {
                        continue;
                    }
                    if (map == null) {
                        map = new HashMap<String, String>(4);
                    }
                    map.put(attribute, getAttributeValue(i));
                }
            }

            return map;
        }

        return null;
!!!76322743.java!!!	getParser(inout layoutName : String) : ILayoutPullParser
        // Studio returns null.
        return null;
