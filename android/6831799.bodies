class RenameMethodAdapter
!!!76325047.java!!!	RenameMethodAdapter(inout mv : MethodVisitor)
            super(Main.ASM_VERSION, mv);
!!!76325175.java!!!	visitAnnotation(inout desc : String, inout visible : boolean) : AnnotationVisitor
            desc = renameTypeDesc(desc);

            return super.visitAnnotation(desc, visible);
!!!76325303.java!!!	visitParameterAnnotation(in parameter : int, inout desc : String, inout visible : boolean) : AnnotationVisitor
            desc = renameTypeDesc(desc);

            return super.visitParameterAnnotation(parameter, desc, visible);
!!!76325431.java!!!	visitTypeInsn(in opcode : int, inout type : String) : void
            // The type sometimes turns out to be a type descriptor. We try to detect it and fix.
            if (type.indexOf(';') > 0) {
                type = renameTypeDesc(type);
            } else {
                type = renameInternalType(type);
            }
            super.visitTypeInsn(opcode, type);
!!!76325559.java!!!	visitFieldInsn(in opcode : int, inout owner : String, inout name : String, inout desc : String) : void
            owner = renameInternalType(owner);
            desc = renameTypeDesc(desc);

            super.visitFieldInsn(opcode, owner, name, desc);
!!!76325687.java!!!	visitMethodInsn(in opcode : int, inout owner : String, inout name : String, inout desc : String, inout itf : boolean) : void
            // The owner sometimes turns out to be a type descriptor. We try to detect it and fix.
            if (owner.indexOf(';') > 0) {
                owner = renameTypeDesc(owner);
            } else {
                owner = renameInternalType(owner);
            }
            desc = renameMethodDesc(desc);

            super.visitMethodInsn(opcode, owner, name, desc, itf);
!!!76325815.java!!!	visitLdcInsn(inout cst : Object) : void
            // If cst is a Type, this means the code is trying to pull the .class constant
            // for this class, so it needs to be renamed too.
            if (cst instanceof Type) {
                cst = renameTypeAsType((Type) cst);
            }
            super.visitLdcInsn(cst);
!!!76325943.java!!!	visitMultiANewArrayInsn(inout desc : String, in dims : int) : void
            desc = renameTypeDesc(desc);

            super.visitMultiANewArrayInsn(desc, dims);
!!!76326071.java!!!	visitTryCatchBlock(inout start : Label, inout end : Label, inout handler : Label, inout type : String) : void
            type = renameInternalType(type);

            super.visitTryCatchBlock(start, end, handler, type);
!!!76326199.java!!!	visitLocalVariable(inout name : String, inout desc : String, inout signature : String, inout start : Label, inout end : Label, in index : int) : void
            desc = renameTypeDesc(desc);
            signature = renameFieldSignature(signature);

            super.visitLocalVariable(name, desc, signature, start, end, index);
