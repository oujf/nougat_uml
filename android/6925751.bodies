class UserHandle
!!!80443959.java!!!	isSameUser(in uid1 : int, in uid2 : int) : boolean
        return getUserId(uid1) == getUserId(uid2);
!!!80444087.java!!!	isSameApp(in uid1 : int, in uid2 : int) : boolean
        return getAppId(uid1) == getAppId(uid2);
!!!80444215.java!!!	isIsolated(in uid : int) : boolean
        if (uid > 0) {
            final int appId = getAppId(uid);
            return appId >= Process.FIRST_ISOLATED_UID && appId <= Process.LAST_ISOLATED_UID;
        } else {
            return false;
        }
!!!80444343.java!!!	isApp(in uid : int) : boolean
        if (uid > 0) {
            final int appId = getAppId(uid);
            return appId >= Process.FIRST_APPLICATION_UID && appId <= Process.LAST_APPLICATION_UID;
        } else {
            return false;
        }
!!!80444471.java!!!	getUserHandleForUid(in uid : int) : UserHandle
        return of(getUserId(uid));
!!!80444599.java!!!	getUserId(in uid : int) : int
        if (MU_ENABLED) {
            return uid / PER_USER_RANGE;
        } else {
            return UserHandle.USER_SYSTEM;
        }
!!!80444727.java!!!	getCallingUserId() : int
        return getUserId(Binder.getCallingUid());
!!!80444855.java!!!	of(in userId : int) : UserHandle
        return userId == USER_SYSTEM ? SYSTEM : new UserHandle(userId);
!!!80444983.java!!!	getUid(in userId : int, in appId : int) : int
        if (MU_ENABLED) {
            return userId * PER_USER_RANGE + (appId % PER_USER_RANGE);
        } else {
            return appId;
        }
!!!80445111.java!!!	getAppId(in uid : int) : int
        return uid % PER_USER_RANGE;
!!!80445239.java!!!	getUserGid(in userId : int) : int
        return getUid(userId, Process.SHARED_USER_GID);
!!!80445367.java!!!	getSharedAppGid(in id : int) : int
        return Process.FIRST_SHARED_APPLICATION_GID + (id % PER_USER_RANGE)
                - Process.FIRST_APPLICATION_UID;
!!!80445495.java!!!	getAppIdFromSharedAppGid(in gid : int) : int
        final int appId = getAppId(gid) + Process.FIRST_APPLICATION_UID
                - Process.FIRST_SHARED_APPLICATION_GID;
        if (appId < 0 || appId >= Process.FIRST_SHARED_APPLICATION_GID) {
            return -1;
        }
        return appId;
!!!80445623.java!!!	formatUid(inout sb : StringBuilder, in uid : int) : void
        if (uid < Process.FIRST_APPLICATION_UID) {
            sb.append(uid);
        } else {
            sb.append('u');
            sb.append(getUserId(uid));
            final int appId = getAppId(uid);
            if (appId >= Process.FIRST_ISOLATED_UID && appId <= Process.LAST_ISOLATED_UID) {
                sb.append('i');
                sb.append(appId - Process.FIRST_ISOLATED_UID);
            } else if (appId >= Process.FIRST_APPLICATION_UID) {
                sb.append('a');
                sb.append(appId - Process.FIRST_APPLICATION_UID);
            } else {
                sb.append('s');
                sb.append(appId);
            }
        }
!!!80445751.java!!!	formatUid(in uid : int) : String
        StringBuilder sb = new StringBuilder();
        formatUid(sb, uid);
        return sb.toString();
!!!80445879.java!!!	formatUid(inout pw : PrintWriter, in uid : int) : void
        if (uid < Process.FIRST_APPLICATION_UID) {
            pw.print(uid);
        } else {
            pw.print('u');
            pw.print(getUserId(uid));
            final int appId = getAppId(uid);
            if (appId >= Process.FIRST_ISOLATED_UID && appId <= Process.LAST_ISOLATED_UID) {
                pw.print('i');
                pw.print(appId - Process.FIRST_ISOLATED_UID);
            } else if (appId >= Process.FIRST_APPLICATION_UID) {
                pw.print('a');
                pw.print(appId - Process.FIRST_APPLICATION_UID);
            } else {
                pw.print('s');
                pw.print(appId);
            }
        }
!!!80446007.java!!!	parseUserArg(inout arg : String) : int
        int userId;
        if ("all".equals(arg)) {
            userId = UserHandle.USER_ALL;
        } else if ("current".equals(arg) || "cur".equals(arg)) {
            userId = UserHandle.USER_CURRENT;
        } else {
            try {
                userId = Integer.parseInt(arg);
            } catch (NumberFormatException e) {
                throw new IllegalArgumentException("Bad user number: " + arg);
            }
        }
        return userId;
!!!80446135.java!!!	myUserId() : int
        return getUserId(Process.myUid());
!!!80446263.java!!!	isOwner() : boolean
        return this.equals(OWNER);
!!!80446391.java!!!	isSystem() : boolean
        return this.equals(SYSTEM);
!!!80446519.java!!!	UserHandle(in h : int)
        mHandle = h;
!!!80446647.java!!!	getIdentifier() : int
        return mHandle;
!!!80446775.java!!!	toString() : String
        return "UserHandle{" + mHandle + "}";
!!!80446903.java!!!	equals(inout obj : Object) : boolean
        try {
            if (obj != null) {
                UserHandle other = (UserHandle)obj;
                return mHandle == other.mHandle;
            }
        } catch (ClassCastException e) {
        }
        return false;
!!!80447031.java!!!	hashCode() : int
        return mHandle;
!!!80447159.java!!!	describeContents() : int
        return 0;
!!!80447287.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        out.writeInt(mHandle);
!!!80447415.java!!!	writeToParcel(inout h : UserHandle, inout out : Parcel) : void
        if (h != null) {
            h.writeToParcel(out, 0);
        } else {
            out.writeInt(USER_NULL);
        }
!!!80447543.java!!!	readFromParcel(inout in : Parcel) : UserHandle
        int h = in.readInt();
        return h != USER_NULL ? new UserHandle(h) : null;
!!!80447671.java!!!	UserHandle(inout in : Parcel)
        mHandle = in.readInt();
