class GestureDescription
!!!77082551.java!!!	getMaxStrokeCount() : int
        return MAX_STROKE_COUNT;
!!!77082679.java!!!	getMaxGestureDuration() : long
        return MAX_GESTURE_DURATION_MS;
!!!77082935.java!!!	GestureDescription(inout strokes : List<StrokeDescription>)
        mStrokes.addAll(strokes);
!!!77083063.java!!!	getStrokeCount() : int
        return mStrokes.size();
!!!77083191.java!!!	getStroke(in index : int) : GestureDescription::StrokeDescription
        return mStrokes.get(index);
!!!77083319.java!!!	getNextKeyPointAtLeast(in offset : long) : long
        long nextKeyPoint = Long.MAX_VALUE;
        for (int i = 0; i < mStrokes.size(); i++) {
            long thisStartTime = mStrokes.get(i).mStartTime;
            if ((thisStartTime < nextKeyPoint) && (thisStartTime >= offset)) {
                nextKeyPoint = thisStartTime;
            }
            long thisEndTime = mStrokes.get(i).mEndTime;
            if ((thisEndTime < nextKeyPoint) && (thisEndTime >= offset)) {
                nextKeyPoint = thisEndTime;
            }
        }
        return (nextKeyPoint == Long.MAX_VALUE) ? -1L : nextKeyPoint;
!!!77083447.java!!!	getPointsForTime(in time : long, inout touchPoints : GestureDescription::TouchPoint [[]]) : int
        int numPointsFound = 0;
        for (int i = 0; i < mStrokes.size(); i++) {
            StrokeDescription strokeDescription = mStrokes.get(i);
            if (strokeDescription.hasPointForTime(time)) {
                touchPoints[numPointsFound].mPathIndex = i;
                touchPoints[numPointsFound].mIsStartOfPath = (time == strokeDescription.mStartTime);
                touchPoints[numPointsFound].mIsEndOfPath = (time == strokeDescription.mEndTime);
                strokeDescription.getPosForTime(time, mTempPos);
                touchPoints[numPointsFound].mX = Math.round(mTempPos[0]);
                touchPoints[numPointsFound].mY = Math.round(mTempPos[1]);
                numPointsFound++;
            }
        }
        return numPointsFound;
!!!77083575.java!!!	getTotalDuration(inout paths : List<StrokeDescription>) : long
        long latestEnd = Long.MIN_VALUE;
        for (int i = 0; i < paths.size(); i++) {
            StrokeDescription path = paths.get(i);
            latestEnd = Math.max(latestEnd, path.mEndTime);
        }
        return Math.max(latestEnd, 0);
