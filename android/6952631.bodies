class ViewHierarchyEncoder
!!!81653943.java!!!	ViewHierarchyEncoder(inout stream : ByteArrayOutputStream)
        mStream = new DataOutputStream(stream);
!!!81654071.java!!!	beginObject(inout o : Object) : void
        startPropertyMap();
        addProperty("meta:__name__", o.getClass().getName());
        addProperty("meta:__hash__", o.hashCode());
!!!81654199.java!!!	endObject() : void
        endPropertyMap();
!!!81654327.java!!!	endStream() : void
        // write out the string table
        startPropertyMap();
        addProperty("__name__", "propertyIndex");
        for (Map.Entry<String,Short> entry : mPropertyNames.entrySet()) {
            writeShort(entry.getValue());
            writeString(entry.getKey());
        }
        endPropertyMap();
!!!81654455.java!!!	addProperty(inout name : String, inout v : boolean) : void
        writeShort(createPropertyIndex(name));
        writeBoolean(v);
!!!81654583.java!!!	addProperty(inout name : String, in s : short) : void
        writeShort(createPropertyIndex(name));
        writeShort(s);
!!!81654711.java!!!	addProperty(inout name : String, in v : int) : void
        writeShort(createPropertyIndex(name));
        writeInt(v);
!!!81654839.java!!!	addProperty(inout name : String, in v : float) : void
        writeShort(createPropertyIndex(name));
        writeFloat(v);
!!!81654967.java!!!	addProperty(inout name : String, inout s : String) : void
        writeShort(createPropertyIndex(name));
        writeString(s);
!!!81655095.java!!!	addPropertyKey(inout name : String) : void
        writeShort(createPropertyIndex(name));
!!!81655223.java!!!	createPropertyIndex(inout name : String) : short
        Short index = mPropertyNames.get(name);
        if (index == null) {
            index = mPropertyId++;
            mPropertyNames.put(name, index);
        }

        return index;
!!!81655351.java!!!	startPropertyMap() : void
        try {
            mStream.write(SIG_MAP);
        } catch (IOException e) {
            // does not happen since the stream simply wraps a ByteArrayOutputStream
        }
!!!81655479.java!!!	endPropertyMap() : void
        writeShort(SIG_END_MAP);
!!!81655607.java!!!	writeBoolean(inout v : boolean) : void
        try {
            mStream.write(SIG_BOOLEAN);
            mStream.write(v ? 1 : 0);
        } catch (IOException e) {
            // does not happen since the stream simply wraps a ByteArrayOutputStream
        }
!!!81655735.java!!!	writeShort(in s : short) : void
        try {
            mStream.write(SIG_SHORT);
            mStream.writeShort(s);
        } catch (IOException e) {
            // does not happen since the stream simply wraps a ByteArrayOutputStream
        }
!!!81655863.java!!!	writeInt(in i : int) : void
        try {
            mStream.write(SIG_INT);
            mStream.writeInt(i);
        } catch (IOException e) {
            // does not happen since the stream simply wraps a ByteArrayOutputStream
        }
!!!81655991.java!!!	writeFloat(in v : float) : void
        try {
            mStream.write(SIG_FLOAT);
            mStream.writeFloat(v);
        } catch (IOException e) {
            // does not happen since the stream simply wraps a ByteArrayOutputStream
        }
!!!81656119.java!!!	writeString(inout s : String) : void
        if (s == null) {
            s = "";
        }

        try {
            mStream.write(SIG_STRING);
            byte[] bytes = s.getBytes(mCharset);

            short len = (short)Math.min(bytes.length, Short.MAX_VALUE);
            mStream.writeShort(len);

            mStream.write(bytes, 0, len);
        } catch (IOException e) {
            // does not happen since the stream simply wraps a ByteArrayOutputStream
        }
