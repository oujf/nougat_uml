class Future2Task
!!!77317303.java!!!	Future2Task(inout handler : Handler, inout callback : AccountManagerCallback)
            super(handler);
            mCallback = callback;
!!!77317431.java!!!	done() : void
            if (mCallback != null) {
                postRunnableToHandler(new Runnable() {
                    @Override
                    public void run() {
                        mCallback.run(Future2Task.this);
                    }
                });
            }
!!!77317559.java!!!	start() : AccountManager::Future2Task
            startTask();
            return this;
!!!77317687.java!!!	internalGetResult(inout timeout : Long, inout unit : TimeUnit) : T
            if (!isDone()) {
                ensureNotOnMainThread();
            }
            try {
                if (timeout == null) {
                    return get();
                } else {
                    return get(timeout, unit);
                }
            } catch (InterruptedException e) {
                // fall through and cancel
            } catch (TimeoutException e) {
                // fall through and cancel
            } catch (CancellationException e) {
                // fall through and cancel
            } catch (ExecutionException e) {
                final Throwable cause = e.getCause();
                if (cause instanceof IOException) {
                    throw (IOException) cause;
                } else if (cause instanceof UnsupportedOperationException) {
                    throw new AuthenticatorException(cause);
                } else if (cause instanceof AuthenticatorException) {
                    throw (AuthenticatorException) cause;
                } else if (cause instanceof RuntimeException) {
                    throw (RuntimeException) cause;
                } else if (cause instanceof Error) {
                    throw (Error) cause;
                } else {
                    throw new IllegalStateException(cause);
                }
            } finally {
                cancel(true /* interrupt if running */);
            }
            throw new OperationCanceledException();
!!!77317815.java!!!	getResult() : T
            return internalGetResult(null, null);
!!!77317943.java!!!	getResult(in timeout : long, inout unit : TimeUnit) : T
            return internalGetResult(timeout, unit);
