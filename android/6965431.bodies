class AnimationHandler
!!!77358775.java!!!	getInstance() : AnimationHandler
        if (sAnimatorHandler.get() == null) {
            sAnimatorHandler.set(new AnimationHandler());
        }
        return sAnimatorHandler.get();
!!!77358903.java!!!	setProvider(inout provider : AnimationHandler::AnimationFrameCallbackProvider) : void
        if (provider == null) {
            mProvider = new MyFrameCallbackProvider();
        } else {
            mProvider = provider;
        }
!!!77359031.java!!!	getProvider() : AnimationHandler::AnimationFrameCallbackProvider
        if (mProvider == null) {
            mProvider = new MyFrameCallbackProvider();
        }
        return mProvider;
!!!77359159.java!!!	addAnimationFrameCallback(in callback : AnimationHandler::AnimationFrameCallback, in delay : long) : void
        if (mAnimationCallbacks.size() == 0) {
            getProvider().postFrameCallback(mFrameCallback);
        }
        if (!mAnimationCallbacks.contains(callback)) {
            mAnimationCallbacks.add(callback);
        }

        if (delay > 0) {
            mDelayedCallbackStartTime.put(callback, (SystemClock.uptimeMillis() + delay));
        }
!!!77359287.java!!!	addOneShotCommitCallback(in callback : AnimationHandler::AnimationFrameCallback) : void
        if (!mCommitCallbacks.contains(callback)) {
            mCommitCallbacks.add(callback);
        }
!!!77359415.java!!!	removeCallback(inout callback : AnimationHandler::AnimationFrameCallback) : void
        mCommitCallbacks.remove(callback);
        mDelayedCallbackStartTime.remove(callback);
        int id = mAnimationCallbacks.indexOf(callback);
        if (id >= 0) {
            mAnimationCallbacks.set(id, null);
            mListDirty = true;
        }
!!!77359543.java!!!	doAnimationFrame(in frameTime : long) : void
        int size = mAnimationCallbacks.size();
        long currentTime = SystemClock.uptimeMillis();
        for (int i = 0; i < size; i++) {
            final AnimationFrameCallback callback = mAnimationCallbacks.get(i);
            if (callback == null) {
                continue;
            }
            if (isCallbackDue(callback, currentTime)) {
                callback.doAnimationFrame(frameTime);
                if (mCommitCallbacks.contains(callback)) {
                    getProvider().postCommitCallback(new Runnable() {
                        @Override
                        public void run() {
                            commitAnimationFrame(callback, getProvider().getFrameTime());
                        }
                    });
                }
            }
        }
        cleanUpList();
!!!77359671.java!!!	commitAnimationFrame(inout callback : AnimationHandler::AnimationFrameCallback, in frameTime : long) : void
        if (!mDelayedCallbackStartTime.containsKey(callback) &&
                mCommitCallbacks.contains(callback)) {
            callback.commitAnimationFrame(frameTime);
            mCommitCallbacks.remove(callback);
        }
!!!77359799.java!!!	isCallbackDue(inout callback : AnimationHandler::AnimationFrameCallback, in currentTime : long) : boolean
        Long startTime = mDelayedCallbackStartTime.get(callback);
        if (startTime == null) {
            return true;
        }
        if (startTime < currentTime) {
            mDelayedCallbackStartTime.remove(callback);
            return true;
        }
        return false;
!!!77359927.java!!!	getAnimationCount() : int
        AnimationHandler handler = sAnimatorHandler.get();
        if (handler == null) {
            return 0;
        }
        return handler.getCallbackSize();
!!!77360055.java!!!	setFrameDelay(in delay : long) : void
        getInstance().getProvider().setFrameDelay(delay);
!!!77360183.java!!!	getFrameDelay() : long
        return getInstance().getProvider().getFrameDelay();
!!!77360311.java!!!	autoCancelBasedOn(inout objectAnimator : ObjectAnimator) : void
        for (int i = mAnimationCallbacks.size() - 1; i >= 0; i--) {
            AnimationFrameCallback cb = mAnimationCallbacks.get(i);
            if (cb == null) {
                continue;
            }
            if (objectAnimator.shouldAutoCancel(cb)) {
                ((Animator) mAnimationCallbacks.get(i)).cancel();
            }
        }
!!!77360439.java!!!	cleanUpList() : void
        if (mListDirty) {
            for (int i = mAnimationCallbacks.size() - 1; i >= 0; i--) {
                if (mAnimationCallbacks.get(i) == null) {
                    mAnimationCallbacks.remove(i);
                }
            }
            mListDirty = false;
        }
!!!77360567.java!!!	getCallbackSize() : int
        int count = 0;
        int size = mAnimationCallbacks.size();
        for (int i = size - 1; i >= 0; i--) {
            if (mAnimationCallbacks.get(i) != null) {
                count++;
            }
        }
        return count;
