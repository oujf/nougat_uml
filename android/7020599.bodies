class DatePicker
!!!77901623.java!!!	DatePicker(inout context : Context)
        this(context, null);
!!!77901751.java!!!	DatePicker(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, R.attr.datePickerStyle);
!!!77901879.java!!!	DatePicker(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int)
        this(context, attrs, defStyleAttr, 0);
!!!77902007.java!!!	DatePicker(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int, in defStyleRes : int)
        super(context, attrs, defStyleAttr, defStyleRes);

        final TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.DatePicker,
                defStyleAttr, defStyleRes);
        final int mode = a.getInt(R.styleable.DatePicker_datePickerMode, MODE_SPINNER);
        final int firstDayOfWeek = a.getInt(R.styleable.DatePicker_firstDayOfWeek, 0);
        a.recycle();

        switch (mode) {
            case MODE_CALENDAR:
                mDelegate = createCalendarUIDelegate(context, attrs, defStyleAttr, defStyleRes);
                break;
            case MODE_SPINNER:
            default:
                mDelegate = createSpinnerUIDelegate(context, attrs, defStyleAttr, defStyleRes);
                break;
        }

        if (firstDayOfWeek != 0) {
            setFirstDayOfWeek(firstDayOfWeek);
        }
!!!77902135.java!!!	createSpinnerUIDelegate(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int, in defStyleRes : int) : DatePicker::DatePickerDelegate
        return new DatePickerSpinnerDelegate(this, context, attrs, defStyleAttr, defStyleRes);
!!!77902263.java!!!	createCalendarUIDelegate(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int, in defStyleRes : int) : DatePicker::DatePickerDelegate
        return new DatePickerCalendarDelegate(this, context, attrs, defStyleAttr,
                defStyleRes);
!!!77902391.java!!!	init(in year : int, in monthOfYear : int, in dayOfMonth : int, inout onDateChangedListener : DatePicker::OnDateChangedListener) : void
        mDelegate.init(year, monthOfYear, dayOfMonth, onDateChangedListener);
!!!77902519.java!!!	updateDate(in year : int, in month : int, in dayOfMonth : int) : void
        mDelegate.updateDate(year, month, dayOfMonth);
!!!77902647.java!!!	getYear() : int
        return mDelegate.getYear();
!!!77902775.java!!!	getMonth() : int
        return mDelegate.getMonth();
!!!77902903.java!!!	getDayOfMonth() : int
        return mDelegate.getDayOfMonth();
!!!77903031.java!!!	getMinDate() : long
        return mDelegate.getMinDate().getTimeInMillis();
!!!77903159.java!!!	setMinDate(in minDate : long) : void
        mDelegate.setMinDate(minDate);
!!!77903287.java!!!	getMaxDate() : long
        return mDelegate.getMaxDate().getTimeInMillis();
!!!77903415.java!!!	setMaxDate(in maxDate : long) : void
        mDelegate.setMaxDate(maxDate);
!!!77903543.java!!!	setValidationCallback(inout callback : DatePicker::ValidationCallback) : void
        mDelegate.setValidationCallback(callback);
!!!77903671.java!!!	setEnabled(inout enabled : boolean) : void
        if (mDelegate.isEnabled() == enabled) {
            return;
        }
        super.setEnabled(enabled);
        mDelegate.setEnabled(enabled);
!!!77903799.java!!!	isEnabled() : boolean
        return mDelegate.isEnabled();
!!!77903927.java!!!	dispatchPopulateAccessibilityEventInternal(inout event : AccessibilityEvent) : boolean
        return mDelegate.dispatchPopulateAccessibilityEvent(event);
!!!77904055.java!!!	onPopulateAccessibilityEventInternal(inout event : AccessibilityEvent) : void
        super.onPopulateAccessibilityEventInternal(event);
        mDelegate.onPopulateAccessibilityEvent(event);
!!!77904183.java!!!	getAccessibilityClassName() : CharSequence
        return DatePicker.class.getName();
!!!77904311.java!!!	onConfigurationChanged(inout newConfig : Configuration) : void
        super.onConfigurationChanged(newConfig);
        mDelegate.onConfigurationChanged(newConfig);
!!!77904439.java!!!	setFirstDayOfWeek(in firstDayOfWeek : int) : void
        if (firstDayOfWeek < Calendar.SUNDAY || firstDayOfWeek > Calendar.SATURDAY) {
            throw new IllegalArgumentException("firstDayOfWeek must be between 1 and 7");
        }
        mDelegate.setFirstDayOfWeek(firstDayOfWeek);
!!!77904567.java!!!	getFirstDayOfWeek() : int
        return mDelegate.getFirstDayOfWeek();
!!!77904695.java!!!	getCalendarViewShown() : boolean
        return mDelegate.getCalendarViewShown();
!!!77904823.java!!!	getCalendarView() : CalendarView
        return mDelegate.getCalendarView();
!!!77904951.java!!!	setCalendarViewShown(inout shown : boolean) : void
        mDelegate.setCalendarViewShown(shown);
!!!77905079.java!!!	getSpinnersShown() : boolean
        return mDelegate.getSpinnersShown();
!!!77905207.java!!!	setSpinnersShown(inout shown : boolean) : void
        mDelegate.setSpinnersShown(shown);
!!!77905335.java!!!	dispatchRestoreInstanceState(inout container : SparseArray) : void
        dispatchThawSelfOnly(container);
!!!77905463.java!!!	onSaveInstanceState() : Parcelable
        Parcelable superState = super.onSaveInstanceState();
        return mDelegate.onSaveInstanceState(superState);
!!!77905591.java!!!	onRestoreInstanceState(inout state : Parcelable) : void
        BaseSavedState ss = (BaseSavedState) state;
        super.onRestoreInstanceState(ss.getSuperState());
        mDelegate.onRestoreInstanceState(ss);
