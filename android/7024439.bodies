class Stub
!!!77970359.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!77970487.java!!!	asInterface(inout obj : IBinder) : IAppTask
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.app.IAppTask))) {
return ((android.app.IAppTask)iin);
}
return new android.app.IAppTask.Stub.Proxy(obj);
!!!77970615.java!!!	asBinder() : IBinder
return this;
!!!77970743.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_finishAndRemoveTask:
{
data.enforceInterface(DESCRIPTOR);
this.finishAndRemoveTask();
reply.writeNoException();
return true;
}
case TRANSACTION_getTaskInfo:
{
data.enforceInterface(DESCRIPTOR);
android.app.ActivityManager.RecentTaskInfo _result = this.getTaskInfo();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_moveToFront:
{
data.enforceInterface(DESCRIPTOR);
this.moveToFront();
reply.writeNoException();
return true;
}
case TRANSACTION_startActivity:
{
data.enforceInterface(DESCRIPTOR);
android.os.IBinder _arg0;
_arg0 = data.readStrongBinder();
java.lang.String _arg1;
_arg1 = data.readString();
android.content.Intent _arg2;
if ((0!=data.readInt())) {
_arg2 = android.content.Intent.CREATOR.createFromParcel(data);
}
else {
_arg2 = null;
}
java.lang.String _arg3;
_arg3 = data.readString();
android.os.Bundle _arg4;
if ((0!=data.readInt())) {
_arg4 = android.os.Bundle.CREATOR.createFromParcel(data);
}
else {
_arg4 = null;
}
int _result = this.startActivity(_arg0, _arg1, _arg2, _arg3, _arg4);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_setExcludeFromRecents:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.setExcludeFromRecents(_arg0);
reply.writeNoException();
return true;
}
}
return super.onTransact(code, data, reply, flags);
