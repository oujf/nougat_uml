class Adjustment
!!!80837047.java!!!	Adjustment(inout pkg : String, inout key : String, in importance : int, inout signals : Bundle, inout explanation : CharSequence, inout reference : Uri, in user : int)
        mPackage = pkg;
        mKey = key;
        mImportance = importance;
        mSignals = signals;
        mExplanation = explanation;
        mReference = reference;
        mUser = user;
!!!80837175.java!!!	Adjustment(inout in : Parcel)
        if (in.readInt() == 1) {
            mPackage = in.readString();
        } else {
            mPackage = null;
        }
        if (in.readInt() == 1) {
            mKey = in.readString();
        } else {
            mKey = null;
        }
        mImportance = in.readInt();
        if (in.readInt() == 1) {
            mExplanation = in.readCharSequence();
        } else {
            mExplanation = null;
        }
        mReference = in.readParcelable(Uri.class.getClassLoader());
        mSignals = in.readBundle();
        mUser = in.readInt();
!!!80837303.java!!!	getPackage() : String
        return mPackage;
!!!80837431.java!!!	getKey() : String
        return mKey;
!!!80837559.java!!!	getImportance() : int
        return mImportance;
!!!80837687.java!!!	getExplanation() : CharSequence
        return mExplanation;
!!!80837815.java!!!	getReference() : Uri
        return mReference;
!!!80837943.java!!!	getSignals() : Bundle
        return mSignals;
!!!80838071.java!!!	getUser() : int
        return mUser;
!!!80838199.java!!!	describeContents() : int
        return 0;
!!!80838327.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        if (mPackage != null) {
            dest.writeInt(1);
            dest.writeString(mPackage);
        } else {
            dest.writeInt(0);
        }
        if (mKey != null) {
            dest.writeInt(1);
            dest.writeString(mKey);
        } else {
            dest.writeInt(0);
        }
        dest.writeInt(mImportance);
        if (mExplanation != null) {
            dest.writeInt(1);
            dest.writeCharSequence(mExplanation);
        } else {
            dest.writeInt(0);
        }
        dest.writeParcelable(mReference, flags);
        dest.writeBundle(mSignals);
        dest.writeInt(mUser);
