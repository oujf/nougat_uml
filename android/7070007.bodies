class Stub
!!!78438199.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!78438327.java!!!	asInterface(inout obj : IBinder) : IJobScheduler
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.app.job.IJobScheduler))) {
return ((android.app.job.IJobScheduler)iin);
}
return new android.app.job.IJobScheduler.Stub.Proxy(obj);
!!!78438455.java!!!	asBinder() : IBinder
return this;
!!!78438583.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_schedule:
{
data.enforceInterface(DESCRIPTOR);
android.app.job.JobInfo _arg0;
if ((0!=data.readInt())) {
_arg0 = android.app.job.JobInfo.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
int _result = this.schedule(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_scheduleAsPackage:
{
data.enforceInterface(DESCRIPTOR);
android.app.job.JobInfo _arg0;
if ((0!=data.readInt())) {
_arg0 = android.app.job.JobInfo.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
java.lang.String _arg1;
_arg1 = data.readString();
int _arg2;
_arg2 = data.readInt();
java.lang.String _arg3;
_arg3 = data.readString();
int _result = this.scheduleAsPackage(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_cancel:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.cancel(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_cancelAll:
{
data.enforceInterface(DESCRIPTOR);
this.cancelAll();
reply.writeNoException();
return true;
}
case TRANSACTION_getAllPendingJobs:
{
data.enforceInterface(DESCRIPTOR);
java.util.List<android.app.job.JobInfo> _result = this.getAllPendingJobs();
reply.writeNoException();
reply.writeTypedList(_result);
return true;
}
case TRANSACTION_getPendingJob:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.app.job.JobInfo _result = this.getPendingJob(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
}
return super.onTransact(code, data, reply, flags);
