class Proxy
!!!78438711.java!!!	Proxy(inout remote : IBinder)
mRemote = remote;
!!!78438839.java!!!	asBinder() : IBinder
return mRemote;
!!!78438967.java!!!	getInterfaceDescriptor() : String
return DESCRIPTOR;
!!!78439095.java!!!	schedule(inout job : JobInfo) : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((job!=null)) {
_data.writeInt(1);
job.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_schedule, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!78439223.java!!!	scheduleAsPackage(inout job : JobInfo, inout packageName : String, in userId : int, inout tag : String) : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((job!=null)) {
_data.writeInt(1);
job.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeString(packageName);
_data.writeInt(userId);
_data.writeString(tag);
mRemote.transact(Stub.TRANSACTION_scheduleAsPackage, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!78439351.java!!!	cancel(in jobId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(jobId);
mRemote.transact(Stub.TRANSACTION_cancel, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78439479.java!!!	cancelAll() : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_cancelAll, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78439607.java!!!	getAllPendingJobs() : JobInfo
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.app.job.JobInfo> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getAllPendingJobs, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.app.job.JobInfo.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!78439735.java!!!	getPendingJob(in jobId : int) : JobInfo
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.app.job.JobInfo _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(jobId);
mRemote.transact(Stub.TRANSACTION_getPendingJob, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.app.job.JobInfo.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
