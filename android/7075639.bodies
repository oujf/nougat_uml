class UsageStats
!!!78474423.java!!!	UsageStats(inout stats : UsageStats)
        mPackageName = stats.mPackageName;
        mBeginTimeStamp = stats.mBeginTimeStamp;
        mEndTimeStamp = stats.mEndTimeStamp;
        mLastTimeUsed = stats.mLastTimeUsed;
        mTotalTimeInForeground = stats.mTotalTimeInForeground;
        mLaunchCount = stats.mLaunchCount;
        mLastEvent = stats.mLastEvent;
!!!78474551.java!!!	getPackageName() : String
        return mPackageName;
!!!78474679.java!!!	getFirstTimeStamp() : long
        return mBeginTimeStamp;
!!!78474807.java!!!	getLastTimeStamp() : long
        return mEndTimeStamp;
!!!78474935.java!!!	getLastTimeUsed() : long
        return mLastTimeUsed;
!!!78475063.java!!!	getTotalTimeInForeground() : long
        return mTotalTimeInForeground;
!!!78475191.java!!!	add(inout right : UsageStats) : void
        if (!mPackageName.equals(right.mPackageName)) {
            throw new IllegalArgumentException("Can't merge UsageStats for package '" +
                    mPackageName + "' with UsageStats for package '" + right.mPackageName + "'.");
        }

        if (right.mBeginTimeStamp > mBeginTimeStamp) {
            // The incoming UsageStat begins after this one, so use its last time used fields
            // as the source of truth.
            // We use the mBeginTimeStamp due to a bug where UsageStats files can overlap with
            // regards to their mEndTimeStamp.
            mLastEvent = right.mLastEvent;
            mLastTimeUsed = right.mLastTimeUsed;
        }
        mBeginTimeStamp = Math.min(mBeginTimeStamp, right.mBeginTimeStamp);
        mEndTimeStamp = Math.max(mEndTimeStamp, right.mEndTimeStamp);
        mTotalTimeInForeground += right.mTotalTimeInForeground;
        mLaunchCount += right.mLaunchCount;
!!!78475319.java!!!	describeContents() : int
        return 0;
!!!78475447.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeString(mPackageName);
        dest.writeLong(mBeginTimeStamp);
        dest.writeLong(mEndTimeStamp);
        dest.writeLong(mLastTimeUsed);
        dest.writeLong(mTotalTimeInForeground);
        dest.writeInt(mLaunchCount);
        dest.writeInt(mLastEvent);
