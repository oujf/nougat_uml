class Proxy
!!!78620471.java!!!	Proxy(inout remote : IBinder)
mRemote = remote;
!!!78620599.java!!!	asBinder() : IBinder
return mRemote;
!!!78620727.java!!!	getInterfaceDescriptor() : String
return DESCRIPTOR;
!!!78620855.java!!!	getDevicesMatchingConnectionStates(inout states : int [[]]) : BluetoothDevice
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.bluetooth.BluetoothDevice> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeIntArray(states);
mRemote.transact(Stub.TRANSACTION_getDevicesMatchingConnectionStates, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.bluetooth.BluetoothDevice.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!78620983.java!!!	startScan(in appIf : int, inout isServer : boolean, inout settings : ScanSettings, inout filters : java.util.List<android.bluetooth.le.ScanFilter>, inout workSource : WorkSource, inout scanStorages : java.util.List, inout callingPackage : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(appIf);
_data.writeInt(((isServer)?(1):(0)));
if ((settings!=null)) {
_data.writeInt(1);
settings.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeTypedList(filters);
if ((workSource!=null)) {
_data.writeInt(1);
workSource.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeList(scanStorages);
_data.writeString(callingPackage);
mRemote.transact(Stub.TRANSACTION_startScan, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78621111.java!!!	stopScan(in appIf : int, inout isServer : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(appIf);
_data.writeInt(((isServer)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_stopScan, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78621239.java!!!	flushPendingBatchResults(in appIf : int, inout isServer : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(appIf);
_data.writeInt(((isServer)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_flushPendingBatchResults, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78621367.java!!!	startMultiAdvertising(in appIf : int, inout advertiseData : AdvertiseData, inout scanResponse : AdvertiseData, inout settings : AdvertiseSettings) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(appIf);
if ((advertiseData!=null)) {
_data.writeInt(1);
advertiseData.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((scanResponse!=null)) {
_data.writeInt(1);
scanResponse.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((settings!=null)) {
_data.writeInt(1);
settings.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_startMultiAdvertising, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78621495.java!!!	stopMultiAdvertising(in appIf : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(appIf);
mRemote.transact(Stub.TRANSACTION_stopMultiAdvertising, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78621623.java!!!	registerClient(inout appId : ParcelUuid, inout callback : IBluetoothGattCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((appId!=null)) {
_data.writeInt(1);
appId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_registerClient, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78621751.java!!!	unregisterClient(in clientIf : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
mRemote.transact(Stub.TRANSACTION_unregisterClient, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78621879.java!!!	clientConnect(in clientIf : int, inout address : String, inout isDirect : boolean, in transport : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(((isDirect)?(1):(0)));
_data.writeInt(transport);
mRemote.transact(Stub.TRANSACTION_clientConnect, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78622007.java!!!	clientDisconnect(in clientIf : int, inout address : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_clientDisconnect, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78622135.java!!!	refreshDevice(in clientIf : int, inout address : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_refreshDevice, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78622263.java!!!	discoverServices(in clientIf : int, inout address : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_discoverServices, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78622391.java!!!	readCharacteristic(in clientIf : int, inout address : String, in handle : int, in authReq : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(handle);
_data.writeInt(authReq);
mRemote.transact(Stub.TRANSACTION_readCharacteristic, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78622519.java!!!	writeCharacteristic(in clientIf : int, inout address : String, in handle : int, in writeType : int, in authReq : int, inout value : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(handle);
_data.writeInt(writeType);
_data.writeInt(authReq);
_data.writeByteArray(value);
mRemote.transact(Stub.TRANSACTION_writeCharacteristic, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78622647.java!!!	readDescriptor(in clientIf : int, inout address : String, in handle : int, in authReq : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(handle);
_data.writeInt(authReq);
mRemote.transact(Stub.TRANSACTION_readDescriptor, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78622775.java!!!	writeDescriptor(in clientIf : int, inout address : String, in handle : int, in writeType : int, in authReq : int, inout value : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(handle);
_data.writeInt(writeType);
_data.writeInt(authReq);
_data.writeByteArray(value);
mRemote.transact(Stub.TRANSACTION_writeDescriptor, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78622903.java!!!	registerForNotification(in clientIf : int, inout address : String, in handle : int, inout enable : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(handle);
_data.writeInt(((enable)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_registerForNotification, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78623031.java!!!	beginReliableWrite(in clientIf : int, inout address : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_beginReliableWrite, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78623159.java!!!	endReliableWrite(in clientIf : int, inout address : String, inout execute : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(((execute)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_endReliableWrite, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78623287.java!!!	readRemoteRssi(in clientIf : int, inout address : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_readRemoteRssi, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78623415.java!!!	configureMTU(in clientIf : int, inout address : String, in mtu : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(mtu);
mRemote.transact(Stub.TRANSACTION_configureMTU, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78623543.java!!!	connectionParameterUpdate(in clientIf : int, inout address : String, in connectionPriority : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(connectionPriority);
mRemote.transact(Stub.TRANSACTION_connectionParameterUpdate, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78623671.java!!!	registerServer(inout appId : ParcelUuid, inout callback : IBluetoothGattServerCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((appId!=null)) {
_data.writeInt(1);
appId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_registerServer, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78623799.java!!!	unregisterServer(in serverIf : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
mRemote.transact(Stub.TRANSACTION_unregisterServer, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78623927.java!!!	serverConnect(in servertIf : int, inout address : String, inout isDirect : boolean, in transport : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(servertIf);
_data.writeString(address);
_data.writeInt(((isDirect)?(1):(0)));
_data.writeInt(transport);
mRemote.transact(Stub.TRANSACTION_serverConnect, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78624055.java!!!	serverDisconnect(in serverIf : int, inout address : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_serverDisconnect, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78624183.java!!!	beginServiceDeclaration(in serverIf : int, in srvcType : int, in srvcInstanceId : int, in minHandles : int, inout srvcId : ParcelUuid, inout advertisePreferred : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
_data.writeInt(srvcType);
_data.writeInt(srvcInstanceId);
_data.writeInt(minHandles);
if ((srvcId!=null)) {
_data.writeInt(1);
srvcId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(((advertisePreferred)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_beginServiceDeclaration, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78624311.java!!!	addIncludedService(in serverIf : int, in srvcType : int, in srvcInstanceId : int, inout srvcId : ParcelUuid) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
_data.writeInt(srvcType);
_data.writeInt(srvcInstanceId);
if ((srvcId!=null)) {
_data.writeInt(1);
srvcId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_addIncludedService, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78624439.java!!!	addCharacteristic(in serverIf : int, inout charId : ParcelUuid, in properties : int, in permissions : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
if ((charId!=null)) {
_data.writeInt(1);
charId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(properties);
_data.writeInt(permissions);
mRemote.transact(Stub.TRANSACTION_addCharacteristic, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78624567.java!!!	addDescriptor(in serverIf : int, inout descId : ParcelUuid, in permissions : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
if ((descId!=null)) {
_data.writeInt(1);
descId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(permissions);
mRemote.transact(Stub.TRANSACTION_addDescriptor, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78624695.java!!!	endServiceDeclaration(in serverIf : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
mRemote.transact(Stub.TRANSACTION_endServiceDeclaration, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78624823.java!!!	removeService(in serverIf : int, in srvcType : int, in srvcInstanceId : int, inout srvcId : ParcelUuid) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
_data.writeInt(srvcType);
_data.writeInt(srvcInstanceId);
if ((srvcId!=null)) {
_data.writeInt(1);
srvcId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_removeService, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78624951.java!!!	clearServices(in serverIf : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
mRemote.transact(Stub.TRANSACTION_clearServices, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78625079.java!!!	sendResponse(in serverIf : int, inout address : String, in requestId : int, in status : int, in offset : int, inout value : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
_data.writeString(address);
_data.writeInt(requestId);
_data.writeInt(status);
_data.writeInt(offset);
_data.writeByteArray(value);
mRemote.transact(Stub.TRANSACTION_sendResponse, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78625207.java!!!	sendNotification(in serverIf : int, inout address : String, in srvcType : int, in srvcInstanceId : int, inout srvcId : ParcelUuid, in charInstanceId : int, inout charId : ParcelUuid, inout confirm : boolean, inout value : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
_data.writeString(address);
_data.writeInt(srvcType);
_data.writeInt(srvcInstanceId);
if ((srvcId!=null)) {
_data.writeInt(1);
srvcId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(charInstanceId);
if ((charId!=null)) {
_data.writeInt(1);
charId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(((confirm)?(1):(0)));
_data.writeByteArray(value);
mRemote.transact(Stub.TRANSACTION_sendNotification, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78625335.java!!!	disconnectAll() : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_disconnectAll, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78625463.java!!!	unregAll() : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_unregAll, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!78625591.java!!!	numHwTrackFiltersAvailable() : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_numHwTrackFiltersAvailable, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
