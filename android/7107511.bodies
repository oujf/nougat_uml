class RestrictionEntry
!!!78834615.java!!!	RestrictionEntry(in type : int, inout key : String)
        mType = type;
        mKey = key;
!!!78834743.java!!!	RestrictionEntry(inout key : String, inout selectedString : String)
        this.mKey = key;
        this.mType = TYPE_CHOICE;
        this.mCurrentValue = selectedString;
!!!78834871.java!!!	RestrictionEntry(inout key : String, inout selectedState : boolean)
        this.mKey = key;
        this.mType = TYPE_BOOLEAN;
        setSelectedState(selectedState);
!!!78834999.java!!!	RestrictionEntry(inout key : String, inout selectedStrings : String [[]])
        this.mKey = key;
        this.mType = TYPE_MULTI_SELECT;
        this.mCurrentValues = selectedStrings;
!!!78835127.java!!!	RestrictionEntry(inout key : String, in selectedInt : int)
        mKey = key;
        mType = TYPE_INTEGER;
        setIntValue(selectedInt);
!!!78835255.java!!!	RestrictionEntry(inout key : String, inout restrictionEntries : RestrictionEntry [[]], inout isBundleArray : boolean)
        mKey = key;
        if (isBundleArray) {
            mType = TYPE_BUNDLE_ARRAY;
            if (restrictionEntries != null) {
                for (RestrictionEntry restriction : restrictionEntries) {
                    if (restriction.getType() != TYPE_BUNDLE) {
                        throw new IllegalArgumentException("bundle_array restriction can only have "
                                + "nested restriction entries of type bundle");
                    }
                }
            }
        } else {
            mType = TYPE_BUNDLE;
        }
        setRestrictions(restrictionEntries);
!!!78835383.java!!!	createBundleEntry(inout key : String, inout restrictionEntries : RestrictionEntry [[]]) : RestrictionEntry
        return new RestrictionEntry(key, restrictionEntries, false);
!!!78835511.java!!!	createBundleArrayEntry(inout key : String, inout restrictionEntries : RestrictionEntry [[]]) : RestrictionEntry
        return new RestrictionEntry(key, restrictionEntries, true);
!!!78835639.java!!!	setType(in type : int) : void
        this.mType = type;
!!!78835767.java!!!	getType() : int
        return mType;
!!!78835895.java!!!	getSelectedString() : String
        return mCurrentValue;
!!!78836023.java!!!	getAllSelectedStrings() : String
        return mCurrentValues;
!!!78836151.java!!!	getSelectedState() : boolean
        return Boolean.parseBoolean(mCurrentValue);
!!!78836279.java!!!	getIntValue() : int
        return Integer.parseInt(mCurrentValue);
!!!78836407.java!!!	setIntValue(in value : int) : void
        mCurrentValue = Integer.toString(value);
!!!78836535.java!!!	setSelectedString(inout selectedString : String) : void
        mCurrentValue = selectedString;
!!!78836663.java!!!	setSelectedState(inout state : boolean) : void
        mCurrentValue = Boolean.toString(state);
!!!78836791.java!!!	setAllSelectedStrings(inout allSelectedStrings : String [[]]) : void
        mCurrentValues = allSelectedStrings;
!!!78836919.java!!!	setChoiceValues(inout choiceValues : String [[]]) : void
        mChoiceValues = choiceValues;
!!!78837047.java!!!	setChoiceValues(inout context : Context, in stringArrayResId : int) : void
        mChoiceValues = context.getResources().getStringArray(stringArrayResId);
!!!78837175.java!!!	getRestrictions() : RestrictionEntry
        return mRestrictions;
!!!78837303.java!!!	setRestrictions(inout restrictions : RestrictionEntry [[]]) : void
        mRestrictions = restrictions;
!!!78837431.java!!!	getChoiceValues() : String
        return mChoiceValues;
!!!78837559.java!!!	setChoiceEntries(inout choiceEntries : String [[]]) : void
        mChoiceEntries = choiceEntries;
!!!78837687.java!!!	setChoiceEntries(inout context : Context, in stringArrayResId : int) : void
        mChoiceEntries = context.getResources().getStringArray(stringArrayResId);
!!!78837815.java!!!	getChoiceEntries() : String
        return mChoiceEntries;
!!!78837943.java!!!	getDescription() : String
        return mDescription;
!!!78838071.java!!!	setDescription(inout description : String) : void
        this.mDescription = description;
!!!78838199.java!!!	getKey() : String
        return mKey;
!!!78838327.java!!!	getTitle() : String
        return mTitle;
!!!78838455.java!!!	setTitle(inout title : String) : void
        this.mTitle = title;
!!!78838583.java!!!	equals(inout o : Object) : boolean
        if (o == this) return true;
        if (!(o instanceof RestrictionEntry)) return false;
        final RestrictionEntry other = (RestrictionEntry) o;
        if (mType != other.mType || !mKey.equals(other.mKey)) {
            return false;
        }
        if (mCurrentValues == null && other.mCurrentValues == null
                && mRestrictions == null && other.mRestrictions == null
                && Objects.equals(mCurrentValue, other.mCurrentValue)) {
            return true;
        }
        if (mCurrentValue == null && other.mCurrentValue == null
                && mRestrictions == null && other.mRestrictions == null
                && Arrays.equals(mCurrentValues, other.mCurrentValues)) {
            return true;
        }
        if (mCurrentValue == null && other.mCurrentValue == null
                && mCurrentValue == null && other.mCurrentValue == null
                && Arrays.equals(mRestrictions, other.mRestrictions)) {
            return true;
        }
        return false;
!!!78838711.java!!!	hashCode() : int
        int result = 17;
        result = 31 * result + mKey.hashCode();
        if (mCurrentValue != null) {
            result = 31 * result + mCurrentValue.hashCode();
        } else if (mCurrentValues != null) {
            for (String value : mCurrentValues) {
                if (value != null) {
                    result = 31 * result + value.hashCode();
                }
            }
        } else if (mRestrictions != null) {
            result = 31 * result + Arrays.hashCode(mRestrictions);
        }
        return result;
!!!78838839.java!!!	RestrictionEntry(inout in : Parcel)
        mType = in.readInt();
        mKey = in.readString();
        mTitle = in.readString();
        mDescription = in.readString();
        mChoiceEntries = in.readStringArray();
        mChoiceValues = in.readStringArray();
        mCurrentValue = in.readString();
        mCurrentValues = in.readStringArray();
        Parcelable[] parcelables = in.readParcelableArray(null);
        if (parcelables != null) {
            mRestrictions = new RestrictionEntry[parcelables.length];
            for (int i = 0; i < parcelables.length; i++) {
                mRestrictions[i] = (RestrictionEntry) parcelables[i];
            }
        }
!!!78838967.java!!!	describeContents() : int
        return 0;
!!!78839095.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeInt(mType);
        dest.writeString(mKey);
        dest.writeString(mTitle);
        dest.writeString(mDescription);
        dest.writeStringArray(mChoiceEntries);
        dest.writeStringArray(mChoiceValues);
        dest.writeString(mCurrentValue);
        dest.writeStringArray(mCurrentValues);
        dest.writeParcelableArray(mRestrictions, 0);
!!!78839223.java!!!	toString() : String
        return "RestrictionEntry{" +
                "mType=" + mType +
                ", mKey='" + mKey + '\'' +
                ", mTitle='" + mTitle + '\'' +
                ", mDescription='" + mDescription + '\'' +
                ", mChoiceEntries=" + Arrays.toString(mChoiceEntries) +
                ", mChoiceValues=" + Arrays.toString(mChoiceValues) +
                ", mCurrentValue='" + mCurrentValue + '\'' +
                ", mCurrentValues=" + Arrays.toString(mCurrentValues) +
                ", mRestrictions=" + Arrays.toString(mRestrictions) +
                '}';
