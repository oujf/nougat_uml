class Stub
!!!78920503.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!78920631.java!!!	asInterface(inout obj : IBinder) : IPackageInstallerSession
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.content.pm.IPackageInstallerSession))) {
return ((android.content.pm.IPackageInstallerSession)iin);
}
return new android.content.pm.IPackageInstallerSession.Stub.Proxy(obj);
!!!78920759.java!!!	asBinder() : IBinder
return this;
!!!78920887.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_setClientProgress:
{
data.enforceInterface(DESCRIPTOR);
float _arg0;
_arg0 = data.readFloat();
this.setClientProgress(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_addClientProgress:
{
data.enforceInterface(DESCRIPTOR);
float _arg0;
_arg0 = data.readFloat();
this.addClientProgress(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_getNames:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String[] _result = this.getNames();
reply.writeNoException();
reply.writeStringArray(_result);
return true;
}
case TRANSACTION_openWrite:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
long _arg1;
_arg1 = data.readLong();
long _arg2;
_arg2 = data.readLong();
android.os.ParcelFileDescriptor _result = this.openWrite(_arg0, _arg1, _arg2);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_openRead:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.os.ParcelFileDescriptor _result = this.openRead(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_removeSplit:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.removeSplit(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_close:
{
data.enforceInterface(DESCRIPTOR);
this.close();
reply.writeNoException();
return true;
}
case TRANSACTION_commit:
{
data.enforceInterface(DESCRIPTOR);
android.content.IntentSender _arg0;
if ((0!=data.readInt())) {
_arg0 = android.content.IntentSender.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.commit(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_abandon:
{
data.enforceInterface(DESCRIPTOR);
this.abandon();
reply.writeNoException();
return true;
}
}
return super.onTransact(code, data, reply, flags);
