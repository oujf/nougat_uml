class LauncherActivityInfo
!!!78978871.java!!!	LauncherActivityInfo(inout context : Context, inout info : ActivityInfo, inout user : UserHandle)
        this(context);
        mActivityInfo = info;
        mComponentName =  new ComponentName(info.packageName, info.name);
        mUser = user;
!!!78978999.java!!!	LauncherActivityInfo(inout context : Context)
        mPm = context.getPackageManager();
!!!78979127.java!!!	getComponentName() : ComponentName
        return mComponentName;
!!!78979255.java!!!	getUser() : UserHandle
        return mUser;
!!!78979383.java!!!	getLabel() : CharSequence
        return mActivityInfo.loadLabel(mPm);
!!!78979511.java!!!	getIcon(in density : int) : Drawable
        final int iconRes = mActivityInfo.getIconResource();
        Drawable icon = null;
        // Get the preferred density icon from the app's resources
        if (density != 0 && iconRes != 0) {
            try {
                final Resources resources
                        = mPm.getResourcesForApplication(mActivityInfo.applicationInfo);
                icon = resources.getDrawableForDensity(iconRes, density);
            } catch (NameNotFoundException | Resources.NotFoundException exc) {
            }
        }
        // Get the default density icon
        if (icon == null) {
            icon = mActivityInfo.loadIcon(mPm);
        }
        return icon;
!!!78979639.java!!!	getApplicationFlags() : int
        return mActivityInfo.applicationInfo.flags;
!!!78979767.java!!!	getApplicationInfo() : ApplicationInfo
        return mActivityInfo.applicationInfo;
!!!78979895.java!!!	getFirstInstallTime() : long
        try {
            return mPm.getPackageInfo(mActivityInfo.packageName,
                    PackageManager.GET_UNINSTALLED_PACKAGES).firstInstallTime;
        } catch (NameNotFoundException nnfe) {
            // Sorry, can't find package
            return 0;
        }
!!!78980023.java!!!	getName() : String
        return mActivityInfo.name;
!!!78980151.java!!!	getBadgedIcon(in density : int) : Drawable
        Drawable originalIcon = getIcon(density);

        if (originalIcon instanceof BitmapDrawable) {
            return mPm.getUserBadgedIcon(originalIcon, mUser);
        } else {
            Log.e(TAG, "Unable to create badged icon for " + mActivityInfo);
        }
        return originalIcon;
