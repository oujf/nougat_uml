class LauncherApps
!!!78982071.java!!!	LauncherApps(inout context : Context, inout service : ILauncherApps)
        mContext = context;
        mService = service;
        mPm = context.getPackageManager();
!!!78982199.java!!!	LauncherApps(inout context : Context)
        this(context, ILauncherApps.Stub.asInterface(
                ServiceManager.getService(Context.LAUNCHER_APPS_SERVICE)));
!!!78982327.java!!!	getActivityList(inout packageName : String, inout user : UserHandle) : LauncherActivityInfo
        ParceledListSlice<ResolveInfo> activities = null;
        try {
            activities = mService.getLauncherActivities(packageName, user);
        } catch (RemoteException re) {
            throw re.rethrowFromSystemServer();
        }
        if (activities == null) {
            return Collections.EMPTY_LIST;
        }
        ArrayList<LauncherActivityInfo> lais = new ArrayList<LauncherActivityInfo>();
        for (ResolveInfo ri : activities.getList()) {
            LauncherActivityInfo lai = new LauncherActivityInfo(mContext, ri.activityInfo, user);
            if (DEBUG) {
                Log.v(TAG, "Returning activity for profile " + user + " : "
                        + lai.getComponentName());
            }
            lais.add(lai);
        }
        return lais;
!!!78982455.java!!!	resolveActivity(inout intent : Intent, inout user : UserHandle) : LauncherActivityInfo
        try {
            ActivityInfo ai = mService.resolveActivity(intent.getComponent(), user);
            if (ai != null) {
                LauncherActivityInfo info = new LauncherActivityInfo(mContext, ai, user);
                return info;
            }
        } catch (RemoteException re) {
            throw re.rethrowFromSystemServer();
        }
        return null;
!!!78982583.java!!!	startMainActivity(inout component : ComponentName, inout user : UserHandle, inout sourceBounds : Rect, inout opts : Bundle) : void
        if (DEBUG) {
            Log.i(TAG, "StartMainActivity " + component + " " + user.getIdentifier());
        }
        try {
            mService.startActivityAsUser(component, sourceBounds, opts, user);
        } catch (RemoteException re) {
            throw re.rethrowFromSystemServer();
        }
!!!78982711.java!!!	startAppDetailsActivity(inout component : ComponentName, inout user : UserHandle, inout sourceBounds : Rect, inout opts : Bundle) : void
        try {
            mService.showAppDetailsAsUser(component, sourceBounds, opts, user);
        } catch (RemoteException re) {
            throw re.rethrowFromSystemServer();
        }
!!!78982839.java!!!	isPackageEnabled(inout packageName : String, inout user : UserHandle) : boolean
        try {
            return mService.isPackageEnabled(packageName, user);
        } catch (RemoteException re) {
            throw re.rethrowFromSystemServer();
        }
!!!78982967.java!!!	getApplicationInfo(inout packageName : String, in flags : int, inout user : UserHandle) : ApplicationInfo
        try {
            return mService.getApplicationInfo(packageName, flags, user);
        } catch (RemoteException re) {
            throw re.rethrowFromSystemServer();
        }
!!!78983095.java!!!	isActivityEnabled(inout component : ComponentName, inout user : UserHandle) : boolean
        try {
            return mService.isActivityEnabled(component, user);
        } catch (RemoteException re) {
            throw re.rethrowFromSystemServer();
        }
!!!78983223.java!!!	hasShortcutHostPermission() : boolean
        try {
            return mService.hasShortcutHostPermission(mContext.getPackageName());
        } catch (RemoteException re) {
            throw re.rethrowFromSystemServer();
        }
!!!78983351.java!!!	getShortcuts(inout query : LauncherApps::ShortcutQuery, inout user : UserHandle) : ShortcutInfo
        try {
            return mService.getShortcuts(mContext.getPackageName(),
                    query.mChangedSince, query.mPackage, query.mShortcutIds, query.mActivity,
                    query.mQueryFlags, user)
                    .getList();
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!78983479.java!!!	getShortcutInfo(inout packageName : String, inout ids : List<String>, inout user : UserHandle) : ShortcutInfo
        final ShortcutQuery q = new ShortcutQuery();
        q.setPackage(packageName);
        q.setShortcutIds(ids);
        q.setQueryFlags(ShortcutQuery.FLAG_GET_DYNAMIC | ShortcutQuery.FLAG_GET_PINNED);
        return getShortcuts(q, user);
!!!78983607.java!!!	pinShortcuts(inout packageName : String, inout shortcutIds : List<String>, inout user : UserHandle) : void
        try {
            mService.pinShortcuts(mContext.getPackageName(), packageName, shortcutIds, user);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!78983735.java!!!	getShortcutIconResId(inout shortcut : ShortcutInfo) : int
        return shortcut.getIconResourceId();
!!!78983863.java!!!	getShortcutIconResId(inout packageName : String, inout shortcutId : String, inout user : UserHandle) : int
        final ShortcutQuery q = new ShortcutQuery();
        q.setPackage(packageName);
        q.setShortcutIds(Arrays.asList(shortcutId));
        q.setQueryFlags(ShortcutQuery.FLAG_GET_DYNAMIC | ShortcutQuery.FLAG_GET_PINNED);
        final List<ShortcutInfo> shortcuts = getShortcuts(q, user);

        return shortcuts.size() > 0 ? shortcuts.get(0).getIconResourceId() : 0;
!!!78983991.java!!!	getShortcutIconFd(inout shortcut : ShortcutInfo) : ParcelFileDescriptor
        return getShortcutIconFd(shortcut.getPackageName(), shortcut.getId(),
                shortcut.getUserId());
!!!78984119.java!!!	getShortcutIconFd(inout packageName : String, inout shortcutId : String, inout user : UserHandle) : ParcelFileDescriptor
        return getShortcutIconFd(packageName, shortcutId, user.getIdentifier());
!!!78984247.java!!!	getShortcutIconFd(inout packageName : String, inout shortcutId : String, in userId : int) : ParcelFileDescriptor
        try {
            return mService.getShortcutIconFd(mContext.getPackageName(),
                    packageName, shortcutId, userId);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!78984375.java!!!	startShortcut(inout packageName : String, inout shortcutId : String, inout sourceBounds : Rect, inout startActivityOptions : Bundle, inout user : UserHandle) : boolean
        return startShortcut(packageName, shortcutId, sourceBounds, startActivityOptions,
                user.getIdentifier());
!!!78984503.java!!!	startShortcut(inout shortcut : ShortcutInfo, inout sourceBounds : Rect, inout startActivityOptions : Bundle) : boolean
        return startShortcut(shortcut.getPackageName(), shortcut.getId(),
                sourceBounds, startActivityOptions,
                shortcut.getUserId());
!!!78984631.java!!!	startShortcut(inout packageName : String, inout shortcutId : String, inout sourceBounds : Rect, inout startActivityOptions : Bundle, in userId : int) : boolean
        try {
            return mService.startShortcut(mContext.getPackageName(), packageName, shortcutId,
                    sourceBounds, startActivityOptions, userId);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!78984759.java!!!	registerCallback(inout callback : LauncherApps::Callback) : void
        registerCallback(callback, null);
!!!78984887.java!!!	registerCallback(inout callback : LauncherApps::Callback, inout handler : Handler) : void
        synchronized (this) {
            if (callback != null && findCallbackLocked(callback) < 0) {
                boolean addedFirstCallback = mCallbacks.size() == 0;
                addCallbackLocked(callback, handler);
                if (addedFirstCallback) {
                    try {
                        mService.addOnAppsChangedListener(mContext.getPackageName(),
                                mAppsChangedListener);
                    } catch (RemoteException re) {
                        throw re.rethrowFromSystemServer();
                    }
                }
            }
        }
!!!78985015.java!!!	unregisterCallback(inout callback : LauncherApps::Callback) : void
        synchronized (this) {
            removeCallbackLocked(callback);
            if (mCallbacks.size() == 0) {
                try {
                    mService.removeOnAppsChangedListener(mAppsChangedListener);
                } catch (RemoteException re) {
                    throw re.rethrowFromSystemServer();
                }
            }
        }
!!!78985143.java!!!	findCallbackLocked(inout callback : LauncherApps::Callback) : int
        if (callback == null) {
            throw new IllegalArgumentException("Callback cannot be null");
        }
        final int size = mCallbacks.size();
        for (int i = 0; i < size; ++i) {
            if (mCallbacks.get(i).mCallback == callback) {
                return i;
            }
        }
        return -1;
!!!78985271.java!!!	removeCallbackLocked(inout callback : LauncherApps::Callback) : void
        int pos = findCallbackLocked(callback);
        if (pos >= 0) {
            mCallbacks.remove(pos);
        }
!!!78985399.java!!!	addCallbackLocked(inout callback : LauncherApps::Callback, inout handler : Handler) : void
        // Remove if already present.
        removeCallbackLocked(callback);
        if (handler == null) {
            handler = new Handler();
        }
        CallbackMessageHandler toAdd = new CallbackMessageHandler(handler.getLooper(), callback);
        mCallbacks.add(toAdd);
