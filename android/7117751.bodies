class LimitedLengthInputStream
!!!78986807.java!!!	LimitedLengthInputStream(inout in : InputStream, in offset : long, in length : long)
        super(in);

        if (in == null) {
            throw new IOException("in == null");
        }

        if (offset < 0) {
            throw new IOException("offset < 0");
        }

        if (length < 0) {
            throw new IOException("length < 0");
        }

        if (length > Long.MAX_VALUE - offset) {
            throw new IOException("offset + length > Long.MAX_VALUE");
        }

        mEnd = offset + length;

        skip(offset);
        mOffset = offset;
!!!78986935.java!!!	read() : int
        if (mOffset >= mEnd) {
            return -1;
        }

        mOffset++;
        return super.read();
!!!78987063.java!!!	read(inout buffer : byte [[]], in offset : int, in byteCount : int) : int
        if (mOffset >= mEnd) {
            return -1;
        }

        final int arrayLength = buffer.length;
        Arrays.checkOffsetAndCount(arrayLength, offset, byteCount);

        if (mOffset > Long.MAX_VALUE - byteCount) {
            throw new IOException("offset out of bounds: " + mOffset + " + " + byteCount);
        }

        if (mOffset + byteCount > mEnd) {
            byteCount = (int) (mEnd - mOffset);
        }

        final int numRead = super.read(buffer, offset, byteCount);
        mOffset += numRead;

        return numRead;
!!!78987191.java!!!	read(inout buffer : byte [[]]) : int
        return read(buffer, 0, buffer.length);
