class Proxy
!!!79290551.java!!!	Proxy(inout remote : IBinder)
mRemote = remote;
!!!79290679.java!!!	asBinder() : IBinder
return mRemote;
!!!79290807.java!!!	getInterfaceDescriptor() : String
return DESCRIPTOR;
!!!79290935.java!!!	hasIrEmitter() : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_hasIrEmitter, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!79291063.java!!!	transmit(inout packageName : String, in carrierFrequency : int, inout pattern : int [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(packageName);
_data.writeInt(carrierFrequency);
_data.writeIntArray(pattern);
mRemote.transact(Stub.TRANSACTION_transmit, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79291191.java!!!	getCarrierFrequencies() : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int[] _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getCarrierFrequencies, _data, _reply, 0);
_reply.readException();
_result = _reply.createIntArray();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
