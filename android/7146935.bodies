class SensorEventQueue
!!!79314615.java!!!	SensorEventQueue(inout listener : SensorEventListener, inout looper : Looper, inout manager : SystemSensorManager, inout packageName : String)
            super(looper, manager, OPERATING_MODE_NORMAL, packageName);
            mListener = listener;
!!!79314743.java!!!	addSensorEvent(inout sensor : Sensor) : void
            SensorEvent t = new SensorEvent(Sensor.getMaxLengthValuesArray(sensor,
                    mManager.mTargetSdkLevel));
            synchronized (mSensorsEvents) {
                mSensorsEvents.put(sensor.getHandle(), t);
            }
!!!79314871.java!!!	removeSensorEvent(inout sensor : Sensor) : void
            synchronized (mSensorsEvents) {
                mSensorsEvents.delete(sensor.getHandle());
            }
!!!79314999.java!!!	dispatchSensorEvent(in handle : int, inout values : float [[]], in inAccuracy : int, in timestamp : long) : void
            final Sensor sensor = mManager.mHandleToSensor.get(handle);
            if (sensor == null) {
                // sensor disconnected
                return;
            }

            SensorEvent t = null;
            synchronized (mSensorsEvents) {
                t = mSensorsEvents.get(handle);
            }

            if (t == null) {
                // This may happen if the client has unregistered and there are pending events in
                // the queue waiting to be delivered. Ignore.
                return;
            }
            // Copy from the values array.
            System.arraycopy(values, 0, t.values, 0, t.values.length);
            t.timestamp = timestamp;
            t.accuracy = inAccuracy;
            t.sensor = sensor;

            // call onAccuracyChanged() only if the value changes
            final int accuracy = mSensorAccuracies.get(handle);
            if ((t.accuracy >= 0) && (accuracy != t.accuracy)) {
                mSensorAccuracies.put(handle, t.accuracy);
                mListener.onAccuracyChanged(t.sensor, t.accuracy);
            }
            mListener.onSensorChanged(t);
!!!79315127.java!!!	dispatchFlushCompleteEvent(in handle : int) : void
            if (mListener instanceof SensorEventListener2) {
                final Sensor sensor = mManager.mHandleToSensor.get(handle);
                if (sensor == null) {
                    // sensor disconnected
                    return;
                }
                ((SensorEventListener2)mListener).onFlushCompleted(sensor);
            }
            return;
!!!79315255.java!!!	dispatchAdditionalInfoEvent(in handle : int, in type : int, in serial : int, inout floatValues : float [[]], inout intValues : int [[]]) : void
            if (mListener instanceof SensorEventCallback) {
                final Sensor sensor = mManager.mHandleToSensor.get(handle);
                if (sensor == null) {
                    // sensor disconnected
                    return;
                }
                SensorAdditionalInfo info =
                        new SensorAdditionalInfo(sensor, type, serial, intValues, floatValues);
                ((SensorEventCallback)mListener).onSensorAdditionalInfo(info);
            }
