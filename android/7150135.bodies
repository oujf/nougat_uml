class HighSpeedVideoConfiguration
!!!79451319.java!!!	HighSpeedVideoConfiguration(in width : int, in height : int, in fpsMin : int, in fpsMax : int, in batchSizeMax : int)
        if (fpsMax < HIGH_SPEED_MAX_MINIMAL_FPS) {
            throw new IllegalArgumentException("fpsMax must be at least " +
                    HIGH_SPEED_MAX_MINIMAL_FPS);
        }
        mFpsMax = fpsMax;
        mWidth = checkArgumentPositive(width, "width must be positive");
        mHeight = checkArgumentPositive(height, "height must be positive");
        mFpsMin = checkArgumentPositive(fpsMin, "fpsMin must be positive");
        mSize = new Size(mWidth, mHeight);
        mBatchSizeMax = checkArgumentPositive(batchSizeMax, "batchSizeMax must be positive");
        mFpsRange = new Range<Integer>(mFpsMin, mFpsMax);
!!!79451447.java!!!	getWidth() : int
        return mWidth;
!!!79451575.java!!!	getHeight() : int
        return mHeight;
!!!79451703.java!!!	getFpsMin() : int
        return mFpsMin;
!!!79451831.java!!!	getFpsMax() : int
        return mFpsMax;
!!!79451959.java!!!	getSize() : Size
        return mSize;
!!!79452087.java!!!	getBatchSizeMax() : int
        return mBatchSizeMax;
!!!79452215.java!!!	getFpsRange() : Range
        return mFpsRange;
!!!79452343.java!!!	equals(in obj : Object) : boolean
        if (obj == null) {
            return false;
        }
        if (this == obj) {
            return true;
        }
        if (obj instanceof HighSpeedVideoConfiguration) {
            final HighSpeedVideoConfiguration other = (HighSpeedVideoConfiguration) obj;
            return mWidth == other.mWidth &&
                    mHeight == other.mHeight &&
                    mFpsMin == other.mFpsMin &&
                    mFpsMax == other.mFpsMax &&
                    mBatchSizeMax == other.mBatchSizeMax;
        }
        return false;
!!!79452471.java!!!	hashCode() : int
        return HashCodeHelpers.hashCode(mWidth, mHeight, mFpsMin, mFpsMax);
