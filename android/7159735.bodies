class ConditionVariable
!!!80219575.java!!!	ConditionVariable()
        mCondition = false;
!!!80219703.java!!!	ConditionVariable(inout state : boolean)
        mCondition = state;
!!!80219831.java!!!	open() : void
        synchronized (this) {
            boolean old = mCondition;
            mCondition = true;
            if (!old) {
                this.notifyAll();
            }
        }
!!!80219959.java!!!	close() : void
        synchronized (this) {
            mCondition = false;
        }
!!!80220087.java!!!	block() : void
        synchronized (this) {
            while (!mCondition) {
                try {
                    this.wait();
                }
                catch (InterruptedException e) {
                }
            }
        }
!!!80220215.java!!!	block(in timeout : long) : boolean
        // Object.wait(0) means wait forever, to mimic this, we just
        // call the other block() method in that case.  It simplifies
        // this code for the common case.
        if (timeout != 0) {
            synchronized (this) {
                long now = System.currentTimeMillis();
                long end = now + timeout;
                while (!mCondition && now < end) {
                    try {
                        this.wait(end-now);
                    }
                    catch (InterruptedException e) {
                    }
                    now = System.currentTimeMillis();
                }
                return mCondition;
            }
        } else {
            this.block();
            return true;
        }
