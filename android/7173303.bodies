class Stub
!!!79495607.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!79495735.java!!!	asInterface(inout obj : IBinder) : IDisplayManager
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.hardware.display.IDisplayManager))) {
return ((android.hardware.display.IDisplayManager)iin);
}
return new android.hardware.display.IDisplayManager.Stub.Proxy(obj);
!!!79495863.java!!!	asBinder() : IBinder
return this;
!!!79495991.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_getDisplayInfo:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.view.DisplayInfo _result = this.getDisplayInfo(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getDisplayIds:
{
data.enforceInterface(DESCRIPTOR);
int[] _result = this.getDisplayIds();
reply.writeNoException();
reply.writeIntArray(_result);
return true;
}
case TRANSACTION_registerCallback:
{
data.enforceInterface(DESCRIPTOR);
android.hardware.display.IDisplayManagerCallback _arg0;
_arg0 = android.hardware.display.IDisplayManagerCallback.Stub.asInterface(data.readStrongBinder());
this.registerCallback(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_startWifiDisplayScan:
{
data.enforceInterface(DESCRIPTOR);
this.startWifiDisplayScan();
reply.writeNoException();
return true;
}
case TRANSACTION_stopWifiDisplayScan:
{
data.enforceInterface(DESCRIPTOR);
this.stopWifiDisplayScan();
reply.writeNoException();
return true;
}
case TRANSACTION_connectWifiDisplay:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.connectWifiDisplay(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_disconnectWifiDisplay:
{
data.enforceInterface(DESCRIPTOR);
this.disconnectWifiDisplay();
reply.writeNoException();
return true;
}
case TRANSACTION_renameWifiDisplay:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
this.renameWifiDisplay(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_forgetWifiDisplay:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.forgetWifiDisplay(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_pauseWifiDisplay:
{
data.enforceInterface(DESCRIPTOR);
this.pauseWifiDisplay();
reply.writeNoException();
return true;
}
case TRANSACTION_resumeWifiDisplay:
{
data.enforceInterface(DESCRIPTOR);
this.resumeWifiDisplay();
reply.writeNoException();
return true;
}
case TRANSACTION_getWifiDisplayStatus:
{
data.enforceInterface(DESCRIPTOR);
android.hardware.display.WifiDisplayStatus _result = this.getWifiDisplayStatus();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_requestColorMode:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
this.requestColorMode(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_createVirtualDisplay:
{
data.enforceInterface(DESCRIPTOR);
android.hardware.display.IVirtualDisplayCallback _arg0;
_arg0 = android.hardware.display.IVirtualDisplayCallback.Stub.asInterface(data.readStrongBinder());
android.media.projection.IMediaProjection _arg1;
_arg1 = android.media.projection.IMediaProjection.Stub.asInterface(data.readStrongBinder());
java.lang.String _arg2;
_arg2 = data.readString();
java.lang.String _arg3;
_arg3 = data.readString();
int _arg4;
_arg4 = data.readInt();
int _arg5;
_arg5 = data.readInt();
int _arg6;
_arg6 = data.readInt();
android.view.Surface _arg7;
if ((0!=data.readInt())) {
_arg7 = android.view.Surface.CREATOR.createFromParcel(data);
}
else {
_arg7 = null;
}
int _arg8;
_arg8 = data.readInt();
int _result = this.createVirtualDisplay(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6, _arg7, _arg8);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_resizeVirtualDisplay:
{
data.enforceInterface(DESCRIPTOR);
android.hardware.display.IVirtualDisplayCallback _arg0;
_arg0 = android.hardware.display.IVirtualDisplayCallback.Stub.asInterface(data.readStrongBinder());
int _arg1;
_arg1 = data.readInt();
int _arg2;
_arg2 = data.readInt();
int _arg3;
_arg3 = data.readInt();
this.resizeVirtualDisplay(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
return true;
}
case TRANSACTION_setVirtualDisplaySurface:
{
data.enforceInterface(DESCRIPTOR);
android.hardware.display.IVirtualDisplayCallback _arg0;
_arg0 = android.hardware.display.IVirtualDisplayCallback.Stub.asInterface(data.readStrongBinder());
android.view.Surface _arg1;
if ((0!=data.readInt())) {
_arg1 = android.view.Surface.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.setVirtualDisplaySurface(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_releaseVirtualDisplay:
{
data.enforceInterface(DESCRIPTOR);
android.hardware.display.IVirtualDisplayCallback _arg0;
_arg0 = android.hardware.display.IVirtualDisplayCallback.Stub.asInterface(data.readStrongBinder());
this.releaseVirtualDisplay(_arg0);
reply.writeNoException();
return true;
}
}
return super.onTransact(code, data, reply, flags);
