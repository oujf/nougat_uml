class Proxy
!!!79522487.java!!!	Proxy(inout remote : IBinder)
mRemote = remote;
!!!79522615.java!!!	asBinder() : IBinder
return mRemote;
!!!79522743.java!!!	getInterfaceDescriptor() : String
return DESCRIPTOR;
!!!79522871.java!!!	authenticate(inout token : IBinder, in sessionId : long, in userId : int, inout receiver : IFingerprintServiceReceiver, in flags : int, inout opPackageName : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeLong(sessionId);
_data.writeInt(userId);
_data.writeStrongBinder((((receiver!=null))?(receiver.asBinder()):(null)));
_data.writeInt(flags);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_authenticate, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79522999.java!!!	cancelAuthentication(inout token : IBinder, inout opPackageName : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_cancelAuthentication, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79523127.java!!!	enroll(inout token : IBinder, inout cryptoToken : byte [[]], in groupId : int, inout receiver : IFingerprintServiceReceiver, in flags : int, inout opPackageName : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeByteArray(cryptoToken);
_data.writeInt(groupId);
_data.writeStrongBinder((((receiver!=null))?(receiver.asBinder()):(null)));
_data.writeInt(flags);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_enroll, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79523255.java!!!	cancelEnrollment(inout token : IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_cancelEnrollment, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79523383.java!!!	remove(inout token : IBinder, in fingerId : int, in groupId : int, in userId : int, inout receiver : IFingerprintServiceReceiver) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(fingerId);
_data.writeInt(groupId);
_data.writeInt(userId);
_data.writeStrongBinder((((receiver!=null))?(receiver.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_remove, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79523511.java!!!	rename(in fingerId : int, in groupId : int, inout name : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(fingerId);
_data.writeInt(groupId);
_data.writeString(name);
mRemote.transact(Stub.TRANSACTION_rename, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79523639.java!!!	getEnrolledFingerprints(in groupId : int, inout opPackageName : String) : Fingerprint
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.hardware.fingerprint.Fingerprint> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(groupId);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_getEnrolledFingerprints, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.hardware.fingerprint.Fingerprint.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!79523767.java!!!	isHardwareDetected(in deviceId : long, inout opPackageName : String) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeLong(deviceId);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_isHardwareDetected, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!79523895.java!!!	preEnroll(inout token : IBinder) : long
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
long _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_preEnroll, _data, _reply, 0);
_reply.readException();
_result = _reply.readLong();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!79524023.java!!!	postEnroll(inout token : IBinder) : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_postEnroll, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!79524151.java!!!	hasEnrolledFingerprints(in groupId : int, inout opPackageName : String) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(groupId);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_hasEnrolledFingerprints, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!79524279.java!!!	getAuthenticatorId(inout opPackageName : String) : long
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
long _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_getAuthenticatorId, _data, _reply, 0);
_reply.readException();
_result = _reply.readLong();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!79524407.java!!!	resetTimeout(inout cryptoToken : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeByteArray(cryptoToken);
mRemote.transact(Stub.TRANSACTION_resetTimeout, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79524535.java!!!	addLockoutResetCallback(inout callback : IFingerprintServiceLockoutResetCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_addLockoutResetCallback, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79524663.java!!!	setActiveUser(in uid : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(uid);
mRemote.transact(Stub.TRANSACTION_setActiveUser, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
