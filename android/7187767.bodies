class RemoteCallbackList
!!!79588023.java!!!	register(inout callback : E) : boolean
        return register(callback, null);
!!!79588151.java!!!	register(inout callback : E, inout cookie : Object) : boolean
        synchronized (mCallbacks) {
            if (mKilled) {
                return false;
            }
            IBinder binder = callback.asBinder();
            try {
                Callback cb = new Callback(callback, cookie);
                binder.linkToDeath(cb, 0);
                mCallbacks.put(binder, cb);
                return true;
            } catch (RemoteException e) {
                return false;
            }
        }
!!!79588279.java!!!	unregister(inout callback : E) : boolean
        synchronized (mCallbacks) {
            Callback cb = mCallbacks.remove(callback.asBinder());
            if (cb != null) {
                cb.mCallback.asBinder().unlinkToDeath(cb, 0);
                return true;
            }
            return false;
        }
!!!79588407.java!!!	kill() : void
        synchronized (mCallbacks) {
            for (int cbi=mCallbacks.size()-1; cbi>=0; cbi--) {
                Callback cb = mCallbacks.valueAt(cbi);
                cb.mCallback.asBinder().unlinkToDeath(cb, 0);
            }
            mCallbacks.clear();
            mKilled = true;
        }
!!!79588663.java!!!	onCallbackDied(inout callback : E, inout cookie : Object) : void
        onCallbackDied(callback);
!!!79588791.java!!!	beginBroadcast() : int
        synchronized (mCallbacks) {
            if (mBroadcastCount > 0) {
                throw new IllegalStateException(
                        "beginBroadcast() called while already in a broadcast");
            }
            
            final int N = mBroadcastCount = mCallbacks.size();
            if (N <= 0) {
                return 0;
            }
            Object[] active = mActiveBroadcast;
            if (active == null || active.length < N) {
                mActiveBroadcast = active = new Object[N];
            }
            for (int i=0; i<N; i++) {
                active[i] = mCallbacks.valueAt(i);
            }
            return N;
        }
!!!79588919.java!!!	getBroadcastItem(in index : int) : E
        return ((Callback)mActiveBroadcast[index]).mCallback;
!!!79589047.java!!!	getBroadcastCookie(in index : int) : Object
        return ((Callback)mActiveBroadcast[index]).mCookie;
!!!79589175.java!!!	finishBroadcast() : void
        if (mBroadcastCount < 0) {
            throw new IllegalStateException(
                    "finishBroadcast() called outside of a broadcast");
        }
        
        Object[] active = mActiveBroadcast;
        if (active != null) {
            final int N = mBroadcastCount;
            for (int i=0; i<N; i++) {
                active[i] = null;
            }
        }
        
        mBroadcastCount = -1;
!!!79589303.java!!!	getRegisteredCallbackCount() : int
        synchronized (mCallbacks) {
            if (mKilled) {
                return 0;
            }
            return mCallbacks.size();
        }
