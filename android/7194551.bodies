class Proxy
!!!79630007.java!!!	Proxy(inout remote : IBinder)
mRemote = remote;
!!!79630135.java!!!	asBinder() : IBinder
return mRemote;
!!!79630263.java!!!	getInterfaceDescriptor() : String
return DESCRIPTOR;
!!!79630391.java!!!	onLocationAvailable(inout locations : Location [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeTypedArray(locations, 0);
mRemote.transact(Stub.TRANSACTION_onLocationAvailable, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79630519.java!!!	onDiagnosticDataAvailable(inout data : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(data);
mRemote.transact(Stub.TRANSACTION_onDiagnosticDataAvailable, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79630647.java!!!	onCapabilities(in capabilities : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(capabilities);
mRemote.transact(Stub.TRANSACTION_onCapabilities, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!79630775.java!!!	onStatusChanged(in status : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(status);
mRemote.transact(Stub.TRANSACTION_onStatusChanged, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
