class UsbDevice
!!!79692599.java!!!	UsbDevice(inout name : String, in vendorId : int, in productId : int, in Class : int, in subClass : int, in protocol : int, inout manufacturerName : String, inout productName : String, inout version : String, inout serialNumber : String)
        mName = name;
        mVendorId = vendorId;
        mProductId = productId;
        mClass = Class;
        mSubclass = subClass;
        mProtocol = protocol;
        mManufacturerName = manufacturerName;
        mProductName = productName;
        mVersion = version;
        mSerialNumber = serialNumber;
!!!79692727.java!!!	getDeviceName() : String
        return mName;
!!!79692855.java!!!	getManufacturerName() : String
        return mManufacturerName;
!!!79692983.java!!!	getProductName() : String
        return mProductName;
!!!79693111.java!!!	getVersion() : String
        return mVersion;
!!!79693239.java!!!	getSerialNumber() : String
        return mSerialNumber;
!!!79693367.java!!!	getDeviceId() : int
        return getDeviceId(mName);
!!!79693495.java!!!	getVendorId() : int
        return mVendorId;
!!!79693623.java!!!	getProductId() : int
        return mProductId;
!!!79693751.java!!!	getDeviceClass() : int
        return mClass;
!!!79693879.java!!!	getDeviceSubclass() : int
        return mSubclass;
!!!79694007.java!!!	getDeviceProtocol() : int
        return mProtocol;
!!!79694135.java!!!	getConfigurationCount() : int
        return mConfigurations.length;
!!!79694263.java!!!	getConfiguration(in index : int) : UsbConfiguration
        return (UsbConfiguration)mConfigurations[index];
!!!79694391.java!!!	getInterfaceList() : UsbInterface
        if (mInterfaces == null) {
            int configurationCount = mConfigurations.length;
            int interfaceCount = 0;
            for (int i = 0; i < configurationCount; i++) {
                UsbConfiguration configuration = (UsbConfiguration)mConfigurations[i];
                interfaceCount += configuration.getInterfaceCount();
            }

            mInterfaces = new UsbInterface[interfaceCount];
            int offset = 0;
            for (int i = 0; i < configurationCount; i++) {
                UsbConfiguration configuration = (UsbConfiguration)mConfigurations[i];
                interfaceCount = configuration.getInterfaceCount();
                for (int j = 0; j < interfaceCount; j++) {
                    mInterfaces[offset++] = configuration.getInterface(j);
                }
            }
        }

        return mInterfaces;
!!!79694519.java!!!	getInterfaceCount() : int
        return getInterfaceList().length;
!!!79694647.java!!!	getInterface(in index : int) : UsbInterface
        return getInterfaceList()[index];
!!!79694775.java!!!	setConfigurations(inout configuration : Parcelable [[]]) : void
        mConfigurations = configuration;
!!!79694903.java!!!	equals(inout o : Object) : boolean
        if (o instanceof UsbDevice) {
            return ((UsbDevice)o).mName.equals(mName);
        } else if (o instanceof String) {
            return ((String)o).equals(mName);
        } else {
            return false;
        }
!!!79695031.java!!!	hashCode() : int
        return mName.hashCode();
!!!79695159.java!!!	toString() : String
        StringBuilder builder = new StringBuilder("UsbDevice[mName=" + mName +
                ",mVendorId=" + mVendorId + ",mProductId=" + mProductId +
                ",mClass=" + mClass + ",mSubclass=" + mSubclass + ",mProtocol=" + mProtocol +
                ",mManufacturerName=" + mManufacturerName + ",mProductName=" + mProductName +
                ",mVersion=" + mVersion + ",mSerialNumber=" + mSerialNumber + ",mConfigurations=[");
        for (int i = 0; i < mConfigurations.length; i++) {
            builder.append("\n");
            builder.append(mConfigurations[i].toString());
        }
        builder.append("]");
        return builder.toString();
!!!79695287.java!!!	describeContents() : int
        return 0;
!!!79695415.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeString(mName);
        parcel.writeInt(mVendorId);
        parcel.writeInt(mProductId);
        parcel.writeInt(mClass);
        parcel.writeInt(mSubclass);
        parcel.writeInt(mProtocol);
        parcel.writeString(mManufacturerName);
        parcel.writeString(mProductName);
        parcel.writeString(mVersion);
        parcel.writeString(mSerialNumber);
        parcel.writeParcelableArray(mConfigurations, 0);
!!!79695543.java!!!	getDeviceId(inout name : String) : int
        return native_get_device_id(name);
!!!79695671.java!!!	getDeviceName(in id : int) : String
        return native_get_device_name(id);
