class InputChannel
!!!81469367.java!!!	finalize() : void
        try {
            nativeDispose(true);
        } finally {
            super.finalize();
        }
!!!81469495.java!!!	openInputChannelPair(inout name : String) : InputChannel
        if (name == null) {
            throw new IllegalArgumentException("name must not be null");
        }

        if (DEBUG) {
            Slog.d(TAG, "Opening input channel pair '" + name + "'");
        }
        return nativeOpenInputChannelPair(name);
!!!81469623.java!!!	getName() : String
        String name = nativeGetName();
        return name != null ? name : "uninitialized";
!!!81469751.java!!!	dispose() : void
        nativeDispose(false);
!!!81469879.java!!!	transferTo(inout outParameter : InputChannel) : void
        if (outParameter == null) {
            throw new IllegalArgumentException("outParameter must not be null");
        }
        
        nativeTransferTo(outParameter);
!!!81470007.java!!!	dup() : InputChannel
        InputChannel target = new InputChannel();
        nativeDup(target);
        return target;
!!!81470135.java!!!	describeContents() : int
        return Parcelable.CONTENTS_FILE_DESCRIPTOR;
!!!81470263.java!!!	readFromParcel(inout in : Parcel) : void
        if (in == null) {
            throw new IllegalArgumentException("in must not be null");
        }
        
        nativeReadFromParcel(in);
!!!81470391.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        if (out == null) {
            throw new IllegalArgumentException("out must not be null");
        }
        
        nativeWriteToParcel(out);
        
        if ((flags & PARCELABLE_WRITE_RETURN_VALUE) != 0) {
            dispose();
        }
!!!81470519.java!!!	toString() : String
        return getName();
