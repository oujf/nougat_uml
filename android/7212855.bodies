class NetworkInfo
!!!79957047.java!!!	NetworkInfo(in type : int, in subtype : int, inout typeName : String, inout subtypeName : String)
        if (!ConnectivityManager.isNetworkTypeValid(type)) {
            throw new IllegalArgumentException("Invalid network type: " + type);
        }
        mNetworkType = type;
        mSubtype = subtype;
        mTypeName = typeName;
        mSubtypeName = subtypeName;
        setDetailedState(DetailedState.IDLE, null, null);
        mState = State.UNKNOWN;
!!!79957175.java!!!	NetworkInfo(inout source : NetworkInfo)
        if (source != null) {
            synchronized (source) {
                mNetworkType = source.mNetworkType;
                mSubtype = source.mSubtype;
                mTypeName = source.mTypeName;
                mSubtypeName = source.mSubtypeName;
                mState = source.mState;
                mDetailedState = source.mDetailedState;
                mReason = source.mReason;
                mExtraInfo = source.mExtraInfo;
                mIsFailover = source.mIsFailover;
                mIsAvailable = source.mIsAvailable;
                mIsRoaming = source.mIsRoaming;
                mIsMetered = source.mIsMetered;
            }
        }
!!!79957303.java!!!	getType() : int
        synchronized (this) {
            return mNetworkType;
        }
!!!79957431.java!!!	setType(in type : int) : void
        synchronized (this) {
            mNetworkType = type;
        }
!!!79957559.java!!!	getSubtype() : int
        synchronized (this) {
            return mSubtype;
        }
!!!79957687.java!!!	setSubtype(in subtype : int, inout subtypeName : String) : void
        synchronized (this) {
            mSubtype = subtype;
            mSubtypeName = subtypeName;
        }
!!!79957815.java!!!	getTypeName() : String
        synchronized (this) {
            return mTypeName;
        }
!!!79957943.java!!!	getSubtypeName() : String
        synchronized (this) {
            return mSubtypeName;
        }
!!!79958071.java!!!	isConnectedOrConnecting() : boolean
        synchronized (this) {
            return mState == State.CONNECTED || mState == State.CONNECTING;
        }
!!!79958199.java!!!	isConnected() : boolean
        synchronized (this) {
            return mState == State.CONNECTED;
        }
!!!79958327.java!!!	isAvailable() : boolean
        synchronized (this) {
            return mIsAvailable;
        }
!!!79958455.java!!!	setIsAvailable(inout isAvailable : boolean) : void
        synchronized (this) {
            mIsAvailable = isAvailable;
        }
!!!79958583.java!!!	isFailover() : boolean
        synchronized (this) {
            return mIsFailover;
        }
!!!79958711.java!!!	setFailover(inout isFailover : boolean) : void
        synchronized (this) {
            mIsFailover = isFailover;
        }
!!!79958839.java!!!	isRoaming() : boolean
        synchronized (this) {
            return mIsRoaming;
        }
!!!79958967.java!!!	setRoaming(inout isRoaming : boolean) : void
        synchronized (this) {
            mIsRoaming = isRoaming;
        }
!!!79959095.java!!!	isMetered() : boolean
        synchronized (this) {
            return mIsMetered;
        }
!!!79959223.java!!!	setMetered(inout isMetered : boolean) : void
        synchronized (this) {
            mIsMetered = isMetered;
        }
!!!79959351.java!!!	getState() : NetworkInfo::State
        synchronized (this) {
            return mState;
        }
!!!79959479.java!!!	getDetailedState() : NetworkInfo::DetailedState
        synchronized (this) {
            return mDetailedState;
        }
!!!79959607.java!!!	setDetailedState(inout detailedState : NetworkInfo::DetailedState, inout reason : String, inout extraInfo : String) : void
        synchronized (this) {
            this.mDetailedState = detailedState;
            this.mState = stateMap.get(detailedState);
            this.mReason = reason;
            this.mExtraInfo = extraInfo;
        }
!!!79959735.java!!!	setExtraInfo(inout extraInfo : String) : void
        synchronized (this) {
            this.mExtraInfo = extraInfo;
        }
!!!79959863.java!!!	getReason() : String
        synchronized (this) {
            return mReason;
        }
!!!79959991.java!!!	getExtraInfo() : String
        synchronized (this) {
            return mExtraInfo;
        }
!!!79960119.java!!!	toString() : String
        synchronized (this) {
            StringBuilder builder = new StringBuilder("[");
            builder.append("type: ").append(getTypeName()).append("[").append(getSubtypeName()).
            append("], state: ").append(mState).append("/").append(mDetailedState).
            append(", reason: ").append(mReason == null ? "(unspecified)" : mReason).
            append(", extra: ").append(mExtraInfo == null ? "(none)" : mExtraInfo).
            append(", failover: ").append(mIsFailover).
            append(", available: ").append(mIsAvailable).
            append(", roaming: ").append(mIsRoaming).
            append(", metered: ").append(mIsMetered).
            append("]");
            return builder.toString();
        }
!!!79960247.java!!!	describeContents() : int
        return 0;
!!!79960375.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        synchronized (this) {
            dest.writeInt(mNetworkType);
            dest.writeInt(mSubtype);
            dest.writeString(mTypeName);
            dest.writeString(mSubtypeName);
            dest.writeString(mState.name());
            dest.writeString(mDetailedState.name());
            dest.writeInt(mIsFailover ? 1 : 0);
            dest.writeInt(mIsAvailable ? 1 : 0);
            dest.writeInt(mIsRoaming ? 1 : 0);
            dest.writeInt(mIsMetered ? 1 : 0);
            dest.writeString(mReason);
            dest.writeString(mExtraInfo);
        }
