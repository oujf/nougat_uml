class Stub
!!!79855543.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!79855671.java!!!	asInterface(inout obj : IBinder) : IConnectivityManager
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.net.IConnectivityManager))) {
return ((android.net.IConnectivityManager)iin);
}
return new android.net.IConnectivityManager.Stub.Proxy(obj);
!!!79855799.java!!!	asBinder() : IBinder
return this;
!!!79855927.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_getActiveNetwork:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network _result = this.getActiveNetwork();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getActiveNetworkForUid:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
boolean _arg1;
_arg1 = (0!=data.readInt());
android.net.Network _result = this.getActiveNetworkForUid(_arg0, _arg1);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getActiveNetworkInfo:
{
data.enforceInterface(DESCRIPTOR);
android.net.NetworkInfo _result = this.getActiveNetworkInfo();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getActiveNetworkInfoForUid:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
boolean _arg1;
_arg1 = (0!=data.readInt());
android.net.NetworkInfo _result = this.getActiveNetworkInfoForUid(_arg0, _arg1);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getNetworkInfo:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.net.NetworkInfo _result = this.getNetworkInfo(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getNetworkInfoForUid:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.Network.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
int _arg1;
_arg1 = data.readInt();
boolean _arg2;
_arg2 = (0!=data.readInt());
android.net.NetworkInfo _result = this.getNetworkInfoForUid(_arg0, _arg1, _arg2);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getAllNetworkInfo:
{
data.enforceInterface(DESCRIPTOR);
android.net.NetworkInfo[] _result = this.getAllNetworkInfo();
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_getNetworkForType:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.net.Network _result = this.getNetworkForType(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getAllNetworks:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network[] _result = this.getAllNetworks();
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_getDefaultNetworkCapabilitiesForUser:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.net.NetworkCapabilities[] _result = this.getDefaultNetworkCapabilitiesForUser(_arg0);
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_isNetworkSupported:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
boolean _result = this.isNetworkSupported(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_getActiveLinkProperties:
{
data.enforceInterface(DESCRIPTOR);
android.net.LinkProperties _result = this.getActiveLinkProperties();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getLinkPropertiesForType:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.net.LinkProperties _result = this.getLinkPropertiesForType(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getLinkProperties:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.Network.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
android.net.LinkProperties _result = this.getLinkProperties(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getNetworkCapabilities:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.Network.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
android.net.NetworkCapabilities _result = this.getNetworkCapabilities(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getAllNetworkState:
{
data.enforceInterface(DESCRIPTOR);
android.net.NetworkState[] _result = this.getAllNetworkState();
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_getActiveNetworkQuotaInfo:
{
data.enforceInterface(DESCRIPTOR);
android.net.NetworkQuotaInfo _result = this.getActiveNetworkQuotaInfo();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_isActiveNetworkMetered:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.isActiveNetworkMetered();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_requestRouteToHostAddress:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
byte[] _arg1;
_arg1 = data.createByteArray();
boolean _result = this.requestRouteToHostAddress(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_tether:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _result = this.tether(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_untether:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _result = this.untether(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_getLastTetherError:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _result = this.getLastTetherError(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_isTetheringSupported:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.isTetheringSupported();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_startTethering:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.os.ResultReceiver _arg1;
if ((0!=data.readInt())) {
_arg1 = android.os.ResultReceiver.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
boolean _arg2;
_arg2 = (0!=data.readInt());
this.startTethering(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_stopTethering:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.stopTethering(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_getTetherableIfaces:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String[] _result = this.getTetherableIfaces();
reply.writeNoException();
reply.writeStringArray(_result);
return true;
}
case TRANSACTION_getTetheredIfaces:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String[] _result = this.getTetheredIfaces();
reply.writeNoException();
reply.writeStringArray(_result);
return true;
}
case TRANSACTION_getTetheringErroredIfaces:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String[] _result = this.getTetheringErroredIfaces();
reply.writeNoException();
reply.writeStringArray(_result);
return true;
}
case TRANSACTION_getTetheredDhcpRanges:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String[] _result = this.getTetheredDhcpRanges();
reply.writeNoException();
reply.writeStringArray(_result);
return true;
}
case TRANSACTION_getTetherableUsbRegexs:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String[] _result = this.getTetherableUsbRegexs();
reply.writeNoException();
reply.writeStringArray(_result);
return true;
}
case TRANSACTION_getTetherableWifiRegexs:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String[] _result = this.getTetherableWifiRegexs();
reply.writeNoException();
reply.writeStringArray(_result);
return true;
}
case TRANSACTION_getTetherableBluetoothRegexs:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String[] _result = this.getTetherableBluetoothRegexs();
reply.writeNoException();
reply.writeStringArray(_result);
return true;
}
case TRANSACTION_setUsbTethering:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
int _result = this.setUsbTethering(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_reportInetCondition:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
this.reportInetCondition(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_reportNetworkConnectivity:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.Network.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
boolean _arg1;
_arg1 = (0!=data.readInt());
this.reportNetworkConnectivity(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_getGlobalProxy:
{
data.enforceInterface(DESCRIPTOR);
android.net.ProxyInfo _result = this.getGlobalProxy();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_setGlobalProxy:
{
data.enforceInterface(DESCRIPTOR);
android.net.ProxyInfo _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.ProxyInfo.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.setGlobalProxy(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_getProxyForNetwork:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.Network.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
android.net.ProxyInfo _result = this.getProxyForNetwork(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_prepareVpn:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
int _arg2;
_arg2 = data.readInt();
boolean _result = this.prepareVpn(_arg0, _arg1, _arg2);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_setVpnPackageAuthorization:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _arg2;
_arg2 = (0!=data.readInt());
this.setVpnPackageAuthorization(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_establishVpn:
{
data.enforceInterface(DESCRIPTOR);
com.android.internal.net.VpnConfig _arg0;
if ((0!=data.readInt())) {
_arg0 = com.android.internal.net.VpnConfig.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
android.os.ParcelFileDescriptor _result = this.establishVpn(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getVpnConfig:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
com.android.internal.net.VpnConfig _result = this.getVpnConfig(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_startLegacyVpn:
{
data.enforceInterface(DESCRIPTOR);
com.android.internal.net.VpnProfile _arg0;
if ((0!=data.readInt())) {
_arg0 = com.android.internal.net.VpnProfile.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.startLegacyVpn(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_getLegacyVpnInfo:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
com.android.internal.net.LegacyVpnInfo _result = this.getLegacyVpnInfo(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getAllVpnInfo:
{
data.enforceInterface(DESCRIPTOR);
com.android.internal.net.VpnInfo[] _result = this.getAllVpnInfo();
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_updateLockdownVpn:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.updateLockdownVpn();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_setAlwaysOnVpnPackage:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
java.lang.String _arg1;
_arg1 = data.readString();
boolean _arg2;
_arg2 = (0!=data.readInt());
boolean _result = this.setAlwaysOnVpnPackage(_arg0, _arg1, _arg2);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_getAlwaysOnVpnPackage:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
java.lang.String _result = this.getAlwaysOnVpnPackage(_arg0);
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_checkMobileProvisioning:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _result = this.checkMobileProvisioning(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_getMobileProvisioningUrl:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _result = this.getMobileProvisioningUrl();
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_setProvisioningNotificationVisible:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
int _arg1;
_arg1 = data.readInt();
java.lang.String _arg2;
_arg2 = data.readString();
this.setProvisioningNotificationVisible(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_setAirplaneMode:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.setAirplaneMode(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_registerNetworkFactory:
{
data.enforceInterface(DESCRIPTOR);
android.os.Messenger _arg0;
if ((0!=data.readInt())) {
_arg0 = android.os.Messenger.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
java.lang.String _arg1;
_arg1 = data.readString();
this.registerNetworkFactory(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_requestBandwidthUpdate:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.Network.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
boolean _result = this.requestBandwidthUpdate(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_unregisterNetworkFactory:
{
data.enforceInterface(DESCRIPTOR);
android.os.Messenger _arg0;
if ((0!=data.readInt())) {
_arg0 = android.os.Messenger.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.unregisterNetworkFactory(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_registerNetworkAgent:
{
data.enforceInterface(DESCRIPTOR);
android.os.Messenger _arg0;
if ((0!=data.readInt())) {
_arg0 = android.os.Messenger.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
android.net.NetworkInfo _arg1;
if ((0!=data.readInt())) {
_arg1 = android.net.NetworkInfo.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
android.net.LinkProperties _arg2;
if ((0!=data.readInt())) {
_arg2 = android.net.LinkProperties.CREATOR.createFromParcel(data);
}
else {
_arg2 = null;
}
android.net.NetworkCapabilities _arg3;
if ((0!=data.readInt())) {
_arg3 = android.net.NetworkCapabilities.CREATOR.createFromParcel(data);
}
else {
_arg3 = null;
}
int _arg4;
_arg4 = data.readInt();
android.net.NetworkMisc _arg5;
if ((0!=data.readInt())) {
_arg5 = android.net.NetworkMisc.CREATOR.createFromParcel(data);
}
else {
_arg5 = null;
}
int _result = this.registerNetworkAgent(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_requestNetwork:
{
data.enforceInterface(DESCRIPTOR);
android.net.NetworkCapabilities _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.NetworkCapabilities.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
android.os.Messenger _arg1;
if ((0!=data.readInt())) {
_arg1 = android.os.Messenger.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
int _arg2;
_arg2 = data.readInt();
android.os.IBinder _arg3;
_arg3 = data.readStrongBinder();
int _arg4;
_arg4 = data.readInt();
android.net.NetworkRequest _result = this.requestNetwork(_arg0, _arg1, _arg2, _arg3, _arg4);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_pendingRequestForNetwork:
{
data.enforceInterface(DESCRIPTOR);
android.net.NetworkCapabilities _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.NetworkCapabilities.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
android.app.PendingIntent _arg1;
if ((0!=data.readInt())) {
_arg1 = android.app.PendingIntent.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
android.net.NetworkRequest _result = this.pendingRequestForNetwork(_arg0, _arg1);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_releasePendingNetworkRequest:
{
data.enforceInterface(DESCRIPTOR);
android.app.PendingIntent _arg0;
if ((0!=data.readInt())) {
_arg0 = android.app.PendingIntent.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.releasePendingNetworkRequest(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_listenForNetwork:
{
data.enforceInterface(DESCRIPTOR);
android.net.NetworkCapabilities _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.NetworkCapabilities.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
android.os.Messenger _arg1;
if ((0!=data.readInt())) {
_arg1 = android.os.Messenger.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
android.os.IBinder _arg2;
_arg2 = data.readStrongBinder();
android.net.NetworkRequest _result = this.listenForNetwork(_arg0, _arg1, _arg2);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_pendingListenForNetwork:
{
data.enforceInterface(DESCRIPTOR);
android.net.NetworkCapabilities _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.NetworkCapabilities.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
android.app.PendingIntent _arg1;
if ((0!=data.readInt())) {
_arg1 = android.app.PendingIntent.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.pendingListenForNetwork(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_requestLinkProperties:
{
data.enforceInterface(DESCRIPTOR);
android.net.NetworkRequest _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.NetworkRequest.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.requestLinkProperties(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_requestNetworkCapabilities:
{
data.enforceInterface(DESCRIPTOR);
android.net.NetworkRequest _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.NetworkRequest.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.requestNetworkCapabilities(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_releaseNetworkRequest:
{
data.enforceInterface(DESCRIPTOR);
android.net.NetworkRequest _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.NetworkRequest.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.releaseNetworkRequest(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_setAcceptUnvalidated:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.Network.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
boolean _arg1;
_arg1 = (0!=data.readInt());
boolean _arg2;
_arg2 = (0!=data.readInt());
this.setAcceptUnvalidated(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_setAvoidUnvalidated:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.Network.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.setAvoidUnvalidated(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_getRestoreDefaultNetworkDelay:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _result = this.getRestoreDefaultNetworkDelay(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_addVpnAddress:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _result = this.addVpnAddress(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_removeVpnAddress:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _result = this.removeVpnAddress(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_setUnderlyingNetworksForVpn:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network[] _arg0;
_arg0 = data.createTypedArray(android.net.Network.CREATOR);
boolean _result = this.setUnderlyingNetworksForVpn(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_factoryReset:
{
data.enforceInterface(DESCRIPTOR);
this.factoryReset();
reply.writeNoException();
return true;
}
case TRANSACTION_startNattKeepalive:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.Network.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
int _arg1;
_arg1 = data.readInt();
android.os.Messenger _arg2;
if ((0!=data.readInt())) {
_arg2 = android.os.Messenger.CREATOR.createFromParcel(data);
}
else {
_arg2 = null;
}
android.os.IBinder _arg3;
_arg3 = data.readStrongBinder();
java.lang.String _arg4;
_arg4 = data.readString();
int _arg5;
_arg5 = data.readInt();
java.lang.String _arg6;
_arg6 = data.readString();
this.startNattKeepalive(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
reply.writeNoException();
return true;
}
case TRANSACTION_stopKeepalive:
{
data.enforceInterface(DESCRIPTOR);
android.net.Network _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.Network.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
int _arg1;
_arg1 = data.readInt();
this.stopKeepalive(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_getCaptivePortalServerUrl:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _result = this.getCaptivePortalServerUrl();
reply.writeNoException();
reply.writeString(_result);
return true;
}
}
return super.onTransact(code, data, reply, flags);
