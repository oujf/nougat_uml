class NetworkKey
!!!79960503.java!!!	NetworkKey(inout wifiKey : WifiKey)
        this.type = TYPE_WIFI;
        this.wifiKey = wifiKey;
!!!79960631.java!!!	NetworkKey(inout in : Parcel)
        type = in.readInt();
        switch (type) {
            case TYPE_WIFI:
                wifiKey = WifiKey.CREATOR.createFromParcel(in);
                break;
            default:
                throw new IllegalArgumentException("Parcel has unknown type: " + type);
        }
!!!79960759.java!!!	describeContents() : int
        return 0;
!!!79960887.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        out.writeInt(type);
        switch (type) {
            case TYPE_WIFI:
                wifiKey.writeToParcel(out, flags);
                break;
            default:
                throw new IllegalStateException("NetworkKey has unknown type " + type);
        }
!!!79961015.java!!!	equals(inout o : Object) : boolean
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        NetworkKey that = (NetworkKey) o;

        return type == that.type && Objects.equals(wifiKey, that.wifiKey);
!!!79961143.java!!!	hashCode() : int
        return Objects.hash(type, wifiKey);
!!!79961271.java!!!	toString() : String
        switch (type) {
            case TYPE_WIFI:
                return wifiKey.toString();
            default:
                // Don't throw an exception here in case someone is logging this object in a catch
                // block for debugging purposes.
                return "InvalidKey";
        }
