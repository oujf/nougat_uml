class VpnService
!!!80047671.java!!!	getService() : IConnectivityManager
        return IConnectivityManager.Stub.asInterface(
                ServiceManager.getService(Context.CONNECTIVITY_SERVICE));
!!!80047799.java!!!	prepare(inout context : Context) : Intent
        try {
            if (getService().prepareVpn(context.getPackageName(), null, UserHandle.myUserId())) {
                return null;
            }
        } catch (RemoteException e) {
            // ignore
        }
        return VpnConfig.getIntentForConfirmation();
!!!80047927.java!!!	prepareAndAuthorize(inout context : Context) : void
        IConnectivityManager cm = getService();
        String packageName = context.getPackageName();
        try {
            // Only prepare if we're not already prepared.
            int userId = UserHandle.myUserId();
            if (!cm.prepareVpn(packageName, null, userId)) {
                cm.prepareVpn(null, packageName, userId);
            }
            cm.setVpnPackageAuthorization(packageName, userId, true);
        } catch (RemoteException e) {
            // ignore
        }
!!!80048055.java!!!	protect(in socket : int) : boolean
        return NetworkUtils.protectFromVpn(socket);
!!!80048183.java!!!	protect(inout socket : Socket) : boolean
        return protect(socket.getFileDescriptor$().getInt$());
!!!80048311.java!!!	protect(inout socket : DatagramSocket) : boolean
        return protect(socket.getFileDescriptor$().getInt$());
!!!80048439.java!!!	addAddress(inout address : InetAddress, in prefixLength : int) : boolean
        check(address, prefixLength);
        try {
            return getService().addVpnAddress(address.getHostAddress(), prefixLength);
        } catch (RemoteException e) {
            throw new IllegalStateException(e);
        }
!!!80048567.java!!!	removeAddress(inout address : InetAddress, in prefixLength : int) : boolean
        check(address, prefixLength);
        try {
            return getService().removeVpnAddress(address.getHostAddress(), prefixLength);
        } catch (RemoteException e) {
            throw new IllegalStateException(e);
        }
!!!80048695.java!!!	setUnderlyingNetworks(inout networks : Network [[]]) : boolean
        try {
            return getService().setUnderlyingNetworksForVpn(networks);
        } catch (RemoteException e) {
            throw new IllegalStateException(e);
        }
!!!80048823.java!!!	onBind(inout intent : Intent) : IBinder
        if (intent != null && SERVICE_INTERFACE.equals(intent.getAction())) {
            return new Callback();
        }
        return null;
!!!80048951.java!!!	onRevoke() : void
        stopSelf();
!!!80049207.java!!!	check(inout address : InetAddress, in prefixLength : int) : void
        if (address.isLoopbackAddress()) {
            throw new IllegalArgumentException("Bad address");
        }
        if (address instanceof Inet4Address) {
            if (prefixLength < 0 || prefixLength > 32) {
                throw new IllegalArgumentException("Bad prefixLength");
            }
        } else if (address instanceof Inet6Address) {
            if (prefixLength < 0 || prefixLength > 128) {
                throw new IllegalArgumentException("Bad prefixLength");
            }
        } else {
            throw new IllegalArgumentException("Unsupported family");
        }
