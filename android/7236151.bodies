class Stub
!!!80083895.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!80084023.java!!!	asInterface(inout obj : IBinder) : INfcAdapter
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.nfc.INfcAdapter))) {
return ((android.nfc.INfcAdapter)iin);
}
return new android.nfc.INfcAdapter.Stub.Proxy(obj);
!!!80084151.java!!!	asBinder() : IBinder
return this;
!!!80084279.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_getNfcTagInterface:
{
data.enforceInterface(DESCRIPTOR);
android.nfc.INfcTag _result = this.getNfcTagInterface();
reply.writeNoException();
reply.writeStrongBinder((((_result!=null))?(_result.asBinder()):(null)));
return true;
}
case TRANSACTION_getNfcCardEmulationInterface:
{
data.enforceInterface(DESCRIPTOR);
android.nfc.INfcCardEmulation _result = this.getNfcCardEmulationInterface();
reply.writeNoException();
reply.writeStrongBinder((((_result!=null))?(_result.asBinder()):(null)));
return true;
}
case TRANSACTION_getNfcFCardEmulationInterface:
{
data.enforceInterface(DESCRIPTOR);
android.nfc.INfcFCardEmulation _result = this.getNfcFCardEmulationInterface();
reply.writeNoException();
reply.writeStrongBinder((((_result!=null))?(_result.asBinder()):(null)));
return true;
}
case TRANSACTION_getNfcAdapterExtrasInterface:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.nfc.INfcAdapterExtras _result = this.getNfcAdapterExtrasInterface(_arg0);
reply.writeNoException();
reply.writeStrongBinder((((_result!=null))?(_result.asBinder()):(null)));
return true;
}
case TRANSACTION_getState:
{
data.enforceInterface(DESCRIPTOR);
int _result = this.getState();
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_disable:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
boolean _result = this.disable(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_enable:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.enable();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_enableNdefPush:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.enableNdefPush();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_disableNdefPush:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.disableNdefPush();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_isNdefPushEnabled:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.isNdefPushEnabled();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_pausePolling:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.pausePolling(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_resumePolling:
{
data.enforceInterface(DESCRIPTOR);
this.resumePolling();
reply.writeNoException();
return true;
}
case TRANSACTION_setForegroundDispatch:
{
data.enforceInterface(DESCRIPTOR);
android.app.PendingIntent _arg0;
if ((0!=data.readInt())) {
_arg0 = android.app.PendingIntent.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
android.content.IntentFilter[] _arg1;
_arg1 = data.createTypedArray(android.content.IntentFilter.CREATOR);
android.nfc.TechListParcel _arg2;
if ((0!=data.readInt())) {
_arg2 = android.nfc.TechListParcel.CREATOR.createFromParcel(data);
}
else {
_arg2 = null;
}
this.setForegroundDispatch(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_setAppCallback:
{
data.enforceInterface(DESCRIPTOR);
android.nfc.IAppCallback _arg0;
_arg0 = android.nfc.IAppCallback.Stub.asInterface(data.readStrongBinder());
this.setAppCallback(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_invokeBeam:
{
data.enforceInterface(DESCRIPTOR);
this.invokeBeam();
return true;
}
case TRANSACTION_invokeBeamInternal:
{
data.enforceInterface(DESCRIPTOR);
android.nfc.BeamShareData _arg0;
if ((0!=data.readInt())) {
_arg0 = android.nfc.BeamShareData.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.invokeBeamInternal(_arg0);
return true;
}
case TRANSACTION_ignore:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
android.nfc.ITagRemovedCallback _arg2;
_arg2 = android.nfc.ITagRemovedCallback.Stub.asInterface(data.readStrongBinder());
boolean _result = this.ignore(_arg0, _arg1, _arg2);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_dispatch:
{
data.enforceInterface(DESCRIPTOR);
android.nfc.Tag _arg0;
if ((0!=data.readInt())) {
_arg0 = android.nfc.Tag.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.dispatch(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_setReaderMode:
{
data.enforceInterface(DESCRIPTOR);
android.os.IBinder _arg0;
_arg0 = data.readStrongBinder();
android.nfc.IAppCallback _arg1;
_arg1 = android.nfc.IAppCallback.Stub.asInterface(data.readStrongBinder());
int _arg2;
_arg2 = data.readInt();
android.os.Bundle _arg3;
if ((0!=data.readInt())) {
_arg3 = android.os.Bundle.CREATOR.createFromParcel(data);
}
else {
_arg3 = null;
}
this.setReaderMode(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
return true;
}
case TRANSACTION_setP2pModes:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
this.setP2pModes(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_addNfcUnlockHandler:
{
data.enforceInterface(DESCRIPTOR);
android.nfc.INfcUnlockHandler _arg0;
_arg0 = android.nfc.INfcUnlockHandler.Stub.asInterface(data.readStrongBinder());
int[] _arg1;
_arg1 = data.createIntArray();
this.addNfcUnlockHandler(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_removeNfcUnlockHandler:
{
data.enforceInterface(DESCRIPTOR);
android.nfc.INfcUnlockHandler _arg0;
_arg0 = android.nfc.INfcUnlockHandler.Stub.asInterface(data.readStrongBinder());
this.removeNfcUnlockHandler(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_verifyNfcPermission:
{
data.enforceInterface(DESCRIPTOR);
this.verifyNfcPermission();
reply.writeNoException();
return true;
}
}
return super.onTransact(code, data, reply, flags);
