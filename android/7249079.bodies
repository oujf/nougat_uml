class CommonTimeConfig
!!!80215223.java!!!	CommonTimeConfig()
        mRemote = ServiceManager.getService(SERVICE_NAME);
        if (null == mRemote)
            throw new RemoteException();

        mInterfaceDesc = mRemote.getInterfaceDescriptor();
        mUtils = new CommonTimeUtils(mRemote, mInterfaceDesc);
        mRemote.linkToDeath(mDeathHandler, 0);
!!!80215351.java!!!	create() : CommonTimeConfig
        CommonTimeConfig retVal;

        try {
            retVal = new CommonTimeConfig();
        }
        catch (RemoteException e) {
            retVal = null;
        }

        return retVal;
!!!80215479.java!!!	release() : void
        if (null != mRemote) {
            try {
                mRemote.unlinkToDeath(mDeathHandler, 0);
            }
            catch (NoSuchElementException e) { }
            mRemote = null;
        }
        mUtils = null;
!!!80215607.java!!!	getMasterElectionPriority() : byte
        throwOnDeadServer();
        return (byte)mUtils.transactGetInt(METHOD_GET_MASTER_ELECTION_PRIORITY, -1);
!!!80215735.java!!!	setMasterElectionPriority(in priority : byte) : int
        if (checkDeadServer())
            return ERROR_DEAD_OBJECT;
        return mUtils.transactSetInt(METHOD_SET_MASTER_ELECTION_PRIORITY, priority);
!!!80215863.java!!!	getMasterElectionEndpoint() : InetSocketAddress
        throwOnDeadServer();
        return mUtils.transactGetSockaddr(METHOD_GET_MASTER_ELECTION_ENDPOINT);
!!!80215991.java!!!	setMasterElectionEndpoint(inout ep : InetSocketAddress) : int
        if (checkDeadServer())
            return ERROR_DEAD_OBJECT;
        return mUtils.transactSetSockaddr(METHOD_SET_MASTER_ELECTION_ENDPOINT, ep);
!!!80216119.java!!!	getMasterElectionGroupId() : long
        throwOnDeadServer();
        return mUtils.transactGetLong(METHOD_GET_MASTER_ELECTION_GROUP_ID, INVALID_GROUP_ID);
!!!80216247.java!!!	setMasterElectionGroupId(in id : long) : int
        if (checkDeadServer())
            return ERROR_DEAD_OBJECT;
        return mUtils.transactSetLong(METHOD_SET_MASTER_ELECTION_GROUP_ID, id);
!!!80216375.java!!!	getInterfaceBinding() : String
        throwOnDeadServer();

        String ifaceName = mUtils.transactGetString(METHOD_GET_INTERFACE_BINDING, null);

        if ((null != ifaceName) && (0 == ifaceName.length()))
                return null;

        return ifaceName;
!!!80216503.java!!!	setNetworkBinding(inout ifaceName : String) : int
        if (checkDeadServer())
            return ERROR_DEAD_OBJECT;

        return mUtils.transactSetString(METHOD_SET_INTERFACE_BINDING,
                                       (null == ifaceName) ? "" : ifaceName);
!!!80216631.java!!!	getMasterAnnounceInterval() : int
        throwOnDeadServer();
        return mUtils.transactGetInt(METHOD_GET_MASTER_ANNOUNCE_INTERVAL, -1);
!!!80216759.java!!!	setMasterAnnounceInterval(in interval : int) : int
        if (checkDeadServer())
            return ERROR_DEAD_OBJECT;
        return mUtils.transactSetInt(METHOD_SET_MASTER_ANNOUNCE_INTERVAL, interval);
!!!80216887.java!!!	getClientSyncInterval() : int
        throwOnDeadServer();
        return mUtils.transactGetInt(METHOD_GET_CLIENT_SYNC_INTERVAL, -1);
!!!80217015.java!!!	setClientSyncInterval(in interval : int) : int
        if (checkDeadServer())
            return ERROR_DEAD_OBJECT;
        return mUtils.transactSetInt(METHOD_SET_CLIENT_SYNC_INTERVAL, interval);
!!!80217143.java!!!	getPanicThreshold() : int
        throwOnDeadServer();
        return mUtils.transactGetInt(METHOD_GET_PANIC_THRESHOLD, -1);
!!!80217271.java!!!	setPanicThreshold(in threshold : int) : int
        if (checkDeadServer())
            return ERROR_DEAD_OBJECT;
        return mUtils.transactSetInt(METHOD_SET_PANIC_THRESHOLD, threshold);
!!!80217399.java!!!	getAutoDisable() : boolean
        throwOnDeadServer();
        return (1 == mUtils.transactGetInt(METHOD_GET_AUTO_DISABLE, 1));
!!!80217527.java!!!	setAutoDisable(inout autoDisable : boolean) : int
        if (checkDeadServer())
            return ERROR_DEAD_OBJECT;

        return mUtils.transactSetInt(METHOD_SET_AUTO_DISABLE, autoDisable ? 1 : 0);
!!!80217655.java!!!	forceNetworklessMasterMode() : int
        android.os.Parcel data  = android.os.Parcel.obtain();
        android.os.Parcel reply = android.os.Parcel.obtain();

        try {
            data.writeInterfaceToken(mInterfaceDesc);
            mRemote.transact(METHOD_FORCE_NETWORKLESS_MASTER_MODE, data, reply, 0);

            return reply.readInt();
        }
        catch (RemoteException e) {
            return ERROR_DEAD_OBJECT;
        }
        finally {
            reply.recycle();
            data.recycle();
        }
!!!80217911.java!!!	setServerDiedListener(inout listener : CommonTimeConfig::OnServerDiedListener) : void
        synchronized (mListenerLock) {
            mServerDiedListener = listener;
        }
!!!80218039.java!!!	finalize() : void
 release();
!!!80218167.java!!!	checkDeadServer() : boolean
        return ((null == mRemote) || (null == mUtils));
!!!80218295.java!!!	throwOnDeadServer() : void
        if (checkDeadServer())
            throw new RemoteException();
