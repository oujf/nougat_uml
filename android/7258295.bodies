class Proxy
!!!80329783.java!!!	Proxy(inout remote : IBinder)
mRemote = remote;
!!!80329911.java!!!	asBinder() : IBinder
return mRemote;
!!!80330039.java!!!	getInterfaceDescriptor() : String
return DESCRIPTOR;
!!!80330167.java!!!	hasVibrator() : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_hasVibrator, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!80330295.java!!!	vibrate(in uid : int, inout opPkg : String, in milliseconds : long, in usageHint : int, inout token : IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(uid);
_data.writeString(opPkg);
_data.writeLong(milliseconds);
_data.writeInt(usageHint);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_vibrate, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!80330423.java!!!	vibratePattern(in uid : int, inout opPkg : String, inout pattern : long [[]], in repeat : int, in usageHint : int, inout token : IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(uid);
_data.writeString(opPkg);
_data.writeLongArray(pattern);
_data.writeInt(repeat);
_data.writeInt(usageHint);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_vibratePattern, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!80330551.java!!!	cancelVibrate(inout token : IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_cancelVibrate, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
