class SystemVibrator
!!!80432823.java!!!	SystemVibrator()
        mService = IVibratorService.Stub.asInterface(
                ServiceManager.getService("vibrator"));
!!!80432951.java!!!	SystemVibrator(inout context : Context)
        super(context);
        mService = IVibratorService.Stub.asInterface(
                ServiceManager.getService("vibrator"));
!!!80433079.java!!!	hasVibrator() : boolean
        if (mService == null) {
            Log.w(TAG, "Failed to vibrate; no vibrator service.");
            return false;
        }
        try {
            return mService.hasVibrator();
        } catch (RemoteException e) {
        }
        return false;
!!!80433207.java!!!	vibrate(in uid : int, inout opPkg : String, in milliseconds : long, inout attributes : AudioAttributes) : void
        if (mService == null) {
            Log.w(TAG, "Failed to vibrate; no vibrator service.");
            return;
        }
        try {
            mService.vibrate(uid, opPkg, milliseconds, usageForAttributes(attributes), mToken);
        } catch (RemoteException e) {
            Log.w(TAG, "Failed to vibrate.", e);
        }
!!!80433335.java!!!	vibrate(in uid : int, inout opPkg : String, inout pattern : long [[]], in repeat : int, inout attributes : AudioAttributes) : void
        if (mService == null) {
            Log.w(TAG, "Failed to vibrate; no vibrator service.");
            return;
        }
        // catch this here because the server will do nothing.  pattern may
        // not be null, let that be checked, because the server will drop it
        // anyway
        if (repeat < pattern.length) {
            try {
                mService.vibratePattern(uid, opPkg, pattern, repeat, usageForAttributes(attributes),
                        mToken);
            } catch (RemoteException e) {
                Log.w(TAG, "Failed to vibrate.", e);
            }
        } else {
            throw new ArrayIndexOutOfBoundsException();
        }
!!!80433463.java!!!	usageForAttributes(inout attributes : AudioAttributes) : int
        return attributes != null ? attributes.getUsage() : AudioAttributes.USAGE_UNKNOWN;
!!!80433591.java!!!	cancel() : void
        if (mService == null) {
            return;
        }
        try {
            mService.cancelVibrate(mToken);
        } catch (RemoteException e) {
            Log.w(TAG, "Failed to cancel vibration.", e);
        }
