class PrintJob
!!!80695479.java!!!	PrintJob(inout context : Context, inout jobInfo : PrintJobInfo, inout client : IPrintServiceClient)
        mContext = context;
        mCachedInfo = jobInfo;
        mPrintServiceClient = client;
        mDocument = new PrintDocument(mCachedInfo.getId(), client,
                jobInfo.getDocumentInfo());
!!!80695607.java!!!	getId() : PrintJobId
        PrintService.throwIfNotCalledOnMainThread();
        return mCachedInfo.getId();
!!!80695735.java!!!	getInfo() : PrintJobInfo
        PrintService.throwIfNotCalledOnMainThread();
        if (isInImmutableState()) {
            return mCachedInfo;
        }
        PrintJobInfo info = null;
        try {
            info = mPrintServiceClient.getPrintJobInfo(mCachedInfo.getId());
        } catch (RemoteException re) {
            Log.e(LOG_TAG, "Couldn't get info for job: " + mCachedInfo.getId(), re);
        }
        if (info != null) {
            mCachedInfo = info;
        }
        return mCachedInfo;
!!!80695863.java!!!	getDocument() : PrintDocument
        PrintService.throwIfNotCalledOnMainThread();
        return mDocument;
!!!80695991.java!!!	isQueued() : boolean
        PrintService.throwIfNotCalledOnMainThread();
        return getInfo().getState() == PrintJobInfo.STATE_QUEUED;
!!!80696119.java!!!	isStarted() : boolean
        PrintService.throwIfNotCalledOnMainThread();
        return getInfo().getState() == PrintJobInfo.STATE_STARTED;
!!!80696247.java!!!	isBlocked() : boolean
        PrintService.throwIfNotCalledOnMainThread();
        return getInfo().getState() == PrintJobInfo.STATE_BLOCKED;
!!!80696375.java!!!	isCompleted() : boolean
        PrintService.throwIfNotCalledOnMainThread();
        return getInfo().getState() == PrintJobInfo.STATE_COMPLETED;
!!!80696503.java!!!	isFailed() : boolean
        PrintService.throwIfNotCalledOnMainThread();
        return getInfo().getState() == PrintJobInfo.STATE_FAILED;
!!!80696631.java!!!	isCancelled() : boolean
        PrintService.throwIfNotCalledOnMainThread();
        return getInfo().getState() == PrintJobInfo.STATE_CANCELED;
!!!80696759.java!!!	start() : boolean
        PrintService.throwIfNotCalledOnMainThread();
        final int state = getInfo().getState();
        if (state == PrintJobInfo.STATE_QUEUED
                || state == PrintJobInfo.STATE_BLOCKED) {
            return setState(PrintJobInfo.STATE_STARTED, null);
        }
        return false;
!!!80696887.java!!!	block(inout reason : String) : boolean
        PrintService.throwIfNotCalledOnMainThread();
        PrintJobInfo info = getInfo();
        final int state = info.getState();
        if (state == PrintJobInfo.STATE_STARTED || state == PrintJobInfo.STATE_BLOCKED) {
            return setState(PrintJobInfo.STATE_BLOCKED, reason);
        }
        return false;
!!!80697015.java!!!	complete() : boolean
        PrintService.throwIfNotCalledOnMainThread();
        if (isStarted()) {
            return setState(PrintJobInfo.STATE_COMPLETED, null);
        }
        return false;
!!!80697143.java!!!	fail(inout error : String) : boolean
        PrintService.throwIfNotCalledOnMainThread();
        if (!isInImmutableState()) {
            return setState(PrintJobInfo.STATE_FAILED, error);
        }
        return false;
!!!80697271.java!!!	cancel() : boolean
        PrintService.throwIfNotCalledOnMainThread();
        if (!isInImmutableState()) {
            return setState(PrintJobInfo.STATE_CANCELED, null);
        }
        return false;
!!!80697399.java!!!	setProgress(in progress : float) : void
        PrintService.throwIfNotCalledOnMainThread();

        try {
            mPrintServiceClient.setProgress(mCachedInfo.getId(), progress);
        } catch (RemoteException re) {
            Log.e(LOG_TAG, "Error setting progress for job: " + mCachedInfo.getId(), re);
        }
!!!80697527.java!!!	setStatus(inout status : CharSequence) : void
        PrintService.throwIfNotCalledOnMainThread();

        try {
            mPrintServiceClient.setStatus(mCachedInfo.getId(), status);
        } catch (RemoteException re) {
            Log.e(LOG_TAG, "Error setting status for job: " + mCachedInfo.getId(), re);
        }
!!!80697655.java!!!	setStatus(in statusResId : int) : void
        PrintService.throwIfNotCalledOnMainThread();

        try {
            mPrintServiceClient.setStatusRes(mCachedInfo.getId(), statusResId,
                    mContext.getPackageName());
        } catch (RemoteException re) {
            Log.e(LOG_TAG, "Error setting status for job: " + mCachedInfo.getId(), re);
        }
!!!80697783.java!!!	setTag(inout tag : String) : boolean
        PrintService.throwIfNotCalledOnMainThread();
        if (isInImmutableState()) {
            return false;
        }
        try {
            return mPrintServiceClient.setPrintJobTag(mCachedInfo.getId(), tag);
        } catch (RemoteException re) {
            Log.e(LOG_TAG, "Error setting tag for job: " + mCachedInfo.getId(), re);
        }
        return false;
!!!80697911.java!!!	getTag() : String
        PrintService.throwIfNotCalledOnMainThread();
        return getInfo().getTag();
!!!80698039.java!!!	getAdvancedStringOption(inout key : String) : String
        PrintService.throwIfNotCalledOnMainThread();
        return getInfo().getAdvancedStringOption(key);
!!!80698167.java!!!	hasAdvancedOption(inout key : String) : boolean
        PrintService.throwIfNotCalledOnMainThread();
        return getInfo().hasAdvancedOption(key);
!!!80698295.java!!!	getAdvancedIntOption(inout key : String) : int
        PrintService.throwIfNotCalledOnMainThread();
        return getInfo().getAdvancedIntOption(key);
!!!80698423.java!!!	equals(inout obj : Object) : boolean
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        PrintJob other = (PrintJob) obj;
        return (mCachedInfo.getId().equals(other.mCachedInfo.getId()));
!!!80698551.java!!!	hashCode() : int
        return mCachedInfo.getId().hashCode();
!!!80698679.java!!!	isInImmutableState() : boolean
        final int state = mCachedInfo.getState();
        return state == PrintJobInfo.STATE_COMPLETED
                || state == PrintJobInfo.STATE_CANCELED
                || state == PrintJobInfo.STATE_FAILED;
!!!80698807.java!!!	setState(in state : int, inout error : String) : boolean
        try {
            if (mPrintServiceClient.setPrintJobState(mCachedInfo.getId(), state, error)) {
                // Best effort - update the state of the cached info since
                // we may not be able to re-fetch it later if the job gets
                // removed from the spooler as a result of the state change.
                mCachedInfo.setState(state);
                mCachedInfo.setStatus(error);
                return true;
            }
        } catch (RemoteException re) {
            Log.e(LOG_TAG, "Error setting the state of job: " + mCachedInfo.getId(), re);
        }
        return false;
