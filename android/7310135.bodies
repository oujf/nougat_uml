class KeyCharacteristics
!!!80770487.java!!!	KeyCharacteristics(inout in : Parcel)
        readFromParcel(in);
!!!80770615.java!!!	describeContents() : int
        return 0;
!!!80770743.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        swEnforced.writeToParcel(out, flags);
        hwEnforced.writeToParcel(out, flags);
!!!80770871.java!!!	readFromParcel(inout in : Parcel) : void
        swEnforced = KeymasterArguments.CREATOR.createFromParcel(in);
        hwEnforced = KeymasterArguments.CREATOR.createFromParcel(in);
!!!80770999.java!!!	getEnum(in tag : int) : Integer
        if (hwEnforced.containsTag(tag)) {
            return hwEnforced.getEnum(tag, -1);
        } else if (swEnforced.containsTag(tag)) {
            return swEnforced.getEnum(tag, -1);
        } else {
            return null;
        }
!!!80771127.java!!!	getEnums(in tag : int) : List<Integer>
        List<Integer> result = new ArrayList<Integer>();
        result.addAll(hwEnforced.getEnums(tag));
        result.addAll(swEnforced.getEnums(tag));
        return result;
!!!80771255.java!!!	getUnsignedInt(in tag : int, in defaultValue : long) : long
        if (hwEnforced.containsTag(tag)) {
            return hwEnforced.getUnsignedInt(tag, defaultValue);
        } else {
            return swEnforced.getUnsignedInt(tag, defaultValue);
        }
!!!80771383.java!!!	getUnsignedLongs(in tag : int) : List<BigInteger>
        List<BigInteger> result = new ArrayList<BigInteger>();
        result.addAll(hwEnforced.getUnsignedLongs(tag));
        result.addAll(swEnforced.getUnsignedLongs(tag));
        return result;
!!!80771511.java!!!	getDate(in tag : int) : Date
        Date result = swEnforced.getDate(tag, null);
        if (result != null) {
            return result;
        }
        return hwEnforced.getDate(tag, null);
!!!80771639.java!!!	getBoolean(in tag : int) : boolean
        if (hwEnforced.containsTag(tag)) {
            return hwEnforced.getBoolean(tag);
        } else {
            return swEnforced.getBoolean(tag);
        }
