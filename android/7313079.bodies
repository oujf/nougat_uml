class KeyStoreCertificateSource
!!!80785463.java!!!	KeyStoreCertificateSource(inout ks : KeyStore)
        mKeyStore = ks;
!!!80785591.java!!!	getCertificates() : Set<X509Certificate>
        ensureInitialized();
        return mCertificates;
!!!80785719.java!!!	ensureInitialized() : void
        synchronized (mLock) {
            if (mCertificates != null) {
                return;
            }

            try {
                TrustedCertificateIndex localIndex = new TrustedCertificateIndex();
                Set<X509Certificate> certificates = new ArraySet<>(mKeyStore.size());
                for (Enumeration<String> en = mKeyStore.aliases(); en.hasMoreElements();) {
                    String alias = en.nextElement();
                    X509Certificate cert = (X509Certificate) mKeyStore.getCertificate(alias);
                    if (cert != null) {
                        certificates.add(cert);
                        localIndex.index(cert);
                    }
                }
                mIndex = localIndex;
                mCertificates = certificates;
            } catch (KeyStoreException e) {
                throw new RuntimeException("Failed to load certificates from KeyStore", e);
            }
        }
!!!80785847.java!!!	findBySubjectAndPublicKey(inout cert : X509Certificate) : X509Certificate
        ensureInitialized();
        java.security.cert.TrustAnchor anchor = mIndex.findBySubjectAndPublicKey(cert);
        if (anchor == null) {
            return null;
        }
        return anchor.getTrustedCert();
!!!80785975.java!!!	findByIssuerAndSignature(inout cert : X509Certificate) : X509Certificate
        ensureInitialized();
        java.security.cert.TrustAnchor anchor = mIndex.findByIssuerAndSignature(cert);
        if (anchor == null) {
            return null;
        }
        return anchor.getTrustedCert();
!!!80786103.java!!!	findAllByIssuerAndSignature(inout cert : X509Certificate) : Set<X509Certificate>
        ensureInitialized();
        Set<java.security.cert.TrustAnchor> anchors = mIndex.findAllByIssuerAndSignature(cert);
        if (anchors.isEmpty()) {
            return Collections.<X509Certificate>emptySet();
        }
        Set<X509Certificate> certs = new ArraySet<X509Certificate>(anchors.size());
        for (java.security.cert.TrustAnchor anchor : anchors) {
            certs.add(anchor.getTrustedCert());
        }
        return certs;
!!!80786231.java!!!	handleTrustStorageUpdate() : void
        // Nothing to do.
