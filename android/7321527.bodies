class Proxy
!!!80834871.java!!!	Proxy(inout remote : IBinder)
mRemote = remote;
!!!80834999.java!!!	asBinder() : IBinder
return mRemote;
!!!80835127.java!!!	getInterfaceDescriptor() : String
return DESCRIPTOR;
!!!80835255.java!!!	enroll(in uid : int, inout currentPasswordHandle : byte [[]], inout currentPassword : byte [[]], inout desiredPassword : byte [[]]) : GateKeeperResponse
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.service.gatekeeper.GateKeeperResponse _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(uid);
_data.writeByteArray(currentPasswordHandle);
_data.writeByteArray(currentPassword);
_data.writeByteArray(desiredPassword);
mRemote.transact(Stub.TRANSACTION_enroll, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.service.gatekeeper.GateKeeperResponse.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!80835383.java!!!	verify(in uid : int, inout enrolledPasswordHandle : byte [[]], inout providedPassword : byte [[]]) : GateKeeperResponse
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.service.gatekeeper.GateKeeperResponse _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(uid);
_data.writeByteArray(enrolledPasswordHandle);
_data.writeByteArray(providedPassword);
mRemote.transact(Stub.TRANSACTION_verify, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.service.gatekeeper.GateKeeperResponse.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!80835511.java!!!	verifyChallenge(in uid : int, in challenge : long, inout enrolledPasswordHandle : byte [[]], inout providedPassword : byte [[]]) : GateKeeperResponse
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.service.gatekeeper.GateKeeperResponse _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(uid);
_data.writeLong(challenge);
_data.writeByteArray(enrolledPasswordHandle);
_data.writeByteArray(providedPassword);
mRemote.transact(Stub.TRANSACTION_verifyChallenge, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.service.gatekeeper.GateKeeperResponse.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!80835639.java!!!	getSecureUserId(in uid : int) : long
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
long _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(uid);
mRemote.transact(Stub.TRANSACTION_getSecureUserId, _data, _reply, 0);
_reply.readException();
_result = _reply.readLong();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!80835767.java!!!	clearSecureUserId(in uid : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(uid);
mRemote.transact(Stub.TRANSACTION_clearSecureUserId, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
