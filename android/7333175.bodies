class VoiceInteractionServiceInfo
!!!80917175.java!!!	VoiceInteractionServiceInfo(inout pm : PackageManager, inout comp : ComponentName)
        this(pm, pm.getServiceInfo(comp, PackageManager.GET_META_DATA));
!!!80917303.java!!!	VoiceInteractionServiceInfo(inout pm : PackageManager, inout comp : ComponentName, in userHandle : int)
        this(pm, getServiceInfoOrThrow(comp, userHandle));
!!!80917431.java!!!	getServiceInfoOrThrow(inout comp : ComponentName, in userHandle : int) : ServiceInfo
        try {
            ServiceInfo si = AppGlobals.getPackageManager().getServiceInfo(comp,
                    PackageManager.GET_META_DATA
                            | PackageManager.MATCH_DIRECT_BOOT_AWARE
                            | PackageManager.MATCH_DIRECT_BOOT_UNAWARE
                            | PackageManager.MATCH_DEBUG_TRIAGED_MISSING,
                    userHandle);
            if (si != null) {
                return si;
            }
        } catch (RemoteException e) {
        }
        throw new PackageManager.NameNotFoundException(comp.toString());
!!!80917559.java!!!	VoiceInteractionServiceInfo(inout pm : PackageManager, inout si : ServiceInfo)
        if (si == null) {
            mParseError = "Service not available";
            return;
        }
        if (!Manifest.permission.BIND_VOICE_INTERACTION.equals(si.permission)) {
            mParseError = "Service does not require permission "
                    + Manifest.permission.BIND_VOICE_INTERACTION;
            return;
        }

        XmlResourceParser parser = null;
        try {
            parser = si.loadXmlMetaData(pm, VoiceInteractionService.SERVICE_META_DATA);
            if (parser == null) {
                mParseError = "No " + VoiceInteractionService.SERVICE_META_DATA
                        + " meta-data for " + si.packageName;
                return;
            }

            Resources res = pm.getResourcesForApplication(si.applicationInfo);

            AttributeSet attrs = Xml.asAttributeSet(parser);

            int type;
            while ((type=parser.next()) != XmlPullParser.END_DOCUMENT
                    && type != XmlPullParser.START_TAG) {
            }

            String nodeName = parser.getName();
            if (!"voice-interaction-service".equals(nodeName)) {
                mParseError = "Meta-data does not start with voice-interaction-service tag";
                return;
            }

            TypedArray array = res.obtainAttributes(attrs,
                    com.android.internal.R.styleable.VoiceInteractionService);
            mSessionService = array.getString(
                    com.android.internal.R.styleable.VoiceInteractionService_sessionService);
            mRecognitionService = array.getString(
                    com.android.internal.R.styleable.VoiceInteractionService_recognitionService);
            mSettingsActivity = array.getString(
                    com.android.internal.R.styleable.VoiceInteractionService_settingsActivity);
            mSupportsAssist = array.getBoolean(
                    com.android.internal.R.styleable.VoiceInteractionService_supportsAssist,
                    false);
            mSupportsLaunchFromKeyguard = array.getBoolean(com.android.internal.
                    R.styleable.VoiceInteractionService_supportsLaunchVoiceAssistFromKeyguard,
                    false);
            mSupportsLocalInteraction = array.getBoolean(com.android.internal.
                    R.styleable.VoiceInteractionService_supportsLocalInteraction, false);
            array.recycle();
            if (mSessionService == null) {
                mParseError = "No sessionService specified";
                return;
            }
            if (mRecognitionService == null) {
                mParseError = "No recognitionService specified";
                return;
            }
        } catch (XmlPullParserException e) {
            mParseError = "Error parsing voice interation service meta-data: " + e;
            Log.w(TAG, "error parsing voice interaction service meta-data", e);
            return;
        } catch (IOException e) {
            mParseError = "Error parsing voice interation service meta-data: " + e;
            Log.w(TAG, "error parsing voice interaction service meta-data", e);
            return;
        } catch (PackageManager.NameNotFoundException e) {
            mParseError = "Error parsing voice interation service meta-data: " + e;
            Log.w(TAG, "error parsing voice interaction service meta-data", e);
            return;
        } finally {
            if (parser != null) parser.close();
        }
        mServiceInfo = si;
!!!80917687.java!!!	getParseError() : String
        return mParseError;
!!!80917815.java!!!	getServiceInfo() : ServiceInfo
        return mServiceInfo;
!!!80917943.java!!!	getSessionService() : String
        return mSessionService;
!!!80918071.java!!!	getRecognitionService() : String
        return mRecognitionService;
!!!80918199.java!!!	getSettingsActivity() : String
        return mSettingsActivity;
!!!80918327.java!!!	getSupportsAssist() : boolean
        return mSupportsAssist;
!!!80918455.java!!!	getSupportsLaunchFromKeyguard() : boolean
        return mSupportsLaunchFromKeyguard;
!!!80918583.java!!!	getSupportsLocalInteraction() : boolean
        return mSupportsLocalInteraction;
