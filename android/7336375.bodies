class Stub
!!!80938551.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!80938679.java!!!	asInterface(inout obj : IBinder) : IWallpaperEngine
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.service.wallpaper.IWallpaperEngine))) {
return ((android.service.wallpaper.IWallpaperEngine)iin);
}
return new android.service.wallpaper.IWallpaperEngine.Stub.Proxy(obj);
!!!80938807.java!!!	asBinder() : IBinder
return this;
!!!80938935.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_setDesiredSize:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
this.setDesiredSize(_arg0, _arg1);
return true;
}
case TRANSACTION_setDisplayPadding:
{
data.enforceInterface(DESCRIPTOR);
android.graphics.Rect _arg0;
if ((0!=data.readInt())) {
_arg0 = android.graphics.Rect.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.setDisplayPadding(_arg0);
return true;
}
case TRANSACTION_setVisibility:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.setVisibility(_arg0);
return true;
}
case TRANSACTION_dispatchPointer:
{
data.enforceInterface(DESCRIPTOR);
android.view.MotionEvent _arg0;
if ((0!=data.readInt())) {
_arg0 = android.view.MotionEvent.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.dispatchPointer(_arg0);
return true;
}
case TRANSACTION_dispatchWallpaperCommand:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
int _arg2;
_arg2 = data.readInt();
int _arg3;
_arg3 = data.readInt();
android.os.Bundle _arg4;
if ((0!=data.readInt())) {
_arg4 = android.os.Bundle.CREATOR.createFromParcel(data);
}
else {
_arg4 = null;
}
this.dispatchWallpaperCommand(_arg0, _arg1, _arg2, _arg3, _arg4);
return true;
}
case TRANSACTION_destroy:
{
data.enforceInterface(DESCRIPTOR);
this.destroy();
return true;
}
}
return super.onTransact(code, data, reply, flags);
