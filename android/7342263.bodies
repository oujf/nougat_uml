class Proxy
!!!80972471.java!!!	Proxy(inout remote : IBinder)
mRemote = remote;
!!!80972599.java!!!	asBinder() : IBinder
return mRemote;
!!!80972727.java!!!	getInterfaceDescriptor() : String
return DESCRIPTOR;
!!!80972855.java!!!	onStart(inout utteranceId : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(utteranceId);
mRemote.transact(Stub.TRANSACTION_onStart, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!80972983.java!!!	onSuccess(inout utteranceId : String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(utteranceId);
mRemote.transact(Stub.TRANSACTION_onSuccess, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!80973111.java!!!	onStop(inout utteranceId : String, inout isStarted : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(utteranceId);
_data.writeInt(((isStarted)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_onStop, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!80973239.java!!!	onError(inout utteranceId : String, in errorCode : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(utteranceId);
_data.writeInt(errorCode);
mRemote.transact(Stub.TRANSACTION_onError, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!80973367.java!!!	onBeginSynthesis(inout utteranceId : String, in sampleRateInHz : int, in audioFormat : int, in channelCount : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(utteranceId);
_data.writeInt(sampleRateInHz);
_data.writeInt(audioFormat);
_data.writeInt(channelCount);
mRemote.transact(Stub.TRANSACTION_onBeginSynthesis, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!80973495.java!!!	onAudioAvailable(inout utteranceId : String, inout audio : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(utteranceId);
_data.writeByteArray(audio);
mRemote.transact(Stub.TRANSACTION_onAudioAvailable, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
