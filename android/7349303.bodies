class BidiFormatter
!!!81025079.java!!!	getInstance() : BidiFormatter
        return getDefaultInstanceFromContext(isRtlLocale(Locale.getDefault()));
!!!81025207.java!!!	getInstance(inout rtlContext : boolean) : BidiFormatter
        return getDefaultInstanceFromContext(rtlContext);
!!!81025335.java!!!	getInstance(inout locale : Locale) : BidiFormatter
        return getDefaultInstanceFromContext(isRtlLocale(locale));
!!!81025463.java!!!	BidiFormatter(inout isRtlContext : boolean, in flags : int, inout heuristic : TextDirectionHeuristic)
        mIsRtlContext = isRtlContext;
        mFlags = flags;
        mDefaultTextDirectionHeuristic = heuristic;
!!!81025591.java!!!	isRtlContext() : boolean
        return mIsRtlContext;
!!!81025719.java!!!	getStereoReset() : boolean
        return (mFlags & FLAG_STEREO_RESET) != 0;
!!!81025847.java!!!	markAfter(inout str : CharSequence, inout heuristic : TextDirectionHeuristic) : String
        final boolean isRtl = heuristic.isRtl(str, 0, str.length());
        // getExitDir() is called only if needed (short-circuit).
        if (!mIsRtlContext && (isRtl || getExitDir(str) == DIR_RTL)) {
            return LRM_STRING;
        }
        if (mIsRtlContext && (!isRtl || getExitDir(str) == DIR_LTR)) {
            return RLM_STRING;
        }
        return EMPTY_STRING;
!!!81025975.java!!!	markBefore(inout str : CharSequence, inout heuristic : TextDirectionHeuristic) : String
        final boolean isRtl = heuristic.isRtl(str, 0, str.length());
        // getEntryDir() is called only if needed (short-circuit).
        if (!mIsRtlContext && (isRtl || getEntryDir(str) == DIR_RTL)) {
            return LRM_STRING;
        }
        if (mIsRtlContext && (!isRtl || getEntryDir(str) == DIR_LTR)) {
            return RLM_STRING;
        }
        return EMPTY_STRING;
!!!81026103.java!!!	isRtl(inout str : String) : boolean
        return isRtl((CharSequence) str);
!!!81026231.java!!!	isRtl(inout str : CharSequence) : boolean
        return mDefaultTextDirectionHeuristic.isRtl(str, 0, str.length());
!!!81026359.java!!!	unicodeWrap(inout str : String, inout heuristic : TextDirectionHeuristic, inout isolate : boolean) : String
        if (str == null) return null;
        return unicodeWrap((CharSequence) str, heuristic, isolate).toString();
!!!81026487.java!!!	unicodeWrap(inout str : CharSequence, inout heuristic : TextDirectionHeuristic, inout isolate : boolean) : CharSequence
        if (str == null) return null;
        final boolean isRtl = heuristic.isRtl(str, 0, str.length());
        SpannableStringBuilder result = new SpannableStringBuilder();
        if (getStereoReset() && isolate) {
            result.append(markBefore(str,
                    isRtl ? TextDirectionHeuristics.RTL : TextDirectionHeuristics.LTR));
        }
        if (isRtl != mIsRtlContext) {
            result.append(isRtl ? RLE : LRE);
            result.append(str);
            result.append(PDF);
        } else {
            result.append(str);
        }
        if (isolate) {
            result.append(markAfter(str,
                    isRtl ? TextDirectionHeuristics.RTL : TextDirectionHeuristics.LTR));
        }
        return result;
!!!81026615.java!!!	unicodeWrap(inout str : String, inout heuristic : TextDirectionHeuristic) : String
        return unicodeWrap(str, heuristic, true /* isolate */);
!!!81026743.java!!!	unicodeWrap(inout str : CharSequence, inout heuristic : TextDirectionHeuristic) : CharSequence
        return unicodeWrap(str, heuristic, true /* isolate */);
!!!81026871.java!!!	unicodeWrap(inout str : String, inout isolate : boolean) : String
        return unicodeWrap(str, mDefaultTextDirectionHeuristic, isolate);
!!!81026999.java!!!	unicodeWrap(inout str : CharSequence, inout isolate : boolean) : CharSequence
        return unicodeWrap(str, mDefaultTextDirectionHeuristic, isolate);
!!!81027127.java!!!	unicodeWrap(inout str : String) : String
        return unicodeWrap(str, mDefaultTextDirectionHeuristic, true /* isolate */);
!!!81027255.java!!!	unicodeWrap(inout str : CharSequence) : CharSequence
        return unicodeWrap(str, mDefaultTextDirectionHeuristic, true /* isolate */);
!!!81027383.java!!!	getDefaultInstanceFromContext(inout isRtlContext : boolean) : BidiFormatter
        return isRtlContext ? DEFAULT_RTL_INSTANCE : DEFAULT_LTR_INSTANCE;
!!!81027511.java!!!	isRtlLocale(inout locale : Locale) : boolean
        return (TextUtils.getLayoutDirectionFromLocale(locale) == View.LAYOUT_DIRECTION_RTL);
!!!81027639.java!!!	getExitDir(inout str : CharSequence) : int
        return new DirectionalityEstimator(str, false /* isHtml */).getExitDir();
!!!81027767.java!!!	getEntryDir(inout str : CharSequence) : int
        return new DirectionalityEstimator(str, false /* isHtml */).getEntryDir();
