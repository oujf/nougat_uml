class DrawableMarginSpan
!!!81169335.java!!!	DrawableMarginSpan(inout b : Drawable)
        mDrawable = b;
!!!81169463.java!!!	DrawableMarginSpan(inout b : Drawable, in pad : int)
        mDrawable = b;
        mPad = pad;
!!!81169591.java!!!	getLeadingMargin(inout first : boolean) : int
        return mDrawable.getIntrinsicWidth() + mPad;
!!!81169719.java!!!	drawLeadingMargin(inout c : Canvas, inout p : Paint, in x : int, in dir : int, in top : int, in baseline : int, in bottom : int, inout text : CharSequence, in start : int, in end : int, inout first : boolean, inout layout : Layout) : void
        int st = ((Spanned) text).getSpanStart(this);
        int ix = (int)x;
        int itop = (int)layout.getLineTop(layout.getLineForOffset(st));

        int dw = mDrawable.getIntrinsicWidth();
        int dh = mDrawable.getIntrinsicHeight();

        // XXX What to do about Paint?
        mDrawable.setBounds(ix, itop, ix+dw, itop+dh);
        mDrawable.draw(c);
!!!81169847.java!!!	chooseHeight(inout text : CharSequence, in start : int, in end : int, in istartv : int, in v : int, inout fm : Paint::FontMetricsInt) : void
        if (end == ((Spanned) text).getSpanEnd(this)) {
            int ht = mDrawable.getIntrinsicHeight();

            int need = ht - (v + fm.descent - fm.ascent - istartv);
            if (need > 0)
                fm.descent += need;

            need = ht - (v + fm.bottom - fm.top - istartv);
            if (need > 0)
                fm.bottom += need;
        }
