class ChangeClipBounds
!!!81238711.java!!!	ChangeClipBounds(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
!!!81238839.java!!!	getTransitionProperties() : String
        return sTransitionProperties;
!!!81238967.java!!!	captureValues(inout values : TransitionValues) : void
        View view = values.view;
        if (view.getVisibility() == View.GONE) {
            return;
        }

        Rect clip = view.getClipBounds();
        values.values.put(PROPNAME_CLIP, clip);
        if (clip == null) {
            Rect bounds = new Rect(0, 0, view.getWidth(), view.getHeight());
            values.values.put(PROPNAME_BOUNDS, bounds);
        }
!!!81239095.java!!!	captureStartValues(inout transitionValues : TransitionValues) : void
        captureValues(transitionValues);
!!!81239223.java!!!	captureEndValues(inout transitionValues : TransitionValues) : void
        captureValues(transitionValues);
!!!81239351.java!!!	createAnimator(in sceneRoot : ViewGroup, inout startValues : TransitionValues, inout endValues : TransitionValues) : Animator
        if (startValues == null || endValues == null
                || !startValues.values.containsKey(PROPNAME_CLIP)
                || !endValues.values.containsKey(PROPNAME_CLIP)) {
            return null;
        }
        Rect start = (Rect) startValues.values.get(PROPNAME_CLIP);
        Rect end = (Rect) endValues.values.get(PROPNAME_CLIP);
        if (start == null && end == null) {
            return null; // No animation required since there is no clip.
        }

        if (start == null) {
            start = (Rect) startValues.values.get(PROPNAME_BOUNDS);
        } else if (end == null) {
            end = (Rect) endValues.values.get(PROPNAME_BOUNDS);
        }
        if (start.equals(end)) {
            return null;
        }

        endValues.view.setClipBounds(start);
        RectEvaluator evaluator = new RectEvaluator(new Rect());
        return ObjectAnimator.ofObject(endValues.view, "clipBounds", evaluator, start, end);
