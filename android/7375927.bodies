class Slide
!!!81259703.java!!!	Slide()
        setSlideEdge(Gravity.BOTTOM);
!!!81259831.java!!!	Slide(in slideEdge : int)
        setSlideEdge(slideEdge);
!!!81259959.java!!!	Slide(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.Slide);
        int edge = a.getInt(R.styleable.Slide_slideEdge, Gravity.BOTTOM);
        a.recycle();
        setSlideEdge(edge);
!!!81260087.java!!!	captureValues(inout transitionValues : TransitionValues) : void
        View view = transitionValues.view;
        int[] position = new int[2];
        view.getLocationOnScreen(position);
        transitionValues.values.put(PROPNAME_SCREEN_POSITION, position);
!!!81260215.java!!!	captureStartValues(inout transitionValues : TransitionValues) : void
        super.captureStartValues(transitionValues);
        captureValues(transitionValues);
!!!81260343.java!!!	captureEndValues(inout transitionValues : TransitionValues) : void
        super.captureEndValues(transitionValues);
        captureValues(transitionValues);
!!!81260471.java!!!	setSlideEdge(in slideEdge : int) : void
        switch (slideEdge) {
            case Gravity.LEFT:
                mSlideCalculator = sCalculateLeft;
                break;
            case Gravity.TOP:
                mSlideCalculator = sCalculateTop;
                break;
            case Gravity.RIGHT:
                mSlideCalculator = sCalculateRight;
                break;
            case Gravity.BOTTOM:
                mSlideCalculator = sCalculateBottom;
                break;
            case Gravity.START:
                mSlideCalculator = sCalculateStart;
                break;
            case Gravity.END:
                mSlideCalculator = sCalculateEnd;
                break;
            default:
                throw new IllegalArgumentException("Invalid slide direction");
        }
        mSlideEdge = slideEdge;
        SidePropagation propagation = new SidePropagation();
        propagation.setSide(slideEdge);
        setPropagation(propagation);
!!!81260599.java!!!	getSlideEdge() : int
        return mSlideEdge;
!!!81260727.java!!!	onAppear(inout sceneRoot : ViewGroup, inout view : View, inout startValues : TransitionValues, inout endValues : TransitionValues) : Animator
        if (endValues == null) {
            return null;
        }
        int[] position = (int[]) endValues.values.get(PROPNAME_SCREEN_POSITION);
        float endX = view.getTranslationX();
        float endY = view.getTranslationY();
        float startX = mSlideCalculator.getGoneX(sceneRoot, view, mSlideFraction);
        float startY = mSlideCalculator.getGoneY(sceneRoot, view, mSlideFraction);
        return TranslationAnimationCreator
                .createAnimation(view, endValues, position[0], position[1],
                        startX, startY, endX, endY, sDecelerate, this);
!!!81260855.java!!!	onDisappear(inout sceneRoot : ViewGroup, inout view : View, inout startValues : TransitionValues, inout endValues : TransitionValues) : Animator
        if (startValues == null) {
            return null;
        }
        int[] position = (int[]) startValues.values.get(PROPNAME_SCREEN_POSITION);
        float startX = view.getTranslationX();
        float startY = view.getTranslationY();
        float endX = mSlideCalculator.getGoneX(sceneRoot, view, mSlideFraction);
        float endY = mSlideCalculator.getGoneY(sceneRoot, view, mSlideFraction);
        return TranslationAnimationCreator
                .createAnimation(view, startValues, position[0], position[1],
                        startX, startY, endX, endY, sAccelerate, this);
!!!81260983.java!!!	setSlideFraction(in slideFraction : float) : void
        mSlideFraction = slideFraction;
