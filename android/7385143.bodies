class Spline
!!!81360311.java!!!	createSpline(inout x : float [[]], inout y : float [[]]) : Spline
        if (!isStrictlyIncreasing(x)) {
            throw new IllegalArgumentException("The control points must all have strictly "
                    + "increasing X values.");
        }

        if (isMonotonic(y)) {
            return createMonotoneCubicSpline(x, y);
        } else {
            return createLinearSpline(x, y);
        }
!!!81360439.java!!!	createMonotoneCubicSpline(inout x : float [[]], inout y : float [[]]) : Spline
        return new MonotoneCubicSpline(x, y);
!!!81360567.java!!!	createLinearSpline(inout x : float [[]], inout y : float [[]]) : Spline
        return new LinearSpline(x, y);
!!!81360695.java!!!	isStrictlyIncreasing(inout x : float [[]]) : boolean
        if (x == null || x.length < 2) {
            throw new IllegalArgumentException("There must be at least two control points.");
        }
        float prev = x[0];
        for (int i = 1; i < x.length; i++) {
            float curr = x[i];
            if (curr <= prev) {
                return false;
            }
            prev = curr;
        }
        return true;
!!!81360823.java!!!	isMonotonic(inout x : float [[]]) : boolean
        if (x == null || x.length < 2) {
            throw new IllegalArgumentException("There must be at least two control points.");
        }
        float prev = x[0];
        for (int i = 1; i < x.length; i++) {
            float curr = x[i];
            if (curr < prev) {
                return false;
            }
            prev = curr;
        }
        return true;
