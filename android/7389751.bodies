class MagnificationSpec
!!!81535287.java!!!	MagnificationSpec()
        /* do nothing - reducing visibility */
!!!81535415.java!!!	initialize(in scale : float, in offsetX : float, in offsetY : float) : void
        if (scale < 1) {
            throw new IllegalArgumentException("Scale must be greater than or equal to one!");
        }
        this.scale = scale;
        this.offsetX = offsetX;
        this.offsetY = offsetY;
!!!81535543.java!!!	isNop() : boolean
        return scale == 1.0f && offsetX == 0 && offsetY == 0;
!!!81535671.java!!!	obtain(inout other : MagnificationSpec) : MagnificationSpec
        MagnificationSpec info = obtain();
        info.scale = other.scale;
        info.offsetX = other.offsetX;
        info.offsetY = other.offsetY;
        return info;
!!!81535799.java!!!	obtain() : MagnificationSpec
        MagnificationSpec spec = sPool.acquire();
        return (spec != null) ? spec : new MagnificationSpec();
!!!81535927.java!!!	recycle() : void
        clear();
        sPool.release(this);
!!!81536055.java!!!	clear() : void
       scale = 1.0f;
       offsetX = 0.0f;
       offsetY = 0.0f;
!!!81536183.java!!!	setTo(inout other : MagnificationSpec) : void
        scale = other.scale;
        offsetX = other.offsetX;
        offsetY = other.offsetY;
!!!81536311.java!!!	describeContents() : int
        return 0;
!!!81536439.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeFloat(scale);
        parcel.writeFloat(offsetX);
        parcel.writeFloat(offsetY);
        recycle();
!!!81536567.java!!!	equals(inout other : Object) : boolean
        if (this == other) {
            return true;
        }

        if (other == null || getClass() != other.getClass()) {
            return false;
        }

        final MagnificationSpec s = (MagnificationSpec) other;
        return scale == s.scale && offsetX == s.offsetX && offsetY == s.offsetY;
!!!81536695.java!!!	hashCode() : int
        int result = (scale != +0.0f ? Float.floatToIntBits(scale) : 0);
        result = 31 * result + (offsetX != +0.0f ? Float.floatToIntBits(offsetX) : 0);
        result = 31 * result + (offsetY != +0.0f ? Float.floatToIntBits(offsetY) : 0);
        return result;
!!!81536823.java!!!	toString() : String
        StringBuilder builder = new StringBuilder();
        builder.append("<scale:");
        builder.append(Float.toString(scale));
        builder.append(",offsetX:");
        builder.append(Float.toString(offsetX));
        builder.append(",offsetY:");
        builder.append(Float.toString(offsetY));
        builder.append(">");
        return builder.toString();
!!!81536951.java!!!	initFromParcel(inout parcel : Parcel) : void
        scale = parcel.readFloat();
        offsetX = parcel.readFloat();
        offsetY = parcel.readFloat();
