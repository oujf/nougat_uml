class VelocityTracker
!!!81632439.java!!!	obtain() : VelocityTracker
        VelocityTracker instance = sPool.acquire();
        return (instance != null) ? instance : new VelocityTracker(null);
!!!81632567.java!!!	obtain(inout strategy : String) : VelocityTracker
        if (strategy == null) {
            return obtain();
        }
        return new VelocityTracker(strategy);
!!!81632695.java!!!	recycle() : void
        if (mStrategy == null) {
            clear();
            sPool.release(this);
        }
!!!81632823.java!!!	VelocityTracker(inout strategy : String)
        mPtr = nativeInitialize(strategy);
        mStrategy = strategy;
!!!81632951.java!!!	finalize() : void
        try {
            if (mPtr != 0) {
                nativeDispose(mPtr);
                mPtr = 0;
            }
        } finally {
            super.finalize();
        }
!!!81633079.java!!!	clear() : void
        nativeClear(mPtr);
!!!81633207.java!!!	addMovement(inout event : MotionEvent) : void
        if (event == null) {
            throw new IllegalArgumentException("event must not be null");
        }
        nativeAddMovement(mPtr, event);
!!!81633335.java!!!	computeCurrentVelocity(in units : int) : void
        nativeComputeCurrentVelocity(mPtr, units, Float.MAX_VALUE);
!!!81633463.java!!!	computeCurrentVelocity(in units : int, in maxVelocity : float) : void
        nativeComputeCurrentVelocity(mPtr, units, maxVelocity);
!!!81633591.java!!!	getXVelocity() : float
        return nativeGetXVelocity(mPtr, ACTIVE_POINTER_ID);
!!!81633719.java!!!	getYVelocity() : float
        return nativeGetYVelocity(mPtr, ACTIVE_POINTER_ID);
!!!81633847.java!!!	getXVelocity(in id : int) : float
        return nativeGetXVelocity(mPtr, id);
!!!81633975.java!!!	getYVelocity(in id : int) : float
        return nativeGetYVelocity(mPtr, id);
!!!81634103.java!!!	getEstimator(in id : int, inout outEstimator : VelocityTracker::Estimator) : boolean
        if (outEstimator == null) {
            throw new IllegalArgumentException("outEstimator must not be null");
        }
        return nativeGetEstimator(mPtr, id, outEstimator);
