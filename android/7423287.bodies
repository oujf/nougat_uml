class CacheManager
!!!81907383.java!!!	getCacheFileBaseDir() : File
        return null;
!!!81907511.java!!!	cacheDisabled() : boolean
        return false;
!!!81907639.java!!!	startCacheTransaction() : boolean
        return false;
!!!81907767.java!!!	endCacheTransaction() : boolean
        return false;
!!!81907895.java!!!	getCacheFile(inout url : String, inout headers : Map<String, String>) : CacheManager::CacheResult
        return null;
!!!81908023.java!!!	saveCacheFile(inout url : String, inout cacheResult : CacheManager::CacheResult) : void
        saveCacheFile(url, 0, cacheResult);
!!!81908151.java!!!	saveCacheFile(inout url : String, in postIdentifier : long, inout cacheRet : CacheManager::CacheResult) : void
        try {
            cacheRet.outStream.close();
        } catch (IOException e) {
            return;
        }

        // This method is exposed in the public API but the API provides no
        // way to obtain a new CacheResult object with a non-null output
        // stream ...
        // - CacheResult objects returned by getCacheFile() have a null
        //   output stream.
        // - new CacheResult objects have a null output stream and no
        //   setter is provided.
        // Since this method throws a null pointer exception in this case,
        // it is effectively useless from the point of view of the public
        // API.
        //
        // With the Chromium HTTP stack we continue to throw the same
        // exception for 'backwards compatibility' with the Android HTTP
        // stack.
        //
        // This method is not used from within this package, and for public API
        // use, we should already have thrown an exception above.
        assert false;
