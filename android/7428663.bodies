class WebResourceResponse
!!!81948727.java!!!	WebResourceResponse(inout mimeType : String, inout encoding : String, inout data : InputStream)
        mMimeType = mimeType;
        mEncoding = encoding;
        setData(data);
!!!81948855.java!!!	WebResourceResponse(inout mimeType : String, inout encoding : String, in statusCode : int, inout reasonPhrase : String, inout responseHeaders : Map<String, String>, inout data : InputStream)
        this(mimeType, encoding, data);
        setStatusCodeAndReasonPhrase(statusCode, reasonPhrase);
        setResponseHeaders(responseHeaders);
!!!81948983.java!!!	setMimeType(inout mimeType : String) : void
        checkImmutable();
        mMimeType = mimeType;
!!!81949111.java!!!	getMimeType() : String
        return mMimeType;
!!!81949239.java!!!	setEncoding(inout encoding : String) : void
        checkImmutable();
        mEncoding = encoding;
!!!81949367.java!!!	getEncoding() : String
        return mEncoding;
!!!81949495.java!!!	setStatusCodeAndReasonPhrase(in statusCode : int, inout reasonPhrase : String) : void
        checkImmutable();
        if (statusCode < 100)
            throw new IllegalArgumentException("statusCode can't be less than 100.");
        if (statusCode > 599)
            throw new IllegalArgumentException("statusCode can't be greater than 599.");
        if (statusCode > 299 && statusCode < 400)
            throw new IllegalArgumentException("statusCode can't be in the [300, 399] range.");
        if (reasonPhrase == null)
            throw new IllegalArgumentException("reasonPhrase can't be null.");
        if (reasonPhrase.trim().isEmpty())
            throw new IllegalArgumentException("reasonPhrase can't be empty.");
        for (int i = 0; i < reasonPhrase.length(); i++) {
            int c = reasonPhrase.charAt(i);
            if (c > 0x7F) {
                throw new IllegalArgumentException(
                        "reasonPhrase can't contain non-ASCII characters.");
            }
        }
        mStatusCode = statusCode;
        mReasonPhrase = reasonPhrase;
!!!81949623.java!!!	getStatusCode() : int
        return mStatusCode;
!!!81949751.java!!!	getReasonPhrase() : String
        return mReasonPhrase;
!!!81949879.java!!!	setResponseHeaders(inout headers : Map<String, String>) : void
        checkImmutable();
        mResponseHeaders = headers;
!!!81950007.java!!!	getResponseHeaders() : String
        return mResponseHeaders;
!!!81950135.java!!!	setData(inout data : InputStream) : void
        checkImmutable();
        // If data is (or is a subclass of) StringBufferInputStream
        if (data != null && StringBufferInputStream.class.isAssignableFrom(data.getClass())) {
            throw new IllegalArgumentException("StringBufferInputStream is deprecated and must " +
                "not be passed to a WebResourceResponse");
        }
        mInputStream = data;
!!!81950263.java!!!	getData() : InputStream
        return mInputStream;
!!!81950391.java!!!	WebResourceResponse(inout immutable : boolean, inout mimeType : String, inout encoding : String, in statusCode : int, inout reasonPhrase : String, inout responseHeaders : Map<String, String>, inout data : InputStream)
        mImmutable = immutable;
        mMimeType = mimeType;
        mEncoding = encoding;
        mStatusCode = statusCode;
        mReasonPhrase = reasonPhrase;
        mResponseHeaders = responseHeaders;
        mInputStream = data;
!!!81950519.java!!!	checkImmutable() : void
        if (mImmutable)
            throw new IllegalStateException("This WebResourceResponse instance is immutable");
