class WeeksAdapter
!!!82077751.java!!!	WeeksAdapter(inout context : Context)
            mContext = context;
            mGestureDetector = new GestureDetector(mContext, new WeeksAdapter.CalendarGestureListener());
            init();
!!!82077879.java!!!	init() : void
            mSelectedWeek = getWeeksSinceMinDate(mSelectedDate);
            mTotalWeekCount = getWeeksSinceMinDate(mMaxDate);
            if (mMinDate.get(Calendar.DAY_OF_WEEK) != mFirstDayOfWeek
                    || mMaxDate.get(Calendar.DAY_OF_WEEK) != mFirstDayOfWeek) {
                mTotalWeekCount++;
            }
            notifyDataSetChanged();
!!!82078007.java!!!	setSelectedDay(inout selectedDay : Calendar) : void
            if (selectedDay.get(Calendar.DAY_OF_YEAR) == mSelectedDate.get(Calendar.DAY_OF_YEAR)
                    && selectedDay.get(Calendar.YEAR) == mSelectedDate.get(Calendar.YEAR)) {
                return;
            }
            mSelectedDate.setTimeInMillis(selectedDay.getTimeInMillis());
            mSelectedWeek = getWeeksSinceMinDate(mSelectedDate);
            mFocusedMonth = mSelectedDate.get(Calendar.MONTH);
            notifyDataSetChanged();
!!!82078135.java!!!	getSelectedDay() : Calendar
            return mSelectedDate;
!!!82078263.java!!!	getCount() : int
            return mTotalWeekCount;
!!!82078391.java!!!	getItem(in position : int) : Object
            return null;
!!!82078519.java!!!	getItemId(in position : int) : long
            return position;
!!!82078647.java!!!	getView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
            WeekView weekView = null;
            if (convertView != null) {
                weekView = (WeekView) convertView;
            } else {
                weekView = new WeekView(mContext);
                AbsListView.LayoutParams params =
                        new AbsListView.LayoutParams(FrameLayout.LayoutParams.WRAP_CONTENT,
                                FrameLayout.LayoutParams.WRAP_CONTENT);
                weekView.setLayoutParams(params);
                weekView.setClickable(true);
                weekView.setOnTouchListener(this);
            }

            int selectedWeekDay = (mSelectedWeek == position) ? mSelectedDate.get(
                    Calendar.DAY_OF_WEEK) : -1;
            weekView.init(position, selectedWeekDay, mFocusedMonth);

            return weekView;
!!!82078775.java!!!	setFocusMonth(in month : int) : void
            if (mFocusedMonth == month) {
                return;
            }
            mFocusedMonth = month;
            notifyDataSetChanged();
!!!82078903.java!!!	onTouch(inout v : View, inout event : MotionEvent) : boolean
            if (mListView.isEnabled() && mGestureDetector.onTouchEvent(event)) {
                WeekView weekView = (WeekView) v;
                // if we cannot find a day for the given location we are done
                if (!weekView.getDayFromLocation(event.getX(), mTempDate)) {
                    return true;
                }
                // it is possible that the touched day is outside the valid range
                // we draw whole weeks but range end can fall not on the week end
                if (mTempDate.before(mMinDate) || mTempDate.after(mMaxDate)) {
                    return true;
                }
                onDateTapped(mTempDate);
                return true;
            }
            return false;
!!!82079031.java!!!	onDateTapped(inout day : Calendar) : void
            setSelectedDay(day);
            setMonthDisplayed(day);
