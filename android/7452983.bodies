class HeaderViewListAdapter
!!!82212023.java!!!	HeaderViewListAdapter(inout headerViewInfos : ArrayList<ListView.FixedViewInfo>, inout footerViewInfos : ArrayList<ListView.FixedViewInfo>, inout adapter : ListAdapter)
        mAdapter = adapter;
        mIsFilterable = adapter instanceof Filterable;

        if (headerViewInfos == null) {
            mHeaderViewInfos = EMPTY_INFO_LIST;
        } else {
            mHeaderViewInfos = headerViewInfos;
        }

        if (footerViewInfos == null) {
            mFooterViewInfos = EMPTY_INFO_LIST;
        } else {
            mFooterViewInfos = footerViewInfos;
        }

        mAreAllFixedViewsSelectable =
                areAllListInfosSelectable(mHeaderViewInfos)
                && areAllListInfosSelectable(mFooterViewInfos);
!!!82212151.java!!!	getHeadersCount() : int
        return mHeaderViewInfos.size();
!!!82212279.java!!!	getFootersCount() : int
        return mFooterViewInfos.size();
!!!82212407.java!!!	isEmpty() : boolean
        return mAdapter == null || mAdapter.isEmpty();
!!!82212535.java!!!	areAllListInfosSelectable(inout infos : ArrayList<ListView.FixedViewInfo>) : boolean
        if (infos != null) {
            for (ListView.FixedViewInfo info : infos) {
                if (!info.isSelectable) {
                    return false;
                }
            }
        }
        return true;
!!!82212663.java!!!	removeHeader(inout v : View) : boolean
        for (int i = 0; i < mHeaderViewInfos.size(); i++) {
            ListView.FixedViewInfo info = mHeaderViewInfos.get(i);
            if (info.view == v) {
                mHeaderViewInfos.remove(i);

                mAreAllFixedViewsSelectable =
                        areAllListInfosSelectable(mHeaderViewInfos)
                        && areAllListInfosSelectable(mFooterViewInfos);

                return true;
            }
        }

        return false;
!!!82212791.java!!!	removeFooter(inout v : View) : boolean
        for (int i = 0; i < mFooterViewInfos.size(); i++) {
            ListView.FixedViewInfo info = mFooterViewInfos.get(i);
            if (info.view == v) {
                mFooterViewInfos.remove(i);

                mAreAllFixedViewsSelectable =
                        areAllListInfosSelectable(mHeaderViewInfos)
                        && areAllListInfosSelectable(mFooterViewInfos);

                return true;
            }
        }

        return false;
!!!82212919.java!!!	getCount() : int
        if (mAdapter != null) {
            return getFootersCount() + getHeadersCount() + mAdapter.getCount();
        } else {
            return getFootersCount() + getHeadersCount();
        }
!!!82213047.java!!!	areAllItemsEnabled() : boolean
        if (mAdapter != null) {
            return mAreAllFixedViewsSelectable && mAdapter.areAllItemsEnabled();
        } else {
            return true;
        }
!!!82213175.java!!!	isEnabled(in position : int) : boolean
        // Header (negative positions will throw an IndexOutOfBoundsException)
        int numHeaders = getHeadersCount();
        if (position < numHeaders) {
            return mHeaderViewInfos.get(position).isSelectable;
        }

        // Adapter
        final int adjPosition = position - numHeaders;
        int adapterCount = 0;
        if (mAdapter != null) {
            adapterCount = mAdapter.getCount();
            if (adjPosition < adapterCount) {
                return mAdapter.isEnabled(adjPosition);
            }
        }

        // Footer (off-limits positions will throw an IndexOutOfBoundsException)
        return mFooterViewInfos.get(adjPosition - adapterCount).isSelectable;
!!!82213303.java!!!	getItem(in position : int) : Object
        // Header (negative positions will throw an IndexOutOfBoundsException)
        int numHeaders = getHeadersCount();
        if (position < numHeaders) {
            return mHeaderViewInfos.get(position).data;
        }

        // Adapter
        final int adjPosition = position - numHeaders;
        int adapterCount = 0;
        if (mAdapter != null) {
            adapterCount = mAdapter.getCount();
            if (adjPosition < adapterCount) {
                return mAdapter.getItem(adjPosition);
            }
        }

        // Footer (off-limits positions will throw an IndexOutOfBoundsException)
        return mFooterViewInfos.get(adjPosition - adapterCount).data;
!!!82213431.java!!!	getItemId(in position : int) : long
        int numHeaders = getHeadersCount();
        if (mAdapter != null && position >= numHeaders) {
            int adjPosition = position - numHeaders;
            int adapterCount = mAdapter.getCount();
            if (adjPosition < adapterCount) {
                return mAdapter.getItemId(adjPosition);
            }
        }
        return -1;
!!!82213559.java!!!	hasStableIds() : boolean
        if (mAdapter != null) {
            return mAdapter.hasStableIds();
        }
        return false;
!!!82213687.java!!!	getView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
        // Header (negative positions will throw an IndexOutOfBoundsException)
        int numHeaders = getHeadersCount();
        if (position < numHeaders) {
            return mHeaderViewInfos.get(position).view;
        }

        // Adapter
        final int adjPosition = position - numHeaders;
        int adapterCount = 0;
        if (mAdapter != null) {
            adapterCount = mAdapter.getCount();
            if (adjPosition < adapterCount) {
                return mAdapter.getView(adjPosition, convertView, parent);
            }
        }

        // Footer (off-limits positions will throw an IndexOutOfBoundsException)
        return mFooterViewInfos.get(adjPosition - adapterCount).view;
!!!82213815.java!!!	getItemViewType(in position : int) : int
        int numHeaders = getHeadersCount();
        if (mAdapter != null && position >= numHeaders) {
            int adjPosition = position - numHeaders;
            int adapterCount = mAdapter.getCount();
            if (adjPosition < adapterCount) {
                return mAdapter.getItemViewType(adjPosition);
            }
        }

        return AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER;
!!!82213943.java!!!	getViewTypeCount() : int
        if (mAdapter != null) {
            return mAdapter.getViewTypeCount();
        }
        return 1;
!!!82214071.java!!!	registerDataSetObserver(inout observer : DataSetObserver) : void
        if (mAdapter != null) {
            mAdapter.registerDataSetObserver(observer);
        }
!!!82214199.java!!!	unregisterDataSetObserver(inout observer : DataSetObserver) : void
        if (mAdapter != null) {
            mAdapter.unregisterDataSetObserver(observer);
        }
!!!82214327.java!!!	getFilter() : Filter
        if (mIsFilterable) {
            return ((Filterable) mAdapter).getFilter();
        }
        return null;
!!!82214455.java!!!	getWrappedAdapter() : ListAdapter
        return mAdapter;
