class PopupMenu
!!!82266167.java!!!	PopupMenu(inout context : Context, inout anchor : View)
        this(context, anchor, Gravity.NO_GRAVITY);
!!!82266295.java!!!	PopupMenu(inout context : Context, inout anchor : View, in gravity : int)
        this(context, anchor, gravity, R.attr.popupMenuStyle, 0);
!!!82266423.java!!!	PopupMenu(inout context : Context, inout anchor : View, in gravity : int, in popupStyleAttr : int, in popupStyleRes : int)
        mContext = context;
        mAnchor = anchor;

        mMenu = new MenuBuilder(context);
        mMenu.setCallback(new MenuBuilder.Callback() {
            @Override
            public boolean onMenuItemSelected(MenuBuilder menu, MenuItem item) {
                if (mMenuItemClickListener != null) {
                    return mMenuItemClickListener.onMenuItemClick(item);
                }
                return false;
            }

            @Override
            public void onMenuModeChange(MenuBuilder menu) {
            }
        });

        mPopup = new MenuPopupHelper(context, mMenu, anchor, false, popupStyleAttr, popupStyleRes);
        mPopup.setGravity(gravity);
        mPopup.setOnDismissListener(new PopupWindow.OnDismissListener() {
            @Override
            public void onDismiss() {
                if (mOnDismissListener != null) {
                    mOnDismissListener.onDismiss(PopupMenu.this);
                }
            }
        });
!!!82266551.java!!!	setGravity(in gravity : int) : void
        mPopup.setGravity(gravity);
!!!82266679.java!!!	getGravity() : int
        return mPopup.getGravity();
!!!82266807.java!!!	getDragToOpenListener() : View::OnTouchListener
        if (mDragListener == null) {
            mDragListener = new ForwardingListener(mAnchor) {
                @Override
                protected boolean onForwardingStarted() {
                    show();
                    return true;
                }

                @Override
                protected boolean onForwardingStopped() {
                    dismiss();
                    return true;
                }

                @Override
                public ShowableListMenu getPopup() {
                    // This will be null until show() is called.
                    return mPopup.getPopup();
                }
            };
        }

        return mDragListener;
!!!82266935.java!!!	getMenu() : Menu
        return mMenu;
!!!82267063.java!!!	getMenuInflater() : MenuInflater
        return new MenuInflater(mContext);
!!!82267191.java!!!	inflate(in menuRes : int) : void
        getMenuInflater().inflate(menuRes, mMenu);
!!!82267319.java!!!	show() : void
        mPopup.show();
!!!82267447.java!!!	dismiss() : void
        mPopup.dismiss();
!!!82267575.java!!!	setOnMenuItemClickListener(inout listener : PopupMenu::OnMenuItemClickListener) : void
        mMenuItemClickListener = listener;
!!!82267703.java!!!	setOnDismissListener(inout listener : PopupMenu::OnDismissListener) : void
        mOnDismissListener = listener;
