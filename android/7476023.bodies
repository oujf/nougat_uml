class Stub
!!!82494775.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!82494903.java!!!	asInterface(inout obj : IBinder) : IKeyguardService
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof com.android.internal.policy.IKeyguardService))) {
return ((com.android.internal.policy.IKeyguardService)iin);
}
return new com.android.internal.policy.IKeyguardService.Stub.Proxy(obj);
!!!82495031.java!!!	asBinder() : IBinder
return this;
!!!82495159.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_setOccluded:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.setOccluded(_arg0);
return true;
}
case TRANSACTION_addStateMonitorCallback:
{
data.enforceInterface(DESCRIPTOR);
com.android.internal.policy.IKeyguardStateCallback _arg0;
_arg0 = com.android.internal.policy.IKeyguardStateCallback.Stub.asInterface(data.readStrongBinder());
this.addStateMonitorCallback(_arg0);
return true;
}
case TRANSACTION_verifyUnlock:
{
data.enforceInterface(DESCRIPTOR);
com.android.internal.policy.IKeyguardExitCallback _arg0;
_arg0 = com.android.internal.policy.IKeyguardExitCallback.Stub.asInterface(data.readStrongBinder());
this.verifyUnlock(_arg0);
return true;
}
case TRANSACTION_keyguardDone:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
boolean _arg1;
_arg1 = (0!=data.readInt());
this.keyguardDone(_arg0, _arg1);
return true;
}
case TRANSACTION_dismiss:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.dismiss(_arg0);
return true;
}
case TRANSACTION_onDreamingStarted:
{
data.enforceInterface(DESCRIPTOR);
this.onDreamingStarted();
return true;
}
case TRANSACTION_onDreamingStopped:
{
data.enforceInterface(DESCRIPTOR);
this.onDreamingStopped();
return true;
}
case TRANSACTION_onStartedGoingToSleep:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.onStartedGoingToSleep(_arg0);
return true;
}
case TRANSACTION_onFinishedGoingToSleep:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
boolean _arg1;
_arg1 = (0!=data.readInt());
this.onFinishedGoingToSleep(_arg0, _arg1);
return true;
}
case TRANSACTION_onStartedWakingUp:
{
data.enforceInterface(DESCRIPTOR);
this.onStartedWakingUp();
return true;
}
case TRANSACTION_onScreenTurningOn:
{
data.enforceInterface(DESCRIPTOR);
com.android.internal.policy.IKeyguardDrawnCallback _arg0;
_arg0 = com.android.internal.policy.IKeyguardDrawnCallback.Stub.asInterface(data.readStrongBinder());
this.onScreenTurningOn(_arg0);
return true;
}
case TRANSACTION_onScreenTurnedOn:
{
data.enforceInterface(DESCRIPTOR);
this.onScreenTurnedOn();
return true;
}
case TRANSACTION_onScreenTurnedOff:
{
data.enforceInterface(DESCRIPTOR);
this.onScreenTurnedOff();
return true;
}
case TRANSACTION_setKeyguardEnabled:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.setKeyguardEnabled(_arg0);
return true;
}
case TRANSACTION_onSystemReady:
{
data.enforceInterface(DESCRIPTOR);
this.onSystemReady();
return true;
}
case TRANSACTION_doKeyguardTimeout:
{
data.enforceInterface(DESCRIPTOR);
android.os.Bundle _arg0;
if ((0!=data.readInt())) {
_arg0 = android.os.Bundle.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.doKeyguardTimeout(_arg0);
return true;
}
case TRANSACTION_setCurrentUser:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.setCurrentUser(_arg0);
return true;
}
case TRANSACTION_onBootCompleted:
{
data.enforceInterface(DESCRIPTOR);
this.onBootCompleted();
return true;
}
case TRANSACTION_startKeyguardExitAnimation:
{
data.enforceInterface(DESCRIPTOR);
long _arg0;
_arg0 = data.readLong();
long _arg1;
_arg1 = data.readLong();
this.startKeyguardExitAnimation(_arg0, _arg1);
return true;
}
case TRANSACTION_onActivityDrawn:
{
data.enforceInterface(DESCRIPTOR);
this.onActivityDrawn();
return true;
}
}
return super.onTransact(code, data, reply, flags);
