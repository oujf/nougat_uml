class Zygote
!!!83054647.java!!!	forkAndSpecialize(in uid : int, in gid : int, inout gids : int [[]], in debugFlags : int, inout rlimits : int [[][]], in mountExternal : int, inout seInfo : String, inout niceName : String, inout fdsToClose : int [[]], inout instructionSet : String, inout appDataDir : String) : int
        VM_HOOKS.preFork();
        int pid = nativeForkAndSpecialize(
                  uid, gid, gids, debugFlags, rlimits, mountExternal, seInfo, niceName, fdsToClose,
                  instructionSet, appDataDir);
        // Enable tracing as soon as possible for the child process.
        if (pid == 0) {
            Trace.setTracingEnabled(true);

            // Note that this event ends at the end of handleChildProc,
            Trace.traceBegin(Trace.TRACE_TAG_ACTIVITY_MANAGER, "PostFork");
        }
        VM_HOOKS.postForkCommon();
        return pid;
!!!83054903.java!!!	forkSystemServer(in uid : int, in gid : int, inout gids : int [[]], in debugFlags : int, inout rlimits : int [[][]], in permittedCapabilities : long, in effectiveCapabilities : long) : int
        VM_HOOKS.preFork();
        int pid = nativeForkSystemServer(
                uid, gid, gids, debugFlags, rlimits, permittedCapabilities, effectiveCapabilities);
        // Enable tracing as soon as we enter the system_server.
        if (pid == 0) {
            Trace.setTracingEnabled(true);
        }
        VM_HOOKS.postForkCommon();
        return pid;
!!!83055287.java!!!	callPostForkChildHooks(in debugFlags : int, inout isSystemServer : boolean, inout instructionSet : String) : void
        VM_HOOKS.postForkChild(debugFlags, isSystemServer, instructionSet);
!!!83055415.java!!!	execShell(inout command : String) : void
        String[] args = { "/system/bin/sh", "-c", command };
        try {
            Os.execv(args[0], args);
        } catch (ErrnoException e) {
            throw new RuntimeException(e);
        }
!!!83055543.java!!!	appendQuotedShellArgs(inout command : StringBuilder, inout args : String [[]]) : void
        for (String arg : args) {
            command.append(" '").append(arg.replace("'", "'\\''")).append("'");
        }
