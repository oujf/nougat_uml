class Stub
!!!83149367.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!83149495.java!!!	asInterface(inout obj : IBinder) : ITextServicesManager
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof com.android.internal.textservice.ITextServicesManager))) {
return ((com.android.internal.textservice.ITextServicesManager)iin);
}
return new com.android.internal.textservice.ITextServicesManager.Stub.Proxy(obj);
!!!83149623.java!!!	asBinder() : IBinder
return this;
!!!83149751.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_getCurrentSpellChecker:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.view.textservice.SpellCheckerInfo _result = this.getCurrentSpellChecker(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getCurrentSpellCheckerSubtype:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _arg1;
_arg1 = (0!=data.readInt());
android.view.textservice.SpellCheckerSubtype _result = this.getCurrentSpellCheckerSubtype(_arg0, _arg1);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getSpellCheckerService:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
com.android.internal.textservice.ITextServicesSessionListener _arg2;
_arg2 = com.android.internal.textservice.ITextServicesSessionListener.Stub.asInterface(data.readStrongBinder());
com.android.internal.textservice.ISpellCheckerSessionListener _arg3;
_arg3 = com.android.internal.textservice.ISpellCheckerSessionListener.Stub.asInterface(data.readStrongBinder());
android.os.Bundle _arg4;
if ((0!=data.readInt())) {
_arg4 = android.os.Bundle.CREATOR.createFromParcel(data);
}
else {
_arg4 = null;
}
this.getSpellCheckerService(_arg0, _arg1, _arg2, _arg3, _arg4);
return true;
}
case TRANSACTION_finishSpellCheckerService:
{
data.enforceInterface(DESCRIPTOR);
com.android.internal.textservice.ISpellCheckerSessionListener _arg0;
_arg0 = com.android.internal.textservice.ISpellCheckerSessionListener.Stub.asInterface(data.readStrongBinder());
this.finishSpellCheckerService(_arg0);
return true;
}
case TRANSACTION_setCurrentSpellChecker:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
this.setCurrentSpellChecker(_arg0, _arg1);
return true;
}
case TRANSACTION_setCurrentSpellCheckerSubtype:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
this.setCurrentSpellCheckerSubtype(_arg0, _arg1);
return true;
}
case TRANSACTION_setSpellCheckerEnabled:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.setSpellCheckerEnabled(_arg0);
return true;
}
case TRANSACTION_isSpellCheckerEnabled:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.isSpellCheckerEnabled();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_getEnabledSpellCheckers:
{
data.enforceInterface(DESCRIPTOR);
android.view.textservice.SpellCheckerInfo[] _result = this.getEnabledSpellCheckers();
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
}
return super.onTransact(code, data, reply, flags);
