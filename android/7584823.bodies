class Stub
!!!83249591.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!83249719.java!!!	asInterface(inout obj : IBinder) : IInputContext
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof com.android.internal.view.IInputContext))) {
return ((com.android.internal.view.IInputContext)iin);
}
return new com.android.internal.view.IInputContext.Stub.Proxy(obj);
!!!83249847.java!!!	asBinder() : IBinder
return this;
!!!83249975.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_getTextBeforeCursor:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
int _arg2;
_arg2 = data.readInt();
com.android.internal.view.IInputContextCallback _arg3;
_arg3 = com.android.internal.view.IInputContextCallback.Stub.asInterface(data.readStrongBinder());
this.getTextBeforeCursor(_arg0, _arg1, _arg2, _arg3);
return true;
}
case TRANSACTION_getTextAfterCursor:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
int _arg2;
_arg2 = data.readInt();
com.android.internal.view.IInputContextCallback _arg3;
_arg3 = com.android.internal.view.IInputContextCallback.Stub.asInterface(data.readStrongBinder());
this.getTextAfterCursor(_arg0, _arg1, _arg2, _arg3);
return true;
}
case TRANSACTION_getCursorCapsMode:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
com.android.internal.view.IInputContextCallback _arg2;
_arg2 = com.android.internal.view.IInputContextCallback.Stub.asInterface(data.readStrongBinder());
this.getCursorCapsMode(_arg0, _arg1, _arg2);
return true;
}
case TRANSACTION_getExtractedText:
{
data.enforceInterface(DESCRIPTOR);
android.view.inputmethod.ExtractedTextRequest _arg0;
if ((0!=data.readInt())) {
_arg0 = android.view.inputmethod.ExtractedTextRequest.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
int _arg1;
_arg1 = data.readInt();
int _arg2;
_arg2 = data.readInt();
com.android.internal.view.IInputContextCallback _arg3;
_arg3 = com.android.internal.view.IInputContextCallback.Stub.asInterface(data.readStrongBinder());
this.getExtractedText(_arg0, _arg1, _arg2, _arg3);
return true;
}
case TRANSACTION_deleteSurroundingText:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
this.deleteSurroundingText(_arg0, _arg1);
return true;
}
case TRANSACTION_deleteSurroundingTextInCodePoints:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
this.deleteSurroundingTextInCodePoints(_arg0, _arg1);
return true;
}
case TRANSACTION_setComposingText:
{
data.enforceInterface(DESCRIPTOR);
java.lang.CharSequence _arg0;
if ((0!=data.readInt())) {
_arg0 = android.text.TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
int _arg1;
_arg1 = data.readInt();
this.setComposingText(_arg0, _arg1);
return true;
}
case TRANSACTION_finishComposingText:
{
data.enforceInterface(DESCRIPTOR);
this.finishComposingText();
return true;
}
case TRANSACTION_commitText:
{
data.enforceInterface(DESCRIPTOR);
java.lang.CharSequence _arg0;
if ((0!=data.readInt())) {
_arg0 = android.text.TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
int _arg1;
_arg1 = data.readInt();
this.commitText(_arg0, _arg1);
return true;
}
case TRANSACTION_commitCompletion:
{
data.enforceInterface(DESCRIPTOR);
android.view.inputmethod.CompletionInfo _arg0;
if ((0!=data.readInt())) {
_arg0 = android.view.inputmethod.CompletionInfo.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.commitCompletion(_arg0);
return true;
}
case TRANSACTION_commitCorrection:
{
data.enforceInterface(DESCRIPTOR);
android.view.inputmethod.CorrectionInfo _arg0;
if ((0!=data.readInt())) {
_arg0 = android.view.inputmethod.CorrectionInfo.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.commitCorrection(_arg0);
return true;
}
case TRANSACTION_setSelection:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
this.setSelection(_arg0, _arg1);
return true;
}
case TRANSACTION_performEditorAction:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.performEditorAction(_arg0);
return true;
}
case TRANSACTION_performContextMenuAction:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.performContextMenuAction(_arg0);
return true;
}
case TRANSACTION_beginBatchEdit:
{
data.enforceInterface(DESCRIPTOR);
this.beginBatchEdit();
return true;
}
case TRANSACTION_endBatchEdit:
{
data.enforceInterface(DESCRIPTOR);
this.endBatchEdit();
return true;
}
case TRANSACTION_reportFullscreenMode:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.reportFullscreenMode(_arg0);
return true;
}
case TRANSACTION_sendKeyEvent:
{
data.enforceInterface(DESCRIPTOR);
android.view.KeyEvent _arg0;
if ((0!=data.readInt())) {
_arg0 = android.view.KeyEvent.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.sendKeyEvent(_arg0);
return true;
}
case TRANSACTION_clearMetaKeyStates:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.clearMetaKeyStates(_arg0);
return true;
}
case TRANSACTION_performPrivateCommand:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.os.Bundle _arg1;
if ((0!=data.readInt())) {
_arg1 = android.os.Bundle.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.performPrivateCommand(_arg0, _arg1);
return true;
}
case TRANSACTION_setComposingRegion:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
this.setComposingRegion(_arg0, _arg1);
return true;
}
case TRANSACTION_getSelectedText:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
com.android.internal.view.IInputContextCallback _arg2;
_arg2 = com.android.internal.view.IInputContextCallback.Stub.asInterface(data.readStrongBinder());
this.getSelectedText(_arg0, _arg1, _arg2);
return true;
}
case TRANSACTION_requestUpdateCursorAnchorInfo:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
com.android.internal.view.IInputContextCallback _arg2;
_arg2 = com.android.internal.view.IInputContextCallback.Stub.asInterface(data.readStrongBinder());
this.requestUpdateCursorAnchorInfo(_arg0, _arg1, _arg2);
return true;
}
case TRANSACTION_commitContent:
{
data.enforceInterface(DESCRIPTOR);
android.view.inputmethod.InputContentInfo _arg0;
if ((0!=data.readInt())) {
_arg0 = android.view.inputmethod.InputContentInfo.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
int _arg1;
_arg1 = data.readInt();
android.os.Bundle _arg2;
if ((0!=data.readInt())) {
_arg2 = android.os.Bundle.CREATOR.createFromParcel(data);
}
else {
_arg2 = null;
}
int _arg3;
_arg3 = data.readInt();
com.android.internal.view.IInputContextCallback _arg4;
_arg4 = com.android.internal.view.IInputContextCallback.Stub.asInterface(data.readStrongBinder());
this.commitContent(_arg0, _arg1, _arg2, _arg3, _arg4);
return true;
}
}
return super.onTransact(code, data, reply, flags);
