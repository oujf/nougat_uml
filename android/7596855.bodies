class ImageFloatingTextView
!!!83435063.java!!!	ImageFloatingTextView(inout context : Context)
        this(context, null);
!!!83435191.java!!!	ImageFloatingTextView(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, 0);
!!!83435319.java!!!	ImageFloatingTextView(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int)
        this(context, attrs, defStyleAttr, 0);
!!!83435447.java!!!	ImageFloatingTextView(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int, in defStyleRes : int)
        super(context, attrs, defStyleAttr, defStyleRes);
!!!83435575.java!!!	makeSingleLayout(in wantWidth : int, inout boring : BoringLayout::Metrics, in ellipsisWidth : int, inout alignment : Layout::Alignment, inout shouldEllipsize : boolean, inout effectiveEllipsize : TextUtils::TruncateAt, inout useSaved : boolean) : Layout
        CharSequence text = getText() == null ? "" : getText();
        StaticLayout.Builder builder = StaticLayout.Builder.obtain(text, 0, text.length(),
                getPaint(), wantWidth)
                .setAlignment(alignment)
                .setTextDirection(getTextDirectionHeuristic())
                .setLineSpacing(getLineSpacingExtra(), getLineSpacingMultiplier())
                .setIncludePad(getIncludeFontPadding())
                .setEllipsize(shouldEllipsize ? effectiveEllipsize : null)
                .setEllipsizedWidth(ellipsisWidth)
                .setBreakStrategy(Layout.BREAK_STRATEGY_HIGH_QUALITY)
                .setHyphenationFrequency(Layout.HYPHENATION_FREQUENCY_FULL);
        // we set the endmargin on the requested number of lines.
        int endMargin = getContext().getResources().getDimensionPixelSize(
                R.dimen.notification_content_picture_margin);
        int[] margins = null;
        if (mIndentLines > 0) {
            margins = new int[mIndentLines + 1];
            for (int i = 0; i < mIndentLines; i++) {
                margins[i] = endMargin;
            }
        }
        if (getLayoutDirection() == LAYOUT_DIRECTION_RTL) {
            builder.setIndents(margins, null);
        } else {
            builder.setIndents(null, margins);
        }

        return builder.build();
!!!83435703.java!!!	setHasImage(inout hasImage : boolean) : void
        setNumIndentLines(hasImage ? 2 : 0);
!!!83435831.java!!!	setNumIndentLines(in lines : int) : boolean
        if (mIndentLines != lines) {
            mIndentLines = lines;
            // Invalidate layout.
            setHint(getHint());
            return true;
        }
        return false;
