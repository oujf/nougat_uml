class NetlinkTracker
!!!83554487.java!!!	NetlinkTracker(inout iface : String, inout callback : NetlinkTracker::Callback)
        TAG = "NetlinkTracker/" + iface;
        mInterfaceName = iface;
        mCallback = callback;
        mLinkProperties = new LinkProperties();
        mLinkProperties.setInterfaceName(mInterfaceName);
        mDnsServerRepository = new DnsServerRepository();
!!!83554615.java!!!	maybeLog(inout operation : String, inout iface : String, inout address : LinkAddress) : void
        if (DBG) {
            Log.d(TAG, operation + ": " + address + " on " + iface +
                    " flags " + address.getFlags() + " scope " + address.getScope());
        }
!!!83554743.java!!!	maybeLog(inout operation : String, inout o : Object) : void
        if (DBG) {
            Log.d(TAG, operation + ": " + o.toString());
        }
!!!83554871.java!!!	interfaceRemoved(inout iface : String) : void
        maybeLog("interfaceRemoved", iface);
        if (mInterfaceName.equals(iface)) {
            // Our interface was removed. Clear our LinkProperties and tell our owner that they are
            // now empty. Note that from the moment that the interface is removed, any further
            // interface-specific messages (e.g., RTM_DELADDR) will not reach us, because the netd
            // code that parses them will not be able to resolve the ifindex to an interface name.
            clearLinkProperties();
            mCallback.update();
        }
!!!83554999.java!!!	addressUpdated(inout iface : String, inout address : LinkAddress) : void
        if (mInterfaceName.equals(iface)) {
            maybeLog("addressUpdated", iface, address);
            boolean changed;
            synchronized (this) {
                changed = mLinkProperties.addLinkAddress(address);
            }
            if (changed) {
                mCallback.update();
            }
        }
!!!83555127.java!!!	addressRemoved(inout iface : String, inout address : LinkAddress) : void
        if (mInterfaceName.equals(iface)) {
            maybeLog("addressRemoved", iface, address);
            boolean changed;
            synchronized (this) {
                changed = mLinkProperties.removeLinkAddress(address);
            }
            if (changed) {
                mCallback.update();
            }
        }
!!!83555255.java!!!	routeUpdated(inout route : RouteInfo) : void
        if (mInterfaceName.equals(route.getInterface())) {
            maybeLog("routeUpdated", route);
            boolean changed;
            synchronized (this) {
                changed = mLinkProperties.addRoute(route);
            }
            if (changed) {
                mCallback.update();
            }
        }
!!!83555383.java!!!	routeRemoved(inout route : RouteInfo) : void
        if (mInterfaceName.equals(route.getInterface())) {
            maybeLog("routeRemoved", route);
            boolean changed;
            synchronized (this) {
                changed = mLinkProperties.removeRoute(route);
            }
            if (changed) {
                mCallback.update();
            }
        }
!!!83555511.java!!!	interfaceDnsServerInfo(inout iface : String, in lifetime : long, inout addresses : String [[]]) : void
        if (mInterfaceName.equals(iface)) {
            maybeLog("interfaceDnsServerInfo", Arrays.toString(addresses));
            boolean changed = mDnsServerRepository.addServers(lifetime, addresses);
            if (changed) {
                synchronized (this) {
                    mDnsServerRepository.setDnsServersOn(mLinkProperties);
                }
                mCallback.update();
            }
        }
!!!83555639.java!!!	getLinkProperties() : LinkProperties
        return new LinkProperties(mLinkProperties);
!!!83555767.java!!!	clearLinkProperties() : void
        // Clear the repository before clearing mLinkProperties. That way, if a clear() happens
        // while interfaceDnsServerInfo() is being called, we'll end up with no DNS servers in
        // mLinkProperties, as desired.
        mDnsServerRepository = new DnsServerRepository();
        mLinkProperties.clear();
        mLinkProperties.setInterfaceName(mInterfaceName);
