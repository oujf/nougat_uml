class Stub
!!!83629751.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!83629879.java!!!	asInterface(inout obj : IBinder) : IMidiManager
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.media.midi.IMidiManager))) {
return ((android.media.midi.IMidiManager)iin);
}
return new android.media.midi.IMidiManager.Stub.Proxy(obj);
!!!83630007.java!!!	asBinder() : IBinder
return this;
!!!83630135.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_getDevices:
{
data.enforceInterface(DESCRIPTOR);
android.media.midi.MidiDeviceInfo[] _result = this.getDevices();
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_registerListener:
{
data.enforceInterface(DESCRIPTOR);
android.os.IBinder _arg0;
_arg0 = data.readStrongBinder();
android.media.midi.IMidiDeviceListener _arg1;
_arg1 = android.media.midi.IMidiDeviceListener.Stub.asInterface(data.readStrongBinder());
this.registerListener(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_unregisterListener:
{
data.enforceInterface(DESCRIPTOR);
android.os.IBinder _arg0;
_arg0 = data.readStrongBinder();
android.media.midi.IMidiDeviceListener _arg1;
_arg1 = android.media.midi.IMidiDeviceListener.Stub.asInterface(data.readStrongBinder());
this.unregisterListener(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_openDevice:
{
data.enforceInterface(DESCRIPTOR);
android.os.IBinder _arg0;
_arg0 = data.readStrongBinder();
android.media.midi.MidiDeviceInfo _arg1;
if ((0!=data.readInt())) {
_arg1 = android.media.midi.MidiDeviceInfo.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
android.media.midi.IMidiDeviceOpenCallback _arg2;
_arg2 = android.media.midi.IMidiDeviceOpenCallback.Stub.asInterface(data.readStrongBinder());
this.openDevice(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_openBluetoothDevice:
{
data.enforceInterface(DESCRIPTOR);
android.os.IBinder _arg0;
_arg0 = data.readStrongBinder();
android.bluetooth.BluetoothDevice _arg1;
if ((0!=data.readInt())) {
_arg1 = android.bluetooth.BluetoothDevice.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
android.media.midi.IMidiDeviceOpenCallback _arg2;
_arg2 = android.media.midi.IMidiDeviceOpenCallback.Stub.asInterface(data.readStrongBinder());
this.openBluetoothDevice(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_closeDevice:
{
data.enforceInterface(DESCRIPTOR);
android.os.IBinder _arg0;
_arg0 = data.readStrongBinder();
android.os.IBinder _arg1;
_arg1 = data.readStrongBinder();
this.closeDevice(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_registerDeviceServer:
{
data.enforceInterface(DESCRIPTOR);
android.media.midi.IMidiDeviceServer _arg0;
_arg0 = android.media.midi.IMidiDeviceServer.Stub.asInterface(data.readStrongBinder());
int _arg1;
_arg1 = data.readInt();
int _arg2;
_arg2 = data.readInt();
java.lang.String[] _arg3;
_arg3 = data.createStringArray();
java.lang.String[] _arg4;
_arg4 = data.createStringArray();
android.os.Bundle _arg5;
if ((0!=data.readInt())) {
_arg5 = android.os.Bundle.CREATOR.createFromParcel(data);
}
else {
_arg5 = null;
}
int _arg6;
_arg6 = data.readInt();
android.media.midi.MidiDeviceInfo _result = this.registerDeviceServer(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_unregisterDeviceServer:
{
data.enforceInterface(DESCRIPTOR);
android.media.midi.IMidiDeviceServer _arg0;
_arg0 = android.media.midi.IMidiDeviceServer.Stub.asInterface(data.readStrongBinder());
this.unregisterDeviceServer(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_getServiceDeviceInfo:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
android.media.midi.MidiDeviceInfo _result = this.getServiceDeviceInfo(_arg0, _arg1);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getDeviceStatus:
{
data.enforceInterface(DESCRIPTOR);
android.media.midi.MidiDeviceInfo _arg0;
if ((0!=data.readInt())) {
_arg0 = android.media.midi.MidiDeviceInfo.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
android.media.midi.MidiDeviceStatus _result = this.getDeviceStatus(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_setDeviceStatus:
{
data.enforceInterface(DESCRIPTOR);
android.media.midi.IMidiDeviceServer _arg0;
_arg0 = android.media.midi.IMidiDeviceServer.Stub.asInterface(data.readStrongBinder());
android.media.midi.MidiDeviceStatus _arg1;
if ((0!=data.readInt())) {
_arg1 = android.media.midi.MidiDeviceStatus.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.setDeviceStatus(_arg0, _arg1);
reply.writeNoException();
return true;
}
}
return super.onTransact(code, data, reply, flags);
