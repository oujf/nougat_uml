class Stub
!!!83664695.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!83664823.java!!!	asInterface(inout obj : IBinder) : ISessionControllerCallback
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.media.session.ISessionControllerCallback))) {
return ((android.media.session.ISessionControllerCallback)iin);
}
return new android.media.session.ISessionControllerCallback.Stub.Proxy(obj);
!!!83664951.java!!!	asBinder() : IBinder
return this;
!!!83665079.java!!!	onTransact(in code : int, inout data : Parcel, inout reply : Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_onEvent:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.os.Bundle _arg1;
if ((0!=data.readInt())) {
_arg1 = android.os.Bundle.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.onEvent(_arg0, _arg1);
return true;
}
case TRANSACTION_onSessionDestroyed:
{
data.enforceInterface(DESCRIPTOR);
this.onSessionDestroyed();
return true;
}
case TRANSACTION_onPlaybackStateChanged:
{
data.enforceInterface(DESCRIPTOR);
android.media.session.PlaybackState _arg0;
if ((0!=data.readInt())) {
_arg0 = android.media.session.PlaybackState.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.onPlaybackStateChanged(_arg0);
return true;
}
case TRANSACTION_onMetadataChanged:
{
data.enforceInterface(DESCRIPTOR);
android.media.MediaMetadata _arg0;
if ((0!=data.readInt())) {
_arg0 = android.media.MediaMetadata.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.onMetadataChanged(_arg0);
return true;
}
case TRANSACTION_onQueueChanged:
{
data.enforceInterface(DESCRIPTOR);
android.content.pm.ParceledListSlice _arg0;
if ((0!=data.readInt())) {
_arg0 = android.content.pm.ParceledListSlice.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.onQueueChanged(_arg0);
return true;
}
case TRANSACTION_onQueueTitleChanged:
{
data.enforceInterface(DESCRIPTOR);
java.lang.CharSequence _arg0;
if ((0!=data.readInt())) {
_arg0 = android.text.TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.onQueueTitleChanged(_arg0);
return true;
}
case TRANSACTION_onExtrasChanged:
{
data.enforceInterface(DESCRIPTOR);
android.os.Bundle _arg0;
if ((0!=data.readInt())) {
_arg0 = android.os.Bundle.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.onExtrasChanged(_arg0);
return true;
}
case TRANSACTION_onVolumeInfoChanged:
{
data.enforceInterface(DESCRIPTOR);
android.media.session.ParcelableVolumeInfo _arg0;
if ((0!=data.readInt())) {
_arg0 = android.media.session.ParcelableVolumeInfo.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.onVolumeInfoChanged(_arg0);
return true;
}
}
return super.onTransact(code, data, reply, flags);
