class Proxy
!!!83679671.java!!!	Proxy(inout remote : IBinder)
mRemote = remote;
!!!83679799.java!!!	asBinder() : IBinder
return mRemote;
!!!83679927.java!!!	getInterfaceDescriptor() : String
return DESCRIPTOR;
!!!83680055.java!!!	getTvInputList(in userId : int) : TvInputInfo
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.media.tv.TvInputInfo> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_getTvInputList, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.media.tv.TvInputInfo.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83680183.java!!!	getTvInputInfo(inout inputId : String, in userId : int) : TvInputInfo
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.media.tv.TvInputInfo _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(inputId);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_getTvInputInfo, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.media.tv.TvInputInfo.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83680311.java!!!	updateTvInputInfo(inout inputInfo : TvInputInfo, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((inputInfo!=null)) {
_data.writeInt(1);
inputInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_updateTvInputInfo, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83680439.java!!!	getTvInputState(inout inputId : String, in userId : int) : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(inputId);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_getTvInputState, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83680567.java!!!	getTvContentRatingSystemList(in userId : int) : TvContentRatingSystemInfo
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.media.tv.TvContentRatingSystemInfo> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_getTvContentRatingSystemList, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.media.tv.TvContentRatingSystemInfo.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83680695.java!!!	registerCallback(inout callback : ITvInputManagerCallback, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_registerCallback, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83680823.java!!!	unregisterCallback(inout callback : ITvInputManagerCallback, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_unregisterCallback, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83680951.java!!!	isParentalControlsEnabled(in userId : int) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_isParentalControlsEnabled, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83681079.java!!!	setParentalControlsEnabled(inout enabled : boolean, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(((enabled)?(1):(0)));
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_setParentalControlsEnabled, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83681207.java!!!	isRatingBlocked(inout rating : String, in userId : int) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(rating);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_isRatingBlocked, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83681335.java!!!	getBlockedRatings(in userId : int) : String
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<java.lang.String> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_getBlockedRatings, _data, _reply, 0);
_reply.readException();
_result = _reply.createStringArrayList();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83681463.java!!!	addBlockedRating(inout rating : String, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(rating);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_addBlockedRating, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83681591.java!!!	removeBlockedRating(inout rating : String, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(rating);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_removeBlockedRating, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83681719.java!!!	createSession(inout client : ITvInputClient, inout inputId : String, inout isRecordingSession : boolean, in seq : int, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((client!=null))?(client.asBinder()):(null)));
_data.writeString(inputId);
_data.writeInt(((isRecordingSession)?(1):(0)));
_data.writeInt(seq);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_createSession, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83681847.java!!!	releaseSession(inout sessionToken : IBinder, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_releaseSession, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83681975.java!!!	setMainSession(inout sessionToken : IBinder, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_setMainSession, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83682103.java!!!	setSurface(inout sessionToken : IBinder, inout surface : Surface, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
if ((surface!=null)) {
_data.writeInt(1);
surface.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_setSurface, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83682231.java!!!	dispatchSurfaceChanged(inout sessionToken : IBinder, in format : int, in width : int, in height : int, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeInt(format);
_data.writeInt(width);
_data.writeInt(height);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_dispatchSurfaceChanged, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83682359.java!!!	setVolume(inout sessionToken : IBinder, in volume : float, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeFloat(volume);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_setVolume, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83682487.java!!!	tune(inout sessionToken : IBinder, inout channelUri : Uri, inout params : Bundle, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
if ((channelUri!=null)) {
_data.writeInt(1);
channelUri.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((params!=null)) {
_data.writeInt(1);
params.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_tune, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83682615.java!!!	setCaptionEnabled(inout sessionToken : IBinder, inout enabled : boolean, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeInt(((enabled)?(1):(0)));
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_setCaptionEnabled, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83682743.java!!!	selectTrack(inout sessionToken : IBinder, in type : int, inout trackId : String, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeInt(type);
_data.writeString(trackId);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_selectTrack, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83682871.java!!!	sendAppPrivateCommand(inout sessionToken : IBinder, inout action : String, inout data : Bundle, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeString(action);
if ((data!=null)) {
_data.writeInt(1);
data.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_sendAppPrivateCommand, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83682999.java!!!	createOverlayView(inout sessionToken : IBinder, inout windowToken : IBinder, inout frame : Rect, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeStrongBinder(windowToken);
if ((frame!=null)) {
_data.writeInt(1);
frame.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_createOverlayView, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83683127.java!!!	relayoutOverlayView(inout sessionToken : IBinder, inout frame : Rect, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
if ((frame!=null)) {
_data.writeInt(1);
frame.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_relayoutOverlayView, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83683255.java!!!	removeOverlayView(inout sessionToken : IBinder, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_removeOverlayView, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83683383.java!!!	unblockContent(inout sessionToken : IBinder, inout unblockedRating : String, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeString(unblockedRating);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_unblockContent, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83683511.java!!!	timeShiftPlay(inout sessionToken : IBinder, inout recordedProgramUri : Uri, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
if ((recordedProgramUri!=null)) {
_data.writeInt(1);
recordedProgramUri.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_timeShiftPlay, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83683639.java!!!	timeShiftPause(inout sessionToken : IBinder, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_timeShiftPause, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83683767.java!!!	timeShiftResume(inout sessionToken : IBinder, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_timeShiftResume, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83683895.java!!!	timeShiftSeekTo(inout sessionToken : IBinder, in timeMs : long, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeLong(timeMs);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_timeShiftSeekTo, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83684023.java!!!	timeShiftSetPlaybackParams(inout sessionToken : IBinder, inout params : PlaybackParams, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
if ((params!=null)) {
_data.writeInt(1);
params.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_timeShiftSetPlaybackParams, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83684151.java!!!	timeShiftEnablePositionTracking(inout sessionToken : IBinder, inout enable : boolean, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeInt(((enable)?(1):(0)));
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_timeShiftEnablePositionTracking, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83684279.java!!!	startRecording(inout sessionToken : IBinder, inout programUri : Uri, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
if ((programUri!=null)) {
_data.writeInt(1);
programUri.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_startRecording, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83684407.java!!!	stopRecording(inout sessionToken : IBinder, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(sessionToken);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_stopRecording, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83684535.java!!!	getHardwareList() : TvInputHardwareInfo
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.media.tv.TvInputHardwareInfo> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getHardwareList, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.media.tv.TvInputHardwareInfo.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83684663.java!!!	acquireTvInputHardware(in deviceId : int, inout callback : ITvInputHardwareCallback, inout info : TvInputInfo, in userId : int) : ITvInputHardware
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.media.tv.ITvInputHardware _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(deviceId);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
if ((info!=null)) {
_data.writeInt(1);
info.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_acquireTvInputHardware, _data, _reply, 0);
_reply.readException();
_result = android.media.tv.ITvInputHardware.Stub.asInterface(_reply.readStrongBinder());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83684791.java!!!	releaseTvInputHardware(in deviceId : int, inout hardware : ITvInputHardware, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(deviceId);
_data.writeStrongBinder((((hardware!=null))?(hardware.asBinder()):(null)));
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_releaseTvInputHardware, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!83684919.java!!!	getAvailableTvStreamConfigList(inout inputId : String, in userId : int) : TvStreamConfig
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.media.tv.TvStreamConfig> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(inputId);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_getAvailableTvStreamConfigList, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.media.tv.TvStreamConfig.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83685047.java!!!	captureFrame(inout inputId : String, inout surface : Surface, inout config : TvStreamConfig, in userId : int) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(inputId);
if ((surface!=null)) {
_data.writeInt(1);
surface.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((config!=null)) {
_data.writeInt(1);
config.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_captureFrame, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83685175.java!!!	isSingleSessionActive(in userId : int) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_isSingleSessionActive, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83685303.java!!!	getDvbDeviceList() : DvbDeviceInfo
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.media.tv.DvbDeviceInfo> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getDvbDeviceList, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.media.tv.DvbDeviceInfo.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!83685431.java!!!	openDvbDevice(inout info : DvbDeviceInfo, in device : int) : ParcelFileDescriptor
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.os.ParcelFileDescriptor _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((info!=null)) {
_data.writeInt(1);
info.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(device);
mRemote.transact(Stub.TRANSACTION_openDvbDevice, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.os.ParcelFileDescriptor.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
