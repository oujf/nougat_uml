class Proxy
!!!83716919.java!!!	Proxy(inout remote : IBinder)
mRemote = remote;
!!!83717047.java!!!	asBinder() : IBinder
return mRemote;
!!!83717175.java!!!	getInterfaceDescriptor() : String
return DESCRIPTOR;
!!!83717303.java!!!	onConnect(inout root : String, inout session : MediaSession::Token, inout extras : Bundle) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(root);
if ((session!=null)) {
_data.writeInt(1);
session.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((extras!=null)) {
_data.writeInt(1);
extras.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_onConnect, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!83717431.java!!!	onConnectFailed() : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_onConnectFailed, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!83717559.java!!!	onLoadChildren(inout mediaId : String, inout list : ParceledListSlice) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(mediaId);
if ((list!=null)) {
_data.writeInt(1);
list.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_onLoadChildren, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!83717687.java!!!	onLoadChildrenWithOptions(inout mediaId : String, inout list : ParceledListSlice, inout options : Bundle) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(mediaId);
if ((list!=null)) {
_data.writeInt(1);
list.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((options!=null)) {
_data.writeInt(1);
options.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_onLoadChildrenWithOptions, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
