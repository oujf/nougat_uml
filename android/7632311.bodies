class MidiBtleTimeTracker
!!!83729847.java!!!	MidiBtleTimeTracker(in now : long)
        mPeripheralTimeMillis = 0;
        mBaseHostTimeNanos = now;
        mPreviousNow = now;
!!!83729975.java!!!	convertTimestampToNanotime(in timestamp : int, in now : long) : long
        long deltaMillis = timestamp - mPreviousTimestamp;
        // will be negative when timestamp wraps
        if (deltaMillis < 0) {
            deltaMillis += RANGE_MILLIS;
        }
        mPeripheralTimeMillis += deltaMillis;

        // If we have not been called for a long time then
        // make sure we have not wrapped multiple times.
        if ((now - mPreviousNow) > (RANGE_NANOS / 2)) {
            // Handle missed wraps.
            long minimumTimeNanos = (now - mBaseHostTimeNanos)
                    - (RANGE_NANOS / 2);
            long minimumTimeMillis = minimumTimeNanos / NANOS_PER_MILLI;
            while (mPeripheralTimeMillis < minimumTimeMillis) {
                mPeripheralTimeMillis += RANGE_MILLIS;
            }
        }

        // Convert peripheral time millis to host time nanos.
        long timestampHostNanos = (mPeripheralTimeMillis * NANOS_PER_MILLI)
                + mBaseHostTimeNanos;

        // The event cannot be in the future. So move window if we hit that.
        if (timestampHostNanos > now) {
            mPeripheralTimeMillis = 0;
            mBaseHostTimeNanos = now;
            timestampHostNanos = now;
        } else {
            // Timestamp should not be older than our window time.
            long windowBottom = now - mWindowNanos;
            if (timestampHostNanos < windowBottom) {
                mPeripheralTimeMillis = 0;
                mBaseHostTimeNanos = windowBottom;
                timestampHostNanos = windowBottom;
            }
        }
        // prevent retrograde timestamp
        if (timestampHostNanos < mPreviousResult) {
            timestampHostNanos = mPreviousResult;
        }
        mPreviousResult = timestampHostNanos;
        mPreviousTimestamp = timestamp;
        mPreviousNow = now;
        return timestampHostNanos;
!!!83730103.java!!!	getWindowMillis() : int
        return mWindowMillis;
!!!83730231.java!!!	setWindowMillis(in window : int) : void
        this.mWindowMillis = window;
