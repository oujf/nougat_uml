class VideoDumpView
!!!83762871.java!!!	VideoDumpView(inout context : Context)
        super(context);
        setEGLContextClientVersion(2);
        // GLSurfaceView uses RGB_5_6_5 by default.
        if (VideoDumpConfig.SET_CHOOSER) {
            setEGLConfigChooser(8, 8, 8, 8, 8, 8);
        }
        mRenderer = new VideoDumpRenderer(context);
        setRenderer(mRenderer);
!!!83762999.java!!!	onPause() : void
        stopPlayback();
        super.onPause();
!!!83763127.java!!!	onResume() : void
        Log.d(TAG, "onResume");

        mMediaPlayer = new MediaPlayer();
        try {
            mMediaPlayer.setDataSource(VideoDumpConfig.VIDEO_URI);

            class RGBFilter implements FilenameFilter {
                public boolean accept(File dir, String name) {
                    return (name.endsWith(VideoDumpConfig.IMAGE_SUFFIX));
                }
            }
            File dump_dir = new File(VideoDumpConfig.ROOT_DIR);
            File[] dump_files = dump_dir.listFiles(new RGBFilter());
            for (File dump_file :dump_files) {
                dump_file.delete();
            }

            File image_list = new File(VideoDumpConfig.ROOT_DIR
                                       + VideoDumpConfig.IMAGES_LIST);
            image_list.delete();
            mImageListWriter = new BufferedWriter(new FileWriter(image_list));
        } catch (java.io.IOException e) {
            Log.e(TAG, e.getMessage(), e);
        }

        queueEvent(new Runnable(){
                public void run() {
                    mRenderer.setMediaPlayer(mMediaPlayer);
                    mRenderer.setImageListWriter(mImageListWriter);
                }});

        super.onResume();
!!!83763255.java!!!	start() : void
        mMediaPlayer.start();
!!!83763383.java!!!	pause() : void
        mMediaPlayer.pause();
        try {
            mImageListWriter.flush();
        } catch (java.io.IOException e) {
            Log.e(TAG, e.getMessage(), e);
        }
!!!83763511.java!!!	stopPlayback() : void
        Log.d(TAG, "stopPlayback");

        if (mMediaPlayer != null) {
            mMediaPlayer.stop();
            mMediaPlayer.release();
            mMediaPlayer = null;
        }
        if (mImageListWriter != null) {
            try {
                mImageListWriter.flush();
                mImageListWriter.close();
            } catch (java.io.IOException e) {
                Log.e(TAG, e.getMessage(), e);
            }
        } else {
            Log.d(TAG, "image list file was not written successfully.");
        }
!!!83763639.java!!!	setMediaController(inout controller : MediaController) : void
        if (mMediaController != null) {
            mMediaController.hide();
        }
        mMediaController = controller;
!!!83763767.java!!!	attachMediaController() : void
        if (mMediaPlayer != null && mMediaController != null) {
            if (!mMediaControllerAttached) {
                mMediaController.setMediaPlayer(this);
                View anchorView = this.getParent() instanceof View ?
                        (View)this.getParent() : this;
                mMediaController.setAnchorView(anchorView);
                mMediaController.setEnabled(true);
                mMediaControllerAttached = true;
            }
            mMediaController.show();
        }
!!!83763895.java!!!	isInPlaybackState() : boolean
        return (mMediaPlayer != null && mMediaPlayer.isPlaying());
!!!83764023.java!!!	canPause() : boolean
        return true;
!!!83764151.java!!!	canSeekBackward() : boolean
        return true;
!!!83764279.java!!!	canSeekForward() : boolean
        return true;
!!!83764407.java!!!	getBufferPercentage() : int
        return 1;
!!!83764535.java!!!	getCurrentPosition() : int
        if (isInPlaybackState()) {
            return mMediaPlayer.getCurrentPosition();
        }
        return 0;
!!!83764663.java!!!	getDuration() : int
        return mMediaPlayer.getDuration();
!!!83764791.java!!!	isPlaying() : boolean
        return isInPlaybackState() && mMediaPlayer.isPlaying();
!!!83764919.java!!!	seekTo(in pos : int) : void
        mMediaPlayer.seekTo(pos);
!!!83765047.java!!!	getAudioSessionId() : int
        return 0;
!!!83765175.java!!!	onTouchEvent(inout ev : MotionEvent) : boolean
        attachMediaController();
        return true;
