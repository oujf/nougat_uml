class CameraPairwiseTest
!!!83815991.java!!!	CameraPairwiseTest()
        super("com.android.mediaframeworktest", MediaFrameworkTest.class);
!!!83816119.java!!!	setUp() : void
        final Semaphore sem = new Semaphore(0);
        mLooperThread = new Thread() {
            @Override
            public void run() {
                Log.v(TAG, "starting looper");
                Looper.prepare();
                mHandler = new Handler();
                sem.release();
                Looper.loop();
                Log.v(TAG, "quit looper");
            }
        };
        mLooperThread.start();
        if (!sem.tryAcquire(WAIT_TIMEOUT, TimeUnit.MILLISECONDS)) {
            fail("Failed to start the looper.");
        }
        getActivity();
        super.setUp();

        mCameraTestHelper = new CameraTestHelper();
!!!83816247.java!!!	tearDown() : void
        if (mHandler != null) {
            mHandler.getLooper().quit();
            mHandler = null;
        }
        if (mLooperThread != null) {
            mLooperThread.join(WAIT_TIMEOUT);
            if (mLooperThread.isAlive()) {
                fail("Failed to stop the looper.");
            }
            mLooperThread = null;
        }
        super.tearDown();
!!!83816375.java!!!	runOnLooper(in command : Runnable) : void
        final Semaphore sem = new Semaphore(0);
        mHandler.post(new Runnable() {
            @Override
            public void run() {
                try {
                    command.run();
                } finally {
                    sem.release();
                }
            }
        });
        if (!sem.tryAcquire(WAIT_TIMEOUT, TimeUnit.MILLISECONDS)) {
            fail("Failed to run the command on the looper.");
        }
!!!83816503.java!!!	testCameraPairwiseScenario01() : void
        genericPairwiseTestCase(Flash.AUTO, Exposure.NONE, WhiteBalance.DAYLIGHT, SceneMode.SUNSET,
                PictureSize.MEDIUM, Geotagging.OFF);
!!!83816631.java!!!	testCameraPairwiseScenario02() : void
        genericPairwiseTestCase(Flash.ON, Exposure.MIN, WhiteBalance.FLUORESCENT, SceneMode.AUTO,
                PictureSize.LARGE, Geotagging.ON);
!!!83816759.java!!!	testCameraPairwiseScenario03() : void
        genericPairwiseTestCase(Flash.OFF, Exposure.MAX, WhiteBalance.AUTO, SceneMode.NIGHT,
                PictureSize.SMALL, Geotagging.ON);
!!!83816887.java!!!	testCameraPairwiseScenario04() : void
        genericPairwiseTestCase(Flash.OFF, Exposure.MAX, WhiteBalance.CLOUDY, SceneMode.AUTO,
                PictureSize.MEDIUM, Geotagging.OFF);
!!!83817015.java!!!	testCameraPairwiseScenario05() : void
        genericPairwiseTestCase(Flash.AUTO, Exposure.MAX, WhiteBalance.INCANDESCENT,
                SceneMode.AUTO, PictureSize.LARGE, Geotagging.OFF);
!!!83817143.java!!!	testCameraPairwiseScenario06() : void
        genericPairwiseTestCase(Flash.ON, Exposure.NONE, WhiteBalance.CLOUDY, SceneMode.AUTO,
                PictureSize.SMALL, Geotagging.ON);
!!!83817271.java!!!	testCameraPairwiseScenario07() : void
        genericPairwiseTestCase(Flash.AUTO, Exposure.MIN, WhiteBalance.AUTO, SceneMode.ACTION,
                PictureSize.SMALL, Geotagging.ON);
!!!83817399.java!!!	testCameraPairwiseScenario08() : void
        genericPairwiseTestCase(Flash.ON, Exposure.MIN, WhiteBalance.AUTO, SceneMode.ACTION,
                PictureSize.MEDIUM, Geotagging.OFF);
!!!83817527.java!!!	testCameraPairwiseScenario09() : void
        genericPairwiseTestCase(Flash.OFF, Exposure.MIN, WhiteBalance.AUTO, SceneMode.NIGHT,
                PictureSize.LARGE, Geotagging.OFF);
!!!83817655.java!!!	testCameraPairwiseScenario10() : void
        genericPairwiseTestCase(Flash.OFF, Exposure.MIN, WhiteBalance.DAYLIGHT, SceneMode.SUNSET,
                PictureSize.SMALL, Geotagging.OFF);
!!!83817783.java!!!	testCameraPairwiseScenario11() : void
        genericPairwiseTestCase(Flash.ON, Exposure.MAX, WhiteBalance.DAYLIGHT, SceneMode.SUNSET,
                PictureSize.LARGE, Geotagging.ON);
!!!83817911.java!!!	testCameraPairwiseScenario12() : void
        genericPairwiseTestCase(Flash.AUTO, Exposure.MIN, WhiteBalance.CLOUDY, SceneMode.AUTO,
                PictureSize.LARGE, Geotagging.OFF);
!!!83818039.java!!!	testCameraPairwiseScenario13() : void
        genericPairwiseTestCase(Flash.OFF, Exposure.NONE, WhiteBalance.AUTO, SceneMode.PARTY,
                PictureSize.MEDIUM, Geotagging.ON);
!!!83818167.java!!!	testCameraPairwiseScenario14() : void
        genericPairwiseTestCase(Flash.AUTO, Exposure.NONE, WhiteBalance.AUTO, SceneMode.NIGHT,
                PictureSize.SMALL, Geotagging.OFF);
!!!83818295.java!!!	testCameraPairwiseScenario15() : void
        genericPairwiseTestCase(Flash.ON, Exposure.NONE, WhiteBalance.INCANDESCENT, SceneMode.AUTO,
                PictureSize.MEDIUM, Geotagging.ON);
!!!83818423.java!!!	testCameraPairwiseScenario16() : void
        genericPairwiseTestCase(Flash.AUTO, Exposure.MIN, WhiteBalance.AUTO, SceneMode.PARTY,
                PictureSize.SMALL, Geotagging.OFF);
!!!83818551.java!!!	testCameraPairwiseScenario17() : void
        genericPairwiseTestCase(Flash.OFF, Exposure.MIN, WhiteBalance.INCANDESCENT, SceneMode.AUTO,
                PictureSize.SMALL, Geotagging.OFF);
!!!83818679.java!!!	testCameraPairwiseScenario18() : void
        genericPairwiseTestCase(Flash.ON, Exposure.NONE, WhiteBalance.AUTO, SceneMode.PARTY,
                PictureSize.LARGE, Geotagging.OFF);
!!!83818807.java!!!	testCameraPairwiseScenario19() : void
        genericPairwiseTestCase(Flash.OFF, Exposure.NONE, WhiteBalance.AUTO, SceneMode.ACTION,
                PictureSize.LARGE, Geotagging.OFF);
!!!83818935.java!!!	testCameraPairwiseScenario20() : void
        genericPairwiseTestCase(Flash.OFF, Exposure.MAX, WhiteBalance.FLUORESCENT, SceneMode.AUTO,
                PictureSize.MEDIUM, Geotagging.OFF);
!!!83819063.java!!!	testCameraPairwiseScenario21() : void
        genericPairwiseTestCase(Flash.OFF, Exposure.MIN, WhiteBalance.AUTO, SceneMode.AUTO,
                PictureSize.MEDIUM, Geotagging.OFF);
!!!83819191.java!!!	testCameraPairwiseScenario22() : void
        genericPairwiseTestCase(Flash.ON, Exposure.MAX, WhiteBalance.AUTO, SceneMode.ACTION,
                PictureSize.SMALL, Geotagging.OFF);
!!!83819319.java!!!	testCameraPairwiseScenario23() : void
        genericPairwiseTestCase(Flash.ON, Exposure.MAX, WhiteBalance.AUTO, SceneMode.NIGHT,
                PictureSize.MEDIUM, Geotagging.ON);
!!!83819447.java!!!	testCameraPairwiseScenario24() : void
        genericPairwiseTestCase(Flash.AUTO, Exposure.NONE, WhiteBalance.FLUORESCENT,
                SceneMode.AUTO, PictureSize.SMALL, Geotagging.ON);
!!!83819575.java!!!	testCameraPairwiseScenario25() : void
        genericPairwiseTestCase(Flash.AUTO, Exposure.MAX, WhiteBalance.DAYLIGHT, SceneMode.AUTO,
                PictureSize.MEDIUM, Geotagging.OFF);
!!!83819703.java!!!	testCameraPairwiseScenario26() : void
        genericPairwiseTestCase(Flash.AUTO, Exposure.MAX, WhiteBalance.AUTO, SceneMode.PARTY,
                PictureSize.MEDIUM, Geotagging.ON);
!!!83819831.java!!!	genericPairwiseTestCase(inout flash : CameraPairwiseTest::Flash, inout exposure : CameraPairwiseTest::Exposure, inout whitebalance : CameraPairwiseTest::WhiteBalance, inout scenemode : CameraPairwiseTest::SceneMode, inout picturesize : CameraPairwiseTest::PictureSize, inout geotagging : CameraPairwiseTest::Geotagging) : void
        try {
            SurfaceHolder surfaceHolder = MediaFrameworkTest.mSurfaceView.getHolder();
            Camera.Parameters params = mCameraTestHelper.getCameraParameters();

            runOnLooper(new Runnable() {
                @Override
                public void run() {
                    mCameraTestHelper.setupCameraTest();
                }
            });

            // Configure flash setting
            switch (flash) {
                case ON:
                    params.setFlashMode(Camera.Parameters.FLASH_MODE_ON);
                    break;
                case OFF:
                    params.setFlashMode(Camera.Parameters.FLASH_MODE_OFF);
                    break;
                case AUTO:
                    params.setFlashMode(Camera.Parameters.FLASH_MODE_AUTO);
                    break;
            }

            // Configure exposure setting
            switch (exposure) {
                case MIN:
                    params.setExposureCompensation(params.getMinExposureCompensation());
                    break;
                case MAX:
                    params.setExposureCompensation(params.getMaxExposureCompensation());
                    break;
                case NONE:
                    params.setExposureCompensation(0);
                    break;
            }

            // Configure white balance setting
            switch (whitebalance) {
                case DAYLIGHT:
                    params.setWhiteBalance(Camera.Parameters.WHITE_BALANCE_DAYLIGHT);
                    break;
                case FLUORESCENT:
                    params.setWhiteBalance(Camera.Parameters.WHITE_BALANCE_FLUORESCENT);
                    break;
                case INCANDESCENT:
                    params.setWhiteBalance(Camera.Parameters.WHITE_BALANCE_INCANDESCENT);
                    break;
                case CLOUDY:
                    params.setWhiteBalance(Camera.Parameters.WHITE_BALANCE_CLOUDY_DAYLIGHT);
                    break;
                case AUTO:
                    params.setWhiteBalance(Camera.Parameters.WHITE_BALANCE_AUTO);
                    break;
            }

            // Configure scene mode setting
            switch (scenemode) {
                case SUNSET:
                    params.setSceneMode(Camera.Parameters.SCENE_MODE_SUNSET);
                    break;
                case ACTION:
                    params.setSceneMode(Camera.Parameters.SCENE_MODE_ACTION);
                    break;
                case PARTY:
                    params.setSceneMode(Camera.Parameters.SCENE_MODE_PARTY);
                    break;
                case NIGHT:
                    params.setSceneMode(Camera.Parameters.SCENE_MODE_NIGHT);
                    break;
                case AUTO:
                    params.setSceneMode(Camera.Parameters.SCENE_MODE_AUTO);
                    break;
            }

            // Configure picture size setting
            List<Camera.Size> supportedPictureSizes = params.getSupportedPictureSizes();
            int mid = (int) Math.floor(supportedPictureSizes.size() / 2);
            int low = supportedPictureSizes.size() - 1;
            switch (picturesize) {
                case SMALL:
                    params.setPictureSize(supportedPictureSizes.get(low).width,
                            supportedPictureSizes.get(low).height);
                    break;
                case MEDIUM:
                    params.setPictureSize(supportedPictureSizes.get(mid).width,
                            supportedPictureSizes.get(mid).height);
                    break;
                case LARGE:
                    params.setPictureSize(supportedPictureSizes.get(0).width,
                            supportedPictureSizes.get(mid).height);
                    break;
            }

            // Configure geotagging setting
            switch (geotagging) {
                case ON:
                    params.setGpsLatitude(MOCK_LATITUDE);
                    params.setGpsLongitude(MOCK_LONGITUDE);
                    break;
                case OFF:
                    break;
            }

            mCameraTestHelper.setParameters(params);
            mCameraTestHelper.startCameraPreview(surfaceHolder);
            mCameraTestHelper.capturePhoto();
            mCameraTestHelper.cleanupTestImages();
        } catch (Exception e) {
            Log.e(TAG, e.toString());
            fail("Test case failed");
        }
