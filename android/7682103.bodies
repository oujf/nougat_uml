class BinderService
!!!84037303.java!!!	addPowerSaveWhitelistApp(inout name : String) : void
            getContext().enforceCallingOrSelfPermission(android.Manifest.permission.DEVICE_POWER,
                    null);
            long ident = Binder.clearCallingIdentity();
            try {
                addPowerSaveWhitelistAppInternal(name);
            } finally {
                Binder.restoreCallingIdentity(ident);
            }
!!!84037431.java!!!	removePowerSaveWhitelistApp(inout name : String) : void
            getContext().enforceCallingOrSelfPermission(android.Manifest.permission.DEVICE_POWER,
                    null);
            long ident = Binder.clearCallingIdentity();
            try {
                removePowerSaveWhitelistAppInternal(name);
            } finally {
                Binder.restoreCallingIdentity(ident);
            }
!!!84037559.java!!!	getSystemPowerWhitelistExceptIdle() : String
            return getSystemPowerWhitelistExceptIdleInternal();
!!!84037687.java!!!	getSystemPowerWhitelist() : String
            return getSystemPowerWhitelistInternal();
!!!84037815.java!!!	getUserPowerWhitelist() : String
            return getUserPowerWhitelistInternal();
!!!84037943.java!!!	getFullPowerWhitelistExceptIdle() : String
            return getFullPowerWhitelistExceptIdleInternal();
!!!84038071.java!!!	getFullPowerWhitelist() : String
            return getFullPowerWhitelistInternal();
!!!84038199.java!!!	getAppIdWhitelistExceptIdle() : int
            return getAppIdWhitelistExceptIdleInternal();
!!!84038327.java!!!	getAppIdWhitelist() : int
            return getAppIdWhitelistInternal();
!!!84038455.java!!!	getAppIdUserWhitelist() : int
            return getAppIdUserWhitelistInternal();
!!!84038583.java!!!	getAppIdTempWhitelist() : int
            return getAppIdTempWhitelistInternal();
!!!84038711.java!!!	isPowerSaveWhitelistExceptIdleApp(inout name : String) : boolean
            return isPowerSaveWhitelistExceptIdleAppInternal(name);
!!!84038839.java!!!	isPowerSaveWhitelistApp(inout name : String) : boolean
            return isPowerSaveWhitelistAppInternal(name);
!!!84038967.java!!!	addPowerSaveTempWhitelistApp(inout packageName : String, in duration : long, in userId : int, inout reason : String) : void
            addPowerSaveTempWhitelistAppChecked(packageName, duration, userId, reason);
!!!84039095.java!!!	addPowerSaveTempWhitelistAppForMms(inout packageName : String, in userId : int, inout reason : String) : long
            long duration = mConstants.MMS_TEMP_APP_WHITELIST_DURATION;
            addPowerSaveTempWhitelistAppChecked(packageName, duration, userId, reason);
            return duration;
!!!84039223.java!!!	addPowerSaveTempWhitelistAppForSms(inout packageName : String, in userId : int, inout reason : String) : long
            long duration = mConstants.SMS_TEMP_APP_WHITELIST_DURATION;
            addPowerSaveTempWhitelistAppChecked(packageName, duration, userId, reason);
            return duration;
!!!84039351.java!!!	exitIdle(inout reason : String) : void
            getContext().enforceCallingOrSelfPermission(Manifest.permission.DEVICE_POWER,
                    null);
            long ident = Binder.clearCallingIdentity();
            try {
                exitIdleInternal(reason);
            } finally {
                Binder.restoreCallingIdentity(ident);
            }
!!!84039479.java!!!	registerMaintenanceActivityListener(inout listener : IMaintenanceActivityListener) : boolean
            return DeviceIdleController.this.registerMaintenanceActivityListener(listener);
!!!84039607.java!!!	unregisterMaintenanceActivityListener(inout listener : IMaintenanceActivityListener) : void
            DeviceIdleController.this.unregisterMaintenanceActivityListener(listener);
!!!84039735.java!!!	dump(inout fd : FileDescriptor, inout pw : PrintWriter, inout args : String [[]]) : void
            DeviceIdleController.this.dump(fd, pw, args);
!!!84039863.java!!!	onShellCommand(inout in : FileDescriptor, inout out : FileDescriptor, inout err : FileDescriptor, inout args : String [[]], inout resultReceiver : ResultReceiver) : void
            (new Shell()).exec(this, in, out, err, args, resultReceiver);
