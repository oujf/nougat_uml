class BroadcastStats
!!!84464311.java!!!	BroadcastStats()
        mStartRealtime = SystemClock.elapsedRealtime();
        mStartUptime = SystemClock.uptimeMillis();
!!!84464439.java!!!	addBroadcast(inout action : String, inout srcPackage : String, in receiveCount : int, in skipCount : int, in dispatchTime : long) : void
        ActionEntry ae = mActions.get(action);
        if (ae == null) {
            ae = new ActionEntry(action);
            mActions.put(action, ae);
        }
        ae.mReceiveCount += receiveCount;
        ae.mSkipCount += skipCount;
        ae.mTotalDispatchTime += dispatchTime;
        if (ae.mMaxDispatchTime < dispatchTime) {
            ae.mMaxDispatchTime = dispatchTime;
        }
        PackageEntry pe = ae.mPackages.get(srcPackage);
        if (pe == null) {
            pe = new PackageEntry();
            ae.mPackages.put(srcPackage, pe);
        }
        pe.mSendCount++;
!!!84464567.java!!!	dumpStats(inout pw : PrintWriter, inout prefix : String, inout dumpPackage : String) : boolean
        boolean printedSomething = false;
        ArrayList<ActionEntry> actions = new ArrayList<>(mActions.size());
        for (int i=mActions.size()-1; i>=0; i--) {
            actions.add(mActions.valueAt(i));
        }
        Collections.sort(actions, ACTIONS_COMPARATOR);
        for (int i=actions.size()-1; i>=0; i--) {
            ActionEntry ae = actions.get(i);
            if (dumpPackage != null && !ae.mPackages.containsKey(dumpPackage)) {
                continue;
            }
            printedSomething = true;
            pw.print(prefix);
            pw.print(ae.mAction);
            pw.println(":");
            pw.print(prefix);
            pw.print("  Number received: ");
            pw.print(ae.mReceiveCount);
            pw.print(", skipped: ");
            pw.println(ae.mSkipCount);
            pw.print(prefix);
            pw.print("  Total dispatch time: ");
            TimeUtils.formatDuration(ae.mTotalDispatchTime, pw);
            pw.print(", max: ");
            TimeUtils.formatDuration(ae.mMaxDispatchTime, pw);
            pw.println();
            for (int j=ae.mPackages.size()-1; j>=0; j--) {
                pw.print(prefix);
                pw.print("  Package ");
                pw.print(ae.mPackages.keyAt(j));
                pw.print(": ");
                PackageEntry pe = ae.mPackages.valueAt(j);
                pw.print(pe.mSendCount);
                pw.println(" times");
            }
        }
        return printedSomething;
!!!84464695.java!!!	dumpCheckinStats(inout pw : PrintWriter, inout dumpPackage : String) : void
        pw.print("broadcast-stats,1,");
        pw.print(mStartRealtime);
        pw.print(",");
        pw.print(mEndRealtime == 0 ? SystemClock.elapsedRealtime() : mEndRealtime);
        pw.print(",");
        pw.println((mEndUptime == 0 ? SystemClock.uptimeMillis() : mEndUptime) - mStartUptime);
        for (int i=mActions.size()-1; i>=0; i--) {
            ActionEntry ae = mActions.valueAt(i);
            if (dumpPackage != null && !ae.mPackages.containsKey(dumpPackage)) {
                continue;
            }
            pw.print("a,");
            pw.print(mActions.keyAt(i));
            pw.print(",");
            pw.print(ae.mReceiveCount);
            pw.print(",");
            pw.print(ae.mSkipCount);
            pw.print(",");
            pw.print(ae.mTotalDispatchTime);
            pw.print(",");
            pw.print(ae.mMaxDispatchTime);
            pw.println();
            for (int j=ae.mPackages.size()-1; j>=0; j--) {
                pw.print("p,");
                pw.print(ae.mPackages.keyAt(j));
                PackageEntry pe = ae.mPackages.valueAt(j);
                pw.print(",");
                pw.print(pe.mSendCount);
                pw.println();
            }
        }
