class VirtualDisplayAdapter
!!!84712247.java!!!	VirtualDisplayAdapter(inout syncRoot : DisplayManagerService::SyncRoot, inout context : Context, inout handler : Handler, inout listener : DisplayAdapter::Listener)
        super(syncRoot, context, handler, listener, TAG);
        mHandler = handler;
!!!84712375.java!!!	createVirtualDisplayLocked(inout callback : IVirtualDisplayCallback, inout projection : IMediaProjection, in ownerUid : int, inout ownerPackageName : String, inout name : String, in width : int, in height : int, in densityDpi : int, inout surface : Surface, in flags : int) : DisplayDevice
        boolean secure = (flags & DisplayManager.VIRTUAL_DISPLAY_FLAG_SECURE) != 0;
        IBinder appToken = callback.asBinder();
        IBinder displayToken = SurfaceControl.createDisplay(name, secure);
        final String baseUniqueId =
                UNIQUE_ID_PREFIX + ownerPackageName + "," + ownerUid + "," + name + ",";
        final int uniqueIndex = getNextUniqueIndex(baseUniqueId);
        VirtualDisplayDevice device = new VirtualDisplayDevice(displayToken, appToken,
                ownerUid, ownerPackageName, name, width, height, densityDpi, surface, flags,
                new Callback(callback, mHandler), baseUniqueId + uniqueIndex, uniqueIndex);

        mVirtualDisplayDevices.put(appToken, device);

        try {
            if (projection != null) {
                projection.registerCallback(new MediaProjectionCallback(appToken));
            }
            appToken.linkToDeath(device, 0);
        } catch (RemoteException ex) {
            mVirtualDisplayDevices.remove(appToken);
            device.destroyLocked(false);
            return null;
        }

        // Return the display device without actually sending the event indicating
        // that it was added.  The caller will handle it.
        return device;
!!!84712503.java!!!	resizeVirtualDisplayLocked(inout appToken : IBinder, in width : int, in height : int, in densityDpi : int) : void
        VirtualDisplayDevice device = mVirtualDisplayDevices.get(appToken);
        if (device != null) {
            device.resizeLocked(width, height, densityDpi);
        }
!!!84712631.java!!!	setVirtualDisplaySurfaceLocked(inout appToken : IBinder, inout surface : Surface) : void
        VirtualDisplayDevice device = mVirtualDisplayDevices.get(appToken);
        if (device != null) {
            device.setSurfaceLocked(surface);
        }
!!!84712759.java!!!	releaseVirtualDisplayLocked(inout appToken : IBinder) : DisplayDevice
        VirtualDisplayDevice device = mVirtualDisplayDevices.remove(appToken);
        if (device != null) {
            device.destroyLocked(true);
            appToken.unlinkToDeath(device, 0);
        }

        // Return the display device that was removed without actually sending the
        // event indicating that it was removed.  The caller will handle it.
        return device;
!!!84712887.java!!!	getNextUniqueIndex(inout uniqueIdPrefix : String) : int
        if (mVirtualDisplayDevices.isEmpty()) {
            return 0;
        }

        int nextUniqueIndex = 0;
        Iterator<VirtualDisplayDevice> it = mVirtualDisplayDevices.values().iterator();
        while (it.hasNext()) {
            VirtualDisplayDevice device = it.next();
            if (device.getUniqueId().startsWith(uniqueIdPrefix)
                    && device.mUniqueIndex >= nextUniqueIndex) {
                // Increment the next unique index to be greater than ones we have already ran
                // across for displays that have the same unique Id prefix.
                nextUniqueIndex = device.mUniqueIndex + 1;
            }
        }

        return nextUniqueIndex;
!!!84713015.java!!!	handleBinderDiedLocked(inout appToken : IBinder) : void
        VirtualDisplayDevice device = mVirtualDisplayDevices.remove(appToken);
        if (device != null) {
            Slog.i(TAG, "Virtual display device released because application token died: "
                    + device.mOwnerPackageName);
            device.destroyLocked(false);
            sendDisplayDeviceEventLocked(device, DISPLAY_DEVICE_EVENT_REMOVED);
        }
!!!84713143.java!!!	handleMediaProjectionStoppedLocked(inout appToken : IBinder) : void
        VirtualDisplayDevice device = mVirtualDisplayDevices.remove(appToken);
        if (device != null) {
            Slog.i(TAG, "Virtual display device released because media projection stopped: "
                    + device.mName);
            device.stopLocked();
        }
