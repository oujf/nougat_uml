class HdmiCecMessageBuilder
!!!84807095.java!!!	of(in src : int, in dest : int, inout body : byte [[]]) : HdmiCecMessage
        byte opcode = body[0];
        byte params[] = Arrays.copyOfRange(body, 1, body.length);
        return new HdmiCecMessage(src, dest, opcode, params);
!!!84807223.java!!!	buildFeatureAbortCommand(in src : int, in dest : int, in originalOpcode : int, in reason : int) : HdmiCecMessage
        byte[] params = new byte[] {
                (byte) (originalOpcode & 0xFF),
                (byte) (reason & 0xFF),
        };
        return buildCommand(src, dest, Constants.MESSAGE_FEATURE_ABORT, params);
!!!84807351.java!!!	buildGivePhysicalAddress(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_GIVE_PHYSICAL_ADDRESS);
!!!84807479.java!!!	buildGiveOsdNameCommand(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_GIVE_OSD_NAME);
!!!84807607.java!!!	buildGiveDeviceVendorIdCommand(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_GIVE_DEVICE_VENDOR_ID);
!!!84807735.java!!!	buildSetMenuLanguageCommand(in src : int, inout language : String) : HdmiCecMessage
        if (language.length() != 3) {
            return null;
        }
        // Hdmi CEC uses lower-cased ISO 639-2 (3 letters code).
        String normalized = language.toLowerCase();
        byte[] params = new byte[] {
                (byte) (normalized.charAt(0) & 0xFF),
                (byte) (normalized.charAt(1) & 0xFF),
                (byte) (normalized.charAt(2) & 0xFF),
        };
        // <Set Menu Language> is broadcast message.
        return buildCommand(src, Constants.ADDR_BROADCAST,
                Constants.MESSAGE_SET_MENU_LANGUAGE, params);
!!!84807863.java!!!	buildSetOsdNameCommand(in src : int, in dest : int, inout name : String) : HdmiCecMessage
        int length = Math.min(name.length(), OSD_NAME_MAX_LENGTH);
        byte[] params;
        try {
            params = name.substring(0, length).getBytes("US-ASCII");
        } catch (UnsupportedEncodingException e) {
            return null;
        }
        return buildCommand(src, dest, Constants.MESSAGE_SET_OSD_NAME, params);
!!!84807991.java!!!	buildReportPhysicalAddressCommand(in src : int, in address : int, in deviceType : int) : HdmiCecMessage
        byte[] params = new byte[] {
                // Two bytes for physical address
                (byte) ((address >> 8) & 0xFF),
                (byte) (address & 0xFF),
                // One byte device type
                (byte) (deviceType & 0xFF)
        };
        // <Report Physical Address> is broadcast message.
        return buildCommand(src, Constants.ADDR_BROADCAST,
                Constants.MESSAGE_REPORT_PHYSICAL_ADDRESS, params);
!!!84808119.java!!!	buildDeviceVendorIdCommand(in src : int, in vendorId : int) : HdmiCecMessage
        byte[] params = new byte[] {
                (byte) ((vendorId >> 16) & 0xFF),
                (byte) ((vendorId >> 8) & 0xFF),
                (byte) (vendorId & 0xFF)
        };
        // <Device Vendor Id> is broadcast message.
        return buildCommand(src, Constants.ADDR_BROADCAST,
                Constants.MESSAGE_DEVICE_VENDOR_ID, params);
!!!84808247.java!!!	buildCecVersion(in src : int, in dest : int, in version : int) : HdmiCecMessage
        byte[] params = new byte[] {
                (byte) (version & 0xFF)
        };
        return buildCommand(src, dest, Constants.MESSAGE_CEC_VERSION, params);
!!!84808375.java!!!	buildRequestArcInitiation(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_REQUEST_ARC_INITIATION);
!!!84808503.java!!!	buildRequestArcTermination(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_REQUEST_ARC_TERMINATION);
!!!84808631.java!!!	buildReportArcInitiated(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_REPORT_ARC_INITIATED);
!!!84808759.java!!!	buildReportArcTerminated(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_REPORT_ARC_TERMINATED);
!!!84808887.java!!!	buildTextViewOn(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_TEXT_VIEW_ON);
!!!84809015.java!!!	buildActiveSource(in src : int, in physicalAddress : int) : HdmiCecMessage
        return buildCommand(src, Constants.ADDR_BROADCAST, Constants.MESSAGE_ACTIVE_SOURCE,
                physicalAddressToParam(physicalAddress));
!!!84809143.java!!!	buildInactiveSource(in src : int, in physicalAddress : int) : HdmiCecMessage
        return buildCommand(src, Constants.ADDR_TV,
                Constants.MESSAGE_INACTIVE_SOURCE, physicalAddressToParam(physicalAddress));
!!!84809271.java!!!	buildSetStreamPath(in src : int, in streamPath : int) : HdmiCecMessage
        return buildCommand(src, Constants.ADDR_BROADCAST,
                Constants.MESSAGE_SET_STREAM_PATH, physicalAddressToParam(streamPath));
!!!84809399.java!!!	buildRoutingChange(in src : int, in oldPath : int, in newPath : int) : HdmiCecMessage
        byte[] param = new byte[] {
            (byte) ((oldPath >> 8) & 0xFF), (byte) (oldPath & 0xFF),
            (byte) ((newPath >> 8) & 0xFF), (byte) (newPath & 0xFF)
        };
        return buildCommand(src, Constants.ADDR_BROADCAST, Constants.MESSAGE_ROUTING_CHANGE,
                param);
!!!84809527.java!!!	buildGiveDevicePowerStatus(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_GIVE_DEVICE_POWER_STATUS);
!!!84809655.java!!!	buildReportPowerStatus(in src : int, in dest : int, in powerStatus : int) : HdmiCecMessage
        byte[] param = new byte[] {
                (byte) (powerStatus & 0xFF)
        };
        return buildCommand(src, dest, Constants.MESSAGE_REPORT_POWER_STATUS, param);
!!!84809783.java!!!	buildReportMenuStatus(in src : int, in dest : int, in menuStatus : int) : HdmiCecMessage
        byte[] param = new byte[] {
                (byte) (menuStatus & 0xFF)
        };
        return buildCommand(src, dest, Constants.MESSAGE_MENU_STATUS, param);
!!!84809911.java!!!	buildSystemAudioModeRequest(in src : int, in avr : int, in avrPhysicalAddress : int, inout enableSystemAudio : boolean) : HdmiCecMessage
        if (enableSystemAudio) {
            return buildCommand(src, avr, Constants.MESSAGE_SYSTEM_AUDIO_MODE_REQUEST,
                    physicalAddressToParam(avrPhysicalAddress));
        } else {
            return buildCommand(src, avr, Constants.MESSAGE_SYSTEM_AUDIO_MODE_REQUEST);
        }
!!!84810039.java!!!	buildGiveAudioStatus(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_GIVE_AUDIO_STATUS);
!!!84810167.java!!!	buildUserControlPressed(in src : int, in dest : int, in uiCommand : int) : HdmiCecMessage
        return buildUserControlPressed(src, dest, new byte[] { (byte) (uiCommand & 0xFF) });
!!!84810295.java!!!	buildUserControlPressed(in src : int, in dest : int, inout commandParam : byte [[]]) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_USER_CONTROL_PRESSED, commandParam);
!!!84810423.java!!!	buildUserControlReleased(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_USER_CONTROL_RELEASED);
!!!84810551.java!!!	buildGiveSystemAudioModeStatus(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_GIVE_SYSTEM_AUDIO_MODE_STATUS);
!!!84810679.java!!!	buildStandby(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_STANDBY);
!!!84810807.java!!!	buildVendorCommand(in src : int, in dest : int, inout params : byte [[]]) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_VENDOR_COMMAND, params);
!!!84810935.java!!!	buildVendorCommandWithId(in src : int, in dest : int, in vendorId : int, inout operands : byte [[]]) : HdmiCecMessage
        byte[] params = new byte[operands.length + 3];  // parameter plus len(vendorId)
        params[0] = (byte) ((vendorId >> 16) & 0xFF);
        params[1] = (byte) ((vendorId >> 8) & 0xFF);
        params[2] = (byte) (vendorId & 0xFF);
        System.arraycopy(operands, 0, params, 3, operands.length);
        return buildCommand(src, dest, Constants.MESSAGE_VENDOR_COMMAND_WITH_ID, params);
!!!84811063.java!!!	buildRecordOn(in src : int, in dest : int, inout params : byte [[]]) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_RECORD_ON, params);
!!!84811191.java!!!	buildRecordOff(in src : int, in dest : int) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_RECORD_OFF);
!!!84811319.java!!!	buildSetDigitalTimer(in src : int, in dest : int, inout params : byte [[]]) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_SET_DIGITAL_TIMER, params);
!!!84811447.java!!!	buildSetAnalogueTimer(in src : int, in dest : int, inout params : byte [[]]) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_SET_ANALOG_TIMER, params);
!!!84811575.java!!!	buildSetExternalTimer(in src : int, in dest : int, inout params : byte [[]]) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_SET_EXTERNAL_TIMER, params);
!!!84811703.java!!!	buildClearDigitalTimer(in src : int, in dest : int, inout params : byte [[]]) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_CLEAR_DIGITAL_TIMER, params);
!!!84811831.java!!!	buildClearAnalogueTimer(in src : int, in dest : int, inout params : byte [[]]) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_CLEAR_ANALOG_TIMER, params);
!!!84811959.java!!!	buildClearExternalTimer(in src : int, in dest : int, inout params : byte [[]]) : HdmiCecMessage
        return buildCommand(src, dest, Constants.MESSAGE_CLEAR_EXTERNAL_TIMER, params);
!!!84812087.java!!!	buildCommand(in src : int, in dest : int, in opcode : int) : HdmiCecMessage
        return new HdmiCecMessage(src, dest, opcode, HdmiCecMessage.EMPTY_PARAM);
!!!84812215.java!!!	buildCommand(in src : int, in dest : int, in opcode : int, inout params : byte [[]]) : HdmiCecMessage
        return new HdmiCecMessage(src, dest, opcode, params);
!!!84812343.java!!!	physicalAddressToParam(in physicalAddress : int) : byte
        return new byte[] {
                (byte) ((physicalAddress >> 8) & 0xFF),
                (byte) (physicalAddress & 0xFF)
        };
