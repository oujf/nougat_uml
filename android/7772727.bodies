class MediaProjectionManagerService
!!!85017399.java!!!	MediaProjectionManagerService(inout context : Context)
        super(context);
        mContext = context;
        mDeathEaters = new ArrayMap<IBinder, IBinder.DeathRecipient>();
        mCallbackDelegate = new CallbackDelegate();
        mAppOps = (AppOpsManager) mContext.getSystemService(Context.APP_OPS_SERVICE);
        mMediaRouter = (MediaRouter) mContext.getSystemService(Context.MEDIA_ROUTER_SERVICE);
        mMediaRouterCallback = new MediaRouterCallback();
        Watchdog.getInstance().addMonitor(this);
!!!85017527.java!!!	onStart() : void
        publishBinderService(Context.MEDIA_PROJECTION_SERVICE, new BinderService(),
                false /*allowIsolated*/);
        mMediaRouter.addCallback(MediaRouter.ROUTE_TYPE_REMOTE_DISPLAY, mMediaRouterCallback,
                MediaRouter.CALLBACK_FLAG_PASSIVE_DISCOVERY);
!!!85017655.java!!!	onSwitchUser(in userId : int) : void
        mMediaRouter.rebindAsUser(userId);
        synchronized (mLock) {
            if (mProjectionGrant != null) {
                mProjectionGrant.stop();
            }
        }
!!!85017783.java!!!	monitor() : void
        synchronized (mLock) { /* check for deadlock */ }
!!!85017911.java!!!	startProjectionLocked(in projection : MediaProjectionManagerService::MediaProjection) : void
        if (mProjectionGrant != null) {
            mProjectionGrant.stop();
        }
        if (mMediaRouteInfo != null) {
            mMediaRouter.getDefaultRoute().select();
        }
        mProjectionToken = projection.asBinder();
        mProjectionGrant = projection;
        dispatchStart(projection);
!!!85018039.java!!!	stopProjectionLocked(in projection : MediaProjectionManagerService::MediaProjection) : void
        mProjectionToken = null;
        mProjectionGrant = null;
        dispatchStop(projection);
!!!85018167.java!!!	addCallback(in callback : IMediaProjectionWatcherCallback) : void
        IBinder.DeathRecipient deathRecipient = new IBinder.DeathRecipient() {
            @Override
            public void binderDied() {
                removeCallback(callback);
            }
        };
        synchronized (mLock) {
            mCallbackDelegate.add(callback);
            linkDeathRecipientLocked(callback, deathRecipient);
        }
!!!85018295.java!!!	removeCallback(inout callback : IMediaProjectionWatcherCallback) : void
        synchronized (mLock) {
            unlinkDeathRecipientLocked(callback);
            mCallbackDelegate.remove(callback);
        }
!!!85018423.java!!!	linkDeathRecipientLocked(inout callback : IMediaProjectionWatcherCallback, inout deathRecipient : IBinder::DeathRecipient) : void
        try {
            final IBinder token = callback.asBinder();
            token.linkToDeath(deathRecipient, 0);
            mDeathEaters.put(token, deathRecipient);
        } catch (RemoteException e) {
            Slog.e(TAG, "Unable to link to death for media projection monitoring callback", e);
        }
!!!85018551.java!!!	unlinkDeathRecipientLocked(inout callback : IMediaProjectionWatcherCallback) : void
        final IBinder token = callback.asBinder();
        IBinder.DeathRecipient deathRecipient = mDeathEaters.remove(token);
        if (deathRecipient != null) {
            token.unlinkToDeath(deathRecipient, 0);
        }
!!!85018679.java!!!	dispatchStart(inout projection : MediaProjectionManagerService::MediaProjection) : void
        mCallbackDelegate.dispatchStart(projection);
!!!85018807.java!!!	dispatchStop(inout projection : MediaProjectionManagerService::MediaProjection) : void
        mCallbackDelegate.dispatchStop(projection);
!!!85018935.java!!!	isValidMediaProjection(inout token : IBinder) : boolean
        synchronized (mLock) {
            if (mProjectionToken != null) {
                return mProjectionToken.equals(token);
            }
            return false;
        }
!!!85019063.java!!!	getActiveProjectionInfo() : MediaProjectionInfo
        synchronized (mLock) {
            if (mProjectionGrant == null) {
                return null;
            }
            return mProjectionGrant.getProjectionInfo();
        }
!!!85019191.java!!!	dump(in pw : PrintWriter) : void
        pw.println("MEDIA PROJECTION MANAGER (dumpsys media_projection)");
        synchronized (mLock) {
            pw.println("Media Projection: ");
            if (mProjectionGrant != null ) {
                mProjectionGrant.dump(pw);
            } else {
                pw.println("null");
            }
        }
!!!85023799.java!!!	typeToString(in type : int) : String
        switch (type) {
            case MediaProjectionManager.TYPE_SCREEN_CAPTURE:
                return "TYPE_SCREEN_CAPTURE";
            case MediaProjectionManager.TYPE_MIRRORING:
                return "TYPE_MIRRORING";
            case MediaProjectionManager.TYPE_PRESENTATION:
                return "TYPE_PRESENTATION";
        }
        return Integer.toString(type);
