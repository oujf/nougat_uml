class IntentFilterVerificationState
!!!85173815.java!!!	IntentFilterVerificationState(in verifierUid : int, in userId : int, inout packageName : String)
        mRequiredVerifierUid = verifierUid;
        mUserId = userId;
        mPackageName = packageName;
        mState = STATE_UNDEFINED;
        mVerificationComplete = false;
!!!85173943.java!!!	setState(in state : int) : void
        if (state > STATE_VERIFICATION_FAILURE || state < STATE_UNDEFINED) {
            mState = STATE_UNDEFINED;
        } else {
            mState = state;
        }
!!!85174071.java!!!	getState() : int
        return mState;
!!!85174199.java!!!	setPendingState() : void
        setState(STATE_VERIFICATION_PENDING);
!!!85174327.java!!!	getFilters() : PackageParser::ActivityIntentInfo
        return mFilters;
!!!85174455.java!!!	isVerificationComplete() : boolean
        return mVerificationComplete;
!!!85174583.java!!!	isVerified() : boolean
        if (mVerificationComplete) {
            return (mState == STATE_VERIFICATION_SUCCESS);
        }
        return false;
!!!85174711.java!!!	getUserId() : int
        return mUserId;
!!!85174839.java!!!	getPackageName() : String
        return mPackageName;
!!!85174967.java!!!	getHostsString() : String
        StringBuilder sb = new StringBuilder();
        final int count = mHosts.size();
        for (int i=0; i<count; i++) {
            if (i > 0) {
                sb.append(" ");
            }
            sb.append(mHosts.valueAt(i));
        }
        return sb.toString();
!!!85175095.java!!!	setVerifierResponse(in callerUid : int, in code : int) : boolean
        if (mRequiredVerifierUid == callerUid) {
            int state = STATE_UNDEFINED;
            if (code == PackageManager.INTENT_FILTER_VERIFICATION_SUCCESS) {
                state = STATE_VERIFICATION_SUCCESS;
            } else if (code == PackageManager.INTENT_FILTER_VERIFICATION_FAILURE) {
                state = STATE_VERIFICATION_FAILURE;
            }
            mVerificationComplete = true;
            setState(state);
            return true;
        }
        Slog.d(TAG, "Cannot set verifier response with callerUid:" + callerUid + " and code:" +
                code + " as required verifierUid is:" + mRequiredVerifierUid);
        return false;
!!!85175223.java!!!	addFilter(inout filter : PackageParser::ActivityIntentInfo) : void
        mFilters.add(filter);
        mHosts.addAll(filter.getHostsList());
