class PermissionData
!!!85319607.java!!!	PermissionData(inout perm : BasePermission)
            mPerm = perm;
!!!85319735.java!!!	PermissionData(inout other : PermissionsState::PermissionData)
            this(other.mPerm);
            final int otherStateCount = other.mUserStates.size();
            for (int i = 0; i < otherStateCount; i++) {
                final int otherUserId = other.mUserStates.keyAt(i);
                PermissionState otherState = other.mUserStates.valueAt(i);
                mUserStates.put(otherUserId, new PermissionState(otherState));
            }
!!!85319863.java!!!	computeGids(in userId : int) : int
            return mPerm.computeGids(userId);
!!!85319991.java!!!	isGranted(in userId : int) : boolean
            if (isInstallPermission()) {
                userId = UserHandle.USER_ALL;
            }

            PermissionState userState = mUserStates.get(userId);
            if (userState == null) {
                return false;
            }

            return userState.mGranted;
!!!85320119.java!!!	grant(in userId : int) : boolean
            if (!isCompatibleUserId(userId)) {
                return false;
            }

            if (isGranted(userId)) {
                return false;
            }

            PermissionState userState = mUserStates.get(userId);
            if (userState == null) {
                userState = new PermissionState(mPerm.name);
                mUserStates.put(userId, userState);
            }

            userState.mGranted = true;

            return true;
!!!85320247.java!!!	revoke(in userId : int) : boolean
            if (!isCompatibleUserId(userId)) {
                return false;
            }

            if (!isGranted(userId)) {
                return false;
            }

            PermissionState userState = mUserStates.get(userId);
            userState.mGranted = false;

            if (userState.isDefault()) {
                mUserStates.remove(userId);
            }

            return true;
!!!85320375.java!!!	getPermissionState(in userId : int) : PermissionsState::PermissionState
            return mUserStates.get(userId);
!!!85320503.java!!!	getFlags(in userId : int) : int
            PermissionState userState = mUserStates.get(userId);
            if (userState != null) {
                return userState.mFlags;
            }
            return 0;
!!!85320631.java!!!	isDefault() : boolean
            return mUserStates.size() <= 0;
!!!85320759.java!!!	isInstallPermissionKey(in userId : int) : boolean
            return userId == UserHandle.USER_ALL;
!!!85320887.java!!!	updateFlags(in userId : int, in flagMask : int, in flagValues : int) : boolean
            if (isInstallPermission()) {
                userId = UserHandle.USER_ALL;
            }

            if (!isCompatibleUserId(userId)) {
                return false;
            }

            final int newFlags = flagValues & flagMask;

            PermissionState userState = mUserStates.get(userId);
            if (userState != null) {
                final int oldFlags = userState.mFlags;
                userState.mFlags = (userState.mFlags & ~flagMask) | newFlags;
                if (userState.isDefault()) {
                    mUserStates.remove(userId);
                }
                return userState.mFlags != oldFlags;
            } else if (newFlags != 0) {
                userState = new PermissionState(mPerm.name);
                userState.mFlags = newFlags;
                mUserStates.put(userId, userState);
                return true;
            }

            return false;
!!!85321015.java!!!	isCompatibleUserId(in userId : int) : boolean
            return isDefault() || !(isInstallPermission() ^ isInstallPermissionKey(userId));
!!!85321143.java!!!	isInstallPermission() : boolean
            return mUserStates.size() == 1
                    && mUserStates.get(UserHandle.USER_ALL) != null;
