class PKCS1Padding
!!!28083127.java!!!	PKCS1Padding()
            super(KeymasterDefs.KM_PAD_RSA_PKCS1_1_5_ENCRYPT);
!!!28083255.java!!!	adjustConfigForEncryptingWithPrivateKey() : boolean
            // RSA encryption with PCKS#1 padding using private key is a way to implement RSA
            // signatures with PKCS#1 padding. We have to support this for legacy reasons.
            setKeymasterPurposeOverride(KeymasterDefs.KM_PURPOSE_SIGN);
            setKeymasterPaddingOverride(KeymasterDefs.KM_PAD_RSA_PKCS1_1_5_SIGN);
            return true;
!!!28083511.java!!!	initAlgorithmSpecificParameters(inout params : AlgorithmParameterSpec) : void
            if (params != null) {
                throw new InvalidAlgorithmParameterException(
                        "Unexpected parameters: " + params + ". No parameters supported");
            }
!!!28083639.java!!!	initAlgorithmSpecificParameters(inout params : AlgorithmParameters) : void

            if (params != null) {
                throw new InvalidAlgorithmParameterException(
                        "Unexpected parameters: " + params + ". No parameters supported");
            }
!!!28083767.java!!!	engineGetParameters() : AlgorithmParameters
            return null;
!!!28083895.java!!!	getAdditionalEntropyAmountForBegin() : int
            return 0;
!!!28084023.java!!!	getAdditionalEntropyAmountForFinish() : int
            return (isEncrypting()) ? getModulusSizeBytes() : 0;
