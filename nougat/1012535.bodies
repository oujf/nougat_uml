class ArrayUtils
!!!28103351.java!!!	nullToEmpty(inout array : String) : String
        return (array != null) ? array : EmptyArray.STRING;
!!!28103479.java!!!	cloneIfNotEmpty(inout array : String) : String
        return ((array != null) && (array.length > 0)) ? array.clone() : array;
!!!28103607.java!!!	cloneIfNotEmpty(inout array : byte) : byte
        return ((array != null) && (array.length > 0)) ? array.clone() : array;
!!!28103735.java!!!	concat(inout arr1 : byte, inout arr2 : byte) : byte
        return concat(arr1, 0, (arr1 != null) ? arr1.length : 0,
                arr2, 0, (arr2 != null) ? arr2.length : 0);
!!!28103863.java!!!	concat(inout arr1 : byte, in offset1 : int, in len1 : int, inout arr2 : byte, in offset2 : int, in len2 : int) : byte
        if (len1 == 0) {
            return subarray(arr2, offset2, len2);
        } else if (len2 == 0) {
            return subarray(arr1, offset1, len1);
        } else {
            byte[] result = new byte[len1 + len2];
            System.arraycopy(arr1, offset1, result, 0, len1);
            System.arraycopy(arr2, offset2, result, len1, len2);
            return result;
        }
!!!28103991.java!!!	subarray(inout arr : byte, in offset : int, in len : int) : byte
        if (len == 0) {
            return EmptyArray.BYTE;
        }
        if ((offset == 0) && (len == arr.length)) {
            return arr;
        }
        byte[] result = new byte[len];
        System.arraycopy(arr, offset, result, 0, len);
        return result;
!!!28104119.java!!!	concat(inout arr1 : int, inout arr2 : int) : int
        if ((arr1 == null) || (arr1.length == 0)) {
            return arr2;
        } else if ((arr2 == null) || (arr2.length == 0)) {
            return arr1;
        } else {
            int[] result = new int[arr1.length + arr2.length];
            System.arraycopy(arr1, 0, result, 0, arr1.length);
            System.arraycopy(arr2, 0, result, arr1.length, arr2.length);
            return result;
        }
