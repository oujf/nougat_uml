class KeyPairGeneratorSpecTest
!!!28124727.java!!!	testConstructor_Success() : void
        KeyPairGeneratorSpec spec =
                new KeyPairGeneratorSpec(getContext(), TEST_ALIAS_1, "RSA", 1024, null, TEST_DN_1,
                        SERIAL_1, NOW, NOW_PLUS_10_YEARS, 0);

        assertEquals("Context should be the one specified", getContext(), spec.getContext());

        assertEquals("Alias should be the one specified", TEST_ALIAS_1, spec.getKeystoreAlias());

        assertEquals("Key algorithm should be the one specified", "RSA", spec.getKeyType());

        assertEquals("Key size should be the one specified", 1024, spec.getKeySize());

        assertEquals("subjectDN should be the one specified", TEST_DN_1, spec.getSubjectDN());

        assertEquals("startDate should be the one specified", NOW, spec.getStartDate());

        assertEquals("endDate should be the one specified", NOW_PLUS_10_YEARS, spec.getEndDate());
!!!28124855.java!!!	testBuilder_Success() : void
        KeyPairGeneratorSpec spec = new KeyPairGeneratorSpec.Builder(getContext())
                .setAlias(TEST_ALIAS_1)
                .setKeyType("RSA")
                .setKeySize(1024)
                .setSubject(TEST_DN_1)
                .setSerialNumber(SERIAL_1)
                .setStartDate(NOW)
                .setEndDate(NOW_PLUS_10_YEARS)
                .setEncryptionRequired()
                .build();

        assertEquals("Context should be the one specified", getContext(), spec.getContext());

        assertEquals("Alias should be the one specified", TEST_ALIAS_1, spec.getKeystoreAlias());

        assertEquals("Key algorithm should be the one specified", "RSA", spec.getKeyType());

        assertEquals("Key size should be the one specified", 1024, spec.getKeySize());

        assertEquals("subjectDN should be the one specified", TEST_DN_1, spec.getSubjectDN());

        assertEquals("startDate should be the one specified", NOW, spec.getStartDate());

        assertEquals("endDate should be the one specified", NOW_PLUS_10_YEARS, spec.getEndDate());

        assertEquals("encryption flag should be on", KeyStore.FLAG_ENCRYPTED, spec.getFlags());
!!!28124983.java!!!	testConstructor_NullContext_Failure() : void
        try {
            new KeyPairGeneratorSpec(null, TEST_ALIAS_1, "RSA", 1024, null, TEST_DN_1, SERIAL_1, NOW,
                    NOW_PLUS_10_YEARS, 0);
            fail("Should throw IllegalArgumentException when context is null");
        } catch (IllegalArgumentException success) {
        }
!!!28125111.java!!!	testConstructor_NullKeystoreAlias_Failure() : void
        try {
            new KeyPairGeneratorSpec(getContext(), null, "RSA", 1024, null, TEST_DN_1, SERIAL_1, NOW,
                    NOW_PLUS_10_YEARS, 0);
            fail("Should throw IllegalArgumentException when keystoreAlias is null");
        } catch (IllegalArgumentException success) {
        }
!!!28125239.java!!!	testConstructor_NullSubjectDN_Failure() : void
        try {
            new KeyPairGeneratorSpec(getContext(), TEST_ALIAS_1, "RSA", 1024, null, null, SERIAL_1, NOW,
                    NOW_PLUS_10_YEARS, 0);
            fail("Should throw IllegalArgumentException when subjectDN is null");
        } catch (IllegalArgumentException success) {
        }
!!!28125367.java!!!	testConstructor_NullSerial_Failure() : void
        try {
            new KeyPairGeneratorSpec(getContext(), TEST_ALIAS_1, "RSA", 1024, null, TEST_DN_1, null, NOW,
                    NOW_PLUS_10_YEARS, 0);
            fail("Should throw IllegalArgumentException when startDate is null");
        } catch (IllegalArgumentException success) {
        }
!!!28125495.java!!!	testConstructor_NullStartDate_Failure() : void
        try {
            new KeyPairGeneratorSpec(getContext(), TEST_ALIAS_1, "RSA", 1024, null, TEST_DN_1, SERIAL_1,
                    null, NOW_PLUS_10_YEARS, 0);
            fail("Should throw IllegalArgumentException when startDate is null");
        } catch (IllegalArgumentException success) {
        }
!!!28125623.java!!!	testConstructor_NullEndDate_Failure() : void
        try {
            new KeyPairGeneratorSpec(getContext(), TEST_ALIAS_1, "RSA", 1024, null, TEST_DN_1, SERIAL_1,
                    NOW, null, 0);
            fail("Should throw IllegalArgumentException when keystoreAlias is null");
        } catch (IllegalArgumentException success) {
        }
!!!28125751.java!!!	testConstructor_EndBeforeStart_Failure() : void
        try {
            new KeyPairGeneratorSpec(getContext(), TEST_ALIAS_1, "RSA", 1024, null, TEST_DN_1, SERIAL_1,
                    NOW_PLUS_10_YEARS, NOW, 0);
            fail("Should throw IllegalArgumentException when end is before start");
        } catch (IllegalArgumentException success) {
        }
