class GnssClock
!!!28168759.java!!!	GnssClock()
        initialize();
!!!28168887.java!!!	set(inout clock : GnssClock) : void
        mFlags = clock.mFlags;
        mLeapSecond = clock.mLeapSecond;
        mTimeNanos = clock.mTimeNanos;
        mTimeUncertaintyNanos = clock.mTimeUncertaintyNanos;
        mFullBiasNanos = clock.mFullBiasNanos;
        mBiasNanos = clock.mBiasNanos;
        mBiasUncertaintyNanos = clock.mBiasUncertaintyNanos;
        mDriftNanosPerSecond = clock.mDriftNanosPerSecond;
        mDriftUncertaintyNanosPerSecond = clock.mDriftUncertaintyNanosPerSecond;
        mHardwareClockDiscontinuityCount = clock.mHardwareClockDiscontinuityCount;
!!!28169015.java!!!	reset() : void
        initialize();
!!!28169143.java!!!	hasLeapSecond() : boolean
        return isFlagSet(HAS_LEAP_SECOND);
!!!28169271.java!!!	getLeapSecond() : int
        return mLeapSecond;
!!!28169399.java!!!	setLeapSecond(in leapSecond : int) : void
        setFlag(HAS_LEAP_SECOND);
        mLeapSecond = leapSecond;
!!!28169527.java!!!	resetLeapSecond() : void
        resetFlag(HAS_LEAP_SECOND);
        mLeapSecond = Integer.MIN_VALUE;
!!!28169655.java!!!	getTimeNanos() : long
        return mTimeNanos;
!!!28169783.java!!!	setTimeNanos(in timeNanos : long) : void
        mTimeNanos = timeNanos;
!!!28169911.java!!!	hasTimeUncertaintyNanos() : boolean
        return isFlagSet(HAS_TIME_UNCERTAINTY);
!!!28170039.java!!!	getTimeUncertaintyNanos() : double
        return mTimeUncertaintyNanos;
!!!28170167.java!!!	setTimeUncertaintyNanos(in timeUncertaintyNanos : double) : void
        setFlag(HAS_TIME_UNCERTAINTY);
        mTimeUncertaintyNanos = timeUncertaintyNanos;
!!!28170295.java!!!	resetTimeUncertaintyNanos() : void
        resetFlag(HAS_TIME_UNCERTAINTY);
        mTimeUncertaintyNanos = Double.NaN;
!!!28170423.java!!!	hasFullBiasNanos() : boolean
        return isFlagSet(HAS_FULL_BIAS);
!!!28170551.java!!!	getFullBiasNanos() : long
        return mFullBiasNanos;
!!!28170679.java!!!	setFullBiasNanos(in value : long) : void
        setFlag(HAS_FULL_BIAS);
        mFullBiasNanos = value;
!!!28170807.java!!!	resetFullBiasNanos() : void
        resetFlag(HAS_FULL_BIAS);
        mFullBiasNanos = Long.MIN_VALUE;
!!!28170935.java!!!	hasBiasNanos() : boolean
        return isFlagSet(HAS_BIAS);
!!!28171063.java!!!	getBiasNanos() : double
        return mBiasNanos;
!!!28171191.java!!!	setBiasNanos(in biasNanos : double) : void
        setFlag(HAS_BIAS);
        mBiasNanos = biasNanos;
!!!28171319.java!!!	resetBiasNanos() : void
        resetFlag(HAS_BIAS);
        mBiasNanos = Double.NaN;
!!!28171447.java!!!	hasBiasUncertaintyNanos() : boolean
        return isFlagSet(HAS_BIAS_UNCERTAINTY);
!!!28171575.java!!!	getBiasUncertaintyNanos() : double
        return mBiasUncertaintyNanos;
!!!28171703.java!!!	setBiasUncertaintyNanos(in biasUncertaintyNanos : double) : void
        setFlag(HAS_BIAS_UNCERTAINTY);
        mBiasUncertaintyNanos = biasUncertaintyNanos;
!!!28171831.java!!!	resetBiasUncertaintyNanos() : void
        resetFlag(HAS_BIAS_UNCERTAINTY);
        mBiasUncertaintyNanos = Double.NaN;
!!!28171959.java!!!	hasDriftNanosPerSecond() : boolean
        return isFlagSet(HAS_DRIFT);
!!!28172087.java!!!	getDriftNanosPerSecond() : double
        return mDriftNanosPerSecond;
!!!28172215.java!!!	setDriftNanosPerSecond(in driftNanosPerSecond : double) : void
        setFlag(HAS_DRIFT);
        mDriftNanosPerSecond = driftNanosPerSecond;
!!!28172343.java!!!	resetDriftNanosPerSecond() : void
        resetFlag(HAS_DRIFT);
        mDriftNanosPerSecond = Double.NaN;
!!!28172471.java!!!	hasDriftUncertaintyNanosPerSecond() : boolean
        return isFlagSet(HAS_DRIFT_UNCERTAINTY);
!!!28172599.java!!!	getDriftUncertaintyNanosPerSecond() : double
        return mDriftUncertaintyNanosPerSecond;
!!!28172727.java!!!	setDriftUncertaintyNanosPerSecond(in driftUncertaintyNanosPerSecond : double) : void
        setFlag(HAS_DRIFT_UNCERTAINTY);
        mDriftUncertaintyNanosPerSecond = driftUncertaintyNanosPerSecond;
!!!28172855.java!!!	resetDriftUncertaintyNanosPerSecond() : void
        resetFlag(HAS_DRIFT_UNCERTAINTY);
        mDriftUncertaintyNanosPerSecond = Double.NaN;
!!!28172983.java!!!	getHardwareClockDiscontinuityCount() : int
        return mHardwareClockDiscontinuityCount;
!!!28173111.java!!!	setHardwareClockDiscontinuityCount(in value : int) : void
        mHardwareClockDiscontinuityCount = value;
!!!28173239.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeInt(mFlags);
        parcel.writeInt(mLeapSecond);
        parcel.writeLong(mTimeNanos);
        parcel.writeDouble(mTimeUncertaintyNanos);
        parcel.writeLong(mFullBiasNanos);
        parcel.writeDouble(mBiasNanos);
        parcel.writeDouble(mBiasUncertaintyNanos);
        parcel.writeDouble(mDriftNanosPerSecond);
        parcel.writeDouble(mDriftUncertaintyNanosPerSecond);
        parcel.writeInt(mHardwareClockDiscontinuityCount);
!!!28173367.java!!!	describeContents() : int
        return 0;
!!!28173495.java!!!	toString() : String
        final String format = "   %-15s = %s\n";
        final String formatWithUncertainty = "   %-15s = %-25s   %-26s = %s\n";
        StringBuilder builder = new StringBuilder("GnssClock:\n");

        builder.append(String.format(format, "LeapSecond", hasLeapSecond() ? mLeapSecond : null));

        builder.append(String.format(
                formatWithUncertainty,
                "TimeNanos",
                mTimeNanos,
                "TimeUncertaintyNanos",
                hasTimeUncertaintyNanos() ? mTimeUncertaintyNanos : null));

        builder.append(String.format(
                format,
                "FullBiasNanos",
                hasFullBiasNanos() ? mFullBiasNanos : null));

        builder.append(String.format(
                formatWithUncertainty,
                "BiasNanos",
                hasBiasNanos() ? mBiasNanos : null,
                "BiasUncertaintyNanos",
                hasBiasUncertaintyNanos() ? mBiasUncertaintyNanos : null));

        builder.append(String.format(
                formatWithUncertainty,
                "DriftNanosPerSecond",
                hasDriftNanosPerSecond() ? mDriftNanosPerSecond : null,
                "DriftUncertaintyNanosPerSecond",
                hasDriftUncertaintyNanosPerSecond() ? mDriftUncertaintyNanosPerSecond : null));

        builder.append(String.format(
                format,
                "HardwareClockDiscontinuityCount",
                mHardwareClockDiscontinuityCount));

        return builder.toString();
!!!28173623.java!!!	initialize() : void
        mFlags = HAS_NO_FLAGS;
        resetLeapSecond();
        setTimeNanos(Long.MIN_VALUE);
        resetTimeUncertaintyNanos();
        resetFullBiasNanos();
        resetBiasNanos();
        resetBiasUncertaintyNanos();
        resetDriftNanosPerSecond();
        resetDriftUncertaintyNanosPerSecond();
        setHardwareClockDiscontinuityCount(Integer.MIN_VALUE);
!!!28173751.java!!!	setFlag(in flag : int) : void
        mFlags |= flag;
!!!28173879.java!!!	resetFlag(in flag : int) : void
        mFlags &= ~flag;
!!!28174007.java!!!	isFlagSet(in flag : int) : boolean
        return (mFlags & flag) == flag;
