class GnssNavigationMessage
!!!28184759.java!!!	GnssNavigationMessage()
        initialize();
!!!28184887.java!!!	set(inout navigationMessage : GnssNavigationMessage) : void
        mType = navigationMessage.mType;
        mSvid = navigationMessage.mSvid;
        mMessageId = navigationMessage.mMessageId;
        mSubmessageId = navigationMessage.mSubmessageId;
        mData = navigationMessage.mData;
        mStatus = navigationMessage.mStatus;
!!!28185015.java!!!	reset() : void
        initialize();
!!!28185143.java!!!	getType() : int
        return mType;
!!!28185271.java!!!	setType(in value : int) : void
        mType = value;
!!!28185399.java!!!	getTypeString() : String
        switch (mType) {
            case TYPE_UNKNOWN:
                return "Unknown";
            case TYPE_GPS_L1CA:
                return "GPS L1 C/A";
            case TYPE_GPS_L2CNAV:
                return "GPS L2-CNAV";
            case TYPE_GPS_L5CNAV:
                return "GPS L5-CNAV";
            case TYPE_GPS_CNAV2:
                return "GPS CNAV2";
            case TYPE_GLO_L1CA:
                return "Glonass L1 C/A";
            case TYPE_BDS_D1:
                return "Beidou D1";
            case TYPE_BDS_D2:
                return "Beidou D2";
            case TYPE_GAL_I:
                return "Galileo I";
            case TYPE_GAL_F:
                return "Galileo F";
            default:
                return "<Invalid:" + mType + ">";
        }
!!!28185527.java!!!	getSvid() : int
        return mSvid;
!!!28185655.java!!!	setSvid(in value : int) : void
        mSvid = value;
!!!28185783.java!!!	getMessageId() : int
        return mMessageId;
!!!28185911.java!!!	setMessageId(in value : int) : void
        mMessageId = value;
!!!28186039.java!!!	getSubmessageId() : int
        return mSubmessageId;
!!!28186167.java!!!	setSubmessageId(in value : int) : void
        mSubmessageId = value;
!!!28186295.java!!!	getData() : byte
        return mData;
!!!28186423.java!!!	setData(inout value : byte) : void
        if (value == null) {
            throw new InvalidParameterException("Data must be a non-null array");
        }

        mData = value;
!!!28186551.java!!!	getStatus() : int
        return mStatus;
!!!28186679.java!!!	setStatus(in value : int) : void
        mStatus = value;
!!!28186807.java!!!	getStatusString() : String
        switch (mStatus) {
            case STATUS_UNKNOWN:
                return "Unknown";
            case STATUS_PARITY_PASSED:
                return "ParityPassed";
            case STATUS_PARITY_REBUILT:
                return "ParityRebuilt";
            default:
                return "<Invalid:" + mStatus + ">";
        }
!!!28186935.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeInt(mType);
        parcel.writeInt(mSvid);
        parcel.writeInt(mMessageId);
        parcel.writeInt(mSubmessageId);
        parcel.writeInt(mData.length);
        parcel.writeByteArray(mData);
        parcel.writeInt(mStatus);
!!!28187063.java!!!	describeContents() : int
        return 0;
!!!28187191.java!!!	toString() : String
        final String format = "   %-15s = %s\n";
        StringBuilder builder = new StringBuilder("GnssNavigationMessage:\n");

        builder.append(String.format(format, "Type", getTypeString()));
        builder.append(String.format(format, "Svid", mSvid));
        builder.append(String.format(format, "Status", getStatusString()));
        builder.append(String.format(format, "MessageId", mMessageId));
        builder.append(String.format(format, "SubmessageId", mSubmessageId));

        builder.append(String.format(format, "Data", "{"));
        String prefix = "        ";
        for(byte value : mData) {
            builder.append(prefix);
            builder.append(value);
            prefix = ", ";
        }
        builder.append(" }");

        return builder.toString();
!!!28187319.java!!!	initialize() : void
        mType = TYPE_UNKNOWN;
        mSvid = 0;
        mMessageId = -1;
        mSubmessageId = -1;
        mData = EMPTY_ARRAY;
        mStatus = STATUS_UNKNOWN;
