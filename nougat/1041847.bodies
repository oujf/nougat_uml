class CCLayout
!!!28368695.java!!!	CCLayout(inout context : Context)
            super(context);
            setGravity(Gravity.START);
            setOrientation(LinearLayout.VERTICAL);
            for (int i = 0; i < MAX_ROWS; i++) {
                mLineBoxes[i] = new CCLineBox(getContext());
                addView(mLineBoxes[i], LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
            }
!!!28368823.java!!!	setCaptionStyle(inout captionStyle : CaptioningManager::CaptionStyle) : void
            for (int i = 0; i < MAX_ROWS; i++) {
                mLineBoxes[i].setCaptionStyle(captionStyle);
            }
!!!28368951.java!!!	setFontScale(in fontScale : float) : void
            // Ignores the font scale changes of the system wide CC preference.
!!!28369079.java!!!	update(inout textBuffer : SpannableStringBuilder) : void
            for (int i = 0; i < MAX_ROWS; i++) {
                if (textBuffer[i] != null) {
                    mLineBoxes[i].setText(textBuffer[i], TextView.BufferType.SPANNABLE);
                    mLineBoxes[i].setVisibility(View.VISIBLE);
                } else {
                    mLineBoxes[i].setVisibility(View.INVISIBLE);
                }
            }
!!!28369207.java!!!	onMeasure(in widthMeasureSpec : int, in heightMeasureSpec : int) : void
            super.onMeasure(widthMeasureSpec, heightMeasureSpec);

            int safeWidth = getMeasuredWidth();
            int safeHeight = getMeasuredHeight();

            // CEA-608 assumes 4:3 video
            if (safeWidth * 3 >= safeHeight * 4) {
                safeWidth = safeHeight * 4 / 3;
            } else {
                safeHeight = safeWidth * 3 / 4;
            }
            safeWidth *= SAFE_AREA_RATIO;
            safeHeight *= SAFE_AREA_RATIO;

            int lineHeight = safeHeight / MAX_ROWS;
            int lineHeightMeasureSpec = MeasureSpec.makeMeasureSpec(
                    lineHeight, MeasureSpec.EXACTLY);
            int lineWidthMeasureSpec = MeasureSpec.makeMeasureSpec(
                    safeWidth, MeasureSpec.EXACTLY);

            for (int i = 0; i < MAX_ROWS; i++) {
                mLineBoxes[i].measure(lineWidthMeasureSpec, lineHeightMeasureSpec);
            }
!!!28369335.java!!!	onLayout(inout changed : boolean, in l : int, in t : int, in r : int, in b : int) : void
            // safe caption area
            int viewPortWidth = r - l;
            int viewPortHeight = b - t;
            int safeWidth, safeHeight;
            // CEA-608 assumes 4:3 video
            if (viewPortWidth * 3 >= viewPortHeight * 4) {
                safeWidth = viewPortHeight * 4 / 3;
                safeHeight = viewPortHeight;
            } else {
                safeWidth = viewPortWidth;
                safeHeight = viewPortWidth * 3 / 4;
            }
            safeWidth *= SAFE_AREA_RATIO;
            safeHeight *= SAFE_AREA_RATIO;
            int left = (viewPortWidth - safeWidth) / 2;
            int top = (viewPortHeight - safeHeight) / 2;

            for (int i = 0; i < MAX_ROWS; i++) {
                mLineBoxes[i].layout(
                        left,
                        top + safeHeight * i / MAX_ROWS,
                        left + safeWidth,
                        top + safeHeight * (i + 1) / MAX_ROWS);
            }
