class MediaDrm
!!!28443063.java!!!	isCryptoSchemeSupported(inout uuid : UUID) : boolean
        return isCryptoSchemeSupportedNative(getByteArrayFromUUID(uuid), null);
!!!28443191.java!!!	isCryptoSchemeSupported(inout uuid : UUID, inout mimeType : String) : boolean
        return isCryptoSchemeSupportedNative(getByteArrayFromUUID(uuid), mimeType);
!!!28443319.java!!!	getByteArrayFromUUID(inout uuid : UUID) : byte
        long msb = uuid.getMostSignificantBits();
        long lsb = uuid.getLeastSignificantBits();

        byte[] uuidBytes = new byte[16];
        for (int i = 0; i < 8; ++i) {
            uuidBytes[i] = (byte)(msb >>> (8 * (7 - i)));
            uuidBytes[8 + i] = (byte)(lsb >>> (8 * (7 - i)));
        }

        return uuidBytes;
!!!28443575.java!!!	MediaDrm(inout uuid : UUID)
        Looper looper;
        if ((looper = Looper.myLooper()) != null) {
            mEventHandler = new EventHandler(this, looper);
        } else if ((looper = Looper.getMainLooper()) != null) {
            mEventHandler = new EventHandler(this, looper);
        } else {
            mEventHandler = null;
        }

        /* Native setup requires a weak reference to our object.
         * It's easier to create it here than in C++.
         */
        native_setup(new WeakReference<MediaDrm>(this),
                getByteArrayFromUUID(uuid));
!!!28444087.java!!!	setOnExpirationUpdateListener(inout listener : MediaDrm::OnExpirationUpdateListener, inout handler : Handler) : void
        if (listener != null) {
            Looper looper = handler != null ? handler.getLooper() : Looper.myLooper();
            if (looper != null) {
                if (mEventHandler == null || mEventHandler.getLooper() != looper) {
                    mEventHandler = new EventHandler(this, looper);
                }
            }
        }
        mOnExpirationUpdateListener = listener;
!!!28444343.java!!!	setOnKeyStatusChangeListener(inout listener : MediaDrm::OnKeyStatusChangeListener, inout handler : Handler) : void
        if (listener != null) {
            Looper looper = handler != null ? handler.getLooper() : Looper.myLooper();
            if (looper != null) {
                if (mEventHandler == null || mEventHandler.getLooper() != looper) {
                    mEventHandler = new EventHandler(this, looper);
                }
            }
        }
        mOnKeyStatusChangeListener = listener;
!!!28444983.java!!!	setOnEventListener(inout listener : MediaDrm::OnEventListener) : void
        mOnEventListener = listener;
!!!28445495.java!!!	keyStatusListFromParcel(inout parcel : Parcel) : MediaDrm::KeyStatus
        int nelems = parcel.readInt();
        List<KeyStatus> keyStatusList = new ArrayList(nelems);
        while (nelems-- > 0) {
            byte[] keyId = parcel.createByteArray();
            int keyStatusCode = parcel.readInt();
            keyStatusList.add(new KeyStatus(keyId, keyStatusCode));
        }
        return keyStatusList;
!!!28445623.java!!!	postEventFromNative(inout mediadrm_ref : Object, in what : int, in eventType : int, in extra : int, inout obj : Object) : void
        MediaDrm md = (MediaDrm)((WeakReference<MediaDrm>)mediadrm_ref).get();
        if (md == null) {
            return;
        }
        if (md.mEventHandler != null) {
            Message m = md.mEventHandler.obtainMessage(what, eventType, extra, obj);
            md.mEventHandler.sendMessage(m);
        }
!!!28447543.java!!!	getProvisionRequest() : MediaDrm::ProvisionRequest
        return getProvisionRequestNative(CERTIFICATE_TYPE_NONE, "");
!!!28447799.java!!!	provideProvisionResponse(inout response : byte) : void
        provideProvisionResponseNative(response);
!!!28450487.java!!!	getCryptoSession(inout sessionId : byte, inout cipherAlgorithm : String, inout macAlgorithm : String) : MediaDrm::CryptoSession
        return new CryptoSession(sessionId, cipherAlgorithm, macAlgorithm);
!!!28450999.java!!!	getCertificateRequest(in certType : int, inout certAuthority : String) : MediaDrm::CertificateRequest
        ProvisionRequest provisionRequest = getProvisionRequestNative(certType, certAuthority);
        return new CertificateRequest(provisionRequest.getData(),
                provisionRequest.getDefaultUrl());
!!!28451511.java!!!	provideCertificateResponse(inout response : byte) : MediaDrm::Certificate
        return provideProvisionResponseNative(response);
!!!28451767.java!!!	signRSA(inout sessionId : byte, inout algorithm : String, inout wrappedKey : byte, inout message : byte) : byte
        return signRSANative(this, sessionId, algorithm, wrappedKey, message);
!!!28451895.java!!!	finalize() : void
        native_finalize();
