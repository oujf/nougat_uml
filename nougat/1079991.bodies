class MidiDeviceStatus
!!!28639799.java!!!	MidiDeviceStatus(inout deviceInfo : MidiDeviceInfo, inout inputPortOpen : boolean, inout outputPortOpenCount : int)
        // MidiDeviceInfo is immutable so we can share references
        mDeviceInfo = deviceInfo;

        // make copies of the arrays
        mInputPortOpen = new boolean[inputPortOpen.length];
        System.arraycopy(inputPortOpen, 0, mInputPortOpen, 0, inputPortOpen.length);
        mOutputPortOpenCount = new int[outputPortOpenCount.length];
        System.arraycopy(outputPortOpenCount, 0, mOutputPortOpenCount, 0,
                outputPortOpenCount.length);
!!!28639927.java!!!	MidiDeviceStatus(inout deviceInfo : MidiDeviceInfo)
        mDeviceInfo = deviceInfo;
        mInputPortOpen = new boolean[deviceInfo.getInputPortCount()];
        mOutputPortOpenCount = new int[deviceInfo.getOutputPortCount()];
!!!28640055.java!!!	getDeviceInfo() : MidiDeviceInfo
        return mDeviceInfo;
!!!28640183.java!!!	isInputPortOpen(in portNumber : int) : boolean
        return mInputPortOpen[portNumber];
!!!28640311.java!!!	getOutputPortOpenCount(in portNumber : int) : int
        return mOutputPortOpenCount[portNumber];
!!!28640439.java!!!	toString() : String
        int inputPortCount = mDeviceInfo.getInputPortCount();
        int outputPortCount = mDeviceInfo.getOutputPortCount();
        StringBuilder builder = new StringBuilder("mInputPortOpen=[");
        for (int i = 0; i < inputPortCount; i++) {
            builder.append(mInputPortOpen[i]);
            if (i < inputPortCount -1) {
                builder.append(",");
            }
        }
        builder.append("] mOutputPortOpenCount=[");
        for (int i = 0; i < outputPortCount; i++) {
            builder.append(mOutputPortOpenCount[i]);
            if (i < outputPortCount -1) {
                builder.append(",");
            }
        }
        builder.append("]");
        return builder.toString();
!!!28640567.java!!!	describeContents() : int
        return 0;
!!!28640695.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeParcelable(mDeviceInfo, flags);
        parcel.writeBooleanArray(mInputPortOpen);
        parcel.writeIntArray(mOutputPortOpenCount);
