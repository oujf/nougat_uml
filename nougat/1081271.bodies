class MidiPortImpl
!!!28645559.java!!!	packData(inout message : byte, in offset : int, in size : int, in timestamp : long, inout dest : byte) : int
        if (size  > MAX_PACKET_DATA_SIZE) {
            size = MAX_PACKET_DATA_SIZE;
        }
        int length = 0;
        // packet type goes first
        dest[length++] = PACKET_TYPE_DATA;
        // data goes next
        System.arraycopy(message, offset, dest, length, size);
        length += size;

        // followed by timestamp
        for (int i = 0; i < TIMESTAMP_SIZE; i++) {
            dest[length++] = (byte)timestamp;
            timestamp >>= 8;
        }

        return length;
!!!28645687.java!!!	packFlush(inout dest : byte) : int
        dest[0] = PACKET_TYPE_FLUSH;
        return 1;
!!!28645815.java!!!	getPacketType(inout buffer : byte, in bufferLength : int) : int
        return buffer[0];
!!!28645943.java!!!	getDataOffset(inout buffer : byte, in bufferLength : int) : int
        // data follows packet type byte
        return 1;
!!!28646071.java!!!	getDataSize(inout buffer : byte, in bufferLength : int) : int
        // message length is total buffer length minus size of the timestamp
        return bufferLength - DATA_PACKET_OVERHEAD;
!!!28646199.java!!!	getPacketTimestamp(inout buffer : byte, in bufferLength : int) : long
        // timestamp is at end of the packet
        int offset = bufferLength;
        long timestamp = 0;

        for (int i = 0; i < TIMESTAMP_SIZE; i++) {
            int b = (int)buffer[--offset] & 0xFF;
            timestamp = (timestamp << 8) | b;
        }
        return timestamp;
