class TvContract
!!!28686519.java!!!	buildInputId(inout name : ComponentName) : String
        return name.flattenToShortString();
!!!28686647.java!!!	buildChannelUri(in channelId : long) : Uri
        return ContentUris.withAppendedId(Channels.CONTENT_URI, channelId);
!!!28686775.java!!!	buildChannelUriForPassthroughInput(inout inputId : String) : Uri
        return new Uri.Builder().scheme(ContentResolver.SCHEME_CONTENT).authority(AUTHORITY)
                .appendPath(PATH_PASSTHROUGH).appendPath(inputId).build();
!!!28686903.java!!!	buildChannelLogoUri(in channelId : long) : Uri
        return buildChannelLogoUri(buildChannelUri(channelId));
!!!28687031.java!!!	buildChannelLogoUri(inout channelUri : Uri) : Uri
        if (!isChannelUriForTunerInput(channelUri)) {
            throw new IllegalArgumentException("Not a channel: " + channelUri);
        }
        return Uri.withAppendedPath(channelUri, Channels.Logo.CONTENT_DIRECTORY);
!!!28687159.java!!!	buildChannelsUriForInput(inout inputId : String) : Uri
        return buildChannelsUriForInput(inputId, false);
!!!28687287.java!!!	buildChannelsUriForInput(inout inputId : String, inout browsableOnly : boolean) : Uri
        Uri.Builder builder = Channels.CONTENT_URI.buildUpon();
        if (inputId != null) {
            builder.appendQueryParameter(PARAM_INPUT, inputId);
        }
        return builder.appendQueryParameter(PARAM_BROWSABLE_ONLY, String.valueOf(browsableOnly))
                .build();
!!!28687415.java!!!	buildChannelsUriForInput(inout inputId : String, inout genre : String, inout browsableOnly : boolean) : Uri
        if (genre == null) {
            return buildChannelsUriForInput(inputId, browsableOnly);
        }
        if (!Programs.Genres.isCanonical(genre)) {
            throw new IllegalArgumentException("Not a canonical genre: '" + genre + "'");
        }
        return buildChannelsUriForInput(inputId, browsableOnly).buildUpon()
                .appendQueryParameter(PARAM_CANONICAL_GENRE, genre).build();
!!!28687543.java!!!	buildProgramUri(in programId : long) : Uri
        return ContentUris.withAppendedId(Programs.CONTENT_URI, programId);
!!!28687671.java!!!	buildProgramsUriForChannel(in channelId : long) : Uri
        return Programs.CONTENT_URI.buildUpon()
                .appendQueryParameter(PARAM_CHANNEL, String.valueOf(channelId)).build();
!!!28687799.java!!!	buildProgramsUriForChannel(inout channelUri : Uri) : Uri
        if (!isChannelUriForTunerInput(channelUri)) {
            throw new IllegalArgumentException("Not a channel: " + channelUri);
        }
        return buildProgramsUriForChannel(ContentUris.parseId(channelUri));
!!!28687927.java!!!	buildProgramsUriForChannel(in channelId : long, in startTime : long, in endTime : long) : Uri
        Uri uri = buildProgramsUriForChannel(channelId);
        return uri.buildUpon().appendQueryParameter(PARAM_START_TIME, String.valueOf(startTime))
                .appendQueryParameter(PARAM_END_TIME, String.valueOf(endTime)).build();
!!!28688055.java!!!	buildProgramsUriForChannel(inout channelUri : Uri, in startTime : long, in endTime : long) : Uri
        if (!isChannelUriForTunerInput(channelUri)) {
            throw new IllegalArgumentException("Not a channel: " + channelUri);
        }
        return buildProgramsUriForChannel(ContentUris.parseId(channelUri), startTime, endTime);
!!!28688183.java!!!	buildRecordedProgramUri(in recordedProgramId : long) : Uri
        return ContentUris.withAppendedId(RecordedPrograms.CONTENT_URI, recordedProgramId);
!!!28688311.java!!!	buildWatchedProgramUri(in watchedProgramId : long) : Uri
        return ContentUris.withAppendedId(WatchedPrograms.CONTENT_URI, watchedProgramId);
!!!28688439.java!!!	isTvUri(inout uri : Uri) : boolean
        return uri != null && ContentResolver.SCHEME_CONTENT.equals(uri.getScheme())
                && AUTHORITY.equals(uri.getAuthority());
!!!28688567.java!!!	isTwoSegmentUriStartingWith(inout uri : Uri, inout pathSegment : String) : boolean
        List<String> pathSegments = uri.getPathSegments();
        return pathSegments.size() == 2 && pathSegment.equals(pathSegments.get(0));
!!!28688695.java!!!	isChannelUri(inout uri : Uri) : boolean
        return isChannelUriForTunerInput(uri) || isChannelUriForPassthroughInput(uri);
!!!28688823.java!!!	isChannelUriForTunerInput(inout uri : Uri) : boolean
        return isTvUri(uri) && isTwoSegmentUriStartingWith(uri, PATH_CHANNEL);
!!!28688951.java!!!	isChannelUriForPassthroughInput(inout uri : Uri) : boolean
        return isTvUri(uri) && isTwoSegmentUriStartingWith(uri, PATH_PASSTHROUGH);
!!!28689079.java!!!	isProgramUri(inout uri : Uri) : boolean
        return isTvUri(uri) && isTwoSegmentUriStartingWith(uri, PATH_PROGRAM);
