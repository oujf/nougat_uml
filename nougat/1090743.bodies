class TvRecordingClient
!!!28729783.java!!!	TvRecordingClient(inout context : Context, inout tag : String, inout callback : TvRecordingClient::RecordingCallback, inout handler : Handler)
        mCallback = callback;
        mHandler = handler == null ? new Handler(Looper.getMainLooper()) : handler;
        mTvInputManager = (TvInputManager) context.getSystemService(Context.TV_INPUT_SERVICE);
!!!28729911.java!!!	tune(inout inputId : String, inout channelUri : Uri) : void
        tune(inputId, channelUri, null);
!!!28730039.java!!!	tune(inout inputId : String, inout channelUri : Uri, inout params : Bundle) : void
        if (DEBUG) Log.d(TAG, "tune(" + channelUri + ")");
        if (TextUtils.isEmpty(inputId)) {
            throw new IllegalArgumentException("inputId cannot be null or an empty string");
        }
        if (mIsRecordingStarted) {
            throw new IllegalStateException("tune failed - recording already started");
        }
        if (mSessionCallback != null && TextUtils.equals(mSessionCallback.mInputId, inputId)) {
            if (mSession != null) {
                mSession.tune(channelUri, params);
            } else {
                mSessionCallback.mChannelUri = channelUri;
                mSessionCallback.mConnectionParams = params;
            }
        } else {
            resetInternal();
            mSessionCallback = new MySessionCallback(inputId, channelUri, params);
            if (mTvInputManager != null) {
                mTvInputManager.createRecordingSession(inputId, mSessionCallback, mHandler);
            }
        }
!!!28730167.java!!!	release() : void
        if (DEBUG) Log.d(TAG, "release()");
        resetInternal();
!!!28730295.java!!!	resetInternal() : void
        mSessionCallback = null;
        mPendingAppPrivateCommands.clear();
        if (mSession != null) {
            mSession.release();
            mSession = null;
        }
!!!28730423.java!!!	startRecording(inout programUri : Uri) : void
        if (!mIsTuned) {
            throw new IllegalStateException("startRecording failed - not yet tuned");
        }
        if (mSession != null) {
            mSession.startRecording(programUri);
            mIsRecordingStarted = true;
        }
!!!28730551.java!!!	stopRecording() : void
        if (!mIsRecordingStarted) {
            Log.w(TAG, "stopRecording failed - recording not yet started");
        }
        if (mSession != null) {
            mSession.stopRecording();
        }
!!!28730679.java!!!	sendAppPrivateCommand(inout action : String, inout data : Bundle) : void
        if (TextUtils.isEmpty(action)) {
            throw new IllegalArgumentException("action cannot be null or an empty string");
        }
        if (mSession != null) {
            mSession.sendAppPrivateCommand(action, data);
        } else {
            Log.w(TAG, "sendAppPrivateCommand - session not yet created (action \"" + action
                    + "\" pending)");
            mPendingAppPrivateCommands.add(Pair.create(action, data));
        }
