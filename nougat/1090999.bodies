class MySessionCallback
!!!28731575.java!!!	MySessionCallback(inout inputId : String, inout channelUri : Uri, inout connectionParams : Bundle)
            mInputId = inputId;
            mChannelUri = channelUri;
            mConnectionParams = connectionParams;
!!!28731703.java!!!	onSessionCreated(inout session : TvInputManager::Session) : void
            if (DEBUG) {
                Log.d(TAG, "onSessionCreated()");
            }
            if (this != mSessionCallback) {
                Log.w(TAG, "onSessionCreated - session already created");
                // This callback is obsolete.
                if (session != null) {
                    session.release();
                }
                return;
            }
            mSession = session;
            if (session != null) {
                // Sends the pending app private commands.
                for (Pair<String, Bundle> command : mPendingAppPrivateCommands) {
                    mSession.sendAppPrivateCommand(command.first, command.second);
                }
                mPendingAppPrivateCommands.clear();
                mSession.tune(mChannelUri, mConnectionParams);
            } else {
                mSessionCallback = null;
                if (mCallback != null) {
                    mCallback.onConnectionFailed(mInputId);
                }
            }
!!!28731831.java!!!	onTuned(inout session : TvInputManager::Session, inout channelUri : Uri) : void
            if (DEBUG) {
                Log.d(TAG, "onTuned()");
            }
            if (this != mSessionCallback) {
                Log.w(TAG, "onTuned - session not created");
                return;
            }
            mIsTuned = true;
            mCallback.onTuned(channelUri);
!!!28731959.java!!!	onSessionReleased(inout session : TvInputManager::Session) : void
            if (DEBUG) {
                Log.d(TAG, "onSessionReleased()");
            }
            if (this != mSessionCallback) {
                Log.w(TAG, "onSessionReleased - session not created");
                return;
            }
            mIsTuned = false;
            mIsRecordingStarted = false;
            mSessionCallback = null;
            mSession = null;
            if (mCallback != null) {
                mCallback.onDisconnected(mInputId);
            }
!!!28732087.java!!!	onRecordingStopped(inout session : TvInputManager::Session, inout recordedProgramUri : Uri) : void
            if (DEBUG) {
                Log.d(TAG, "onRecordingStopped(recordedProgramUri= " + recordedProgramUri + ")");
            }
            if (this != mSessionCallback) {
                Log.w(TAG, "onRecordingStopped - session not created");
                return;
            }
            mIsRecordingStarted = false;
            mCallback.onRecordingStopped(recordedProgramUri);
!!!28732215.java!!!	onError(inout session : TvInputManager::Session, in error : int) : void
            if (DEBUG) {
                Log.d(TAG, "onError(error=" + error + ")");
            }
            if (this != mSessionCallback) {
                Log.w(TAG, "onError - session not created");
                return;
            }
            mCallback.onError(error);
!!!28732343.java!!!	onSessionEvent(inout session : TvInputManager::Session, inout eventType : String, inout eventArgs : Bundle) : void
            if (DEBUG) {
                Log.d(TAG, "onSessionEvent(eventType=" + eventType + ", eventArgs=" + eventArgs
                        + ")");
            }
            if (this != mSessionCallback) {
                Log.w(TAG, "onSessionEvent - session not created");
                return;
            }
            if (mCallback != null) {
                mCallback.onEvent(mInputId, eventType, eventArgs);
            }
