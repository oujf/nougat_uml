class FilterPort
!!!28806583.java!!!	FilterPort(inout filter : Filter, inout name : String)
        mName = name;
        mFilter = filter;
        mLogVerbose = Log.isLoggable(TAG, Log.VERBOSE);
!!!28806711.java!!!	isAttached() : boolean
        return mFilter != null;
!!!28806839.java!!!	getPortFormat() : FrameFormat
        return mPortFormat;
!!!28806967.java!!!	setPortFormat(inout format : FrameFormat) : void
        mPortFormat = format;
!!!28807095.java!!!	getFilter() : Filter
        return mFilter;
!!!28807223.java!!!	getName() : String
        return mName;
!!!28807351.java!!!	setBlocking(inout blocking : boolean) : void
        mIsBlocking = blocking;
!!!28807479.java!!!	setChecksType(inout checksType : boolean) : void
        mChecksType = checksType;
!!!28807607.java!!!	open() : void
        if (!mIsOpen) {
            if (mLogVerbose) Log.v(TAG, "Opening " + this);
        }
        mIsOpen = true;
!!!28807735.java!!!	close() : void
        if (mIsOpen) {
            if (mLogVerbose) Log.v(TAG, "Closing " + this);
        }
        mIsOpen = false;
!!!28807863.java!!!	isOpen() : boolean
        return mIsOpen;
!!!28807991.java!!!	isBlocking() : boolean
        return mIsBlocking;
!!!28809015.java!!!	toString() : String
        return "port '" + mName + "' of " + mFilter;
!!!28809143.java!!!	assertPortIsOpen() : void
        if (!isOpen()) {
            throw new RuntimeException("Illegal operation on closed " + this + "!");
        }
!!!28809271.java!!!	checkFrameType(inout frame : Frame, inout forceCheck : boolean) : void
        if ((mChecksType || forceCheck)
            && mPortFormat != null
            && !frame.getFormat().isCompatibleWith(mPortFormat)) {
            throw new RuntimeException("Frame passed to " + this + " is of incorrect type! "
                + "Expected " + mPortFormat + " but got " + frame.getFormat());
        }
!!!28809399.java!!!	checkFrameManager(inout frame : Frame, inout context : FilterContext) : void
        if (frame.getFrameManager() != null
            && frame.getFrameManager() != context.getFrameManager()) {
            throw new RuntimeException("Frame " + frame + " is managed by foreign FrameManager! ");
        }
