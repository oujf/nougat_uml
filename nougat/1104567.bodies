class KeyValueMap
!!!28854455.java!!!	setKeyValues(inout  : Object...keyValues) : void
        if (keyValues.length % 2 != 0) {
            throw new RuntimeException("Key-Value arguments passed into setKeyValues must be "
            + "an alternating list of keys and values!");
        }
        for (int i = 0; i < keyValues.length; i += 2) {
            if (!(keyValues[i] instanceof String)) {
                throw new RuntimeException("Key-value argument " + i + " must be a key of type "
                    + "String, but found an object of type " + keyValues[i].getClass() + "!");
            }
            String key = (String)keyValues[i];
            Object value = keyValues[i+1];
            put(key, value);
        }
!!!28854583.java!!!	fromKeyValues(inout  : Object...keyValues) : KeyValueMap
        KeyValueMap result = new KeyValueMap();
        result.setKeyValues(keyValues);
        return result;
!!!28854711.java!!!	getString(inout key : String) : String
        Object result = get(key);
        return result != null ? (String)result : null;
!!!28854839.java!!!	getInt(inout key : String) : int
        Object result = get(key);
        return result != null ? (Integer)result : null;
!!!28854967.java!!!	getFloat(inout key : String) : float
        Object result = get(key);
        return result != null ? (Float)result : null;
!!!28855095.java!!!	toString() : String
        StringWriter writer = new StringWriter();
        for (Map.Entry<String, Object> entry : entrySet()) {
            String valueString;
            Object value = entry.getValue();
            if (value instanceof String) {
                valueString = "\"" + value + "\"";
            } else {
                valueString = value.toString();
            }
            writer.write(entry.getKey() + " = " + valueString + ";\n");
        }
        return writer.toString();
