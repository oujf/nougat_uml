class FilterSurfaceView
!!!28829879.java!!!	FilterSurfaceView(inout context : Context)
        super(context);
        getHolder().addCallback(this);
!!!28830007.java!!!	FilterSurfaceView(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        getHolder().addCallback(this);
!!!28830135.java!!!	bindToListener(inout listener : SurfaceHolder::Callback, inout glEnv : GLEnvironment) : void
        // Make sure we are not bound already
        if (listener == null) {
            throw new NullPointerException("Attempting to bind null filter to SurfaceView!");
        } else if (mListener != null && mListener != listener) {
            throw new RuntimeException(
                "Attempting to bind filter " + listener + " to SurfaceView with another open "
                + "filter " + mListener + " attached already!");
        }

        // Set listener
        mListener = listener;

        // Set GLEnv
        if (mGLEnv != null && mGLEnv != glEnv) {
            mGLEnv.unregisterSurfaceId(mSurfaceId);
        }
        mGLEnv = glEnv;

        // Check if surface has been created already
        if (mState >= STATE_CREATED) {
            // Register with env (double registration will be ignored by GLEnv, so we can simply
            // try to do it here).
            registerSurface();

            // Forward surface created to listener
            mListener.surfaceCreated(getHolder());

            // Forward surface changed to listener
            if (mState == STATE_INITIALIZED) {
                mListener.surfaceChanged(getHolder(), mFormat, mWidth, mHeight);
            }
        }
!!!28830263.java!!!	unbind() : void
        mListener = null;
!!!28830391.java!!!	getSurfaceId() : int
        return mSurfaceId;
!!!28830519.java!!!	getGLEnv() : GLEnvironment
        return mGLEnv;
!!!28830647.java!!!	surfaceCreated(inout holder : SurfaceHolder) : void
        mState = STATE_CREATED;

        // Register with GLEnvironment if we have it already
        if (mGLEnv != null) {
            registerSurface();
        }

        // Forward callback to listener
        if (mListener != null) {
            mListener.surfaceCreated(holder);
        }
!!!28830775.java!!!	surfaceChanged(inout holder : SurfaceHolder, in format : int, in width : int, in height : int) : void
        // Remember these values
        mFormat = format;
        mWidth = width;
        mHeight = height;
        mState = STATE_INITIALIZED;

        // Forward to renderer
        if (mListener != null) {
            mListener.surfaceChanged(holder, format, width, height);
        }
!!!28830903.java!!!	surfaceDestroyed(inout holder : SurfaceHolder) : void
        mState = STATE_ALLOCATED;

        // Forward to renderer
        if (mListener != null) {
            mListener.surfaceDestroyed(holder);
        }

        // Get rid of internal objects associated with this surface
        unregisterSurface();
!!!28831031.java!!!	registerSurface() : void
        mSurfaceId = mGLEnv.registerSurface(getHolder().getSurface());
        if (mSurfaceId < 0) {
            throw new RuntimeException("Could not register Surface: " + getHolder().getSurface() +
                                       " in FilterSurfaceView!");
        }
!!!28831159.java!!!	unregisterSurface() : void
        if (mGLEnv != null && mSurfaceId > 0) {
            mGLEnv.unregisterSurfaceId(mSurfaceId);
        }
