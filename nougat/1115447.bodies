class GrainFilter
!!!28924727.java!!!	GrainFilter(inout name : String)
        super(name);
        mRandom = new Random(new Date().getTime());
!!!28924855.java!!!	setupPorts() : void
        addMaskedInputPort("image", ImageFormat.create(ImageFormat.COLORSPACE_RGBA));
        addOutputBasedOnInput("image", "image");
!!!28924983.java!!!	getOutputFormat(inout portName : String, inout inputFormat : FrameFormat) : FrameFormat
        return inputFormat;
!!!28925111.java!!!	initProgram(inout context : FilterContext, in target : int) : void
        switch (target) {
            case FrameFormat.TARGET_GPU:
                ShaderProgram shaderProgram = new ShaderProgram(context, mNoiseShader);
                shaderProgram.setMaximumTileSize(mTileSize);
                mNoiseProgram = shaderProgram;

                shaderProgram = new ShaderProgram(context, mGrainShader);
                shaderProgram.setMaximumTileSize(mTileSize);
                mGrainProgram = shaderProgram;
                break;

            default:
                throw new RuntimeException("Filter Sharpen does not support frames of " +
                    "target " + target + "!");
        }
        mTarget = target;
!!!28925239.java!!!	updateParameters() : void
        float seed[] = { mRandom.nextFloat(), mRandom.nextFloat() };
        mNoiseProgram.setHostValue("seed", seed);

        mGrainProgram.setHostValue("scale", mScale);
!!!28925367.java!!!	updateFrameSize(in width : int, in height : int) : void
        mWidth = width;
        mHeight = height;

        if (mGrainProgram != null) {
            mGrainProgram.setHostValue("stepX", 0.5f / mWidth);
            mGrainProgram.setHostValue("stepY", 0.5f / mHeight);
            updateParameters();
        }
!!!28925495.java!!!	fieldPortValueUpdated(inout name : String, inout context : FilterContext) : void
        if (mGrainProgram != null && mNoiseProgram != null) {
            updateParameters();
        }
!!!28925623.java!!!	process(inout context : FilterContext) : void
        // Get input frame
        Frame input = pullInput("image");
        FrameFormat inputFormat = input.getFormat();

        FrameFormat noiseFormat = ImageFormat.create(inputFormat.getWidth() / 2,
                                                     inputFormat.getHeight() / 2,
                                                     ImageFormat.COLORSPACE_RGBA,
                                                     FrameFormat.TARGET_GPU);

        // Create noise frame
        Frame noiseFrame = context.getFrameManager().newFrame(inputFormat);

        // Create output frame
        Frame output = context.getFrameManager().newFrame(inputFormat);

        // Create program if not created already
        if (mNoiseProgram == null || mGrainProgram == null || inputFormat.getTarget() != mTarget) {
            initProgram(context, inputFormat.getTarget());
            updateParameters();
        }

        // Check if the frame size has changed
        if (inputFormat.getWidth() != mWidth || inputFormat.getHeight() != mHeight) {
            updateFrameSize(inputFormat.getWidth(), inputFormat.getHeight());
        }

        Frame[] empty = {};
        mNoiseProgram.process(empty, noiseFrame);

        // Process
        Frame[] inputs = {input, noiseFrame};
        mGrainProgram.process(inputs, output);

        // Push output
        pushOutput("image", output);

        // Release pushed frame
        output.release();
        noiseFrame.release();
