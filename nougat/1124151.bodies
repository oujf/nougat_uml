class SimplePlayer
!!!28985271.java!!!	SimplePlayer(inout context : Context, in playPausebuttonId : int, inout playPausebutton : ImageView, in stopButtonId : int, inout stopButton : ImageView, inout sessionText : TextView, inout fileName : String, in stream : int, in session : int)
        set(context, playPausebuttonId, playPausebutton, stopButtonId, stopButton, sessionText, stream, session);
        mFileName = fileName;
!!!28985399.java!!!	SimplePlayer(inout context : Context, in playPausebuttonId : int, inout playPausebutton : ImageView, in stopButtonId : int, inout stopButton : ImageView, inout sessionText : TextView, in fileResId : int, in stream : int, in session : int)
        set(context, playPausebuttonId, playPausebutton, stopButtonId, stopButton, sessionText, stream, session);
        mFileResId = fileResId;
        mFileName = "";
!!!28985527.java!!!	set(inout context : Context, in playPausebuttonId : int, inout playPausebutton : ImageView, in stopButtonId : int, inout stopButton : ImageView, inout sessionText : TextView, in stream : int, in session : int) : void
        mContext = context;
        mPlayPauseButtonId = playPausebuttonId;
        mStopButtonId = stopButtonId;
        mPlayPauseButton = (ImageButton) playPausebutton;
        ImageButton stop = (ImageButton) stopButton;

        mPlayPauseButton.setOnClickListener(this);
        mPlayPauseButton.requestFocus();
        stop.setOnClickListener(this);

        mPlayImageResource = android.R.drawable.ic_media_play;
        mPauseImageResource = android.R.drawable.ic_media_pause;
        mStreamType = stream;
        mSession = session;
        mSessionText = sessionText;
!!!28985655.java!!!	onClick(inout v : View) : void
        if (v.getId() == mPlayPauseButtonId) {
            playOrPause();
        } else if (v.getId() == mStopButtonId) {
            stop();
        }
!!!28985783.java!!!	playOrPause() : void
        if (mMediaPlayer == null || !mMediaPlayer.isPlaying()){
              if (mMediaPlayer == null) {
                  try {
                      mMediaPlayer = new MediaPlayer();
                      if (mSession != 0) {
                          mMediaPlayer.setAudioSessionId(mSession);
                          Log.d(TAG, "mMediaPlayer.setAudioSessionId(): "+ mSession);
                      }

                      if (mFileName.equals("")) {
                          Log.d(TAG, "Playing from resource");
                          AssetFileDescriptor afd = mContext.getResources().openRawResourceFd(mFileResId);
                          mMediaPlayer.setDataSource(afd.getFileDescriptor(), afd.getStartOffset(), afd.getLength());
                          afd.close();
                      } else {
                          Log.d(TAG, "Playing file: "+mFileName);
                          mMediaPlayer.setDataSource(mFileName);
                      }
                      mMediaPlayer.setAudioStreamType(mStreamType);
                      mMediaPlayer.prepare();
                      mMediaPlayer.setLooping(true);
                  } catch (IOException ex) {
                      Log.e(TAG, "mMediaPlayercreate failed:", ex);
                      mMediaPlayer = null;
                  } catch (IllegalArgumentException ex) {
                      Log.e(TAG, "mMediaPlayercreate failed:", ex);
                      mMediaPlayer = null;
                  } catch (SecurityException ex) {
                      Log.e(TAG, "mMediaPlayercreate failed:", ex);
                      mMediaPlayer = null;
                  }

                  if (mMediaPlayer != null) {
                      mMediaPlayer.setAuxEffectSendLevel(mSendLevel);
                      mMediaPlayer.attachAuxEffect(mEffectId);
                      mMediaPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
                          public void onCompletion(MediaPlayer mp) {
                              updatePlayPauseButton();
                          }
                      });
                      mSessionText.setText("Session: "+Integer.toString(mMediaPlayer.getAudioSessionId()));
                  }
              }
              if (mMediaPlayer != null) {
                  mMediaPlayer.start();
              }
          } else {
              mMediaPlayer.pause();
          }
          updatePlayPauseButton();
!!!28985911.java!!!	stop() : void
      if (mMediaPlayer != null) {
          mMediaPlayer.stop();
          mMediaPlayer.release();
          mMediaPlayer = null;
      }
      updatePlayPauseButton();
!!!28986039.java!!!	isPlaying() : boolean
        if (mMediaPlayer != null) {
            return mMediaPlayer.isPlaying();
        } else {
            return false;
        }
!!!28986167.java!!!	updatePlayPauseButton() : void
        mPlayPauseButton.setImageResource(isPlaying() ? mPauseImageResource : mPlayImageResource);
!!!28986295.java!!!	attachAuxEffect(in effectId : int) : void
        mEffectId = effectId;
        if (mMediaPlayer != null) {
            Log.d(TAG,"attach effect: "+effectId);
            mMediaPlayer.attachAuxEffect(effectId);
        }
!!!28986423.java!!!	setAuxEffectSendLevel(in level : float) : void
        mSendLevel = level;
        if (mMediaPlayer != null) {
            mMediaPlayer.setAuxEffectSendLevel(level);
        }
!!!28986551.java!!!	setContext(inout context : Context) : void
        mContext = context;
