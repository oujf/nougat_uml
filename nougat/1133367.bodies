class MediaProfileReader
!!!29018295.java!!!	getVideoEncoders() : EncoderCapabilities::VideoEncoderCap
        return videoEncoders;
!!!29018423.java!!!	getAudioEncoders() : EncoderCapabilities::AudioEncoderCap
        return audioEncoders;
!!!29018551.java!!!	getDeviceType() : String
        // push all the property into one big table
        String s;
        s = SystemProperties.get("ro.product.name");
        return s;
!!!29018679.java!!!	getWMAEnable() : boolean
        for (AudioDecoder decoder: audioDecoders) {
            if (decoder == AudioDecoder.AUDIO_DECODER_WMA) {
                return true;
            }
        }
        return false;
!!!29018807.java!!!	getWMVEnable() : boolean
        for (VideoDecoder decoder: videoDecoders) {
            if (decoder == VideoDecoder.VIDEO_DECODER_WMV) {
                return true;
            }
        }
        return false;
!!!29018935.java!!!	getVideoCodecName(in videoEncoder : int) : String
        if (videoEncoder != MediaRecorder.VideoEncoder.H263 &&
            videoEncoder != MediaRecorder.VideoEncoder.H264 &&
            videoEncoder != MediaRecorder.VideoEncoder.MPEG_4_SP) {
            throw new IllegalArgumentException("Unsupported video encoder " + videoEncoder);
        }
        return videoEncoderMap.get(videoEncoder);
!!!29019063.java!!!	getAudioCodecName(in audioEncoder : int) : String
        if (audioEncoder != MediaRecorder.AudioEncoder.AMR_NB &&
            audioEncoder != MediaRecorder.AudioEncoder.AMR_WB &&
            audioEncoder != MediaRecorder.AudioEncoder.AAC &&
            audioEncoder != MediaRecorder.AudioEncoder.HE_AAC &&
            audioEncoder != MediaRecorder.AudioEncoder.AAC_ELD) {
            throw new IllegalArgumentException("Unsupported audio encodeer " + audioEncoder);
        }
        return audioEncoderMap.get(audioEncoder);
!!!29019191.java!!!	getMinFrameRateForCodec(in codec : int) : int
        return getMinOrMaxFrameRateForCodec(codec, false);
!!!29019319.java!!!	getMaxFrameRateForCodec(in codec : int) : int
        return getMinOrMaxFrameRateForCodec(codec, true);
!!!29019447.java!!!	getMinOrMaxFrameRateForCodec(in codec : int, inout max : boolean) : int
        for (VideoEncoderCap cap: videoEncoders) {
            if (cap.mCodec == codec) {
                if (max) return cap.mMaxFrameRate;
                else return cap.mMinFrameRate;
            }
        }
        // Should never reach here
        throw new IllegalArgumentException("Unsupported video codec " + codec);
!!!29019703.java!!!	initVideoEncoderMap() : void
        // video encoders
        videoEncoderMap.put(MediaRecorder.VideoEncoder.H263, "h263");
        videoEncoderMap.put(MediaRecorder.VideoEncoder.H264, "h264");
        videoEncoderMap.put(MediaRecorder.VideoEncoder.MPEG_4_SP, "m4v");
!!!29019831.java!!!	initAudioEncoderMap() : void
        // audio encoders
        audioEncoderMap.put(MediaRecorder.AudioEncoder.AMR_NB, "amrnb");
        audioEncoderMap.put(MediaRecorder.AudioEncoder.AMR_WB, "amrwb");
        audioEncoderMap.put(MediaRecorder.AudioEncoder.AAC, "aac");
        audioEncoderMap.put(MediaRecorder.AudioEncoder.HE_AAC, "heaac");
        audioEncoderMap.put(MediaRecorder.AudioEncoder.AAC_ELD, "aaceld");
