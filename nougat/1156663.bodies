class NfcExecutionEnvironment
!!!29193399.java!!!	NfcExecutionEnvironment(inout extras : NfcAdapterExtras)
        mExtras = extras;
        mToken = new Binder();
!!!29193527.java!!!	open() : void
        try {
            Bundle b = mExtras.getService().open(mExtras.mPackageName, mToken);
            throwBundle(b);
        } catch (RemoteException e) {
            mExtras.attemptDeadServiceRecovery(e);
            throw new EeIOException("NFC Service was dead, try again");
        }
!!!29193655.java!!!	close() : void
        try {
            throwBundle(mExtras.getService().close(mExtras.mPackageName, mToken));
        } catch (RemoteException e) {
            mExtras.attemptDeadServiceRecovery(e);
            throw new IOException("NFC Service was dead");
        }
!!!29193783.java!!!	transceive(inout in : byte) : byte
        Bundle b;
        try {
            b = mExtras.getService().transceive(mExtras.mPackageName, in);
        } catch (RemoteException e) {
            mExtras.attemptDeadServiceRecovery(e);
            throw new IOException("NFC Service was dead, need to re-open");
        }
        throwBundle(b);
        return b.getByteArray("out");
!!!29193911.java!!!	throwBundle(inout b : Bundle) : void
        switch (b.getInt("e")) {
            case EE_ERROR_NFC_DISABLED:
                throw new EeNfcDisabledException(b.getString("m"));
            case EE_ERROR_IO:
                throw new EeIOException(b.getString("m"));
            case EE_ERROR_INIT:
                throw new EeInitializationException(b.getString("m"));
            case EE_ERROR_EXT_FIELD:
                throw new EeExternalFieldException(b.getString("m"));
            case EE_ERROR_LISTEN_MODE:
                throw new EeListenModeException(b.getString("m"));
            case EE_ERROR_ALREADY_OPEN:
                throw new EeAlreadyOpenException(b.getString("m"));
        }
