class RootsListBot
!!!29789751.java!!!	RootsListBot(inout device : UiDevice, inout context : Context, in timeout : int)
        super(device, context, timeout);
!!!29789879.java!!!	findRoot(inout label : String) : UiObject
        final UiSelector rootsList = new UiSelector().resourceId(
                "com.android.documentsui:id/container_roots").childSelector(
                new UiSelector().resourceId(ROOTS_LIST_ID));

        // We might need to expand drawer if not visible
        if (!new UiObject(rootsList).waitForExists(mTimeout)) {
            Log.d(TAG, "Failed to find roots list; trying to expand");
            final UiSelector hamburger = new UiSelector().resourceId(
                    "com.android.documentsui:id/toolbar").childSelector(
                    new UiSelector().className("android.widget.ImageButton").clickable(true));
            new UiObject(hamburger).click();
        }

        // Wait for the first list item to appear
        new UiObject(rootsList.childSelector(new UiSelector())).waitForExists(mTimeout);

        // Now scroll around to find our item
        new UiScrollable(rootsList).scrollIntoView(new UiSelector().text(label));
        return new UiObject(rootsList.childSelector(new UiSelector().text(label)));
!!!29790007.java!!!	openRoot(inout label : String) : void
        findRoot(label).click();
        mDevice.waitForIdle();
!!!29790135.java!!!	assertRootsPresent(inout  : String...labels) : void
        List<String> missing = new ArrayList<>();
        for (String label : labels) {
            if (!findRoot(label).exists()) {
                missing.add(label);
            }
        }
        if (!missing.isEmpty()) {
            Assert.fail(
                    "Expected roots " + Arrays.asList(labels) + ", but missing " + missing);
        }
!!!29790263.java!!!	assertRootsAbsent(inout  : String...labels) : void
        List<String> unexpected = new ArrayList<>();
        for (String label : labels) {
            if (findRoot(label).exists()) {
                unexpected.add(label);
            }
        }
        if (!unexpected.isEmpty()) {
            Assert.fail("Unexpected roots " + unexpected);
        }
!!!29790391.java!!!	assertHasFocus() : void
        assertHasFocus(ROOTS_LIST_ID);
