class StressProvider
!!!29515959.java!!!	attachInfo(inout context : Context, inout info : ProviderInfo) : void
        mAuthority = info.authority;
        super.attachInfo(context, info);
!!!29516087.java!!!	onCreate() : boolean
        StubDocument document;

        ArrayList<StubDocument> children = new ArrayList<StubDocument>();
        mChildDocuments.put(STRESS_ROOT_1_DOC_ID, children);
        for (int i = 0; i < STRESS_ROOT_1_ITEMS; i++) {
            document = StubDocument.createDirectory(i);
            mDocuments.put(document.id, document);
            children.add(document);
        }

        children = new ArrayList<StubDocument>();
        mChildDocuments.put(STRESS_ROOT_2_DOC_ID, children);
        for (int i = 0; i < STRESS_ROOT_2_ITEMS; i++) {
            try {
                document = StubDocument.createFile(
                        getContext(), MIME_TYPE_IMAGE,
                        com.android.documentsui.perftests.R.raw.earth_small,
                        STRESS_ROOT_1_ITEMS + i);
            } catch (IOException e) {
                return false;
            }
            mDocuments.put(document.id, document);
            children.add(document);
        }

        mRoots.put(STRESS_ROOT_0_ID, new StubRoot(STRESS_ROOT_0_ID, STRESS_ROOT_0_DOC_ID));
        mRoots.put(STRESS_ROOT_1_ID, new StubRoot(STRESS_ROOT_1_ID, STRESS_ROOT_1_DOC_ID));
        mRoots.put(STRESS_ROOT_2_ID, new StubRoot(STRESS_ROOT_2_ID, STRESS_ROOT_2_DOC_ID));

        mDocuments.put(STRESS_ROOT_0_DOC_ID, StubDocument.createDirectory(STRESS_ROOT_0_DOC_ID));
        mDocuments.put(STRESS_ROOT_1_DOC_ID, StubDocument.createDirectory(STRESS_ROOT_1_DOC_ID));
        mDocuments.put(STRESS_ROOT_2_DOC_ID, StubDocument.createDirectory(STRESS_ROOT_2_DOC_ID));

        return true;
!!!29516215.java!!!	queryRoots(inout projection : String) : Cursor
        final MatrixCursor result = new MatrixCursor(DEFAULT_ROOT_PROJECTION);
        for (StubRoot root : mRoots.values()) {
            includeRoot(result, root);
        }
        return result;
!!!29516343.java!!!	queryDocument(inout documentId : String, inout projection : String) : Cursor
        final MatrixCursor result = new MatrixCursor(DEFAULT_DOCUMENT_PROJECTION);
        final StubDocument document = mDocuments.get(documentId);
        includeDocument(result, document);
        return result;
!!!29516471.java!!!	queryChildDocuments(inout parentDocumentId : String, inout projection : String, inout sortOrder : String) : Cursor
        final MatrixCursor result = new MatrixCursor(DEFAULT_DOCUMENT_PROJECTION);
        final ArrayList<StubDocument> childDocuments = mChildDocuments.get(parentDocumentId);
        if (childDocuments != null) {
            for (StubDocument document : childDocuments) {
                includeDocument(result, document);
            }
        }
        return result;
!!!29516599.java!!!	openDocumentThumbnail(inout docId : String, inout sizeHint : Point, inout signal : CancellationSignal) : AssetFileDescriptor
        final StubDocument document = mDocuments.get(docId);
        return getContext().getResources().openRawResourceFd(document.thumbnail);
!!!29516727.java!!!	openDocument(inout docId : String, inout mode : String, inout signal : CancellationSignal) : ParcelFileDescriptor
        throw new UnsupportedOperationException();
!!!29516855.java!!!	includeRoot(inout result : MatrixCursor, inout root : StressProvider::StubRoot) : void
        final RowBuilder row = result.newRow();
        row.add(Root.COLUMN_ROOT_ID, root.id);
        row.add(Root.COLUMN_FLAGS, 0);
        row.add(Root.COLUMN_TITLE, root.id);
        row.add(Root.COLUMN_DOCUMENT_ID, root.documentId);
!!!29516983.java!!!	includeDocument(inout result : MatrixCursor, inout document : StressProvider::StubDocument) : void
        final RowBuilder row = result.newRow();
        row.add(Document.COLUMN_DOCUMENT_ID, document.id);
        row.add(Document.COLUMN_DISPLAY_NAME, document.id);
        row.add(Document.COLUMN_SIZE, document.size);
        row.add(Document.COLUMN_MIME_TYPE, document.mimeType);
        row.add(Document.COLUMN_FLAGS,
                document.thumbnail != -1 ? Document.FLAG_SUPPORTS_THUMBNAIL : 0);
        row.add(Document.COLUMN_LAST_MODIFIED, document.lastModified);
!!!29517111.java!!!	getStubDocumentIdForFile(inout file : File) : String
        return file.getAbsolutePath();
