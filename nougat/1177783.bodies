class MessageBar
!!!29582775.java!!!	create(inout fm : FragmentManager) : MessageBar
        final MessageBar fragment = new MessageBar();

        final FragmentTransaction ft = fm.beginTransaction();
        ft.replace(R.id.container_message_bar, fragment);
        ft.commitAllowingStateLoss();

        return fragment;
!!!29582903.java!!!	setInfo(inout info : String) : void
        View infoContainer = mView.findViewById(R.id.container_info);
        if (info != null) {
            TextView infoText = (TextView) mView.findViewById(R.id.textview_info);
            infoText.setText(info);
            infoContainer.setVisibility(View.VISIBLE);
        } else {
            infoContainer.setVisibility(View.GONE);
        }
!!!29583031.java!!!	setError(inout error : String) : void
        View errorView = mView.findViewById(R.id.container_error);
        if (error != null) {
            TextView errorText = (TextView) mView.findViewById(R.id.textview_error);
            errorText.setText(error);
            errorView.setVisibility(View.VISIBLE);
        } else {
            errorView.setVisibility(View.GONE);
        }
!!!29583159.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View

        mView = inflater.inflate(R.layout.fragment_message_bar, container, false);

        ImageView infoIcon = (ImageView) mView.findViewById(R.id.icon_info);
        infoIcon.setImageResource(R.drawable.ic_dialog_info);

        ImageView errorIcon = (ImageView) mView.findViewById(R.id.icon_error);
        errorIcon.setImageResource(R.drawable.ic_dialog_alert);

        Button dismiss = (Button) mView.findViewById(R.id.button_dismiss);
        dismiss.setOnClickListener(
                new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        hide();
                    }
                });

        mContainer = container;

        return mView;
!!!29583287.java!!!	hide() : void
        // The container view is used to show/hide the error bar. If a container is not provided,
        // fall back to showing/hiding the error bar View, which also works, but does not provide
        // the same animated transition.
        if (mContainer != null) {
            mContainer.setVisibility(View.GONE);
        } else {
            mView.setVisibility(View.GONE);
        }
!!!29583415.java!!!	show() : void
        // The container view is used to show/hide the error bar. If a container is not provided,
        // fall back to showing/hiding the error bar View, which also works, but does not provide
        // the same animated transition.
        if (mContainer != null) {
            mContainer.setVisibility(View.VISIBLE);
        } else {
            mView.setVisibility(View.VISIBLE);
        }
