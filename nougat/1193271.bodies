class FilesTuner
!!!29708599.java!!!	FilesTuner(inout context : Context, inout state : State)
            super(context, state);
!!!29708727.java!!!	updateActionMenu(inout menu : Menu, inout selection : FragmentTuner::SelectionDetails) : void

            menu.findItem(R.id.menu_open).setVisible(false);  // "open" is never used in Files.

            // Commands accessible only via keyboard...
            MenuItem copy = menu.findItem(R.id.menu_copy_to_clipboard);
            MenuItem paste = menu.findItem(R.id.menu_paste_from_clipboard);

            // Commands visible in the UI...
            MenuItem rename = menu.findItem(R.id.menu_rename);
            MenuItem moveTo = menu.findItem(R.id.menu_move_to);
            MenuItem copyTo = menu.findItem(R.id.menu_copy_to);
            MenuItem share = menu.findItem(R.id.menu_share);
            MenuItem delete = menu.findItem(R.id.menu_delete);

            // copy is not visible, keyboard only
            copy.setEnabled(!selection.containsPartialFiles());

            // Commands usually on action-bar, so we always manage visibility.
            share.setVisible(!selection.containsDirectories() && !selection.containsPartialFiles());
            delete.setVisible(selection.canDelete());

            share.setEnabled(!selection.containsDirectories() && !selection.containsPartialFiles());
            delete.setEnabled(selection.canDelete());

            // Commands always in overflow, so we don't bother showing/hiding...
            copyTo.setVisible(true);
            moveTo.setVisible(true);
            rename.setVisible(true);

            copyTo.setEnabled(!selection.containsPartialFiles());
            moveTo.setEnabled(!selection.containsPartialFiles() && selection.canDelete());
            rename.setEnabled(!selection.containsPartialFiles() && selection.canRename());

            Menus.disableHiddenItems(menu, copy, paste);
!!!29708855.java!!!	onModelLoaded(inout model : Model, in resultType : int, inout isSearch : boolean) : void
            // When launched into empty root, open drawer.
            if (model.isEmpty() && !mState.hasInitialLocationChanged() && !isSearch
                    && !mModelPreviousLoaded) {
                // This noops on layouts without drawer, so no need to guard.
                ((BaseActivity) mContext).setRootsDrawerOpen(true);
            }
            mModelPreviousLoaded = true;
!!!29708983.java!!!	managedModeEnabled() : boolean
            // When in downloads top level directory, we also show active downloads.
            // And while we don't allow folders in Downloads, we do allow Zip files in
            // downloads that themselves can be opened and viewed like directories.
            // This method helps us understand when to kick in on those special behaviors.
            return mState.stack.root != null
                    && mState.stack.root.isDownloads()
                    && mState.stack.size() == 1;
!!!29709111.java!!!	dragAndDropEnabled() : boolean
            return true;
