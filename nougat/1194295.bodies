class DirectoryItemAnimator
!!!29729335.java!!!	DirectoryItemAnimator(inout context : Context)
        mDefaultColor = context.getResources().getColor(R.color.item_doc_background);
        mSelectedColor = context.getResources().getColor(R.color.item_doc_background_selected);
!!!29729463.java!!!	runPendingAnimations() : void
        super.runPendingAnimations();
        for (ColorAnimation anim: mPendingAnimations) {
            anim.start();
            mRunningAnimations.put(anim.viewHolder, anim);
        }
        mPendingAnimations.clear();
!!!29729591.java!!!	endAnimation(inout vh : RecyclerView::ViewHolder) : void
        super.endAnimation(vh);

        for (int i = mPendingAnimations.size() - 1; i >= 0; --i) {
            ColorAnimation anim = mPendingAnimations.get(i);
            if (anim.viewHolder == vh) {
                mPendingAnimations.remove(i);
                anim.end();
            }
        }

        ColorAnimation anim = mRunningAnimations.get(vh);
        if (anim != null) {
            anim.cancel();
        }
!!!29729719.java!!!	recordPreLayoutInformation(inout state : RecyclerView::State, inout viewHolder : RecyclerView::ViewHolder, in changeFlags : int, inout payloads : List<Object>) : ItemHolderInfo
        ItemInfo info = (ItemInfo) super.recordPreLayoutInformation(state,
                viewHolder, changeFlags, payloads);
        info.isActivated = viewHolder.itemView.isActivated();
        return info;
!!!29729847.java!!!	recordPostLayoutInformation(inout state : RecyclerView::State, inout viewHolder : RecyclerView::ViewHolder) : ItemHolderInfo
        ItemInfo info = (ItemInfo) super.recordPostLayoutInformation(state,
                viewHolder);
        info.isActivated = viewHolder.itemView.isActivated();
        return info;
!!!29729975.java!!!	animateChange(in oldHolder : RecyclerView::ViewHolder, inout newHolder : RecyclerView::ViewHolder, inout preInfo : ItemHolderInfo, inout postInfo : ItemHolderInfo) : boolean
        if (oldHolder != newHolder) {
            return super.animateChange(oldHolder, newHolder, preInfo, postInfo);
        }

        ItemInfo pre = (ItemInfo)preInfo;
        ItemInfo post = (ItemInfo)postInfo;

        if (pre.isActivated == post.isActivated) {
            dispatchAnimationFinished(oldHolder);
            return false;
        } else {
            Integer startColor = pre.isActivated ? mSelectedColor : mDefaultColor;
            Integer endColor = post.isActivated ? mSelectedColor : mDefaultColor;
            oldHolder.itemView.setBackgroundColor(startColor);
            mPendingAnimations.add(new ColorAnimation(oldHolder, startColor, endColor));
        }
        return true;
!!!29730103.java!!!	obtainHolderInfo() : ItemHolderInfo
        return new ItemInfo();
!!!29730231.java!!!	canReuseUpdatedViewHolder(inout vh : RecyclerView::ViewHolder) : boolean
        return true;
