class MtpManagerTest
!!!29979063.java!!!	setUp() : void
        mUsbManager = getContext().getSystemService(UsbManager.class);
        mManager = new MtpManager(getContext());
        mUsbDevice = TestUtil.setupMtpDevice(getInstrumentation(), mUsbManager, mManager);
!!!29979191.java!!!	tearDown() : void
        mManager.closeDevice(mUsbDevice.getDeviceId());
!!!29979319.java!!!	getInstrumentation() : TestResultInstrumentation
        return (TestResultInstrumentation) super.getInstrumentation();
!!!29979447.java!!!	testCancelEvent() : void
        final CancellationSignal signal = new CancellationSignal();
        final FutureTask<Boolean> future = new FutureTask<Boolean>(
                new Callable<Boolean>() {
                    @Override
                    public Boolean call() throws IOException {
                        try {
                            while (true) {
                                mManager.readEvent(mUsbDevice.getDeviceId(), signal);
                            }
                        } catch (OperationCanceledException exception) {
                            return true;
                        }
                    }
                });
        final Thread thread = new Thread(future);
        thread.start();
        SystemClock.sleep(TIMEOUT_MS);
        signal.cancel();
        assertTrue(future.get(TIMEOUT_MS, TimeUnit.MILLISECONDS));
!!!29979575.java!!!	testOperationsSupported() : void
        final MtpDeviceRecord[] records = mManager.getDevices();
        assertEquals(1, records.length);
        assertNotNull(records[0].operationsSupported);
        getInstrumentation().show(Arrays.toString(records[0].operationsSupported));
!!!29979703.java!!!	testEventsSupported() : void
        final MtpDeviceRecord[] records = mManager.getDevices();
        assertEquals(1, records.length);
        assertNotNull(records[0].eventsSupported);
        getInstrumentation().show(Arrays.toString(records[0].eventsSupported));
!!!29979831.java!!!	testDeviceKey() : void
        final MtpDeviceRecord[] records = mManager.getDevices();
        assertEquals(1, records.length);
        assertNotNull(records[0].deviceKey);
        getInstrumentation().show("deviceKey: " + records[0].deviceKey);
!!!29979959.java!!!	testEventObjectAdded() : void
        while (true) {
            getInstrumentation().show("Please take a photo by using connected MTP device.");
            final CancellationSignal signal = new CancellationSignal();
            MtpEvent event = mManager.readEvent(mUsbDevice.getDeviceId(), signal);
            if (event.getEventCode() != MtpConstants.EVENT_OBJECT_ADDED) {
                continue;
            }
            assertTrue(event.getObjectHandle() != 0);
            break;
        }
!!!29980087.java!!!	testCreateDocumentAndGetPartialObject() : void
        int storageId = 0;
        for (final MtpDeviceRecord record : mManager.getDevices()) {
            if (record.deviceId == mUsbDevice.getDeviceId()) {
                storageId = record.roots[0].mStorageId;
                break;
            }
        }
        assertTrue("Valid storage not found.", storageId != 0);

        final String testFileName = "MtpManagerTest_testFile.txt";
        for (final int handle : mManager.getObjectHandles(
                mUsbDevice.getDeviceId(), storageId, MtpManager.OBJECT_HANDLE_ROOT_CHILDREN)) {
            if (mManager.getObjectInfo(mUsbDevice.getDeviceId(), handle)
                    .getName().equals(testFileName)) {
                mManager.deleteDocument(mUsbDevice.getDeviceId(), handle);
                break;
            }
        }

        final ParcelFileDescriptor[] fds = ParcelFileDescriptor.createPipe();
        final byte[] expectedBytes = "Hello Android!".getBytes("ascii");
        try (final ParcelFileDescriptor.AutoCloseOutputStream stream =
                new ParcelFileDescriptor.AutoCloseOutputStream(fds[1])) {
            stream.write(expectedBytes);
        }
        final int objectHandle = mManager.createDocument(
                mUsbDevice.getDeviceId(),
                new MtpObjectInfo.Builder()
                        .setStorageId(storageId)
                        .setName(testFileName)
                        .setCompressedSize(expectedBytes.length)
                        .setFormat(MtpConstants.FORMAT_TEXT)
                        .build(),
                fds[0]);
        final byte[] bytes = new byte[100];
        assertEquals(5, mManager.getPartialObject(
                mUsbDevice.getDeviceId(), objectHandle, 0, 5, bytes));
        assertEquals("Hello", new String(bytes, 0, 5, "ascii"));
        assertEquals(8, mManager.getPartialObject(
                mUsbDevice.getDeviceId(), objectHandle, 6, 100, bytes));
        assertEquals("Android!", new String(bytes, 0, 8, "ascii"));
!!!29980215.java!!!	getContext() : Context
        return getInstrumentation().getContext();
