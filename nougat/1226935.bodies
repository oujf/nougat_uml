class OSUService
!!!29989943.java!!!	OSUService()
            super("OSUService");
!!!29990071.java!!!	onStartCommand(inout intent : Intent, in flags : int, in startId : int) : int
            onHandleIntent(intent);
            return START_STICKY;
!!!29990199.java!!!	onCreate() : void
            super.onCreate();
            Log.d("YYY", String.format("Service %x running, OSU %x",
                    System.identityHashCode(this), System.identityHashCode(mOsuManager)));
            if (mOsuManager == null) {
                mOsuManager = new OSUManager(this);
            }
            sOsuService = this;
!!!29990327.java!!!	onDestroy() : void
            super.onDestroy();
            Log.d("YYY", String.format("Service %x killed", System.identityHashCode(this)));
!!!29990455.java!!!	onBind(inout intent : Intent) : IBinder
            return mBinder;
!!!29990583.java!!!	onHandleIntent(inout intent : Intent) : void
            Bundle bundle = intent.getExtras();
            WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);
            Log.d(OSUManager.TAG, "OSU Service got intent: " + intent.getStringExtra(ACTION_KEY));
            switch (intent.getStringExtra(ACTION_KEY)) {
                case WifiManager.SCAN_RESULTS_AVAILABLE_ACTION:
                    mOsuManager.pushScanResults(wifiManager.getScanResults());
                    break;
                case WifiManager.PASSPOINT_WNM_FRAME_RECEIVED_ACTION:
                    long bssid = bundle.getLong(WifiManager.EXTRA_PASSPOINT_WNM_BSSID);
                    String url = bundle.getString(WifiManager.EXTRA_PASSPOINT_WNM_URL);

                    try {
                        if (bundle.containsKey(WifiManager.EXTRA_PASSPOINT_WNM_METHOD)) {
                            int method = bundle.getInt(WifiManager.EXTRA_PASSPOINT_WNM_METHOD);
                            if (method != OSUProvider.OSUMethod.SoapXml.ordinal()) {
                                Log.w(OSUManager.TAG, "Unsupported remediation method: " + method);
                            }
                            PasspointMatch match = null;
                            if (bundle.containsKey(WifiManager.EXTRA_PASSPOINT_WNM_PPOINT_MATCH)) {
                                int ordinal =
                                        bundle.getInt(WifiManager.EXTRA_PASSPOINT_WNM_PPOINT_MATCH);
                                if (ordinal >= 0 && ordinal < PasspointMatch.values().length) {
                                    match = PasspointMatch.values()[ordinal];
                                }
                            }
                            mOsuManager.wnmRemediate(bssid, url, match);
                        } else if (bundle.containsKey(WifiManager.EXTRA_PASSPOINT_WNM_ESS)) {
                            boolean ess = bundle.getBoolean(WifiManager.EXTRA_PASSPOINT_WNM_ESS);
                            int delay = bundle.getInt(WifiManager.EXTRA_PASSPOINT_WNM_DELAY);
                            mOsuManager.deauth(bssid, ess, delay, url);
                        } else {
                            Log.w(OSUManager.TAG, "Unknown WNM event");
                        }
                    } catch (IOException | SAXException e) {
                        Log.w(OSUManager.TAG, "Remediation event failed to parse: " + e);
                    }
                    break;
                case WifiManager.PASSPOINT_ICON_RECEIVED_ACTION:
                    mOsuManager.notifyIconReceived(
                            bundle.getLong(WifiManager.EXTRA_PASSPOINT_ICON_BSSID),
                            bundle.getString(WifiManager.EXTRA_PASSPOINT_ICON_FILE),
                            bundle.getByteArray(WifiManager.EXTRA_PASSPOINT_ICON_DATA));
                    break;
                case WifiManager.CONFIGURED_NETWORKS_CHANGED_ACTION:
                    mOsuManager.networkConfigChange((WifiConfiguration)
                            intent.getParcelableExtra(WifiManager.EXTRA_WIFI_CONFIGURATION));
                    break;
                case WifiManager.WIFI_STATE_CHANGED_ACTION:
                    int state = bundle.getInt(WifiManager.EXTRA_WIFI_STATE);
                    if (state == WifiManager.WIFI_STATE_DISABLED) {
                        mOsuManager.wifiStateChange(false);
                    } else if (state == WifiManager.WIFI_STATE_ENABLED) {
                        mOsuManager.wifiStateChange(true);
                    }
                    break;
                case WifiManager.NETWORK_STATE_CHANGED_ACTION:
                    mOsuManager.networkConnectEvent((WifiInfo)
                            intent.getParcelableExtra(WifiManager.EXTRA_WIFI_INFO));
                    break;
            }
!!!29990711.java!!!	getOsuInfos() : OSUInfo
            return mOsuManager.getAvailableOSUs();
!!!29990839.java!!!	selectOsu(in id : int) : void
            mOsuManager.setOSUSelection(id);
