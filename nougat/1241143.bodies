class SOAPBuilder
!!!30071863.java!!!	buildPostDevDataResponse(inout reason : RequestReason, inout sessionID : String, inout redirURI : String, inout  : MOTree...mos) : String
        XMLNode envelope = buildEnvelope();
        buildSppPostDevData(envelope.getChildren().get(0), sessionID, reason, redirURI, mos);
        return envelope.toString();
!!!30071991.java!!!	buildUpdateResponse(inout sessionID : String, inout error : OSUError) : String
        XMLNode envelope = buildEnvelope();
        buildSppUpdateResponse(envelope.getChildren().get(0), sessionID, error);
        return envelope.toString();
!!!30072119.java!!!	buildEnvelope() : XMLNode
        XMLNode envelope = new XMLNode(null, EnvelopeTag, sEnvelopeAttributes);
        envelope.addChild(new XMLNode(envelope, BodyTag, (Map<String, String>) null));
        return envelope;
!!!30072247.java!!!	buildSppPostDevData(inout parent : XMLNode, inout sessionID : String, inout reason : RequestReason, inout redirURI : String, inout  : MOTree...mos) : XMLNode
        Map<String, String> pddAttributes = new HashMap<>();
        pddAttributes.put(OMAConstants.TAG_Version, OMAConstants.MOVersion);
        pddAttributes.put("requestReason", sRequestReasons.get(reason));
        if (sessionID != null) {
            pddAttributes.put(OMAConstants.TAG_SessionID, sessionID);
        }
        if (redirURI != null) {
            pddAttributes.put("redirectURI", redirURI);
        }

        XMLNode pddNode = new XMLNode(parent, OMAConstants.TAG_PostDevData, pddAttributes);

        XMLNode vNode = new XMLNode(pddNode, OMAConstants.TAG_SupportedVersions,
                (HashMap<String, String>) null);
        vNode.setText("1.0");
        pddNode.addChild(vNode);

        XMLNode moNode = new XMLNode(pddNode, OMAConstants.TAG_SupportedMOs,
                (HashMap<String, String>) null);
        StringBuilder sb = new StringBuilder();
        boolean first = true;
        for (String urn : OMAConstants.SupportedMO_URNs) {
            if (first) {
                first = false;
            } else {
                sb.append(' ');
            }
            sb.append(urn);
        }
        moNode.setText(sb.toString());
        pddNode.addChild(moNode);

        if (mos != null) {
            for (MOTree moTree : mos) {
                Map<String, String> map = null;
                if (moTree.getUrn() != null) {
                    map = new HashMap<>(1);
                    map.put(OMAConstants.SppMOAttribute, moTree.getUrn());
                }
                moNode = new XMLNode(pddNode, OMAConstants.TAG_MOContainer, map);
                moNode.setText(moTree.toXml());
                pddNode.addChild(moNode);
            }
        }

        parent.addChild(pddNode);
        return pddNode;
!!!30072375.java!!!	buildSppUpdateResponse(inout parent : XMLNode, inout sessionID : String, inout error : OSUError) : XMLNode
        Map<String, String> urAttributes = new HashMap<>();
        urAttributes.put(OMAConstants.TAG_Version, OMAConstants.MOVersion);
        if (sessionID != null) {
            urAttributes.put(OMAConstants.TAG_SessionID, sessionID);
        }
        if (error == null) {
            urAttributes.put(OMAConstants.TAG_Status, OMAConstants.mapStatus(OSUStatus.OK));
        } else {
            urAttributes.put(OMAConstants.TAG_Status, OMAConstants.mapStatus(OSUStatus.Error));
        }

        XMLNode urNode = new XMLNode(parent, OMAConstants.TAG_UpdateResponse, urAttributes);

        if (error != null) {
            Map<String, String> errorAttributes = new HashMap<>();
            errorAttributes.put("errorCode", OMAConstants.mapError(error));
            XMLNode errorNode = new XMLNode(urNode, OMAConstants.TAG_Error, errorAttributes);
            urNode.addChild(errorNode);
        }

        parent.addChild(urNode);
        return urNode;
