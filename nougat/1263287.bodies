class ProxyServiceStub
!!!30205495.java!!!	ProxyServiceStub(inout pacNative : PacNative)
            mPacNative = pacNative;
!!!30205623.java!!!	resolvePacFile(inout host : String, inout url : String) : String
            try {
                if (host == null) {
                    throw new IllegalArgumentException("The host must not be null");
                }
                if (url == null) {
                    throw new IllegalArgumentException("The URL must not be null");
                }
                // Check for characters that could be used for an injection attack.
                new URL(url);
                for (char c : host.toCharArray()) {
                    if (!Character.isLetterOrDigit(c) && (c != '.') && (c != '-')) {
                        throw new IllegalArgumentException("Invalid host was passed");
                    }
                }
                return mPacNative.makeProxyRequest(url, host);
            } catch (MalformedURLException e) {
                throw new IllegalArgumentException("Invalid URL was passed");
            }
!!!30205751.java!!!	setPacFile(inout script : String) : void
            if (Binder.getCallingUid() != Process.SYSTEM_UID) {
                Log.e(TAG, "Only system user is allowed to call setPacFile");
                throw new SecurityException();
            }
            mPacNative.setCurrentProxyScript(script);
!!!30205879.java!!!	startPacSystem() : void
            if (Binder.getCallingUid() != Process.SYSTEM_UID) {
                Log.e(TAG, "Only system user is allowed to call startPacSystem");
                throw new SecurityException();
            }
            mPacNative.startPacSupport();
!!!30206007.java!!!	stopPacSystem() : void
            if (Binder.getCallingUid() != Process.SYSTEM_UID) {
                Log.e(TAG, "Only system user is allowed to call stopPacSystem");
                throw new SecurityException();
            }
            mPacNative.stopPacSupport();
