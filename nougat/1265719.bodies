class PreferenceManager
!!!31392567.java!!!	PreferenceManager(inout context : Context)
        mContext = context;

        setSharedPreferencesName(getDefaultSharedPreferencesName(context));
!!!31392695.java!!!	inflateFromResource(inout context : Context, in resId : int, inout rootPreferences : PreferenceScreen) : PreferenceScreen
        // Block commits
        setNoCommit(true);

        final PreferenceInflater inflater = new PreferenceInflater(context, this);
        rootPreferences = (PreferenceScreen) inflater.inflate(resId, rootPreferences);
        rootPreferences.onAttachedToHierarchy(this);

        // Unblock commits
        setNoCommit(false);

        return rootPreferences;
!!!31392823.java!!!	createPreferenceScreen(inout context : Context) : PreferenceScreen
        final PreferenceScreen preferenceScreen = new PreferenceScreen(context, null);
        preferenceScreen.onAttachedToHierarchy(this);
        return preferenceScreen;
!!!31392951.java!!!	getNextId() : long
        synchronized (this) {
            return mNextId++;
        }
!!!31393079.java!!!	getSharedPreferencesName() : String
        return mSharedPreferencesName;
!!!31393207.java!!!	setSharedPreferencesName(inout sharedPreferencesName : String) : void
        mSharedPreferencesName = sharedPreferencesName;
        mSharedPreferences = null;
!!!31393335.java!!!	getSharedPreferencesMode() : int
        return mSharedPreferencesMode;
!!!31393463.java!!!	setSharedPreferencesMode(in sharedPreferencesMode : int) : void
        mSharedPreferencesMode = sharedPreferencesMode;
        mSharedPreferences = null;
!!!31393591.java!!!	setStorageDefault() : void
        if (BuildCompat.isAtLeastN()) {
            mStorage = STORAGE_DEFAULT;
            mSharedPreferences = null;
        }
!!!31393719.java!!!	setStorageDeviceProtected() : void
        if (BuildCompat.isAtLeastN()) {
            mStorage = STORAGE_DEVICE_PROTECTED;
            mSharedPreferences = null;
        }
!!!31393847.java!!!	setStorageDeviceEncrypted() : void
        setStorageDeviceProtected();
!!!31393975.java!!!	isStorageDefault() : boolean
        if (BuildCompat.isAtLeastN()) {
            return mStorage == STORAGE_DEFAULT;
        } else {
            return true;
        }
!!!31394103.java!!!	isStorageDeviceProtected() : boolean
        if (BuildCompat.isAtLeastN()) {
            return mStorage == STORAGE_DEVICE_PROTECTED;
        } else {
            return false;
        }
!!!31394231.java!!!	getSharedPreferences() : SharedPreferences
        if (mSharedPreferences == null) {
            final Context storageContext;
            switch (mStorage) {
                case STORAGE_DEVICE_PROTECTED:
                    storageContext = ContextCompat.createDeviceProtectedStorageContext(mContext);
                    break;
                default:
                    storageContext = mContext;
                    break;
            }

            mSharedPreferences = storageContext.getSharedPreferences(mSharedPreferencesName,
                    mSharedPreferencesMode);
        }

        return mSharedPreferences;
!!!31394359.java!!!	getDefaultSharedPreferences(inout context : Context) : SharedPreferences
        return context.getSharedPreferences(getDefaultSharedPreferencesName(context),
                getDefaultSharedPreferencesMode());
!!!31394487.java!!!	getDefaultSharedPreferencesName(inout context : Context) : String
        return context.getPackageName() + "_preferences";
!!!31394615.java!!!	getDefaultSharedPreferencesMode() : int
        return Context.MODE_PRIVATE;
!!!31394743.java!!!	getPreferenceScreen() : PreferenceScreen
        return mPreferenceScreen;
!!!31394871.java!!!	setPreferences(inout preferenceScreen : PreferenceScreen) : boolean
        if (preferenceScreen != mPreferenceScreen) {
            if (mPreferenceScreen != null) {
                mPreferenceScreen.onDetached();
            }
            mPreferenceScreen = preferenceScreen;
            return true;
        }

        return false;
!!!31394999.java!!!	findPreference(inout key : CharSequence) : Preference
        if (mPreferenceScreen == null) {
            return null;
        }

        return mPreferenceScreen.findPreference(key);
!!!31395127.java!!!	setDefaultValues(inout context : Context, in resId : int, inout readAgain : boolean) : void

        // Use the default shared preferences name and mode
        setDefaultValues(context, getDefaultSharedPreferencesName(context),
                getDefaultSharedPreferencesMode(), resId, readAgain);
!!!31395255.java!!!	setDefaultValues(inout context : Context, inout sharedPreferencesName : String, in sharedPreferencesMode : int, in resId : int, inout readAgain : boolean) : void
        final SharedPreferences defaultValueSp = context.getSharedPreferences(
                KEY_HAS_SET_DEFAULT_VALUES, Context.MODE_PRIVATE);

        if (readAgain || !defaultValueSp.getBoolean(KEY_HAS_SET_DEFAULT_VALUES, false)) {
            final PreferenceManager pm = new PreferenceManager(context);
            pm.setSharedPreferencesName(sharedPreferencesName);
            pm.setSharedPreferencesMode(sharedPreferencesMode);
            pm.inflateFromResource(context, resId, null);

            SharedPreferences.Editor editor =
                    defaultValueSp.edit().putBoolean(KEY_HAS_SET_DEFAULT_VALUES, true);

            SharedPreferencesCompat.EditorCompat.getInstance().apply(editor);
        }
!!!31395383.java!!!	getEditor() : SharedPreferences::Editor

        if (mNoCommit) {
            if (mEditor == null) {
                mEditor = getSharedPreferences().edit();
            }

            return mEditor;
        } else {
            return getSharedPreferences().edit();
        }
!!!31395511.java!!!	shouldCommit() : boolean
        return !mNoCommit;
!!!31395639.java!!!	setNoCommit(inout noCommit : boolean) : void
        if (!noCommit && mEditor != null) {
            SharedPreferencesCompat.EditorCompat.getInstance().apply(mEditor);
        }
        mNoCommit = noCommit;
!!!31395767.java!!!	getContext() : Context
        return mContext;
!!!31395895.java!!!	getOnDisplayPreferenceDialogListener() : PreferenceManager::OnDisplayPreferenceDialogListener
        return mOnDisplayPreferenceDialogListener;
!!!31396023.java!!!	setOnDisplayPreferenceDialogListener(inout onDisplayPreferenceDialogListener : PreferenceManager::OnDisplayPreferenceDialogListener) : void
        mOnDisplayPreferenceDialogListener = onDisplayPreferenceDialogListener;
!!!31396151.java!!!	showDialog(inout preference : Preference) : void
        if (mOnDisplayPreferenceDialogListener != null) {
            mOnDisplayPreferenceDialogListener.onDisplayPreferenceDialog(preference);
        }
!!!31396279.java!!!	setOnPreferenceTreeClickListener(inout listener : PreferenceManager::OnPreferenceTreeClickListener) : void
        mOnPreferenceTreeClickListener = listener;
!!!31396407.java!!!	getOnPreferenceTreeClickListener() : PreferenceManager::OnPreferenceTreeClickListener
        return mOnPreferenceTreeClickListener;
!!!31396535.java!!!	setOnNavigateToScreenListener(inout listener : PreferenceManager::OnNavigateToScreenListener) : void
        mOnNavigateToScreenListener = listener;
!!!31396663.java!!!	getOnNavigateToScreenListener() : PreferenceManager::OnNavigateToScreenListener
        return mOnNavigateToScreenListener;
