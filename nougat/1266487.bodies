class RestrictedPreferenceHelper
!!!30235191.java!!!	RestrictedPreferenceHelper(inout context : Context, inout preference : Preference, inout attrs : AttributeSet)
        mContext = context;
        mPreference = preference;

        if (attrs != null) {
            final TypedArray attributes = context.obtainStyledAttributes(attrs,
                    R.styleable.RestrictedPreference);
            final TypedValue userRestriction =
                    attributes.peekValue(R.styleable.RestrictedPreference_userRestriction);
            CharSequence data = null;
            if (userRestriction != null && userRestriction.type == TypedValue.TYPE_STRING) {
                if (userRestriction.resourceId != 0) {
                    data = context.getText(userRestriction.resourceId);
                } else {
                    data = userRestriction.string;
                }
            }
            mAttrUserRestriction = data == null ? null : data.toString();
            // If the system has set the user restriction, then we shouldn't add the padlock.
            if (RestrictedLockUtils.hasBaseUserRestriction(mContext, mAttrUserRestriction,
                    UserHandle.myUserId())) {
                mAttrUserRestriction = null;
                return;
            }

            final TypedValue useAdminDisabledSummary =
                    attributes.peekValue(R.styleable.RestrictedPreference_useAdminDisabledSummary);
            if (useAdminDisabledSummary != null) {
                mUseAdminDisabledSummary =
                        (useAdminDisabledSummary.type == TypedValue.TYPE_INT_BOOLEAN
                                && useAdminDisabledSummary.data != 0);
            }
        }
!!!30235319.java!!!	onBindViewHolder(inout holder : PreferenceViewHolder) : void
        if (mDisabledByAdmin) {
            holder.itemView.setEnabled(true);
        }
        if (mUseAdminDisabledSummary) {
            final TextView summaryView = (TextView) holder.findViewById(android.R.id.summary);
            if (summaryView != null) {
                if (mDisabledByAdmin) {
                    summaryView.setText(R.string.disabled_by_admin_summary_text);
                    summaryView.setVisibility(View.VISIBLE);
                } else {
                    summaryView.setVisibility(View.GONE);
                }
            }
        }
!!!30235447.java!!!	useAdminDisabledSummary(inout useSummary : boolean) : void
        mUseAdminDisabledSummary = useSummary;
!!!30235575.java!!!	performClick() : boolean
        if (mDisabledByAdmin) {
            RestrictedLockUtils.sendShowAdminSupportDetailsIntent(mContext, mEnforcedAdmin);
            return true;
        }
        return false;
!!!30235703.java!!!	onAttachedToHierarchy() : void
        if (mAttrUserRestriction != null) {
            checkRestrictionAndSetDisabled(mAttrUserRestriction, UserHandle.myUserId());
        }
!!!30235831.java!!!	checkRestrictionAndSetDisabled(inout userRestriction : String, in userId : int) : void
        EnforcedAdmin admin = RestrictedLockUtils.checkIfRestrictionEnforced(mContext,
                userRestriction, userId);
        setDisabledByAdmin(admin);
!!!30235959.java!!!	setDisabledByAdmin(inout admin : EnforcedAdmin) : boolean
        final boolean disabled = (admin != null ? true : false);
        mEnforcedAdmin = admin;
        boolean changed = false;
        if (mDisabledByAdmin != disabled) {
            mDisabledByAdmin = disabled;
            changed = true;
        }
        mPreference.setEnabled(!disabled);
        return changed;
!!!30236087.java!!!	isDisabledByAdmin() : boolean
        return mDisabledByAdmin;
