class ContextThemeWrapper
!!!164663.java!!!	ContextThemeWrapper()
        super(null);
!!!164791.java!!!	ContextThemeWrapper(inout base : Context, in themeResId : int)
        super(base);
        mThemeResource = themeResId;
!!!164919.java!!!	ContextThemeWrapper(inout base : Context, inout theme : Resources::Theme)
        super(base);
        mTheme = theme;
!!!165047.java!!!	attachBaseContext(inout newBase : Context) : void
        super.attachBaseContext(newBase);
!!!165175.java!!!	applyOverrideConfiguration(inout overrideConfiguration : Configuration) : void
        if (mResources != null) {
            throw new IllegalStateException(
                    "getResources() or getAssets() has already been called");
        }
        if (mOverrideConfiguration != null) {
            throw new IllegalStateException("Override configuration has already been set");
        }
        mOverrideConfiguration = new Configuration(overrideConfiguration);
!!!165303.java!!!	getOverrideConfiguration() : Configuration
        return mOverrideConfiguration;
!!!165431.java!!!	getAssets() : AssetManager
        // Ensure we're returning assets with the correct configuration.
        return getResourcesInternal().getAssets();
!!!165559.java!!!	getResources() : Resources
        return getResourcesInternal();
!!!165687.java!!!	getResourcesInternal() : Resources
        if (mResources == null) {
            if (mOverrideConfiguration == null) {
                mResources = super.getResources();
            } else {
                final Context resContext = createConfigurationContext(mOverrideConfiguration);
                mResources = resContext.getResources();
            }
        }
        return mResources;
!!!165815.java!!!	setTheme(in resid : int) : void
        if (mThemeResource != resid) {
            mThemeResource = resid;
            initializeTheme();
        }
!!!165943.java!!!	getThemeResId() : int
        return mThemeResource;
!!!166071.java!!!	getTheme() : Resources::Theme
        if (mTheme != null) {
            return mTheme;
        }

        mThemeResource = Resources.selectDefaultTheme(mThemeResource,
                getApplicationInfo().targetSdkVersion);
        initializeTheme();

        return mTheme;
!!!166199.java!!!	getSystemService(inout name : String) : Object
        if (LAYOUT_INFLATER_SERVICE.equals(name)) {
            if (mInflater == null) {
                mInflater = LayoutInflater.from(getBaseContext()).cloneInContext(this);
            }
            return mInflater;
        }
        return getBaseContext().getSystemService(name);
!!!166327.java!!!	onApplyThemeResource(inout theme : Resources::Theme, in resId : int, inout first : boolean) : void
        theme.applyStyle(resId, true);
!!!166455.java!!!	initializeTheme() : void
        final boolean first = mTheme == null;
        if (first) {
            mTheme = getResources().newTheme();
            final Resources.Theme theme = getBaseContext().getTheme();
            if (theme != null) {
                mTheme.setTo(theme);
            }
        }
        onApplyThemeResource(mTheme, mThemeResource, first);
