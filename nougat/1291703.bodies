class AndroidAppAsset
!!!30431415.java!!!	getCertFingerprints() : String
        return Collections.unmodifiableList(mCertFingerprints);
!!!30431543.java!!!	getPackageName() : String
        return mPackageName;
!!!30431671.java!!!	toJson() : String
        AssetJsonWriter writer = new AssetJsonWriter();

        writer.writeFieldLower(Utils.NAMESPACE_FIELD, Utils.NAMESPACE_ANDROID_APP);
        writer.writeFieldLower(Utils.ANDROID_APP_ASSET_FIELD_PACKAGE_NAME, mPackageName);
        writer.writeArrayUpper(Utils.ANDROID_APP_ASSET_FIELD_CERT_FPS, mCertFingerprints);

        return writer.closeAndGetString();
!!!30431799.java!!!	toString() : String
        StringBuilder asset = new StringBuilder();
        asset.append("AndroidAppAsset: ");
        asset.append(toJson());
        return asset.toString();
!!!30431927.java!!!	equals(inout o : Object) : boolean
        if (!(o instanceof AndroidAppAsset)) {
            return false;
        }

        return ((AndroidAppAsset) o).toJson().equals(toJson());
!!!30432055.java!!!	hashCode() : int
        return toJson().hashCode();
!!!30432183.java!!!	lookupKey() : int
        return getPackageName().hashCode();
!!!30432311.java!!!	followInsecureInclude() : boolean
        // Non-HTTPS includes are not allowed in Android App assets.
        return false;
!!!30432439.java!!!	create(inout asset : JSONObject) : AndroidAppAsset
        String packageName = asset.optString(Utils.ANDROID_APP_ASSET_FIELD_PACKAGE_NAME);
        if (packageName.equals("")) {
            throw new AssociationServiceException(String.format(MISSING_FIELD_FORMAT_STRING,
                    Utils.ANDROID_APP_ASSET_FIELD_PACKAGE_NAME));
        }

        JSONArray certArray = asset.optJSONArray(Utils.ANDROID_APP_ASSET_FIELD_CERT_FPS);
        if (certArray == null || certArray.length() == 0) {
            throw new AssociationServiceException(
                    String.format(MISSING_APPCERTS_FORMAT_STRING,
                            Utils.ANDROID_APP_ASSET_FIELD_CERT_FPS));
        }
        List<String> certFingerprints = new ArrayList<>(certArray.length());
        for (int i = 0; i < certArray.length(); i++) {
            try {
                certFingerprints.add(certArray.getString(i));
            } catch (JSONException e) {
                throw new AssociationServiceException(
                        String.format(APPCERT_NOT_STRING_FORMAT_STRING,
                                Utils.ANDROID_APP_ASSET_FIELD_CERT_FPS));
            }
        }

        return new AndroidAppAsset(packageName, certFingerprints);
!!!30432567.java!!!	create(inout packageName : String, inout certFingerprints : List<String>) : AndroidAppAsset
        if (packageName == null || packageName.equals("")) {
            throw new AssertionError("Expected packageName to be set.");
        }
        if (certFingerprints == null || certFingerprints.size() == 0) {
            throw new AssertionError("Expected certFingerprints to be set.");
        }
        List<String> lowerFps = new ArrayList<String>(certFingerprints.size());
        for (String fp : certFingerprints) {
            lowerFps.add(fp.toUpperCase(Locale.US));
        }
        return new AndroidAppAsset(packageName, lowerFps);
!!!30432695.java!!!	AndroidAppAsset(inout packageName : String, inout certFingerprints : List<String>)
        if (packageName.equals("")) {
            mPackageName = null;
        } else {
            mPackageName = packageName;
        }

        if (certFingerprints == null || certFingerprints.size() == 0) {
            mCertFingerprints = null;
        } else {
            mCertFingerprints = Collections.unmodifiableList(sortAndDeDuplicate(certFingerprints));
        }
!!!30432823.java!!!	sortAndDeDuplicate(inout certs : List<String>) : String
        if (certs.size() <= 1) {
            return certs;
        }
        HashSet<String> set = new HashSet<>(certs);
        List<String> result = new ArrayList<>(set);
        Collections.sort(result);
        return result;
