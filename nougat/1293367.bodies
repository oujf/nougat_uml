class WebAsset
!!!30439735.java!!!	WebAsset(inout url : URL)
        int port = url.getPort() != -1 ? url.getPort() : url.getDefaultPort();
        try {
            mUrl = new URL(url.getProtocol().toLowerCase(), url.getHost().toLowerCase(), port, "");
        } catch (MalformedURLException e) {
            throw new AssertionError(
                    "Url should always be validated before calling the constructor.");
        }
!!!30439863.java!!!	getDomain() : String
        return mUrl.getHost();
!!!30439991.java!!!	getPath() : String
        return mUrl.getPath();
!!!30440119.java!!!	getScheme() : String
        return mUrl.getProtocol();
!!!30440247.java!!!	getPort() : int
        return mUrl.getPort();
!!!30440375.java!!!	toJson() : String
        AssetJsonWriter writer = new AssetJsonWriter();

        writer.writeFieldLower(Utils.NAMESPACE_FIELD, Utils.NAMESPACE_WEB);
        writer.writeFieldLower(Utils.WEB_ASSET_FIELD_SITE, mUrl.toExternalForm());

        return writer.closeAndGetString();
!!!30440503.java!!!	toString() : String
        StringBuilder asset = new StringBuilder();
        asset.append("WebAsset: ");
        asset.append(toJson());
        return asset.toString();
!!!30440631.java!!!	equals(inout o : Object) : boolean
        if (!(o instanceof WebAsset)) {
            return false;
        }

        return ((WebAsset) o).toJson().equals(toJson());
!!!30440759.java!!!	hashCode() : int
        return toJson().hashCode();
!!!30440887.java!!!	lookupKey() : int
        return toJson().hashCode();
!!!30441015.java!!!	followInsecureInclude() : boolean
        // Only allow insecure include file if the asset scheme is http.
        return SCHEME_HTTP.equals(getScheme());
!!!30441143.java!!!	create(inout asset : JSONObject) : WebAsset
        if (asset.optString(Utils.WEB_ASSET_FIELD_SITE).equals("")) {
            throw new AssociationServiceException(String.format(MISSING_FIELD_FORMAT_STRING,
                    Utils.WEB_ASSET_FIELD_SITE));
        }

        URL url;
        try {
            url = new URL(asset.optString(Utils.WEB_ASSET_FIELD_SITE));
        } catch (MalformedURLException e) {
            throw new AssociationServiceException("Url is not well formatted.", e);
        }

        String scheme = url.getProtocol().toLowerCase(Locale.US);
        if (!scheme.equals("https") && !scheme.equals("http")) {
            throw new AssociationServiceException("Expected scheme to be http or https.");
        }

        if (url.getUserInfo() != null) {
            throw new AssociationServiceException("The url should not contain user info.");
        }

        String path = url.getFile(); // This is url.getPath() + url.getQuery().
        if (!path.equals("/") && !path.equals("")) {
            throw new AssociationServiceException(
                    "Site should only have scheme, domain, and port.");
        }

        return new WebAsset(url);
