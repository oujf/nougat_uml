class ViewInvertHelper
!!!30482999.java!!!	ViewInvertHelper(inout v : View, in fadeDuration : long)
        this(v.getContext(), fadeDuration);
        addTarget(v);
!!!30483127.java!!!	ViewInvertHelper(inout context : Context, in fadeDuration : long)
        mFadeDuration = fadeDuration;
!!!30483255.java!!!	constructArray(inout target : View) : View
        final ArrayList<View> views = new ArrayList<>();
        views.add(target);
        return views;
!!!30483383.java!!!	clearTargets() : void
        mTargets.clear();
!!!30483511.java!!!	addTarget(inout target : View) : void
        mTargets.add(target);
!!!30483639.java!!!	fade(in invert : boolean, in delay : long) : void
        float startIntensity = invert ? 0f : 1f;
        float endIntensity = invert ? 1f : 0f;
        ValueAnimator animator = ValueAnimator.ofFloat(startIntensity, endIntensity);
        animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
            @Override
            public void onAnimationUpdate(ValueAnimator animation) {
                updateInvertPaint((Float) animation.getAnimatedValue());
                for (int i = 0; i < mTargets.size(); i++) {
                    mTargets.get(i).setLayerType(View.LAYER_TYPE_HARDWARE, mDarkPaint);
                }
            }
        });
        animator.addListener(new AnimatorListenerAdapter() {
            @Override
            public void onAnimationEnd(Animator animation) {
                if (!invert) {
                    for (int i = 0; i < mTargets.size(); i++) {
                        mTargets.get(i).setLayerType(View.LAYER_TYPE_NONE, null);
                    }
                }
            }
        });
        animator.setDuration(mFadeDuration);
        animator.setInterpolator(Interpolators.LINEAR_OUT_SLOW_IN);
        animator.setStartDelay(delay);
        animator.start();
!!!30483767.java!!!	update(inout invert : boolean) : void
        if (invert) {
            updateInvertPaint(1f);
            for (int i = 0; i < mTargets.size(); i++) {
                mTargets.get(i).setLayerType(View.LAYER_TYPE_HARDWARE, mDarkPaint);
            }
        } else {
            for (int i = 0; i < mTargets.size(); i++) {
                mTargets.get(i).setLayerType(View.LAYER_TYPE_NONE, null);
            }
        }
!!!30483895.java!!!	updateInvertPaint(in intensity : float) : void
        float components = 1 - 2 * intensity;
        final float[] invert = {
                components, 0f,         0f,         0f, 255f * intensity,
                0f,         components, 0f,         0f, 255f * intensity,
                0f,         0f,         components, 0f, 255f * intensity,
                0f,         0f,         0f,         1f, 0f
        };
        mMatrix.set(invert);
        mGrayscaleMatrix.setSaturation(1 - intensity);
        mMatrix.preConcat(mGrayscaleMatrix);
        mDarkPaint.setColorFilter(new ColorMatrixColorFilter(mMatrix));
!!!30484023.java!!!	setInverted(inout invert : boolean, inout fade : boolean, in delay : long) : void
        if (fade) {
            fade(invert, delay);
        } else {
            update(invert);
        }
