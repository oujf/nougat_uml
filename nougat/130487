format 76
"os" // nougat_src::frameworks::base::core::java::android::os
  revision 2
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/core/java/android/os/"
  java_package "android.os"
  classview 128823 "os"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 129335 "Looper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class used to run a message loop for a thread.  Threads by default do
not have a message loop associated with them; to create one, call
{@link #prepare} in the thread that is to run the loop, and then
{@link #loop} to have it process messages until the loop is stopped.

<p>Most interaction with a message loop is through the
{@link Handler} class.

<p>This is a typical example of the implementation of a Looper thread,
using the separation of {@link #prepare} and {@link #loop} to create an
initial Handler to communicate with the Looper.

<pre>
 class LooperThread extends Thread {
     public Handler mHandler;

     public void run() {
         Looper.prepare();

         mHandler = new Handler() {
             public void handleMessage(Message msg) {
                 // process incoming messages here
             }
         };

         Looper.loop();
     }
 }</pre>"
      classrelation 1460791 // TAG (<unidirectional association>)
	relation 1460791 --->
	  a role_name "TAG" init_value " \"Looper\"" class_relation const_relation private
	    comment "
API Implementation Note:

This class contains the code required to set up and manage an event loop
based on MessageQueue.  APIs that affect the state of the queue should be
defined on MessageQueue or Handler rather than on Looper itself.  For example,
idle handlers and sync barriers are defined on the queue whereas preparing the
thread, looping, and quitting are defined on the looper.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1460791 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1460919 // sThreadLocal (<unidirectional association>)
	relation 1460919 --->
	  stereotype "ThreadLocal"
	  a role_name "sThreadLocal" init_value " new ThreadLocal<Looper>()" class_relation const_relation package
	    comment " sThreadLocal.get() will return null unless you've called prepare()."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1460919 // sThreadLocal (<unidirectional association>)
	  b parent class_ref 129335 // Looper
      end

      classrelation 1461047 // sMainLooper (<unidirectional association>)
	relation 1461047 --->
	  a role_name "sMainLooper" class_relation private
	    comment " guarded by Looper.class"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1461047 // sMainLooper (<unidirectional association>)
	  b parent class_ref 129335 // Looper
      end

      classrelation 1461175 // mQueue (<unidirectional association>)
	relation 1461175 --->
	  a role_name "mQueue" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1461175 // mQueue (<unidirectional association>)
	  b parent class_ref 286903 // MessageQueue
      end

      attribute 1652151 "mThread"
	const_attribute package explicit_type "Thread"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1461303 // mLogging (<unidirectional association>)
	relation 1461303 --->
	  a role_name "mLogging" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1461303 // mLogging (<unidirectional association>)
	  b parent class_ref 287415 // Printer
      end

      attribute 1652279 "mTraceTag"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3793975 "prepare"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initialize the current thread as a looper.
This gives you a chance to create handlers that then reference
this looper, before actually starting the loop. Be sure to call
{@link #loop()} after calling this method, and end it by calling
{@link #quit()}."
      end

      operation 3794103 "prepare"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "quitAllowed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3794231 "prepareMainLooper"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the current thread as a looper, marking it as an
application's main looper. The main looper for your application
is created by the Android environment, so you should never need
to call this function yourself.  See also: {@link #prepare()}"
      end

      operation 3794359 "getMainLooper"
	class_operation public return_type class_ref 129335 // Looper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the application's main looper, which lives in the main thread of the application."
      end

      operation 3794487 "loop"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Run the message queue in this thread. Be sure to call
{@link #quit()} to end the loop."
      end

      operation 3794615 "myLooper"
	class_operation public return_type class_ref 129335 // Looper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Return the Looper object associated with the current thread.  Returns
null if the calling thread is not associated with a Looper."
      end

      operation 3794743 "myQueue"
	class_operation public return_type class_ref 286903 // MessageQueue
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Return the {@link MessageQueue} object associated with the current
thread.  This must be called from a thread running a Looper, or a
NullPointerException will be thrown."
      end

      operation 3794871 "Looper"
	private explicit_return_type ""
	nparams 1
	  param inout name "quitAllowed" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3794999 "isCurrentThread"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the current thread is this looper's thread."
      end

      operation 3795127 "setMessageLogging"
	public explicit_return_type "void"
	nparams 1
	  param inout name "printer" type class_ref 287415 // Printer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Control logging of messages as they are processed by this Looper.  If
enabled, a log message will be written to <var>printer</var>
at the beginning and ending of each message dispatch, identifying the
target Handler and message contents.

@param printer A Printer object that will receive log messages, or
null to disable message logging."
      end

      operation 3795255 "setTraceTag"
	public explicit_return_type "void"
	nparams 1
	  param in name "traceTag" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3795383 "quit"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Quits the looper.
<p>
Causes the {@link #loop} method to terminate without processing any
more messages in the message queue.
</p><p>
Any attempt to post messages to the queue after the looper is asked to quit will fail.
For example, the {@link Handler#sendMessage(Message)} method will return false.
</p><p class=\"note\">
Using this method may be unsafe because some messages may not be delivered
before the looper terminates.  Consider using {@link #quitSafely} instead to ensure
that all pending work is completed in an orderly manner.
</p>

@see #quitSafely"
      end

      operation 3795511 "quitSafely"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Quits the looper safely.
<p>
Causes the {@link #loop} method to terminate as soon as all remaining messages
in the message queue that are already due to be delivered have been handled.
However pending delayed messages with due times in the future will not be
delivered before the loop terminates.
</p><p>
Any attempt to post messages to the queue after the looper is asked to quit will fail.
For example, the {@link Handler#sendMessage(Message)} method will return false.
</p>"
      end

      operation 3795639 "getThread"
	public explicit_return_type "Thread"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Gets the Thread associated with this Looper.

@return The looper's thread."
      end

      operation 3795767 "getQueue"
	public return_type class_ref 286903 // MessageQueue
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Gets this looper's message queue.

@return The looper's message queue."
      end

      operation 3795895 "dump"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pw" type class_ref 287415 // Printer
	  param inout name "prefix" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dumps the state of the looper for debugging purposes.

@param pw A printer to receive the contents of the dump.
@param prefix A prefix to prepend to each line which is printed."
      end

      operation 3796023 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 131383 "UserHandle"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of a user on the device."
      classrelation 1483447 // <realization>
	relation 1483447 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1483447 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1695799 "PER_USER_RANGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 100000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide Range of uids allocated for a user.
"
      end

      attribute 1695927 "USER_ALL"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@UserIdInt
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide A user id to indicate all users on the device "
      end

      classrelation 1483575 // ALL (<unidirectional association>)
	relation 1483575 --->
	  a role_name "ALL" init_value " new UserHandle(USER_ALL)" class_relation const_relation public
	    comment " @hide A user handle to indicate all users on the device 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1483575 // ALL (<unidirectional association>)
	  b parent class_ref 131383 // UserHandle
      end

      attribute 1696055 "USER_CURRENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@UserIdInt
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide A user id to indicate the currently active user "
      end

      classrelation 1483703 // CURRENT (<unidirectional association>)
	relation 1483703 --->
	  a role_name "CURRENT" init_value " new UserHandle(USER_CURRENT)" class_relation const_relation public
	    comment " @hide A user handle to indicate the current user of the device 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1483703 // CURRENT (<unidirectional association>)
	  b parent class_ref 131383 // UserHandle
      end

      attribute 1696183 "USER_CURRENT_OR_SELF"
	class_attribute const_attribute public explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@UserIdInt
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide A user id to indicate that we would like to send to the current
 user, but if this is calling from a user process then we will send it
 to the caller's user instead of failing with a security exception "
      end

      classrelation 1483831 // CURRENT_OR_SELF (<unidirectional association>)
	relation 1483831 --->
	  a role_name "CURRENT_OR_SELF" init_value " new UserHandle(USER_CURRENT_OR_SELF)" class_relation const_relation public
	    comment " @hide A user handle to indicate that we would like to send to the current
 user, but if this is calling from a user process then we will send it
 to the caller's user instead of failing with a security exception 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1483831 // CURRENT_OR_SELF (<unidirectional association>)
	  b parent class_ref 131383 // UserHandle
      end

      attribute 1696311 "USER_NULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " -10000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@UserIdInt
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide An undefined user id "
      end

      attribute 1696439 "USER_OWNER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@UserIdInt
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide A user id constant to indicate the \"owner\" user of the device
@deprecated Consider using either {@link UserHandle#USER_SYSTEM} constant or
check the target user's flag {@link android.content.pm.UserInfo#isAdmin}.
"
      end

      classrelation 1483959 // OWNER (<unidirectional association>)
	relation 1483959 --->
	  a role_name "OWNER" init_value " new UserHandle(USER_OWNER)" class_relation const_relation public
	    comment "
@hide A user handle to indicate the primary/owner user of the device
@deprecated Consider using either {@link UserHandle#SYSTEM} constant or
check the target user's flag {@link android.content.pm.UserInfo#isAdmin}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1483959 // OWNER (<unidirectional association>)
	  b parent class_ref 131383 // UserHandle
      end

      attribute 1696567 "USER_SYSTEM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@UserIdInt
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide A user id constant to indicate the \"system\" user of the device "
      end

      attribute 1696695 "USER_SERIAL_SYSTEM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide A user serial constant to indicate the \"system\" user of the device "
      end

      classrelation 1484087 // SYSTEM (<unidirectional association>)
	relation 1484087 --->
	  a role_name "SYSTEM" init_value " new UserHandle(USER_SYSTEM)" class_relation const_relation public
	    comment " @hide A user handle to indicate the \"system\" user of the device 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1484087 // SYSTEM (<unidirectional association>)
	  b parent class_ref 131383 // UserHandle
      end

      attribute 1696823 "MU_ENABLED"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide Enable multi-user related side effects. Set this to false if
there are problems with single user use-cases.
"
      end

      attribute 1696951 "mHandle"
	const_attribute package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3907383 "isSameUser"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param in name "uid1" explicit_type "int"
	  param in name "uid2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if the user id is the same for the two uids, i.e., they belong to the same
user.
@hide"
      end

      operation 3907511 "isSameApp"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param in name "uid1" explicit_type "int"
	  param in name "uid2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if both uids are referring to the same app id, ignoring the user id part of the
uids.
@param uid1 uid to compare
@param uid2 other uid to compare
@return whether the appId is the same for both uids
@hide"
      end

      operation 3907639 "isIsolated"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3907767 "isApp"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3907895 "getUserHandleForUid"
	class_operation public return_type class_ref 131383 // UserHandle
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user for a given uid.
@param uid A uid for an application running in a particular user.
@return A {@link UserHandle} for that user."
      end

      operation 3908023 "getUserId"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@UserIdInt
"
	
	
	
	comment "Returns the user id for a given uid.
@hide"
      end

      operation 3908151 "getCallingUserId"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@UserIdInt
"
	
	
	
	comment " @hide "
      end

      operation 3908279 "of"
	class_operation public return_type class_ref 131383 // UserHandle
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment " @hide "
      end

      operation 3908407 "getUid"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "userId" explicit_type "int"
	  param in name "appId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}, @AppIdInt ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the uid that is composed from the userId and the appId.
@hide"
      end

      operation 3908535 "getAppId"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@TestApi
@AppIdInt
"
	
	
	
	comment "Returns the app id (or base uid) for a given uid, stripping out the user id from it.
@hide"
      end

      operation 3908663 "getUserGid"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the gid shared between all apps with this userId.
@hide"
      end

      operation 3908791 "getSharedAppGid"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the shared app gid for a given uid or appId.
@hide"
      end

      operation 3908919 "getAppIdFromSharedAppGid"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "gid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@AppIdInt
"
	
	
	
	comment "Returns the app id for a given shared app gid. Returns -1 if the ID is invalid.
@hide"
      end

      operation 3909047 "formatUid"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "sb" explicit_type "StringBuilder"
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generate a text representation of the uid, breaking out its individual
components -- user, app, isolated, etc.
@hide"
      end

      operation 3909175 "formatUid"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generate a text representation of the uid, breaking out its individual
components -- user, app, isolated, etc.
@hide"
      end

      operation 3909303 "formatUid"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generate a text representation of the uid, breaking out its individual
components -- user, app, isolated, etc.
@hide"
      end

      operation 3909431 "parseUserArg"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "arg" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@UserIdInt
"
	
	
	
	comment " @hide "
      end

      operation 3909559 "myUserId"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
@UserIdInt
"
	
	
	
	comment "Returns the user id of the current process
@return user id of the current process
@hide"
      end

      operation 3909687 "isOwner"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Returns true if this UserHandle refers to the owner user; false otherwise.
@return true if this UserHandle refers to the owner user; false otherwise.
@hide
@deprecated please use {@link #isSystem()} or check for
{@link android.content.pm.UserInfo#isPrimary()}
{@link android.content.pm.UserInfo#isAdmin()} based on your particular use case."
      end

      operation 3909815 "isSystem"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "@return true if this UserHandle refers to the system user; false otherwise.
@hide"
      end

      operation 3909943 "UserHandle"
	public explicit_return_type ""
	nparams 1
	  param in name "h" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3910071 "getIdentifier"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
@UserIdInt
"
	
	
	
	comment "Returns the userId stored in this UserHandle.
@hide"
      end

      operation 3910199 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3910327 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3910455 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3910583 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3910711 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3910839 "writeToParcel"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "h" type class_ref 131383 // UserHandle
	  param inout name "out" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a UserHandle to a Parcel, handling null pointers.  Must be
read with {@link #readFromParcel(Parcel)}.

@param h The UserHandle to be written.
@param out The Parcel in which the UserHandle will be placed.

@see #readFromParcel(Parcel)"
      end

      operation 3910967 "readFromParcel"
	class_operation public return_type class_ref 131383 // UserHandle
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a UserHandle from a Parcel that was previously written
with {@link #writeToParcel(UserHandle, Parcel)}, returning either
a null or new object as appropriate.

@param in The Parcel from which to read the UserHandle
@return Returns a new UserHandle matching the previously written
object, or null if a null had been written.

@see #writeToParcel(UserHandle, Parcel)"
      end

      classrelation 1484215 // CREATOR (<unidirectional association>)
	relation 1484215 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<UserHandle>() {
        public UserHandle createFromParcel(Parcel in) {
            return new UserHandle(in);
        }

        public UserHandle[] newArray(int size) {
            return new UserHandle[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UserHandle> ${name}${value};
"
	    classrelation_ref 1484215 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3911095 "UserHandle"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new UserHandle from the data in a Parcel that was
previously written with {@link #writeToParcel(Parcel, int)}.  Note that you
must not use this with data written by
{@link #writeToParcel(UserHandle, Parcel)} since it is not possible
to handle a null UserHandle here.

@param in The Parcel containing the previously written UserHandle,
positioned at the location in the buffer where it was written."
      end
    end

    class 131511 "Bundle"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A mapping from String keys to various {@link Parcelable} values.

@see PersistableBundle"
      classrelation 1446455 // <generalisation>
	relation 1446455 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1446455 // <generalisation>
	  b parent class_ref 536247 // BaseBundle
      end

      classrelation 1446583 // <realization>
	relation 1446583 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1446583 // <realization>
	  b parent class_ref 242231 // Cloneable
      end

      classrelation 1446711 // <realization>
	relation 1446711 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1446711 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1622327 "FLAG_HAS_FDS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1622455 "FLAG_HAS_FDS_KNOWN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1622583 "FLAG_ALLOW_FDS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1446839 // EMPTY (<unidirectional association>)
	relation 1446839 --->
	  a role_name "EMPTY" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1446839 // EMPTY (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      extra_member 132535 "initialization"
	
	cpp "" ""
	java "  static {
        EMPTY = new Bundle();
        EMPTY.mMap = ArrayMap.EMPTY;
    }"
	php ""
	python ""
	idl ""
      end

      operation 3732151 "Bundle"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty Bundle."
      end

      operation 3732279 "Bundle"
	package explicit_return_type ""
	nparams 1
	  param inout name "parcelledData" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Bundle whose data is stored as a Parcel.  The data
will be unparcelled on first contact, using the assigned ClassLoader.

@param parcelledData a Parcel containing a Bundle"
      end

      operation 3732407 "Bundle"
	package explicit_return_type ""
	nparams 2
	  param inout name "parcelledData" type class_ref 137527 // Parcel
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package "
      end

      operation 3732535 "Bundle"
	public explicit_return_type ""
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty Bundle that uses a specific ClassLoader for
instantiating Parcelable and Serializable objects.

@param loader An explicit ClassLoader to use when instantiating objects
inside of the Bundle."
      end

      operation 3732663 "Bundle"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty Bundle sized to hold the given number of
elements. The Bundle will grow as needed.

@param capacity the initial capacity of the Bundle"
      end

      operation 3732791 "Bundle"
	public explicit_return_type ""
	nparams 1
	  param inout name "b" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Bundle containing a copy of the mappings from the given
Bundle.

@param b a Bundle to be copied."
      end

      operation 3732919 "Bundle"
	public explicit_return_type ""
	nparams 1
	  param inout name "b" type class_ref 158007 // PersistableBundle
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Bundle containing a copy of the mappings from the given
PersistableBundle.

@param b a Bundle to be copied."
      end

      operation 3733047 "forPair"
	class_operation public return_type class_ref 131511 // Bundle
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make a Bundle for a single key/value pair.

@hide"
      end

      operation 3733175 "setClassLoader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Changes the ClassLoader this Bundle uses when instantiating objects.

@param loader An explicit ClassLoader to use when instantiating objects
inside of the Bundle."
      end

      operation 3733303 "getClassLoader"
	public explicit_return_type "ClassLoader"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Return the ClassLoader currently associated with this Bundle."
      end

      operation 3733431 "setAllowFds"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "allowFds" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3733559 "setDefusable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "defusable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark if this Bundle is okay to \"defuse.\" That is, it's okay for system
processes to ignore any {@link BadParcelableException} encountered when
unparceling it, leaving an empty bundle in its place.
<p>
This should <em>only</em> be set when the Bundle reaches its final
destination, otherwise a system process may clobber contents that were
destined for an app that could have unparceled them.

@hide"
      end

      operation 3733687 "setDefusable"
	class_operation public return_type class_ref 131511 // Bundle
	nparams 2
	  param inout name "bundle" type class_ref 131511 // Bundle
	  param inout name "defusable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3733815 "clone"
	public return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Clones the current Bundle. The internal map is cloned, but the keys and
values to which it refers are copied by reference."
      end

      operation 3733943 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Removes all elements from the mapping of this Bundle."
      end

      operation 3734071 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes any entry with the given key from the mapping of this Bundle.

@param key a String key"
      end

      operation 3734199 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bundle" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts all mappings from the given Bundle into this Bundle.

@param bundle a Bundle"
      end

      operation 3734327 "hasFileDescriptors"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports whether the bundle contains any parcelled file descriptors."
      end

      operation 3734455 "filterValues"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter values in Bundle to only basic types.
@hide"
      end

      operation 3734583 "putByte"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts a byte value into the mapping of this Bundle, replacing
any existing value for the given key.

@param key a String, or null
@param value a byte"
      end

      operation 3734711 "putChar"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts a char value into the mapping of this Bundle, replacing
any existing value for the given key.

@param key a String, or null
@param value a char"
      end

      operation 3734839 "putShort"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts a short value into the mapping of this Bundle, replacing
any existing value for the given key.

@param key a String, or null
@param value a short"
      end

      operation 3734967 "putFloat"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts a float value into the mapping of this Bundle, replacing
any existing value for the given key.

@param key a String, or null
@param value a float"
      end

      operation 3735095 "putCharSequence"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts a CharSequence value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a CharSequence, or null"
      end

      operation 3735223 "putParcelable"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 137399 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a Parcelable value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a Parcelable object, or null"
      end

      operation 3735351 "putSize"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 331191 // Size
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a Size value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a Size object, or null"
      end

      operation 3735479 "putSizeF"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 465719 // SizeF
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a SizeF value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a SizeF object, or null"
      end

      operation 3735607 "putParcelableArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 137399 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts an array of Parcelable values into the mapping of this Bundle,
replacing any existing value for the given key.  Either key or value may
be null.

@param key a String, or null
@param value an array of Parcelable objects, or null"
      end

      operation 3735735 "putParcelableArrayList"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "ArrayList<? extends Parcelable>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a List of Parcelable values into the mapping of this Bundle,
replacing any existing value for the given key.  Either key or value may
be null.

@param key a String, or null
@param value an ArrayList of Parcelable objects, or null"
      end

      operation 3735863 "putParcelableList"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "List<? extends Parcelable>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3735991 "putSparseParcelableArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 139575 // SparseArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}<? extends Parcelable> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a SparceArray of Parcelable values into the mapping of this
Bundle, replacing any existing value for the given key.  Either key
or value may be null.

@param key a String, or null
@param value a SparseArray of Parcelable objects, or null"
      end

      operation 3736119 "putIntegerArrayList"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "ArrayList<Integer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts an ArrayList<Integer> value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value an ArrayList<Integer> object, or null"
      end

      operation 3736247 "putStringArrayList"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "ArrayList<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts an ArrayList<String> value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value an ArrayList<String> object, or null"
      end

      operation 3736375 "putCharSequenceArrayList"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "ArrayList<CharSequence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts an ArrayList<CharSequence> value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value an ArrayList<CharSequence> object, or null"
      end

      operation 3736503 "putSerializable"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "Serializable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts a Serializable value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a Serializable object, or null"
      end

      operation 3736631 "putByteArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts a byte array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a byte array object, or null"
      end

      operation 3736759 "putShortArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts a short array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a short array object, or null"
      end

      operation 3736887 "putCharArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts a char array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a char array object, or null"
      end

      operation 3737015 "putFloatArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts a float array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a float array object, or null"
      end

      operation 3737143 "putCharSequenceArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Inserts a CharSequence array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a CharSequence array object, or null"
      end

      operation 3737271 "putBundle"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a Bundle value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a Bundle object, or null"
      end

      operation 3737399 "putBinder"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts an {@link IBinder} value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

<p class=\"note\">You should be very careful when using this function.  In many
places where Bundles are used (such as inside of Intent objects), the Bundle
can live longer inside of another process than the process that had originally
created it.  In that case, the IBinder you supply here will become invalid
when your process goes away, and no longer usable, even if a new process is
created for you later on.</p>

@param key a String, or null
@param value an IBinder object, or null"
      end

      operation 3737527 "putIBinder"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Inserts an IBinder value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value an IBinder object, or null

@deprecated
@hide This is the old name of the function."
      end

      operation 3737655 "getByte"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the value associated with the given key, or (byte) 0 if
no mapping of the desired type exists for the given key.

@param key a String
@return a byte value"
      end

      operation 3737783 "getByte"
	public explicit_return_type "Byte"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "defaultValue" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return a byte value"
      end

      operation 3737911 "getChar"
	public explicit_return_type "char"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the value associated with the given key, or (char) 0 if
no mapping of the desired type exists for the given key.

@param key a String
@return a char value"
      end

      operation 3738039 "getChar"
	public explicit_return_type "char"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "defaultValue" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return a char value"
      end

      operation 3738167 "getShort"
	public explicit_return_type "short"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the value associated with the given key, or (short) 0 if
no mapping of the desired type exists for the given key.

@param key a String
@return a short value"
      end

      operation 3738295 "getShort"
	public explicit_return_type "short"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "defaultValue" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return a short value"
      end

      operation 3738423 "getFloat"
	public explicit_return_type "float"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the value associated with the given key, or 0.0f if
no mapping of the desired type exists for the given key.

@param key a String
@return a float value"
      end

      operation 3738551 "getFloat"
	public explicit_return_type "float"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "defaultValue" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return a float value"
      end

      operation 3738679 "getCharSequence"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a CharSequence value, or null"
      end

      operation 3738807 "getCharSequence"
	public explicit_return_type "CharSequence"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "defaultValue" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key or if a null
value is explicitly associatd with the given key.

@param key a String, or null
@param defaultValue Value to return if key does not exist or if a null
    value is associated with the given key.
@return the CharSequence value associated with the given key, or defaultValue
    if no valid CharSequence object is currently mapped to that key."
      end

      operation 3738935 "getSize"
	public return_type class_ref 331191 // Size
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a Size value, or null"
      end

      operation 3739063 "getSizeF"
	public return_type class_ref 465719 // SizeF
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a Size value, or null"
      end

      operation 3739191 "getBundle"
	public return_type class_ref 131511 // Bundle
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a Bundle value, or null"
      end

      operation 3739319 "getParcelable"
	public explicit_return_type "T"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a Parcelable value, or null"
      end

      operation 3739447 "getParcelableArray"
	public return_type class_ref 137399 // Parcelable
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a Parcelable[] value, or null"
      end

      operation 3739575 "getParcelableArrayList"
	public explicit_return_type "ArrayList<T>"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return an ArrayList<T> value, or null"
      end

      operation 3739703 "getSparseParcelableArray"
	public return_type class_ref 139575 // SparseArray
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type}<T> ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null

@return a SparseArray of T values, or null"
      end

      operation 3739831 "getSerializable"
	public explicit_return_type "Serializable"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a Serializable value, or null"
      end

      operation 3739959 "getIntegerArrayList"
	public explicit_return_type "ArrayList<Integer>"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return an ArrayList<String> value, or null"
      end

      operation 3740087 "getStringArrayList"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return an ArrayList<String> value, or null"
      end

      operation 3740215 "getCharSequenceArrayList"
	public explicit_return_type "ArrayList<CharSequence>"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return an ArrayList<CharSequence> value, or null"
      end

      operation 3740343 "getByteArray"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a byte[] value, or null"
      end

      operation 3740471 "getShortArray"
	public explicit_return_type "short"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a short[] value, or null"
      end

      operation 3740599 "getCharArray"
	public explicit_return_type "char"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a char[] value, or null"
      end

      operation 3740727 "getFloatArray"
	public explicit_return_type "float"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a float[] value, or null"
      end

      operation 3740855 "getCharSequenceArray"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a CharSequence[] value, or null"
      end

      operation 3740983 "getBinder"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return an IBinder value, or null"
      end

      operation 3741111 "getIBinder"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return an IBinder value, or null

@deprecated
@hide This is the old name of the function."
      end

      classrelation 1446967 // CREATOR (<unidirectional association>)
	relation 1446967 --->
	  a role_name "CREATOR" init_value "
        new Parcelable.Creator<Bundle>() {
        @Override
        public Bundle createFromParcel(Parcel in) {
            return in.readBundle();
        }

        @Override
        public Bundle[] newArray(int size) {
            return new Bundle[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Bundle> ${name}${value};
"
	    classrelation_ref 1446967 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3741239 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Report the nature of this Parcelable's contents"
      end

      operation 3741367 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Writes the Bundle contents to a Parcel, typically in order for
it to be passed through an IBinder connection.
@param parcel The parcel to copy this bundle to."
      end

      operation 3741495 "readFromParcel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parcel" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the Parcel contents into this Bundle, typically in order for
it to be passed through an IBinder connection.
@param parcel The parcel to overwrite this bundle from."
      end

      operation 3741623 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 132023 "Handler"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A Handler allows you to send and process {@link Message} and Runnable
objects associated with a thread's {@link MessageQueue}.  Each Handler
instance is associated with a single thread and that thread's message
queue.  When you create a new Handler, it is bound to the thread /
message queue of the thread that is creating it -- from that point on,
it will deliver messages and runnables to that message queue and execute
them as they come out of the message queue.

<p>There are two main uses for a Handler: (1) to schedule messages and
runnables to be executed as some point in the future; and (2) to enqueue
an action to be performed on a different thread than your own.

<p>Scheduling messages is accomplished with the
{@link #post}, {@link #postAtTime(Runnable, long)},
{@link #postDelayed}, {@link #sendEmptyMessage},
{@link #sendMessage}, {@link #sendMessageAtTime}, and
{@link #sendMessageDelayed} methods.  The <em>post</em> versions allow
you to enqueue Runnable objects to be called by the message queue when
they are received; the <em>sendMessage</em> versions allow you to enqueue
a {@link Message} object containing a bundle of data that will be
processed by the Handler's {@link #handleMessage} method (requiring that
you implement a subclass of Handler).

<p>When posting or sending to a Handler, you can either
allow the item to be processed as soon as the message queue is ready
to do so, or specify a delay before it gets processed or absolute time for
it to be processed.  The latter two allow you to implement timeouts,
ticks, and other timing-based behavior.

<p>When a
process is created for your application, its main thread is dedicated to
running a message queue that takes care of managing the top-level
application objects (activities, broadcast receivers, etc) and any windows
they create.  You can create your own threads, and communicate back with
the main application thread through a Handler.  This is done by calling
the same <em>post</em> or <em>sendMessage</em> methods as before, but from
your new thread.  The given Runnable or Message will then be scheduled
in the Handler's message queue and processed when appropriate."
      attribute 549431 "FIND_POTENTIAL_LEAKS"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Set this flag to true to detect anonymous, local or member classes
that extend this Handler class and that are not static. These kind
of classes can potentially create leaks.
"
      end

      classrelation 582583 // TAG (<unidirectional association>)
	relation 582583 --->
	  a role_name "TAG" init_value " \"Handler\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 582583 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      class 287159 "Callback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1310519 "handleMessage"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1310647 "handleMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses must implement this to receive messages."
      end

      operation 1310775 "dispatchMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle system messages here."
      end

      operation 1310903 "Handler"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor associates this handler with the {@link Looper} for the
current thread.

If this thread does not have a looper, this handler won't be able to receive messages
so an exception is thrown."
      end

      operation 1311031 "Handler"
	public explicit_return_type ""
	nparams 1
	  param inout name "callback" type class_ref 287159 // Callback
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor associates this handler with the {@link Looper} for the
current thread and takes a callback interface in which you can handle
messages.

If this thread does not have a looper, this handler won't be able to receive messages
so an exception is thrown.

@param callback The callback interface in which to handle messages, or null."
      end

      operation 1311159 "Handler"
	public explicit_return_type ""
	nparams 1
	  param inout name "looper" type class_ref 129335 // Looper
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use the provided {@link Looper} instead of the default one.

@param looper The looper, must not be null."
      end

      operation 1311287 "Handler"
	public explicit_return_type ""
	nparams 2
	  param inout name "looper" type class_ref 129335 // Looper
	  param inout name "callback" type class_ref 287159 // Callback
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use the provided {@link Looper} instead of the default one and take a callback
interface in which to handle messages.

@param looper The looper, must not be null.
@param callback The callback interface in which to handle messages, or null."
      end

      operation 1311415 "Handler"
	public explicit_return_type ""
	nparams 1
	  param inout name "async" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use the {@link Looper} for the current thread
and set whether the handler should be asynchronous.

Handlers are synchronous by default unless this constructor is used to make
one that is strictly asynchronous.

Asynchronous messages represent interrupts or events that do not require global ordering
with respect to synchronous messages.  Asynchronous messages are not subject to
the synchronization barriers introduced by {@link MessageQueue#enqueueSyncBarrier(long)}.

@param async If true, the handler calls {@link Message#setAsynchronous(boolean)} for
each {@link Message} that is sent to it or {@link Runnable} that is posted to it.

@hide"
      end

      operation 1311543 "Handler"
	public explicit_return_type ""
	nparams 2
	  param inout name "callback" type class_ref 287159 // Callback
	  param inout name "async" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use the {@link Looper} for the current thread with the specified callback interface
and set whether the handler should be asynchronous.

Handlers are synchronous by default unless this constructor is used to make
one that is strictly asynchronous.

Asynchronous messages represent interrupts or events that do not require global ordering
with respect to synchronous messages.  Asynchronous messages are not subject to
the synchronization barriers introduced by {@link MessageQueue#enqueueSyncBarrier(long)}.

@param callback The callback interface in which to handle messages, or null.
@param async If true, the handler calls {@link Message#setAsynchronous(boolean)} for
each {@link Message} that is sent to it or {@link Runnable} that is posted to it.

@hide"
      end

      operation 1311671 "Handler"
	public explicit_return_type ""
	nparams 3
	  param inout name "looper" type class_ref 129335 // Looper
	  param inout name "callback" type class_ref 287159 // Callback
	  param inout name "async" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use the provided {@link Looper} instead of the default one and take a callback
interface in which to handle messages.  Also set whether the handler
should be asynchronous.

Handlers are synchronous by default unless this constructor is used to make
one that is strictly asynchronous.

Asynchronous messages represent interrupts or events that do not require global ordering
with respect to synchronous messages.  Asynchronous messages are not subject to
the synchronization barriers introduced by {@link MessageQueue#enqueueSyncBarrier(long)}.

@param looper The looper, must not be null.
@param callback The callback interface in which to handle messages, or null.
@param async If true, the handler calls {@link Message#setAsynchronous(boolean)} for
each {@link Message} that is sent to it or {@link Runnable} that is posted to it.

@hide"
      end

      operation 1311799 "getTraceName"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "message" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 1311927 "getMessageName"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "message" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representing the name of the specified message.
The default implementation will either return the class name of the
message callback if any, or the hexadecimal representation of the
message \"what\" field.
 
@param message The message whose name is being queried "
      end

      operation 1312055 "obtainMessage"
	public return_type class_ref 287287 // Message
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new {@link android.os.Message Message} from the global message pool. More efficient than
creating and allocating new instances. The retrieved message has its handler set to this instance (Message.target == this).
 If you don't want that facility, just call Message.obtain() instead."
      end

      operation 1312183 "obtainMessage"
	public return_type class_ref 287287 // Message
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #obtainMessage()}, except that it also sets the what member of the returned Message.

@param what Value to assign to the returned Message.what field.
@return A Message from the global message pool."
      end

      operation 1312311 "obtainMessage"
	public return_type class_ref 287287 // Message
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Same as {@link #obtainMessage()}, except that it also sets the what and obj members 
of the returned Message.

@param what Value to assign to the returned Message.what field.
@param obj Value to assign to the returned Message.obj field.
@return A Message from the global message pool."
      end

      operation 1312439 "obtainMessage"
	public return_type class_ref 287287 // Message
	nparams 3
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Same as {@link #obtainMessage()}, except that it also sets the what, arg1 and arg2 members of the returned
Message.
@param what Value to assign to the returned Message.what field.
@param arg1 Value to assign to the returned Message.arg1 field.
@param arg2 Value to assign to the returned Message.arg2 field.
@return A Message from the global message pool."
      end

      operation 1312567 "obtainMessage"
	public return_type class_ref 287287 // Message
	nparams 4
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Same as {@link #obtainMessage()}, except that it also sets the what, obj, arg1,and arg2 values on the 
returned Message.
@param what Value to assign to the returned Message.what field.
@param arg1 Value to assign to the returned Message.arg1 field.
@param arg2 Value to assign to the returned Message.arg2 field.
@param obj Value to assign to the returned Message.obj field.
@return A Message from the global message pool."
      end

      operation 1312695 "post"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "r" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the Runnable r to be added to the message queue.
The runnable will be run on the thread to which this handler is 
attached. 
 
@param r The Runnable that will be executed.

@return Returns true if the Runnable was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting."
      end

      operation 1312823 "postAtTime"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "r" explicit_type "Runnable"
	  param in name "uptimeMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the Runnable r to be added to the message queue, to be run
at a specific time given by <var>uptimeMillis</var>.
<b>The time-base is {@link android.os.SystemClock#uptimeMillis}.</b>
Time spent in deep sleep will add an additional delay to execution.
The runnable will be run on the thread to which this handler is attached.

@param r The Runnable that will be executed.
@param uptimeMillis The absolute time at which the callback should run,
        using the {@link android.os.SystemClock#uptimeMillis} time-base.
 
@return Returns true if the Runnable was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting.  Note that a
        result of true does not mean the Runnable will be processed -- if
        the looper is quit before the delivery time of the message
        occurs then the message will be dropped."
      end

      operation 1312951 "postAtTime"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "r" explicit_type "Runnable"
	  param inout name "token" type class_ref 132663 // Object
	  param in name "uptimeMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the Runnable r to be added to the message queue, to be run
at a specific time given by <var>uptimeMillis</var>.
<b>The time-base is {@link android.os.SystemClock#uptimeMillis}.</b>
Time spent in deep sleep will add an additional delay to execution.
The runnable will be run on the thread to which this handler is attached.

@param r The Runnable that will be executed.
@param uptimeMillis The absolute time at which the callback should run,
        using the {@link android.os.SystemClock#uptimeMillis} time-base.

@return Returns true if the Runnable was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting.  Note that a
        result of true does not mean the Runnable will be processed -- if
        the looper is quit before the delivery time of the message
        occurs then the message will be dropped.
        
@see android.os.SystemClock#uptimeMillis"
      end

      operation 1313079 "postDelayed"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "r" explicit_type "Runnable"
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the Runnable r to be added to the message queue, to be run
after the specified amount of time elapses.
The runnable will be run on the thread to which this handler
is attached.
<b>The time-base is {@link android.os.SystemClock#uptimeMillis}.</b>
Time spent in deep sleep will add an additional delay to execution.
 
@param r The Runnable that will be executed.
@param delayMillis The delay (in milliseconds) until the Runnable
       will be executed.
       
@return Returns true if the Runnable was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting.  Note that a
        result of true does not mean the Runnable will be processed --
        if the looper is quit before the delivery time of the message
        occurs then the message will be dropped."
      end

      operation 1313207 "postAtFrontOfQueue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "r" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Posts a message to an object that implements Runnable.
Causes the Runnable r to executed on the next iteration through the
message queue. The runnable will be run on the thread to which this
handler is attached.
<b>This method is only for use in very special circumstances -- it
can easily starve the message queue, cause ordering problems, or have
other unexpected side-effects.</b>
 
@param r The Runnable that will be executed.

@return Returns true if the message was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting."
      end

      operation 1313335 "runWithScissors"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "r" explicit_type "Runnable"
	  param in name "timeout" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Runs the specified task synchronously.
<p>
If the current thread is the same as the handler thread, then the runnable
runs immediately without being enqueued.  Otherwise, posts the runnable
to the handler and waits for it to complete before returning.
</p><p>
This method is dangerous!  Improper use can result in deadlocks.
Never call this method while any locks are held or use it in a
possibly re-entrant manner.
</p><p>
This method is occasionally useful in situations where a background thread
must synchronously await completion of a task that must run on the
handler's thread.  However, this problem is often a symptom of bad design.
Consider improving the design (if possible) before resorting to this method.
</p><p>
One example of where you might want to use this method is when you just
set up a Handler thread and need to perform some initialization steps on
it before continuing execution.
</p><p>
If timeout occurs then this method returns <code>false</code> but the runnable
will remain posted on the handler and may already be in progress or
complete at a later time.
</p><p>
When using this method, be sure to use {@link Looper#quitSafely} when
quitting the looper.  Otherwise {@link #runWithScissors} may hang indefinitely.
(TODO: We should fix this by making MessageQueue aware of blocking runnables.)
</p>

@param r The Runnable that will be executed synchronously.
@param timeout The timeout in milliseconds, or 0 to wait indefinitely.

@return Returns true if the Runnable was successfully executed.
        Returns false on failure, usually because the
        looper processing the message queue is exiting.

@hide This method is prone to abuse and should probably not be in the API.
If we ever do make it part of the API, we might want to rename it to something
less funny like runUnsafe()."
      end

      operation 1313463 "removeCallbacks"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove any pending posts of Runnable r that are in the message queue."
      end

      operation 1313591 "removeCallbacks"
	public explicit_return_type "void"
	nparams 2
	  param inout name "r" explicit_type "Runnable"
	  param inout name "token" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove any pending posts of Runnable <var>r</var> with Object
<var>token</var> that are in the message queue.  If <var>token</var> is null,
all callbacks will be removed."
      end

      operation 1313719 "sendMessage"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "msg" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes a message onto the end of the message queue after all pending messages
before the current time. It will be received in {@link #handleMessage},
in the thread attached to this handler.
 
@return Returns true if the message was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting."
      end

      operation 1313847 "sendEmptyMessage"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a Message containing only the what value.
 
@return Returns true if the message was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting."
      end

      operation 1313975 "sendEmptyMessageDelayed"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "what" explicit_type "int"
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a Message containing only the what value, to be delivered
after the specified amount of time elapses.
@see #sendMessageDelayed(android.os.Message, long) 

@return Returns true if the message was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting."
      end

      operation 1314103 "sendEmptyMessageAtTime"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "what" explicit_type "int"
	  param in name "uptimeMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a Message containing only the what value, to be delivered 
at a specific time.
@see #sendMessageAtTime(android.os.Message, long)
 
@return Returns true if the message was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting."
      end

      operation 1314231 "sendMessageDelayed"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "msg" type class_ref 287287 // Message
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message into the message queue after all pending messages
before (current time + delayMillis). You will receive it in
{@link #handleMessage}, in the thread attached to this handler.
 
@return Returns true if the message was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting.  Note that a
        result of true does not mean the message will be processed -- if
        the looper is quit before the delivery time of the message
        occurs then the message will be dropped."
      end

      operation 1314359 "sendMessageAtTime"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "msg" type class_ref 287287 // Message
	  param in name "uptimeMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message into the message queue after all pending messages
before the absolute time (in milliseconds) <var>uptimeMillis</var>.
<b>The time-base is {@link android.os.SystemClock#uptimeMillis}.</b>
Time spent in deep sleep will add an additional delay to execution.
You will receive it in {@link #handleMessage}, in the thread attached
to this handler.

@param uptimeMillis The absolute time at which the message should be
        delivered, using the
        {@link android.os.SystemClock#uptimeMillis} time-base.
        
@return Returns true if the message was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting.  Note that a
        result of true does not mean the message will be processed -- if
        the looper is quit before the delivery time of the message
        occurs then the message will be dropped."
      end

      operation 1314487 "sendMessageAtFrontOfQueue"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "msg" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message at the front of the message queue, to be processed on
the next iteration of the message loop.  You will receive it in
{@link #handleMessage}, in the thread attached to this handler.
<b>This method is only for use in very special circumstances -- it
can easily starve the message queue, cause ordering problems, or have
other unexpected side-effects.</b>
 
@return Returns true if the message was successfully placed in to the 
        message queue.  Returns false on failure, usually because the
        looper processing the message queue is exiting."
      end

      operation 1314615 "enqueueMessage"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "queue" type class_ref 286903 // MessageQueue
	  param inout name "msg" type class_ref 287287 // Message
	  param in name "uptimeMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1314743 "removeMessages"
	public explicit_return_type "void"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove any pending posts of messages with code 'what' that are in the
message queue."
      end

      operation 1314871 "removeMessages"
	public explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove any pending posts of messages with code 'what' and whose obj is
'object' that are in the message queue.  If <var>object</var> is null,
all messages will be removed."
      end

      operation 1314999 "removeCallbacksAndMessages"
	public explicit_return_type "void"
	nparams 1
	  param inout name "token" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove any pending posts of callbacks and sent messages whose
<var>obj</var> is <var>token</var>.  If <var>token</var> is null,
all callbacks and messages will be removed."
      end

      operation 1315127 "hasMessages"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if there are any pending posts of messages with code 'what' in
the message queue."
      end

      operation 1315255 "hasMessages"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if there are any pending posts of messages with code 'what' and
whose obj is 'object' in the message queue."
      end

      operation 1315383 "hasCallbacks"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "r" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if there are any pending posts of messages with callback r in
the message queue.

@hide"
      end

      operation 1315511 "getLooper"
	public return_type class_ref 129335 // Looper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " if we can get rid of this method, the handler need not remember its loop
 we could instead export a getMessageQueue() method... "
      end

      operation 1315639 "dump"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pw" type class_ref 287415 // Printer
	  param inout name "prefix" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1315767 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1315895 "getIMessenger"
	package explicit_return_type "IMessenger"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 287543 "MessengerImpl"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 582711 // <generalisation>
	  relation 582711 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 582711 // <generalisation>
	    b parent class_ref 287671 // Stub
	end

	operation 1316023 "send"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1316151 "getPostMessage"
	class_operation private return_type class_ref 287287 // Message
	nparams 1
	  param inout name "r" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1316279 "getPostMessage"
	class_operation private return_type class_ref 287287 // Message
	nparams 2
	  param inout name "r" explicit_type "Runnable"
	  param inout name "token" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1316407 "handleCallback"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "message" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 582839 // mLooper (<unidirectional association>)
	relation 582839 --->
	  a role_name "mLooper" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 582839 // mLooper (<unidirectional association>)
	  b parent class_ref 129335 // Looper
      end

      classrelation 582967 // mQueue (<unidirectional association>)
	relation 582967 --->
	  a role_name "mQueue" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 582967 // mQueue (<unidirectional association>)
	  b parent class_ref 286903 // MessageQueue
      end

      classrelation 583095 // mCallback (<unidirectional association>)
	relation 583095 --->
	  a role_name "mCallback" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 583095 // mCallback (<unidirectional association>)
	  b parent class_ref 287159 // Callback
      end

      attribute 549559 "mAsynchronous"
	const_attribute package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 549687 "mMessenger"
	package explicit_type "IMessenger"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 287799 "BlockingRunnable"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 583223 // <realization>
	  relation 583223 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 583223 // <realization>
	    b parent class_ref 149943 // Runnable
	end

	attribute 549815 "mTask"
	  const_attribute private explicit_type "Runnable"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 549943 "mDone"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1316535 "BlockingRunnable"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "task" explicit_type "Runnable"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1316663 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1316791 "postAndWait"
	  public explicit_return_type "boolean"
	  nparams 2
	    param inout name "handler" type class_ref 132023 // Handler
	    param in name "timeout" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 132919 "IBinder"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base interface for a remotable object, the core part of a lightweight
remote procedure call mechanism designed for high performance when
performing in-process and cross-process calls.  This
interface describes the abstract protocol for interacting with a
remotable object.  Do not implement this interface directly, instead
extend from {@link Binder}.

<p>The key IBinder API is {@link #transact transact()} matched by
{@link Binder#onTransact Binder.onTransact()}.  These
methods allow you to send a call to an IBinder object and receive a
call coming in to a Binder object, respectively.  This transaction API
is synchronous, such that a call to {@link #transact transact()} does not
return until the target has returned from
{@link Binder#onTransact Binder.onTransact()}; this is the
expected behavior when calling an object that exists in the local
process, and the underlying inter-process communication (IPC) mechanism
ensures that these same semantics apply when going across processes.

<p>The data sent through transact() is a {@link Parcel}, a generic buffer
of data that also maintains some meta-data about its contents.  The meta
data is used to manage IBinder object references in the buffer, so that those
references can be maintained as the buffer moves across processes.  This
mechanism ensures that when an IBinder is written into a Parcel and sent to
another process, if that other process sends a reference to that same IBinder
back to the original process, then the original process will receive the
same IBinder object back.  These semantics allow IBinder/Binder objects to
be used as a unique identity (to serve as a token or for other purposes)
that can be managed across processes.

<p>The system maintains a pool of transaction threads in each process that
it runs in.  These threads are used to dispatch all
IPCs coming in from other processes.  For example, when an IPC is made from
process A to process B, the calling thread in A blocks in transact() as
it sends the transaction to process B.  The next available pool thread in
B receives the incoming transaction, calls Binder.onTransact() on the target
object, and replies with the result Parcel.  Upon receiving its result, the
thread in process A returns to allow its execution to continue.  In effect,
other processes appear to use as additional threads that you did not create
executing in your own process.

<p>The Binder system also supports recursion across processes.  For example
if process A performs a transaction to process B, and process B while
handling that transaction calls transact() on an IBinder that is implemented
in A, then the thread in A that is currently waiting for the original
transaction to finish will take care of calling Binder.onTransact() on the
object being called by B.  This ensures that the recursion semantics when
calling remote binder object are the same as when calling local objects.

<p>When working with remote objects, you often want to find out when they
are no longer valid.  There are three ways this can be determined:
<ul>
<li> The {@link #transact transact()} method will throw a
{@link RemoteException} exception if you try to call it on an IBinder
whose process no longer exists.
<li> The {@link #pingBinder()} method can be called, and will return false
if the remote process no longer exists.
<li> The {@link #linkToDeath linkToDeath()} method can be used to register
a {@link DeathRecipient} with the IBinder, which will be called when its
containing process goes away.
</ul>

@see Binder"
      attribute 535735 "FIRST_CALL_TRANSACTION"
	public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The first transaction code available for user commands.
"
      end

      attribute 535863 "LAST_CALL_TRANSACTION"
	public explicit_type "int"
	init_value " 0x00ffffff"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The last transaction code available for user commands.
"
      end

      attribute 535991 "PING_TRANSACTION"
	public explicit_type "int"
	init_value " ('_'<<24)|('P'<<16)|('N'<<8)|'G'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "IBinder protocol transaction code: pingBinder().
"
      end

      attribute 536119 "DUMP_TRANSACTION"
	public explicit_type "int"
	init_value " ('_'<<24)|('D'<<16)|('M'<<8)|'P'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "IBinder protocol transaction code: dump internal state.
"
      end

      attribute 536247 "SHELL_COMMAND_TRANSACTION"
	public explicit_type "int"
	init_value " ('_'<<24)|('C'<<16)|('M'<<8)|'D'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "IBinder protocol transaction code: execute a shell command.
@hide
"
      end

      attribute 536375 "INTERFACE_TRANSACTION"
	public explicit_type "int"
	init_value " ('_'<<24)|('N'<<16)|('T'<<8)|'F'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "IBinder protocol transaction code: interrogate the recipient side
of the transaction for its canonical interface descriptor.
"
      end

      attribute 536503 "TWEET_TRANSACTION"
	public explicit_type "int"
	init_value " ('_'<<24)|('T'<<16)|('W'<<8)|'T'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "IBinder protocol transaction code: send a tweet to the target
object.  The data in the parcel is intended to be delivered to
a shared messaging service associated with the object; it can be
anything, as long as it is not more than 130 UTF-8 characters to
conservatively fit within common messaging services.  As part of
{@link Build.VERSION_CODES#HONEYCOMB_MR2}, all Binder objects are
expected to support this protocol for fully integrated tweeting
across the platform.  To support older code, the default implementation
logs the tweet to the main log as a simple emulation of broadcasting
it publicly over the Internet.

<p>Also, upon completing the dispatch, the object must make a cup
of tea, return it to the caller, and exclaim \"jolly good message
old boy!\".
"
      end

      attribute 536631 "LIKE_TRANSACTION"
	public explicit_type "int"
	init_value " ('_'<<24)|('L'<<16)|('I'<<8)|'K'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "IBinder protocol transaction code: tell an app asynchronously that the
caller likes it.  The app is responsible for incrementing and maintaining
its own like counter, and may display this value to the user to indicate the
quality of the app.  This is an optional command that applications do not
need to handle, so the default implementation is to do nothing.

<p>There is no response returned and nothing about the
system will be functionally affected by it, but it will improve the
app's self-esteem.
"
      end

      attribute 536759 "SYSPROPS_TRANSACTION"
	public explicit_type "int"
	init_value " ('_'<<24)|('S'<<16)|('P'<<8)|'R'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 536887 "FLAG_ONEWAY"
	public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag to {@link #transact}: this is a one-way call, meaning that the
caller returns immediately, without waiting for a result from the
callee. Applies only if the caller and callee are in different
processes.
"
      end

      attribute 537015 "MAX_IPC_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 64 * 1024"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Limit that should be placed on IPC sizes to keep them safely under the
transaction buffer limit.
@hide
"
      end

      operation 1251895 "getInterfaceDescriptor"
	public return_type class_ref 129591 // String
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the canonical name of the interface supported by this binder."
      end

      operation 1252023 "pingBinder"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to see if the object still exists.

@return Returns false if the
hosting process is gone, otherwise the result (always by default
true) returned by the pingBinder() implementation on the other
side."
      end

      operation 1252151 "isBinderAlive"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check to see if the process that the binder is in is still alive.

@return false if the process is not alive.  Note that if it returns
true, the process may have died while the call is returning."
      end

      operation 1252279 "queryLocalInterface"
	public return_type class_ref 277687 // IInterface
	nparams 1
	  param inout name "descriptor" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempt to retrieve a local implementation of an interface
for this Binder object.  If null is returned, you will need
to instantiate a proxy class to marshall calls through
the transact() method."
      end

      operation 1252407 "dump"
	public explicit_return_type "void"
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the object's state into the given stream.

@param fd The raw file descriptor that the dump is being sent to.
@param args additional arguments to the dump request."
      end

      operation 1252535 "dumpAsync"
	public explicit_return_type "void"
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #dump(FileDescriptor, String[])} but always executes
asynchronously.  If the object is local, a new thread is created
to perform the dump.

@param fd The raw file descriptor that the dump is being sent to.
@param args additional arguments to the dump request."
      end

      operation 1252663 "shellCommand"
	public explicit_return_type "void"
	nparams 5
	  param inout name "in" explicit_type "FileDescriptor"
	  param inout name "out" explicit_type "FileDescriptor"
	  param inout name "err" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	  param inout name "resultReceiver" type class_ref 277815 // ResultReceiver
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Execute a shell command on this object.  This may be performed asynchrously from the caller;
the implementation must always call resultReceiver when finished.

@param in The raw file descriptor that an input data stream can be read from.
@param out The raw file descriptor that normal command messages should be written to.
@param err The raw file descriptor that command error messages should be written to.
@param args Command-line arguments.
@param resultReceiver Called when the command has finished executing, with the result code.
@hide"
      end

      operation 1252791 "transact"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "code" explicit_type "int"
	  param inout name "data" type class_ref 137527 // Parcel
	  param inout name "reply" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform a generic operation with the object.

@param code The action to perform.  This should
be a number between {@link #FIRST_CALL_TRANSACTION} and
{@link #LAST_CALL_TRANSACTION}.
@param data Marshalled data to send to the target.  Must not be null.
If you are not sending any data, you must create an empty Parcel
that is given here.
@param reply Marshalled data to be received from the target.  May be
null if you are not interested in the return value.
@param flags Additional operation flags.  Either 0 for a normal
RPC, or {@link #FLAG_ONEWAY} for a one-way RPC."
      end

      class 277943 "DeathRecipient"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1252919 "binderDied"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1253047 "linkToDeath"
	public explicit_return_type "void"
	nparams 2
	  param inout name "recipient" type class_ref 277943 // DeathRecipient
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register the recipient for a notification if this binder
goes away.  If this binder object unexpectedly goes away
(typically because its hosting process has been killed),
then the given {@link DeathRecipient}'s
{@link DeathRecipient#binderDied DeathRecipient.binderDied()} method
will be called.

<p>You will only receive death notifications for remote binders,
as local binders by definition can't die without you dying as well.

@throws RemoteException if the target IBinder's
process has already died.

@see #unlinkToDeath"
      end

      operation 1253175 "unlinkToDeath"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "recipient" type class_ref 277943 // DeathRecipient
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a previously registered death notification.
The recipient will no longer be called if this object
dies.

@return {@code true} if the <var>recipient</var> is successfully
unlinked, assuring you that its
{@link DeathRecipient#binderDied DeathRecipient.binderDied()} method
will not be called;  {@code false} if the target IBinder has already
died, meaning the method has been (or soon will be) called.

@throws java.util.NoSuchElementException if the given
<var>recipient</var> has not been registered with the IBinder, and
the IBinder is still alive.  Note that if the <var>recipient</var>
was never registered, but the IBinder has already died, then this
exception will <em>not</em> be thrown, and you will receive a false
return value instead."
      end
    end

    class 137399 "Parcelable"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface for classes whose instances can be written to
and restored from a {@link Parcel}.  Classes implementing the Parcelable
interface must also have a non-null static field called <code>CREATOR</code>
of a type that implements the {@link Parcelable.Creator} interface.

<p>A typical implementation of Parcelable is:</p>

<pre>
public class MyParcelable implements Parcelable {
    private int mData;

    public int describeContents() {
        return 0;
    }

    public void writeToParcel(Parcel out, int flags) {
        out.writeInt(mData);
    }

    public static final Parcelable.Creator&lt;MyParcelable&gt; CREATOR
            = new Parcelable.Creator&lt;MyParcelable&gt;() {
        public MyParcelable createFromParcel(Parcel in) {
            return new MyParcelable(in);
        }

        public MyParcelable[] newArray(int size) {
            return new MyParcelable[size];
        }
    };
    
    private MyParcelable(Parcel in) {
        mData = in.readInt();
    }
}</pre>"
      attribute 133175 "PARCELABLE_WRITE_RETURN_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for use with {@link #writeToParcel}: the object being written
is a return value, that is the result of a function such as
\"<code>Parcelable someFunction()</code>\",
\"<code>void someFunction(out Parcelable)</code>\", or
\"<code>void someFunction(inout Parcelable)</code>\".  Some implementations
may want to release resources at this point.
"
      end

      attribute 133303 "PARCELABLE_ELIDE_DUPLICATES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for use with {@link #writeToParcel}: a parent object will take
care of managing duplicate state/data that is nominally replicated
across its inner data members.  This flag instructs the inner data
types to omit that data during marshaling.  Exact behavior may vary
on a case by case basis.
@hide
"
      end

      attribute 133431 "CONTENTS_FILE_DESCRIPTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit masks for use with {@link #describeContents}: each bit represents a
kind of object considered to have potential special significance when
marshalled.


Descriptor bit used with {@link #describeContents()}: indicates that
the Parcelable object's flattened representation includes a file descriptor.

@see #describeContents()
"
      end

      operation 182839 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Describe the kinds of special objects contained in this Parcelable
instance's marshaled representation. For example, if the object will
include a file descriptor in the output of {@link #writeToParcel(Parcel, int)},
the return value of this method must include the
{@link #CONTENTS_FILE_DESCRIPTOR} bit.
 
@return a bitmask indicating the set of special object types marshaled
by this Parcelable object instance.

@see #CONTENTS_FILE_DESCRIPTOR"
      end

      operation 182967 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten this object in to a Parcel.

@param dest The Parcel in which the object should be written.
@param flags Additional flags about how the object should be written.
May be 0 or {@link #PARCELABLE_WRITE_RETURN_VALUE}."
      end

      class 137655 "Creator"
	visibility public stereotype "interface"
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 183095 "createFromParcel"
	  public explicit_return_type "T"
	  nparams 1
	    param inout name "source" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a new instance of the Parcelable class, instantiating it
from the given Parcel whose data had previously been written by
{@link Parcelable#writeToParcel Parcelable.writeToParcel()}.

@param source The Parcel to read the object's data from.
@return Returns a new instance of the Parcelable class."
	end

	operation 183223 "newArray"
	  public explicit_return_type "T"
	  nparams 1
	    param in name "size" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a new array of the Parcelable class.

@param size Size of the array.
@return Returns an array of the Parcelable class, with every entry
initialized to null."
	end
      end

      class 137783 "ClassLoaderCreator"
	visibility public stereotype "interface"
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 1
	actual class class_ref 137655 // Creator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 143031 // <realization>
	  relation 143031 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 143031 // <realization>
	    b parent class_ref 137655 // Creator
	end

	operation 183351 "createFromParcel"
	  public explicit_return_type "T"
	  nparams 2
	    param inout name "source" type class_ref 137527 // Parcel
	    param inout name "loader" explicit_type "ClassLoader"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a new instance of the Parcelable class, instantiating it
from the given Parcel whose data had previously been written by
{@link Parcelable#writeToParcel Parcelable.writeToParcel()} and
using the given ClassLoader.

@param source The Parcel to read the object's data from.
@param loader The ClassLoader that this object is being created in.
@return Returns a new instance of the Parcelable class."
	end
      end
    end

    class 137527 "Parcel"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Container for a message (data and object references) that can
be sent through an IBinder.  A Parcel can contain both flattened data
that will be unflattened on the other side of the IPC (using the various
methods here for writing specific types, or the general
{@link Parcelable} interface), and references to live {@link IBinder}
objects that will result in the other side receiving a proxy IBinder
connected with the original IBinder in the Parcel.

<p class=\"note\">Parcel is <strong>not</strong> a general-purpose
serialization mechanism.  This class (and the corresponding
{@link Parcelable} API for placing arbitrary objects into a Parcel) is
designed as a high-performance IPC transport.  As such, it is not
appropriate to place any Parcel data in to persistent storage: changes
in the underlying implementation of any of the data in the Parcel can
render older data unreadable.</p>

<p>The bulk of the Parcel API revolves around reading and writing data
of various types.  There are six major classes of such functions available.</p>

<h3>Primitives</h3>

<p>The most basic data functions are for writing and reading primitive
data types: {@link #writeByte}, {@link #readByte}, {@link #writeDouble},
{@link #readDouble}, {@link #writeFloat}, {@link #readFloat}, {@link #writeInt},
{@link #readInt}, {@link #writeLong}, {@link #readLong},
{@link #writeString}, {@link #readString}.  Most other
data operations are built on top of these.  The given data is written and
read using the endianess of the host CPU.</p>

<h3>Primitive Arrays</h3>

<p>There are a variety of methods for reading and writing raw arrays
of primitive objects, which generally result in writing a 4-byte length
followed by the primitive data items.  The methods for reading can either
read the data into an existing array, or create and return a new array.
These available types are:</p>

<ul>
<li> {@link #writeBooleanArray(boolean[])},
{@link #readBooleanArray(boolean[])}, {@link #createBooleanArray()}
<li> {@link #writeByteArray(byte[])},
{@link #writeByteArray(byte[], int, int)}, {@link #readByteArray(byte[])},
{@link #createByteArray()}
<li> {@link #writeCharArray(char[])}, {@link #readCharArray(char[])},
{@link #createCharArray()}
<li> {@link #writeDoubleArray(double[])}, {@link #readDoubleArray(double[])},
{@link #createDoubleArray()}
<li> {@link #writeFloatArray(float[])}, {@link #readFloatArray(float[])},
{@link #createFloatArray()}
<li> {@link #writeIntArray(int[])}, {@link #readIntArray(int[])},
{@link #createIntArray()}
<li> {@link #writeLongArray(long[])}, {@link #readLongArray(long[])},
{@link #createLongArray()}
<li> {@link #writeStringArray(String[])}, {@link #readStringArray(String[])},
{@link #createStringArray()}.
<li> {@link #writeSparseBooleanArray(SparseBooleanArray)},
{@link #readSparseBooleanArray()}.
</ul>

<h3>Parcelables</h3>

<p>The {@link Parcelable} protocol provides an extremely efficient (but
low-level) protocol for objects to write and read themselves from Parcels.
You can use the direct methods {@link #writeParcelable(Parcelable, int)}
and {@link #readParcelable(ClassLoader)} or
{@link #writeParcelableArray} and
{@link #readParcelableArray(ClassLoader)} to write or read.  These
methods write both the class type and its data to the Parcel, allowing
that class to be reconstructed from the appropriate class loader when
later reading.</p>

<p>There are also some methods that provide a more efficient way to work
with Parcelables: {@link #writeTypedObject}, {@link #writeTypedArray},
{@link #writeTypedList}, {@link #readTypedObject},
{@link #createTypedArray} and {@link #createTypedArrayList}.  These methods
do not write the class information of the original object: instead, the
caller of the read function must know what type to expect and pass in the
appropriate {@link Parcelable.Creator Parcelable.Creator} instead to
properly construct the new object and read its data.  (To more efficient
write and read a single Parceable object that is not null, you can directly
call {@link Parcelable#writeToParcel Parcelable.writeToParcel} and
{@link Parcelable.Creator#createFromParcel Parcelable.Creator.createFromParcel}
yourself.)</p>

<h3>Bundles</h3>

<p>A special type-safe container, called {@link Bundle}, is available
for key/value maps of heterogeneous values.  This has many optimizations
for improved performance when reading and writing data, and its type-safe
API avoids difficult to debug type errors when finally marshalling the
data contents into a Parcel.  The methods to use are
{@link #writeBundle(Bundle)}, {@link #readBundle()}, and
{@link #readBundle(ClassLoader)}.

<h3>Active Objects</h3>

<p>An unusual feature of Parcel is the ability to read and write active
objects.  For these objects the actual contents of the object is not
written, rather a special token referencing the object is written.  When
reading the object back from the Parcel, you do not get a new instance of
the object, but rather a handle that operates on the exact same object that
was originally written.  There are two forms of active objects available.</p>

<p>{@link Binder} objects are a core facility of Android's general cross-process
communication system.  The {@link IBinder} interface describes an abstract
protocol with a Binder object.  Any such interface can be written in to
a Parcel, and upon reading you will receive either the original object
implementing that interface or a special proxy implementation
that communicates calls back to the original object.  The methods to use are
{@link #writeStrongBinder(IBinder)},
{@link #writeStrongInterface(IInterface)}, {@link #readStrongBinder()},
{@link #writeBinderArray(IBinder[])}, {@link #readBinderArray(IBinder[])},
{@link #createBinderArray()},
{@link #writeBinderList(List)}, {@link #readBinderList(List)},
{@link #createBinderArrayList()}.</p>

<p>FileDescriptor objects, representing raw Linux file descriptor identifiers,
can be written and {@link ParcelFileDescriptor} objects returned to operate
on the original file descriptor.  The returned file descriptor is a dup
of the original file descriptor: the object and fd is different, but
operating on the same underlying file stream, with the same position, etc.
The methods to use are {@link #writeFileDescriptor(FileDescriptor)},
{@link #readFileDescriptor()}.

<h3>Untyped Containers</h3>

<p>A final class of methods are for writing and reading standard Java
containers of arbitrary types.  These all revolve around the
{@link #writeValue(Object)} and {@link #readValue(ClassLoader)} methods
which define the types of objects allowed.  The container methods are
{@link #writeArray(Object[])}, {@link #readArray(ClassLoader)},
{@link #writeList(List)}, {@link #readList(List, ClassLoader)},
{@link #readArrayList(ClassLoader)},
{@link #writeMap(Map)}, {@link #readMap(Map, ClassLoader)},
{@link #writeSparseArray(SparseArray)},
{@link #readSparseArray(ClassLoader)}."
      attribute 1655607 "DEBUG_RECYCLE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1655735 "DEBUG_ARRAY_MAP"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1463735 // TAG (<unidirectional association>)
	relation 1463735 --->
	  a role_name "TAG" init_value " \"Parcel\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1463735 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1655863 "mNativePtr"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SuppressWarnings({\"UnusedDeclaration\"})
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " used by native code"
      end

      attribute 1655991 "mOwnsNativeParcelObject"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag indicating if {@link #mNativePtr} was allocated by this object,
indicating that we're responsible for its lifecycle.
"
      end

      attribute 1656119 "mNativeSize"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1463863 // mStack (<unidirectional association>)
	relation 1463863 --->
	  a role_name "mStack" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1463863 // mStack (<unidirectional association>)
	  b parent class_ref 446775 // RuntimeException
      end

      attribute 1656247 "POOL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1463991 // sOwnedPool (<unidirectional association>)
	relation 1463991 --->
	  a role_name "sOwnedPool" multiplicity "[]" init_value " new Parcel[POOL_SIZE]" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1463991 // sOwnedPool (<unidirectional association>)
	  b parent class_ref 137527 // Parcel
      end

      classrelation 1464119 // sHolderPool (<unidirectional association>)
	relation 1464119 --->
	  a role_name "sHolderPool" multiplicity "[]" init_value " new Parcel[POOL_SIZE]" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1464119 // sHolderPool (<unidirectional association>)
	  b parent class_ref 137527 // Parcel
      end

      attribute 1656375 "VAL_NULL"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Keep in sync with frameworks/native/libs/binder/PersistableBundle.cpp."
      end

      attribute 1656503 "VAL_STRING"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1656631 "VAL_INTEGER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1656759 "VAL_MAP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1656887 "VAL_BUNDLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1657015 "VAL_PARCELABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1657143 "VAL_SHORT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1657271 "VAL_LONG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1657399 "VAL_FLOAT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1657527 "VAL_DOUBLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1657655 "VAL_BOOLEAN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1657783 "VAL_CHARSEQUENCE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1657911 "VAL_LIST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1658039 "VAL_SPARSEARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1658167 "VAL_BYTEARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1658295 "VAL_STRINGARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1658423 "VAL_IBINDER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1658551 "VAL_PARCELABLEARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1658679 "VAL_OBJECTARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 17"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1658807 "VAL_INTARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 18"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1658935 "VAL_LONGARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 19"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1659063 "VAL_BYTE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1659191 "VAL_SERIALIZABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 21"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1659319 "VAL_SPARSEBOOLEANARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 22"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1659447 "VAL_BOOLEANARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 23"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1659575 "VAL_CHARSEQUENCEARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 24"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1659703 "VAL_PERSISTABLEBUNDLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 25"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1659831 "VAL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 26"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1659959 "VAL_SIZEF"
	class_attribute const_attribute private explicit_type "int"
	init_value " 27"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1660087 "VAL_DOUBLEARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 28"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1660215 "EX_SECURITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The initial int32 in a Binder call's reply Parcel header:
 Keep these in sync with libbinder's binder/Status.h."
      end

      attribute 1660343 "EX_BAD_PARCELABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1660471 "EX_ILLEGAL_ARGUMENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1660599 "EX_NULL_POINTER"
	class_attribute const_attribute private explicit_type "int"
	init_value " -4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1660727 "EX_ILLEGAL_STATE"
	class_attribute const_attribute private explicit_type "int"
	init_value " -5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1660855 "EX_NETWORK_MAIN_THREAD"
	class_attribute const_attribute private explicit_type "int"
	init_value " -6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1660983 "EX_UNSUPPORTED_OPERATION"
	class_attribute const_attribute private explicit_type "int"
	init_value " -7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1661111 "EX_SERVICE_SPECIFIC"
	class_attribute const_attribute private explicit_type "int"
	init_value " -8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1661239 "EX_HAS_REPLY_HEADER"
	class_attribute const_attribute private explicit_type "int"
	init_value " -128"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " special; see below"
      end

      attribute 1661367 "EX_TRANSACTION_FAILED"
	class_attribute const_attribute private explicit_type "int"
	init_value " -129"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " EX_TRANSACTION_FAILED is used exclusively in native code.
 see libbinder's binder/Status.h"
      end

      operation 3806391 "nativeDataSize"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3806519 "nativeDataAvail"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3806647 "nativeDataPosition"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3806775 "nativeDataCapacity"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3806903 "nativeSetDataSize"
	class_operation private explicit_return_type "long"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3807031 "nativeSetDataPosition"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3807159 "nativeSetDataCapacity"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3807287 "nativePushAllowFds"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param inout name "allowFds" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3807415 "nativeRestoreAllowFds"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param inout name "lastValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3807543 "nativeWriteByteArray"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "nativePtr" explicit_type "long"
	  param inout name "b" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 3807671 "nativeWriteBlob"
	class_operation private explicit_return_type "void"
	nparams 4
	  param in name "nativePtr" explicit_type "long"
	  param inout name "b" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 3807799 "nativeWriteInt"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param in name "val" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3807927 "nativeWriteLong"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param in name "val" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3808055 "nativeWriteFloat"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param in name "val" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3808183 "nativeWriteDouble"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param in name "val" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3808311 "nativeWriteString"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param inout name "val" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3808439 "nativeWriteStrongBinder"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param inout name "val" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3808567 "nativeWriteFileDescriptor"
	class_operation private explicit_return_type "long"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param inout name "val" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3808695 "nativeCreateByteArray"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3808823 "nativeReadBlob"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3808951 "nativeReadInt"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3809079 "nativeReadLong"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3809207 "nativeReadFloat"
	class_operation private explicit_return_type "float"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3809335 "nativeReadDouble"
	class_operation private explicit_return_type "double"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3809463 "nativeReadString"
	class_operation private return_type class_ref 129591 // String
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3809591 "nativeReadStrongBinder"
	class_operation private return_type class_ref 132919 // IBinder
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3809719 "nativeReadFileDescriptor"
	class_operation private explicit_return_type "FileDescriptor"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3809847 "nativeCreate"
	class_operation private explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3809975 "nativeFreeBuffer"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3810103 "nativeDestroy"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3810231 "nativeMarshall"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3810359 "nativeUnmarshall"
	class_operation private explicit_return_type "long"
	nparams 4
	  param in name "nativePtr" explicit_type "long"
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 3810487 "nativeAppendFrom"
	class_operation private explicit_return_type "long"
	nparams 4
	  param in name "thisNativePtr" explicit_type "long"
	  param in name "otherNativePtr" explicit_type "long"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 3810615 "nativeHasFileDescriptors"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3810743 "nativeWriteInterfaceToken"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param inout name "interfaceName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3810871 "nativeEnforceInterface"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativePtr" explicit_type "long"
	  param inout name "interfaceName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3810999 "nativeGetBlobAshmemSize"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      classrelation 1464247 // STRING_CREATOR (<unidirectional association>)
	relation 1464247 --->
	  a role_name "STRING_CREATOR" init_value " new Parcelable.Creator<String>() {
        public String createFromParcel(Parcel source) {
            return source.readString();
        }
        public String[] newArray(int size) {
            return new String[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 1464247 // STRING_CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3811127 "obtain"
	class_operation public return_type class_ref 137527 // Parcel
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a new Parcel object from the pool."
      end

      operation 3811255 "recycle"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Put a Parcel object back into the pool.  You must not touch
the object after this call."
      end

      operation 3811383 "getGlobalAllocSize"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment " @hide "
      end

      operation 3811511 "getGlobalAllocCount"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment " @hide "
      end

      operation 3811639 "dataSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total amount of data contained in the parcel."
      end

      operation 3811767 "dataAvail"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the amount of data remaining to be read from the
parcel.  That is, {@link #dataSize}-{@link #dataPosition}."
      end

      operation 3811895 "dataPosition"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current position in the parcel data.  Never
more than {@link #dataSize}."
      end

      operation 3812023 "dataCapacity"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total amount of space in the parcel.  This is always
>= {@link #dataSize}.  The difference between it and dataSize() is the
amount of room left until the parcel needs to re-allocate its
data buffer."
      end

      operation 3812151 "setDataSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the amount of data in the parcel.  Can be either smaller or
larger than the current size.  If larger than the current capacity,
more memory will be allocated.

@param size The new number of bytes in the Parcel."
      end

      operation 3812279 "setDataPosition"
	public explicit_return_type "void"
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Move the current read/write position in the parcel.
@param pos New offset in the parcel; must be between 0 and
{@link #dataSize}."
      end

      operation 3812407 "setDataCapacity"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the capacity (current available space) of the parcel.

@param size The new capacity of the parcel, in bytes.  Can not be
less than {@link #dataSize} -- that is, you can not drop existing data
with this method."
      end

      operation 3812535 "pushAllowFds"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "allowFds" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3812663 "restoreAllowFds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "lastValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3812791 "marshall"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw bytes of the parcel.

<p class=\"note\">The data you retrieve here <strong>must not</strong>
be placed in any kind of persistent storage (on local disk, across
a network, etc).  For that, you should use standard serialization
or another kind of general serialization mechanism.  The Parcel
marshalled representation is highly optimized for local IPC, and as
such does not attempt to maintain compatibility with data created
in different versions of the platform."
      end

      operation 3812919 "unmarshall"
	public explicit_return_type "void"
	nparams 3
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the bytes in data to be the raw bytes of this Parcel."
      end

      operation 3813047 "appendFrom"
	public explicit_return_type "void"
	nparams 3
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3813175 "hasFileDescriptors"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report whether the parcel contains any marshalled file descriptors."
      end

      operation 3813303 "writeInterfaceToken"
	public explicit_return_type "void"
	nparams 1
	  param inout name "interfaceName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Store or read an IBinder interface token in the parcel at the current
{@link #dataPosition}.  This is used to validate that the marshalled
transaction is intended for the target interface."
      end

      operation 3813431 "enforceInterface"
	public explicit_return_type "void"
	nparams 1
	  param inout name "interfaceName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3813559 "writeByteArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a byte array into the parcel at the current {@link #dataPosition},
growing {@link #dataCapacity} if needed.
@param b Bytes to place into the parcel."
      end

      operation 3813687 "writeByteArray"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a byte array into the parcel at the current {@link #dataPosition},
growing {@link #dataCapacity} if needed.
@param b Bytes to place into the parcel.
@param offset Index of first byte to be written.
@param len Number of bytes to write."
      end

      operation 3813815 "writeBlob"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a blob of data into the parcel at the current {@link #dataPosition},
growing {@link #dataCapacity} if needed.
@param b Bytes to place into the parcel.
{@hide}
{@SystemApi}"
      end

      operation 3813943 "writeBlob"
	public explicit_return_type "void"
	nparams 3
	  param inout name "b" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a blob of data into the parcel at the current {@link #dataPosition},
growing {@link #dataCapacity} if needed.
@param b Bytes to place into the parcel.
@param offset Index of first byte to be written.
@param len Number of bytes to write.
{@hide}
{@SystemApi}"
      end

      operation 3814071 "writeInt"
	public explicit_return_type "void"
	nparams 1
	  param in name "val" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write an integer value into the parcel at the current dataPosition(),
growing dataCapacity() if needed."
      end

      operation 3814199 "writeLong"
	public explicit_return_type "void"
	nparams 1
	  param in name "val" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a long integer value into the parcel at the current dataPosition(),
growing dataCapacity() if needed."
      end

      operation 3814327 "writeFloat"
	public explicit_return_type "void"
	nparams 1
	  param in name "val" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a floating point value into the parcel at the current
dataPosition(), growing dataCapacity() if needed."
      end

      operation 3814455 "writeDouble"
	public explicit_return_type "void"
	nparams 1
	  param in name "val" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a double precision floating point value into the parcel at the
current dataPosition(), growing dataCapacity() if needed."
      end

      operation 3814583 "writeString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a string value into the parcel at the current dataPosition(),
growing dataCapacity() if needed."
      end

      operation 3814711 "writeCharSequence"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a CharSequence value into the parcel at the current dataPosition(),
growing dataCapacity() if needed.
@hide"
      end

      operation 3814839 "writeStrongBinder"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write an object into the parcel at the current dataPosition(),
growing dataCapacity() if needed."
      end

      operation 3814967 "writeStrongInterface"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 277687 // IInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write an object into the parcel at the current dataPosition(),
growing dataCapacity() if needed."
      end

      operation 3815095 "writeFileDescriptor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a FileDescriptor into the parcel at the current dataPosition(),
growing dataCapacity() if needed.

<p class=\"caution\">The file descriptor will not be closed, which may
result in file descriptor leaks when objects are returned from Binder
calls.  Use {@link ParcelFileDescriptor#writeToParcel} instead, which
accepts contextual flags and will close the original file descriptor
if {@link Parcelable#PARCELABLE_WRITE_RETURN_VALUE} is set.</p>"
      end

      operation 3815223 "updateNativeSize"
	private explicit_return_type "void"
	nparams 1
	  param in name "newNativeSize" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3815351 "writeRawFileDescriptor"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
This will be the new name for writeFileDescriptor, for consistency."
      end

      operation 3815479 "writeRawFileDescriptorArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
Write an array of FileDescriptor objects into the Parcel.

@param value The array of objects to be written."
      end

      operation 3815607 "writeByte"
	public explicit_return_type "void"
	nparams 1
	  param in name "val" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a byte value into the parcel at the current dataPosition(),
growing dataCapacity() if needed."
      end

      operation 3815735 "writeMap"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "Map"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Please use {@link #writeBundle} instead.  Flattens a Map into the parcel
at the current dataPosition(),
growing dataCapacity() if needed.  The Map keys must be String objects.
The Map values are written using {@link #writeValue} and must follow
the specification there.

<p>It is strongly recommended to use {@link #writeBundle} instead of
this method, since the Bundle class provides a type-safe API that
allows you to avoid mysterious type errors at the point of marshalling."
      end

      operation 3815863 "writeMapInternal"
	package explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "Map<String,Object>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a Map into the parcel at the current dataPosition(),
growing dataCapacity() if needed.  The Map keys must be String objects.

 package "
      end

      operation 3815991 "writeArrayMapInternal"
	package explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 156343 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten an ArrayMap into the parcel at the current dataPosition(),
growing dataCapacity() if needed.  The Map keys must be String objects.

 package "
      end

      operation 3816119 "writeArrayMap"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 156343 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide For testing only."
      end

      operation 3816247 "writeArraySet"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 385591 // ArraySet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0}<? extends Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write an array set to the parcel.

@param val The array set to write.

@hide"
      end

      operation 3816375 "writeBundle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a Bundle into the parcel at the current dataPosition(),
growing dataCapacity() if needed."
      end

      operation 3816503 "writePersistableBundle"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 158007 // PersistableBundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a PersistableBundle into the parcel at the current dataPosition(),
growing dataCapacity() if needed."
      end

      operation 3816631 "writeSize"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 331191 // Size
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a Size into the parcel at the current dataPosition(),
growing dataCapacity() if needed."
      end

      operation 3816759 "writeSizeF"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 465719 // SizeF
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a SizeF into the parcel at the current dataPosition(),
growing dataCapacity() if needed."
      end

      operation 3816887 "writeList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "List"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a List into the parcel at the current dataPosition(), growing
dataCapacity() if needed.  The List values are written using
{@link #writeValue} and must follow the specification there."
      end

      operation 3817015 "writeArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten an Object array into the parcel at the current dataPosition(),
growing dataCapacity() if needed.  The array values are written using
{@link #writeValue} and must follow the specification there."
      end

      operation 3817143 "writeSparseArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 139575 // SparseArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a generic SparseArray into the parcel at the current
dataPosition(), growing dataCapacity() if needed.  The SparseArray
values are written using {@link #writeValue} and must follow the
specification there."
      end

      operation 3817271 "writeSparseBooleanArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 369463 // SparseBooleanArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3817399 "writeBooleanArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3817527 "createBooleanArray"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3817655 "readBooleanArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3817783 "writeCharArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3817911 "createCharArray"
	public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3818039 "readCharArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3818167 "writeIntArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3818295 "createIntArray"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3818423 "readIntArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3818551 "writeLongArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3818679 "createLongArray"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3818807 "readLongArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3818935 "writeFloatArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3819063 "createFloatArray"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3819191 "readFloatArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3819319 "writeDoubleArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3819447 "createDoubleArray"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3819575 "readDoubleArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3819703 "writeStringArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3819831 "createStringArray"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3819959 "readStringArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3820087 "writeBinderArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3820215 "writeCharSequenceArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3820343 "writeCharSequenceList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "ArrayList<CharSequence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3820471 "createBinderArray"
	public return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3820599 "readBinderArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3820727 "writeTypedList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "List<T>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a List containing a particular object type into the parcel, at
the current dataPosition() and growing dataCapacity() if needed.  The
type of the objects in the list must be one that implements Parcelable.
Unlike the generic writeList() method, however, only the raw data of the
objects is written and not their type, so you must use the corresponding
readTypedList() to unmarshall them.

@param val The list of objects to be written.

@see #createTypedArrayList
@see #readTypedList
@see Parcelable"
      end

      operation 3820855 "writeStringList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "List<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a List containing String objects into the parcel, at
the current dataPosition() and growing dataCapacity() if needed.  They
can later be retrieved with {@link #createStringArrayList} or
{@link #readStringList}.

@param val The list of strings to be written.

@see #createStringArrayList
@see #readStringList"
      end

      operation 3820983 "writeBinderList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "List<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a List containing IBinder objects into the parcel, at
the current dataPosition() and growing dataCapacity() if needed.  They
can later be retrieved with {@link #createBinderArrayList} or
{@link #readBinderList}.

@param val The list of strings to be written.

@see #createBinderArrayList
@see #readBinderList"
      end

      operation 3821111 "writeTypedArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "val" explicit_type "T"
	  param in name "parcelableFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a heterogeneous array containing a particular object type into
the parcel, at
the current dataPosition() and growing dataCapacity() if needed.  The
type of the objects in the array must be one that implements Parcelable.
Unlike the {@link #writeParcelableArray} method, however, only the
raw data of the objects is written and not their type, so you must use
{@link #readTypedArray} with the correct corresponding
{@link Parcelable.Creator} implementation to unmarshall them.

@param val The array of objects to be written.
@param parcelableFlags Contextual flags as per
{@link Parcelable#writeToParcel(Parcel, int) Parcelable.writeToParcel()}.

@see #readTypedArray
@see #writeParcelableArray
@see Parcelable.Creator"
      end

      operation 3821239 "writeTypedObject"
	public explicit_return_type "void"
	nparams 2
	  param inout name "val" explicit_type "T"
	  param in name "parcelableFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten the Parcelable object into the parcel.

@param val The Parcelable object to be written.
@param parcelableFlags Contextual flags as per
{@link Parcelable#writeToParcel(Parcel, int) Parcelable.writeToParcel()}.

@see #readTypedObject"
      end

      operation 3821367 "writeValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten a generic object in to a parcel.  The given Object value may
currently be one of the following types:

<ul>
<li> null
<li> String
<li> Byte
<li> Short
<li> Integer
<li> Long
<li> Float
<li> Double
<li> Boolean
<li> String[]
<li> boolean[]
<li> byte[]
<li> int[]
<li> long[]
<li> Object[] (supporting objects of the same type defined here).
<li> {@link Bundle}
<li> Map (as supported by {@link #writeMap}).
<li> Any object that implements the {@link Parcelable} protocol.
<li> Parcelable[]
<li> CharSequence (as supported by {@link TextUtils#writeToParcel}).
<li> List (as supported by {@link #writeList}).
<li> {@link SparseArray} (as supported by {@link #writeSparseArray(SparseArray)}).
<li> {@link IBinder}
<li> Any object that implements Serializable (but see
     {@link #writeSerializable} for caveats).  Note that all of the
     previous types have relatively efficient implementations for
     writing to a Parcel; having to rely on the generic serialization
     approach is much less efficient and should be avoided whenever
     possible.
</ul>

<p class=\"caution\">{@link Parcelable} objects are written with
{@link Parcelable#writeToParcel} using contextual flags of 0.  When
serializing objects containing {@link ParcelFileDescriptor}s,
this may result in file descriptor leaks when they are returned from
Binder calls (where {@link Parcelable#PARCELABLE_WRITE_RETURN_VALUE}
should be used).</p>"
      end

      operation 3821495 "writeParcelable"
	public explicit_return_type "void"
	nparams 2
	  param inout name "p" type class_ref 137399 // Parcelable
	  param in name "parcelableFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten the name of the class of the Parcelable and its contents
into the parcel.

@param p The Parcelable object to be written.
@param parcelableFlags Contextual flags as per
{@link Parcelable#writeToParcel(Parcel, int) Parcelable.writeToParcel()}."
      end

      operation 3821623 "writeParcelableCreator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 137399 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3821751 "writeSerializable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" explicit_type "Serializable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a generic serializable object in to a Parcel.  It is strongly
recommended that this method be avoided, since the serialization
overhead is extremely large, and this approach will be much slower than
using the other approaches to writing data in to a Parcel."
      end

      operation 3821879 "writeException"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" explicit_type "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Special function for writing an exception result at the header of
a parcel, to be used when returning an exception from a transaction.
Note that this currently only supports a few exception types; any other
exception will be re-thrown by this function as a RuntimeException
(to be caught by the system's last-resort exception handling when
dispatching a transaction).

<p>The supported exception types are:
<ul>
<li>{@link BadParcelableException}
<li>{@link IllegalArgumentException}
<li>{@link IllegalStateException}
<li>{@link NullPointerException}
<li>{@link SecurityException}
<li>{@link NetworkOnMainThreadException}
</ul>

@param e The Exception to be written.

@see #writeNoException
@see #readException"
      end

      operation 3822007 "writeNoException"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Special function for writing information at the front of the Parcel
indicating that no exception occurred.

@see #writeException
@see #readException"
      end

      operation 3822135 "readException"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Special function for reading an exception result from the header of
a parcel, to be used after receiving the result of a transaction.  This
will throw the exception for you if it had been written to the Parcel,
otherwise return and let you read the normal result data from the Parcel.

@see #writeException
@see #writeNoException"
      end

      operation 3822263 "readExceptionCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the header of a Binder call's response Parcel and
returns the exception code.  Deals with lite or fat headers.
In the common successful case, this header is generally zero.
In less common cases, it's a small negative number and will be
followed by an error string.

This exists purely for android.database.DatabaseUtils and
insulating it from having to handle fat headers as returned by
e.g. StrictMode-induced RPC responses.

@hide"
      end

      operation 3822391 "readException"
	public explicit_return_type "void"
	nparams 2
	  param in name "code" explicit_type "int"
	  param inout name "msg" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throw an exception with the given message. Not intended for use
outside the Parcel class.

@param code Used to determine which exception class to throw.
@param msg The exception message."
      end

      operation 3822519 "readInt"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read an integer value from the parcel at the current dataPosition()."
      end

      operation 3822647 "readLong"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a long integer value from the parcel at the current dataPosition()."
      end

      operation 3822775 "readFloat"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a floating point value from the parcel at the current
dataPosition()."
      end

      operation 3822903 "readDouble"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a double precision floating point value from the parcel at the
current dataPosition()."
      end

      operation 3823031 "readString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a string value from the parcel at the current dataPosition()."
      end

      operation 3823159 "readCharSequence"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a CharSequence value from the parcel at the current dataPosition().
@hide"
      end

      operation 3823287 "readStrongBinder"
	public return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read an object from the parcel at the current dataPosition()."
      end

      operation 3823415 "readFileDescriptor"
	public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a FileDescriptor from the parcel at the current dataPosition()."
      end

      operation 3823543 "readRawFileDescriptor"
	public explicit_return_type "FileDescriptor"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3823671 "createRawFileDescriptorArray"
	public explicit_return_type "FileDescriptor"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
Read and return a new array of FileDescriptors from the parcel.
@return the FileDescriptor array, or null if the array is null."
      end

      operation 3823799 "readRawFileDescriptorArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
Read an array of FileDescriptors from a parcel.
The passed array must be exactly the length of the array in the parcel.
@return the FileDescriptor array, or null if the array is null."
      end

      operation 3823927 "openFileDescriptor"
	class_operation package explicit_return_type "FileDescriptor"
	nparams 2
	  param inout name "file" type class_ref 129591 // String
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "package"
      end

      operation 3824055 "dupFileDescriptor"
	class_operation package explicit_return_type "FileDescriptor"
	nparams 1
	  param inout name "orig" explicit_type "FileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "package"
      end

      operation 3824183 "closeFileDescriptor"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "desc" explicit_type "FileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "package"
      end

      operation 3824311 "clearFileDescriptor"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "desc" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "package"
      end

      operation 3824439 "readByte"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a byte value from the parcel at the current dataPosition()."
      end

      operation 3824567 "readMap"
	public explicit_return_type "void"
	nparams 2
	  param inout name "outVal" explicit_type "Map"
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Please use {@link #readBundle(ClassLoader)} instead (whose data must have
been written with {@link #writeBundle}.  Read into an existing Map object
from the parcel at the current dataPosition()."
      end

      operation 3824695 "readList"
	public explicit_return_type "void"
	nparams 2
	  param inout name "outVal" explicit_type "List"
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read into an existing List object from the parcel at the current
dataPosition(), using the given class loader to load any enclosed
Parcelables.  If it is null, the default class loader is used."
      end

      operation 3824823 "readHashMap"
	public explicit_return_type "HashMap"
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Please use {@link #readBundle(ClassLoader)} instead (whose data must have
been written with {@link #writeBundle}.  Read and return a new HashMap
object from the parcel at the current dataPosition(), using the given
class loader to load any enclosed Parcelables.  Returns null if
the previously written map object was null."
      end

      operation 3824951 "readBundle"
	public return_type class_ref 131511 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new Bundle object from the parcel at the current
dataPosition().  Returns null if the previously written Bundle object was
null."
      end

      operation 3825079 "readBundle"
	public return_type class_ref 131511 // Bundle
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new Bundle object from the parcel at the current
dataPosition(), using the given class loader to initialize the class
loader of the Bundle for later retrieval of Parcelable objects.
Returns null if the previously written Bundle object was null."
      end

      operation 3825207 "readPersistableBundle"
	public return_type class_ref 158007 // PersistableBundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new Bundle object from the parcel at the current
dataPosition().  Returns null if the previously written Bundle object was
null."
      end

      operation 3825335 "readPersistableBundle"
	public return_type class_ref 158007 // PersistableBundle
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new Bundle object from the parcel at the current
dataPosition(), using the given class loader to initialize the class
loader of the Bundle for later retrieval of Parcelable objects.
Returns null if the previously written Bundle object was null."
      end

      operation 3825463 "readSize"
	public return_type class_ref 331191 // Size
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a Size from the parcel at the current dataPosition()."
      end

      operation 3825591 "readSizeF"
	public return_type class_ref 465719 // SizeF
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a SizeF from the parcel at the current dataPosition()."
      end

      operation 3825719 "createByteArray"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a byte[] object from the parcel."
      end

      operation 3825847 "readByteArray"
	public explicit_return_type "void"
	nparams 1
	  param inout name "val" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a byte[] object from the parcel and copy it into the
given byte array."
      end

      operation 3825975 "readBlob"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a blob of data from the parcel and return it as a byte array.
{@hide}
{@SystemApi}"
      end

      operation 3826103 "readStringArray"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a String[] object from the parcel.
{@hide}"
      end

      operation 3826231 "readCharSequenceArray"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a CharSequence[] object from the parcel.
{@hide}"
      end

      operation 3826359 "readCharSequenceList"
	public explicit_return_type "ArrayList<CharSequence>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return an ArrayList&lt;CharSequence&gt; object from the parcel.
{@hide}"
      end

      operation 3826487 "readArrayList"
	public explicit_return_type "ArrayList"
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new ArrayList object from the parcel at the current
dataPosition().  Returns null if the previously written list object was
null.  The given class loader will be used to load any enclosed
Parcelables."
      end

      operation 3826615 "readArray"
	public return_type class_ref 132663 // Object
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new Object array from the parcel at the current
dataPosition().  Returns null if the previously written array was
null.  The given class loader will be used to load any enclosed
Parcelables."
      end

      operation 3826743 "readSparseArray"
	public return_type class_ref 139575 // SparseArray
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new SparseArray object from the parcel at the current
dataPosition().  Returns null if the previously written list object was
null.  The given class loader will be used to load any enclosed
Parcelables."
      end

      operation 3826871 "readSparseBooleanArray"
	public return_type class_ref 369463 // SparseBooleanArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new SparseBooleanArray object from the parcel at the current
dataPosition().  Returns null if the previously written list object was
null."
      end

      operation 3826999 "createTypedArrayList"
	public explicit_return_type "ArrayList<T>"
	nparams 1
	  param inout name "c" type class_ref 137655 // Creator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new ArrayList containing a particular object type from
the parcel that was written with {@link #writeTypedList} at the
current dataPosition().  Returns null if the
previously written list object was null.  The list <em>must</em> have
previously been written via {@link #writeTypedList} with the same object
type.

@return A newly created ArrayList containing objects with the same data
        as those that were previously written.

@see #writeTypedList"
      end

      operation 3827127 "readTypedList"
	public explicit_return_type "void"
	nparams 2
	  param inout name "list" explicit_type "List<T>"
	  param inout name "c" type class_ref 137655 // Creator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read into the given List items containing a particular object type
that were written with {@link #writeTypedList} at the
current dataPosition().  The list <em>must</em> have
previously been written via {@link #writeTypedList} with the same object
type.

@return A newly created ArrayList containing objects with the same data
        as those that were previously written.

@see #writeTypedList"
      end

      operation 3827255 "createStringArrayList"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new ArrayList containing String objects from
the parcel that was written with {@link #writeStringList} at the
current dataPosition().  Returns null if the
previously written list object was null.

@return A newly created ArrayList containing strings with the same data
        as those that were previously written.

@see #writeStringList"
      end

      operation 3827383 "createBinderArrayList"
	public return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new ArrayList containing IBinder objects from
the parcel that was written with {@link #writeBinderList} at the
current dataPosition().  Returns null if the
previously written list object was null.

@return A newly created ArrayList containing strings with the same data
        as those that were previously written.

@see #writeBinderList"
      end

      operation 3827511 "readStringList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "list" explicit_type "List<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read into the given List items String objects that were written with
{@link #writeStringList} at the current dataPosition().

@return A newly created ArrayList containing strings with the same data
        as those that were previously written.

@see #writeStringList"
      end

      operation 3827639 "readBinderList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "list" explicit_type "List<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read into the given List items IBinder objects that were written with
{@link #writeBinderList} at the current dataPosition().

@return A newly created ArrayList containing strings with the same data
        as those that were previously written.

@see #writeBinderList"
      end

      operation 3827767 "createTypedArray"
	public explicit_return_type "T"
	nparams 1
	  param inout name "c" type class_ref 137655 // Creator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new array containing a particular object type from
the parcel at the current dataPosition().  Returns null if the
previously written array was null.  The array <em>must</em> have
previously been written via {@link #writeTypedArray} with the same
object type.

@return A newly created array containing objects with the same data
        as those that were previously written.

@see #writeTypedArray"
      end

      operation 3827895 "readTypedArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "val" explicit_type "T"
	  param inout name "c" type class_ref 137655 // Creator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}[] ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3828023 "readTypedArray"
	public explicit_return_type "T"
	nparams 1
	  param inout name "c" type class_ref 137655 // Creator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated
@hide"
      end

      operation 3828151 "readTypedObject"
	public explicit_return_type "T"
	nparams 1
	  param inout name "c" type class_ref 137655 // Creator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a typed Parcelable object from a parcel.
Returns null if the previous written object was null.
The object <em>must</em> have previous been written via
{@link #writeTypedObject} with the same object type.

@return A newly created object of the type that was previously
        written.

@see #writeTypedObject"
      end

      operation 3828279 "writeParcelableArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "value" explicit_type "T"
	  param in name "parcelableFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a heterogeneous array of Parcelable objects into the Parcel.
Each object in the array is written along with its class name, so
that the correct class can later be instantiated.  As a result, this
has significantly more overhead than {@link #writeTypedArray}, but will
correctly handle an array containing more than one type of object.

@param value The array of objects to be written.
@param parcelableFlags Contextual flags as per
{@link Parcelable#writeToParcel(Parcel, int) Parcelable.writeToParcel()}.

@see #writeTypedArray"
      end

      operation 3828407 "readValue"
	public return_type class_ref 132663 // Object
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a typed object from a parcel.  The given class loader will be
used to load any enclosed Parcelables.  If it is null, the default class
loader will be used."
      end

      operation 3828535 "readParcelable"
	public explicit_return_type "T"
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Read and return a new Parcelable from the parcel.  The given class loader
will be used to load any enclosed Parcelables.  If it is null, the default
class loader will be used.
@param loader A ClassLoader from which to instantiate the Parcelable
object, or null for the default class loader.
@return Returns the newly created Parcelable, or null if a null
object has been written.
@throws BadParcelableException Throws BadParcelableException if there
was an error trying to instantiate the Parcelable."
      end

      operation 3828663 "readCreator"
	public explicit_return_type "T"
	nparams 2
	  param inout name "creator" type class_ref 137655 // Creator
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " @hide "
      end

      operation 3828791 "readParcelableCreator"
	public return_type class_ref 137655 // Creator
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3828919 "readParcelableArray"
	public return_type class_ref 137399 // Parcelable
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new Parcelable array from the parcel.
The given class loader will be used to load any enclosed
Parcelables.
@return the Parcelable array, or null if the array is null"
      end

      operation 3829047 "readSerializable"
	public explicit_return_type "Serializable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read and return a new Serializable object from the parcel.
@return the Serializable object, or null if the Serializable name
wasn't found in the parcel."
      end

      operation 3829175 "readSerializable"
	private explicit_return_type "Serializable"
	nparams 1
	  param in name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1661495 "mCreators"
	class_attribute const_attribute private explicit_type "ClassLoader,HashMap<String,Parcelable.Creator<?>>"
	init_value " new HashMap<>()"
	stereotype "HashMap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cache of previously looked up CREATOR.createFromParcel() methods for
 particular classes.  Keys are the names of the classes, values are
 Method objects."
      end

      operation 3829303 "obtain"
	class_operation protected return_type class_ref 137527 // Parcel
	nparams 1
	  param in name "obj" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide for internal use only. "
      end

      operation 3829431 "obtain"
	class_operation protected return_type class_ref 137527 // Parcel
	nparams 1
	  param in name "obj" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3829559 "Parcel"
	private explicit_return_type ""
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3829687 "init"
	private explicit_return_type "void"
	nparams 1
	  param in name "nativePtr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3829815 "freeBuffer"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3829943 "destroy"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3830071 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3830199 "readMapInternal"
	package explicit_return_type "void"
	nparams 3
	  param inout name "outVal" explicit_type "Map"
	  param in name "N" explicit_type "int"
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package "
      end

      operation 3830327 "readArrayMapInternal"
	package explicit_return_type "void"
	nparams 3
	  param inout name "outVal" type class_ref 156343 // ArrayMap
	  param in name "N" explicit_type "int"
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package "
      end

      operation 3830455 "readArrayMapSafelyInternal"
	package explicit_return_type "void"
	nparams 3
	  param inout name "outVal" type class_ref 156343 // ArrayMap
	  param in name "N" explicit_type "int"
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package "
      end

      operation 3830583 "readArrayMap"
	public explicit_return_type "void"
	nparams 2
	  param inout name "outVal" type class_ref 156343 // ArrayMap
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide For testing only."
      end

      operation 3830711 "readArraySet"
	public return_type class_ref 385591 // ArraySet
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Object> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Reads an array set.

@param loader The class loader to use.

@hide"
      end

      operation 3830839 "readListInternal"
	private explicit_return_type "void"
	nparams 3
	  param inout name "outVal" explicit_type "List"
	  param in name "N" explicit_type "int"
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3830967 "readArrayInternal"
	private explicit_return_type "void"
	nparams 3
	  param inout name "outVal" type class_ref 132663 // Object
	  param in name "N" explicit_type "int"
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3831095 "readSparseArrayInternal"
	private explicit_return_type "void"
	nparams 3
	  param inout name "outVal" type class_ref 139575 // SparseArray
	  param in name "N" explicit_type "int"
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3831223 "readSparseBooleanArrayInternal"
	private explicit_return_type "void"
	nparams 2
	  param inout name "outVal" type class_ref 369463 // SparseBooleanArray
	  param in name "N" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3831351 "getBlobAshmemSize"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide For testing"
      end
    end

    class 158007 "PersistableBundle"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A mapping from String keys to values of various types. The set of types
supported by this class is purposefully restricted to simple objects that can
safely be persisted to and restored from disk.

@see Bundle"
      classrelation 1465143 // <generalisation>
	relation 1465143 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1465143 // <generalisation>
	  b parent class_ref 536247 // BaseBundle
      end

      classrelation 1465271 // <realization>
	relation 1465271 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1465271 // <realization>
	  b parent class_ref 242231 // Cloneable
      end

      classrelation 1465399 // <realization>
	relation 1465399 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1465399 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 1465783 // TAG_PERSISTABLEMAP (<unidirectional association>)
	relation 1465783 --->
	  a role_name "TAG_PERSISTABLEMAP" init_value " \"pbundle_as_map\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1465783 // TAG_PERSISTABLEMAP (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1465911 // EMPTY (<unidirectional association>)
	relation 1465911 --->
	  a role_name "EMPTY" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1465911 // EMPTY (<unidirectional association>)
	  b parent class_ref 158007 // PersistableBundle
      end

      extra_member 133047 "initialization"
	
	cpp "" ""
	java "  static {
        EMPTY = new PersistableBundle();
        EMPTY.mMap = ArrayMap.EMPTY;
    }"
	php ""
	python ""
	idl ""
      end

      operation 3841591 "isValidType"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3841719 "PersistableBundle"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty PersistableBundle."
      end

      operation 3841847 "PersistableBundle"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty PersistableBundle sized to hold the given number of
elements. The PersistableBundle will grow as needed.

@param capacity the initial capacity of the PersistableBundle"
      end

      operation 3841975 "PersistableBundle"
	public explicit_return_type ""
	nparams 1
	  param inout name "b" type class_ref 158007 // PersistableBundle
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a PersistableBundle containing a copy of the mappings from the given
PersistableBundle.

@param b a PersistableBundle to be copied."
      end

      operation 3842103 "PersistableBundle"
	public explicit_return_type ""
	nparams 1
	  param inout name "b" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a PersistableBundle from a Bundle.

@param b a Bundle to be copied.

@throws IllegalArgumentException if any element of {@code b} cannot be persisted.

@hide"
      end

      operation 3842231 "PersistableBundle"
	private explicit_return_type ""
	nparams 1
	  param inout name "map" type class_ref 156343 // ArrayMap
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String, Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a PersistableBundle containing the mappings passed in.

@param map a Map containing only those items that can be persisted.
@throws IllegalArgumentException if any element of #map cannot be persisted."
      end

      operation 3842359 "PersistableBundle"
	package explicit_return_type ""
	nparams 2
	  param inout name "parcelledData" type class_ref 137527 // Parcel
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package "
      end

      operation 3842487 "forPair"
	class_operation public return_type class_ref 158007 // PersistableBundle
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make a PersistableBundle for a single key/value pair.

@hide"
      end

      operation 3842615 "clone"
	public return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Clones the current PersistableBundle. The internal map is cloned, but the keys and
values to which it refers are copied by reference."
      end

      operation 3842743 "putPersistableBundle"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 158007 // PersistableBundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a PersistableBundle value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a Bundle object, or null"
      end

      operation 3842871 "getPersistableBundle"
	public return_type class_ref 158007 // PersistableBundle
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a Bundle value, or null"
      end

      classrelation 1466039 // CREATOR (<unidirectional association>)
	relation 1466039 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<PersistableBundle>() {
                @Override
                public PersistableBundle createFromParcel(Parcel in) {
                    return in.readPersistableBundle();
                }

                @Override
                public PersistableBundle[] newArray(int size) {
                    return new PersistableBundle[size];
                }
            }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PersistableBundle> ${name}${value};
"
	    classrelation_ref 1466039 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3842999 "writeUnknownObject"
	public explicit_return_type "void"
	nparams 3
	  param inout name "v" type class_ref 132663 // Object
	  param inout name "name" type class_ref 129591 // String
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 3843127 "saveToXml"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "XmlPullParserException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      class 545463 "MyReadMapCallback"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3843255 "readThisUnknownObjectXml"
	  public return_type class_ref 132663 // Object
	  nparams 2
	    param inout name "in" explicit_type "XmlPullParser"
	    param inout name "tag" type class_ref 129591 // String
	  nexceptions 2
	    explicit_exception "XmlPullParserException"
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 3843383 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Report the nature of this Parcelable's contents"
      end

      operation 3843511 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Writes the PersistableBundle contents to a Parcel, typically in order for
it to be passed through an IBinder connection.
@param parcel The parcel to copy this bundle to."
      end

      operation 3843639 "restoreFromXml"
	class_operation public return_type class_ref 158007 // PersistableBundle
	nparams 1
	  param inout name "in" explicit_type "XmlPullParser"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "XmlPullParserException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3843767 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 159031 "RemoteException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Parent exception for all Binder remote-invocation errors"
      classrelation 1450039 // <generalisation>
	relation 1450039 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1450039 // <generalisation>
	  b parent class_ref 348855 // AndroidException
      end

      operation 3750583 "RemoteException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3750711 "RemoteException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3750839 "rethrowAsRuntimeException"
	public return_type class_ref 446775 // RuntimeException
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3750967 "rethrowFromSystemServer"
	public return_type class_ref 446775 // RuntimeException
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rethrow this exception when we know it came from the system server. This
gives us an opportunity to throw a nice clean
{@link DeadSystemException} signal to avoid spamming logs with
misleading stack traces.
<p>
Apps making calls into the system server may end up persisting internal
state or making security decisions based on the perceived success or
failure of a call, or any default values returned. For this reason, we
want to strongly throw when there was trouble with the transaction.

@hide"
      end
    end

    class 264887 "ParcelFileDescriptor"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The FileDescriptor returned by {@link Parcel#readFileDescriptor}, allowing
you to close it when done with it."
      classrelation 768823 // <realization>
	relation 768823 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 768823 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 768951 // <realization>
	relation 768951 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 768951 // <realization>
	  b parent class_ref 357687 // Closeable
      end

      classrelation 769079 // TAG (<unidirectional association>)
	relation 769079 --->
	  a role_name "TAG" init_value " \"ParcelFileDescriptor\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 769079 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 765495 "mFd"
	const_attribute private explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 765623 "mCommFd"
	private explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Optional socket used to communicate close events, status at close, and
detect remote process crashes.
"
      end

      classrelation 769207 // mWrapped (<unidirectional association>)
	relation 769207 --->
	  a role_name "mWrapped" const_relation private
	    comment "
Wrapped {@link ParcelFileDescriptor}, if any. Used to avoid
double-closing {@link #mFd}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 769207 // mWrapped (<unidirectional association>)
	  b parent class_ref 264887 // ParcelFileDescriptor
      end

      attribute 765751 "MAX_STATUS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1024"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Maximum {@link #mStatusBuf} size; longer status messages will be
truncated.
"
      end

      attribute 765879 "mStatusBuf"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Temporary buffer used by {@link #readCommStatus(FileDescriptor, byte[])},
allocated on-demand.
"
      end

      class 358327 "Status"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 767415 "DEAD"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " -2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Special value indicating remote side died. "
	end

	attribute 767543 "SILENCE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Special value indicating no status should be written. "
	end

	attribute 767671 "OK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Remote reported that everything went better than expected. "
	end

	attribute 767799 "ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Remote reported error; length and message follow. "
	end

	attribute 767927 "DETACHED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Remote reported {@link #detachFd()} and went rogue. "
	end

	attribute 768055 "LEAKED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Remote reported their object was finalized. "
	end

	attribute 768183 "status"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 770231 // msg (<unidirectional association>)
	  relation 770231 --->
	    a role_name "msg" const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 770231 // msg (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	operation 1955255 "Status"
	  public explicit_return_type ""
	  nparams 1
	    param in name "status" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1955383 "Status"
	  public explicit_return_type ""
	  nparams 2
	    param in name "status" explicit_type "int"
	    param inout name "msg" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1955511 "asIOException"
	  public explicit_return_type "IOException"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1955639 "toString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 769335 // mStatus (<unidirectional association>)
	relation 769335 --->
	  a role_name "mStatus" private
	    comment "
Status read by {@link #checkError()}, or null if not read yet.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 769335 // mStatus (<unidirectional association>)
	  b parent class_ref 358327 // Status
      end

      attribute 766007 "mClosed"
	volatile private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 766135 "mGuard"
	const_attribute private explicit_type "CloseGuard"
	init_value " CloseGuard.get()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 766263 "MODE_WORLD_READABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "For use with {@link #open}: if {@link #MODE_CREATE} has been supplied and
this file doesn't already exist, then create the file with permissions
such that any application can read it.

@deprecated Creating world-readable files is very dangerous, and likely
            to cause security holes in applications. It is strongly
            discouraged; instead, applications should use more formal
            mechanism for interactions such as {@link ContentProvider},
            {@link BroadcastReceiver}, and {@link android.app.Service}.
            There are no guarantees that this access mode will remain on
            a file, such as when it goes through a backup and restore.
"
      end

      attribute 766391 "MODE_WORLD_WRITEABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "For use with {@link #open}: if {@link #MODE_CREATE} has been supplied and
this file doesn't already exist, then create the file with permissions
such that any application can write it.

@deprecated Creating world-writable files is very dangerous, and likely
            to cause security holes in applications. It is strongly
            discouraged; instead, applications should use more formal
            mechanism for interactions such as {@link ContentProvider},
            {@link BroadcastReceiver}, and {@link android.app.Service}.
            There are no guarantees that this access mode will remain on
            a file, such as when it goes through a backup and restore.
"
      end

      attribute 766519 "MODE_READ_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "For use with {@link #open}: open the file with read-only access.
"
      end

      attribute 766647 "MODE_WRITE_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "For use with {@link #open}: open the file with write-only access.
"
      end

      attribute 766775 "MODE_READ_WRITE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x30000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "For use with {@link #open}: open the file with read and write access.
"
      end

      attribute 766903 "MODE_CREATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "For use with {@link #open}: create the file if it doesn't already exist.
"
      end

      attribute 767031 "MODE_TRUNCATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "For use with {@link #open}: erase contents of file when opening.
"
      end

      attribute 767159 "MODE_APPEND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "For use with {@link #open}: append to end of file while writing.
"
      end

      operation 1948983 "ParcelFileDescriptor"
	public explicit_return_type ""
	nparams 1
	  param inout name "wrapped" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ParcelFileDescriptor wrapped around another descriptor. By
default all method calls are delegated to the wrapped descriptor."
      end

      operation 1949111 "ParcelFileDescriptor"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 1949239 "ParcelFileDescriptor"
	public explicit_return_type ""
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "commChannel" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 1949367 "open"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 2
	  param inout name "file" explicit_type "File"
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ParcelFileDescriptor accessing a given file.

@param file The file to be opened.
@param mode The desired access mode, must be one of
           {@link #MODE_READ_ONLY}, {@link #MODE_WRITE_ONLY}, or
           {@link #MODE_READ_WRITE}; may also be any combination of
           {@link #MODE_CREATE}, {@link #MODE_TRUNCATE},
           {@link #MODE_WORLD_READABLE}, and
           {@link #MODE_WORLD_WRITEABLE}.
@return a new ParcelFileDescriptor pointing to the given file.
@throws FileNotFoundException if the given file does not exist or can not
            be opened with the requested mode.
@see #parseMode(String)"
      end

      operation 1949495 "open"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 4
	  param inout name "file" explicit_type "File"
	  param in name "mode" explicit_type "int"
	  param inout name "handler" type class_ref 132023 // Handler
	  param in name "listener" type class_ref 358455 // OnCloseListener
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ParcelFileDescriptor accessing a given file.

@param file The file to be opened.
@param mode The desired access mode, must be one of
           {@link #MODE_READ_ONLY}, {@link #MODE_WRITE_ONLY}, or
           {@link #MODE_READ_WRITE}; may also be any combination of
           {@link #MODE_CREATE}, {@link #MODE_TRUNCATE},
           {@link #MODE_WORLD_READABLE}, and
           {@link #MODE_WORLD_WRITEABLE}.
@param handler to call listener from; must not be null.
@param listener to be invoked when the returned descriptor has been
           closed; must not be null.
@return a new ParcelFileDescriptor pointing to the given file.
@throws FileNotFoundException if the given file does not exist or can not
            be opened with the requested mode.
@see #parseMode(String)"
      end

      class 358455 "OnCloseListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1954999 "onClose"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "e" explicit_type "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Event indicating the ParcelFileDescriptor to which this listener was
attached has been closed.

@param e error state, or {@code null} if closed cleanly.
       If the close event was the result of
       {@link ParcelFileDescriptor#detachFd()}, this will be a
       {@link FileDescriptorDetachedException}. After detach the
       remote side may continue reading/writing to the underlying
       {@link FileDescriptor}, but they can no longer deliver
       reliable close/error events."
	end
      end

      operation 1949623 "fromFd"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "handler" type class_ref 132023 // Handler
	  param in name "listener" type class_ref 358455 // OnCloseListener
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 1949751 "openInternal"
	class_operation private explicit_return_type "FileDescriptor"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1949879 "dup"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 1
	  param inout name "orig" explicit_type "FileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ParcelFileDescriptor that is a dup of an existing
FileDescriptor.  This obeys standard POSIX semantics, where the
new file descriptor shared state such as file position with the
original file descriptor."
      end

      operation 1950007 "dup"
	public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ParcelFileDescriptor that is a dup of the existing
FileDescriptor.  This obeys standard POSIX semantics, where the
new file descriptor shared state such as file position with the
original file descriptor."
      end

      operation 1950135 "fromFd"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 1
	  param in name "fd" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ParcelFileDescriptor from a raw native fd.  The new
ParcelFileDescriptor holds a dup of the original fd passed in here,
so you must still close that fd as well as the new ParcelFileDescriptor.

@param fd The native fd that the ParcelFileDescriptor should dup.

@return Returns a new ParcelFileDescriptor holding a FileDescriptor
for a dup of the given fd."
      end

      operation 1950263 "adoptFd"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Take ownership of a raw native fd in to a new ParcelFileDescriptor.
The returned ParcelFileDescriptor now owns the given fd, and will be
responsible for closing it.  You must not close the fd yourself.

@param fd The native fd that the ParcelFileDescriptor should adopt.

@return Returns a new ParcelFileDescriptor holding a FileDescriptor
for the given fd."
      end

      operation 1950391 "fromSocket"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 1
	  param inout name "socket" explicit_type "Socket"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ParcelFileDescriptor from the specified Socket.  The new
ParcelFileDescriptor holds a dup of the original FileDescriptor in
the Socket, so you must still close the Socket as well as the new
ParcelFileDescriptor.

@param socket The Socket whose FileDescriptor is used to create
              a new ParcelFileDescriptor.

@return A new ParcelFileDescriptor with the FileDescriptor of the
        specified Socket."
      end

      operation 1950519 "fromDatagramSocket"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 1
	  param inout name "datagramSocket" explicit_type "DatagramSocket"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ParcelFileDescriptor from the specified DatagramSocket.

@param datagramSocket The DatagramSocket whose FileDescriptor is used
              to create a new ParcelFileDescriptor.

@return A new ParcelFileDescriptor with the FileDescriptor of the
        specified DatagramSocket."
      end

      operation 1950647 "createPipe"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create two ParcelFileDescriptors structured as a data pipe.  The first
ParcelFileDescriptor in the returned array is the read side; the second
is the write side."
      end

      operation 1950775 "createReliablePipe"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create two ParcelFileDescriptors structured as a data pipe. The first
ParcelFileDescriptor in the returned array is the read side; the second
is the write side.
<p>
The write end has the ability to deliver an error message through
{@link #closeWithError(String)} which can be handled by the read end
calling {@link #checkError()}, usually after detecting an EOF.
This can also be used to detect remote crashes."
      end

      operation 1950903 "createSocketPair"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create two ParcelFileDescriptors structured as a pair of sockets
connected to each other. The two sockets are indistinguishable."
      end

      operation 1951031 "createSocketPair"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 1
	  param in name "type" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 1951159 "createReliableSocketPair"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create two ParcelFileDescriptors structured as a pair of sockets
connected to each other. The two sockets are indistinguishable.
<p>
Both ends have the ability to deliver an error message through
{@link #closeWithError(String)} which can be detected by the other end
calling {@link #checkError()}, usually after detecting an EOF.
This can also be used to detect remote crashes."
      end

      operation 1951287 "createReliableSocketPair"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 1
	  param in name "type" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 1951415 "createCommSocketPair"
	class_operation private explicit_return_type "FileDescriptor"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1951543 "fromData"
	class_operation public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 2
	  param inout name "data" explicit_type "byte"
	  param inout name "name" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@hide Please use createPipe() or ContentProvider.openPipeHelper().
Gets a file descriptor for a read-only copy of the given data.

@param data Data to copy.
@param name Name for the shared memory area that may back the file descriptor.
       This is purely informative and may be {@code null}.
@return A ParcelFileDescriptor.
@throws IOException if there is an error while creating the shared memory area."
      end

      operation 1951671 "parseMode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "mode" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a string representing a file mode, such as \"rw\", into a bitmask suitable for use
with {@link #open}.
<p>
@param mode The string representation of the file mode.
@return A bitmask representing the given file mode.
@throws IllegalArgumentException if the given string does not match a known file mode."
      end

      operation 1951799 "getFileDescriptor"
	public explicit_return_type "FileDescriptor"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the actual FileDescriptor associated with this object.

@return Returns the FileDescriptor associated with this object."
      end

      operation 1951927 "getStatSize"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the total size of the file representing this fd, as determined by
{@code stat()}. Returns -1 if the fd is not a file."
      end

      operation 1952055 "seekTo"
	public explicit_return_type "long"
	nparams 1
	  param in name "pos" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is needed for implementing AssetFileDescriptor.AutoCloseOutputStream,
and I really don't think we want it to be public.
@hide"
      end

      operation 1952183 "getFd"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the native fd int for this ParcelFileDescriptor.  The
ParcelFileDescriptor still owns the fd, and it still must be closed
through this API."
      end

      operation 1952311 "detachFd"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the native fd int for this ParcelFileDescriptor and detach it from
the object here. You are now responsible for closing the fd in native
code.
<p>
You should not detach when the original creator of the descriptor is
expecting a reliable signal through {@link #close()} or
{@link #closeWithError(String)}.

@see #canDetectErrors()"
      end

      operation 1952439 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Close the ParcelFileDescriptor. This implementation closes the underlying
OS resources allocated to represent this stream.

@throws IOException
            If an error occurs attempting to close this ParcelFileDescriptor."
      end

      operation 1952567 "closeWithError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close the ParcelFileDescriptor, informing any peer that an error occurred
while processing. If the creator of this descriptor is not observing
errors, it will close normally.

@param msg describing the error; must not be null."
      end

      operation 1952695 "closeWithStatus"
	private explicit_return_type "void"
	nparams 2
	  param in name "status" explicit_type "int"
	  param inout name "msg" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1952823 "releaseResources"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the fd is being closed, for subclasses to release any other resources
associated with it, such as acquired providers.
@hide"
      end

      operation 1952951 "getOrCreateStatusBuffer"
	private explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1953079 "writeCommStatusAndClose"
	private explicit_return_type "void"
	nparams 2
	  param in name "status" explicit_type "int"
	  param inout name "msg" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1953207 "readCommStatus"
	class_operation private return_type class_ref 358327 // Status
	nparams 2
	  param inout name "comm" explicit_type "FileDescriptor"
	  param inout name "buf" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1953335 "canDetectErrors"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates if this ParcelFileDescriptor can communicate and detect remote
errors/crashes.

@see #checkError()"
      end

      operation 1953463 "checkError"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Detect and throw if the other end of a pipe or socket pair encountered an
error or crashed. This allows a reader to distinguish between a valid EOF
and an error/crash.
<p>
If this ParcelFileDescriptor is unable to detect remote errors, it will
return silently.

@throws IOException for normal errors.
@throws FileDescriptorDetachedException
           if the remote side called {@link #detachFd()}. Once detached, the remote
           side is unable to communicate any errors through
           {@link #closeWithError(String)}.
@see #canDetectErrors()"
      end

      class 358583 "AutoCloseInputStream"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 769463 // <generalisation>
	  relation 769463 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 769463 // <generalisation>
	    b parent class_ref 358711 // FileInputStream
	end

	classrelation 769591 // mPfd (<unidirectional association>)
	  relation 769591 --->
	    a role_name "mPfd" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 769591 // mPfd (<unidirectional association>)
	    b parent class_ref 264887 // ParcelFileDescriptor
	end

	operation 1953591 "AutoCloseInputStream"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "pfd" type class_ref 264887 // ParcelFileDescriptor
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1953719 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1953847 "read"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1953975 "read"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "b" explicit_type "byte"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1954103 "read"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "b" explicit_type "byte"
	    param in name "off" explicit_type "int"
	    param in name "len" explicit_type "int"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 358839 "AutoCloseOutputStream"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 769719 // <generalisation>
	  relation 769719 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 769719 // <generalisation>
	    b parent class_ref 358967 // FileOutputStream
	end

	classrelation 769847 // mPfd (<unidirectional association>)
	  relation 769847 --->
	    a role_name "mPfd" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 769847 // mPfd (<unidirectional association>)
	    b parent class_ref 264887 // ParcelFileDescriptor
	end

	operation 1954231 "AutoCloseOutputStream"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "pfd" type class_ref 264887 // ParcelFileDescriptor
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1954359 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 1954487 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1954615 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1954743 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1954871 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}
If {@link Parcelable#PARCELABLE_WRITE_RETURN_VALUE} is set in flags,
the file descriptor will be closed after a copy is written to the Parcel."
      end

      classrelation 769975 // CREATOR (<unidirectional association>)
	relation 769975 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<ParcelFileDescriptor>() {
        @Override
        public ParcelFileDescriptor createFromParcel(Parcel in) {
            int hasCommChannel = in.readInt();
            final FileDescriptor fd = in.readRawFileDescriptor();
            FileDescriptor commChannel = null;
            if (hasCommChannel != 0) {
                commChannel = in.readRawFileDescriptor();
            }
            return new ParcelFileDescriptor(fd, commChannel);
        }

        @Override
        public ParcelFileDescriptor[] newArray(int size) {
            return new ParcelFileDescriptor[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ParcelFileDescriptor> ${name}${value};
"
	    classrelation_ref 769975 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      class 359095 "FileDescriptorDetachedException"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 770103 // <generalisation>
	  relation 770103 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 770103 // <generalisation>
	    b parent class_ref 250167 // IOException
	end

	attribute 767287 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 0xDe7ac4edFdL"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1955127 "FileDescriptorDetachedException"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 273591 "LocaleList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "LocaleList is an immutable list of Locales, typically used to keep an ordered list of user
preferences for locales."
      classrelation 1459511 // <realization>
	relation 1459511 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1459511 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1651255 "mList"
	const_attribute private explicit_type "Locale"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1459639 // mStringRepresentation (<unidirectional association>)
	relation 1459639 --->
	  a role_name "mStringRepresentation" const_relation private
	    comment " This is a comma-separated list of the locales in the LocaleList created at construction time,
 basically the result of running each locale's toLanguageTag() method and concatenating them
 with commas in between.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@NonNull
"
	    classrelation_ref 1459639 // mStringRepresentation (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1651383 "sEmptyList"
	class_attribute const_attribute private explicit_type "Locale"
	multiplicity "[]"
	init_value " new Locale[0]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1459767 // sEmptyLocaleList (<unidirectional association>)
	relation 1459767 --->
	  a role_name "sEmptyLocaleList" init_value " new LocaleList()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1459767 // sEmptyLocaleList (<unidirectional association>)
	  b parent class_ref 273591 // LocaleList
      end

      operation 3790007 "get"
	public explicit_return_type "Locale"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the {@link Locale} at the specified index.

@param index The position to retrieve.
@return The {@link Locale} in the given index."
      end

      operation 3790135 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the {@link LocaleList} contains no {@link Locale} items.

@return {@code true} if this {@link LocaleList} has no {@link Locale} items, {@code false}
    otherwise."
      end

      operation 3790263 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@IntRange(from=0)
"
	
	
	
	comment "Returns the number of {@link Locale} items in this {@link LocaleList}."
      end

      operation 3790391 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "locale" explicit_type "Locale"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@IntRange(from=-1)
"
	
	
	
	comment "Searches this {@link LocaleList} for the specified {@link Locale} and returns the index of
the first occurrence.

@param locale The {@link Locale} to search for.
@return The index of the first occurrence of the {@link Locale} or {@code -1} if the item
    wasn't found."
      end

      operation 3790519 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3790647 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3790775 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3790903 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3791031 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "parcelableFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3791159 "toLanguageTags"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Retrieves a String representation of the language tags in this list."
      end

      operation 3791287 "LocaleList"
	public explicit_return_type ""
	nparams 1
	  param inout name "" explicit_type "Locale...list"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@link LocaleList}.

<p>For empty lists of {@link Locale} items it is better to use {@link #getEmptyLocaleList()},
which returns a pre-constructed empty list.</p>

@throws NullPointerException if any of the input locales is <code>null</code>.
@throws IllegalArgumentException if any of the input locales repeat."
      end

      operation 3791415 "LocaleList"
	public explicit_return_type ""
	nparams 2
	  param inout name "topLocale" explicit_type "Locale"
	  param inout name "otherLocales" type class_ref 273591 // LocaleList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a locale list, with the topLocale moved to the front if it already is
in otherLocales, or added to the front if it isn't.

{@hide}"
      end

      classrelation 1459895 // CREATOR (<unidirectional association>)
	relation 1459895 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<LocaleList>() {
        @Override
        public LocaleList createFromParcel(Parcel source) {
            return LocaleList.forLanguageTags(source.readString());
        }

        @Override
        public LocaleList[] newArray(int size) {
            return new LocaleList[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<LocaleList> ${name}${value};
"
	    classrelation_ref 1459895 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3791543 "getEmptyLocaleList"
	class_operation public return_type class_ref 273591 // LocaleList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Retrieve an empty instance of {@link LocaleList}."
      end

      operation 3791671 "forLanguageTags"
	class_operation public return_type class_ref 273591 // LocaleList
	nparams 1
	  param inout name "list" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Generates a new LocaleList with the given language tags.

@param list The language tags to be included as a single {@link String} separated by commas.
@return A new instance with the {@link Locale} items identified by the given tags."
      end

      operation 3791799 "getLikelyScript"
	class_operation private return_type class_ref 129591 // String
	nparams 1
	  param inout name "locale" explicit_type "Locale"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1460023 // STRING_EN_XA (<unidirectional association>)
	relation 1460023 --->
	  a role_name "STRING_EN_XA" init_value " \"en-XA\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1460023 // STRING_EN_XA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1460151 // STRING_AR_XB (<unidirectional association>)
	relation 1460151 --->
	  a role_name "STRING_AR_XB" init_value " \"ar-XB\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1460151 // STRING_AR_XB (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1651511 "LOCALE_EN_XA"
	class_attribute const_attribute private explicit_type "Locale"
	init_value " new Locale(\"en\", \"XA\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1651639 "LOCALE_AR_XB"
	class_attribute const_attribute private explicit_type "Locale"
	init_value " new Locale(\"ar\", \"XB\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1651767 "NUM_PSEUDO_LOCALES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3791927 "isPseudoLocale"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "locale" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3792055 "isPseudoLocale"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "locale" explicit_type "Locale"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3792183 "matchScore"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "supported" explicit_type "Locale"
	  param inout name "desired" explicit_type "Locale"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@IntRange(from=0, to=1)
"
	
	
	
      end

      operation 3792311 "findFirstMatchIndex"
	private explicit_return_type "int"
	nparams 1
	  param inout name "supportedLocale" explicit_type "Locale"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1651895 "EN_LATN"
	class_attribute const_attribute private explicit_type "Locale"
	init_value " Locale.forLanguageTag(\"en-Latn\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3792439 "computeFirstMatchIndex"
	private explicit_return_type "int"
	nparams 2
	  param inout name "supportedLocales" explicit_type "Collection<String>"
	  param inout name "assumeEnglishIsSupported" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3792567 "computeFirstMatch"
	private explicit_return_type "Locale"
	nparams 2
	  param inout name "supportedLocales" explicit_type "Collection<String>"
	  param inout name "assumeEnglishIsSupported" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3792695 "getFirstMatch"
	public explicit_return_type "Locale"
	nparams 1
	  param inout name "supportedLocales" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the first match in the locale list given an unordered array of supported locales
in BCP 47 format.

@return The first {@link Locale} from this list that appears in the given array, or
    {@code null} if the {@link LocaleList} is empty."
      end

      operation 3792823 "getFirstMatchIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "supportedLocales" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 3792951 "getFirstMatchWithEnglishSupported"
	public explicit_return_type "Locale"
	nparams 1
	  param inout name "supportedLocales" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Same as getFirstMatch(), but with English assumed to be supported, even if it's not.
{@hide}"
      end

      operation 3793079 "getFirstMatchIndexWithEnglishSupported"
	public explicit_return_type "int"
	nparams 1
	  param inout name "supportedLocales" explicit_type "Collection<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 3793207 "getFirstMatchIndexWithEnglishSupported"
	public explicit_return_type "int"
	nparams 1
	  param inout name "supportedLocales" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 3793335 "isPseudoLocalesOnly"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "supportedLocales" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the collection of locale tags only contains empty locales and pseudolocales.
Assumes that there is no repetition in the input.
{@hide}"
      end

      classrelation 1460279 // sLock (<unidirectional association>)
	relation 1460279 --->
	  a role_name "sLock" init_value " new Object()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1460279 // sLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      classrelation 1460407 // sLastExplicitlySetLocaleList (<unidirectional association>)
	relation 1460407 --->
	  a role_name "sLastExplicitlySetLocaleList" init_value " null" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GuardedBy(\"sLock\")
"
	    classrelation_ref 1460407 // sLastExplicitlySetLocaleList (<unidirectional association>)
	  b parent class_ref 273591 // LocaleList
      end

      classrelation 1460535 // sDefaultLocaleList (<unidirectional association>)
	relation 1460535 --->
	  a role_name "sDefaultLocaleList" init_value " null" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GuardedBy(\"sLock\")
"
	    classrelation_ref 1460535 // sDefaultLocaleList (<unidirectional association>)
	  b parent class_ref 273591 // LocaleList
      end

      classrelation 1460663 // sDefaultAdjustedLocaleList (<unidirectional association>)
	relation 1460663 --->
	  a role_name "sDefaultAdjustedLocaleList" init_value " null" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GuardedBy(\"sLock\")
"
	    classrelation_ref 1460663 // sDefaultAdjustedLocaleList (<unidirectional association>)
	  b parent class_ref 273591 // LocaleList
      end

      attribute 1652023 "sLastDefaultLocale"
	class_attribute private explicit_type "Locale"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GuardedBy(\"sLock\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3793463 "getDefault"
	class_operation public return_type class_ref 273591 // LocaleList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
@Size(min=1)
"
	
	
	
	comment "The result is guaranteed to include the default Locale returned by Locale.getDefault(), but
not necessarily at the top of the list. The default locale not being at the top of the list
is an indication that the system has set the default locale to one of the user's other
preferred locales, having concluded that the primary preference is not supported but a
secondary preference is.

<p>Note that the default LocaleList would change if Locale.setDefault() is called. This
method takes that into account by always checking the output of Locale.getDefault() and
recalculating the default LocaleList if needed.</p>"
      end

      operation 3793591 "getAdjustedDefault"
	class_operation public return_type class_ref 273591 // LocaleList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
@Size(min=1)
"
	
	
	
	comment "Returns the default locale list, adjusted by moving the default locale to its first
position."
      end

      operation 3793719 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "locales" type class_ref 273591 // LocaleList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Size(min=1) ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Also sets the default locale by calling Locale.setDefault() with the first locale in the
list.

@throws NullPointerException if the input is <code>null</code>.
@throws IllegalArgumentException if the input is empty."
      end

      operation 3793847 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "locales" type class_ref 273591 // LocaleList
	  param in name "localeIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Size(min=1) ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This may be used directly by system processes to set the default locale list for apps. For
such uses, the default locale list would always come from the user preferences, but the
default locale may have been chosen to be a locale other than the first locale in the locale
list (based on the locales the app supports).

{@hide}"
      end
    end

    class 274871 "ParcelableParcel"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Parcelable containing a raw Parcel of data.
@hide"
      classrelation 1464375 // <realization>
	relation 1464375 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1464375 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 1464503 // mParcel (<unidirectional association>)
	relation 1464503 --->
	  a role_name "mParcel" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1464503 // mParcel (<unidirectional association>)
	  b parent class_ref 137527 // Parcel
      end

      attribute 1661623 "mClassLoader"
	const_attribute package explicit_type "ClassLoader"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3831479 "ParcelableParcel"
	public explicit_return_type ""
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3831607 "ParcelableParcel"
	public explicit_return_type ""
	nparams 2
	  param inout name "src" type class_ref 137527 // Parcel
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3831735 "getParcel"
	public return_type class_ref 137527 // Parcel
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3831863 "getClassLoader"
	public explicit_return_type "ClassLoader"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3831991 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3832119 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1464631 // CREATOR (<unidirectional association>)
	relation 1464631 --->
	  a role_name "CREATOR" init_value " new Parcelable.ClassLoaderCreator<ParcelableParcel>() {
        public ParcelableParcel createFromParcel(Parcel in) {
            return new ParcelableParcel(in, null);
        }

        public ParcelableParcel createFromParcel(Parcel in, ClassLoader loader) {
            return new ParcelableParcel(in, loader);
        }

        public ParcelableParcel[] newArray(int size) {
            return new ParcelableParcel[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ParcelableParcel> ${name}${value};
"
	    classrelation_ref 1464631 // CREATOR (<unidirectional association>)
	  b parent class_ref 137783 // ClassLoaderCreator
      end
    end

    class 277559 "Binder"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for a remotable object, the core part of a lightweight
remote procedure call mechanism defined by {@link IBinder}.
This class is an implementation of IBinder that provides
standard local implementation of such an object.

<p>Most developers will not implement this class directly, instead using the
<a href=\"{@docRoot}guide/components/aidl.html\">aidl</a> tool to describe the desired
interface, having it generate the appropriate Binder subclass.  You can,
however, derive directly from Binder to implement your own custom RPC
protocol or simply instantiate a raw Binder object directly to use as a
token that can be shared across processes.

<p>This class is just a basic IPC primitive; it has no impact on an application's
lifecycle, and is valid only as long as the process that created it continues to run.
To use this correctly, you must be doing so within the context of a top-level
application component (a {@link android.app.Service}, {@link android.app.Activity},
or {@link android.content.ContentProvider}) that lets the system know your process
should remain running.</p>

<p>You must keep in mind the situations in which your process
could go away, and thus require that you later re-create a new Binder and re-attach
it when the process starts again.  For example, if you are using this within an
{@link android.app.Activity}, your activity's process may be killed any time the
activity is not started; if the activity is later re-created you will need to
create a new Binder and hand it back to the correct place again; you need to be
aware that your process may be started for another reason (for example to receive
a broadcast) that will not involve re-creating the activity and thus run its code
to create a new Binder.</p>

@see IBinder"
      classrelation 563511 // <realization>
	relation 563511 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 563511 // <realization>
	  b parent class_ref 132919 // IBinder
      end

      attribute 537143 "FIND_POTENTIAL_LEAKS"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Set this flag to true to detect anonymous, local or member classes
that extend this Binder class and that are not static. These kind
of classes can potentially create leaks.
"
      end

      attribute 537271 "CHECK_PARCEL_SIZE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 563639 // TAG (<unidirectional association>)
	relation 563639 --->
	  a role_name "TAG" init_value " \"Binder\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 563639 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 537399 "LOG_RUNTIME_EXCEPTION"
	class_attribute public explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide 
 DO NOT SUBMIT WITH TRUE"
      end

      classrelation 563767 // sDumpDisabled (<unidirectional association>)
	relation 563767 --->
	  a role_name "sDumpDisabled" init_value " null" class_relation private
	    comment "
Control whether dump() calls are allowed.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 563767 // sDumpDisabled (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 563895 // sTransactionTracker (<unidirectional association>)
	relation 563895 --->
	  a role_name "sTransactionTracker" init_value " null" class_relation private
	    comment "
Global transaction tracker instance for this process.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 563895 // sTransactionTracker (<unidirectional association>)
	  b parent class_ref 278071 // TransactionTracker
      end

      attribute 537527 "sTracingEnabled"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Transaction tracking code.

Flag indicating whether we should be tracing transact calls.

"
      end

      operation 1253303 "enableTracing"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable Binder IPC tracing.

@hide"
      end

      operation 1253431 "disableTracing"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disable Binder IPC tracing.

@hide"
      end

      operation 1253559 "isTracingEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if binder transaction tracing is enabled.

@hide"
      end

      operation 1253687 "getTransactionTracker"
	class_operation public return_type class_ref 278071 // TransactionTracker
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the binder transaction tracker for this process.

@hide"
      end

      attribute 537655 "mObject"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mObject is used by native code, do not remove or rename "
      end

      classrelation 564023 // mOwner (<unidirectional association>)
	relation 564023 --->
	  a role_name "mOwner" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 564023 // mOwner (<unidirectional association>)
	  b parent class_ref 277687 // IInterface
      end

      classrelation 564151 // mDescriptor (<unidirectional association>)
	relation 564151 --->
	  a role_name "mDescriptor" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 564151 // mDescriptor (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 1253815 "getCallingPid"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Return the ID of the process that sent you the current transaction
that is being processed.  This pid can be used with higher-level
system services to determine its identity and check permissions.
If the current thread is not currently executing an incoming transaction,
then its own pid is returned."
      end

      operation 1253943 "getCallingUid"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Return the Linux uid assigned to the process that sent you the
current transaction that is being processed.  This uid can be used with
higher-level system services to determine its identity and check
permissions.  If the current thread is not currently executing an
incoming transaction, then its own uid is returned."
      end

      operation 1254071 "getCallingUserHandle"
	class_operation public return_type class_ref 131383 // UserHandle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the UserHandle assigned to the process that sent you the
current transaction that is being processed.  This is the user
of the caller.  It is distinct from {@link #getCallingUid()} in that a
particular user will have multiple distinct apps running under it each
with their own uid.  If the current thread is not currently executing an
incoming transaction, then its own UserHandle is returned."
      end

      operation 1254199 "clearCallingIdentity"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Reset the identity of the incoming IPC on the current thread.  This can
be useful if, while handling an incoming call, you will be calling
on interfaces of other objects that may be local to your process and
need to do permission checks on the calls coming into them (so they
will check the permission of your own local process, and not whatever
process originally called you).

@return Returns an opaque token that can be used to restore the
original calling identity by passing it to
{@link #restoreCallingIdentity(long)}.

@see #getCallingPid()
@see #getCallingUid()
@see #restoreCallingIdentity(long)"
      end

      operation 1254327 "restoreCallingIdentity"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "token" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Restore the identity of the incoming IPC on the current thread
back to a previously identity that was returned by {@link
#clearCallingIdentity}.

@param token The opaque token that was previously returned by
{@link #clearCallingIdentity}.

@see #clearCallingIdentity"
      end

      operation 1254455 "setThreadStrictModePolicy"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "policyMask" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Sets the native thread-local StrictMode policy mask.

<p>The StrictMode settings are kept in two places: a Java-level
threadlocal for libcore/Dalvik, and a native threadlocal (set
here) for propagation via Binder calls.  This is a little
unfortunate, but necessary to break otherwise more unfortunate
dependencies either of Dalvik on Android, or Android
native-only code on Dalvik.

@see StrictMode
@hide"
      end

      operation 1254583 "getThreadStrictModePolicy"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Gets the current native thread-local StrictMode policy mask.

@see #setThreadStrictModePolicy
@hide"
      end

      operation 1254711 "flushPendingCommands"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Flush any Binder commands pending in the current thread to the kernel
driver.  This can be
useful to call before performing an operation that may block for a long
time, to ensure that any pending object references have been released
in order to prevent the process from holding on to objects longer than
it needs to."
      end

      operation 1254839 "joinThreadPool"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Add the calling thread to the IPC thread pool.  This function does
not return until the current process is exiting."
      end

      operation 1254967 "isProxy"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "iface" type class_ref 277687 // IInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified interface is a proxy.
@hide"
      end

      operation 1255095 "blockUntilThreadAvailable"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Call blocks until the number of executing binder threads is less
than the maximum number of binder threads allowed for this process.
@hide"
      end

      operation 1255223 "Binder"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor initializes the object."
      end

      operation 1255351 "attachInterface"
	public explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 277687 // IInterface
	  param inout name "descriptor" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for associating a specific interface with the Binder.
After calling, queryLocalInterface() will be implemented for you
to return the given owner IInterface when the corresponding
descriptor is requested."
      end

      operation 1255479 "getInterfaceDescriptor"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default implementation returns an empty interface name."
      end

      operation 1255607 "pingBinder"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default implementation always returns true -- if you got here,
the object is alive."
      end

      operation 1255735 "isBinderAlive"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}

Note that if you're calling on a local binder, this always returns true
because your process is alive if you're calling it."
      end

      operation 1255863 "queryLocalInterface"
	public return_type class_ref 277687 // IInterface
	nparams 1
	  param inout name "descriptor" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use information supplied to attachInterface() to return the
associated IInterface if it matches the requested
descriptor."
      end

      operation 1255991 "setDumpDisabled"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Control disabling of dump calls in this process.  This is used by the system
process watchdog to disable incoming dump calls while it has detecting the system
is hung and is reporting that back to the activity controller.  This is to
prevent the controller from getting hung up on bug reports at this point.
@hide

@param msg The message to show instead of the dump; if null, dumps are
re-enabled."
      end

      operation 1256119 "onTransact"
	protected explicit_return_type "boolean"
	nparams 4
	  param in name "code" explicit_type "int"
	  param inout name "data" type class_ref 137527 // Parcel
	  param inout name "reply" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default implementation is a stub that returns false.  You will want
to override this to do the appropriate unmarshalling of transactions.

<p>If you want to call this, call transact()."
      end

      operation 1256247 "dump"
	public explicit_return_type "void"
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implemented to call the more convenient version
{@link #dump(FileDescriptor, PrintWriter, String[])}."
      end

      operation 1256375 "doDump"
	package explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "args" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1256503 "dumpAsync"
	public explicit_return_type "void"
	nparams 2
	  param in name "fd" explicit_type "FileDescriptor"
	  param in name "args" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #dump(FileDescriptor, String[])}, but ensures the target
executes asynchronously."
      end

      operation 1256631 "dump"
	protected explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "fout" explicit_type "PrintWriter"
	  param inout name "args" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the object's state into the given stream.

@param fd The raw file descriptor that the dump is being sent to.
@param fout The file to which you should dump your state.  This will be
closed for you after you return.
@param args additional arguments to the dump request."
      end

      operation 1256759 "shellCommand"
	public explicit_return_type "void"
	nparams 5
	  param inout name "in" explicit_type "FileDescriptor"
	  param inout name "out" explicit_type "FileDescriptor"
	  param inout name "err" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	  param inout name "resultReceiver" type class_ref 277815 // ResultReceiver
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param in The raw file descriptor that an input data stream can be read from.
@param out The raw file descriptor that normal command messages should be written to.
@param err The raw file descriptor that command error messages should be written to.
@param args Command-line arguments.
@param resultReceiver Called when the command has finished executing, with the result code.
@throws RemoteException
@hide"
      end

      operation 1256887 "onShellCommand"
	public explicit_return_type "void"
	nparams 5
	  param inout name "in" explicit_type "FileDescriptor"
	  param inout name "out" explicit_type "FileDescriptor"
	  param inout name "err" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	  param inout name "resultReceiver" type class_ref 277815 // ResultReceiver
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle a call to {@link #shellCommand}.  The default implementation simply prints
an error message.  Override and replace with your own.
<p class=\"caution\">Note: no permission checking is done before calling this method; you must
apply any security checks as appropriate for the command being executed.
Consider using {@link ShellCommand} to help in the implementation.</p>
@hide"
      end

      operation 1257015 "transact"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "code" explicit_type "int"
	  param inout name "data" type class_ref 137527 // Parcel
	  param inout name "reply" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default implementation rewinds the parcels and calls onTransact.  On
the remote side, transact calls into the binder to do the IPC."
      end

      operation 1257143 "linkToDeath"
	public explicit_return_type "void"
	nparams 2
	  param inout name "recipient" type class_ref 277943 // DeathRecipient
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Local implementation is a no-op."
      end

      operation 1257271 "unlinkToDeath"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "recipient" type class_ref 277943 // DeathRecipient
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Local implementation is a no-op."
      end

      operation 1257399 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1257527 "checkParcel"
	class_operation package explicit_return_type "void"
	nparams 4
	  param inout name "obj" type class_ref 132919 // IBinder
	  param in name "code" explicit_type "int"
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param inout name "msg" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1257655 "init"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 1257783 "destroy"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 1257911 "execTransact"
	private explicit_return_type "boolean"
	nparams 4
	  param in name "code" explicit_type "int"
	  param in name "dataObj" explicit_type "long"
	  param in name "replyObj" explicit_type "long"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Entry point from android_util_Binder.cpp's onTransact"
      end
    end

    class 277687 "IInterface"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for Binder interfaces.  When defining a new interface,
you must derive it from IInterface."
      operation 1259959 "asBinder"
	public return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the Binder object associated with this interface.
You must use this instead of a plain cast, so that proxy objects
can return the correct result."
      end
    end

    class 277815 "ResultReceiver"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Generic interface for receiving a callback result from someone.  Use this
by creating a subclass and implement {@link #onReceiveResult}, which you can
then pass to others and send through IPC, and receive results they
supply with {@link #send}.

<p>Note: the implementation underneath is just a simple wrapper around
a {@link Binder} that is used to perform the communication.  This means
semantically you should treat it as such: this class does not impact process
lifecycle management (you must be using some higher-level component to tell
the system that your process needs to continue running), the connection will
break if your process goes away for any reason, etc.</p>"
      classrelation 706487 // <realization>
	relation 706487 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 706487 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 703927 "mLocal"
	const_attribute package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 706615 // mHandler (<unidirectional association>)
	relation 706615 --->
	  a role_name "mHandler" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 706615 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      attribute 704055 "mReceiver"
	package explicit_type "IResultReceiver"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 340535 "MyRunnable"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 706743 // <realization>
	  relation 706743 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 706743 // <realization>
	    b parent class_ref 149943 // Runnable
	end

	attribute 704183 "mResultCode"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 706871 // mResultData (<unidirectional association>)
	  relation 706871 --->
	    a role_name "mResultData" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 706871 // mResultData (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	operation 1740215 "MyRunnable"
	  package explicit_return_type ""
	  nparams 2
	    param in name "resultCode" explicit_type "int"
	    param inout name "resultData" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1740343 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 340663 "MyResultReceiver"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 706999 // <generalisation>
	  relation 706999 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 706999 // <generalisation>
	    b parent class_ref 340791 // Stub
	end

	operation 1740471 "send"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "resultCode" explicit_type "int"
	    param inout name "resultData" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 1740599 "ResultReceiver"
	public explicit_return_type ""
	nparams 1
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ResultReceive to receive results.  Your
{@link #onReceiveResult} method will be called from the thread running
<var>handler</var> if given, or from an arbitrary thread if null."
      end

      operation 1740727 "send"
	public explicit_return_type "void"
	nparams 2
	  param in name "resultCode" explicit_type "int"
	  param inout name "resultData" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deliver a result to this receiver.  Will call {@link #onReceiveResult},
always asynchronously if the receiver has supplied a Handler in which
to dispatch the result.
@param resultCode Arbitrary result code to deliver, as defined by you.
@param resultData Any additional data provided by you."
      end

      operation 1740855 "onReceiveResult"
	protected explicit_return_type "void"
	nparams 2
	  param in name "resultCode" explicit_type "int"
	  param inout name "resultData" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override to receive results delivered to this object.

@param resultCode Arbitrary result code delivered by the sender, as
defined by the sender.
@param resultData Any additional data provided by the sender."
      end

      operation 1740983 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1741111 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1741239 "ResultReceiver"
	package explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 707127 // CREATOR (<unidirectional association>)
	relation 707127 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<ResultReceiver>() {
        public ResultReceiver createFromParcel(Parcel in) {
            return new ResultReceiver(in);
        }
        public ResultReceiver[] newArray(int size) {
            return new ResultReceiver[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ResultReceiver> ${name}${value};
"
	    classrelation_ref 707127 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end

    class 278071 "TransactionTracker"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class used to track binder transactions. It indexes the transactions by the stack trace.

@hide"
      classrelation 1481527 // mTraces (<unidirectional association>)
	relation 1481527 --->
	  stereotype "Map"
	  a role_name "mTraces" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Long> ${name}${value};
"
	    classrelation_ref 1481527 // mTraces (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3901751 "resetTraces"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3901879 "TransactionTracker"
	package explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3902007 "addTrace"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3902135 "writeTracesToFile"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3902263 "clearTraces"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 278199 "BinderProxy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 564279 // <realization>
	relation 564279 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 564279 // <realization>
	  b parent class_ref 132919 // IBinder
      end

      operation 1258039 "pingBinder"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 1258167 "isBinderAlive"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 1258295 "queryLocalInterface"
	public return_type class_ref 277687 // IInterface
	nparams 1
	  param inout name "descriptor" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1258423 "transact"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "code" explicit_type "int"
	  param inout name "data" type class_ref 137527 // Parcel
	  param inout name "reply" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1258551 "getInterfaceDescriptor"
	public return_type class_ref 129591 // String
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 1258679 "transactNative"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "code" explicit_type "int"
	  param inout name "data" type class_ref 137527 // Parcel
	  param inout name "reply" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 1258807 "linkToDeath"
	public explicit_return_type "void"
	nparams 2
	  param inout name "recipient" type class_ref 277943 // DeathRecipient
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 1258935 "unlinkToDeath"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "recipient" type class_ref 277943 // DeathRecipient
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 1259063 "dump"
	public explicit_return_type "void"
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1259191 "dumpAsync"
	public explicit_return_type "void"
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1259319 "shellCommand"
	public explicit_return_type "void"
	nparams 5
	  param inout name "in" explicit_type "FileDescriptor"
	  param inout name "out" explicit_type "FileDescriptor"
	  param inout name "err" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	  param inout name "resultReceiver" type class_ref 277815 // ResultReceiver
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1259447 "BinderProxy"
	package explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1259575 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1259703 "destroy"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 1259831 "sendDeathNotice"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "recipient" type class_ref 277943 // DeathRecipient
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 537783 "mSelf"
	const_attribute private explicit_type "WeakReference"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 537911 "mObject"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 538039 "mOrgue"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 279095 "CancellationSignal"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the ability to cancel an operation in progress."
      class 368695 "OnCancelListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 2057271 "onCancel"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when {@link CancellationSignal#cancel} is invoked."
	end
      end

      attribute 806199 "mIsCanceled"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 801463 // mOnCancelListener (<unidirectional association>)
	relation 801463 --->
	  a role_name "mOnCancelListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 801463 // mOnCancelListener (<unidirectional association>)
	  b parent class_ref 368695 // OnCancelListener
      end

      attribute 806327 "mRemote"
	private explicit_type "ICancellationSignal"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 806455 "mCancelInProgress"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2056119 "CancellationSignal"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a cancellation signal, initially not canceled."
      end

      operation 2056247 "isCanceled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the operation has been canceled.

@return True if the operation has been canceled."
      end

      operation 2056375 "throwIfCanceled"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws {@link OperationCanceledException} if the operation has been canceled.

@throws OperationCanceledException if the operation has been canceled."
      end

      operation 2056503 "cancel"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancels the operation and signals the cancellation listener.
If the operation has not yet started, then it will be canceled as soon as it does."
      end

      operation 2056631 "setOnCancelListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 368695 // OnCancelListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the cancellation listener to be called when canceled.

This method is intended to be used by the recipient of a cancellation signal
such as a database or a content provider to handle cancellation requests
while performing a long-running operation.  This method is not intended to be
used by applications themselves.

If {@link CancellationSignal#cancel} has already been called, then the provided
listener is invoked immediately.

This method is guaranteed that the listener will not be called after it
has been removed.

@param listener The cancellation listener, or null to remove the current listener."
      end

      operation 2056759 "setRemote"
	public explicit_return_type "void"
	nparams 1
	  param inout name "remote" explicit_type "ICancellationSignal"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the remote transport.

If {@link CancellationSignal#cancel} has already been called, then the provided
remote transport is canceled immediately.

This method is guaranteed that the remote transport will not be called after it
has been removed.

@param remote The remote transport, or null to remove.

@hide"
      end

      operation 2056887 "waitForCancelFinishedLocked"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2057015 "createTransport"
	class_operation public explicit_return_type "ICancellationSignal"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a transport that can be returned back to the caller of
a Binder function and subsequently used to dispatch a cancellation signal.

@return The new cancellation signal transport.

@hide"
      end

      operation 2057143 "fromTransport"
	class_operation public return_type class_ref 279095 // CancellationSignal
	nparams 1
	  param inout name "transport" explicit_type "ICancellationSignal"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a locally created transport, returns its associated cancellation signal.

@param transport The locally created transport, or null if none.
@return The associated cancellation signal, or null if none.

@hide"
      end

      class 368823 "Transport"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 801591 // <generalisation>
	  relation 801591 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 801591 // <generalisation>
	    b parent class_ref 368951 // Stub
	end

	classrelation 801719 // mCancellationSignal (<unidirectional association>)
	  relation 801719 --->
	    a role_name "mCancellationSignal" init_value " new CancellationSignal()" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 801719 // mCancellationSignal (<unidirectional association>)
	    b parent class_ref 279095 // CancellationSignal
	end

	operation 2057399 "cancel"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 279479 "FileObserver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Monitors files (using <a href=\"http://en.wikipedia.org/wiki/Inotify\">inotify</a>)
to fire an event after files are accessed or changed by by any process on
the device (including this one).  FileObserver is an abstract class;
subclasses must implement the event handler {@link #onEvent(int, String)}.

<p>Each FileObserver instance monitors a single file or directory.
If a directory is monitored, events will be triggered for all files and
subdirectories inside the monitored directory.</p>

<p>An event mask is used to specify which changes or actions to report.
Event type constants are used to describe the possible changes in the
event mask as well as what actually happened in event callbacks.</p>

<p class=\"caution\"><b>Warning</b>: If a FileObserver is garbage collected, it
will stop sending events.  To ensure you keep receiving events, you must
keep a reference to the FileObserver instance from some other live object.</p>"
      attribute 1645239 "ACCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: Data was read from a file "
      end

      attribute 1645367 "MODIFY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: Data was written to a file "
      end

      attribute 1645495 "ATTRIB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: Metadata (permissions, owner, timestamp) was changed explicitly "
      end

      attribute 1645623 "CLOSE_WRITE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: Someone had a file or directory open for writing, and closed it "
      end

      attribute 1645751 "CLOSE_NOWRITE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: Someone had a file or directory open read-only, and closed it "
      end

      attribute 1645879 "OPEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: A file or directory was opened "
      end

      attribute 1646007 "MOVED_FROM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: A file or subdirectory was moved from the monitored directory "
      end

      attribute 1646135 "MOVED_TO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: A file or subdirectory was moved to the monitored directory "
      end

      attribute 1646263 "CREATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: A new file or subdirectory was created under the monitored directory "
      end

      attribute 1646391 "DELETE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: A file was deleted from the monitored directory "
      end

      attribute 1646519 "DELETE_SELF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: The monitored file or directory was deleted; monitoring effectively stops "
      end

      attribute 1646647 "MOVE_SELF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event type: The monitored file or directory was moved; monitoring continues "
      end

      attribute 1646775 "ALL_EVENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " ACCESS | MODIFY | ATTRIB | CLOSE_WRITE
            | CLOSE_NOWRITE | OPEN | MOVED_FROM | MOVED_TO | DELETE | CREATE
            | DELETE_SELF | MOVE_SELF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Event mask: All valid event types, combined "
      end

      classrelation 1458231 // LOG_TAG (<unidirectional association>)
	relation 1458231 --->
	  a role_name "LOG_TAG" init_value " \"FileObserver\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1458231 // LOG_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      class 543159 "ObserverThread"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1458359 // <generalisation>
	  relation 1458359 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1458359 // <generalisation>
	    b parent class_ref 295863 // Thread
	end

	attribute 1646903 "m_observers"
	  private explicit_type "Integer, WeakReference"
	  init_value " new HashMap<Integer, WeakReference>()"
	  stereotype "HashMap"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1647031 "m_fd"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3781943 "ObserverThread"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3782071 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3782199 "startWatching"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "path" type class_ref 129591 // String
	    param in name "mask" explicit_type "int"
	    param inout name "observer" type class_ref 279479 // FileObserver
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3782327 "stopWatching"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "descriptor" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3782455 "onEvent"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "wfd" explicit_type "int"
	    param in name "mask" explicit_type "int"
	    param inout name "path" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3782583 "init"
	  private explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	  
	  
	  
	end

	operation 3782711 "observe"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "fd" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	  
	  
	  
	end

	operation 3782839 "startWatching"
	  private explicit_return_type "int"
	  nparams 3
	    param in name "fd" explicit_type "int"
	    param inout name "path" type class_ref 129591 // String
	    param in name "mask" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	  
	  
	  
	end

	operation 3782967 "stopWatching"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "fd" explicit_type "int"
	    param in name "wfd" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	  
	  
	  
	end
      end

      classrelation 1458487 // s_observerThread (<unidirectional association>)
	relation 1458487 --->
	  a role_name "s_observerThread" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1458487 // s_observerThread (<unidirectional association>)
	  b parent class_ref 543159 // ObserverThread
      end

      extra_member 132919 "initialization"
	
	cpp "" ""
	java "  static {
        s_observerThread = new ObserverThread();
        s_observerThread.start();
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 1458615 // m_path (<unidirectional association>)
	relation 1458615 --->
	  a role_name "m_path" private
	    comment " instance
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1458615 // m_path (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1647159 "m_descriptor"
	private explicit_type "Integer"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1647287 "m_mask"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3783095 "FileObserver"
	public explicit_return_type ""
	nparams 1
	  param inout name "path" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to FileObserver(path, FileObserver.ALL_EVENTS)."
      end

      operation 3783223 "FileObserver"
	public explicit_return_type ""
	nparams 2
	  param inout name "path" type class_ref 129591 // String
	  param in name "mask" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new file observer for a certain file or directory.
Monitoring does not start on creation!  You must call
{@link #startWatching()} before you will receive events.

@param path The file or directory to monitor
@param mask The event or events (added together) to watch for"
      end

      operation 3783351 "finalize"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3783479 "startWatching"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start watching for events.  The monitored file or directory must exist at
this time, or else no events will be reported (even if it appears later).
If monitoring is already started, this call has no effect."
      end

      operation 3783607 "stopWatching"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stop watching for events.  Some events may be in process, so events
may continue to be reported even after this method completes.  If
monitoring is already stopped, this call has no effect."
      end

      operation 3783735 "onEvent"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "event" explicit_type "int"
	  param inout name "path" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The event handler, which must be implemented by subclasses.

<p class=\"note\">This method is invoked on a special FileObserver thread.
It runs independently of any threads, so take care to use appropriate
synchronization!  Consider using {@link Handler#post(Runnable)} to shift
event handling work to the main thread to avoid concurrency problems.</p>

<p>Event handlers must not throw exceptions.</p>

@param event The type of event which happened
@param path The path, relative to the main monitored file or directory,
    of the file or directory which triggered the event"
      end
    end

    class 282423 "ShellCommand"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Helper for implementing {@link Binder#onShellCommand Binder.onShellCommand}.
@hide"
      classrelation 1473079 // TAG (<unidirectional association>)
	relation 1473079 --->
	  a role_name "TAG" init_value " \"ShellCommand\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1473079 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1678519 "DEBUG"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1473207 // mTarget (<unidirectional association>)
	relation 1473207 --->
	  a role_name "mTarget" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1473207 // mTarget (<unidirectional association>)
	  b parent class_ref 277559 // Binder
      end

      attribute 1678647 "mIn"
	private explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1678775 "mOut"
	private explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1678903 "mErr"
	private explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1473335 // mArgs (<unidirectional association>)
	relation 1473335 --->
	  a role_name "mArgs" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1473335 // mArgs (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1473463 // mResultReceiver (<unidirectional association>)
	relation 1473463 --->
	  a role_name "mResultReceiver" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1473463 // mResultReceiver (<unidirectional association>)
	  b parent class_ref 277815 // ResultReceiver
      end

      classrelation 1473591 // mCmd (<unidirectional association>)
	relation 1473591 --->
	  a role_name "mCmd" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1473591 // mCmd (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1679031 "mArgPos"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1473719 // mCurArgData (<unidirectional association>)
	relation 1473719 --->
	  a role_name "mCurArgData" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1473719 // mCurArgData (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1679159 "mFileIn"
	private explicit_type "FileInputStream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1679287 "mFileOut"
	private explicit_type "FileOutputStream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1679415 "mFileErr"
	private explicit_type "FileOutputStream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1679543 "mInputStream"
	private explicit_type "InputStream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3871543 "init"
	public explicit_return_type "void"
	nparams 6
	  param inout name "target" type class_ref 277559 // Binder
	  param inout name "in" explicit_type "FileDescriptor"
	  param inout name "out" explicit_type "FileDescriptor"
	  param inout name "err" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	  param in name "firstArgPos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3871671 "exec"
	public explicit_return_type "int"
	nparams 6
	  param inout name "target" type class_ref 277559 // Binder
	  param inout name "in" explicit_type "FileDescriptor"
	  param inout name "out" explicit_type "FileDescriptor"
	  param inout name "err" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	  param inout name "resultReceiver" type class_ref 277815 // ResultReceiver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3871799 "getRawOutputStream"
	public explicit_return_type "OutputStream"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return direct raw access (not buffered) to the command's output data stream."
      end

      operation 3871927 "getOutPrintWriter"
	public explicit_return_type "PrintWriter"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a PrintWriter for formatting output to {@link #getRawOutputStream()}."
      end

      operation 3872055 "getRawErrorStream"
	public explicit_return_type "OutputStream"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return direct raw access (not buffered) to the command's error output data stream."
      end

      operation 3872183 "getErrPrintWriter"
	public explicit_return_type "PrintWriter"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a PrintWriter for formatting output to {@link #getRawErrorStream()}."
      end

      operation 3872311 "getRawInputStream"
	public explicit_return_type "InputStream"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return direct raw access (not buffered) to the command's input data stream."
      end

      operation 3872439 "getBufferedInputStream"
	public explicit_return_type "InputStream"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return buffered access to the command's {@link #getRawInputStream()}."
      end

      operation 3872567 "getNextOption"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the next option on the command line -- that is an argument that
starts with '-'.  If the next argument is not an option, null is returned."
      end

      operation 3872695 "getNextArg"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the next argument on the command line, whatever it is; if there are
no arguments left, return null."
      end

      operation 3872823 "peekNextArg"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3872951 "getNextArgRequired"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the next argument on the command line, whatever it is; if there are
no arguments left, throws an IllegalArgumentException to report this to the user."
      end

      operation 3873079 "handleDefaultCommands"
	public explicit_return_type "int"
	nparams 1
	  param inout name "cmd" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3873207 "onCommand"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "cmd" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement parsing and execution of a command.  If it isn't a command you understand,
call {@link #handleDefaultCommands(String)} and return its result as a last resort.
User {@link #getNextOption()}, {@link #getNextArg()}, and {@link #getNextArgRequired()}
to process additional command line arguments.  Command output can be written to
{@link #getOutPrintWriter()} and errors to {@link #getErrPrintWriter()}.

<p class=\"caution\">Note that no permission checking has been done before entering this function,
so you need to be sure to do your own security verification for any commands you
are executing.  The easiest way to do this is to have the ShellCommand contain
only a reference to your service's aidl interface, and do all of your command
implementations on top of that -- that way you can rely entirely on your executing security
code behind that interface.</p>

@param cmd The first command line argument representing the name of the command to execute.
@return Return the command result; generally 0 or positive indicates success and
negative values indicate error."
      end

      operation 3873335 "onHelp"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to print help text about your command to {@link #getOutPrintWriter()}."
      end
    end

    class 286647 "HandlerThread"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Handy class for starting a new thread that has a looper. The looper can then be 
used to create handler classes. Note that start() must still be called."
      classrelation 1265079 // <generalisation>
	relation 1265079 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1265079 // <generalisation>
	  b parent class_ref 295863 // Thread
      end

      attribute 1319735 "mPriority"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1319863 "mTid"
	package explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1265207 // mLooper (<unidirectional association>)
	relation 1265207 --->
	  a role_name "mLooper" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1265207 // mLooper (<unidirectional association>)
	  b parent class_ref 129335 // Looper
      end

      operation 3162551 "HandlerThread"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3162679 "HandlerThread"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param in name "priority" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a HandlerThread.
@param name
@param priority The priority to run the thread at. The value supplied must be from 
{@link android.os.Process} and not from java.lang.Thread."
      end

      operation 3162807 "onLooperPrepared"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call back method that can be explicitly overridden if needed to execute some
setup before Looper loops."
      end

      operation 3162935 "run"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3163063 "getLooper"
	public return_type class_ref 129335 // Looper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method returns the Looper associated with this thread. If this thread not been started
or for any reason is isAlive() returns false, this method will return null. If this thread 
has been started, this method will block until the looper has been initialized.  
@return The looper."
      end

      operation 3163191 "quit"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Quits the handler thread's looper.
<p>
Causes the handler thread's looper to terminate without processing any
more messages in the message queue.
</p><p>
Any attempt to post messages to the queue after the looper is asked to quit will fail.
For example, the {@link Handler#sendMessage(Message)} method will return false.
</p><p class=\"note\">
Using this method may be unsafe because some messages may not be delivered
before the looper terminates.  Consider using {@link #quitSafely} instead to ensure
that all pending work is completed in an orderly manner.
</p>

@return True if the looper looper has been asked to quit or false if the
thread had not yet started running.

@see #quitSafely"
      end

      operation 3163319 "quitSafely"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Quits the handler thread's looper safely.
<p>
Causes the handler thread's looper to terminate as soon as all remaining messages
in the message queue that are already due to be delivered have been handled.
Pending delayed messages with due times in the future will not be delivered.
</p><p>
Any attempt to post messages to the queue after the looper is asked to quit will fail.
For example, the {@link Handler#sendMessage(Message)} method will return false.
</p><p>
If the thread has not been started or has finished (that is if
{@link #getLooper} returns null), then false is returned.
Otherwise the looper is asked to quit and true is returned.
</p>

@return True if the looper looper has been asked to quit or false if the
thread had not yet started running."
      end

      operation 3163447 "getThreadId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the identifier of this thread. See Process.myTid()."
      end
    end

    class 286903 "MessageQueue"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Low-level class holding the list of messages to be dispatched by a
{@link Looper}.  Messages are not added directly to a MessageQueue,
but rather through {@link Handler} objects associated with the Looper.

<p>You can retrieve the MessageQueue for the current thread with
{@link Looper#myQueue() Looper.myQueue()}."
      class 296375 "IdleHandler"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1366327 "queueIdle"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the message queue has run out of messages and will now
wait for more.  Return true to keep your idle handler active, false
to have it removed.  This may be called if there are still messages
pending in the queue, but they are all scheduled to be dispatched
after the current time."
	end
      end

      classrelation 598455 // TAG (<unidirectional association>)
	relation 598455 --->
	  a role_name "TAG" init_value " \"MessageQueue\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 598455 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 557367 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 557495 "mQuitAllowed"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " True if the message queue can be quit."
      end

      attribute 557623 "mPtr"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " used by native code"
      end

      classrelation 598583 // mMessages (<unidirectional association>)
	relation 598583 --->
	  a role_name "mMessages" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 598583 // mMessages (<unidirectional association>)
	  b parent class_ref 287287 // Message
      end

      classrelation 598711 // mIdleHandlers (<unidirectional association>)
	relation 598711 --->
	  stereotype "ArrayList"
	  a role_name "mIdleHandlers" init_value " new ArrayList<IdleHandler>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 598711 // mIdleHandlers (<unidirectional association>)
	  b parent class_ref 296375 // IdleHandler
      end

      class 296503 "FileDescriptorRecord"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 558519 "mDescriptor"
	  const_attribute public explicit_type "FileDescriptor"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 558647 "mEvents"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 599095 // mListener (<unidirectional association>)
	  relation 599095 --->
	    a role_name "mListener" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 599095 // mListener (<unidirectional association>)
	    b parent class_ref 296631 // OnFileDescriptorEventListener
	end

	attribute 558775 "mSeq"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1366583 "FileDescriptorRecord"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "descriptor" explicit_type "FileDescriptor"
	    param in name "events" explicit_type "int"
	    param inout name "listener" type class_ref 296631 // OnFileDescriptorEventListener
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 598839 // mFileDescriptorRecords (<unidirectional association>)
	relation 598839 --->
	  a role_name "mFileDescriptorRecords" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<FileDescriptorRecord> ${name}${value};
"
	    classrelation_ref 598839 // mFileDescriptorRecords (<unidirectional association>)
	  b parent class_ref 139575 // SparseArray
      end

      classrelation 598967 // mPendingIdleHandlers (<unidirectional association>)
	relation 598967 --->
	  a role_name "mPendingIdleHandlers" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 598967 // mPendingIdleHandlers (<unidirectional association>)
	  b parent class_ref 296375 // IdleHandler
      end

      attribute 557751 "mQuitting"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 557879 "mBlocked"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates whether next() is blocked waiting in pollOnce() with a non-zero timeout."
      end

      attribute 558007 "mNextBarrierToken"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The next barrier token.
 Barriers are indicated by messages with a null target whose arg1 field carries the token."
      end

      operation 1362231 "nativeInit"
	class_operation private explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 1362359 "nativeDestroy"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "ptr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 1362487 "nativePollOnce"
	private explicit_return_type "void"
	nparams 2
	  param in name "ptr" explicit_type "long"
	  param in name "timeoutMillis" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 1362615 "nativeWake"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "ptr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "non-static for callbacks"
      end

      operation 1362743 "nativeIsPolling"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "ptr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 1362871 "nativeSetFileDescriptorEvents"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "ptr" explicit_type "long"
	  param in name "fd" explicit_type "int"
	  param in name "events" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 1362999 "MessageQueue"
	package explicit_return_type ""
	nparams 1
	  param inout name "quitAllowed" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1363127 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1363255 "dispose"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Disposes of the underlying message queue.
 Must only be called on the looper thread or the finalizer."
      end

      operation 1363383 "isIdle"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the looper has no pending messages which are due to be processed.

<p>This method is safe to call from any thread.

@return True if the looper is idle."
      end

      operation 1363511 "addIdleHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 296375 // IdleHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new {@link IdleHandler} to this message queue.  This may be
removed automatically for you by returning false from
{@link IdleHandler#queueIdle IdleHandler.queueIdle()} when it is
invoked, or explicitly removing it with {@link #removeIdleHandler}.

<p>This method is safe to call from any thread.

@param handler The IdleHandler to be added."
      end

      operation 1363639 "removeIdleHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 296375 // IdleHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove an {@link IdleHandler} from the queue that was previously added
with {@link #addIdleHandler}.  If the given object is not currently
in the idle list, nothing is done.

<p>This method is safe to call from any thread.

@param handler The IdleHandler to be removed."
      end

      operation 1363767 "isPolling"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this looper's thread is currently polling for more work to do.
This is a good signal that the loop is still alive rather than being stuck
handling a callback.  Note that this method is intrinsically racy, since the
state of the loop can change before you get the result back.

<p>This method is safe to call from any thread.

@return True if the looper is currently polling for events.
@hide"
      end

      operation 1363895 "isPollingLocked"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1364023 "addOnFileDescriptorEventListener"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "events" explicit_type "int"
	  param inout name "listener" type class_ref 296631 // OnFileDescriptorEventListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @OnFileDescriptorEventListener.Events ${t1} ${p1}, @NonNull ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a file descriptor listener to receive notification when file descriptor
related events occur.
<p>
If the file descriptor has already been registered, the specified events
and listener will replace any that were previously associated with it.
It is not possible to set more than one listener per file descriptor.
</p><p>
It is important to always unregister the listener when the file descriptor
is no longer of use.
</p>

@param fd The file descriptor for which a listener will be registered.
@param events The set of events to receive: a combination of the
{@link OnFileDescriptorEventListener#EVENT_INPUT},
{@link OnFileDescriptorEventListener#EVENT_OUTPUT}, and
{@link OnFileDescriptorEventListener#EVENT_ERROR} event masks.  If the requested
set of events is zero, then the listener is unregistered.
@param listener The listener to invoke when file descriptor events occur.

@see OnFileDescriptorEventListener
@see #removeOnFileDescriptorEventListener"
      end

      class 296631 "OnFileDescriptorEventListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 558135 "EVENT_INPUT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1 << 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "File descriptor event: Indicates that the file descriptor is ready for input
operations, such as reading.
<p>
The listener should read all available data from the file descriptor
then return <code>true</code> to keep the listener active or <code>false</code>
to remove the listener.
</p><p>
In the case of a socket, this event may be generated to indicate
that there is at least one incoming connection that the listener
should accept.
</p><p>
This event will only be generated if the {@link #EVENT_INPUT} event mask was
specified when the listener was added.
</p>
"
	end

	attribute 558263 "EVENT_OUTPUT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1 << 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "File descriptor event: Indicates that the file descriptor is ready for output
operations, such as writing.
<p>
The listener should write as much data as it needs.  If it could not
write everything at once, then it should return <code>true</code> to
keep the listener active.  Otherwise, it should return <code>false</code>
to remove the listener then re-register it later when it needs to write
something else.
</p><p>
This event will only be generated if the {@link #EVENT_OUTPUT} event mask was
specified when the listener was added.
</p>
"
	end

	attribute 558391 "EVENT_ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1 << 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "File descriptor event: Indicates that the file descriptor encountered a
fatal error.
<p>
File descriptor errors can occur for various reasons.  One common error
is when the remote peer of a socket or pipe closes its end of the connection.
</p><p>
This event may be generated at any time regardless of whether the
{@link #EVENT_ERROR} event mask was specified when the listener was added.
</p>
"
	end

	class 296759 "Events"
	  visibility public stereotype "@interface"
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
	  java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef(flag=true, value={EVENT_INPUT, EVENT_OUTPUT, EVENT_ERROR})
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	end

	operation 1366455 "onFileDescriptorEvents"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "fd" explicit_type "FileDescriptor"
	    param in name "events" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Events ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Events
"
	  
	  
	  
	  comment "Called when a file descriptor receives events.

@param fd The file descriptor.
@param events The set of events that occurred: a combination of the
{@link #EVENT_INPUT}, {@link #EVENT_OUTPUT}, and {@link #EVENT_ERROR} event masks.
@return The new set of events to watch, or 0 to unregister the listener.

@see #EVENT_INPUT
@see #EVENT_OUTPUT
@see #EVENT_ERROR"
	end
      end

      operation 1364151 "removeOnFileDescriptorEventListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a file descriptor listener.
<p>
This method does nothing if no listener has been registered for the
specified file descriptor.
</p>

@param fd The file descriptor whose listener will be unregistered.

@see OnFileDescriptorEventListener
@see #addOnFileDescriptorEventListener"
      end

      operation 1364279 "updateOnFileDescriptorEventListenerLocked"
	private explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "events" explicit_type "int"
	  param inout name "listener" type class_ref 296631 // OnFileDescriptorEventListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1364407 "dispatchEvents"
	private explicit_return_type "int"
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "events" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Called from native code."
      end

      operation 1364535 "next"
	package return_type class_ref 287287 // Message
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1364663 "quit"
	package explicit_return_type "void"
	nparams 1
	  param inout name "safe" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1364791 "postSyncBarrier"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Posts a synchronization barrier to the Looper's message queue.

Message processing occurs as usual until the message queue encounters the
synchronization barrier that has been posted.  When the barrier is encountered,
later synchronous messages in the queue are stalled (prevented from being executed)
until the barrier is released by calling {@link #removeSyncBarrier} and specifying
the token that identifies the synchronization barrier.

This method is used to immediately postpone execution of all subsequently posted
synchronous messages until a condition is met that releases the barrier.
Asynchronous messages (see {@link Message#isAsynchronous} are exempt from the barrier
and continue to be processed as usual.

This call must be always matched by a call to {@link #removeSyncBarrier} with
the same token to ensure that the message queue resumes normal operation.
Otherwise the application will probably hang!

@return A token that uniquely identifies the barrier.  This token must be
passed to {@link #removeSyncBarrier} to release the barrier.

@hide"
      end

      operation 1364919 "postSyncBarrier"
	private explicit_return_type "int"
	nparams 1
	  param in name "when" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1365047 "removeSyncBarrier"
	public explicit_return_type "void"
	nparams 1
	  param in name "token" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a synchronization barrier.

@param token The synchronization barrier token that was returned by
{@link #postSyncBarrier}.

@throws IllegalStateException if the barrier was not found.

@hide"
      end

      operation 1365175 "enqueueMessage"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "msg" type class_ref 287287 // Message
	  param in name "when" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1365303 "hasMessages"
	package explicit_return_type "boolean"
	nparams 3
	  param inout name "h" type class_ref 132023 // Handler
	  param in name "what" explicit_type "int"
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1365431 "hasMessages"
	package explicit_return_type "boolean"
	nparams 3
	  param inout name "h" type class_ref 132023 // Handler
	  param inout name "r" explicit_type "Runnable"
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1365559 "removeMessages"
	package explicit_return_type "void"
	nparams 3
	  param inout name "h" type class_ref 132023 // Handler
	  param in name "what" explicit_type "int"
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1365687 "removeMessages"
	package explicit_return_type "void"
	nparams 3
	  param inout name "h" type class_ref 132023 // Handler
	  param inout name "r" explicit_type "Runnable"
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1365815 "removeCallbacksAndMessages"
	package explicit_return_type "void"
	nparams 2
	  param inout name "h" type class_ref 132023 // Handler
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1365943 "removeAllMessagesLocked"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1366071 "removeAllFutureMessagesLocked"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1366199 "dump"
	package explicit_return_type "void"
	nparams 2
	  param inout name "pw" type class_ref 287415 // Printer
	  param inout name "prefix" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 287287 "Message"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Defines a message containing a description and arbitrary data object that can be
sent to a {@link Handler}.  This object contains two extra int fields and an
extra object field that allow you to not do allocations in many cases.  

<p class=\"note\">While the constructor of Message is public, the best way to get
one of these is to call {@link #obtain Message.obtain()} or one of the
{@link Handler#obtainMessage Handler.obtainMessage()} methods, which will pull
them from a pool of recycled objects.</p>"
      classrelation 1461815 // <realization>
	relation 1461815 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1461815 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1653815 "what"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "User-defined message code so that the recipient can identify 
what this message is about. Each {@link Handler} has its own name-space
for message codes, so you do not need to worry about yours conflicting
with other handlers.
"
      end

      attribute 1653943 "arg1"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "arg1 and arg2 are lower-cost alternatives to using
{@link #setData(Bundle) setData()} if you only need to store a
few integer values.
"
      end

      attribute 1654071 "arg2"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "arg1 and arg2 are lower-cost alternatives to using
{@link #setData(Bundle) setData()} if you only need to store a
few integer values.
"
      end

      classrelation 1461943 // obj (<unidirectional association>)
	relation 1461943 --->
	  a role_name "obj" public
	    comment "
An arbitrary object to send to the recipient.  When using
{@link Messenger} to send the message across processes this can only
be non-null if it contains a Parcelable of a framework class (not one
implemented by the application).   For other data transfer use
{@link #setData}.

<p>Note that Parcelable objects here are not supported prior to
the {@link android.os.Build.VERSION_CODES#FROYO} release.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1461943 // obj (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      classrelation 1462071 // replyTo (<unidirectional association>)
	relation 1462071 --->
	  a role_name "replyTo" public
	    comment "
Optional Messenger where replies to this message can be sent.  The
semantics of exactly how this is used are up to the sender and
receiver.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1462071 // replyTo (<unidirectional association>)
	  b parent class_ref 513719 // Messenger
      end

      attribute 1654199 "sendingUid"
	public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Optional field indicating the uid that sent the message.  This is
only valid for messages posted by a {@link Messenger}; otherwise,
it will be -1.
"
      end

      attribute 1654327 "FLAG_IN_USE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1 << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If set message is in use.
This flag is set when the message is enqueued and remains set while it
is delivered and afterwards when it is recycled.  The flag is only cleared
when a new message is created or obtained since that is the only time that
applications are allowed to modify the contents of the message.

It is an error to attempt to enqueue or recycle a message that is already in use.

package"
      end

      attribute 1654455 "FLAG_ASYNCHRONOUS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1 << 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If set message is asynchronous 
package"
      end

      attribute 1654583 "FLAGS_TO_CLEAR_ON_COPY_FROM"
	class_attribute const_attribute package explicit_type "int"
	init_value " FLAG_IN_USE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flags to clear in the copyFrom method 
package"
      end

      attribute 1654711 "flags"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "package"
      end

      attribute 1654839 "when"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "package"
      end

      classrelation 1462199 // data (<unidirectional association>)
	relation 1462199 --->
	  a role_name "data" package
	    comment "package
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1462199 // data (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      classrelation 1462327 // target (<unidirectional association>)
	relation 1462327 --->
	  a role_name "target" package
	    comment "package
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1462327 // target (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      attribute 1654967 "callback"
	package explicit_type "Runnable"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "package"
      end

      classrelation 1462455 // next (<unidirectional association>)
	relation 1462455 --->
	  a role_name "next" package
	    comment " sometimes we store linked lists of these things
package
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1462455 // next (<unidirectional association>)
	  b parent class_ref 287287 // Message
      end

      classrelation 1462583 // sPoolSync (<unidirectional association>)
	relation 1462583 --->
	  a role_name "sPoolSync" init_value " new Object()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1462583 // sPoolSync (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      classrelation 1462711 // sPool (<unidirectional association>)
	relation 1462711 --->
	  a role_name "sPool" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1462711 // sPool (<unidirectional association>)
	  b parent class_ref 287287 // Message
      end

      attribute 1655095 "sPoolSize"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1655223 "MAX_POOL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 50"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1655351 "gCheckRecycle"
	class_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3800247 "obtain"
	class_operation public return_type class_ref 287287 // Message
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a new Message instance from the global pool. Allows us to
avoid allocating new objects in many cases."
      end

      operation 3800375 "obtain"
	class_operation public return_type class_ref 287287 // Message
	nparams 1
	  param inout name "orig" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #obtain()}, but copies the values of an existing
message (including its target) into the new one.
@param orig Original message to copy.
@return A Message object from the global pool."
      end

      operation 3800503 "obtain"
	class_operation public return_type class_ref 287287 // Message
	nparams 1
	  param inout name "h" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #obtain()}, but sets the value for the <em>target</em> member on the Message returned.
@param h  Handler to assign to the returned Message object's <em>target</em> member.
@return A Message object from the global pool."
      end

      operation 3800631 "obtain"
	class_operation public return_type class_ref 287287 // Message
	nparams 2
	  param inout name "h" type class_ref 132023 // Handler
	  param inout name "callback" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #obtain(Handler)}, but assigns a callback Runnable on
the Message that is returned.
@param h  Handler to assign to the returned Message object's <em>target</em> member.
@param callback Runnable that will execute when the message is handled.
@return A Message object from the global pool."
      end

      operation 3800759 "obtain"
	class_operation public return_type class_ref 287287 // Message
	nparams 2
	  param inout name "h" type class_ref 132023 // Handler
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #obtain()}, but sets the values for both <em>target</em> and
<em>what</em> members on the Message.
@param h  Value to assign to the <em>target</em> member.
@param what  Value to assign to the <em>what</em> member.
@return A Message object from the global pool."
      end

      operation 3800887 "obtain"
	class_operation public return_type class_ref 287287 // Message
	nparams 3
	  param inout name "h" type class_ref 132023 // Handler
	  param in name "what" explicit_type "int"
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #obtain()}, but sets the values of the <em>target</em>, <em>what</em>, and <em>obj</em>
members.
@param h  The <em>target</em> value to set.
@param what  The <em>what</em> value to set.
@param obj  The <em>object</em> method to set.
@return  A Message object from the global pool."
      end

      operation 3801015 "obtain"
	class_operation public return_type class_ref 287287 // Message
	nparams 4
	  param inout name "h" type class_ref 132023 // Handler
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #obtain()}, but sets the values of the <em>target</em>, <em>what</em>, 
<em>arg1</em>, and <em>arg2</em> members.

@param h  The <em>target</em> value to set.
@param what  The <em>what</em> value to set.
@param arg1  The <em>arg1</em> value to set.
@param arg2  The <em>arg2</em> value to set.
@return  A Message object from the global pool."
      end

      operation 3801143 "obtain"
	class_operation public return_type class_ref 287287 // Message
	nparams 5
	  param inout name "h" type class_ref 132023 // Handler
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #obtain()}, but sets the values of the <em>target</em>, <em>what</em>, 
<em>arg1</em>, <em>arg2</em>, and <em>obj</em> members.

@param h  The <em>target</em> value to set.
@param what  The <em>what</em> value to set.
@param arg1  The <em>arg1</em> value to set.
@param arg2  The <em>arg2</em> value to set.
@param obj  The <em>obj</em> value to set.
@return  A Message object from the global pool."
      end

      operation 3801271 "updateCheckRecycle"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "targetSdkVersion" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3801399 "recycle"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a Message instance to the global pool.
<p>
You MUST NOT touch the Message after calling this function because it has
effectively been freed.  It is an error to recycle a message that is currently
enqueued or that is in the process of being delivered to a Handler.
</p>"
      end

      operation 3801527 "recycleUnchecked"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recycles a Message that may be in-use.
Used internally by the MessageQueue and Looper when disposing of queued Messages."
      end

      operation 3801655 "copyFrom"
	public explicit_return_type "void"
	nparams 1
	  param inout name "o" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make this message like o.  Performs a shallow copy of the data field.
Does not copy the linked list fields, nor the timestamp or
target/callback of the original message."
      end

      operation 3801783 "getWhen"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the targeted delivery time of this message, in milliseconds."
      end

      operation 3801911 "setTarget"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3802039 "getTarget"
	public return_type class_ref 132023 // Handler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the a {@link android.os.Handler Handler} implementation that
will receive this message. The object must implement
{@link android.os.Handler#handleMessage(android.os.Message)
Handler.handleMessage()}. Each Handler has its own name-space for
message codes, so you do not need to
worry about yours conflicting with other handlers."
      end

      operation 3802167 "getCallback"
	public explicit_return_type "Runnable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve callback object that will execute when this message is handled.
This object must implement Runnable. This is called by
the <em>target</em> {@link Handler} that is receiving this Message to
dispatch it.  If
not set, the message will be dispatched to the receiving Handler's
{@link Handler#handleMessage(Message Handler.handleMessage())}."
      end

      operation 3802295 "getData"
	public return_type class_ref 131511 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains a Bundle of arbitrary data associated with this
event, lazily creating it if necessary. Set this value by calling
{@link #setData(Bundle)}.  Note that when transferring data across
processes via {@link Messenger}, you will need to set your ClassLoader
on the Bundle via {@link Bundle#setClassLoader(ClassLoader)
Bundle.setClassLoader()} so that it can instantiate your objects when
you retrieve them.
@see #peekData()
@see #setData(Bundle)"
      end

      operation 3802423 "peekData"
	public return_type class_ref 131511 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like getData(), but does not lazily create the Bundle.  A null
is returned if the Bundle does not already exist.  See
{@link #getData} for further information on this.
@see #getData()
@see #setData(Bundle)"
      end

      operation 3802551 "setData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a Bundle of arbitrary data values. Use arg1 and arg2 members
as a lower cost way to send a few simple integer values, if you can.
@see #getData() 
@see #peekData()"
      end

      operation 3802679 "sendToTarget"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends this Message to the Handler specified by {@link #getTarget}.
Throws a null pointer exception if this field has not been set."
      end

      operation 3802807 "isAsynchronous"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the message is asynchronous, meaning that it is not
subject to {@link Looper} synchronization barriers.

@return True if the message is asynchronous.

@see #setAsynchronous(boolean)"
      end

      operation 3802935 "setAsynchronous"
	public explicit_return_type "void"
	nparams 1
	  param inout name "async" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the message is asynchronous, meaning that it is not
subject to {@link Looper} synchronization barriers.
<p>
Certain operations, such as view invalidation, may introduce synchronization
barriers into the {@link Looper}'s message queue to prevent subsequent messages
from being delivered until some condition is met.  In the case of view invalidation,
messages which are posted after a call to {@link android.view.View#invalidate}
are suspended by means of a synchronization barrier until the next frame is
ready to be drawn.  The synchronization barrier ensures that the invalidation
request is completely handled before resuming.
</p><p>
Asynchronous messages are exempt from synchronization barriers.  They typically
represent interrupts, input events, and other signals that must be handled independently
even while other work has been suspended.
</p><p>
Note that asynchronous messages may be delivered out of order with respect to
synchronous messages although they are always delivered in order among themselves.
If the relative order of these messages matters then they probably should not be
asynchronous in the first place.  Use with caution.
</p>

@param async True if the message is asynchronous.

@see #isAsynchronous()"
      end

      operation 3803063 "isInUse"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "package"
      end

      operation 3803191 "markInUse"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "package"
      end

      operation 3803319 "Message"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Constructor (but the preferred way to get a Message is to call {@link #obtain() Message.obtain()})."
      end

      operation 3803447 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3803575 "toString"
	package return_type class_ref 129591 // String
	nparams 1
	  param in name "now" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1462839 // CREATOR (<unidirectional association>)
	relation 1462839 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<Message>() {
        public Message createFromParcel(Parcel source) {
            Message msg = Message.obtain();
            msg.readFromParcel(source);
            return msg;
        }
        
        public Message[] newArray(int size) {
            return new Message[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Message> ${name}${value};
"
	    classrelation_ref 1462839 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3803703 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3803831 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3803959 "readFromParcel"
	private explicit_return_type "void"
	nparams 1
	  param inout name "source" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 295351 "PerformanceCollector"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Collects performance data between two function calls in Bundle objects and
outputs the results using writer of type {@link PerformanceResultsWriter}.
<p>
{@link #beginSnapshot(String)} and {@link #endSnapshot()} functions collect
memory usage information and measure runtime between calls to begin and end.
These functions logically wrap around an entire test, and should be called
with name of test as the label, e.g. EmailPerformanceTest.
<p>
{@link #startTiming(String)} and {@link #stopTiming(String)} functions
measure runtime between calls to start and stop. These functions logically
wrap around a single test case or a small block of code, and should be called
with the name of test case as the label, e.g. testSimpleSendMailSequence.
<p>
{@link #addIteration(String)} inserts intermediate measurement point which
can be labeled with a String, e.g. Launch email app, compose, send, etc.
<p>
Snapshot and timing functions do not interfere with each other, and thus can
be called in any order. The intended structure is to wrap begin/endSnapshot
around calls to start/stopTiming, for example:
<p>
<code>beginSnapshot(\"EmailPerformanceTest\");
startTiming(\"testSimpleSendSequence\");
addIteration(\"Launch email app\");
addIteration(\"Compose\");
stopTiming(\"Send\");
startTiming(\"testComplexSendSequence\");
stopTiming(\"\");
startTiming(\"testAddLabel\");
stopTiming(\"\");
endSnapshot();</code>
<p>
Structure of results output is up to implementor of
{@link PerformanceResultsWriter }.

{@hide} Pending approval for public API."
      class 298295 "PerformanceResultsWriter"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1371063 "writeBeginSnapshot"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "label" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback invoked as first action in
PerformanceCollector#beginSnapshot(String) for reporting the start of
a performance snapshot.

@param label description of code block between beginSnapshot and
             PerformanceCollector#endSnapshot()
@see PerformanceCollector#beginSnapshot(String)"
	end

	operation 1371191 "writeEndSnapshot"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "results" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback invoked as last action in PerformanceCollector#endSnapshot()
for reporting performance data collected in the snapshot.

@param results memory and runtime metrics stored as key/value pairs,
       in the same structure as returned by
       PerformanceCollector#endSnapshot()
@see PerformanceCollector#endSnapshot()"
	end

	operation 1371319 "writeStartTiming"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "label" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback invoked as first action in
PerformanceCollector#startTiming(String) for reporting the start of
a timing measurement.

@param label description of code block between startTiming and
             PerformanceCollector#stopTiming(String)
@see PerformanceCollector#startTiming(String)"
	end

	operation 1371447 "writeStopTiming"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "results" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback invoked as last action in
{@link PerformanceCollector#stopTiming(String)} for reporting the
sequence of timings measured.

@param results runtime metrics of code block between calls to
               startTiming and stopTiming, in the same structure as
               returned by PerformanceCollector#stopTiming(String)
@see PerformanceCollector#stopTiming(String)"
	end

	operation 1371575 "writeMeasurement"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "label" type class_ref 129591 // String
	    param in name "value" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback invoked as last action in
{@link PerformanceCollector#addMeasurement(String, long)} for
reporting an integer type measurement.

@param label short description of the metric that was measured
@param value long value of the measurement"
	end

	operation 1371703 "writeMeasurement"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "label" type class_ref 129591 // String
	    param in name "value" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback invoked as last action in
{@link PerformanceCollector#addMeasurement(String, float)} for
reporting a float type measurement.

@param label short description of the metric that was measured
@param value float value of the measurement"
	end

	operation 1371831 "writeMeasurement"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "label" type class_ref 129591 // String
	    param inout name "value" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback invoked as last action in
{@link PerformanceCollector#addMeasurement(String, String)} for
reporting a string field.

@param label short description of the metric that was measured
@param value string summary of the measurement"
	end
      end

      classrelation 603831 // METRIC_KEY_ITERATIONS (<unidirectional association>)
	relation 603831 --->
	  a role_name "METRIC_KEY_ITERATIONS" init_value " \"iterations\"" class_relation const_relation public
	    comment "
In a results Bundle, this key references a List of iteration Bundles.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 603831 // METRIC_KEY_ITERATIONS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 603959 // METRIC_KEY_LABEL (<unidirectional association>)
	relation 603959 --->
	  a role_name "METRIC_KEY_LABEL" init_value " \"label\"" class_relation const_relation public
	    comment "
In an iteration Bundle, this key describes the iteration.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 603959 // METRIC_KEY_LABEL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 604087 // METRIC_KEY_CPU_TIME (<unidirectional association>)
	relation 604087 --->
	  a role_name "METRIC_KEY_CPU_TIME" init_value " \"cpu_time\"" class_relation const_relation public
	    comment "
In a results Bundle, this key reports the cpu time of the code block
under measurement.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 604087 // METRIC_KEY_CPU_TIME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 604215 // METRIC_KEY_EXECUTION_TIME (<unidirectional association>)
	relation 604215 --->
	  a role_name "METRIC_KEY_EXECUTION_TIME" init_value " \"execution_time\"" class_relation const_relation public
	    comment "
In a results Bundle, this key reports the execution time of the code
block under measurement.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 604215 // METRIC_KEY_EXECUTION_TIME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 604343 // METRIC_KEY_PRE_RECEIVED_TRANSACTIONS (<unidirectional association>)
	relation 604343 --->
	  a role_name "METRIC_KEY_PRE_RECEIVED_TRANSACTIONS" init_value " \"pre_received_transactions\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of received
transactions from the binder driver before collection started.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 604343 // METRIC_KEY_PRE_RECEIVED_TRANSACTIONS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 604471 // METRIC_KEY_PRE_SENT_TRANSACTIONS (<unidirectional association>)
	relation 604471 --->
	  a role_name "METRIC_KEY_PRE_SENT_TRANSACTIONS" init_value " \"pre_sent_transactions\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of transactions sent by
the running program before collection started.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 604471 // METRIC_KEY_PRE_SENT_TRANSACTIONS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 604599 // METRIC_KEY_RECEIVED_TRANSACTIONS (<unidirectional association>)
	relation 604599 --->
	  a role_name "METRIC_KEY_RECEIVED_TRANSACTIONS" init_value " \"received_transactions\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of received
transactions from the binder driver.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 604599 // METRIC_KEY_RECEIVED_TRANSACTIONS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 604727 // METRIC_KEY_SENT_TRANSACTIONS (<unidirectional association>)
	relation 604727 --->
	  a role_name "METRIC_KEY_SENT_TRANSACTIONS" init_value " \"sent_transactions\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of transactions sent by
the running program.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 604727 // METRIC_KEY_SENT_TRANSACTIONS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 604855 // METRIC_KEY_GC_INVOCATION_COUNT (<unidirectional association>)
	relation 604855 --->
	  a role_name "METRIC_KEY_GC_INVOCATION_COUNT" init_value " \"gc_invocation_count\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of garbage collection
invocations.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 604855 // METRIC_KEY_GC_INVOCATION_COUNT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 604983 // METRIC_KEY_JAVA_ALLOCATED (<unidirectional association>)
	relation 604983 --->
	  a role_name "METRIC_KEY_JAVA_ALLOCATED" init_value " \"java_allocated\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the amount of allocated memory
used by the running program.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 604983 // METRIC_KEY_JAVA_ALLOCATED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 605111 // METRIC_KEY_JAVA_FREE (<unidirectional association>)
	relation 605111 --->
	  a role_name "METRIC_KEY_JAVA_FREE" init_value " \"java_free\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the amount of free memory
available to the running program.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 605111 // METRIC_KEY_JAVA_FREE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 605239 // METRIC_KEY_JAVA_PRIVATE_DIRTY (<unidirectional association>)
	relation 605239 --->
	  a role_name "METRIC_KEY_JAVA_PRIVATE_DIRTY" init_value " \"java_private_dirty\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of private dirty pages
used by dalvik.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 605239 // METRIC_KEY_JAVA_PRIVATE_DIRTY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 605367 // METRIC_KEY_JAVA_PSS (<unidirectional association>)
	relation 605367 --->
	  a role_name "METRIC_KEY_JAVA_PSS" init_value " \"java_pss\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the proportional set size for
dalvik.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 605367 // METRIC_KEY_JAVA_PSS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 605495 // METRIC_KEY_JAVA_SHARED_DIRTY (<unidirectional association>)
	relation 605495 --->
	  a role_name "METRIC_KEY_JAVA_SHARED_DIRTY" init_value " \"java_shared_dirty\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of shared dirty pages
used by dalvik.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 605495 // METRIC_KEY_JAVA_SHARED_DIRTY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 605623 // METRIC_KEY_JAVA_SIZE (<unidirectional association>)
	relation 605623 --->
	  a role_name "METRIC_KEY_JAVA_SIZE" init_value " \"java_size\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the total amount of memory
available to the running program.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 605623 // METRIC_KEY_JAVA_SIZE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 605751 // METRIC_KEY_NATIVE_ALLOCATED (<unidirectional association>)
	relation 605751 --->
	  a role_name "METRIC_KEY_NATIVE_ALLOCATED" init_value " \"native_allocated\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the amount of allocated memory in
the native heap.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 605751 // METRIC_KEY_NATIVE_ALLOCATED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 605879 // METRIC_KEY_NATIVE_FREE (<unidirectional association>)
	relation 605879 --->
	  a role_name "METRIC_KEY_NATIVE_FREE" init_value " \"native_free\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the amount of free memory in the
native heap.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 605879 // METRIC_KEY_NATIVE_FREE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 606007 // METRIC_KEY_NATIVE_PRIVATE_DIRTY (<unidirectional association>)
	relation 606007 --->
	  a role_name "METRIC_KEY_NATIVE_PRIVATE_DIRTY" init_value " \"native_private_dirty\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of private dirty pages
used by the native heap.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606007 // METRIC_KEY_NATIVE_PRIVATE_DIRTY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 606135 // METRIC_KEY_NATIVE_PSS (<unidirectional association>)
	relation 606135 --->
	  a role_name "METRIC_KEY_NATIVE_PSS" init_value " \"native_pss\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the proportional set size for the
native heap.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606135 // METRIC_KEY_NATIVE_PSS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 606263 // METRIC_KEY_NATIVE_SHARED_DIRTY (<unidirectional association>)
	relation 606263 --->
	  a role_name "METRIC_KEY_NATIVE_SHARED_DIRTY" init_value " \"native_shared_dirty\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of shared dirty pages
used by the native heap.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606263 // METRIC_KEY_NATIVE_SHARED_DIRTY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 606391 // METRIC_KEY_NATIVE_SIZE (<unidirectional association>)
	relation 606391 --->
	  a role_name "METRIC_KEY_NATIVE_SIZE" init_value " \"native_size\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the size of the native heap.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606391 // METRIC_KEY_NATIVE_SIZE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 606519 // METRIC_KEY_GLOBAL_ALLOC_COUNT (<unidirectional association>)
	relation 606519 --->
	  a role_name "METRIC_KEY_GLOBAL_ALLOC_COUNT" init_value " \"global_alloc_count\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of objects allocated
globally.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606519 // METRIC_KEY_GLOBAL_ALLOC_COUNT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 606647 // METRIC_KEY_GLOBAL_ALLOC_SIZE (<unidirectional association>)
	relation 606647 --->
	  a role_name "METRIC_KEY_GLOBAL_ALLOC_SIZE" init_value " \"global_alloc_size\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the size of all objects allocated
globally.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606647 // METRIC_KEY_GLOBAL_ALLOC_SIZE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 606775 // METRIC_KEY_GLOBAL_FREED_COUNT (<unidirectional association>)
	relation 606775 --->
	  a role_name "METRIC_KEY_GLOBAL_FREED_COUNT" init_value " \"global_freed_count\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of objects freed
globally.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606775 // METRIC_KEY_GLOBAL_FREED_COUNT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 606903 // METRIC_KEY_GLOBAL_FREED_SIZE (<unidirectional association>)
	relation 606903 --->
	  a role_name "METRIC_KEY_GLOBAL_FREED_SIZE" init_value " \"global_freed_size\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the size of all objects freed
globally.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 606903 // METRIC_KEY_GLOBAL_FREED_SIZE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 607031 // METRIC_KEY_OTHER_PRIVATE_DIRTY (<unidirectional association>)
	relation 607031 --->
	  a role_name "METRIC_KEY_OTHER_PRIVATE_DIRTY" init_value " \"other_private_dirty\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of private dirty pages
used by everything else.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 607031 // METRIC_KEY_OTHER_PRIVATE_DIRTY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 607159 // METRIC_KEY_OTHER_PSS (<unidirectional association>)
	relation 607159 --->
	  a role_name "METRIC_KEY_OTHER_PSS" init_value " \"other_pss\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the proportional set size for
everything else.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 607159 // METRIC_KEY_OTHER_PSS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 607287 // METRIC_KEY_OTHER_SHARED_DIRTY (<unidirectional association>)
	relation 607287 --->
	  a role_name "METRIC_KEY_OTHER_SHARED_DIRTY" init_value " \"other_shared_dirty\"" class_relation const_relation public
	    comment "
In a snapshot Bundle, this key reports the number of shared dirty pages
used by everything else.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 607287 // METRIC_KEY_OTHER_SHARED_DIRTY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 607415 // mPerfWriter (<unidirectional association>)
	relation 607415 --->
	  a role_name "mPerfWriter" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 607415 // mPerfWriter (<unidirectional association>)
	  b parent class_ref 298295 // PerformanceResultsWriter
      end

      classrelation 607543 // mPerfSnapshot (<unidirectional association>)
	relation 607543 --->
	  a role_name "mPerfSnapshot" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 607543 // mPerfSnapshot (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      classrelation 607671 // mPerfMeasurement (<unidirectional association>)
	relation 607671 --->
	  a role_name "mPerfMeasurement" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 607671 // mPerfMeasurement (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      attribute 561079 "mSnapshotCpuTime"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 561207 "mSnapshotExecTime"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 561335 "mCpuTime"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 561463 "mExecTime"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1371959 "PerformanceCollector"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1372087 "PerformanceCollector"
	public explicit_return_type ""
	nparams 1
	  param inout name "writer" type class_ref 298295 // PerformanceResultsWriter
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1372215 "setPerformanceResultsWriter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "writer" type class_ref 298295 // PerformanceResultsWriter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1372343 "beginSnapshot"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin collection of memory usage information.

@param label description of code block between beginSnapshot and
             endSnapshot, used to label output"
      end

      operation 1372471 "endSnapshot"
	public return_type class_ref 131511 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End collection of memory usage information. Returns collected data in a
Bundle object.

@return Memory and runtime metrics stored as key/value pairs. Values are
        of type long, and keys include:
        <ul>
        <li>{@link #METRIC_KEY_CPU_TIME cpu_time}
        <li>{@link #METRIC_KEY_EXECUTION_TIME execution_time}
        <li>{@link #METRIC_KEY_PRE_RECEIVED_TRANSACTIONS
        pre_received_transactions}
        <li>{@link #METRIC_KEY_PRE_SENT_TRANSACTIONS
        pre_sent_transactions}
        <li>{@link #METRIC_KEY_RECEIVED_TRANSACTIONS
        received_transactions}
        <li>{@link #METRIC_KEY_SENT_TRANSACTIONS sent_transactions}
        <li>{@link #METRIC_KEY_GC_INVOCATION_COUNT gc_invocation_count}
        <li>{@link #METRIC_KEY_JAVA_ALLOCATED java_allocated}
        <li>{@link #METRIC_KEY_JAVA_FREE java_free}
        <li>{@link #METRIC_KEY_JAVA_PRIVATE_DIRTY java_private_dirty}
        <li>{@link #METRIC_KEY_JAVA_PSS java_pss}
        <li>{@link #METRIC_KEY_JAVA_SHARED_DIRTY java_shared_dirty}
        <li>{@link #METRIC_KEY_JAVA_SIZE java_size}
        <li>{@link #METRIC_KEY_NATIVE_ALLOCATED native_allocated}
        <li>{@link #METRIC_KEY_NATIVE_FREE native_free}
        <li>{@link #METRIC_KEY_NATIVE_PRIVATE_DIRTY native_private_dirty}
        <li>{@link #METRIC_KEY_NATIVE_PSS native_pss}
        <li>{@link #METRIC_KEY_NATIVE_SHARED_DIRTY native_shared_dirty}
        <li>{@link #METRIC_KEY_NATIVE_SIZE native_size}
        <li>{@link #METRIC_KEY_GLOBAL_ALLOC_COUNT global_alloc_count}
        <li>{@link #METRIC_KEY_GLOBAL_ALLOC_SIZE global_alloc_size}
        <li>{@link #METRIC_KEY_GLOBAL_FREED_COUNT global_freed_count}
        <li>{@link #METRIC_KEY_GLOBAL_FREED_SIZE global_freed_size}
        <li>{@link #METRIC_KEY_OTHER_PRIVATE_DIRTY other_private_dirty}
        <li>{@link #METRIC_KEY_OTHER_PSS other_pss}
        <li>{@link #METRIC_KEY_OTHER_SHARED_DIRTY other_shared_dirty}
        </ul>"
      end

      operation 1372599 "startTiming"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start measurement of user and cpu time.

@param label description of code block between startTiming and
       stopTiming, used to label output"
      end

      operation 1372727 "addIteration"
	public return_type class_ref 131511 // Bundle
	nparams 1
	  param inout name "label" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a measured segment, and start measuring the next segment. Returns
collected data in a Bundle object.

@param label description of code block between startTiming and
             addIteration, and between two calls to addIteration, used
             to label output
@return Runtime metrics stored as key/value pairs. Values are of type
        long, and keys include:
        <ul>
        <li>{@link #METRIC_KEY_LABEL label}
        <li>{@link #METRIC_KEY_CPU_TIME cpu_time}
        <li>{@link #METRIC_KEY_EXECUTION_TIME execution_time}
        </ul>"
      end

      operation 1372855 "stopTiming"
	public return_type class_ref 131511 // Bundle
	nparams 1
	  param inout name "label" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stop measurement of user and cpu time.

@param label description of code block between addIteration or
             startTiming and stopTiming, used to label output
@return Runtime metrics stored in a bundle, including all iterations
        between calls to startTiming and stopTiming. List of iterations
        is keyed by {@link #METRIC_KEY_ITERATIONS iterations}."
      end

      operation 1372983 "addMeasurement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "label" type class_ref 129591 // String
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an integer type measurement to the collector.

@param label short description of the metric that was measured
@param value long value of the measurement"
      end

      operation 1373111 "addMeasurement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "label" type class_ref 129591 // String
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a float type measurement to the collector.

@param label short description of the metric that was measured
@param value float value of the measurement"
      end

      operation 1373239 "addMeasurement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "label" type class_ref 129591 // String
	  param inout name "value" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a string field to the collector.

@param label short description of the metric that was measured
@param value string summary of the measurement"
      end

      operation 1373367 "startPerformanceSnapshot"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts tracking memory usage, binder transactions, and real & cpu timing."
      end

      operation 1373495 "endPerformanceSnapshot"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops tracking memory usage, binder transactions, and real & cpu timing.
Stores collected data as type long into Bundle object for reporting."
      end

      operation 1373623 "startAllocCounting"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts allocation counting. This triggers a gc and resets the counts."
      end

      operation 1373751 "stopAllocCounting"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops allocation counting."
      end

      operation 1373879 "getAllocCounts"
	class_operation private return_type class_ref 131511 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a bundle with the current results from the allocation counting."
      end

      operation 1374007 "getBinderCounts"
	class_operation private return_type class_ref 131511 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a bundle with the counts for various binder counts for this
process. Currently the only two that are reported are the number of send
and the number of received transactions."
      end
    end

    class 332343 "Debug"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides various debugging methods for Android applications, including
tracing and allocation counts.
<p><strong>Logging Trace Files</strong></p>
<p>Debug can create log files that give details about an application, such as
a call stack and start/stop times for any running methods. See <a
href=\"{@docRoot}guide/developing/tools/traceview.html\">Traceview: A Graphical Log Viewer</a> for
information about reading trace files. To start logging trace files, call one
of the startMethodTracing() methods. To stop tracing, call
{@link #stopMethodTracing()}."
      class 332471 "MemoryInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1450807 // <realization>
	  relation 1450807 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1450807 // <realization>
	    b parent class_ref 137399 // Parcelable
	end

	attribute 1630903 "dalvikPss"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The proportional set size for dalvik heap.  (Doesn't include other Dalvik overhead.) "
	end

	attribute 1631031 "dalvikSwappablePss"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The proportional set size that is swappable for dalvik heap. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1631159 "dalvikPrivateDirty"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The private dirty pages used by dalvik heap. "
	end

	attribute 1631287 "dalvikSharedDirty"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The shared dirty pages used by dalvik heap. "
	end

	attribute 1631415 "dalvikPrivateClean"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The private clean pages used by dalvik heap. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1631543 "dalvikSharedClean"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The shared clean pages used by dalvik heap. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1631671 "dalvikSwappedOut"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The dirty dalvik pages that have been swapped out. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1631799 "dalvikSwappedOutPss"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The dirty dalvik pages that have been swapped out, proportional. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1631927 "nativePss"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The proportional set size for the native heap. "
	end

	attribute 1632055 "nativeSwappablePss"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The proportional set size that is swappable for the native heap. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1632183 "nativePrivateDirty"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The private dirty pages used by the native heap. "
	end

	attribute 1632311 "nativeSharedDirty"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The shared dirty pages used by the native heap. "
	end

	attribute 1632439 "nativePrivateClean"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The private clean pages used by the native heap. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1632567 "nativeSharedClean"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The shared clean pages used by the native heap. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1632695 "nativeSwappedOut"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The dirty native pages that have been swapped out. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1632823 "nativeSwappedOutPss"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The dirty native pages that have been swapped out, proportional. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1632951 "otherPss"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The proportional set size for everything else. "
	end

	attribute 1633079 "otherSwappablePss"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The proportional set size that is swappable for everything else. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1633207 "otherPrivateDirty"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The private dirty pages used by everything else. "
	end

	attribute 1633335 "otherSharedDirty"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The shared dirty pages used by everything else. "
	end

	attribute 1633463 "otherPrivateClean"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The private clean pages used by everything else. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1633591 "otherSharedClean"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The shared clean pages used by everything else. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1633719 "otherSwappedOut"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The dirty pages used by anyting else that have been swapped out. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1633847 "otherSwappedOutPss"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The dirty pages used by anyting else that have been swapped out, proportional. 
 @hide We may want to expose this, eventually. "
	end

	attribute 1633975 "hasSwappedOutPss"
	  public explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Whether the kernel reports proportional swap usage 
 @hide "
	end

	attribute 1634103 "HEAP_UNKNOWN"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1634231 "HEAP_DALVIK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1634359 "HEAP_NATIVE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1634487 "OTHER_DALVIK_OTHER"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1634615 "OTHER_STACK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1634743 "OTHER_CURSOR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1634871 "OTHER_ASHMEM"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1634999 "OTHER_GL_DEV"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1635127 "OTHER_UNKNOWN_DEV"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 5"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1635255 "OTHER_SO"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 6"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1635383 "OTHER_JAR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 7"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1635511 "OTHER_APK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 8"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1635639 "OTHER_TTF"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 9"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1635767 "OTHER_DEX"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 10"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1635895 "OTHER_OAT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 11"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1636023 "OTHER_ART"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 12"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1636151 "OTHER_UNKNOWN_MAP"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 13"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1636279 "OTHER_GRAPHICS"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 14"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1636407 "OTHER_GL"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 15"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1636535 "OTHER_OTHER_MEMTRACK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 16"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1636663 "OTHER_DALVIK_NORMAL"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 17"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1636791 "OTHER_DALVIK_LARGE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 18"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1636919 "OTHER_DALVIK_LINEARALLOC"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 19"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1637047 "OTHER_DALVIK_ACCOUNTING"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 20"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1637175 "OTHER_DALVIK_CODE_CACHE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 21"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1637303 "OTHER_DALVIK_ZYGOTE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 22"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1637431 "OTHER_DALVIK_NON_MOVING"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 23"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1637559 "OTHER_DALVIK_INDIRECT_REFERENCE_TABLE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 24"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1637687 "NUM_OTHER_STATS"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 17"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1637815 "NUM_DVK_STATS"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 8"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1637943 "NUM_CATEGORIES"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 8"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1638071 "offsetPss"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1638199 "offsetSwappablePss"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1638327 "offsetPrivateDirty"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1638455 "offsetSharedDirty"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1638583 "offsetPrivateClean"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1638711 "offsetSharedClean"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 5"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1638839 "offsetSwappedOut"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 6"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1638967 "offsetSwappedOutPss"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 7"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 1639095 "otherStats"
	  private explicit_type "int"
	  multiplicity "[]"
	  init_value " new int[(NUM_OTHER_STATS+NUM_DVK_STATS)*NUM_CATEGORIES]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3751607 "MemoryInfo"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3751735 "getTotalPss"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return total PSS memory usage in kB."
	end

	operation 3751863 "getTotalUss"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@hide Return total PSS memory usage in kB."
	end

	operation 3751991 "getTotalSwappablePss"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return total PSS memory usage in kB mapping a file of one of the following extension:
.so, .jar, .apk, .ttf, .dex, .odex, .oat, .art ."
	end

	operation 3752119 "getTotalPrivateDirty"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return total private dirty memory usage in kB."
	end

	operation 3752247 "getTotalSharedDirty"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return total shared dirty memory usage in kB."
	end

	operation 3752375 "getTotalPrivateClean"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return total shared clean memory usage in kB."
	end

	operation 3752503 "getTotalSharedClean"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return total shared clean memory usage in kB."
	end

	operation 3752631 "getTotalSwappedOut"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return total swapped out memory in kB.
@hide"
	end

	operation 3752759 "getTotalSwappedOutPss"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return total swapped out memory in kB, proportional.
@hide"
	end

	operation 3752887 "getOtherPss"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3753015 "getOtherSwappablePss"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3753143 "getOtherPrivateDirty"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3753271 "getOtherSharedDirty"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3753399 "getOtherPrivateClean"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3753527 "getOtherPrivate"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3753655 "getOtherSharedClean"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3753783 "getOtherSwappedOut"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3753911 "getOtherSwappedOutPss"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3754039 "getOtherLabel"
	  class_operation public return_type class_ref 129591 // String
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3754167 "getMemoryStat"
	  public return_type class_ref 129591 // String
	  nparams 1
	    param inout name "statName" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value of a particular memory statistic or {@code null} if no
such memory statistic exists.

<p>The following table lists the memory statistics that are supported.
Note that memory statistics may be added or removed in a future API level.</p>

<table>
    <thead>
        <tr>
            <th>Memory statistic name</th>
            <th>Meaning</th>
            <th>Example</th>
            <th>Supported (API Levels)</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>summary.java-heap</td>
            <td>The private Java Heap usage in kB. This corresponds to the Java Heap field
                in the App Summary section output by dumpsys meminfo.</td>
            <td>{@code 1442}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>summary.native-heap</td>
            <td>The private Native Heap usage in kB. This corresponds to the Native Heap
                field in the App Summary section output by dumpsys meminfo.</td>
            <td>{@code 1442}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>summary.code</td>
            <td>The memory usage for static code and resources in kB. This corresponds to
                the Code field in the App Summary section output by dumpsys meminfo.</td>
            <td>{@code 1442}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>summary.stack</td>
            <td>The stack usage in kB. This corresponds to the Stack field in the
                App Summary section output by dumpsys meminfo.</td>
            <td>{@code 1442}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>summary.graphics</td>
            <td>The graphics usage in kB. This corresponds to the Graphics field in the
                App Summary section output by dumpsys meminfo.</td>
            <td>{@code 1442}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>summary.private-other</td>
            <td>Other private memory usage in kB. This corresponds to the Private Other
                field output in the App Summary section by dumpsys meminfo.</td>
            <td>{@code 1442}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>summary.system</td>
            <td>Shared and system memory usage in kB. This corresponds to the System
                field output in the App Summary section by dumpsys meminfo.</td>
            <td>{@code 1442}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>summary.total-pss</td>
            <td>Total PPS memory usage in kB.</td>
            <td>{@code 1442}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>summary.total-swap</td>
            <td>Total swap usage in kB.</td>
            <td>{@code 1442}</td>
            <td>23</td>
        </tr>
    </tbody>
</table>"
	end

	operation 3754295 "getMemoryStats"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type}, String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a map of the names/values of the memory statistics
that {@link #getMemoryStat(String)} supports.

@return a map of the names/values of the supported memory statistics."
	end

	operation 3754423 "getSummaryJavaHeap"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pss of Java Heap bytes in KB due to the application.
Notes:
 * OTHER_ART is the boot image. Anything private here is blamed on
   the application, not the system.
 * dalvikPrivateDirty includes private zygote, which means the
   application dirtied something allocated by the zygote. We blame
   the application for that memory, not the system.
 * Does not include OTHER_DALVIK_OTHER, which is considered VM
   Overhead and lumped into Private Other.
 * We don't include dalvikPrivateClean, because there should be no
   such thing as private clean for the Java Heap.
@hide"
	end

	operation 3754551 "getSummaryNativeHeap"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pss of Native Heap bytes in KB due to the application.
Notes:
 * Includes private dirty malloc space.
 * We don't include nativePrivateClean, because there should be no
   such thing as private clean for the Native Heap.
@hide"
	end

	operation 3754679 "getSummaryCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pss of code and other static resource bytes in KB due to
the application.
@hide"
	end

	operation 3754807 "getSummaryStack"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pss in KB of the stack due to the application.
Notes:
 * Includes private dirty stack, which includes both Java and Native
   stack.
 * Does not include private clean stack, because there should be no
   such thing as private clean for the stack.
@hide"
	end

	operation 3754935 "getSummaryGraphics"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pss in KB of graphics due to the application.
Notes:
 * Includes private Gfx, EGL, and GL.
 * Warning: These numbers can be misreported by the graphics drivers.
 * We don't include shared graphics. It may make sense to, because
   shared graphics are likely buffers due to the application
   anyway, but it's simpler to implement to just group all shared
   memory into the System category.
@hide"
	end

	operation 3755063 "getSummaryPrivateOther"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pss in KB due to the application that haven't otherwise been
accounted for.
@hide"
	end

	operation 3755191 "getSummarySystem"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Pss in KB due to the system.
Notes:
 * Includes all shared memory.
@hide"
	end

	operation 3755319 "getSummaryTotalPss"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Total Pss in KB.
@hide"
	end

	operation 3755447 "getSummaryTotalSwap"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Total Swap in KB.
Notes:
 * Some of this memory belongs in other categories, but we don't
   know if the Swap memory is shared or private, so we don't know
   what to blame on the application and what on the system.
   For now, just lump all the Swap in one place.
   For kernels reporting SwapPss {@link #getSummaryTotalSwapPss()}
   will report the application proportional Swap.
@hide"
	end

	operation 3755575 "getSummaryTotalSwapPss"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Total proportional Swap in KB.
Notes:
 * Always 0 if {@link #hasSwappedOutPss} is false.
@hide"
	end

	operation 3755703 "hasSwappedOutPss"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return true if the kernel is reporting pss swapped out...  that is, if
{@link #getSummaryTotalSwapPss()} will return non-0 values.
@hide"
	end

	operation 3755831 "describeContents"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3755959 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "dest" type class_ref 137527 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3756087 "readFromParcel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "source" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 1450935 // CREATOR (<unidirectional association>)
	  relation 1450935 --->
	    a role_name "CREATOR" init_value " new Creator<MemoryInfo>() {
            public MemoryInfo createFromParcel(Parcel source) {
                return new MemoryInfo(source);
            }
            public MemoryInfo[] newArray(int size) {
                return new MemoryInfo[size];
            }
        }" class_relation const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<MemoryInfo> ${name}${value};
"
	      classrelation_ref 1450935 // CREATOR (<unidirectional association>)
	    b parent class_ref 137655 // Creator
	end

	operation 3756215 "MemoryInfo"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "source" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1450423 // TAG (<unidirectional association>)
	relation 1450423 --->
	  a role_name "TAG" init_value " \"Debug\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1450423 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1630007 "TRACE_COUNT_ALLOCS"
	class_attribute const_attribute public explicit_type "int"
	init_value " VMDebug.TRACE_COUNT_ALLOCS"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flags for startMethodTracing().  These can be ORed together.

TRACE_COUNT_ALLOCS adds the results from startAllocCounting to the
trace key file.

@deprecated Accurate counting is a burden on the runtime and may be removed.
"
      end

      attribute 1630135 "SHOW_FULL_DETAIL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flags for printLoadedClasses().  Default behavior is to only show
the class name.
"
      end

      attribute 1630263 "SHOW_CLASSLOADER"
	class_attribute const_attribute public explicit_type "int"
	init_value " (1 << 1)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1630391 "SHOW_INITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " (1 << 2)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1630519 "mWaiting"
	class_attribute volatile private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " set/cleared by waitForDebugger()"
      end

      operation 3751479 "Debug"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1630647 "MIN_DEBUGGER_IDLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1300"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "How long to wait for the debugger to finish sending requests.  I've
seen this hit 800msec on the device while waiting for a response
to travel over USB and get processed, so we take that and add
half a second.

 msec"
      end

      attribute 1630775 "SPIN_DELAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " how long to sleep when polling for activity 
 msec"
      end

      classrelation 1450551 // DEFAULT_TRACE_BODY (<unidirectional association>)
	relation 1450551 --->
	  a role_name "DEFAULT_TRACE_BODY" init_value " \"dmtrace\"" class_relation const_relation private
	    comment "
Default trace file path and file

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1450551 // DEFAULT_TRACE_BODY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1450679 // DEFAULT_TRACE_EXTENSION (<unidirectional association>)
	relation 1450679 --->
	  a role_name "DEFAULT_TRACE_EXTENSION" init_value " \".trace\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1450679 // DEFAULT_TRACE_EXTENSION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3756343 "waitForDebugger"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wait until a debugger attaches.  As soon as the debugger attaches,
this returns, so you will need to place a breakpoint after the
waitForDebugger() call if you want to start tracing immediately."
      end

      operation 3756471 "waitingForDebugger"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns \"true\" if one or more threads is waiting for a debugger
to attach."
      end

      operation 3756599 "isDebuggerConnected"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if a debugger is currently attached."
      end

      operation 3756727 "getVmFeatureList"
	class_operation public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of strings that identify VM features.  This is
used by DDMS to determine what sorts of operations the VM can
perform.

@hide"
      end

      operation 3756855 "changeDebugPort"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Change the JDWP port.

@deprecated no longer needed or useful"
      end

      classrelation 1451063 // SYSFS_QEMU_TRACE_STATE (<unidirectional association>)
	relation 1451063 --->
	  a role_name "SYSFS_QEMU_TRACE_STATE" init_value " \"/sys/qemu_trace/state\"" class_relation const_relation private
	    comment "
This is the pathname to the sysfs file that enables and disables
tracing on the qemu emulator.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1451063 // SYSFS_QEMU_TRACE_STATE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3756983 "startNativeTracing"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable qemu tracing. For this to work requires running everything inside
the qemu emulator; otherwise, this method will have no effect. The trace
file is specified on the command line when the emulator is started. For
example, the following command line <br />
<code>emulator -trace foo</code><br />
will start running the emulator and create a trace file named \"foo\". This
method simply enables writing the trace records to the trace file.

<p>
The main differences between this and {@link #startMethodTracing()} are
that tracing in the qemu emulator traces every cpu instruction of every
process, including kernel code, so we have more complete information,
including all context switches. We can also get more detailed information
such as cache misses. The sequence of calls is determined by
post-processing the instruction trace. The qemu tracing is also done
without modifying the application or perturbing the timing of calls
because no instrumentation is added to the application being traced.
</p>

<p>
One limitation of using this method compared to using
{@link #startMethodTracing()} on the real device is that the emulator
does not model all of the real hardware effects such as memory and
bus contention.  The emulator also has a simple cache model and cannot
capture all the complexities of a real cache.
</p>"
      end

      operation 3757111 "stopNativeTracing"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stop qemu tracing.  See {@link #startNativeTracing()} to start tracing.

<p>Tracing can be started and stopped as many times as desired.  When
the qemu emulator itself is stopped then the buffered trace records
are flushed and written to the trace file.  In fact, it is not necessary
to call this method at all; simply killing qemu is sufficient.  But
starting and stopping a trace is useful for examining a specific
region of code.</p>"
      end

      operation 3757239 "enableEmulatorTraceOutput"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable \"emulator traces\", in which information about the current
method is made available to the \"emulator -trace\" feature.  There
is no corresponding \"disable\" call -- this is intended for use by
the framework when tracing should be turned on and left that way, so
that traces captured with F9/F10 will include the necessary data.

This puts the VM into \"profile\" mode, which has performance
consequences.

To temporarily enable tracing, use {@link #startNativeTracing()}."
      end

      operation 3757367 "startMethodTracing"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start method tracing with default log name and buffer size.
<p>
By default, the trace file is called \"dmtrace.trace\" and it's placed
under your package-specific directory on primary shared/external storage,
as returned by {@link Context#getExternalFilesDir(String)}.
<p>
See <a href=\"{@docRoot}guide/developing/tools/traceview.html\">Traceview:
A Graphical Log Viewer</a> for information about reading trace files.
<p class=\"note\">
When method tracing is enabled, the VM will run more slowly than usual,
so the timings from the trace files should only be considered in relative
terms (e.g. was run #1 faster than run #2). The times for native methods
will not change, so don't try to use this to compare the performance of
interpreted and native implementations of the same method. As an
alternative, consider using sampling-based method tracing via
{@link #startMethodTracingSampling(String, int, int)} or \"native\" tracing
in the emulator via {@link #startNativeTracing()}.
</p>"
      end

      operation 3757495 "startMethodTracing"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "tracePath" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start method tracing, specifying the trace log file path.
<p>
When a relative file path is given, the trace file will be placed under
your package-specific directory on primary shared/external storage, as
returned by {@link Context#getExternalFilesDir(String)}.
<p>
See <a href=\"{@docRoot}guide/developing/tools/traceview.html\">Traceview:
A Graphical Log Viewer</a> for information about reading trace files.
<p class=\"note\">
When method tracing is enabled, the VM will run more slowly than usual,
so the timings from the trace files should only be considered in relative
terms (e.g. was run #1 faster than run #2). The times for native methods
will not change, so don't try to use this to compare the performance of
interpreted and native implementations of the same method. As an
alternative, consider using sampling-based method tracing via
{@link #startMethodTracingSampling(String, int, int)} or \"native\" tracing
in the emulator via {@link #startNativeTracing()}.
</p>

@param tracePath Path to the trace log file to create. If {@code null},
           this will default to \"dmtrace.trace\". If the file already
           exists, it will be truncated. If the path given does not end
           in \".trace\", it will be appended for you."
      end

      operation 3757623 "startMethodTracing"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "tracePath" type class_ref 129591 // String
	  param in name "bufferSize" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start method tracing, specifying the trace log file name and the buffer
size.
<p>
When a relative file path is given, the trace file will be placed under
your package-specific directory on primary shared/external storage, as
returned by {@link Context#getExternalFilesDir(String)}.
<p>
See <a href=\"{@docRoot}guide/developing/tools/traceview.html\">Traceview:
A Graphical Log Viewer</a> for information about reading trace files.
<p class=\"note\">
When method tracing is enabled, the VM will run more slowly than usual,
so the timings from the trace files should only be considered in relative
terms (e.g. was run #1 faster than run #2). The times for native methods
will not change, so don't try to use this to compare the performance of
interpreted and native implementations of the same method. As an
alternative, consider using sampling-based method tracing via
{@link #startMethodTracingSampling(String, int, int)} or \"native\" tracing
in the emulator via {@link #startNativeTracing()}.
</p>

@param tracePath Path to the trace log file to create. If {@code null},
           this will default to \"dmtrace.trace\". If the file already
           exists, it will be truncated. If the path given does not end
           in \".trace\", it will be appended for you.
@param bufferSize The maximum amount of trace data we gather. If not
           given, it defaults to 8MB."
      end

      operation 3757751 "startMethodTracing"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "tracePath" type class_ref 129591 // String
	  param in name "bufferSize" explicit_type "int"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start method tracing, specifying the trace log file name, the buffer
size, and flags.
<p>
When a relative file path is given, the trace file will be placed under
your package-specific directory on primary shared/external storage, as
returned by {@link Context#getExternalFilesDir(String)}.
<p>
See <a href=\"{@docRoot}guide/developing/tools/traceview.html\">Traceview:
A Graphical Log Viewer</a> for information about reading trace files.
<p class=\"note\">
When method tracing is enabled, the VM will run more slowly than usual,
so the timings from the trace files should only be considered in relative
terms (e.g. was run #1 faster than run #2). The times for native methods
will not change, so don't try to use this to compare the performance of
interpreted and native implementations of the same method. As an
alternative, consider using sampling-based method tracing via
{@link #startMethodTracingSampling(String, int, int)} or \"native\" tracing
in the emulator via {@link #startNativeTracing()}.
</p>

@param tracePath Path to the trace log file to create. If {@code null},
           this will default to \"dmtrace.trace\". If the file already
           exists, it will be truncated. If the path given does not end
           in \".trace\", it will be appended for you.
@param bufferSize The maximum amount of trace data we gather. If not
           given, it defaults to 8MB.
@param flags Flags to control method tracing. The only one that is
           currently defined is {@link #TRACE_COUNT_ALLOCS}."
      end

      operation 3757879 "startMethodTracingSampling"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "tracePath" type class_ref 129591 // String
	  param in name "bufferSize" explicit_type "int"
	  param in name "intervalUs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start sampling-based method tracing, specifying the trace log file name,
the buffer size, and the sampling interval.
<p>
When a relative file path is given, the trace file will be placed under
your package-specific directory on primary shared/external storage, as
returned by {@link Context#getExternalFilesDir(String)}.
<p>
See <a href=\"{@docRoot}guide/developing/tools/traceview.html\">Traceview:
A Graphical Log Viewer</a> for information about reading trace files.

@param tracePath Path to the trace log file to create. If {@code null},
           this will default to \"dmtrace.trace\". If the file already
           exists, it will be truncated. If the path given does not end
           in \".trace\", it will be appended for you.
@param bufferSize The maximum amount of trace data we gather. If not
           given, it defaults to 8MB.
@param intervalUs The amount of time between each sample in microseconds."
      end

      operation 3758007 "fixTracePath"
	class_operation private return_type class_ref 129591 // String
	nparams 1
	  param inout name "tracePath" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats name of trace log file for method tracing."
      end

      operation 3758135 "startMethodTracing"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "traceName" type class_ref 129591 // String
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "bufferSize" explicit_type "int"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like startMethodTracing(String, int, int), but taking an already-opened
FileDescriptor in which the trace is written.  The file name is also
supplied simply for logging.  Makes a dup of the file descriptor.

Not exposed in the SDK unless we are really comfortable with supporting
this and find it would be useful.
@hide"
      end

      operation 3758263 "startMethodTracingDdms"
	class_operation public explicit_return_type "void"
	nparams 4
	  param in name "bufferSize" explicit_type "int"
	  param in name "flags" explicit_type "int"
	  param inout name "samplingEnabled" explicit_type "boolean"
	  param in name "intervalUs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts method tracing without a backing file.  When stopMethodTracing
is called, the result is sent directly to DDMS.  (If DDMS is not
attached when tracing ends, the profiling data will be discarded.)

@hide"
      end

      operation 3758391 "getMethodTracingMode"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether method tracing is currently active and what type is
active.

@hide"
      end

      operation 3758519 "stopMethodTracing"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stop method tracing."
      end

      operation 3758647 "threadCpuTimeNanos"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an indication of thread CPU usage.  The value returned
indicates the amount of time that the current thread has spent
executing code or waiting for certain types of I/O.

The time is expressed in nanoseconds, and is only meaningful
when compared to the result from an earlier call.  Note that
nanosecond resolution does not imply nanosecond accuracy.

On system which don't support this operation, the call returns -1."
      end

      operation 3758775 "startAllocCounting"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Start counting the number and aggregate size of memory allocations.

<p>The {@link #startAllocCounting() start} method resets the counts and enables counting.
The {@link #stopAllocCounting() stop} method disables the counting so that the analysis
code doesn't cause additional allocations.  The various <code>get</code> methods return
the specified value. And the various <code>reset</code> methods reset the specified
count.</p>

<p>Counts are kept for the system as a whole (global) and for each thread.
The per-thread counts for threads other than the current thread
are not cleared by the \"reset\" or \"start\" calls.</p>

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3758903 "stopAllocCounting"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Stop counting the number and aggregate size of memory allocations.

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3759031 "getGlobalAllocCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the global count of objects allocated by the runtime between a
{@link #startAllocCounting() start} and {@link #stopAllocCounting() stop}.

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3759159 "resetGlobalAllocCount"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Clears the global count of objects allocated.
@see #getGlobalAllocCount()

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3759287 "getGlobalAllocSize"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the global size, in bytes, of objects allocated by the runtime between a
{@link #startAllocCounting() start} and {@link #stopAllocCounting() stop}.

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3759415 "resetGlobalAllocSize"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Clears the global size of objects allocated.
@see #getGlobalAllocSize()

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3759543 "getGlobalFreedCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the global count of objects freed by the runtime between a
{@link #startAllocCounting() start} and {@link #stopAllocCounting() stop}.

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3759671 "resetGlobalFreedCount"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Clears the global count of objects freed.
@see #getGlobalFreedCount()

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3759799 "getGlobalFreedSize"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the global size, in bytes, of objects freed by the runtime between a
{@link #startAllocCounting() start} and {@link #stopAllocCounting() stop}.

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3759927 "resetGlobalFreedSize"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Clears the global size of objects freed.
@see #getGlobalFreedSize()

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3760055 "getGlobalGcInvocationCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the number of non-concurrent GC invocations between a
{@link #startAllocCounting() start} and {@link #stopAllocCounting() stop}.

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3760183 "resetGlobalGcInvocationCount"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Clears the count of non-concurrent GC invocations.
@see #getGlobalGcInvocationCount()

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3760311 "getGlobalClassInitCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the number of classes successfully initialized (ie those that executed without
throwing an exception) between a {@link #startAllocCounting() start} and
{@link #stopAllocCounting() stop}.

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3760439 "resetGlobalClassInitCount"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Clears the count of classes initialized.
@see #getGlobalClassInitCount()

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3760567 "getGlobalClassInitTime"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the time spent successfully initializing classes between a
{@link #startAllocCounting() start} and {@link #stopAllocCounting() stop}.

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3760695 "resetGlobalClassInitTime"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Clears the count of time spent initializing classes.
@see #getGlobalClassInitTime()

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3760823 "getGlobalExternalAllocCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and always returns 0.
@deprecated This method is now obsolete."
      end

      operation 3760951 "resetGlobalExternalAllocSize"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and has no effect.
@deprecated This method is now obsolete."
      end

      operation 3761079 "resetGlobalExternalAllocCount"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and has no effect.
@deprecated This method is now obsolete."
      end

      operation 3761207 "getGlobalExternalAllocSize"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and always returns 0.
@deprecated This method is now obsolete."
      end

      operation 3761335 "getGlobalExternalFreedCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and always returns 0.
@deprecated This method is now obsolete."
      end

      operation 3761463 "resetGlobalExternalFreedCount"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and has no effect.
@deprecated This method is now obsolete."
      end

      operation 3761591 "getGlobalExternalFreedSize"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and has no effect.
@deprecated This method is now obsolete."
      end

      operation 3761719 "resetGlobalExternalFreedSize"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and has no effect.
@deprecated This method is now obsolete."
      end

      operation 3761847 "getThreadAllocCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the thread-local count of objects allocated by the runtime between a
{@link #startAllocCounting() start} and {@link #stopAllocCounting() stop}.

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3761975 "resetThreadAllocCount"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Clears the thread-local count of objects allocated.
@see #getThreadAllocCount()

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3762103 "getThreadAllocSize"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the thread-local size of objects allocated by the runtime between a
{@link #startAllocCounting() start} and {@link #stopAllocCounting() stop}.
@return The allocated size in bytes.

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3762231 "resetThreadAllocSize"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Clears the thread-local count of objects allocated.
@see #getThreadAllocSize()

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3762359 "getThreadExternalAllocCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and has no effect.
@deprecated This method is now obsolete."
      end

      operation 3762487 "resetThreadExternalAllocCount"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and has no effect.
@deprecated This method is now obsolete."
      end

      operation 3762615 "getThreadExternalAllocSize"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and has no effect.
@deprecated This method is now obsolete."
      end

      operation 3762743 "resetThreadExternalAllocSize"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This method exists for compatibility and has no effect.
@deprecated This method is now obsolete."
      end

      operation 3762871 "getThreadGcInvocationCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the number of thread-local non-concurrent GC invocations between a
{@link #startAllocCounting() start} and {@link #stopAllocCounting() stop}.

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3762999 "resetThreadGcInvocationCount"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Clears the thread-local count of non-concurrent GC invocations.
@see #getThreadGcInvocationCount()

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3763127 "resetAllCounts"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Clears all the global and thread-local memory allocation counters.
@see #startAllocCounting()

@deprecated Accurate counting is a burden on the runtime and may be removed."
      end

      operation 3763255 "getRuntimeStat"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "statName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a particular runtime statistic or {@code null} if no
such runtime statistic exists.

<p>The following table lists the runtime statistics that the runtime supports.
Note runtime statistics may be added or removed in a future API level.</p>

<table>
    <thead>
        <tr>
            <th>Runtime statistic name</th>
            <th>Meaning</th>
            <th>Example</th>
            <th>Supported (API Levels)</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>art.gc.gc-count</td>
            <td>The number of garbage collection runs.</td>
            <td>{@code 164}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>art.gc.gc-time</td>
            <td>The total duration of garbage collection runs in ms.</td>
            <td>{@code 62364}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>art.gc.bytes-allocated</td>
            <td>The total number of bytes that the application allocated.</td>
            <td>{@code 1463948408}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>art.gc.bytes-freed</td>
            <td>The total number of bytes that garbage collection reclaimed.</td>
            <td>{@code 1313493084}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>art.gc.blocking-gc-count</td>
            <td>The number of blocking garbage collection runs.</td>
            <td>{@code 2}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>art.gc.blocking-gc-time</td>
            <td>The total duration of blocking garbage collection runs in ms.</td>
            <td>{@code 804}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>art.gc.gc-count-rate-histogram</td>
            <td>Every 10 seconds, the gc-count-rate is computed as the number of garbage
                collection runs that have occurred over the last 10
                seconds. art.gc.gc-count-rate-histogram is a histogram of the gc-count-rate
                samples taken since the process began. The histogram can be used to identify
                instances of high rates of garbage collection runs. For example, a histogram
                of \"0:34503,1:45350,2:11281,3:8088,4:43,5:8\" shows that most of the time
                there are between 0 and 2 garbage collection runs every 10 seconds, but there
                were 8 distinct 10-second intervals in which 5 garbage collection runs
                occurred.</td>
            <td>{@code 0:34503,1:45350,2:11281,3:8088,4:43,5:8}</td>
            <td>23</td>
        </tr>
        <tr>
            <td>art.gc.blocking-gc-count-rate-histogram</td>
            <td>Every 10 seconds, the blocking-gc-count-rate is computed as the number of
                blocking garbage collection runs that have occurred over the last 10
                seconds. art.gc.blocking-gc-count-rate-histogram is a histogram of the
                blocking-gc-count-rate samples taken since the process began. The histogram
                can be used to identify instances of high rates of blocking garbage
                collection runs. For example, a histogram of \"0:99269,1:1,2:1\" shows that
                most of the time there are zero blocking garbage collection runs every 10
                seconds, but there was one 10-second interval in which one blocking garbage
                collection run occurred, and there was one interval in which two blocking
                garbage collection runs occurred.</td>
            <td>{@code 0:99269,1:1,2:1}</td>
            <td>23</td>
        </tr>
    </tbody>
</table>

@param statName
           the name of the runtime statistic to look up.
@return the value of the specified runtime statistic or {@code null} if the
        runtime statistic doesn't exist."
      end

      operation 3763383 "getRuntimeStats"
	class_operation public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type}, String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a map of the names/values of the runtime statistics
that {@link #getRuntimeStat(String)} supports.

@return a map of the names/values of the supported runtime statistics."
      end

      operation 3763511 "getNativeHeapSize"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the size of the native heap.
@return The size of the native heap in bytes."
      end

      operation 3763639 "getNativeHeapAllocatedSize"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the amount of allocated memory in the native heap.
@return The allocated size in bytes."
      end

      operation 3763767 "getNativeHeapFreeSize"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the amount of free memory in the native heap.
@return The freed size in bytes."
      end

      operation 3763895 "getMemoryInfo"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "memoryInfo" type class_ref 332471 // MemoryInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Retrieves information about this processes memory usages. This information is broken down by
how much is in use by dalvik, the native heap, and everything else.

<p><b>Note:</b> this method directly retrieves memory information for the give process
from low-level data available to it.  It may not be able to retrieve information about
some protected allocations, such as graphics.  If you want to be sure you can see
all information about allocations by the process, use instead
{@link android.app.ActivityManager#getProcessMemoryInfo(int[])}.</p>"
      end

      operation 3764023 "getMemoryInfo"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "pid" explicit_type "int"
	  param inout name "memoryInfo" type class_ref 332471 // MemoryInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Note: currently only works when the requested pid has the same UID
as the caller.
@hide"
      end

      operation 3764151 "getPss"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Retrieves the PSS memory used by the process as given by the
smaps."
      end

      operation 3764279 "getPss"
	class_operation public explicit_return_type "long"
	nparams 3
	  param in name "pid" explicit_type "int"
	  param inout name "outUssSwapPss" explicit_type "long"
	  param inout name "outMemtrack" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws};
"
	
	
	
	comment "Retrieves the PSS memory used by the process as given by the
smaps.  Optionally supply a long array of 2 entries to also
receive the Uss and SwapPss of the process, and another array to also
retrieve the separate memtrack size.
@hide"
      end

      attribute 1639223 "MEMINFO_TOTAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1639351 "MEMINFO_FREE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1639479 "MEMINFO_BUFFERS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1639607 "MEMINFO_CACHED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1639735 "MEMINFO_SHMEM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1639863 "MEMINFO_SLAB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1639991 "MEMINFO_SWAP_TOTAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1640119 "MEMINFO_SWAP_FREE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1640247 "MEMINFO_ZRAM_TOTAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1640375 "MEMINFO_MAPPED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1640503 "MEMINFO_VM_ALLOC_USED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1640631 "MEMINFO_PAGE_TABLES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1640759 "MEMINFO_KERNEL_STACK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1640887 "MEMINFO_COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      operation 3764407 "getMemInfo"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "outSizes" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}${)}${throws};
"
	
	
	
	comment "Retrieves /proc/meminfo.  outSizes is filled with fields
as defined by MEMINFO_* offsets.
@hide"
      end

      operation 3764535 "setAllocationLimit"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "limit" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Establish an object allocation limit in the current thread.
This feature was never enabled in release builds.  The
allocation limits feature was removed in Honeycomb.  This
method exists for compatibility and always returns -1 and has
no effect.

@deprecated This method is now obsolete."
      end

      operation 3764663 "setGlobalAllocationLimit"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "limit" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Establish a global object allocation limit.  This feature was
never enabled in release builds.  The allocation limits feature
was removed in Honeycomb.  This method exists for compatibility
and always returns -1 and has no effect.

@deprecated This method is now obsolete."
      end

      operation 3764791 "printLoadedClasses"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dump a list of all currently loaded class to the log file.

@param flags See constants above."
      end

      operation 3764919 "getLoadedClassCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of loaded classes.
@return the number of loaded classes."
      end

      operation 3765047 "dumpHprofData"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "fileName" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dump \"hprof\" data to the specified file.  This may cause a GC.

@param fileName Full pathname of output file (e.g. \"/sdcard/dump.hprof\").
@throws UnsupportedOperationException if the VM was built without
        HPROF support.
@throws IOException if an error occurs while opening or writing files."
      end

      operation 3765175 "dumpHprofData"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "fileName" type class_ref 129591 // String
	  param inout name "fd" explicit_type "FileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like dumpHprofData(String), but takes an already-opened
FileDescriptor to which the trace is written.  The file name is also
supplied simply for logging.  Makes a dup of the file descriptor.

Primarily for use by the \"am\" shell command.

@hide"
      end

      operation 3765303 "dumpHprofDataDdms"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Collect \"hprof\" and send it to DDMS.  This may cause a GC.

@throws UnsupportedOperationException if the VM was built without
        HPROF support.
@hide"
      end

      operation 3765431 "dumpNativeHeap"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Writes native heap data to the specified file descriptor.

@hide"
      end

      operation 3765559 "countInstancesOfClass"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "cls" type class_ref 132791 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a count of the extant instances of a class.

@hide"
      end

      operation 3765687 "getBinderSentTransactions"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the number of sent transactions from this process.
@return The number of sent transactions or -1 if it could not read t."
      end

      operation 3765815 "getBinderReceivedTransactions"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the number of received transactions from the binder driver.
@return The number of received transactions or -1 if it could not read the stats."
      end

      operation 3765943 "getBinderLocalObjectCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the number of active local Binder objects that exist in the
current process."
      end

      operation 3766071 "getBinderProxyObjectCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the number of references to remote proxy Binder objects that
exist in the current process."
      end

      operation 3766199 "getBinderDeathObjectCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the number of death notification links to Binder objects that
exist in the current process."
      end

      operation 3766327 "cacheRegisterMap"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "classAndMethodDesc" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Primes the register map cache.

Only works for classes in the bootstrap class loader.  Does not
cause classes to be loaded if they're not already present.

The classAndMethodDesc argument is a concatentation of the VM-internal
class descriptor, method name, and method descriptor.  Examples:
    Landroid/os/Looper;.loop:()V
    Landroid/app/ActivityThread;.main:([Ljava/lang/String;)V

@param classAndMethodDesc the method to prepare

@hide"
      end

      operation 3766455 "dumpReferenceTables"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dumps the contents of VM reference tables (e.g. JNI locals and
globals) to the log file.

@hide"
      end

      class 542007 "InstructionCount"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1641015 "NUM_INSTR"
	  class_attribute const_attribute private explicit_type "int"
	  init_value "
            OpcodeInfo.MAXIMUM_PACKED_VALUE + 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1641143 "mCounts"
	  private explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3766583 "InstructionCount"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3766711 "resetAndStart"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Reset counters and ensure counts are running.  Counts may
have already been running.

@return true if counting was started"
	end

	operation 3766839 "collect"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Collect instruction counts.  May or may not stop the
counting process."
	end

	operation 3766967 "globalTotal"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the total number of instructions executed globally (i.e. in
all threads)."
	end

	operation 3767095 "globalMethodInvocations"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the total number of method-invocation instructions
executed globally."
	end
      end

      extra_member 132663 "initialization"
	
	cpp "" ""
	java "  static {
        if (false) {
            final String TAG = \"DebugProperties\";
            final String[] files = { \"/system/debug.prop\", \"/debug.prop\", \"/data/debug.prop\" };
            final TypedProperties tp = new TypedProperties();

            // Read the properties from each of the files, if present.
            for (String file : files) {
                Reader r;
                try {
                    r = new FileReader(file);
                } catch (FileNotFoundException ex) {
                    // It's ok if a file is missing.
                    continue;
                }

                try {
                    tp.load(r);
                } catch (Exception ex) {
                    throw new RuntimeException(\"Problem loading \" + file, ex);
                } finally {
                    try {
                        r.close();
                    } catch (IOException ex) {
                        // Ignore this error.
                    }
                }
            }

            debugProperties = tp.isEmpty() ? null : tp;
        } else {
            debugProperties = null;
        }
    }"
	php ""
	python ""
	idl ""
      end

      operation 3767223 "fieldTypeMatches"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "field" explicit_type "Field"
	  param inout name "cl" type class_ref 132791 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the type of the field matches the specified class.
Handles the case where the class is, e.g., java.lang.Boolean, but
the field is of the primitive \"boolean\" type.  Also handles all of
the java.lang.Number subclasses."
      end

      operation 3767351 "modifyFieldIfSet"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "field" explicit_type "Field"
	  param in name "properties" explicit_type "TypedProperties"
	  param in name "propertyName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Looks up the property that corresponds to the field, and sets the field's value
if the types match."
      end

      operation 3767479 "setFieldsOn"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "cl" type class_ref 132791 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to <code>setFieldsOn(cl, false)</code>.

@see #setFieldsOn(Class, boolean)

@hide"
      end

      operation 3767607 "setFieldsOn"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "cl" type class_ref 132791 // Class
	  param inout name "partial" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reflectively sets static fields of a class based on internal debugging
properties.  This method is a no-op if false is
false.
<p>
<strong>NOTE TO APPLICATION DEVELOPERS</strong>: false will
always be false in release builds.  This API is typically only useful
for platform developers.
</p>
Class setup: define a class whose only fields are non-final, static
primitive types (except for \"char\") or Strings.  In a static block
after the field definitions/initializations, pass the class to
this method, Debug.setFieldsOn(). Example:
<pre>
package com.example;

import android.os.Debug;

public class MyDebugVars {
   public static String s = \"a string\";
   public static String s2 = \"second string\";
   public static String ns = null;
   public static boolean b = false;
   public static int i = 5;
   @Debug.DebugProperty
   public static float f = 0.1f;
   @@Debug.DebugProperty
   public static double d = 0.5d;

   // This MUST appear AFTER all fields are defined and initialized!
   static {
       // Sets all the fields
       Debug.setFieldsOn(MyDebugVars.class);

       // Sets only the fields annotated with @Debug.DebugProperty
       // Debug.setFieldsOn(MyDebugVars.class, true);
   }
}
</pre>
setFieldsOn() may override the value of any field in the class based
on internal properties that are fixed at boot time.
<p>
These properties are only set during platform debugging, and are not
meant to be used as a general-purpose properties store.

{@hide}

@param cl The class to (possibly) modify
@param partial If false, sets all static fields, otherwise, only set
       fields with the {@link android.os.Debug.DebugProperty}
       annotation
@throws IllegalArgumentException if any fields are final or non-static,
        or if the type of the field does not match the type of
        the internal debugging property value."
      end

      class 542263 "DebugProperty"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Target({ ElementType.FIELD })
@Retention(RetentionPolicy.RUNTIME)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 3767735 "dumpService"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "name" type class_ref 129591 // String
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "args" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a debugging dump of a system service by name.

<p>Most services require the caller to hold android.permission.DUMP.

@param name of the service to dump
@param fd to write dump output to (usually an output log file)
@param args to pass to the service's dump method, may be null
@return true if the service was dumped successfully, false if
    the service could not be found or had an error while dumping"
      end

      operation 3767863 "dumpNativeBacktraceToFile"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "pid" explicit_type "int"
	  param inout name "file" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Have the stack traces of the given native process dumped to the
specified file.  Will be appended to the file.
@hide"
      end

      operation 3767991 "getUnreachableMemory"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param in name "limit" explicit_type "int"
	  param inout name "contents" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Get description of unreachable native memory.
@param limit the number of leaks to provide info on, 0 to only get a summary.
@param contents true to include a hex dump of the contents of unreachable memory.
@return the String containing a description of unreachable memory.
@hide "
      end

      operation 3768119 "getCaller"
	class_operation private return_type class_ref 129591 // String
	nparams 2
	  param inout name "callStack" explicit_type "StackTraceElement"
	  param in name "depth" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a String describing the calling method and location at a particular stack depth.
@param callStack the Thread stack
@param depth the depth of stack to return information for.
@return the String describing the caller at that depth."
      end

      operation 3768247 "getCallers"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "depth" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a string consisting of methods and locations at multiple call stack levels.
@param depth the number of levels to return, starting with the immediate caller.
@return a string describing the call stack.
{@hide}"
      end

      operation 3768375 "getCallers"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "depth" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a string consisting of methods and locations at multiple call stack levels.
@param depth the number of levels to return, starting with the immediate caller.
@return a string describing the call stack.
{@hide}"
      end

      operation 3768503 "getCallers"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param in name "depth" explicit_type "int"
	  param inout name "linePrefix" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #getCallers(int)}, but each location is append to the string
as a new line with <var>linePrefix</var> in front of it.
@param depth the number of levels to return, starting with the immediate caller.
@param linePrefix prefix to put in front of each location.
@return a string describing the call stack.
{@hide}"
      end

      operation 3768631 "getCaller"
	class_operation public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return a String describing the immediate caller of the calling method.
{@hide}"
      end
    end

    class 333879 "StrictMode"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>StrictMode is a developer tool which detects things you might be
doing by accident and brings them to your attention so you can fix
them.

<p>StrictMode is most commonly used to catch accidental disk or
network access on the application's main thread, where UI
operations are received and animations take place.  Keeping disk
and network operations off the main thread makes for much smoother,
more responsive applications.  By keeping your application's main thread
responsive, you also prevent
<a href=\"{@docRoot}guide/practices/design/responsiveness.html\">ANR dialogs</a>
from being shown to users.

<p class=\"note\">Note that even though an Android device's disk is
often on flash memory, many devices run a filesystem on top of that
memory with very limited concurrency.  It's often the case that
almost all disk accesses are fast, but may in individual cases be
dramatically slower when certain I/O is happening in the background
from other processes.  If possible, it's best to assume that such
things are not fast.</p>

<p>Example code to enable from early in your
{@link android.app.Application}, {@link android.app.Activity}, or
other application component's
{@link android.app.Application#onCreate} method:

<pre>
public void onCreate() {
    if (DEVELOPER_MODE) {
        StrictMode.setThreadPolicy(new {@link ThreadPolicy.Builder StrictMode.ThreadPolicy.Builder}()
                .detectDiskReads()
                .detectDiskWrites()
                .detectNetwork()   // or .detectAll() for all detectable problems
                .penaltyLog()
                .build());
        StrictMode.setVmPolicy(new {@link VmPolicy.Builder StrictMode.VmPolicy.Builder}()
                .detectLeakedSqlLiteObjects()
                .detectLeakedClosableObjects()
                .penaltyLog()
                .penaltyDeath()
                .build());
    }
    super.onCreate();
}
</pre>

<p>You can decide what should happen when a violation is detected.
For example, using {@link ThreadPolicy.Builder#penaltyLog} you can
watch the output of <code>adb logcat</code> while you use your
application to see the violations as they happen.

<p>If you find violations that you feel are problematic, there are
a variety of tools to help solve them: threads, {@link android.os.Handler},
{@link android.os.AsyncTask}, {@link android.app.IntentService}, etc.
But don't feel compelled to fix everything that StrictMode finds.  In particular,
many cases of disk access are often necessary during the normal activity lifecycle.  Use
StrictMode to find things you did by accident.  Network requests on the UI thread
are almost always a problem, though.

<p class=\"note\">StrictMode is not a security mechanism and is not
guaranteed to find all disk or network accesses.  While it does
propagate its state across process boundaries when doing
{@link android.os.Binder} calls, it's still ultimately a best
effort mechanism.  Notably, disk or network access from JNI calls
won't necessarily trigger it.  Future versions of Android may catch
more (or fewer) operations, so you should never leave StrictMode
enabled in applications distributed on Google Play."
      class 334007 "ViolationInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1478327 // message (<unidirectional association>)
	  relation 1478327 --->
	    a role_name "message" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1478327 // message (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1478455 // crashInfo (<unidirectional association>)
	  relation 1478455 --->
	    a role_name "crashInfo" const_relation public
	      comment "
Stack and other stuff info.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1478455 // crashInfo (<unidirectional association>)
	    b parent class_ref 333751 // CrashInfo
	end

	attribute 1686327 "policy"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The strict mode policy mask at the time of violation.
"
	end

	attribute 1686455 "durationMillis"
	  public explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The wall time duration of the violation, when known.  -1 when
not known.
"
	end

	attribute 1686583 "numAnimationsRunning"
	  public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The number of animations currently running.
"
	end

	classrelation 1478583 // tags (<unidirectional association>)
	  relation 1478583 --->
	    a role_name "tags" multiplicity "[]" public
	      comment "
List of tags from active Span instances during this
violation, or null for none.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1478583 // tags (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1686711 "violationNumThisLoop"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Which violation number this was (1-based) since the last Looper loop,
from the perspective of the root caller (if it crossed any processes
via Binder calls).  The value is 0 if the root caller wasn't on a Looper
thread.
"
	end

	attribute 1686839 "violationUptimeMillis"
	  public explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The time (in terms of SystemClock.uptimeMillis()) that the
violation occurred.
"
	end

	classrelation 1478711 // broadcastIntentAction (<unidirectional association>)
	  relation 1478711 --->
	    a role_name "broadcastIntentAction" public
	      comment "
The action of the Intent being broadcast to somebody's onReceive
on this thread right now, or null.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1478711 // broadcastIntentAction (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1686967 "numInstances"
	  public explicit_type "long"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "If this is a instance count violation, the number of instances in memory,
else -1.
"
	end

	operation 3889975 "ViolationInfo"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an uninitialized instance of ViolationInfo"
	end

	operation 3890103 "ViolationInfo"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "tr" explicit_type "Throwable"
	    param in name "policy" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3890231 "ViolationInfo"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "message" type class_ref 129591 // String
	    param inout name "tr" explicit_type "Throwable"
	    param in name "policy" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an instance of ViolationInfo initialized from an exception."
	end

	operation 3890359 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3890487 "ViolationInfo"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "in" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an instance of ViolationInfo initialized from a Parcel."
	end

	operation 3890615 "ViolationInfo"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "in" type class_ref 137527 // Parcel
	    param inout name "unsetGatheringBit" explicit_type "boolean"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an instance of ViolationInfo initialized from a Parcel.

@param unsetGatheringBit if true, the caller is the root caller
  and the gathering penalty should be removed."
	end

	operation 3890743 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "dest" type class_ref 137527 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Save a ViolationInfo instance to a parcel."
	end

	operation 3890871 "dump"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "pw" type class_ref 287415 // Printer
	    param inout name "prefix" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Dump a ViolationInfo instance to a Printer."
	end
      end

      class 370743 "Span"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1477047 // mName (<unidirectional association>)
	  relation 1477047 --->
	    a role_name "mName" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1477047 // mName (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1685943 "mCreateMillis"
	  private explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1477175 // mNext (<unidirectional association>)
	  relation 1477175 --->
	    a role_name "mNext" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1477175 // mNext (<unidirectional association>)
	    b parent class_ref 370743 // Span
	end

	classrelation 1477303 // mPrev (<unidirectional association>)
	  relation 1477303 --->
	    a role_name "mPrev" private
	      comment " not used when in freeList, only active"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1477303 // mPrev (<unidirectional association>)
	    b parent class_ref 370743 // Span
	end

	classrelation 1477431 // mContainerState (<unidirectional association>)
	  relation 1477431 --->
	    a role_name "mContainerState" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1477431 // mContainerState (<unidirectional association>)
	    b parent class_ref 549943 // ThreadSpanState
	end

	operation 3888567 "Span"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "threadState" type class_ref 549943 // ThreadSpanState
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3888695 "Span"
	  protected explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Empty constructor for the NO_OP_SPAN"
	end

	operation 3888823 "finish"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "To be called when the critical span is complete (i.e. the
animation is done animating).  This can be called on any
thread (even a different one from where the animation was
taking place), but that's only a defensive implementation
measure.  It really makes no sense for you to call this on
thread other than that where you created it.

@hide"
	end
      end

      classrelation 1474103 // TAG (<unidirectional association>)
	relation 1474103 --->
	  a role_name "TAG" init_value " \"StrictMode\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1474103 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1679799 "LOG_V"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " Log.isLoggable(TAG, Log.VERBOSE)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1679927 "IS_USER_BUILD"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " \"user\".equals(Build.TYPE)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1680055 "IS_ENG_BUILD"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " \"eng\".equals(Build.TYPE)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1474231 // DISABLE_PROPERTY (<unidirectional association>)
	relation 1474231 --->
	  a role_name "DISABLE_PROPERTY" init_value " \"persist.sys.strictmode.disable\"" class_relation const_relation public
	    comment "
Boolean system property to disable strict mode checks outright.
Set this to 'true' to force disable; 'false' has no effect on other
enable/disable policy.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1474231 // DISABLE_PROPERTY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1474359 // VISUAL_PROPERTY (<unidirectional association>)
	relation 1474359 --->
	  a role_name "VISUAL_PROPERTY" init_value " \"persist.sys.strictmode.visual\"" class_relation const_relation public
	    comment "
The boolean system property to control screen flashes on violations.

@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1474359 // VISUAL_PROPERTY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1474487 // CLEARTEXT_PROPERTY (<unidirectional association>)
	relation 1474487 --->
	  a role_name "CLEARTEXT_PROPERTY" init_value " \"persist.sys.strictmode.clear\"" class_relation const_relation private
	    comment "
Temporary property used to include {@link #DETECT_VM_CLEARTEXT_NETWORK}
in {@link VmPolicy.Builder#detectAll()}. Apps can still always opt-into
detection using {@link VmPolicy.Builder#detectCleartextNetwork()}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1474487 // CLEARTEXT_PROPERTY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1680183 "MIN_LOG_INTERVAL_MS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Only log a duplicate stack trace to the logs every second."
      end

      attribute 1680311 "MIN_DIALOG_INTERVAL_MS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 30000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Only show an annoying dialog at most every 30 seconds"
      end

      attribute 1680439 "MAX_SPAN_TAGS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " How many Span tags (e.g. animations) to report."
      end

      attribute 1680567 "MAX_OFFENSES_PER_LOOP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " How many offending stacks to keep track of (and time) per loop
 of the Looper."
      end

      attribute 1680695 "DETECT_DISK_WRITE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Byte 1: Thread-policy

@hide

 for ThreadPolicy"
      end

      attribute 1680823 "DETECT_DISK_READ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide

 for ThreadPolicy"
      end

      attribute 1680951 "DETECT_NETWORK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide

 for ThreadPolicy"
      end

      attribute 1681079 "DETECT_CUSTOM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "For StrictMode.noteSlowCall()

@hide

 for ThreadPolicy"
      end

      attribute 1681207 "DETECT_RESOURCE_MISMATCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "For StrictMode.noteResourceMismatch()

@hide

 for ThreadPolicy"
      end

      attribute 1681335 "ALL_THREAD_DETECT_BITS"
	class_attribute const_attribute private explicit_type "int"
	init_value "
            DETECT_DISK_WRITE | DETECT_DISK_READ | DETECT_NETWORK | DETECT_CUSTOM |
            DETECT_RESOURCE_MISMATCH"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1681463 "DETECT_VM_CURSOR_LEAKS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01 << 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Byte 2: Process-policy

Note, a \"VM_\" bit, not thread.
@hide

 for VmPolicy"
      end

      attribute 1681591 "DETECT_VM_CLOSABLE_LEAKS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02 << 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Note, a \"VM_\" bit, not thread.
@hide

 for VmPolicy"
      end

      attribute 1681719 "DETECT_VM_ACTIVITY_LEAKS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04 << 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Note, a \"VM_\" bit, not thread.
@hide

 for VmPolicy"
      end

      attribute 1681847 "DETECT_VM_INSTANCE_LEAKS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x08 << 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide

 for VmPolicy"
      end

      attribute 1681975 "DETECT_VM_REGISTRATION_LEAKS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10 << 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide

 for VmPolicy"
      end

      attribute 1682103 "DETECT_VM_FILE_URI_EXPOSURE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x20 << 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide

 for VmPolicy"
      end

      attribute 1682231 "DETECT_VM_CLEARTEXT_NETWORK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x40 << 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide

 for VmPolicy"
      end

      attribute 1682359 "ALL_VM_DETECT_BITS"
	class_attribute const_attribute private explicit_type "int"
	init_value "
            DETECT_VM_CURSOR_LEAKS | DETECT_VM_CLOSABLE_LEAKS |
            DETECT_VM_ACTIVITY_LEAKS | DETECT_VM_INSTANCE_LEAKS |
            DETECT_VM_REGISTRATION_LEAKS | DETECT_VM_FILE_URI_EXPOSURE |
            DETECT_VM_CLEARTEXT_NETWORK"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1682487 "PENALTY_LOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01 << 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Byte 3: Penalty
 {@hide} 
 normal android.util.Log"
      end

      attribute 1682615 "PENALTY_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02 << 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      attribute 1682743 "PENALTY_DEATH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04 << 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      attribute 1682871 "PENALTY_FLASH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10 << 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      attribute 1682999 "PENALTY_DROPBOX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20 << 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      attribute 1683127 "PENALTY_GATHER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40 << 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Non-public penalty mode which overrides all the other penalty
bits and signals that we're in a Binder call and we should
ignore the other penalty bits and instead serialize back all
our offending stack traces to the caller to ultimately handle
in the originating process.

This must be kept in sync with the constant in libs/binder/Parcel.cpp

@hide
"
      end

      attribute 1683255 "PENALTY_DEATH_ON_NETWORK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01 << 24"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Byte 4: Special cases

Death when network traffic is detected on main thread.

@hide
"
      end

      attribute 1683383 "PENALTY_DEATH_ON_CLEARTEXT_NETWORK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02 << 24"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Death when cleartext network traffic is detected.

@hide
"
      end

      attribute 1683511 "PENALTY_DEATH_ON_FILE_URI_EXPOSURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04 << 24"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Death when file exposure is detected.

@hide
"
      end

      attribute 1683639 "THREAD_PENALTY_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value "
            PENALTY_LOG | PENALTY_DIALOG | PENALTY_DEATH | PENALTY_DROPBOX | PENALTY_GATHER |
            PENALTY_DEATH_ON_NETWORK | PENALTY_FLASH"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mask of all the penalty bits valid for thread policies.
"
      end

      attribute 1683767 "VM_PENALTY_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " PENALTY_LOG | PENALTY_DEATH | PENALTY_DROPBOX
            | PENALTY_DEATH_ON_CLEARTEXT_NETWORK | PENALTY_DEATH_ON_FILE_URI_EXPOSURE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mask of all the penalty bits valid for VM policies.
"
      end

      attribute 1683895 "NETWORK_POLICY_ACCEPT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      attribute 1684023 "NETWORK_POLICY_LOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      attribute 1684151 "NETWORK_POLICY_REJECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      classrelation 1474615 // EMPTY_CLASS_LIMIT_MAP (<unidirectional association>)
	relation 1474615 --->
	  stereotype "HashMap"
	  a role_name "EMPTY_CLASS_LIMIT_MAP" init_value " new HashMap<Class, Integer>()" class_relation const_relation private
	    comment " TODO: wrap in some ImmutableHashMap thing.
 Note: must be before static initialization of sVmPolicy."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Integer> ${name}${value};
"
	    classrelation_ref 1474615 // EMPTY_CLASS_LIMIT_MAP (<unidirectional association>)
	  b parent class_ref 132791 // Class
      end

      attribute 1684279 "sVmPolicyMask"
	class_attribute volatile private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The current VmPolicy in effect.

TODO: these are redundant (mask is in VmPolicy).  Should remove sVmPolicyMask.
"
      end

      class 547895 "VmPolicy"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1474999 // LAX (<unidirectional association>)
	  relation 1474999 --->
	    a role_name "LAX" init_value " new VmPolicy(0, EMPTY_CLASS_LIMIT_MAP)" class_relation const_relation public
	      comment "
The default, lax policy which doesn't catch anything.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1474999 // LAX (<unidirectional association>)
	    b parent class_ref 547895 // VmPolicy
	end

	attribute 1684791 "mask"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1475127 // classInstanceLimit (<unidirectional association>)
	  relation 1475127 --->
	    stereotype "HashMap"
	    a role_name "classInstanceLimit" const_relation package
	      comment " Map from class to max number of allowed instances in memory."
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Integer> ${name}${value};
"
	      classrelation_ref 1475127 // classInstanceLimit (<unidirectional association>)
	    b parent class_ref 132791 // Class
	end

	operation 3878583 "VmPolicy"
	  private explicit_return_type ""
	  nparams 2
	    param in name "mask" explicit_type "int"
	    param inout name "classInstanceLimit" explicit_type "HashMap<Class, Integer>"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3878711 "toString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 548279 "Builder"
	  visibility public 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 1684919 "mMask"
	    private explicit_type "int"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  classrelation 1475255 // mClassInstanceLimit (<unidirectional association>)
	    relation 1475255 --->
	      stereotype "HashMap"
	      a role_name "mClassInstanceLimit" private
		comment " null until needed"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Integer> ${name}${value};
"
		classrelation_ref 1475255 // mClassInstanceLimit (<unidirectional association>)
	      b parent class_ref 132791 // Class
	  end

	  attribute 1685047 "mClassInstanceLimitNeedCow"
	    private explicit_type "boolean"
	    init_value " false"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    comment " need copy-on-write"
	  end

	  operation 3878839 "Builder"
	    public explicit_return_type ""
	    nparams 0
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 3878967 "Builder"
	    public explicit_return_type ""
	    nparams 1
	      param inout name "base" type class_ref 547895 // VmPolicy
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Build upon an existing VmPolicy."
	  end

	  operation 3879095 "setClassInstanceLimit"
	    public return_type class_ref 548279 // Builder
	    nparams 2
	      param inout name "klass" type class_ref 132791 // Class
	      param in name "instanceLimit" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Set an upper bound on how many instances of a class can be in memory
at once.  Helps to prevent object leaks."
	  end

	  operation 3879223 "detectActivityLeaks"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Detect leaks of {@link android.app.Activity} subclasses."
	  end

	  operation 3879351 "detectAll"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Detect everything that's potentially suspect.

<p>In the Honeycomb release this includes leaks of
SQLite cursors, Activities, and other closable objects
but will likely expand in future releases."
	  end

	  operation 3879479 "detectLeakedSqlLiteObjects"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Detect when an
{@link android.database.sqlite.SQLiteCursor} or other
SQLite object is finalized without having been closed.

<p>You always want to explicitly close your SQLite
cursors to avoid unnecessary database contention and
temporary memory leaks."
	  end

	  operation 3879607 "detectLeakedClosableObjects"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Detect when an {@link java.io.Closeable} or other
object with a explict termination method is finalized
without having been closed.

<p>You always want to explicitly close such objects to
avoid unnecessary resources leaks."
	  end

	  operation 3879735 "detectLeakedRegistrationObjects"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Detect when a {@link BroadcastReceiver} or
{@link ServiceConnection} is leaked during {@link Context}
teardown."
	  end

	  operation 3879863 "detectFileUriExposure"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Detect when this application exposes a {@code file://}
{@link android.net.Uri} to another app.
<p>
This exposure is discouraged since the receiving app may not have
access to the shared path. For example, the receiving app may not
have requested the
{@link android.Manifest.permission#READ_EXTERNAL_STORAGE} runtime
permission, or the platform may be sharing the
{@link android.net.Uri} across user profile boundaries.
<p>
Instead, apps should use {@code content://} Uris so the platform
can extend temporary permission for the receiving app to access
the resource.

@see android.support.v4.content.FileProvider
@see Intent#FLAG_GRANT_READ_URI_PERMISSION"
	  end

	  operation 3879991 "detectCleartextNetwork"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Detect any network traffic from the calling app which is not
wrapped in SSL/TLS. This can help you detect places that your app
is inadvertently sending cleartext data across the network.
<p>
Using {@link #penaltyDeath()} or
{@link #penaltyDeathOnCleartextNetwork()} will block further
traffic on that socket to prevent accidental data leakage, in
addition to crashing your process.
<p>
Using {@link #penaltyDropBox()} will log the raw contents of the
packet that triggered the violation.
<p>
This inspects both IPv4/IPv6 and TCP/UDP network traffic, but it
may be subject to false positives, such as when STARTTLS
protocols or HTTP proxies are used."
	  end

	  operation 3880119 "penaltyDeath"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Crashes the whole process on violation. This penalty runs at the
end of all enabled penalties so you'll still get your logging or
other violations before the process dies."
	  end

	  operation 3880247 "penaltyDeathOnCleartextNetwork"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Crashes the whole process when cleartext network traffic is
detected.

@see #detectCleartextNetwork()"
	  end

	  operation 3880375 "penaltyDeathOnFileUriExposure"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Crashes the whole process when a {@code file://}
{@link android.net.Uri} is exposed beyond this app.

@see #detectFileUriExposure()"
	  end

	  operation 3880503 "penaltyLog"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Log detected violations to the system log."
	  end

	  operation 3880631 "penaltyDropBox"
	    public return_type class_ref 548279 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Enable detected violations log a stacktrace and timing data
to the {@link android.os.DropBoxManager DropBox} on policy
violation.  Intended mostly for platform integrators doing
beta user field data collection."
	  end

	  operation 3880759 "enable"
	    private return_type class_ref 548279 // Builder
	    nparams 1
	      param in name "bit" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 3880887 "build"
	    public return_type class_ref 547895 // VmPolicy
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Construct the VmPolicy instance.

<p>Note: if no penalties are enabled before calling
<code>build</code>, {@link #penaltyLog} is implicitly
set."
	  end
	end
      end

      classrelation 1474743 // sVmPolicy (<unidirectional association>)
	relation 1474743 --->
	  a role_name "sVmPolicy" init_value " VmPolicy.LAX" class_relation volatile private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1474743 // sVmPolicy (<unidirectional association>)
	  b parent class_ref 547895 // VmPolicy
      end

      attribute 1684407 "sDropboxCallsInFlight"
	class_attribute const_attribute private explicit_type "AtomicInteger"
	init_value " new AtomicInteger(0)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of threads trying to do an async dropbox write.
Just to limit ourselves out of paranoia.
"
      end

      operation 3875255 "StrictMode"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 548023 "ThreadPolicy"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1474871 // LAX (<unidirectional association>)
	  relation 1474871 --->
	    a role_name "LAX" init_value " new ThreadPolicy(0)" class_relation const_relation public
	      comment "
The default, lax policy which doesn't catch anything.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1474871 // LAX (<unidirectional association>)
	    b parent class_ref 548023 // ThreadPolicy
	end

	attribute 1684535 "mask"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3875383 "ThreadPolicy"
	  private explicit_return_type ""
	  nparams 1
	    param in name "mask" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3875511 "toString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 548151 "Builder"
	  visibility public 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 1684663 "mMask"
	    private explicit_type "int"
	    init_value " 0"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 3875639 "Builder"
	    public explicit_return_type ""
	    nparams 0
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Create a Builder that detects nothing and has no
violations.  (but note that {@link #build} will default
to enabling {@link #penaltyLog} if no other penalties
are specified)"
	  end

	  operation 3875767 "Builder"
	    public explicit_return_type ""
	    nparams 1
	      param inout name "policy" type class_ref 548023 // ThreadPolicy
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Initialize a Builder from an existing ThreadPolicy."
	  end

	  operation 3875895 "detectAll"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Detect everything that's potentially suspect.

<p>As of the Gingerbread release this includes network and
disk operations but will likely expand in future releases."
	  end

	  operation 3876023 "permitAll"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Disable the detection of everything."
	  end

	  operation 3876151 "detectNetwork"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Enable detection of network operations."
	  end

	  operation 3876279 "permitNetwork"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Disable detection of network operations."
	  end

	  operation 3876407 "detectDiskReads"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Enable detection of disk reads."
	  end

	  operation 3876535 "permitDiskReads"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Disable detection of disk reads."
	  end

	  operation 3876663 "detectCustomSlowCalls"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Enable detection of slow calls."
	  end

	  operation 3876791 "permitCustomSlowCalls"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Disable detection of slow calls."
	  end

	  operation 3876919 "permitResourceMismatches"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Disable detection of mismatches between defined resource types
and getter calls."
	  end

	  operation 3877047 "detectResourceMismatches"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Enables detection of mismatches between defined resource types
and getter calls.
<p>
This helps detect accidental type mismatches and potentially
expensive type conversions when obtaining typed resources.
<p>
For example, a strict mode violation would be thrown when
calling {@link android.content.res.TypedArray#getInt(int, int)}
on an index that contains a String-type resource. If the string
value can be parsed as an integer, this method call will return
a value without crashing; however, the developer should format
the resource as an integer to avoid unnecessary type conversion."
	  end

	  operation 3877175 "detectDiskWrites"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Enable detection of disk writes."
	  end

	  operation 3877303 "permitDiskWrites"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Disable detection of disk writes."
	  end

	  operation 3877431 "penaltyDialog"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Show an annoying dialog to the developer on detected
violations, rate-limited to be only a little annoying."
	  end

	  operation 3877559 "penaltyDeath"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Crash the whole process on violation.  This penalty runs at
the end of all enabled penalties so you'll still get
see logging or other violations before the process dies.

<p>Unlike {@link #penaltyDeathOnNetwork}, this applies
to disk reads, disk writes, and network usage if their
corresponding detect flags are set."
	  end

	  operation 3877687 "penaltyDeathOnNetwork"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Crash the whole process on any network usage.  Unlike
{@link #penaltyDeath}, this penalty runs
<em>before</em> anything else.  You must still have
called {@link #detectNetwork} to enable this.

<p>In the Honeycomb or later SDKs, this is on by default."
	  end

	  operation 3877815 "penaltyFlashScreen"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Flash the screen during a violation."
	  end

	  operation 3877943 "penaltyLog"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Log detected violations to the system log."
	  end

	  operation 3878071 "penaltyDropBox"
	    public return_type class_ref 548151 // Builder
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Enable detected violations log a stacktrace and timing data
to the {@link android.os.DropBoxManager DropBox} on policy
violation.  Intended mostly for platform integrators doing
beta user field data collection."
	  end

	  operation 3878199 "enable"
	    private return_type class_ref 548151 // Builder
	    nparams 1
	      param in name "bit" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 3878327 "disable"
	    private return_type class_ref 548151 // Builder
	    nparams 1
	      param in name "bit" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 3878455 "build"
	    public return_type class_ref 548023 // ThreadPolicy
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Construct the ThreadPolicy instance.

<p>Note: if no penalties are enabled before calling
<code>build</code>, {@link #penaltyLog} is implicitly
set."
	  end
	end
      end

      attribute 1685175 "gatheredViolations"
	class_attribute const_attribute private explicit_type "ArrayList<ViolationInfo>"
	init_value "
            new ThreadLocal<ArrayList<ViolationInfo>>() {
        @Override protected ArrayList<ViolationInfo> initialValue() {
            // Starts null to avoid unnecessary allocations when
            // checking whether there are any violations or not in
            // hasGatheredViolations() below.
            return null;
        }
    }"
	stereotype "ThreadLocal"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Log of strict mode violation stack traces that have occurred
during a Binder call, to be serialized back later to the caller
via Parcel.writeNoException() (amusingly) where the caller can
choose how to react.
"
      end

      operation 3881015 "setThreadPolicy"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "policy" type class_ref 548023 // ThreadPolicy
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the policy for what actions on the current thread should
be detected, as well as the penalty if such actions occur.

<p>Internally this sets a thread-local variable which is
propagated across cross-process IPC calls, meaning you can
catch violations when a system service or another process
accesses the disk or network on your behalf.

@param policy the policy to put into place"
      end

      operation 3881143 "setThreadPolicyMask"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "policyMask" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3881271 "setBlockGuardPolicy"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "policyMask" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets the policy in Dalvik/libcore (BlockGuard)"
      end

      operation 3881399 "setCloseGuardEnabled"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets up CloseGuard in Dalvik/libcore"
      end

      class 548407 "StrictModeViolation"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1475383 // <generalisation>
	  relation 1475383 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1475383 // <generalisation>
	    b parent class_ref 548535 // BlockGuardPolicyException
	end

	operation 3881527 "StrictModeViolation"
	  public explicit_return_type ""
	  nparams 3
	    param in name "policyState" explicit_type "int"
	    param in name "policyViolated" explicit_type "int"
	    param inout name "message" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 548663 "StrictModeNetworkViolation"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1475511 // <generalisation>
	  relation 1475511 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1475511 // <generalisation>
	    b parent class_ref 548407 // StrictModeViolation
	end

	operation 3881655 "StrictModeNetworkViolation"
	  public explicit_return_type ""
	  nparams 1
	    param in name "policyMask" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 548791 "StrictModeDiskReadViolation"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1475639 // <generalisation>
	  relation 1475639 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1475639 // <generalisation>
	    b parent class_ref 548407 // StrictModeViolation
	end

	operation 3881783 "StrictModeDiskReadViolation"
	  public explicit_return_type ""
	  nparams 1
	    param in name "policyMask" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 548919 "StrictModeDiskWriteViolation"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1475767 // <generalisation>
	  relation 1475767 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1475767 // <generalisation>
	    b parent class_ref 548407 // StrictModeViolation
	end

	operation 3881911 "StrictModeDiskWriteViolation"
	  public explicit_return_type ""
	  nparams 1
	    param in name "policyMask" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 549047 "StrictModeCustomViolation"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1475895 // <generalisation>
	  relation 1475895 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1475895 // <generalisation>
	    b parent class_ref 548407 // StrictModeViolation
	end

	operation 3882039 "StrictModeCustomViolation"
	  public explicit_return_type ""
	  nparams 2
	    param in name "policyMask" explicit_type "int"
	    param inout name "name" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 549175 "StrictModeResourceMismatchViolation"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1476023 // <generalisation>
	  relation 1476023 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1476023 // <generalisation>
	    b parent class_ref 548407 // StrictModeViolation
	end

	operation 3882167 "StrictModeResourceMismatchViolation"
	  public explicit_return_type ""
	  nparams 2
	    param in name "policyMask" explicit_type "int"
	    param inout name "tag" type class_ref 132663 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 3882295 "getThreadPolicyMask"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bitmask of the current thread's policy.

@return the bitmask of all the DETECT_* and PENALTY_* bits currently enabled

@hide"
      end

      operation 3882423 "getThreadPolicy"
	class_operation public return_type class_ref 548023 // ThreadPolicy
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current thread's policy."
      end

      operation 3882551 "allowThreadDiskWrites"
	class_operation public return_type class_ref 548023 // ThreadPolicy
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A convenience wrapper that takes the current
{@link ThreadPolicy} from {@link #getThreadPolicy}, modifies it
to permit both disk reads &amp; writes, and sets the new policy
with {@link #setThreadPolicy}, returning the old policy so you
can restore it at the end of a block.

@return the old policy, to be passed to {@link #setThreadPolicy} to
        restore the policy at the end of a block"
      end

      operation 3882679 "allowThreadDiskReads"
	class_operation public return_type class_ref 548023 // ThreadPolicy
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A convenience wrapper that takes the current
{@link ThreadPolicy} from {@link #getThreadPolicy}, modifies it
to permit disk reads, and sets the new policy
with {@link #setThreadPolicy}, returning the old policy so you
can restore it at the end of a block.

@return the old policy, to be passed to setThreadPolicy to
        restore the policy."
      end

      operation 3882807 "amTheSystemServerProcess"
	class_operation private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " We don't want to flash the screen red in the system server
 process, nor do we want to modify all the call sites of
 conditionallyEnableDebugLogging() in the system server,
 so instead we use this to determine if we are the system server."
      end

      operation 3882935 "conditionallyEnableDebugLogging"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable DropBox logging for debug phone builds.

@hide"
      end

      operation 3883063 "enableDeathOnNetwork"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by the framework to make network usage on the main
thread a fatal error.

@hide"
      end

      operation 3883191 "enableDeathOnFileUriExposure"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by the framework to make file usage a fatal error.

@hide"
      end

      operation 3883319 "disableDeathOnFileUriExposure"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by lame internal apps that haven't done the hard work to get
themselves off file:// Uris yet.

@hide"
      end

      operation 3883447 "parsePolicyFromMessage"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the BlockGuard policy mask out from the Exception's
getMessage() String value.  Kinda gross, but least
invasive.  :/

Input is of the following forms:
    \"policy=137 violation=64\"
    \"policy=137 violation=64 msg=Arbitrary text\"

Returns 0 on failure, which is a valid policy, but not a
valid policy during a violation (else there must've been
some policy in effect to violate)."
      end

      operation 3883575 "parseViolationFromMessage"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like parsePolicyFromMessage(), but returns the violation."
      end

      attribute 1685303 "violationsBeingTimed"
	class_attribute const_attribute private explicit_type "ArrayList<ViolationInfo>"
	init_value "
            new ThreadLocal<ArrayList<ViolationInfo>>() {
        @Override protected ArrayList<ViolationInfo> initialValue() {
            return new ArrayList<ViolationInfo>();
        }
    }"
	stereotype "ThreadLocal"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1476151 // threadHandler (<unidirectional association>)
	relation 1476151 --->
	  stereotype "ThreadLocal"
	  a role_name "threadHandler" init_value " new ThreadLocal<Handler>() {
        @Override protected Handler initialValue() {
            return new Handler();
        }
    }" class_relation const_relation private
	    comment " Note: only access this once verifying the thread has a Looper."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1476151 // threadHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      class 549303 "AndroidBlockGuardPolicy"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1476407 // <realization>
	  relation 1476407 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1476407 // <realization>
	    b parent class_ref 549431 // Policy
	end

	attribute 1685431 "mPolicyMask"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1476535 // mLastViolationTime (<unidirectional association>)
	  relation 1476535 --->
	    a role_name "mLastViolationTime" private
	      comment " Map from violation stacktrace hashcode -> uptimeMillis of
 last violation.  No locking needed, as this is only
 accessed by the same thread.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Integer, Long> ${name}${value};
"
	      classrelation_ref 1476535 // mLastViolationTime (<unidirectional association>)
	    b parent class_ref 156343 // ArrayMap
	end

	operation 3883831 "AndroidBlockGuardPolicy"
	  public explicit_return_type ""
	  nparams 1
	    param in name "policyMask" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3883959 "toString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3884087 "getPolicyMask"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Part of BlockGuard.Policy interface:"
	end

	operation 3884215 "onWriteToDisk"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Part of BlockGuard.Policy interface:"
	end

	operation 3884343 "onCustomSlowCall"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "name" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Not part of BlockGuard.Policy; just part of StrictMode:"
	end

	operation 3884471 "onResourceMismatch"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "tag" type class_ref 132663 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Not part of BlockGuard.Policy; just part of StrictMode:"
	end

	operation 3884599 "onReadFromDisk"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Part of BlockGuard.Policy interface:"
	end

	operation 3884727 "onNetwork"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Part of BlockGuard.Policy interface:"
	end

	operation 3884855 "setPolicyMask"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "policyMask" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3884983 "startHandlingViolationException"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "e" explicit_type "BlockGuard.BlockGuardPolicyException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Start handling a violation that just started and hasn't
 actually run yet (e.g. no disk write or network operation
 has yet occurred).  This sees if we're in an event loop
 thread and, if so, uses it to roughly measure how long the
 violation took."
	end

	operation 3885111 "handleViolationWithTimingAttempt"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "info" type class_ref 334007 // ViolationInfo
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Attempts to fill in the provided ViolationInfo's
 durationMillis field if this thread has a Looper we can use
 to measure with.  We measure from the time of violation
 until the time the looper is idle again (right before
 the next epoll_wait)"
	end

	operation 3885239 "handleViolation"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "info" type class_ref 334007 // ViolationInfo
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Note: It's possible (even quite likely) that the
 thread-local policy mask has changed from the time the
 violation fired and now (after the violating code ran) due
 to people who push/pop temporary policy in regions of code,
 hence the policy being passed around."
	end
      end

      classrelation 1476279 // threadAndroidPolicy (<unidirectional association>)
	relation 1476279 --->
	  stereotype "ThreadLocal"
	  a role_name "threadAndroidPolicy" init_value " new ThreadLocal<AndroidBlockGuardPolicy>() {
        @Override
        protected AndroidBlockGuardPolicy initialValue() {
            return new AndroidBlockGuardPolicy(0);
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1476279 // threadAndroidPolicy (<unidirectional association>)
	  b parent class_ref 549303 // AndroidBlockGuardPolicy
      end

      operation 3883703 "tooManyViolationsThisLoop"
	class_operation private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3885367 "executeDeathPenalty"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 334007 // ViolationInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3885495 "dropboxViolationAsync"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "violationMaskSubset" explicit_type "int"
	  param in name "info" type class_ref 334007 // ViolationInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In the common case, as set by conditionallyEnableDebugLogging,
we're just dropboxing any violations but not showing a dialog,
not loggging, and not killing the process.  In these cases we
don't need to do a synchronous call to the ActivityManager.
This is used by both per-thread and vm-wide violations when
applicable."
      end

      class 549559 "AndroidCloseGuardReporter"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1476663 // <realization>
	  relation 1476663 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1476663 // <realization>
	    b parent class_ref 549687 // Reporter
	end

	operation 3885623 "report"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "message" type class_ref 129591 // String
	    param inout name "allocationSite" explicit_type "Throwable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 3885751 "hasGatheredViolations"
	class_operation package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called from Parcel.writeNoException()

 package "
      end

      operation 3885879 "clearGatheredViolations"
	class_operation package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called from Parcel.writeException(), so we drop this memory and
don't incorrectly attribute it to the wrong caller on the next
Binder call on this thread.

 package "
      end

      operation 3886007 "conditionallyCheckInstanceCounts"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      attribute 1685559 "sLastInstanceCountCheckMillis"
	class_attribute private explicit_type "long"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1685687 "sIsIdlerRegistered"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " guarded by StrictMode.class"
      end

      classrelation 1476791 // sProcessIdleHandler (<unidirectional association>)
	relation 1476791 --->
	  a role_name "sProcessIdleHandler" init_value "
            new MessageQueue.IdleHandler() {
                public boolean queueIdle() {
                    long now = SystemClock.uptimeMillis();
                    if (now - sLastInstanceCountCheckMillis > 30 * 1000) {
                        sLastInstanceCountCheckMillis = now;
                        conditionallyCheckInstanceCounts();
                    }
                    return true;
                }
            }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1476791 // sProcessIdleHandler (<unidirectional association>)
	  b parent class_ref 296375 // IdleHandler
      end

      operation 3886135 "setVmPolicy"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "policy" type class_ref 547895 // VmPolicy
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the policy for what actions in the VM process (on any
thread) should be detected, as well as the penalty if such
actions occur.

@param policy the policy to put into place"
      end

      operation 3886263 "getVmPolicy"
	class_operation public return_type class_ref 547895 // VmPolicy
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current VM policy."
      end

      operation 3886391 "enableDefaults"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable the recommended StrictMode defaults, with violations just being logged.

<p>This catches disk and network access on the main thread, as
well as leaked SQLite cursors and unclosed resources.  This is
simply a wrapper around {@link #setVmPolicy} and {@link
#setThreadPolicy}."
      end

      operation 3886519 "vmSqliteObjectLeaksEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3886647 "vmClosableObjectLeaksEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3886775 "vmRegistrationLeaksEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3886903 "vmFileUriExposureEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3887031 "vmCleartextNetworkEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3887159 "onSqliteObjectLeaked"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "message" type class_ref 129591 // String
	  param inout name "originStack" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3887287 "onWebViewMethodCalledOnWrongThread"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "originStack" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3887415 "onIntentReceiverLeaked"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "originStack" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3887543 "onServiceConnectionLeaked"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "originStack" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3887671 "onFileUriExposed"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 133047 // Uri
	  param inout name "location" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3887799 "onCleartextNetworkDetected"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "firstPacket" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      attribute 1685815 "sLastVmViolationTime"
	class_attribute const_attribute private explicit_type "Integer, Long"
	init_value " new HashMap<Integer, Long>()"
	stereotype "HashMap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Map from VM violation fingerprint to uptime millis."
      end

      operation 3887927 "onVmPolicyViolation"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "message" type class_ref 129591 // String
	  param inout name "originStack" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3888055 "onVmPolicyViolation"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "message" type class_ref 129591 // String
	  param inout name "originStack" explicit_type "Throwable"
	  param inout name "forceDeath" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3888183 "writeGatheredViolationsToParcel"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called from Parcel.writeNoException()

 package "
      end

      class 549815 "LogStackTrace"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1476919 // <generalisation>
	  relation 1476919 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1476919 // <generalisation>
	    b parent class_ref 190647 // Exception
	end
      end

      operation 3888311 "readAndHandleBinderCallViolations"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called from Parcel.readException() when the exception is EX_STRICT_MODE_VIOLATIONS,
we here read back all the encoded violations.

 package "
      end

      operation 3888439 "onBinderStrictModePolicyChange"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "newPolicy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called from android_util_Binder.cpp's
android_os_Parcel_enforceInterface when an incoming Binder call
requires changing the StrictMode policy mask.  The role of this
function is to ask Binder for its current (native) thread-local
policy value and synchronize it to libcore's (Java)
thread-local policy value."
      end

      class 549943 "ThreadSpanState"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1477687 // mActiveHead (<unidirectional association>)
	  relation 1477687 --->
	    a role_name "mActiveHead" public
	      comment " doubly-linked list."
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1477687 // mActiveHead (<unidirectional association>)
	    b parent class_ref 370743 // Span
	end

	attribute 1686071 "mActiveSize"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1477815 // mFreeListHead (<unidirectional association>)
	  relation 1477815 --->
	    a role_name "mFreeListHead" public
	      comment " singly-linked list.  only changes at head."
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1477815 // mFreeListHead (<unidirectional association>)
	    b parent class_ref 370743 // Span
	end

	attribute 1686199 "mFreeListSize"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 1477559 // NO_OP_SPAN (<unidirectional association>)
	relation 1477559 --->
	  a role_name "NO_OP_SPAN" init_value " new Span() {
            public void finish() {
                // Do nothing.
            }
        }" class_relation const_relation private
	    comment " The no-op span that's used in user builds.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1477559 // NO_OP_SPAN (<unidirectional association>)
	  b parent class_ref 370743 // Span
      end

      classrelation 1477943 // sThisThreadSpanState (<unidirectional association>)
	relation 1477943 --->
	  stereotype "ThreadLocal"
	  a role_name "sThisThreadSpanState" init_value "
            new ThreadLocal<ThreadSpanState>() {
        @Override protected ThreadSpanState initialValue() {
            return new ThreadSpanState();
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1477943 // sThisThreadSpanState (<unidirectional association>)
	  b parent class_ref 549943 // ThreadSpanState
      end

      classrelation 1478071 // sWindowManager (<unidirectional association>)
	relation 1478071 --->
	  a role_name "sWindowManager" init_value " new Singleton<IWindowManager>() {
        protected IWindowManager create() {
            return IWindowManager.Stub.asInterface(ServiceManager.getService(\"window\"));
        }
    }" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<IWindowManager> ${name}${value};
"
	    classrelation_ref 1478071 // sWindowManager (<unidirectional association>)
	  b parent class_ref 334391 // Singleton
      end

      operation 3888951 "enterCriticalSpan"
	class_operation public return_type class_ref 370743 // Span
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enter a named critical span (e.g. an animation)

<p>The name is an arbitary label (or tag) that will be applied
to any strictmode violation that happens while this span is
active.  You must call finish() on the span when done.

<p>This will never return null, but on devices without debugging
enabled, this may return a dummy object on which the finish()
method is a no-op.

<p>TODO: add CloseGuard to this, verifying callers call finish.

@hide"
      end

      operation 3889079 "noteSlowCall"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For code to note that it's slow.  This is a no-op unless the
current thread's {@link android.os.StrictMode.ThreadPolicy} has
{@link android.os.StrictMode.ThreadPolicy.Builder#detectCustomSlowCalls}
enabled.

@param name a short string for the exception stack trace that's
            built if when this fires."
      end

      operation 3889207 "noteResourceMismatch"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "tag" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For code to note that a resource was obtained using a type other than
its defined type. This is a no-op unless the current thread's
{@link android.os.StrictMode.ThreadPolicy} has
{@link android.os.StrictMode.ThreadPolicy.Builder#detectResourceMismatches()}
enabled.

@param tag an object for the exception stack trace that's
           built if when this fires.
@hide"
      end

      operation 3889335 "noteDiskRead"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3889463 "noteDiskWrite"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      classrelation 1478199 // sExpectedActivityInstanceCount (<unidirectional association>)
	relation 1478199 --->
	  stereotype "HashMap"
	  a role_name "sExpectedActivityInstanceCount" init_value "
            new HashMap<Class, Integer>()" class_relation const_relation private
	    comment " Guarded by StrictMode.class"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Integer> ${name}${value};
"
	    classrelation_ref 1478199 // sExpectedActivityInstanceCount (<unidirectional association>)
	  b parent class_ref 132791 // Class
      end

      operation 3889591 "trackActivity"
	class_operation public return_type class_ref 132663 // Object
	nparams 1
	  param inout name "instance" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an object that is used to track instances of activites.
The activity should store a reference to the tracker object in one of its fields.
@hide"
      end

      operation 3889719 "incrementExpectedActivityCount"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "klass" type class_ref 132791 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3889847 "decrementExpectedActivityCount"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "klass" type class_ref 132791 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      class 550071 "InstanceCountViolation"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1478839 // <generalisation>
	  relation 1478839 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1478839 // <generalisation>
	    b parent class_ref 550199 // Throwable
	end

	classrelation 1478967 // mClass (<unidirectional association>)
	  relation 1478967 --->
	    a role_name "mClass" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1478967 // mClass (<unidirectional association>)
	    b parent class_ref 132791 // Class
	end

	attribute 1687095 "mInstances"
	  const_attribute package explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1687223 "mLimit"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1687351 "FAKE_STACK"
	  class_attribute const_attribute private explicit_type "StackTraceElement"
	  multiplicity "[]"
	  init_value " {
            new StackTraceElement(\"android.os.StrictMode\", \"setClassInstanceLimit\",
                                  \"StrictMode.java\", 1)
        }"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3890999 "InstanceCountViolation"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "klass" type class_ref 132791 // Class
	    param in name "instances" explicit_type "long"
	    param in name "limit" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 550327 "InstanceTracker"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1479095 // sInstanceCounts (<unidirectional association>)
	  relation 1479095 --->
	    stereotype "HashMap"
	    a role_name "sInstanceCounts" init_value "
                new HashMap<Class<?>, Integer>()" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}<?>, Integer> ${name}${value};
"
	      classrelation_ref 1479095 // sInstanceCounts (<unidirectional association>)
	    b parent class_ref 132791 // Class
	end

	classrelation 1479223 // mKlass (<unidirectional association>)
	  relation 1479223 --->
	    a role_name "mKlass" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	      classrelation_ref 1479223 // mKlass (<unidirectional association>)
	    b parent class_ref 132791 // Class
	end

	operation 3891127 "InstanceTracker"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "instance" type class_ref 132663 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3891255 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "Throwable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3891383 "getInstanceCount"
	  class_operation public explicit_return_type "int"
	  nparams 1
	    param inout name "klass" type class_ref 132791 // Class
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 340279 "DropBoxManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Enqueues chunks of data (from various sources -- application crashes, kernel
log records, etc.).  The queue is size bounded and will drop old data if the
enqueued data exceeds the maximum size.  You can think of this as a
persistent, system-wide, blob-oriented \"logcat\".

<p>You can obtain an instance of this class by calling
{@link android.content.Context#getSystemService}
with {@link android.content.Context#DROPBOX_SERVICE}.

<p>DropBoxManager entries are not sent anywhere directly, but other system
services and debugging tools may scan and upload entries for processing."
      classrelation 1451319 // TAG (<unidirectional association>)
	relation 1451319 --->
	  a role_name "TAG" init_value " \"DropBoxManager\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1451319 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1451447 // mContext (<unidirectional association>)
	relation 1451447 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1451447 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 1641271 "mService"
	const_attribute private explicit_type "IDropBoxManagerService"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1641399 "IS_EMPTY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flag value: Entry's content was deleted to save space. "
      end

      attribute 1641527 "IS_TEXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flag value: Content is human-readable UTF-8 text (can be combined with IS_GZIPPED). "
      end

      attribute 1641655 "IS_GZIPPED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flag value: Content can be decompressed with {@link java.util.zip.GZIPOutputStream}. "
      end

      attribute 1641783 "HAS_BYTE_ARRAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Flag value for serialization only: Value is a byte array, not a file descriptor "
      end

      classrelation 1451575 // ACTION_DROPBOX_ENTRY_ADDED (<unidirectional association>)
	relation 1451575 --->
	  a role_name "ACTION_DROPBOX_ENTRY_ADDED" init_value "
        \"android.intent.action.DROPBOX_ENTRY_ADDED\"" class_relation const_relation public
	    comment "
Broadcast Action: This is broadcast when a new entry is added in the dropbox.
You must hold the {@link android.Manifest.permission#READ_LOGS} permission
in order to receive this broadcast.

<p class=\"note\">This is a protected intent that can only be sent
by the system.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1451575 // ACTION_DROPBOX_ENTRY_ADDED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1451703 // EXTRA_TAG (<unidirectional association>)
	relation 1451703 --->
	  a role_name "EXTRA_TAG" init_value " \"tag\"" class_relation const_relation public
	    comment "
Extra for {@link android.os.DropBoxManager#ACTION_DROPBOX_ENTRY_ADDED}:
string containing the dropbox tag.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1451703 // EXTRA_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1451831 // EXTRA_TIME (<unidirectional association>)
	relation 1451831 --->
	  a role_name "EXTRA_TIME" init_value " \"time\"" class_relation const_relation public
	    comment "
Extra for {@link android.os.DropBoxManager#ACTION_DROPBOX_ENTRY_ADDED}:
long integer value containing time (in milliseconds since January 1, 1970 00:00:00 UTC)
when the entry was created.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1451831 // EXTRA_TIME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      class 542391 "Entry"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1451959 // <realization>
	  relation 1451959 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1451959 // <realization>
	    b parent class_ref 137399 // Parcelable
	end

	classrelation 1452087 // <realization>
	  relation 1452087 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1452087 // <realization>
	    b parent class_ref 357687 // Closeable
	end

	classrelation 1452215 // mTag (<unidirectional association>)
	  relation 1452215 --->
	    a role_name "mTag" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1452215 // mTag (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1641911 "mTimeMillis"
	  const_attribute private explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1642039 "mData"
	  const_attribute private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1452343 // mFileDescriptor (<unidirectional association>)
	  relation 1452343 --->
	    a role_name "mFileDescriptor" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1452343 // mFileDescriptor (<unidirectional association>)
	    b parent class_ref 264887 // ParcelFileDescriptor
	end

	attribute 1642167 "mFlags"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3768759 "Entry"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "tag" type class_ref 129591 // String
	    param in name "millis" explicit_type "long"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Create a new empty Entry with no contents. "
	end

	operation 3768887 "Entry"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "tag" type class_ref 129591 // String
	    param in name "millis" explicit_type "long"
	    param inout name "text" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Create a new Entry with plain text contents. "
	end

	operation 3769015 "Entry"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "tag" type class_ref 129591 // String
	    param in name "millis" explicit_type "long"
	    param inout name "data" explicit_type "byte"
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a new Entry with byte array contents.
The data array must not be modified after creating this entry."
	end

	operation 3769143 "Entry"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "tag" type class_ref 129591 // String
	    param in name "millis" explicit_type "long"
	    param inout name "data" type class_ref 264887 // ParcelFileDescriptor
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a new Entry with streaming data contents.
Takes ownership of the ParcelFileDescriptor."
	end

	operation 3769271 "Entry"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "tag" type class_ref 129591 // String
	    param in name "millis" explicit_type "long"
	    param inout name "data" explicit_type "File"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a new Entry with the contents read from a file.
The file will be read when the entry's contents are requested."
	end

	operation 3769399 "close"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Close the input stream associated with this entry. "
	end

	operation 3769527 "getTag"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @return the tag originally attached to the entry. "
	end

	operation 3769655 "getTimeMillis"
	  public explicit_return_type "long"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @return time when the entry was originally created. "
	end

	operation 3769783 "getFlags"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @return flags describing the content returned by {@link #getInputStream()}. "
	end

	operation 3769911 "getText"
	  public return_type class_ref 129591 // String
	  nparams 1
	    param in name "maxBytes" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " getInputStream() decompresses.

@param maxBytes of string to return (will truncate at this length).
@return the uncompressed text contents of the entry, null if the entry is not text."
	end

	operation 3770039 "getInputStream"
	  public explicit_return_type "InputStream"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @return the uncompressed contents of the entry, or null if the contents were lost "
	end

	classrelation 1452471 // CREATOR (<unidirectional association>)
	  relation 1452471 --->
	    a role_name "CREATOR" init_value " new Parcelable.Creator() {
            public Entry[] newArray(int size) { return new Entry[size]; }
            public Entry createFromParcel(Parcel in) {
                String tag = in.readString();
                long millis = in.readLong();
                int flags = in.readInt();
                if ((flags & HAS_BYTE_ARRAY) != 0) {
                    return new Entry(tag, millis, in.createByteArray(), flags & ~HAS_BYTE_ARRAY);
                } else {
                    ParcelFileDescriptor pfd = ParcelFileDescriptor.CREATOR.createFromParcel(in);
                    return new Entry(tag, millis, pfd, flags);
                }
            }
        }" class_relation const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Entry> ${name}${value};
"
	      classrelation_ref 1452471 // CREATOR (<unidirectional association>)
	    b parent class_ref 137655 // Creator
	end

	operation 3770167 "describeContents"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3770295 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "out" type class_ref 137527 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 3770423 "DropBoxManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "service" explicit_type "IDropBoxManagerService"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3770551 "DropBoxManager"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a dummy instance for testing.  All methods will fail unless
overridden with an appropriate mock implementation.  To obtain a
functional instance, use {@link android.content.Context#getSystemService}."
      end

      operation 3770679 "addText"
	public explicit_return_type "void"
	nparams 2
	  param inout name "tag" type class_ref 129591 // String
	  param inout name "data" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores human-readable text.  The data may be discarded eventually (or even
immediately) if space is limited, or ignored entirely if the tag has been
blocked (see {@link #isTagEnabled}).

@param tag describing the type of entry being stored
@param data value to store"
      end

      operation 3770807 "addData"
	public explicit_return_type "void"
	nparams 3
	  param inout name "tag" type class_ref 129591 // String
	  param inout name "data" explicit_type "byte"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores binary data, which may be ignored or discarded as with {@link #addText}.

@param tag describing the type of entry being stored
@param data value to store
@param flags describing the data"
      end

      operation 3770935 "addFile"
	public explicit_return_type "void"
	nparams 3
	  param inout name "tag" type class_ref 129591 // String
	  param inout name "file" explicit_type "File"
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the contents of a file, which may be ignored or discarded as with
{@link #addText}.

@param tag describing the type of entry being stored
@param file to read from
@param flags describing the data
@throws IOException if the file can't be opened"
      end

      operation 3771063 "isTagEnabled"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "tag" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks any blacklists (set in system settings) to see whether a certain
tag is allowed.  Entries with disabled tags will be dropped immediately,
so you can save the work of actually constructing and sending the data.

@param tag that would be used in {@link #addText} or {@link #addFile}
@return whether events with that tag would be accepted"
      end

      operation 3771191 "getNextEntry"
	public return_type class_ref 542391 // Entry
	nparams 2
	  param inout name "tag" type class_ref 129591 // String
	  param in name "msec" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the next entry from the drop box <em>after</em> the specified time.
Requires <code>android.permission.READ_LOGS</code>.  You must always call
{@link Entry#close()} on the return value!

@param tag of entry to look for, null for all tags
@param msec time of the last entry seen
@return the next entry, or null if there are no more entries"
      end
    end

    class 345527 "WorkSource"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Describes the source of some work that may be done by someone else.
Currently the public representation of what a work source is is not
defined; this is an opaque container."
      classrelation 1490231 // <realization>
	relation 1490231 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1490231 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 1490359 // TAG (<unidirectional association>)
	relation 1490359 --->
	  a role_name "TAG" init_value " \"WorkSource\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1490359 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1698359 "DEBUG"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1698487 "mNum"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1698615 "mUids"
	package explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1490487 // mNames (<unidirectional association>)
	relation 1490487 --->
	  a role_name "mNames" multiplicity "[]" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1490487 // mNames (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1490615 // sTmpWorkSource (<unidirectional association>)
	relation 1490615 --->
	  a role_name "sTmpWorkSource" init_value " new WorkSource(0)" class_relation const_relation package
	    comment "
Internal statics to avoid object allocations in some operations.
The WorkSource object itself is not thread safe, but we need to
hold sTmpWorkSource lock while working with these statics.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1490615 // sTmpWorkSource (<unidirectional association>)
	  b parent class_ref 345527 // WorkSource
      end

      classrelation 1490743 // sNewbWork (<unidirectional association>)
	relation 1490743 --->
	  a role_name "sNewbWork" class_relation package
	    comment "
For returning newbie work from a modification operation.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1490743 // sNewbWork (<unidirectional association>)
	  b parent class_ref 345527 // WorkSource
      end

      classrelation 1490871 // sGoneWork (<unidirectional association>)
	relation 1490871 --->
	  a role_name "sGoneWork" class_relation package
	    comment "
For returning gone work form a modification operation.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1490871 // sGoneWork (<unidirectional association>)
	  b parent class_ref 345527 // WorkSource
      end

      operation 3925815 "WorkSource"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty work source."
      end

      operation 3925943 "WorkSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "orig" type class_ref 345527 // WorkSource
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new WorkSource that is a copy of an existing one.
If <var>orig</var> is null, an empty WorkSource is created."
      end

      operation 3926071 "WorkSource"
	public explicit_return_type ""
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3926199 "WorkSource"
	public explicit_return_type ""
	nparams 2
	  param in name "uid" explicit_type "int"
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3926327 "WorkSource"
	package explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3926455 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3926583 "get"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3926711 "getName"
	public return_type class_ref 129591 // String
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3926839 "clearNames"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clear names from this WorkSource.  Uids are left intact.

<p>Useful when combining with another WorkSource that doesn't have names.
@hide"
      end

      operation 3926967 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clear this WorkSource to be empty."
      end

      operation 3927095 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3927223 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3927351 "diff"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 345527 // WorkSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare this WorkSource with another.
@param other The WorkSource to compare against.
@return If there is a difference, true is returned."
      end

      operation 3927479 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "other" type class_ref 345527 // WorkSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replace the current contents of this work source with the given
work source.  If <var>other</var> is null, the current work source
will be made empty."
      end

      operation 3927607 "set"
	public explicit_return_type "void"
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3927735 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "uid" explicit_type "int"
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3927863 "setReturningDiffs"
	public return_type class_ref 345527 // WorkSource
	nparams 1
	  param inout name "other" type class_ref 345527 // WorkSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3927991 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 345527 // WorkSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merge the contents of <var>other</var> WorkSource in to this one.

@param other The other WorkSource whose contents are to be merged.
@return Returns true if any new sources were added."
      end

      operation 3928119 "addReturningNewbs"
	public return_type class_ref 345527 // WorkSource
	nparams 1
	  param inout name "other" type class_ref 345527 // WorkSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3928247 "add"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3928375 "add"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "uid" explicit_type "int"
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3928503 "addReturningNewbs"
	public return_type class_ref 345527 // WorkSource
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3928631 "remove"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 345527 // WorkSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3928759 "stripNames"
	public return_type class_ref 345527 // WorkSource
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3928887 "removeUids"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 345527 // WorkSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3929015 "removeUidsAndNames"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 345527 // WorkSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3929143 "updateLocked"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "other" type class_ref 345527 // WorkSource
	  param inout name "set" explicit_type "boolean"
	  param inout name "returnNewbs" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3929271 "addWork"
	class_operation private return_type class_ref 345527 // WorkSource
	nparams 2
	  param inout name "cur" type class_ref 345527 // WorkSource
	  param in name "newUid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3929399 "updateUidsLocked"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "other" type class_ref 345527 // WorkSource
	  param inout name "set" explicit_type "boolean"
	  param inout name "returnNewbs" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3929527 "compare"
	private explicit_return_type "int"
	nparams 3
	  param inout name "other" type class_ref 345527 // WorkSource
	  param in name "i1" explicit_type "int"
	  param in name "i2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns 0 if equal, negative if 'this' is before 'other', positive if 'this' is after 'other'."
      end

      operation 3929655 "addWork"
	class_operation private return_type class_ref 345527 // WorkSource
	nparams 3
	  param inout name "cur" type class_ref 345527 // WorkSource
	  param in name "newUid" explicit_type "int"
	  param inout name "newName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3929783 "updateUidsAndNamesLocked"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "other" type class_ref 345527 // WorkSource
	  param inout name "set" explicit_type "boolean"
	  param inout name "returnNewbs" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3929911 "insert"
	private explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3930039 "insert"
	private explicit_return_type "void"
	nparams 3
	  param in name "index" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3930167 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3930295 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3930423 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1490999 // CREATOR (<unidirectional association>)
	relation 1490999 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<WorkSource>() {
        public WorkSource createFromParcel(Parcel in) {
            return new WorkSource(in);
        }
        public WorkSource[] newArray(int size) {
            return new WorkSource[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<WorkSource> ${name}${value};
"
	    classrelation_ref 1490999 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end

    class 352439 "UserManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Manages users and user details on a multi-user system. There are two major categories of
users: fully customizable users with their own login, and managed profiles that share a workspace
with a related user.
<p>
Users are different from accounts, which are managed by
{@link AccountManager}. Each user can have their own set of accounts.
<p>
See {@link DevicePolicyManager#ACTION_PROVISION_MANAGED_PROFILE} for more on managed profiles."
      classrelation 1484343 // TAG (<unidirectional association>)
	relation 1484343 --->
	  a role_name "TAG" init_value " \"UserManager\"" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1484343 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1697079 "mService"
	const_attribute private explicit_type "IUserManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1484471 // mContext (<unidirectional association>)
	relation 1484471 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1484471 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 1697207 "RESTRICTION_NOT_SET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
No user restriction.
"
      end

      attribute 1697335 "RESTRICTION_SOURCE_SYSTEM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
User restriction set by system/user.
"
      end

      attribute 1697463 "RESTRICTION_SOURCE_DEVICE_OWNER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
User restriction set by a device owner.
"
      end

      attribute 1697591 "RESTRICTION_SOURCE_PROFILE_OWNER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
User restriction set by a profile owner.
"
      end

      class 552887 "UserRestrictionSource"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef(flag=true, value={RESTRICTION_NOT_SET, RESTRICTION_SOURCE_SYSTEM,
            RESTRICTION_SOURCE_DEVICE_OWNER, RESTRICTION_SOURCE_PROFILE_OWNER})
@SystemApi
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 1484599 // DISALLOW_MODIFY_ACCOUNTS (<unidirectional association>)
	relation 1484599 --->
	  a role_name "DISALLOW_MODIFY_ACCOUNTS" init_value " \"no_modify_accounts\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from adding and removing accounts, unless they are
{@link android.accounts.AccountManager#addAccountExplicitly programmatically} added by
Authenticator.
The default value is <code>false</code>.

<p>From {@link android.os.Build.VERSION_CODES#N} a profile or device owner app can still
use {@link android.accounts.AccountManager} APIs to add or remove accounts when account
management is disallowed.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1484599 // DISALLOW_MODIFY_ACCOUNTS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1484727 // DISALLOW_CONFIG_WIFI (<unidirectional association>)
	relation 1484727 --->
	  a role_name "DISALLOW_CONFIG_WIFI" init_value " \"no_config_wifi\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from changing Wi-Fi
access points. The default value is <code>false</code>.
<p>This restriction has no effect in a managed profile.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1484727 // DISALLOW_CONFIG_WIFI (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1484855 // DISALLOW_INSTALL_APPS (<unidirectional association>)
	relation 1484855 --->
	  a role_name "DISALLOW_INSTALL_APPS" init_value " \"no_install_apps\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from installing applications.
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1484855 // DISALLOW_INSTALL_APPS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1484983 // DISALLOW_UNINSTALL_APPS (<unidirectional association>)
	relation 1484983 --->
	  a role_name "DISALLOW_UNINSTALL_APPS" init_value " \"no_uninstall_apps\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from uninstalling applications.
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1484983 // DISALLOW_UNINSTALL_APPS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1485111 // DISALLOW_SHARE_LOCATION (<unidirectional association>)
	relation 1485111 --->
	  a role_name "DISALLOW_SHARE_LOCATION" init_value " \"no_share_location\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from turning on location sharing.
The default value is <code>false</code>.
<p>In a managed profile, location sharing always reflects the primary user's setting, but
can be overridden and forced off by setting this restriction to true in the managed profile.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1485111 // DISALLOW_SHARE_LOCATION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1485239 // DISALLOW_INSTALL_UNKNOWN_SOURCES (<unidirectional association>)
	relation 1485239 --->
	  a role_name "DISALLOW_INSTALL_UNKNOWN_SOURCES" init_value " \"no_install_unknown_sources\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from enabling the
\"Unknown Sources\" setting, that allows installation of apps from unknown sources.
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1485239 // DISALLOW_INSTALL_UNKNOWN_SOURCES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1485367 // DISALLOW_CONFIG_BLUETOOTH (<unidirectional association>)
	relation 1485367 --->
	  a role_name "DISALLOW_CONFIG_BLUETOOTH" init_value " \"no_config_bluetooth\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from configuring bluetooth.
This does <em>not</em> restrict the user from turning bluetooth on or off.
The default value is <code>false</code>.
<p>This restriction has no effect in a managed profile.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1485367 // DISALLOW_CONFIG_BLUETOOTH (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1485495 // DISALLOW_USB_FILE_TRANSFER (<unidirectional association>)
	relation 1485495 --->
	  a role_name "DISALLOW_USB_FILE_TRANSFER" init_value " \"no_usb_file_transfer\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from transferring files over
USB. This can only be set by device owners and profile owners on the primary user.
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1485495 // DISALLOW_USB_FILE_TRANSFER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1485623 // DISALLOW_CONFIG_CREDENTIALS (<unidirectional association>)
	relation 1485623 --->
	  a role_name "DISALLOW_CONFIG_CREDENTIALS" init_value " \"no_config_credentials\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from configuring user
credentials. The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1485623 // DISALLOW_CONFIG_CREDENTIALS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1485751 // DISALLOW_REMOVE_USER (<unidirectional association>)
	relation 1485751 --->
	  a role_name "DISALLOW_REMOVE_USER" init_value " \"no_remove_user\"" class_relation const_relation public
	    comment "
When set on the primary user this specifies if the user can remove other users.
When set on a secondary user, this specifies if the user can remove itself.
This restriction has no effect on managed profiles.
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1485751 // DISALLOW_REMOVE_USER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1485879 // DISALLOW_DEBUGGING_FEATURES (<unidirectional association>)
	relation 1485879 --->
	  a role_name "DISALLOW_DEBUGGING_FEATURES" init_value " \"no_debugging_features\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from enabling or
accessing debugging features. The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1485879 // DISALLOW_DEBUGGING_FEATURES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1486007 // DISALLOW_CONFIG_VPN (<unidirectional association>)
	relation 1486007 --->
	  a role_name "DISALLOW_CONFIG_VPN" init_value " \"no_config_vpn\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from configuring VPN.
The default value is <code>false</code>.
This restriction has an effect in a managed profile only from
{@link android.os.Build.VERSION_CODES#M}

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1486007 // DISALLOW_CONFIG_VPN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1486135 // DISALLOW_CONFIG_TETHERING (<unidirectional association>)
	relation 1486135 --->
	  a role_name "DISALLOW_CONFIG_TETHERING" init_value " \"no_config_tethering\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from configuring Tethering
& portable hotspots. This can only be set by device owners and profile owners on the
primary user. The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1486135 // DISALLOW_CONFIG_TETHERING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1486263 // DISALLOW_NETWORK_RESET (<unidirectional association>)
	relation 1486263 --->
	  a role_name "DISALLOW_NETWORK_RESET" init_value " \"no_network_reset\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from resetting network settings
from Settings. This can only be set by device owners and profile owners on the primary user.
The default value is <code>false</code>.
<p>This restriction has no effect on secondary users and managed profiles since only the
primary user can reset the network settings of the device.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1486263 // DISALLOW_NETWORK_RESET (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1486391 // DISALLOW_FACTORY_RESET (<unidirectional association>)
	relation 1486391 --->
	  a role_name "DISALLOW_FACTORY_RESET" init_value " \"no_factory_reset\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from factory resetting
from Settings. This can only be set by device owners and profile owners on the primary user.
The default value is <code>false</code>.
<p>This restriction has no effect on secondary users and managed profiles since only the
primary user can factory reset the device.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1486391 // DISALLOW_FACTORY_RESET (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1486519 // DISALLOW_ADD_USER (<unidirectional association>)
	relation 1486519 --->
	  a role_name "DISALLOW_ADD_USER" init_value " \"no_add_user\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from adding new users and
profiles. This can only be set by device owners and profile owners on the primary user.
The default value is <code>false</code>.
<p>This restriction has no effect on secondary users and managed profiles since only the
primary user can add other users.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1486519 // DISALLOW_ADD_USER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1486647 // ENSURE_VERIFY_APPS (<unidirectional association>)
	relation 1486647 --->
	  a role_name "ENSURE_VERIFY_APPS" init_value " \"ensure_verify_apps\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from disabling application
verification. The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1486647 // ENSURE_VERIFY_APPS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1486775 // DISALLOW_CONFIG_CELL_BROADCASTS (<unidirectional association>)
	relation 1486775 --->
	  a role_name "DISALLOW_CONFIG_CELL_BROADCASTS" init_value " \"no_config_cell_broadcasts\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from configuring cell
broadcasts. This can only be set by device owners and profile owners on the primary user.
The default value is <code>false</code>.
<p>This restriction has no effect on secondary users and managed profiles since only the
primary user can configure cell broadcasts.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1486775 // DISALLOW_CONFIG_CELL_BROADCASTS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1486903 // DISALLOW_CONFIG_MOBILE_NETWORKS (<unidirectional association>)
	relation 1486903 --->
	  a role_name "DISALLOW_CONFIG_MOBILE_NETWORKS" init_value " \"no_config_mobile_networks\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from configuring mobile
networks. This can only be set by device owners and profile owners on the primary user.
The default value is <code>false</code>.
<p>This restriction has no effect on secondary users and managed profiles since only the
primary user can configure mobile networks.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1486903 // DISALLOW_CONFIG_MOBILE_NETWORKS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1487031 // DISALLOW_APPS_CONTROL (<unidirectional association>)
	relation 1487031 --->
	  a role_name "DISALLOW_APPS_CONTROL" init_value " \"no_control_apps\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from modifying
applications in Settings or launchers. The following actions will not be allowed when this
restriction is enabled:
<li>uninstalling apps</li>
<li>disabling apps</li>
<li>clearing app caches</li>
<li>clearing app data</li>
<li>force stopping apps</li>
<li>clearing app defaults</li>
<p>
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1487031 // DISALLOW_APPS_CONTROL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1487159 // DISALLOW_MOUNT_PHYSICAL_MEDIA (<unidirectional association>)
	relation 1487159 --->
	  a role_name "DISALLOW_MOUNT_PHYSICAL_MEDIA" init_value " \"no_physical_media\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from mounting
physical external media. This can only be set by device owners and profile owners on the
primary user. The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1487159 // DISALLOW_MOUNT_PHYSICAL_MEDIA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1487287 // DISALLOW_UNMUTE_MICROPHONE (<unidirectional association>)
	relation 1487287 --->
	  a role_name "DISALLOW_UNMUTE_MICROPHONE" init_value " \"no_unmute_microphone\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from adjusting microphone
volume. If set, the microphone will be muted. This can only be set by device owners
and profile owners on the primary user. The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1487287 // DISALLOW_UNMUTE_MICROPHONE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1487415 // DISALLOW_ADJUST_VOLUME (<unidirectional association>)
	relation 1487415 --->
	  a role_name "DISALLOW_ADJUST_VOLUME" init_value " \"no_adjust_volume\"" class_relation const_relation public
	    comment "
Specifies if a user is disallowed from adjusting the master
volume. If set, the master volume will be muted. This can only be set by device owners
and profile owners on the primary user. The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1487415 // DISALLOW_ADJUST_VOLUME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1487543 // DISALLOW_OUTGOING_CALLS (<unidirectional association>)
	relation 1487543 --->
	  a role_name "DISALLOW_OUTGOING_CALLS" init_value " \"no_outgoing_calls\"" class_relation const_relation public
	    comment "
Specifies that the user is not allowed to make outgoing
phone calls. Emergency calls are still permitted.
The default value is <code>false</code>.
<p>This restriction has no effect on managed profiles.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1487543 // DISALLOW_OUTGOING_CALLS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1487671 // DISALLOW_SMS (<unidirectional association>)
	relation 1487671 --->
	  a role_name "DISALLOW_SMS" init_value " \"no_sms\"" class_relation const_relation public
	    comment "
Specifies that the user is not allowed to send or receive
SMS messages. The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1487671 // DISALLOW_SMS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1487799 // DISALLOW_FUN (<unidirectional association>)
	relation 1487799 --->
	  a role_name "DISALLOW_FUN" init_value " \"no_fun\"" class_relation const_relation public
	    comment "
Specifies if the user is not allowed to have fun. In some cases, the
device owner may wish to prevent the user from experiencing amusement or
joy while using the device. The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1487799 // DISALLOW_FUN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1487927 // DISALLOW_CREATE_WINDOWS (<unidirectional association>)
	relation 1487927 --->
	  a role_name "DISALLOW_CREATE_WINDOWS" init_value " \"no_create_windows\"" class_relation const_relation public
	    comment "
Specifies that windows besides app windows should not be
created. This will block the creation of the following types of windows.
<li>{@link LayoutParams#TYPE_TOAST}</li>
<li>{@link LayoutParams#TYPE_PHONE}</li>
<li>{@link LayoutParams#TYPE_PRIORITY_PHONE}</li>
<li>{@link LayoutParams#TYPE_SYSTEM_ALERT}</li>
<li>{@link LayoutParams#TYPE_SYSTEM_ERROR}</li>
<li>{@link LayoutParams#TYPE_SYSTEM_OVERLAY}</li>

<p>This can only be set by device owners and profile owners on the primary user.
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1487927 // DISALLOW_CREATE_WINDOWS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1488055 // DISALLOW_CROSS_PROFILE_COPY_PASTE (<unidirectional association>)
	relation 1488055 --->
	  a role_name "DISALLOW_CROSS_PROFILE_COPY_PASTE" init_value " \"no_cross_profile_copy_paste\"" class_relation const_relation public
	    comment "
Specifies if what is copied in the clipboard of this profile can
be pasted in related profiles. Does not restrict if the clipboard of related profiles can be
pasted in this profile.
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1488055 // DISALLOW_CROSS_PROFILE_COPY_PASTE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1488183 // DISALLOW_OUTGOING_BEAM (<unidirectional association>)
	relation 1488183 --->
	  a role_name "DISALLOW_OUTGOING_BEAM" init_value " \"no_outgoing_beam\"" class_relation const_relation public
	    comment "
Specifies if the user is not allowed to use NFC to beam out data from apps.
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1488183 // DISALLOW_OUTGOING_BEAM (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1488311 // DISALLOW_WALLPAPER (<unidirectional association>)
	relation 1488311 --->
	  a role_name "DISALLOW_WALLPAPER" init_value " \"no_wallpaper\"" class_relation const_relation public
	    comment "
Hidden user restriction to disallow access to wallpaper manager APIs. This restriction
generally means that wallpapers are not supported for the particular user. This user
restriction is always set for managed profiles, because such profiles don't have wallpapers.
@hide
@see #DISALLOW_SET_WALLPAPER
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1488311 // DISALLOW_WALLPAPER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1488439 // DISALLOW_SET_WALLPAPER (<unidirectional association>)
	relation 1488439 --->
	  a role_name "DISALLOW_SET_WALLPAPER" init_value " \"no_set_wallpaper\"" class_relation const_relation public
	    comment "
User restriction to disallow setting a wallpaper. Profile owner and device owner
are able to set wallpaper regardless of this restriction.
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1488439 // DISALLOW_SET_WALLPAPER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1488567 // DISALLOW_SAFE_BOOT (<unidirectional association>)
	relation 1488567 --->
	  a role_name "DISALLOW_SAFE_BOOT" init_value " \"no_safe_boot\"" class_relation const_relation public
	    comment "
Specifies if the user is not allowed to reboot the device into safe boot mode.
This can only be set by device owners and profile owners on the primary user.
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1488567 // DISALLOW_SAFE_BOOT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1488695 // DISALLOW_RECORD_AUDIO (<unidirectional association>)
	relation 1488695 --->
	  a role_name "DISALLOW_RECORD_AUDIO" init_value " \"no_record_audio\"" class_relation const_relation public
	    comment "
Specifies if a user is not allowed to record audio. This restriction is always enabled for
background users. The default value is <code>false</code>.

@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1488695 // DISALLOW_RECORD_AUDIO (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1488823 // DISALLOW_RUN_IN_BACKGROUND (<unidirectional association>)
	relation 1488823 --->
	  a role_name "DISALLOW_RUN_IN_BACKGROUND" init_value " \"no_run_in_background\"" class_relation const_relation public
	    comment "
Specifies if a user is not allowed to run in the background and should be stopped during
user switch. The default value is <code>false</code>.

<p>This restriction can be set by device owners and profile owners.

@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1488823 // DISALLOW_RUN_IN_BACKGROUND (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1488951 // DISALLOW_CAMERA (<unidirectional association>)
	relation 1488951 --->
	  a role_name "DISALLOW_CAMERA" init_value " \"no_camera\"" class_relation const_relation public
	    comment "
Specifies if a user is not allowed to use the camera.

@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1488951 // DISALLOW_CAMERA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1489079 // DISALLOW_DATA_ROAMING (<unidirectional association>)
	relation 1489079 --->
	  a role_name "DISALLOW_DATA_ROAMING" init_value " \"no_data_roaming\"" class_relation const_relation public
	    comment "
Specifies if a user is not allowed to use cellular data when roaming. This can only be set by
device owners. The default value is <code>false</code>.

@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1489079 // DISALLOW_DATA_ROAMING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1489207 // DISALLOW_SET_USER_ICON (<unidirectional association>)
	relation 1489207 --->
	  a role_name "DISALLOW_SET_USER_ICON" init_value " \"no_set_user_icon\"" class_relation const_relation public
	    comment "
Specifies if a user is not allowed to change their icon. Device owner and profile owner
can set this restriction. When it is set by device owner, only the target user will be
affected. The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1489207 // DISALLOW_SET_USER_ICON (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1489335 // ALLOW_PARENT_PROFILE_APP_LINKING (<unidirectional association>)
	relation 1489335 --->
	  a role_name "ALLOW_PARENT_PROFILE_APP_LINKING" init_value " \"allow_parent_profile_app_linking\"" class_relation const_relation public
	    comment "
Allows apps in the parent profile to handle web links from the managed profile.

This user restriction has an effect only in a managed profile.
If set:
Intent filters of activities in the parent profile with action
{@link android.content.Intent#ACTION_VIEW},
category {@link android.content.Intent#CATEGORY_BROWSABLE}, scheme http or https, and which
define a host can handle intents from the managed profile.
The default value is <code>false</code>.

<p>Key for user restrictions.
<p>Type: Boolean
@see DevicePolicyManager#addUserRestriction(ComponentName, String)
@see DevicePolicyManager#clearUserRestriction(ComponentName, String)
@see #getUserRestrictions()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1489335 // ALLOW_PARENT_PROFILE_APP_LINKING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1489463 // KEY_RESTRICTIONS_PENDING (<unidirectional association>)
	relation 1489463 --->
	  a role_name "KEY_RESTRICTIONS_PENDING" init_value " \"restrictions_pending\"" class_relation const_relation public
	    comment "
Application restriction key that is used to indicate the pending arrival
of real restrictions for the app.

<p>
Applications that support restrictions should check for the presence of this key.
A <code>true</code> value indicates that restrictions may be applied in the near
future but are not available yet. It is the responsibility of any
management application that sets this flag to update it when the final
restrictions are enforced.

<p>Key for application restrictions.
<p>Type: Boolean
@see android.app.admin.DevicePolicyManager#setApplicationRestrictions(
     android.content.ComponentName, String, Bundle)
@see android.app.admin.DevicePolicyManager#getApplicationRestrictions(
     android.content.ComponentName, String)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1489463 // KEY_RESTRICTIONS_PENDING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1489591 // ACTION_CREATE_USER (<unidirectional association>)
	relation 1489591 --->
	  a role_name "ACTION_CREATE_USER" init_value " \"android.os.action.CREATE_USER\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1489591 // ACTION_CREATE_USER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1489719 // EXTRA_USER_NAME (<unidirectional association>)
	relation 1489719 --->
	  a role_name "EXTRA_USER_NAME" init_value " \"android.os.extra.USER_NAME\"" class_relation const_relation public
	    comment "
Extra containing a name for the user being created. Optional parameter passed to
ACTION_CREATE_USER activity.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1489719 // EXTRA_USER_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1489847 // EXTRA_USER_ACCOUNT_NAME (<unidirectional association>)
	relation 1489847 --->
	  a role_name "EXTRA_USER_ACCOUNT_NAME" init_value " \"android.os.extra.USER_ACCOUNT_NAME\"" class_relation const_relation public
	    comment "
Extra containing account name for the user being created. Optional parameter passed to
ACTION_CREATE_USER activity.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1489847 // EXTRA_USER_ACCOUNT_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1489975 // EXTRA_USER_ACCOUNT_TYPE (<unidirectional association>)
	relation 1489975 --->
	  a role_name "EXTRA_USER_ACCOUNT_TYPE" init_value " \"android.os.extra.USER_ACCOUNT_TYPE\"" class_relation const_relation public
	    comment "
Extra containing account type for the user being created. Optional parameter passed to
ACTION_CREATE_USER activity.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1489975 // EXTRA_USER_ACCOUNT_TYPE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1490103 // EXTRA_USER_ACCOUNT_OPTIONS (<unidirectional association>)
	relation 1490103 --->
	  a role_name "EXTRA_USER_ACCOUNT_OPTIONS" init_value " \"android.os.extra.USER_ACCOUNT_OPTIONS\"" class_relation const_relation public
	    comment "
Extra containing account-specific data for the user being created. Optional parameter passed
to ACTION_CREATE_USER activity.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1490103 // EXTRA_USER_ACCOUNT_OPTIONS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1697719 "PIN_VERIFICATION_FAILED_INCORRECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1697847 "PIN_VERIFICATION_FAILED_NOT_SET"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1697975 "PIN_VERIFICATION_SUCCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1698103 "USER_CREATION_FAILED_NOT_PERMITTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " Activity.RESULT_FIRST_USER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Error result indicating that this user is not allowed to add other users on this device.
This is a result code returned from the activity created by the intent
{@link #createUserCreationIntent(String, String, String, PersistableBundle)}.
"
      end

      attribute 1698231 "USER_CREATION_FAILED_NO_MORE_USERS"
	class_attribute const_attribute public explicit_type "int"
	init_value " Activity.RESULT_FIRST_USER + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Error result indicating that no more users can be created on this device.
This is a result code returned from the activity created by the intent
{@link #createUserCreationIntent(String, String, String, PersistableBundle)}.
"
      end

      operation 3911223 "get"
	class_operation public return_type class_ref 352439 // UserManager
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3911351 "UserManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "service" explicit_type "IUserManager"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3911479 "supportsMultipleUsers"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this device supports multiple users with their own login and customizable
space.
@return whether the device supports multiple users."
      end

      operation 3911607 "isSplitSystemUser"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
@return Whether the device is running with split system user. It means the system user and
primary user are two separate users. Previously system user and primary user are combined as
a single owner user.  see @link {android.os.UserHandle#USER_OWNER}"
      end

      operation 3911735 "canSwitchUsers"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether switching users is currently allowed.
<p>For instance switching users is not allowed if the current user is in a phone call,
or system user hasn't been unlocked yet
@hide"
      end

      operation 3911863 "getUserHandle"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@UserIdInt
"
	
	
	
	comment "Returns the user handle for the user that this process is running under.

@return the user handle of this process.
@hide"
      end

      operation 3911991 "getUserName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user name of the user making this call.  This call is only
available to applications on the system image; it requires the
MANAGE_USERS permission.
@return the user name"
      end

      operation 3912119 "isUserAGoat"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to determine whether the user making this call is subject to
teleportations.

<p>As of {@link android.os.Build.VERSION_CODES#LOLLIPOP}, this method can
now automatically identify goats using advanced goat recognition technology.</p>

@return Returns true if the user making this call is a goat."
      end

      operation 3912247 "isPrimaryUser"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to check if this process is running under the primary user. The primary user
is the first human user on a device.

@return whether this process is running under the primary user.
@hide"
      end

      operation 3912375 "isSystemUser"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to check if this process is running under the system user. The system user
is the initial user that is implicitly created on first boot and hosts most of the
system services.

@return whether this process is running under the system user."
      end

      operation 3912503 "isAdminUser"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Returns whether the caller is running as an admin user. There can be more than one admin
user."
      end

      operation 3912631 "isUserAdmin"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Returns whether the provided user is an admin user. There can be more than one admin
user."
      end

      operation 3912759 "isLinkedUser"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to check if the user making this call is linked to another user. Linked users may have
a reduced number of available apps, app restrictions and account restrictions.
@return whether the user making this call is a linked user
@hide"
      end

      operation 3912887 "canHaveRestrictedProfile"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if specified user can have restricted profile.
@hide"
      end

      operation 3913015 "isGuestUser"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the calling app is running as a guest user.
@return whether the caller is a guest user.
@hide"
      end

      operation 3913143 "isManagedProfile"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Checks if the calling app is running in a managed profile.
Requires {@link android.Manifest.permission#MANAGE_USERS} permission.

@return whether the caller is in a managed profile.
@hide"
      end

      operation 3913271 "isManagedProfile"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Checks if the specified user is a managed profile.
Requires {@link android.Manifest.permission#MANAGE_USERS} permission, otherwise the caller
must be in the same profile group of specified user.

@return whether the specified user is a managed profile.
@hide"
      end

      operation 3913399 "isEphemeralUser"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the calling app is running as an ephemeral user.

@return whether the caller is an ephemeral user.
@hide"
      end

      operation 3913527 "isUserEphemeral"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified user is ephemeral.
@hide"
      end

      operation 3913655 "isUserRunning"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether the given user is actively running.  This means that
the user is in the \"started\" state, not \"stopped\" -- it is currently
allowed to run code through scheduled alarms, receiving broadcasts,
etc.  A started user may be either the current foreground user or a
background user; the result here does not distinguish between the two.
@param user The user to retrieve the running state for."
      end

      operation 3913783 "isUserRunning"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3913911 "isUserRunningOrStopping"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether the given user is actively running <em>or</em> stopping.
This is like {@link #isUserRunning(UserHandle)}, but will also return
true if the user had been running but is in the process of being stopped
(but is not yet fully stopped, and still running some code).
@param user The user to retrieve the running state for."
      end

      operation 3914039 "isUserRunningAndLocked"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " @removed "
      end

      operation 3914167 "isUserRunningAndLocked"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " @removed "
      end

      operation 3914295 "isUserRunningAndUnlocked"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " @removed "
      end

      operation 3914423 "isUserRunningAndUnlocked"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment " @removed "
      end

      operation 3914551 "isUserUnlocked"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether the calling user is running in an \"unlocked\" state.
<p>
On devices with direct boot, a user is unlocked only after they've
entered their credentials (such as a lock pattern or PIN). On devices
without direct boot, a user is unlocked as soon as it starts.
<p>
When a user is locked, only device-protected data storage is available.
When a user is unlocked, both device-protected and credential-protected
private app data storage is available.

@see Intent#ACTION_USER_UNLOCKED
@see Context#createDeviceProtectedStorageContext()"
      end

      operation 3914679 "isUserUnlocked"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether the given user is running in an \"unlocked\" state.
<p>
On devices with direct boot, a user is unlocked only after they've
entered their credentials (such as a lock pattern or PIN). On devices
without direct boot, a user is unlocked as soon as it starts.
<p>
When a user is locked, only device-protected data storage is available.
When a user is unlocked, both device-protected and credential-protected
private app data storage is available.

@param user to retrieve the unlocked state for.
@see Intent#ACTION_USER_UNLOCKED
@see Context#createDeviceProtectedStorageContext()"
      end

      operation 3914807 "isUserUnlocked"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3914935 "isUserUnlockingOrUnlocked"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3915063 "isUserUnlockingOrUnlocked"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3915191 "getUserInfo"
	public return_type class_ref 334135 // UserInfo
	nparams 1
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the UserInfo object describing a specific user.
Requires {@link android.Manifest.permission#MANAGE_USERS} permission.
@param userHandle the user handle of the user whose information is being requested.
@return the UserInfo object for a specific user.
@hide"
      end

      operation 3915319 "getUserRestrictionSource"
	public explicit_return_type "int"
	nparams 2
	  param inout name "restrictionKey" type class_ref 129591 // String
	  param inout name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
@UserRestrictionSource
"
	
	
	
	comment "@hide

Returns who set a user restriction on a user.
Requires {@link android.Manifest.permission#MANAGE_USERS} permission.
@param restrictionKey the string key representing the restriction
@param userHandle the UserHandle of the user for whom to retrieve the restrictions.
@return The source of user restriction. Any combination of {@link #RESTRICTION_NOT_SET},
        {@link #RESTRICTION_SOURCE_SYSTEM}, {@link #RESTRICTION_SOURCE_DEVICE_OWNER}
        and {@link #RESTRICTION_SOURCE_PROFILE_OWNER}"
      end

      operation 3915447 "getUserRestrictions"
	public return_type class_ref 131511 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user-wide restrictions imposed on this user.
@return a Bundle containing all the restrictions."
      end

      operation 3915575 "getUserRestrictions"
	public return_type class_ref 131511 // Bundle
	nparams 1
	  param inout name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user-wide restrictions imposed on the user specified by <code>userHandle</code>.
@param userHandle the UserHandle of the user for whom to retrieve the restrictions.
@return a Bundle containing all the restrictions."
      end

      operation 3915703 "hasBaseUserRestriction"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "restrictionKey" type class_ref 129591 // String
	  param inout name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Returns whether the given user has been disallowed from performing certain actions
or setting certain settings through UserManager. This method disregards restrictions
set by device policy.
@param restrictionKey the string key representing the restriction
@param userHandle the UserHandle of the user for whom to retrieve the restrictions."
      end

      operation 3915831 "setUserRestrictions"
	public explicit_return_type "void"
	nparams 1
	  param inout name "restrictions" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This will no longer work.  Device owners and profile owners should use
{@link DevicePolicyManager#addUserRestriction(ComponentName, String)} instead.

 System apps should use UserManager.setUserRestriction() instead."
      end

      operation 3915959 "setUserRestrictions"
	public explicit_return_type "void"
	nparams 2
	  param inout name "restrictions" type class_ref 131511 // Bundle
	  param inout name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "This will no longer work.  Device owners and profile owners should use
{@link DevicePolicyManager#addUserRestriction(ComponentName, String)} instead.

 System apps should use UserManager.setUserRestriction() instead."
      end

      operation 3916087 "setUserRestriction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the value of a specific restriction.
Requires the MANAGE_USERS permission.
@param key the key of the restriction
@param value the value for the restriction
@deprecated use {@link android.app.admin.DevicePolicyManager#addUserRestriction(
android.content.ComponentName, String)} or
{@link android.app.admin.DevicePolicyManager#clearUserRestriction(
android.content.ComponentName, String)} instead."
      end

      operation 3916215 "setUserRestriction"
	public explicit_return_type "void"
	nparams 3
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "boolean"
	  param inout name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@hide
Sets the value of a specific restriction on a specific user.
Requires the MANAGE_USERS permission.
@param key the key of the restriction
@param value the value for the restriction
@param userHandle the user whose restriction is to be changed.
@deprecated use {@link android.app.admin.DevicePolicyManager#addUserRestriction(
android.content.ComponentName, String)} or
{@link android.app.admin.DevicePolicyManager#clearUserRestriction(
android.content.ComponentName, String)} instead."
      end

      operation 3916343 "hasUserRestriction"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "restrictionKey" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the current user has been disallowed from performing certain actions
or setting certain settings.

@param restrictionKey The string key representing the restriction.
@return {@code true} if the current user has the given restriction, {@code false} otherwise."
      end

      operation 3916471 "hasUserRestriction"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "restrictionKey" type class_ref 129591 // String
	  param inout name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Returns whether the given user has been disallowed from performing certain actions
or setting certain settings.
@param restrictionKey the string key representing the restriction
@param userHandle the UserHandle of the user for whom to retrieve the restrictions."
      end

      operation 3916599 "getSerialNumberForUser"
	public explicit_return_type "long"
	nparams 1
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the serial number for a user.  This is a device-unique
number assigned to that user; if the user is deleted and then a new
user created, the new users will not be given the same serial number.
@param user The user whose serial number is to be retrieved.
@return The serial number of the given user; returns -1 if the
given UserHandle does not exist.
@see #getUserForSerialNumber(long)"
      end

      operation 3916727 "getUserForSerialNumber"
	public return_type class_ref 131383 // UserHandle
	nparams 1
	  param in name "serialNumber" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the user associated with a serial number previously
returned by {@link #getSerialNumberForUser(UserHandle)}.
@param serialNumber The serial number of the user that is being
retrieved.
@return Return the user associated with the serial number, or null
if there is not one.
@see #getSerialNumberForUser(UserHandle)"
      end

      operation 3916855 "createUser"
	public return_type class_ref 334135 // UserInfo
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a user with the specified name and options. For non-admin users, default user
restrictions are going to be applied.
Requires {@link android.Manifest.permission#MANAGE_USERS} permission.

@param name the user's name
@param flags flags that identify the type of user and other properties.
@see UserInfo

@return the UserInfo object for the created user, or null if the user could not be created.
@hide"
      end

      operation 3916983 "createGuest"
	public return_type class_ref 334135 // UserInfo
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a guest user and configures it.
@param context an application context
@param name the name to set for the user
@hide"
      end

      operation 3917111 "createProfileForUser"
	public return_type class_ref 334135 // UserInfo
	nparams 3
	  param inout name "name" type class_ref 129591 // String
	  param in name "flags" explicit_type "int"
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @UserIdInt ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a user with the specified name and options as a profile of another user.
Requires {@link android.Manifest.permission#MANAGE_USERS} permission.

@param name the user's name
@param flags flags that identify the type of user and other properties.
@see UserInfo
@param userHandle new user will be a profile of this use.

@return the UserInfo object for the created user, or null if the user could not be created.
@hide"
      end

      operation 3917239 "createRestrictedProfile"
	public return_type class_ref 334135 // UserInfo
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a restricted profile with the specified name. This method also sets necessary
restrictions and adds shared accounts.

@param name profile's name
@return UserInfo object for the created user, or null if the user could not be created.
@hide"
      end

      operation 3917367 "createUserCreationIntent"
	class_operation public return_type class_ref 131255 // Intent
	nparams 4
	  param inout name "userName" type class_ref 129591 // String
	  param inout name "accountName" type class_ref 129591 // String
	  param inout name "accountType" type class_ref 129591 // String
	  param inout name "accountOptions" type class_ref 158007 // PersistableBundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an intent to create a user for the provided name and account name. The name
and account name will be used when the setup process for the new user is started.
<p>
The intent should be launched using startActivityForResult and the return result will
indicate if the user consented to adding a new user and if the operation succeeded. Any
errors in creating the user will be returned in the result code. If the user cancels the
request, the return result will be {@link Activity#RESULT_CANCELED}. On success, the
result code will be {@link Activity#RESULT_OK}.
<p>
Use {@link #supportsMultipleUsers()} to first check if the device supports this operation
at all.
<p>
The new user is created but not initialized. After switching into the user for the first
time, the preferred user name and account information are used by the setup process for that
user.

@param userName Optional name to assign to the user.
@param accountName Optional account name that will be used by the setup wizard to initialize
                   the user.
@param accountType Optional account type for the account to be created. This is required
                   if the account name is specified.
@param accountOptions Optional bundle of data to be passed in during account creation in the
                      new user via {@link AccountManager#addAccount(String, String, String[],
                      Bundle, android.app.Activity, android.accounts.AccountManagerCallback,
                      Handler)}.
@return An Intent that can be launched from an Activity.
@see #USER_CREATION_FAILED_NOT_PERMITTED
@see #USER_CREATION_FAILED_NO_MORE_USERS
@see #supportsMultipleUsers"
      end

      operation 3917495 "getSeedAccountName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "@hide

Returns the preferred account name for user creation. Requires MANAGE_USERS permission."
      end

      operation 3917623 "getSeedAccountType"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "@hide

Returns the preferred account type for user creation. Requires MANAGE_USERS permission."
      end

      operation 3917751 "getSeedAccountOptions"
	public return_type class_ref 158007 // PersistableBundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "@hide

Returns the preferred account's options bundle for user creation. Requires MANAGE_USERS
permission.
@return Any options set by the requestor that created the user."
      end

      operation 3917879 "setSeedAccountData"
	public explicit_return_type "void"
	nparams 4
	  param in name "userId" explicit_type "int"
	  param inout name "accountName" type class_ref 129591 // String
	  param inout name "accountType" type class_ref 129591 // String
	  param inout name "accountOptions" type class_ref 158007 // PersistableBundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide

Called by a system activity to set the seed account information of a user created
through the user creation intent.
@param userId
@param accountName
@param accountType
@param accountOptions
@see #createUserCreationIntent(String, String, String, PersistableBundle)"
      end

      operation 3918007 "clearSeedAccountData"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "@hide
Clears the seed information used to create this user. Requires MANAGE_USERS permission."
      end

      operation 3918135 "markGuestForDeletion"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Marks the guest user for deletion to allow a new guest to be created before deleting
the current user who is a guest.
@param userHandle
@return"
      end

      operation 3918263 "setUserEnabled"
	public explicit_return_type "void"
	nparams 1
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the user as enabled, if such an user exists.

<p>Requires {@link android.Manifest.permission#MANAGE_USERS} permission.

<p>Note that the default is true, it's only that managed profiles might not be enabled.
Also ephemeral users can be disabled to indicate that their removal is in progress and they
shouldn't be re-entered. Therefore ephemeral users should not be re-enabled once disabled.

@param userHandle the id of the profile to enable
@hide"
      end

      operation 3918391 "getUserCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of users currently created on the device."
      end

      operation 3918519 "getUsers"
	public return_type class_ref 334135 // UserInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns information for all users on this device, including ones marked for deletion.
To retrieve only users that are alive, use {@link #getUsers(boolean)}.
<p>
Requires {@link android.Manifest.permission#MANAGE_USERS} permission.
@return the list of users that exist on the device.
@hide"
      end

      operation 3918647 "getSerialNumbersOfUsers"
	public explicit_return_type "long"
	nparams 1
	  param inout name "excludeDying" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Returns serial numbers of all users on this device.
Requires {@link android.Manifest.permission#MANAGE_USERS} permission.

@param excludeDying specify if the list should exclude users being removed.
@return the list of serial numbers of users that exist on the device.
@hide"
      end

      operation 3918775 "getUserAccount"
	public return_type class_ref 129591 // String
	nparams 1
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@RequiresPermission( allOf = {
            Manifest.permission.INTERACT_ACROSS_USERS_FULL,
            Manifest.permission.MANAGE_USERS
    })
@Nullable
"
	
	
	
	comment "@return the user's account name, null if not found.
@hide"
      end

      operation 3918903 "setUserAccount"
	public explicit_return_type "void"
	nparams 2
	  param in name "userHandle" explicit_type "int"
	  param inout name "accountName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@RequiresPermission( allOf = {
            Manifest.permission.INTERACT_ACROSS_USERS_FULL,
            Manifest.permission.MANAGE_USERS
    })
"
	
	
	
	comment "Set account name for the given user.
@hide"
      end

      operation 3919031 "getPrimaryUser"
	public return_type class_ref 334135 // UserInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns information for Primary user.
Requires {@link android.Manifest.permission#MANAGE_USERS} permission.

@return the Primary user, null if not found.
@hide"
      end

      operation 3919159 "canAddMoreUsers"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether it's possible to add more users. Caller must hold the MANAGE_USERS
permission.

@return true if more users can be added, false if limit has been reached.
@hide"
      end

      operation 3919287 "canAddMoreManagedProfiles"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "userId" explicit_type "int"
	  param inout name "allowedToRemoveOne" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether it's possible to add more managed profiles. Caller must hold the MANAGE_USERS
permission.
if allowedToRemoveOne is true and if the user already has a managed profile, then return if
we could add a new managed profile to this user after removing the existing one.

@return true if more managed profiles can be added, false if limit has been reached.
@hide"
      end

      operation 3919415 "getProfiles"
	public return_type class_ref 334135 // UserInfo
	nparams 1
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns list of the profiles of userHandle including
userHandle itself.
Note that this returns both enabled and not enabled profiles. See
{@link #getEnabledProfiles(int)} if you need only the enabled ones.

Requires {@link android.Manifest.permission#MANAGE_USERS} permission.
@param userHandle profiles of this user will be returned.
@return the list of profiles.
@hide"
      end

      operation 3919543 "isSameProfileGroup"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "userId" explicit_type "int"
	  param in name "otherUserId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requires {@link android.Manifest.permission#MANAGE_USERS} permission.
@param userId one of the two user ids to check.
@param otherUserId one of the two user ids to check.
@return true if the two user ids are in the same profile group.
@hide"
      end

      operation 3919671 "getEnabledProfiles"
	public return_type class_ref 334135 // UserInfo
	nparams 1
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns list of the profiles of userHandle including
userHandle itself.
Note that this returns only enabled.

Requires {@link android.Manifest.permission#MANAGE_USERS} permission.
@param userHandle profiles of this user will be returned.
@return the list of profiles.
@hide"
      end

      operation 3919799 "getUserProfiles"
	public return_type class_ref 131383 // UserHandle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of UserHandles for profiles associated with the user that the calling process
is running on, including the user itself.

@return A non-empty list of UserHandles associated with the calling user."
      end

      operation 3919927 "getProfileIds"
	public explicit_return_type "int"
	nparams 2
	  param in name "userId" explicit_type "int"
	  param inout name "enabledOnly" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@UserIdInt ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of ids for profiles associated with the specified user including the user
itself.

@param userId      id of the user to return profiles for
@param enabledOnly whether return only {@link UserInfo#isEnabled() enabled} profiles
@return A non-empty list of ids of profiles associated with the specified user.

@hide"
      end

      operation 3920055 "getProfileIdsWithDisabled"
	public explicit_return_type "int"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #getProfileIds(int, boolean)
@hide"
      end

      operation 3920183 "getEnabledProfileIds"
	public explicit_return_type "int"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #getProfileIds(int, boolean)
@hide"
      end

      operation 3920311 "getCredentialOwnerProfile"
	public explicit_return_type "int"
	nparams 1
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the device credential owner id of the profile from
which this method is called, or userHandle if called from a user that
is not a profile.

@hide"
      end

      operation 3920439 "getProfileParent"
	public return_type class_ref 334135 // UserInfo
	nparams 1
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parent of the profile which this method is called from
or null if called from a user that is not a profile.

@hide"
      end

      operation 3920567 "setQuietModeEnabled"
	public explicit_return_type "void"
	nparams 2
	  param in name "userHandle" explicit_type "int"
	  param inout name "enableQuietMode" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set quiet mode of a managed profile.

@param userHandle The user handle of the profile.
@param enableQuietMode Whether quiet mode should be enabled or disabled.
@hide"
      end

      operation 3920695 "isQuietModeEnabled"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given profile is in quiet mode or not.
Notes: Quiet mode is only supported for managed profiles.

@param userHandle The user handle of the profile to be queried.
@return true if the profile is in quiet mode, false otherwise."
      end

      operation 3920823 "trySetQuietModeDisabled"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "userHandle" explicit_type "int"
	  param inout name "target" type class_ref 131639 // IntentSender
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries disabling quiet mode for a given user. If the user is still locked, we unlock the user
first by showing the confirm credentials screen and disable quiet mode upon successful
unlocking. If the user is already unlocked, we call through to {@link #setQuietModeEnabled}
directly.

@return true if the quiet mode was disabled immediately
@hide"
      end

      operation 3920951 "getBadgedIconForUser"
	public return_type class_ref 129719 // Drawable
	nparams 2
	  param inout name "icon" type class_ref 129719 // Drawable
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the target user is a managed profile of the calling user or the caller
is itself a managed profile, then this returns a badged copy of the given
icon to be able to distinguish it from the original icon. For badging an
arbitrary drawable use {@link #getBadgedDrawableForUser(
android.graphics.drawable.Drawable, UserHandle, android.graphics.Rect, int)}.
<p>
If the original drawable is a BitmapDrawable and the backing bitmap is
mutable as per {@link android.graphics.Bitmap#isMutable()}, the badging
is performed in place and the original drawable is returned.
</p>

@param icon The icon to badge.
@param user The target user.
@return A drawable that combines the original icon and a badge as
        determined by the system.
@removed"
      end

      operation 3921079 "getBadgedDrawableForUser"
	public return_type class_ref 129719 // Drawable
	nparams 4
	  param inout name "badgedDrawable" type class_ref 129719 // Drawable
	  param inout name "user" type class_ref 131383 // UserHandle
	  param inout name "badgeLocation" type class_ref 135351 // Rect
	  param in name "badgeDensity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the target user is a managed profile of the calling user or the caller
is itself a managed profile, then this returns a badged copy of the given
drawable allowing the user to distinguish it from the original drawable.
The caller can specify the location in the bounds of the drawable to be
badged where the badge should be applied as well as the density of the
badge to be used.
<p>
If the original drawable is a BitmapDrawable and the backing bitmap is
mutable as per {@link android.graphics.Bitmap#isMutable()}, the badging
is performed in place and the original drawable is returned.
</p>

@param badgedDrawable The drawable to badge.
@param user The target user.
@param badgeLocation Where in the bounds of the badged drawable to place
        the badge. If it's {@code null}, the badge is applied on top of the entire
        drawable being badged.
@param badgeDensity The optional desired density for the badge as per
        {@link android.util.DisplayMetrics#densityDpi}. If it's not positive,
        the density of the display is used.
@return A drawable that combines the original drawable and a badge as
        determined by the system.
@removed"
      end

      operation 3921207 "getBadgedLabelForUser"
	public explicit_return_type "CharSequence"
	nparams 2
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the target user is a managed profile of the calling user or the caller
is itself a managed profile, then this returns a copy of the label with
badging for accessibility services like talkback. E.g. passing in \"Email\"
and it might return \"Work Email\" for Email in the work profile.

@param label The label to change.
@param user The target user.
@return A label that combines the original label and a badge as
        determined by the system.
@removed"
      end

      operation 3921335 "getUsers"
	public return_type class_ref 334135 // UserInfo
	nparams 1
	  param inout name "excludeDying" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns information for all users on this device. Requires
{@link android.Manifest.permission#MANAGE_USERS} permission.

@param excludeDying specify if the list should exclude users being
           removed.
@return the list of users that were created.
@hide"
      end

      operation 3921463 "removeUser"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a user and all associated data.
Requires {@link android.Manifest.permission#MANAGE_USERS} permission.
@param userHandle the integer handle of the user, where 0 is the primary user.
@hide"
      end

      operation 3921591 "setUserName"
	public explicit_return_type "void"
	nparams 2
	  param in name "userHandle" explicit_type "int"
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the user's name.
Requires {@link android.Manifest.permission#MANAGE_USERS} permission.

@param userHandle the user's integer handle
@param name the new name for the user
@hide"
      end

      operation 3921719 "setUserIcon"
	public explicit_return_type "void"
	nparams 2
	  param in name "userHandle" explicit_type "int"
	  param inout name "icon" type class_ref 131127 // Bitmap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the user's photo.
@param userHandle the user for whom to change the photo.
@param icon the bitmap to set as the photo.
@hide"
      end

      operation 3921847 "getUserIcon"
	public return_type class_ref 131127 // Bitmap
	nparams 1
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a file descriptor for the user's photo. PNG data can be read from this file.
@param userHandle the user whose photo we want to read.
@return a {@link Bitmap} of the user's photo, or null if there's no photo.
@see com.android.internal.util.UserIcons#getDefaultUserIcon for a default.
@hide"
      end

      operation 3921975 "getMaxSupportedUsers"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum number of users that can be created on this device. A return value
of 1 means that it is a single user device.
@hide
@return a value greater than or equal to 1"
      end

      operation 3922103 "isUserSwitcherEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the user switcher should be shown, this will be if device supports multi-user
and there are at least 2 users available that are not managed profiles.
@hide
@return true if user switcher should be shown."
      end

      operation 3922231 "getUserSerialNumber"
	public explicit_return_type "int"
	nparams 1
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@UserIdInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a serial number on this device for a given userHandle. User handles can be recycled
when deleting and creating users, but serial numbers are not reused until the device is wiped.
@param userHandle
@return a serial number associated with that user, or -1 if the userHandle is not valid.
@hide"
      end

      operation 3922359 "getUserHandle"
	public explicit_return_type "int"
	nparams 1
	  param in name "userSerialNumber" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@UserIdInt
"
	
	
	
	comment "Returns a userHandle on this device for a given user serial number. User handles can be
recycled when deleting and creating users, but serial numbers are not reused until the device
is wiped.
@param userSerialNumber
@return the userHandle associated with that user serial number, or -1 if the serial number
is not valid.
@hide"
      end

      operation 3922487 "getApplicationRestrictions"
	public return_type class_ref 131511 // Bundle
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link Bundle} containing any saved application restrictions for this user, for the
given package name. Only an application with this package name can call this method.

<p>The returned {@link Bundle} consists of key-value pairs, as defined by the application,
where the types of values may be:
<ul>
<li>{@code boolean}
<li>{@code int}
<li>{@code String} or {@code String[]}
<li>From {@link android.os.Build.VERSION_CODES#M}, {@code Bundle} or {@code Bundle[]}
</ul>

@param packageName the package name of the calling application
@return a {@link Bundle} with the restrictions for that package, or an empty {@link Bundle}
if there are no saved restrictions.

@see #KEY_RESTRICTIONS_PENDING"
      end

      operation 3922615 "getApplicationRestrictions"
	public return_type class_ref 131511 // Bundle
	nparams 2
	  param inout name "packageName" type class_ref 129591 // String
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3922743 "setApplicationRestrictions"
	public explicit_return_type "void"
	nparams 3
	  param inout name "packageName" type class_ref 129591 // String
	  param inout name "restrictions" type class_ref 131511 // Bundle
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3922871 "setRestrictionsChallenge"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "newPin" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a new challenge PIN for restrictions. This is only for use by pre-installed
apps and requires the MANAGE_USERS permission.
@param newPin the PIN to use for challenge dialogs.
@return Returns true if the challenge PIN was set successfully.
@deprecated The restrictions PIN functionality is no longer provided by the system.
This method is preserved for backwards compatibility reasons and always returns false."
      end

      operation 3922999 "setDefaultGuestRestrictions"
	public explicit_return_type "void"
	nparams 1
	  param inout name "restrictions" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Set restrictions that should apply to any future guest user that's created."
      end

      operation 3923127 "getDefaultGuestRestrictions"
	public return_type class_ref 131511 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Gets the default guest restrictions."
      end

      operation 3923255 "getUserCreationTime"
	public explicit_return_type "long"
	nparams 1
	  param inout name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns creation time of the user or of a managed profile associated with the calling user.
@param userHandle user handle of the user or a managed profile associated with the
                  calling user.
@return creation time in milliseconds since Epoch time."
      end

      operation 3923383 "someUserHasSeedAccount"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "accountName" type class_ref 129591 // String
	  param inout name "accountType" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Checks if any uninitialized user has the specific seed account name and type.

@param mAccountName The account name to check for
@param mAccountType The account type of the account to check for
@return whether the seed account was found"
      end
    end

    class 367927 "AsyncTask"
      abstract visibility public 
      nformals 3
      formal name "Params" type "" explicit_default_value ""
        explicit_extends ""
      formal name "Progress" type "" explicit_default_value ""
        explicit_extends ""
      formal name "Result" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>AsyncTask enables proper and easy use of the UI thread. This class allows to
perform background operations and publish results on the UI thread without
having to manipulate threads and/or handlers.</p>

<p>AsyncTask is designed to be a helper class around {@link Thread} and {@link Handler}
and does not constitute a generic threading framework. AsyncTasks should ideally be
used for short operations (a few seconds at the most.) If you need to keep threads
running for long periods of time, it is highly recommended you use the various APIs
provided by the <code>java.util.concurrent</code> package such as {@link Executor},
{@link ThreadPoolExecutor} and {@link FutureTask}.</p>

<p>An asynchronous task is defined by a computation that runs on a background thread and
whose result is published on the UI thread. An asynchronous task is defined by 3 generic
types, called <code>Params</code>, <code>Progress</code> and <code>Result</code>,
and 4 steps, called <code>onPreExecute</code>, <code>doInBackground</code>,
<code>onProgressUpdate</code> and <code>onPostExecute</code>.</p>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using tasks and threads, read the
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html\">Processes and
Threads</a> developer guide.</p>
</div>

<h2>Usage</h2>
<p>AsyncTask must be subclassed to be used. The subclass will override at least
one method ({@link #doInBackground}), and most often will override a
second one ({@link #onPostExecute}.)</p>

<p>Here is an example of subclassing:</p>
<pre class=\"prettyprint\">
private class DownloadFilesTask extends AsyncTask&lt;URL, Integer, Long&gt; {
    protected Long doInBackground(URL... urls) {
        int count = urls.length;
        long totalSize = 0;
        for (int i = 0; i < count; i++) {
            totalSize += Downloader.downloadFile(urls[i]);
            publishProgress((int) ((i / (float) count) * 100));
            // Escape early if cancel() is called
            if (isCancelled()) break;
        }
        return totalSize;
    }

    protected void onProgressUpdate(Integer... progress) {
        setProgressPercent(progress[0]);
    }

    protected void onPostExecute(Long result) {
        showDialog(\"Downloaded \" + result + \" bytes\");
    }
}
</pre>

<p>Once created, a task is executed very simply:</p>
<pre class=\"prettyprint\">
new DownloadFilesTask().execute(url1, url2, url3);
</pre>

<h2>AsyncTask's generic types</h2>
<p>The three types used by an asynchronous task are the following:</p>
<ol>
    <li><code>Params</code>, the type of the parameters sent to the task upon
    execution.</li>
    <li><code>Progress</code>, the type of the progress units published during
    the background computation.</li>
    <li><code>Result</code>, the type of the result of the background
    computation.</li>
</ol>
<p>Not all types are always used by an asynchronous task. To mark a type as unused,
simply use the type {@link Void}:</p>
<pre>
private class MyTask extends AsyncTask&lt;Void, Void, Void&gt; { ... }
</pre>

<h2>The 4 steps</h2>
<p>When an asynchronous task is executed, the task goes through 4 steps:</p>
<ol>
    <li>{@link #onPreExecute()}, invoked on the UI thread before the task
    is executed. This step is normally used to setup the task, for instance by
    showing a progress bar in the user interface.</li>
    <li>{@link #doInBackground}, invoked on the background thread
    immediately after {@link #onPreExecute()} finishes executing. This step is used
    to perform background computation that can take a long time. The parameters
    of the asynchronous task are passed to this step. The result of the computation must
    be returned by this step and will be passed back to the last step. This step
    can also use {@link #publishProgress} to publish one or more units
    of progress. These values are published on the UI thread, in the
    {@link #onProgressUpdate} step.</li>
    <li>{@link #onProgressUpdate}, invoked on the UI thread after a
    call to {@link #publishProgress}. The timing of the execution is
    undefined. This method is used to display any form of progress in the user
    interface while the background computation is still executing. For instance,
    it can be used to animate a progress bar or show logs in a text field.</li>
    <li>{@link #onPostExecute}, invoked on the UI thread after the background
    computation finishes. The result of the background computation is passed to
    this step as a parameter.</li>
</ol>

<h2>Cancelling a task</h2>
<p>A task can be cancelled at any time by invoking {@link #cancel(boolean)}. Invoking
this method will cause subsequent calls to {@link #isCancelled()} to return true.
After invoking this method, {@link #onCancelled(Object)}, instead of
{@link #onPostExecute(Object)} will be invoked after {@link #doInBackground(Object[])}
returns. To ensure that a task is cancelled as quickly as possible, you should always
check the return value of {@link #isCancelled()} periodically from
{@link #doInBackground(Object[])}, if possible (inside a loop for instance.)</p>

<h2>Threading rules</h2>
<p>There are a few threading rules that must be followed for this class to
work properly:</p>
<ul>
    <li>The AsyncTask class must be loaded on the UI thread. This is done
    automatically as of {@link android.os.Build.VERSION_CODES#JELLY_BEAN}.</li>
    <li>The task instance must be created on the UI thread.</li>
    <li>{@link #execute} must be invoked on the UI thread.</li>
    <li>Do not call {@link #onPreExecute()}, {@link #onPostExecute},
    {@link #doInBackground}, {@link #onProgressUpdate} manually.</li>
    <li>The task can be executed only once (an exception will be thrown if
    a second execution is attempted.)</li>
</ul>

<h2>Memory observability</h2>
<p>AsyncTask guarantees that all callback calls are synchronized in such a way that the following
operations are safe without explicit synchronizations.</p>
<ul>
    <li>Set member fields in the constructor or {@link #onPreExecute}, and refer to them
    in {@link #doInBackground}.
    <li>Set member fields in {@link #doInBackground}, and refer to them in
    {@link #onProgressUpdate} and {@link #onPostExecute}.
</ul>

<h2>Order of execution</h2>
<p>When first introduced, AsyncTasks were executed serially on a single background
thread. Starting with {@link android.os.Build.VERSION_CODES#DONUT}, this was changed
to a pool of threads allowing multiple tasks to operate in parallel. Starting with
{@link android.os.Build.VERSION_CODES#HONEYCOMB}, tasks are executed on a single
thread to avoid common application errors caused by parallel execution.</p>
<p>If you truly want parallel execution, you can invoke
{@link #executeOnExecutor(java.util.concurrent.Executor, Object[])} with
{@link #THREAD_POOL_EXECUTOR}.</p>"
      classrelation 800311 // LOG_TAG (<unidirectional association>)
	relation 800311 --->
	  a role_name "LOG_TAG" init_value " \"AsyncTask\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 800311 // LOG_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 803511 "CPU_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " Runtime.getRuntime().availableProcessors()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 803639 "CORE_POOL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " Math.max(2, Math.min(CPU_COUNT - 1, 4))"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " We want at least 2 threads and at most 4 threads in the core pool,
 preferring to have 1 less than the CPU count to avoid saturating
 the CPU with background work"
      end

      attribute 803767 "MAXIMUM_POOL_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " CPU_COUNT * 2 + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 803895 "KEEP_ALIVE_SECONDS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 30"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 804023 "sThreadFactory"
	class_attribute const_attribute private explicit_type "ThreadFactory"
	init_value " new ThreadFactory() {
        private final AtomicInteger mCount = new AtomicInteger(1);

        public Thread newThread(Runnable r) {
            return new Thread(r, \"AsyncTask #\" + mCount.getAndIncrement());
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 804151 "sPoolWorkQueue"
	class_attribute const_attribute private explicit_type "Runnable"
	init_value "
            new LinkedBlockingQueue<Runnable>(128)"
	stereotype "BlockingQueue"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 804279 "THREAD_POOL_EXECUTOR"
	class_attribute const_attribute public explicit_type "Executor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An {@link Executor} that can be used to execute tasks in parallel.
"
      end

      extra_member 130231 "initialization"
	
	cpp "" ""
	java "  static {
        ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(
                CORE_POOL_SIZE, MAXIMUM_POOL_SIZE, KEEP_ALIVE_SECONDS, TimeUnit.SECONDS,
                sPoolWorkQueue, sThreadFactory);
        threadPoolExecutor.allowCoreThreadTimeOut(true);
        THREAD_POOL_EXECUTOR = threadPoolExecutor;
    }"
	php ""
	python ""
	idl ""
      end

      attribute 804407 "SERIAL_EXECUTOR"
	class_attribute const_attribute public explicit_type "Executor"
	init_value " new SerialExecutor()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An {@link Executor} that executes tasks one at a time in serial
order.  This serialization is global to a particular process.
"
      end

      attribute 804535 "MESSAGE_POST_RESULT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 804663 "MESSAGE_POST_PROGRESS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 804791 "sDefaultExecutor"
	class_attribute volatile private explicit_type "Executor"
	init_value " SERIAL_EXECUTOR"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 368055 "InternalHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 800951 // <generalisation>
	  relation 800951 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 800951 // <generalisation>
	    b parent class_ref 132023 // Handler
	end

	operation 2055735 "InternalHandler"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2055863 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings({\"unchecked\", \"RawUseOfParameterizedType\"})
@Override
"
	  
	  
	  
	end
      end

      classrelation 800439 // sHandler (<unidirectional association>)
	relation 800439 --->
	  a role_name "sHandler" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 800439 // sHandler (<unidirectional association>)
	  b parent class_ref 368055 // InternalHandler
      end

      class 368183 "WorkerRunnable"
	abstract visibility private 
	nformals 2
	formal name "Params" type "" explicit_default_value ""
	  explicit_extends ""
	formal name "Result" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 801079 // <realization>
	  relation 801079 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}<Result>"
	      classrelation_ref 801079 // <realization>
	    b parent class_ref 212791 // Callable
	end

	attribute 805943 "mParams"
	  package explicit_type "Params"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 800567 // mWorker (<unidirectional association>)
	relation 800567 --->
	  a role_name "mWorker" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Params, Result> ${name}${value};
"
	    classrelation_ref 800567 // mWorker (<unidirectional association>)
	  b parent class_ref 368183 // WorkerRunnable
      end

      attribute 804919 "mFuture"
	const_attribute private explicit_type "Result"
	stereotype "FutureTask"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 368311 "Status"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 805559 "PENDING"
	  public type class_ref 368311 // Status
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Indicates that the task has not been executed yet.
"
	end

	attribute 805687 "RUNNING"
	  public type class_ref 368311 // Status
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Indicates that the task is running.
"
	end

	attribute 805815 "FINISHED"
	  public type class_ref 368311 // Status
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Indicates that {@link AsyncTask#onPostExecute} has finished.
"
	end
      end

      classrelation 800695 // mStatus (<unidirectional association>)
	relation 800695 --->
	  a role_name "mStatus" init_value " Status.PENDING" volatile private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 800695 // mStatus (<unidirectional association>)
	  b parent class_ref 368311 // Status
      end

      attribute 805047 "mCancelled"
	const_attribute private explicit_type "AtomicBoolean"
	init_value " new AtomicBoolean()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 805175 "mTaskInvoked"
	const_attribute private explicit_type "AtomicBoolean"
	init_value " new AtomicBoolean()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 368439 "SerialExecutor"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 800823 // <realization>
	  relation 800823 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 800823 // <realization>
	    b parent class_ref 343479 // Executor
	end

	attribute 805303 "mTasks"
	  const_attribute package explicit_type "Runnable"
	  init_value " new ArrayDeque<Runnable>()"
	  stereotype "ArrayDeque"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 805431 "mActive"
	  package explicit_type "Runnable"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 2052791 "execute"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "r" explicit_type "Runnable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2052919 "scheduleNext"
	  protected explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 2053047 "getHandler"
	class_operation private return_type class_ref 132023 // Handler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2053175 "setDefaultExecutor"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "exec" explicit_type "Executor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2053303 "AsyncTask"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new asynchronous task. This constructor must be invoked on the UI thread."
      end

      operation 2053431 "postResultIfNotInvoked"
	private explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "Result"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2053559 "postResult"
	private explicit_return_type "Result"
	nparams 1
	  param inout name "result" explicit_type "Result"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2053687 "getStatus"
	public return_type class_ref 368311 // Status
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current status of this task.

@return The current status."
      end

      operation 2053815 "doInBackground"
	abstract protected explicit_return_type "Result"
	nparams 1
	  param inout name "" explicit_type "Params...params"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@WorkerThread
"
	
	
	
	comment "Override this method to perform a computation on a background thread. The
specified parameters are the parameters passed to {@link #execute}
by the caller of this task.

This method can call {@link #publishProgress} to publish updates
on the UI thread.

@param params The parameters of the task.

@return A result, defined by the subclass of this task.

@see #onPreExecute()
@see #onPostExecute
@see #publishProgress"
      end

      operation 2053943 "onPreExecute"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Runs on the UI thread before {@link #doInBackground}.

@see #onPostExecute
@see #doInBackground"
      end

      operation 2054071 "onPostExecute"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "Result"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"UnusedDeclaration\"})
@MainThread
"
	
	
	
	comment "<p>Runs on the UI thread after {@link #doInBackground}. The
specified result is the value returned by {@link #doInBackground}.</p>

<p>This method won't be invoked if the task was cancelled.</p>

@param result The result of the operation computed by {@link #doInBackground}.

@see #onPreExecute
@see #doInBackground
@see #onCancelled(Object) "
      end

      operation 2054199 "onProgressUpdate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "" explicit_type "Progress...values"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"UnusedDeclaration\"})
@MainThread
"
	
	
	
	comment "Runs on the UI thread after {@link #publishProgress} is invoked.
The specified values are the values passed to {@link #publishProgress}.

@param values The values indicating progress.

@see #publishProgress
@see #doInBackground"
      end

      operation 2054327 "onCancelled"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "Result"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"UnusedParameters\"})
@MainThread
"
	
	
	
	comment "<p>Runs on the UI thread after {@link #cancel(boolean)} is invoked and
{@link #doInBackground(Object[])} has finished.</p>

<p>The default implementation simply invokes {@link #onCancelled()} and
ignores the result. If you write your own implementation, do not call
<code>super.onCancelled(result)</code>.</p>

@param result The result, if any, computed in
              {@link #doInBackground(Object[])}, can be null

@see #cancel(boolean)
@see #isCancelled()"
      end

      operation 2054455 "onCancelled"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "<p>Applications should preferably override {@link #onCancelled(Object)}.
This method is invoked by the default implementation of
{@link #onCancelled(Object)}.</p>

<p>Runs on the UI thread after {@link #cancel(boolean)} is invoked and
{@link #doInBackground(Object[])} has finished.</p>

@see #onCancelled(Object) 
@see #cancel(boolean)
@see #isCancelled()"
      end

      operation 2054583 "isCancelled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this task was cancelled before it completed
normally. If you are calling {@link #cancel(boolean)} on the task,
the value returned by this method should be checked periodically from
{@link #doInBackground(Object[])} to end the task as soon as possible.

@return <tt>true</tt> if task was cancelled before it completed

@see #cancel(boolean)"
      end

      operation 2054711 "cancel"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "mayInterruptIfRunning" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Attempts to cancel execution of this task.  This attempt will
fail if the task has already completed, already been cancelled,
or could not be cancelled for some other reason. If successful,
and this task has not started when <tt>cancel</tt> is called,
this task should never run. If the task has already started,
then the <tt>mayInterruptIfRunning</tt> parameter determines
whether the thread executing this task should be interrupted in
an attempt to stop the task.</p>

<p>Calling this method will result in {@link #onCancelled(Object)} being
invoked on the UI thread after {@link #doInBackground(Object[])}
returns. Calling this method guarantees that {@link #onPostExecute(Object)}
is never invoked. After invoking this method, you should check the
value returned by {@link #isCancelled()} periodically from
{@link #doInBackground(Object[])} to finish the task as early as
possible.</p>

@param mayInterruptIfRunning <tt>true</tt> if the thread executing this
       task should be interrupted; otherwise, in-progress tasks are allowed
       to complete.

@return <tt>false</tt> if the task could not be cancelled,
        typically because it has already completed normally;
        <tt>true</tt> otherwise

@see #isCancelled()
@see #onCancelled(Object)"
      end

      operation 2054839 "get"
	public explicit_return_type "Result"
	nparams 0
	nexceptions 2
	  explicit_exception "InterruptedException"
	  explicit_exception "ExecutionException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits if necessary for the computation to complete, and then
retrieves its result.

@return The computed result.

@throws CancellationException If the computation was cancelled.
@throws ExecutionException If the computation threw an exception.
@throws InterruptedException If the current thread was interrupted
        while waiting."
      end

      operation 2054967 "get"
	public explicit_return_type "Result"
	nparams 2
	  param in name "timeout" explicit_type "long"
	  param inout name "unit" explicit_type "TimeUnit"
	nexceptions 3
	  explicit_exception "InterruptedException"
	  explicit_exception "ExecutionException"
	  explicit_exception "TimeoutException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits if necessary for at most the given time for the computation
to complete, and then retrieves its result.

@param timeout Time to wait before cancelling the operation.
@param unit The time unit for the timeout.

@return The computed result.

@throws CancellationException If the computation was cancelled.
@throws ExecutionException If the computation threw an exception.
@throws InterruptedException If the current thread was interrupted
        while waiting.
@throws TimeoutException If the wait timed out."
      end

      operation 2055095 "execute"
	public return_type class_ref 367927 // AsyncTask
	nparams 1
	  param inout name "" explicit_type "Params...params"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Params, Progress, Result> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Executes the task with the specified parameters. The task returns
itself (this) so that the caller can keep a reference to it.

<p>Note: this function schedules the task on a queue for a single background
thread or pool of threads depending on the platform version.  When first
introduced, AsyncTasks were executed serially on a single background thread.
Starting with {@link android.os.Build.VERSION_CODES#DONUT}, this was changed
to a pool of threads allowing multiple tasks to operate in parallel. Starting
{@link android.os.Build.VERSION_CODES#HONEYCOMB}, tasks are back to being
executed on a single thread to avoid common application errors caused
by parallel execution.  If you truly want parallel execution, you can use
the {@link #executeOnExecutor} version of this method
with {@link #THREAD_POOL_EXECUTOR}; however, see commentary there for warnings
on its use.

<p>This method must be invoked on the UI thread.

@param params The parameters of the task.

@return This instance of AsyncTask.

@throws IllegalStateException If {@link #getStatus()} returns either
        {@link AsyncTask.Status#RUNNING} or {@link AsyncTask.Status#FINISHED}.

@see #executeOnExecutor(java.util.concurrent.Executor, Object[])
@see #execute(Runnable)"
      end

      operation 2055223 "executeOnExecutor"
	public return_type class_ref 367927 // AsyncTask
	nparams 2
	  param inout name "exec" explicit_type "Executor"
	  param inout name "" explicit_type "Params...params"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Params, Progress, Result> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Executes the task with the specified parameters. The task returns
itself (this) so that the caller can keep a reference to it.

<p>This method is typically used with {@link #THREAD_POOL_EXECUTOR} to
allow multiple tasks to run in parallel on a pool of threads managed by
AsyncTask, however you can also use your own {@link Executor} for custom
behavior.

<p><em>Warning:</em> Allowing multiple tasks to run in parallel from
a thread pool is generally <em>not</em> what one wants, because the order
of their operation is not defined.  For example, if these tasks are used
to modify any state in common (such as writing a file due to a button click),
there are no guarantees on the order of the modifications.
Without careful work it is possible in rare cases for the newer version
of the data to be over-written by an older one, leading to obscure data
loss and stability issues.  Such changes are best
executed in serial; to guarantee such work is serialized regardless of
platform version you can use this function with {@link #SERIAL_EXECUTOR}.

<p>This method must be invoked on the UI thread.

@param exec The executor to use.  {@link #THREAD_POOL_EXECUTOR} is available as a
             convenient process-wide thread pool for tasks that are loosely coupled.
@param params The parameters of the task.

@return This instance of AsyncTask.

@throws IllegalStateException If {@link #getStatus()} returns either
        {@link AsyncTask.Status#RUNNING} or {@link AsyncTask.Status#FINISHED}.

@see #execute(Object[])"
      end

      operation 2055351 "execute"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "runnable" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Convenience version of {@link #execute(Object...)} for use with
a simple Runnable object. See {@link #execute(Object[])} for more
information on the order of execution.

@see #execute(Object[])
@see #executeOnExecutor(java.util.concurrent.Executor, Object[])"
      end

      operation 2055479 "publishProgress"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "" explicit_type "Progress...values"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@WorkerThread
"
	
	
	
	comment "This method can be invoked from {@link #doInBackground} to
publish updates on the UI thread while the background computation is
still running. Each call to this method will trigger the execution of
{@link #onProgressUpdate} on the UI thread.

{@link #onProgressUpdate} will not be called if the task has been
canceled.

@param values The progress values to update the UI with.

@see #onProgressUpdate
@see #doInBackground"
      end

      operation 2055607 "finish"
	private explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "Result"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 368567 "AsyncTaskResult"
	visibility private 
	nformals 1
	formal name "Data" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SuppressWarnings({\"RawUseOfParameterizedType\"})
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 801207 // mTask (<unidirectional association>)
	  relation 801207 --->
	    a role_name "mTask" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 801207 // mTask (<unidirectional association>)
	    b parent class_ref 367927 // AsyncTask
	end

	attribute 806071 "mData"
	  const_attribute package explicit_type "Data"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 2055991 "AsyncTaskResult"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "task" type class_ref 367927 // AsyncTask
	    param inout name "" explicit_type "Data...data"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 399159 "RemoteCallback"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      classrelation 1471287 // <realization>
	relation 1471287 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1471287 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      class 546871 "OnResultListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3866167 "onResult"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "result" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1471415 // mListener (<unidirectional association>)
	relation 1471415 --->
	  a role_name "mListener" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1471415 // mListener (<unidirectional association>)
	  b parent class_ref 546871 // OnResultListener
      end

      classrelation 1471543 // mHandler (<unidirectional association>)
	relation 1471543 --->
	  a role_name "mHandler" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1471543 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      attribute 1677623 "mCallback"
	const_attribute private explicit_type "IRemoteCallback"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3866295 "RemoteCallback"
	public explicit_return_type ""
	nparams 1
	  param inout name "listener" type class_ref 546871 // OnResultListener
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3866423 "RemoteCallback"
	public explicit_return_type ""
	nparams 2
	  param inout name "listener" type class_ref 546871 // OnResultListener
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3866551 "RemoteCallback"
	package explicit_return_type ""
	nparams 1
	  param inout name "parcel" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3866679 "sendResult"
	public explicit_return_type "void"
	nparams 1
	  param in name "result" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3866807 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3866935 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1471671 // CREATOR (<unidirectional association>)
	relation 1471671 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<RemoteCallback>() {
        public RemoteCallback createFromParcel(Parcel parcel) {
            return new RemoteCallback(parcel);
        }

        public RemoteCallback[] newArray(int size) {
            return new RemoteCallback[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RemoteCallback> ${name}${value};
"
	    classrelation_ref 1471671 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end

    class 401207 "PooledStringWriter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Helper class for writing pooled strings into a Parcel.  It must be used
in conjunction with {@link android.os.PooledStringReader}.  This really needs
to be pushed in to Parcel itself, but doing that is...  complicated.
@hide"
      classrelation 1466551 // mOut (<unidirectional association>)
	relation 1466551 --->
	  a role_name "mOut" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1466551 // mOut (<unidirectional association>)
	  b parent class_ref 137527 // Parcel
      end

      classrelation 1466679 // mPool (<unidirectional association>)
	relation 1466679 --->
	  stereotype "HashMap"
	  a role_name "mPool" const_relation private
	    comment "Book-keeping for writing pooled string objects, mapping strings we have
written so far to their index in the pool.  We deliberately use HashMap
here since performance is critical, we expect to be doing lots of adds to
it, and it is only a temporary object so its overall memory footprint is
not a signifciant issue.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Integer> ${name}${value};
"
	    classrelation_ref 1466679 // mPool (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1661879 "mStart"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Book-keeping for writing pooling string objects, indicating where we
started writing the pool, which is where we need to ultimately store
how many strings are in the pool.
"
      end

      attribute 1662007 "mNext"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Next available index in the pool.
"
      end

      operation 3844279 "PooledStringWriter"
	public explicit_return_type ""
	nparams 1
	  param inout name "out" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3844407 "writeString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "str" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3844535 "getStringCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3844663 "finish"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 401463 "PooledStringReader"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Helper class for reading pooling strings from a Parcel.  It must be used
in conjunction with {@link android.os.PooledStringWriter}.  This really needs
to be pushed in to Parcel itself, but doing that is...  complicated.
@hide"
      classrelation 1466295 // mIn (<unidirectional association>)
	relation 1466295 --->
	  a role_name "mIn" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1466295 // mIn (<unidirectional association>)
	  b parent class_ref 137527 // Parcel
      end

      classrelation 1466423 // mPool (<unidirectional association>)
	relation 1466423 --->
	  a role_name "mPool" multiplicity "[]" const_relation private
	    comment "
The pool of strings we have collected so far.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1466423 // mPool (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3843895 "PooledStringReader"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3844023 "getStringCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3844151 "readString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 412215 "ParcelUuid"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is a Parcelable wrapper around {@link UUID} which is an
immutable representation of a 128-bit universally unique
identifier."
      classrelation 1464887 // <realization>
	relation 1464887 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1464887 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1661751 "mUuid"
	const_attribute private explicit_type "UUID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3832503 "ParcelUuid"
	public explicit_return_type ""
	nparams 1
	  param inout name "uuid" explicit_type "UUID"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor creates a ParcelUuid instance from the
given {@link UUID}.

@param uuid UUID"
      end

      operation 3832631 "fromString"
	class_operation public return_type class_ref 412215 // ParcelUuid
	nparams 1
	  param inout name "uuid" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new ParcelUuid from a string representation of {@link UUID}.

@param uuid
           the UUID string to parse.
@return a ParcelUuid instance.
@throws NullPointerException
            if {@code uuid} is {@code null}.
@throws IllegalArgumentException
            if {@code uuid} is not formatted correctly."
      end

      operation 3832759 "getUuid"
	public explicit_return_type "UUID"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the {@link UUID} represented by the ParcelUuid.

@return UUID contained in the ParcelUuid."
      end

      operation 3832887 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string representation of the ParcelUuid
For example: 0000110B-0000-1000-8000-00805F9B34FB will be the return value.

@return a String instance."
      end

      operation 3833015 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3833143 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this ParcelUuid to another object for equality. If {@code object}
is not {@code null}, is a ParcelUuid instance, and all bits are equal, then
{@code true} is returned.

@param object
           the {@code Object} to compare to.
@return {@code true} if this ParcelUuid is equal to {@code object}
        or {@code false} if not."
      end

      classrelation 1465015 // CREATOR (<unidirectional association>)
	relation 1465015 --->
	  a role_name "CREATOR" init_value "
               new Parcelable.Creator<ParcelUuid>() {
        public ParcelUuid createFromParcel(Parcel source) {
            long mostSigBits = source.readLong();
            long leastSigBits = source.readLong();
            UUID uuid = new UUID(mostSigBits, leastSigBits);
            return new ParcelUuid(uuid);
        }

        public ParcelUuid[] newArray(int size) {
            return new ParcelUuid[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ParcelUuid> ${name}${value};
"
	    classrelation_ref 1465015 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3833271 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3833399 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 426679 "PatternMatcher"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A simple pattern matcher, which is safe to use on untrusted data: it does
not provide full reg-exp support, only simple globbing that can not be
used maliciously."
      classrelation 1118775 // <realization>
	relation 1118775 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1118775 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1154231 "PATTERN_LITERAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Pattern type: the given pattern must exactly match the string it is
tested against.
"
      end

      attribute 1154359 "PATTERN_PREFIX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Pattern type: the given pattern must match the
beginning of the string it is tested against.
"
      end

      attribute 1154487 "PATTERN_SIMPLE_GLOB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Pattern type: the given pattern is interpreted with a
simple glob syntax for matching against the string it is tested against.
In this syntax, you can use the '*' character to match against zero or
more occurrences of the character immediately before.  If the
character before it is '.' it will match any character.  The character
'\\' can be used as an escape.  This essentially provides only the '*'
wildcard part of a normal regexp. 
"
      end

      classrelation 1118903 // mPattern (<unidirectional association>)
	relation 1118903 --->
	  a role_name "mPattern" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1118903 // mPattern (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1154615 "mType"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2772919 "PatternMatcher"
	public explicit_return_type ""
	nparams 2
	  param inout name "pattern" type class_ref 129591 // String
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2773047 "getPath"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2773175 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2773303 "match"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "str" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2773431 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2773559 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2773687 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2773815 "PatternMatcher"
	public explicit_return_type ""
	nparams 1
	  param inout name "src" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1119031 // CREATOR (<unidirectional association>)
	relation 1119031 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<PatternMatcher>() {
        public PatternMatcher createFromParcel(Parcel source) {
            return new PatternMatcher(source);
        }

        public PatternMatcher[] newArray(int size) {
            return new PatternMatcher[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PatternMatcher> ${name}${value};
"
	    classrelation_ref 1119031 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 2773943 "matchPattern"
	class_operation package explicit_return_type "boolean"
	nparams 3
	  param inout name "pattern" type class_ref 129591 // String
	  param inout name "match" type class_ref 129591 // String
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 467639 "ServiceSpecificException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An exception specific to a service.

<p>This exception includes an error code specific to the throwing
service.  This is mostly used by system services to indicate
domain specific error conditions.</p>

<p>Since these exceptions are designed to be passed through Binder
interfaces, and to be generated by native-code Binder services,
they do not support exception chaining.</p>

@hide"
      classrelation 1472951 // <generalisation>
	relation 1472951 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1472951 // <generalisation>
	  b parent class_ref 446775 // RuntimeException
      end

      attribute 1678391 "errorCode"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3871287 "ServiceSpecificException"
	public explicit_return_type ""
	nparams 2
	  param in name "errorCode" explicit_type "int"
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3871415 "ServiceSpecificException"
	public explicit_return_type ""
	nparams 1
	  param in name "errorCode" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 475191 "ConditionVariable"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class that implements the condition variable locking paradigm.

<p>
This differs from the built-in java.lang.Object wait() and notify()
in that this class contains the condition to wait on itself.  That means
open(), close() and block() are sticky.  If open() is called before block(),
block() will not block, and instead return immediately.

<p>
This class uses itself as the object to wait on, so if you wait()
or notify() on a ConditionVariable, the results are undefined."
      attribute 1628983 "mCondition"
	volatile private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3748279 "ConditionVariable"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the ConditionVariable in the default closed state."
      end

      operation 3748407 "ConditionVariable"
	public explicit_return_type ""
	nparams 1
	  param inout name "state" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the ConditionVariable with the given state.

<p>
Pass true for opened and false for closed."
      end

      operation 3748535 "open"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open the condition, and release all threads that are blocked.

<p>
Any threads that later approach block() will not block unless close()
is called."
      end

      operation 3748663 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the condition to the closed state.

<p>
Any threads that call block() will block until someone calls open."
      end

      operation 3748791 "block"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Block the current thread until the condition is opened.

<p>
If the condition is already opened, return immediately."
      end

      operation 3748919 "block"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "timeout" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Block the current thread until the condition is opened or until
timeout milliseconds have passed.

<p>
If the condition is already opened, return immediately.

@param timeout the maximum time to wait in milliseconds.

@return true if the condition was opened, false if the call returns
because of the timeout."
      end
    end

    class 495927 "Vibrator"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class that operates the vibrator on the device.
<p>
If your process exits, any vibration you started will stop.
</p>

To obtain an instance of the system vibrator, call
{@link Context#getSystemService} with {@link Context#VIBRATOR_SERVICE} as the argument."
      classrelation 1300791 // mPackageName (<unidirectional association>)
	relation 1300791 --->
	  a role_name "mPackageName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1300791 // mPackageName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3281463 "Vibrator"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide to prevent subclassing from outside of the framework"
      end

      operation 3281591 "Vibrator"
	protected explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide to prevent subclassing from outside of the framework"
      end

      operation 3281719 "hasVibrator"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the hardware has a vibrator.

@return True if the hardware has a vibrator, else false."
      end

      operation 3281847 "vibrate"
	public explicit_return_type "void"
	nparams 1
	  param in name "milliseconds" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Vibrate constantly for the specified period of time.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#VIBRATE}.

@param milliseconds The number of milliseconds to vibrate."
      end

      operation 3281975 "vibrate"
	public explicit_return_type "void"
	nparams 2
	  param in name "milliseconds" explicit_type "long"
	  param inout name "attributes" type class_ref 385335 // AudioAttributes
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Vibrate constantly for the specified period of time.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#VIBRATE}.

@param milliseconds The number of milliseconds to vibrate.
@param attributes {@link AudioAttributes} corresponding to the vibration. For example,
       specify {@link AudioAttributes#USAGE_ALARM} for alarm vibrations or
       {@link AudioAttributes#USAGE_NOTIFICATION_RINGTONE} for
       vibrations associated with incoming calls."
      end

      operation 3282103 "vibrate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pattern" explicit_type "long"
	  param in name "repeat" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Vibrate with a given pattern.

<p>
Pass in an array of ints that are the durations for which to turn on or off
the vibrator in milliseconds.  The first value indicates the number of milliseconds
to wait before turning the vibrator on.  The next value indicates the number of milliseconds
for which to keep the vibrator on before turning it off.  Subsequent values alternate
between durations in milliseconds to turn the vibrator off or to turn the vibrator on.
</p><p>
To cause the pattern to repeat, pass the index into the pattern array at which
to start the repeat, or -1 to disable repeating.
</p>
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#VIBRATE}.

@param pattern an array of longs of times for which to turn the vibrator on or off.
@param repeat the index into pattern at which to repeat, or -1 if
       you don't want to repeat."
      end

      operation 3282231 "vibrate"
	public explicit_return_type "void"
	nparams 3
	  param inout name "pattern" explicit_type "long"
	  param in name "repeat" explicit_type "int"
	  param inout name "attributes" type class_ref 385335 // AudioAttributes
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Vibrate with a given pattern.

<p>
Pass in an array of ints that are the durations for which to turn on or off
the vibrator in milliseconds.  The first value indicates the number of milliseconds
to wait before turning the vibrator on.  The next value indicates the number of milliseconds
for which to keep the vibrator on before turning it off.  Subsequent values alternate
between durations in milliseconds to turn the vibrator off or to turn the vibrator on.
</p><p>
To cause the pattern to repeat, pass the index into the pattern array at which
to start the repeat, or -1 to disable repeating.
</p>
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#VIBRATE}.

@param pattern an array of longs of times for which to turn the vibrator on or off.
@param repeat the index into pattern at which to repeat, or -1 if
       you don't want to repeat.
@param attributes {@link AudioAttributes} corresponding to the vibration. For example,
       specify {@link AudioAttributes#USAGE_ALARM} for alarm vibrations or
       {@link AudioAttributes#USAGE_NOTIFICATION_RINGTONE} for
       vibrations associated with incoming calls."
      end

      operation 3282359 "vibrate"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "uid" explicit_type "int"
	  param inout name "opPkg" type class_ref 129591 // String
	  param in name "milliseconds" explicit_type "long"
	  param inout name "attributes" type class_ref 385335 // AudioAttributes
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Like {@link #vibrate(long, AudioAttributes)}, but allowing the caller to specify that
the vibration is owned by someone else."
      end

      operation 3282487 "vibrate"
	abstract public explicit_return_type "void"
	nparams 5
	  param in name "uid" explicit_type "int"
	  param inout name "opPkg" type class_ref 129591 // String
	  param inout name "pattern" explicit_type "long"
	  param in name "repeat" explicit_type "int"
	  param inout name "attributes" type class_ref 385335 // AudioAttributes
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Like {@link #vibrate(long[], int, AudioAttributes)}, but allowing the caller to specify that
the vibration is owned by someone else."
      end

      operation 3282615 "cancel"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Turn the vibrator off.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#VIBRATE}."
      end
    end

    class 497335 "RemoteCallbackList"
      visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Takes care of the grunt work of maintaining a list of remote interfaces,
typically for the use of performing callbacks from a
{@link android.app.Service} to its clients.  In particular, this:

<ul>
<li> Keeps track of a set of registered {@link IInterface} callbacks,
taking care to identify them through their underlying unique {@link IBinder}
(by calling {@link IInterface#asBinder IInterface.asBinder()}.
<li> Attaches a {@link IBinder.DeathRecipient IBinder.DeathRecipient} to
each registered interface, so that it can be cleaned out of the list if its
process goes away.
<li> Performs locking of the underlying list of interfaces to deal with
multithreaded incoming calls, and a thread-safe way to iterate over a
snapshot of the list without holding its lock.
</ul>

<p>To use this class, simply create a single instance along with your
service, and call its {@link #register} and {@link #unregister} methods
as client register and unregister with your service.  To call back on to
the registered clients, use {@link #beginBroadcast},
{@link #getBroadcastItem}, and {@link #finishBroadcast}.

<p>If a registered callback's process goes away, this class will take
care of automatically removing it from the list.  If you want to do
additional work in this situation, you can create a subclass that
implements the {@link #onCallbackDied} method."
      classrelation 1304375 // mCallbacks (<unidirectional association>)
	relation 1304375 --->
	  a role_name "mCallbacks" init_value " new ArrayMap<IBinder, Callback>()" package
	    comment "package
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<IBinder, Callback> ${name}${value};
"
	    classrelation_ref 1304375 // mCallbacks (<unidirectional association>)
	  b parent class_ref 156343 // ArrayMap
      end

      classrelation 1304503 // mActiveBroadcast (<unidirectional association>)
	relation 1304503 --->
	  a role_name "mActiveBroadcast" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1304503 // mActiveBroadcast (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      attribute 1392055 "mBroadcastCount"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1392183 "mKilled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 497463 "Callback"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1304631 // <realization>
	  relation 1304631 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1304631 // <realization>
	    b parent class_ref 277943 // DeathRecipient
	end

	attribute 1392311 "mCallback"
	  const_attribute package explicit_type "E"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1304759 // mCookie (<unidirectional association>)
	  relation 1304759 --->
	    a role_name "mCookie" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1304759 // mCookie (<unidirectional association>)
	    b parent class_ref 132663 // Object
	end

	operation 3290167 "Callback"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "callback" explicit_type "E"
	    param inout name "cookie" type class_ref 132663 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3290295 "binderDied"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 3290423 "register"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "callback" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simple version of {@link RemoteCallbackList#register(E, Object)}
that does not take a cookie object."
      end

      operation 3290551 "register"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "callback" explicit_type "E"
	  param inout name "cookie" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new callback to the list.  This callback will remain in the list
until a corresponding call to {@link #unregister} or its hosting process
goes away.  If the callback was already registered (determined by
checking to see if the {@link IInterface#asBinder callback.asBinder()}
object is already in the list), then it will be left as-is.
Registrations are not counted; a single call to {@link #unregister}
will remove a callback after any number calls to register it.

@param callback The callback interface to be added to the list.  Must
not be null -- passing null here will cause a NullPointerException.
Most services will want to check for null before calling this with
an object given from a client, so that clients can't crash the
service with bad data.

@param cookie Optional additional data to be associated with this
callback.

@return Returns true if the callback was successfully added to the list.
Returns false if it was not added, either because {@link #kill} had
previously been called or the callback's process has gone away.

@see #unregister
@see #kill
@see #onCallbackDied"
      end

      operation 3290679 "unregister"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "callback" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove from the list a callback that was previously added with
{@link #register}.  This uses the
{@link IInterface#asBinder callback.asBinder()} object to correctly
find the previous registration.
Registrations are not counted; a single unregister call will remove
a callback after any number calls to {@link #register} for it.

@param callback The callback to be removed from the list.  Passing
null here will cause a NullPointerException, so you will generally want
to check for null before calling.

@return Returns true if the callback was found and unregistered.  Returns
false if the given callback was not found on the list.

@see #register"
      end

      operation 3290807 "kill"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disable this callback list.  All registered callbacks are unregistered,
and the list is disabled so that future calls to {@link #register} will
fail.  This should be used when a Service is stopping, to prevent clients
from registering callbacks after it is stopped.

@see #register"
      end

      operation 3290935 "onCallbackDied"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callback" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Old version of {@link #onCallbackDied(E, Object)} that
does not provide a cookie."
      end

      operation 3291063 "onCallbackDied"
	public explicit_return_type "void"
	nparams 2
	  param inout name "callback" explicit_type "E"
	  param inout name "cookie" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the process hosting a callback in the list has gone away.
The default implementation calls {@link #onCallbackDied(E)}
for backwards compatibility.

@param callback The callback whose process has died.  Note that, since
its process has died, you can not make any calls on to this interface.
You can, however, retrieve its IBinder and compare it with another
IBinder to see if it is the same object.
@param cookie The cookie object original provided to
{@link #register(E, Object)}.

@see #register"
      end

      operation 3291191 "beginBroadcast"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepare to start making calls to the currently registered callbacks.
This creates a copy of the callback list, which you can retrieve items
from using {@link #getBroadcastItem}.  Note that only one broadcast can
be active at a time, so you must be sure to always call this from the
same thread (usually by scheduling with {@link Handler}) or
do your own synchronization.  You must call {@link #finishBroadcast}
when done.

<p>A typical loop delivering a broadcast looks like this:

<pre>
int i = callbacks.beginBroadcast();
while (i &gt; 0) {
    i--;
    try {
        callbacks.getBroadcastItem(i).somethingHappened();
    } catch (RemoteException e) {
        // The RemoteCallbackList will take care of removing
        // the dead object for us.
    }
}
callbacks.finishBroadcast();</pre>

@return Returns the number of callbacks in the broadcast, to be used
with {@link #getBroadcastItem} to determine the range of indices you
can supply.

@see #getBroadcastItem
@see #finishBroadcast"
      end

      operation 3291319 "getBroadcastItem"
	public explicit_return_type "E"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve an item in the active broadcast that was previously started
with {@link #beginBroadcast}.  This can <em>only</em> be called after
the broadcast is started, and its data is no longer valid after
calling {@link #finishBroadcast}.

<p>Note that it is possible for the process of one of the returned
callbacks to go away before you call it, so you will need to catch
{@link RemoteException} when calling on to the returned object.
The callback list itself, however, will take care of unregistering
these objects once it detects that it is no longer valid, so you can
handle such an exception by simply ignoring it.

@param index Which of the registered callbacks you would like to
retrieve.  Ranges from 0 to 1-{@link #beginBroadcast}.

@return Returns the callback interface that you can call.  This will
always be non-null.

@see #beginBroadcast"
      end

      operation 3291447 "getBroadcastCookie"
	public return_type class_ref 132663 // Object
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the cookie associated with the item
returned by {@link #getBroadcastItem(int)}.

@see #getBroadcastItem"
      end

      operation 3291575 "finishBroadcast"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clean up the state of a broadcast previously initiated by calling
{@link #beginBroadcast}.  This must always be called when you are done
with a broadcast.

@see #beginBroadcast"
      end

      operation 3291703 "getRegisteredCallbackCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of registered callbacks. Note that the number of registered
callbacks may differ from the value returned by {@link #beginBroadcast()} since
the former returns the number of callbacks registered at the time of the call
and the second the number of callback to which the broadcast will be delivered.
<p>
This function is useful to decide whether to schedule a broadcast if this
requires doing some work which otherwise would not be performed.
</p>

@return The size."
      end
    end

    class 500279 "PowerManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class gives you control of the power state of the device.

<p>
<b>Device battery life will be significantly affected by the use of this API.</b>
Do not acquire {@link WakeLock}s unless you really need them, use the minimum levels
possible, and be sure to release them as soon as possible.
</p><p>
You can obtain an instance of this class by calling
{@link android.content.Context#getSystemService(java.lang.String) Context.getSystemService()}.
</p><p>
The primary API you'll use is {@link #newWakeLock(int, String) newWakeLock()}.
This will create a {@link PowerManager.WakeLock} object.  You can then use methods
on the wake lock object to control the power state of the device.
</p><p>
In practice it's quite simple:
{@samplecode
PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);
PowerManager.WakeLock wl = pm.newWakeLock(PowerManager.SCREEN_DIM_WAKE_LOCK, \"My Tag\");
wl.acquire();
  ..screen will stay on during this section..
wl.release();
}
</p><p>
The following wake lock levels are defined, with varying effects on system power.
<i>These levels are mutually exclusive - you may only specify one of them.</i>

<table>
    <tr><th>Flag Value</th> 
    <th>CPU</th> <th>Screen</th> <th>Keyboard</th></tr>

    <tr><td>{@link #PARTIAL_WAKE_LOCK}</td>
        <td>On*</td> <td>Off</td> <td>Off</td> 
    </tr>
    
    <tr><td>{@link #SCREEN_DIM_WAKE_LOCK}</td>
        <td>On</td> <td>Dim</td> <td>Off</td> 
    </tr>

    <tr><td>{@link #SCREEN_BRIGHT_WAKE_LOCK}</td>
        <td>On</td> <td>Bright</td> <td>Off</td> 
    </tr>
    
    <tr><td>{@link #FULL_WAKE_LOCK}</td>
        <td>On</td> <td>Bright</td> <td>Bright</td> 
    </tr>
</table>
</p><p>
*<i>If you hold a partial wake lock, the CPU will continue to run, regardless of any
display timeouts or the state of the screen and even after the user presses the power button.
In all other wake locks, the CPU will run, but the user can still put the device to sleep
using the power button.</i>
</p><p>
In addition, you can add two more flags, which affect behavior of the screen only.
<i>These flags have no effect when combined with a {@link #PARTIAL_WAKE_LOCK}.</i></p>

<table>
    <tr><th>Flag Value</th> <th>Description</th></tr>

    <tr><td>{@link #ACQUIRE_CAUSES_WAKEUP}</td>
        <td>Normal wake locks don't actually turn on the illumination.  Instead, they cause
        the illumination to remain on once it turns on (e.g. from user activity).  This flag
        will force the screen and/or keyboard to turn on immediately, when the WakeLock is
        acquired.  A typical use would be for notifications which are important for the user to
        see immediately.</td> 
    </tr>
    
    <tr><td>{@link #ON_AFTER_RELEASE}</td>
        <td>If this flag is set, the user activity timer will be reset when the WakeLock is
        released, causing the illumination to remain on a bit longer.  This can be used to 
        reduce flicker if you are cycling between wake lock conditions.</td> 
    </tr>
</table>
<p>
Any application using a WakeLock must request the {@code android.permission.WAKE_LOCK}
permission in an {@code <uses-permission>} element of the application's manifest.
</p>"
      class 500407 "WakeLock"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1666103 "mFlags"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1468983 // mTag (<unidirectional association>)
	  relation 1468983 --->
	    a role_name "mTag" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1468983 // mTag (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1469111 // mPackageName (<unidirectional association>)
	  relation 1469111 --->
	    a role_name "mPackageName" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1469111 // mPackageName (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1469239 // mToken (<unidirectional association>)
	  relation 1469239 --->
	    a role_name "mToken" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1469239 // mToken (<unidirectional association>)
	    b parent class_ref 132919 // IBinder
	end

	attribute 1666231 "mCount"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1666359 "mRefCounted"
	  private explicit_type "boolean"
	  init_value " true"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1666487 "mHeld"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1469367 // mWorkSource (<unidirectional association>)
	  relation 1469367 --->
	    a role_name "mWorkSource" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1469367 // mWorkSource (<unidirectional association>)
	    b parent class_ref 345527 // WorkSource
	end

	classrelation 1469495 // mHistoryTag (<unidirectional association>)
	  relation 1469495 --->
	    a role_name "mHistoryTag" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1469495 // mHistoryTag (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1469623 // mTraceName (<unidirectional association>)
	  relation 1469623 --->
	    a role_name "mTraceName" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1469623 // mTraceName (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1666615 "mReleaser"
	  const_attribute private explicit_type "Runnable"
	  init_value " new Runnable() {
            public void run() {
                release();
            }
        }"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3848503 "WakeLock"
	  package explicit_return_type ""
	  nparams 3
	    param in name "flags" explicit_type "int"
	    param inout name "tag" type class_ref 129591 // String
	    param inout name "packageName" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3848631 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "Throwable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3848759 "setReferenceCounted"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "value" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets whether this WakeLock is reference counted.
<p>
Wake locks are reference counted by default.  If a wake lock is
reference counted, then each call to {@link #acquire()} must be
balanced by an equal number of calls to {@link #release()}.  If a wake
lock is not reference counted, then one call to {@link #release()} is
sufficient to undo the effect of all previous calls to {@link #acquire()}.
</p>

@param value True to make the wake lock reference counted, false to
make the wake lock non-reference counted."
	end

	operation 3848887 "acquire"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Acquires the wake lock.
<p>
Ensures that the device is on at the level requested when
the wake lock was created.
</p>"
	end

	operation 3849015 "acquire"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "timeout" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Acquires the wake lock with a timeout.
<p>
Ensures that the device is on at the level requested when
the wake lock was created.  The lock will be released after the given timeout
expires.
</p>

@param timeout The timeout after which to release the wake lock, in milliseconds."
	end

	operation 3849143 "acquireLocked"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3849271 "release"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Releases the wake lock.
<p>
This method releases your claim to the CPU or screen being on.
The screen may turn off shortly after you release the wake lock, or it may
not if there are other wake locks still held.
</p>"
	end

	operation 3849399 "release"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Releases the wake lock with flags to modify the release behavior.
<p>
This method releases your claim to the CPU or screen being on.
The screen may turn off shortly after you release the wake lock, or it may
not if there are other wake locks still held.
</p>

@param flags Combination of flag values to modify the release behavior.
Currently only {@link #RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY} is supported.
Passing 0 is equivalent to calling {@link #release()}."
	end

	operation 3849527 "isHeld"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if the wake lock has been acquired but not yet released.

@return True if the wake lock is held."
	end

	operation 3849655 "setWorkSource"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "ws" type class_ref 345527 // WorkSource
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the work source associated with the wake lock.
<p>
The work source is used to determine on behalf of which application
the wake lock is being held.  This is useful in the case where a
service is performing work on behalf of an application so that the
cost of that work can be accounted to the application.
</p>

@param ws The work source, or null if none."
	end

	operation 3849783 "setTag"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "tag" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3849911 "setHistoryTag"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "tag" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3850039 "setUnimportantForLogging"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "state" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 3850167 "toString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 1466807 // TAG (<unidirectional association>)
	relation 1466807 --->
	  a role_name "TAG" init_value " \"PowerManager\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1466807 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1662135 "PARTIAL_WAKE_LOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " NOTE: Wake lock levels were previously defined as a bit field, except that only a few
combinations were actually supported so the bit field was removed.  This explains
why the numbering scheme is so odd.  If adding a new wake lock level, any unused
value can be used.


Wake lock level: Ensures that the CPU is running; the screen and keyboard
backlight will be allowed to go off.
<p>
If the user presses the power button, then the screen will be turned off
but the CPU will be kept on until all partial wake locks have been released.
</p>
"
      end

      attribute 1662263 "SCREEN_DIM_WAKE_LOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000006"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wake lock level: Ensures that the screen is on (but may be dimmed);
the keyboard backlight will be allowed to go off.
<p>
If the user presses the power button, then the {@link #SCREEN_DIM_WAKE_LOCK} will be
implicitly released by the system, causing both the screen and the CPU to be turned off.
Contrast with {@link #PARTIAL_WAKE_LOCK}.
</p>

@deprecated Most applications should use
{@link android.view.WindowManager.LayoutParams#FLAG_KEEP_SCREEN_ON} instead
of this type of wake lock, as it will be correctly managed by the platform
as the user moves between applications and doesn't require a special permission.
"
      end

      attribute 1662391 "SCREEN_BRIGHT_WAKE_LOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000000a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wake lock level: Ensures that the screen is on at full brightness;
the keyboard backlight will be allowed to go off.
<p>
If the user presses the power button, then the {@link #SCREEN_BRIGHT_WAKE_LOCK} will be
implicitly released by the system, causing both the screen and the CPU to be turned off.
Contrast with {@link #PARTIAL_WAKE_LOCK}.
</p>

@deprecated Most applications should use
{@link android.view.WindowManager.LayoutParams#FLAG_KEEP_SCREEN_ON} instead
of this type of wake lock, as it will be correctly managed by the platform
as the user moves between applications and doesn't require a special permission.
"
      end

      attribute 1662519 "FULL_WAKE_LOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000001a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wake lock level: Ensures that the screen and keyboard backlight are on at
full brightness.
<p>
If the user presses the power button, then the {@link #FULL_WAKE_LOCK} will be
implicitly released by the system, causing both the screen and the CPU to be turned off.
Contrast with {@link #PARTIAL_WAKE_LOCK}.
</p>

@deprecated Most applications should use
{@link android.view.WindowManager.LayoutParams#FLAG_KEEP_SCREEN_ON} instead
of this type of wake lock, as it will be correctly managed by the platform
as the user moves between applications and doesn't require a special permission.
"
      end

      attribute 1662647 "PROXIMITY_SCREEN_OFF_WAKE_LOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wake lock level: Turns the screen off when the proximity sensor activates.
<p>
If the proximity sensor detects that an object is nearby, the screen turns off
immediately.  Shortly after the object moves away, the screen turns on again.
</p><p>
A proximity wake lock does not prevent the device from falling asleep
unlike {@link #FULL_WAKE_LOCK}, {@link #SCREEN_BRIGHT_WAKE_LOCK} and
{@link #SCREEN_DIM_WAKE_LOCK}.  If there is no user activity and no other
wake locks are held, then the device will fall asleep (and lock) as usual.
However, the device will not fall asleep while the screen has been turned off
by the proximity sensor because it effectively counts as ongoing user activity.
</p><p>
Since not all devices have proximity sensors, use {@link #isWakeLockLevelSupported}
to determine whether this wake lock level is supported.
</p><p>
Cannot be used with {@link #ACQUIRE_CAUSES_WAKEUP}.
</p>
"
      end

      attribute 1662775 "DOZE_WAKE_LOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wake lock level: Put the screen in a low power state and allow the CPU to suspend
if no other wake locks are held.
<p>
This is used by the dream manager to implement doze mode.  It currently
has no effect unless the power manager is in the dozing state.
</p><p>
Requires the {@link android.Manifest.permission#DEVICE_POWER} permission.
</p>

{@hide}
"
      end

      attribute 1662903 "DRAW_WAKE_LOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wake lock level: Keep the device awake enough to allow drawing to occur.
<p>
This is used by the window manager to allow applications to draw while the
system is dozing.  It currently has no effect unless the power manager is in
the dozing state.
</p><p>
Requires the {@link android.Manifest.permission#DEVICE_POWER} permission.
</p>

{@hide}
"
      end

      attribute 1663031 "WAKE_LOCK_LEVEL_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000ffff"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mask for the wake lock level component of a combined wake lock level and flags integer.

@hide
"
      end

      attribute 1663159 "ACQUIRE_CAUSES_WAKEUP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wake lock flag: Turn the screen on when the wake lock is acquired.
<p>
Normally wake locks don't actually wake the device, they just cause
the screen to remain on once it's already on.  Think of the video player
application as the normal behavior.  Notifications that pop up and want
the device to be on are the exception; use this flag to be like them.
</p><p>
Cannot be used with {@link #PARTIAL_WAKE_LOCK}.
</p>
"
      end

      attribute 1663287 "ON_AFTER_RELEASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wake lock flag: When this wake lock is released, poke the user activity timer
so the screen stays on for a little longer.
<p>
Will not turn the screen on if it is not already on.
See {@link #ACQUIRE_CAUSES_WAKEUP} if you want that.
</p><p>
Cannot be used with {@link #PARTIAL_WAKE_LOCK}.
</p>
"
      end

      attribute 1663415 "UNIMPORTANT_FOR_LOGGING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wake lock flag: This wake lock is not important for logging events.  If a later
wake lock is acquired that is important, it will be considered the one to log.
@hide
"
      end

      attribute 1663543 "RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for {@link WakeLock#release WakeLock.release(int)}: Defer releasing a
{@link #PROXIMITY_SCREEN_OFF_WAKE_LOCK} wake lock until the proximity sensor
indicates that an object is not in close proximity.
"
      end

      attribute 1663671 "BRIGHTNESS_ON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 255"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Brightness value for fully on.
@hide
"
      end

      attribute 1663799 "BRIGHTNESS_OFF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Brightness value for fully off.
@hide
"
      end

      attribute 1663927 "BRIGHTNESS_DEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Brightness value for default policy handling by the system.
@hide
"
      end

      attribute 1664055 "USER_ACTIVITY_EVENT_OTHER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Note: Be sure to update android.os.BatteryStats and PowerManager.h
 if adding or modifying user activity event constants.

User activity event type: Unspecified event type.
@hide
"
      end

      attribute 1664183 "USER_ACTIVITY_EVENT_BUTTON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "User activity event type: Button or key pressed or released.
@hide
"
      end

      attribute 1664311 "USER_ACTIVITY_EVENT_TOUCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "User activity event type: Touch down, move or up.
@hide
"
      end

      attribute 1664439 "USER_ACTIVITY_EVENT_ACCESSIBILITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "User activity event type: Accessibility taking action on behalf of user.
@hide
"
      end

      attribute 1664567 "USER_ACTIVITY_FLAG_NO_CHANGE_LIGHTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "User activity flag: If already dimmed, extend the dim timeout
but do not brighten.  This flag is useful for keeping the screen on
a little longer without causing a visible change such as when
the power key is pressed.
@hide
"
      end

      attribute 1664695 "USER_ACTIVITY_FLAG_INDIRECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "User activity flag: Note the user activity as usual but do not
reset the user activity timeout.  This flag is useful for applying
user activity power hints when interacting with the device indirectly
on a secondary screen while allowing the primary screen to go to sleep.
@hide
"
      end

      attribute 1664823 "GO_TO_SLEEP_REASON_APPLICATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Go to sleep reason code: Going to sleep due by application request.
@hide
"
      end

      attribute 1664951 "GO_TO_SLEEP_REASON_DEVICE_ADMIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Go to sleep reason code: Going to sleep due by request of the
device administration policy.
@hide
"
      end

      attribute 1665079 "GO_TO_SLEEP_REASON_TIMEOUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Go to sleep reason code: Going to sleep due to a screen timeout.
@hide
"
      end

      attribute 1665207 "GO_TO_SLEEP_REASON_LID_SWITCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Go to sleep reason code: Going to sleep due to the lid switch being closed.
@hide
"
      end

      attribute 1665335 "GO_TO_SLEEP_REASON_POWER_BUTTON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Go to sleep reason code: Going to sleep due to the power button being pressed.
@hide
"
      end

      attribute 1665463 "GO_TO_SLEEP_REASON_HDMI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Go to sleep reason code: Going to sleep due to HDMI.
@hide
"
      end

      attribute 1665591 "GO_TO_SLEEP_REASON_SLEEP_BUTTON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Go to sleep reason code: Going to sleep due to the sleep button being pressed.
@hide
"
      end

      attribute 1665719 "GO_TO_SLEEP_FLAG_NO_DOZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Go to sleep flag: Skip dozing state and directly go to full sleep.
@hide
"
      end

      classrelation 1466935 // REBOOT_RECOVERY (<unidirectional association>)
	relation 1466935 --->
	  a role_name "REBOOT_RECOVERY" init_value " \"recovery\"" class_relation const_relation public
	    comment "
The value to pass as the 'reason' argument to reboot() to reboot into
recovery mode for tasks other than applying system updates, such as
doing factory resets.
<p>
Requires the {@link android.Manifest.permission#RECOVERY}
permission (in addition to
{@link android.Manifest.permission#REBOOT}).
</p>
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1466935 // REBOOT_RECOVERY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1467063 // REBOOT_RECOVERY_UPDATE (<unidirectional association>)
	relation 1467063 --->
	  a role_name "REBOOT_RECOVERY_UPDATE" init_value " \"recovery-update\"" class_relation const_relation public
	    comment "
The value to pass as the 'reason' argument to reboot() to reboot into
recovery mode for applying system updates.
<p>
Requires the {@link android.Manifest.permission#RECOVERY}
permission (in addition to
{@link android.Manifest.permission#REBOOT}).
</p>
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1467063 // REBOOT_RECOVERY_UPDATE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1467191 // REBOOT_REQUESTED_BY_DEVICE_OWNER (<unidirectional association>)
	relation 1467191 --->
	  a role_name "REBOOT_REQUESTED_BY_DEVICE_OWNER" init_value " \"deviceowner\"" class_relation const_relation public
	    comment "
The value to pass as the 'reason' argument to reboot() when device owner requests a reboot on
the device.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1467191 // REBOOT_REQUESTED_BY_DEVICE_OWNER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1467319 // REBOOT_SAFE_MODE (<unidirectional association>)
	relation 1467319 --->
	  a role_name "REBOOT_SAFE_MODE" init_value " \"safemode\"" class_relation const_relation public
	    comment "
The 'reason' value used when rebooting in safe mode
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1467319 // REBOOT_SAFE_MODE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1467447 // SHUTDOWN_USER_REQUESTED (<unidirectional association>)
	relation 1467447 --->
	  a role_name "SHUTDOWN_USER_REQUESTED" init_value " \"userrequested\"" class_relation const_relation public
	    comment "
The value to pass as the 'reason' argument to android_reboot().
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1467447 // SHUTDOWN_USER_REQUESTED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1467575 // mContext (<unidirectional association>)
	relation 1467575 --->
	  a role_name "mContext" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1467575 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 1665847 "mService"
	const_attribute package explicit_type "IPowerManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1467703 // mHandler (<unidirectional association>)
	relation 1467703 --->
	  a role_name "mHandler" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1467703 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      attribute 1665975 "mIDeviceIdleController"
	package explicit_type "IDeviceIdleController"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3844791 "PowerManager"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "service" explicit_type "IPowerManager"
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 3844919 "getMinimumScreenBrightnessSetting"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the minimum supported screen brightness setting.
The screen may be allowed to become dimmer than this value but
this is the minimum value that can be set by the user.
@hide"
      end

      operation 3845047 "getMaximumScreenBrightnessSetting"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum supported screen brightness setting.
The screen may be allowed to become dimmer than this value but
this is the maximum value that can be set by the user.
@hide"
      end

      operation 3845175 "getDefaultScreenBrightnessSetting"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the default screen brightness setting.
@hide"
      end

      operation 3845303 "useTwilightAdjustmentFeature"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the twilight service should be used to adjust screen brightness
policy.  This setting is experimental and disabled by default.
@hide"
      end

      operation 3845431 "newWakeLock"
	public return_type class_ref 500407 // WakeLock
	nparams 2
	  param in name "levelAndFlags" explicit_type "int"
	  param inout name "tag" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new wake lock with the specified level and flags.
<p>
The {@code levelAndFlags} parameter specifies a wake lock level and optional flags
combined using the logical OR operator.
</p><p>
The wake lock levels are: {@link #PARTIAL_WAKE_LOCK},
{@link #FULL_WAKE_LOCK}, {@link #SCREEN_DIM_WAKE_LOCK}
and {@link #SCREEN_BRIGHT_WAKE_LOCK}.  Exactly one wake lock level must be
specified as part of the {@code levelAndFlags} parameter.
</p><p>
The wake lock flags are: {@link #ACQUIRE_CAUSES_WAKEUP}
and {@link #ON_AFTER_RELEASE}.  Multiple flags can be combined as part of the
{@code levelAndFlags} parameters.
</p><p>
Call {@link WakeLock#acquire() acquire()} on the object to acquire the
wake lock, and {@link WakeLock#release release()} when you are done.
</p><p>
{@samplecode
PowerManager pm = (PowerManager)mContext.getSystemService(
                                         Context.POWER_SERVICE);
PowerManager.WakeLock wl = pm.newWakeLock(
                                     PowerManager.SCREEN_DIM_WAKE_LOCK
                                     | PowerManager.ON_AFTER_RELEASE,
                                     TAG);
wl.acquire();
// ... do work...
wl.release();
}
</p><p>
Although a wake lock can be created without special permissions,
the {@link android.Manifest.permission#WAKE_LOCK} permission is
required to actually acquire or release the wake lock that is returned.
</p><p class=\"note\">
If using this to keep the screen on, you should strongly consider using
{@link android.view.WindowManager.LayoutParams#FLAG_KEEP_SCREEN_ON} instead.
This window flag will be correctly managed by the platform
as the user moves between applications and doesn't require a special permission.
</p>

@param levelAndFlags Combination of wake lock level and flag values defining
the requested behavior of the WakeLock.
@param tag Your class name (or other tag) for debugging purposes.

@see WakeLock#acquire()
@see WakeLock#release()
@see #PARTIAL_WAKE_LOCK
@see #FULL_WAKE_LOCK
@see #SCREEN_DIM_WAKE_LOCK
@see #SCREEN_BRIGHT_WAKE_LOCK
@see #PROXIMITY_SCREEN_OFF_WAKE_LOCK
@see #ACQUIRE_CAUSES_WAKEUP
@see #ON_AFTER_RELEASE"
      end

      operation 3845559 "validateWakeLockParameters"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "levelAndFlags" explicit_type "int"
	  param inout name "tag" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3845687 "userActivity"
	public explicit_return_type "void"
	nparams 2
	  param in name "when" explicit_type "long"
	  param inout name "noChangeLights" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Notifies the power manager that user activity happened.
<p>
Resets the auto-off timer and brightens the screen if the device
is not asleep.  This is what happens normally when a key or the touch
screen is pressed or when some other user activity occurs.
This method does not wake up the device if it has been put to sleep.
</p><p>
Requires the {@link android.Manifest.permission#DEVICE_POWER} permission.
</p>

@param when The time of the user activity, in the {@link SystemClock#uptimeMillis()}
time base.  This timestamp is used to correctly order the user activity request with
other power management functions.  It should be set
to the timestamp of the input event that caused the user activity.
@param noChangeLights If true, does not cause the keyboard backlight to turn on
because of this event.  This is set when the power key is pressed.
We want the device to stay on while the button is down, but we're about
to turn off the screen so we don't want the keyboard backlight to turn on again.
Otherwise the lights flash on and then off and it looks weird.

@see #wakeUp
@see #goToSleep

@removed Requires signature or system permission.
@deprecated Use {@link #userActivity(long, int, int)}."
      end

      operation 3845815 "userActivity"
	public explicit_return_type "void"
	nparams 3
	  param in name "when" explicit_type "long"
	  param in name "event" explicit_type "int"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Notifies the power manager that user activity happened.
<p>
Resets the auto-off timer and brightens the screen if the device
is not asleep.  This is what happens normally when a key or the touch
screen is pressed or when some other user activity occurs.
This method does not wake up the device if it has been put to sleep.
</p><p>
Requires the {@link android.Manifest.permission#DEVICE_POWER} or
{@link android.Manifest.permission#USER_ACTIVITY} permission.
</p>

@param when The time of the user activity, in the {@link SystemClock#uptimeMillis()}
time base.  This timestamp is used to correctly order the user activity request with
other power management functions.  It should be set
to the timestamp of the input event that caused the user activity.
@param event The user activity event.
@param flags Optional user activity flags.

@see #wakeUp
@see #goToSleep

@hide Requires signature or system permission."
      end

      operation 3845943 "goToSleep"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces the device to go to sleep.
<p>
Overrides all the wake locks that are held.
This is what happens when the power key is pressed to turn off the screen.
</p><p>
Requires the {@link android.Manifest.permission#DEVICE_POWER} permission.
</p>

@param time The time when the request to go to sleep was issued, in the
{@link SystemClock#uptimeMillis()} time base.  This timestamp is used to correctly
order the go to sleep request with other power management functions.  It should be set
to the timestamp of the input event that caused the request to go to sleep.

@see #userActivity
@see #wakeUp

@removed Requires signature permission."
      end

      operation 3846071 "goToSleep"
	public explicit_return_type "void"
	nparams 3
	  param in name "time" explicit_type "long"
	  param in name "reason" explicit_type "int"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces the device to go to sleep.
<p>
Overrides all the wake locks that are held.
This is what happens when the power key is pressed to turn off the screen.
</p><p>
Requires the {@link android.Manifest.permission#DEVICE_POWER} permission.
</p>

@param time The time when the request to go to sleep was issued, in the
{@link SystemClock#uptimeMillis()} time base.  This timestamp is used to correctly
order the go to sleep request with other power management functions.  It should be set
to the timestamp of the input event that caused the request to go to sleep.
@param reason The reason the device is going to sleep.
@param flags Optional flags to apply when going to sleep.

@see #userActivity
@see #wakeUp

@hide Requires signature permission."
      end

      operation 3846199 "wakeUp"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces the device to wake up from sleep.
<p>
If the device is currently asleep, wakes it up, otherwise does nothing.
This is what happens when the power key is pressed to turn on the screen.
</p><p>
Requires the {@link android.Manifest.permission#DEVICE_POWER} permission.
</p>

@param time The time when the request to wake up was issued, in the
{@link SystemClock#uptimeMillis()} time base.  This timestamp is used to correctly
order the wake up request with other power management functions.  It should be set
to the timestamp of the input event that caused the request to wake up.

@see #userActivity
@see #goToSleep

@removed Requires signature permission."
      end

      operation 3846327 "wakeUp"
	public explicit_return_type "void"
	nparams 2
	  param in name "time" explicit_type "long"
	  param inout name "reason" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3846455 "nap"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces the device to start napping.
<p>
If the device is currently awake, starts dreaming, otherwise does nothing.
When the dream ends or if the dream cannot be started, the device will
either wake up or go to sleep depending on whether there has been recent
user activity.
</p><p>
Requires the {@link android.Manifest.permission#DEVICE_POWER} permission.
</p>

@param time The time when the request to nap was issued, in the
{@link SystemClock#uptimeMillis()} time base.  This timestamp is used to correctly
order the nap request with other power management functions.  It should be set
to the timestamp of the input event that caused the request to nap.

@see #wakeUp
@see #goToSleep

@hide Requires signature permission."
      end

      operation 3846583 "boostScreenBrightness"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Boosts the brightness of the screen to maximum for a predetermined
period of time.  This is used to make the screen more readable in bright
daylight for a short duration.
<p>
Requires the {@link android.Manifest.permission#DEVICE_POWER} permission.
</p>

@param time The time when the request to boost was issued, in the
{@link SystemClock#uptimeMillis()} time base.  This timestamp is used to correctly
order the boost request with other power management functions.  It should be set
to the timestamp of the input event that caused the request to boost.

@hide Requires signature permission."
      end

      operation 3846711 "isScreenBrightnessBoosted"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Returns whether the screen brightness is currently boosted to maximum, caused by a call
to {@link #boostScreenBrightness(long)}.
@return {@code True} if the screen brightness is currently boosted. {@code False} otherwise.

@hide"
      end

      operation 3846839 "setBacklightBrightness"
	public explicit_return_type "void"
	nparams 1
	  param in name "brightness" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the brightness of the backlights (screen, keyboard, button).
<p>
Requires the {@link android.Manifest.permission#DEVICE_POWER} permission.
</p>

@param brightness The brightness value from 0 to 255.

@hide Requires signature permission."
      end

      operation 3846967 "isWakeLockLevelSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified wake lock level is supported.

@param level The wake lock level to check.
@return True if the specified wake lock level is supported."
      end

      operation 3847095 "isScreenOn"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns true if the device is in an interactive state.
<p>
For historical reasons, the name of this method refers to the power state of
the screen but it actually describes the overall interactive state of
the device.  This method has been replaced by {@link #isInteractive}.
</p><p>
The value returned by this method only indicates whether the device is
in an interactive state which may have nothing to do with the screen being
on or off.  To determine the actual state of the screen,
use {@link android.view.Display#getState}.
</p>

@return True if the device is in an interactive state.

@deprecated Use {@link #isInteractive} instead."
      end

      operation 3847223 "isInteractive"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the device is in an interactive state.
<p>
When this method returns true, the device is awake and ready to interact
with the user (although this is not a guarantee that the user is actively
interacting with the device just this moment).  The main screen is usually
turned on while in this state.  Certain features, such as the proximity
sensor, may temporarily turn off the screen while still leaving the device in an
interactive state.  Note in particular that the device is still considered
to be interactive while dreaming (since dreams can be interactive) but not
when it is dozing or asleep.
</p><p>
When this method returns false, the device is dozing or asleep and must
be awoken before it will become ready to interact with the user again.  The
main screen is usually turned off while in this state.  Certain features,
such as \"ambient mode\" may cause the main screen to remain on (albeit in a
low power state) to display system-provided content while the device dozes.
</p><p>
The system will send a {@link android.content.Intent#ACTION_SCREEN_ON screen on}
or {@link android.content.Intent#ACTION_SCREEN_OFF screen off} broadcast
whenever the interactive state of the device changes.  For historical reasons,
the names of these broadcasts refer to the power state of the screen
but they are actually sent in response to changes in the overall interactive
state of the device, as described by this method.
</p><p>
Services may use the non-interactive state as a hint to conserve power
since the user is not present.
</p>

@return True if the device is in an interactive state.

@see android.content.Intent#ACTION_SCREEN_ON
@see android.content.Intent#ACTION_SCREEN_OFF"
      end

      operation 3847351 "reboot"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reason" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reboot the device.  Will not return if the reboot is successful.
<p>
Requires the {@link android.Manifest.permission#REBOOT} permission.
</p>

@param reason code to pass to the kernel (e.g., \"recovery\") to
              request special boot modes, or null."
      end

      operation 3847479 "rebootSafeMode"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reboot the device. Will not return if the reboot is successful.
<p>
Requires the {@link android.Manifest.permission#REBOOT} permission.
</p>
@hide"
      end

      operation 3847607 "isPowerSaveMode"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the device is currently in power save mode.  When in this mode,
applications should reduce their functionality in order to conserve battery as
much as possible.  You can monitor for changes to this state with
{@link #ACTION_POWER_SAVE_MODE_CHANGED}.

@return Returns true if currently in low power mode, else false."
      end

      operation 3847735 "setPowerSaveMode"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "mode" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the current power save mode.

@return True if the set was allowed.

@see #isPowerSaveMode()

@hide"
      end

      operation 3847863 "isDeviceIdleMode"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the device is currently in idle mode.  This happens when a device
has been sitting unused and unmoving for a sufficiently long period of time, so that
it decides to go into a lower power-use state.  This may involve things like turning
off network access to apps.  You can monitor for changes to this state with
{@link #ACTION_DEVICE_IDLE_MODE_CHANGED}.

@return Returns true if currently in active device idle mode, else false.  This is
when idle mode restrictions are being actively applied; it will return false if the
device is in a long-term idle mode but currently running a maintenance window where
restrictions have been lifted."
      end

      operation 3847991 "isLightDeviceIdleMode"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the device is currently in light idle mode.  This happens when a device
has had its screen off for a short time, switching it into a batching mode where we
execute jobs, syncs, networking on a batching schedule.  You can monitor for changes to
this state with {@link #ACTION_LIGHT_DEVICE_IDLE_MODE_CHANGED}.

@return Returns true if currently in active light device idle mode, else false.  This is
when light idle mode restrictions are being actively applied; it will return false if the
device is in a long-term idle mode but currently running a maintenance window where
restrictions have been lifted.
@hide"
      end

      operation 3848119 "isIgnoringBatteryOptimizations"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether the given application package name is on the device's power whitelist.
Apps can be placed on the whitelist through the settings UI invoked by
{@link android.provider.Settings#ACTION_IGNORE_BATTERY_OPTIMIZATION_SETTINGS}."
      end

      operation 3848247 "shutdown"
	public explicit_return_type "void"
	nparams 3
	  param inout name "confirm" explicit_type "boolean"
	  param inout name "reason" type class_ref 129591 // String
	  param inout name "wait" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Turn off the device.

@param confirm If true, shows a shutdown confirmation dialog.
@param reason code to pass to android_reboot() (e.g. \"userrequested\"), or null.
@param wait If true, this call waits for the shutdown to complete and does not return.

@hide"
      end

      operation 3848375 "isSustainedPerformanceModeSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function checks if the device has implemented Sustained Performance
Mode. This needs to be checked only once and is constant for a particular
device/release.

Sustained Performance Mode is intended to provide a consistent level of
performance for prolonged amount of time.

Applications should check if the device supports this mode, before using
{@link android.view.Window#setSustainedPerformanceMode}.

@return Returns True if the device supports it, false otherwise.

@see android.view.Window#setSustainedPerformanceMode"
      end

      classrelation 1467831 // ACTION_POWER_SAVE_MODE_CHANGED (<unidirectional association>)
	relation 1467831 --->
	  a role_name "ACTION_POWER_SAVE_MODE_CHANGED" init_value " \"android.os.action.POWER_SAVE_MODE_CHANGED\"" class_relation const_relation public
	    comment "
Intent that is broadcast when the state of {@link #isPowerSaveMode()} changes.
This broadcast is only sent to registered receivers.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstant.SdkConstantType.BROADCAST_INTENT_ACTION)
"
	    classrelation_ref 1467831 // ACTION_POWER_SAVE_MODE_CHANGED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1467959 // ACTION_POWER_SAVE_MODE_CHANGED_INTERNAL (<unidirectional association>)
	relation 1467959 --->
	  a role_name "ACTION_POWER_SAVE_MODE_CHANGED_INTERNAL" init_value " \"android.os.action.POWER_SAVE_MODE_CHANGED_INTERNAL\"" class_relation const_relation public
	    comment "
Intent that is broadcast when the state of {@link #isPowerSaveMode()} changes.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstant.SdkConstantType.BROADCAST_INTENT_ACTION)
"
	    classrelation_ref 1467959 // ACTION_POWER_SAVE_MODE_CHANGED_INTERNAL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1468087 // ACTION_DEVICE_IDLE_MODE_CHANGED (<unidirectional association>)
	relation 1468087 --->
	  a role_name "ACTION_DEVICE_IDLE_MODE_CHANGED" init_value " \"android.os.action.DEVICE_IDLE_MODE_CHANGED\"" class_relation const_relation public
	    comment "
Intent that is broadcast when the state of {@link #isDeviceIdleMode()} changes.
This broadcast is only sent to registered receivers.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstant.SdkConstantType.BROADCAST_INTENT_ACTION)
"
	    classrelation_ref 1468087 // ACTION_DEVICE_IDLE_MODE_CHANGED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1468215 // ACTION_LIGHT_DEVICE_IDLE_MODE_CHANGED (<unidirectional association>)
	relation 1468215 --->
	  a role_name "ACTION_LIGHT_DEVICE_IDLE_MODE_CHANGED" init_value " \"android.os.action.LIGHT_DEVICE_IDLE_MODE_CHANGED\"" class_relation const_relation public
	    comment "
Intent that is broadcast when the state of {@link #isLightDeviceIdleMode()} changes.
This broadcast is only sent to registered receivers.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstant.SdkConstantType.BROADCAST_INTENT_ACTION)
"
	    classrelation_ref 1468215 // ACTION_LIGHT_DEVICE_IDLE_MODE_CHANGED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1468343 // ACTION_POWER_SAVE_WHITELIST_CHANGED (<unidirectional association>)
	relation 1468343 --->
	  a role_name "ACTION_POWER_SAVE_WHITELIST_CHANGED" init_value " \"android.os.action.POWER_SAVE_WHITELIST_CHANGED\"" class_relation const_relation public
	    comment "
@hide Intent that is broadcast when the set of power save whitelist apps has changed.
This broadcast is only sent to registered receivers.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstant.SdkConstantType.BROADCAST_INTENT_ACTION)
"
	    classrelation_ref 1468343 // ACTION_POWER_SAVE_WHITELIST_CHANGED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1468471 // ACTION_POWER_SAVE_TEMP_WHITELIST_CHANGED (<unidirectional association>)
	relation 1468471 --->
	  a role_name "ACTION_POWER_SAVE_TEMP_WHITELIST_CHANGED" init_value " \"android.os.action.POWER_SAVE_TEMP_WHITELIST_CHANGED\"" class_relation const_relation public
	    comment "
@hide Intent that is broadcast when the set of temporarily whitelisted apps has changed.
This broadcast is only sent to registered receivers.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstant.SdkConstantType.BROADCAST_INTENT_ACTION)
"
	    classrelation_ref 1468471 // ACTION_POWER_SAVE_TEMP_WHITELIST_CHANGED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1468599 // ACTION_POWER_SAVE_MODE_CHANGING (<unidirectional association>)
	relation 1468599 --->
	  a role_name "ACTION_POWER_SAVE_MODE_CHANGING" init_value " \"android.os.action.POWER_SAVE_MODE_CHANGING\"" class_relation const_relation public
	    comment "
Intent that is broadcast when the state of {@link #isPowerSaveMode()} is about to change.
This broadcast is only sent to registered receivers.

@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstant.SdkConstantType.BROADCAST_INTENT_ACTION)
"
	    classrelation_ref 1468599 // ACTION_POWER_SAVE_MODE_CHANGING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1468727 // EXTRA_POWER_SAVE_MODE (<unidirectional association>)
	relation 1468727 --->
	  a role_name "EXTRA_POWER_SAVE_MODE" init_value " \"mode\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1468727 // EXTRA_POWER_SAVE_MODE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1468855 // ACTION_SCREEN_BRIGHTNESS_BOOST_CHANGED (<unidirectional association>)
	relation 1468855 --->
	  a role_name "ACTION_SCREEN_BRIGHTNESS_BOOST_CHANGED" init_value " \"android.os.action.SCREEN_BRIGHTNESS_BOOST_CHANGED\"" class_relation const_relation public
	    comment "
Intent that is broadcast when the state of {@link #isScreenBrightnessBoosted()} has changed.
This broadcast is only sent to registered receivers.

@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SystemApi
"
	    classrelation_ref 1468855 // ACTION_SCREEN_BRIGHTNESS_BOOST_CHANGED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end
    end

    class 513719 "Messenger"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Reference to a Handler, which others can use to send messages to it.
This allows for the implementation of message-based communication across
processes, by creating a Messenger pointing to a Handler in one process,
and handing that Messenger to another process.

<p>Note: the implementation underneath is just a simple wrapper around
a {@link Binder} that is used to perform the communication.  This means
semantically you should treat it as such: this class does not impact process
lifecycle management (you must be using some higher-level component to tell
the system that your process needs to continue running), the connection will
break if your process goes away for any reason, etc.</p>"
      classrelation 1462967 // <realization>
	relation 1462967 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1462967 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1655479 "mTarget"
	const_attribute private explicit_type "IMessenger"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3804087 "Messenger"
	public explicit_return_type ""
	nparams 1
	  param inout name "target" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new Messenger pointing to the given Handler.  Any Message
objects sent through this Messenger will appear in the Handler as if
{@link Handler#sendMessage(Message) Handler.sendMessage(Message)} had
been called directly.

@param target The Handler that will receive sent messages."
      end

      operation 3804215 "send"
	public explicit_return_type "void"
	nparams 1
	  param inout name "message" type class_ref 287287 // Message
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a Message to this Messenger's Handler.

@param message The Message to send.  Usually retrieved through
{@link Message#obtain() Message.obtain()}.

@throws RemoteException Throws DeadObjectException if the target
Handler no longer exists."
      end

      operation 3804343 "getBinder"
	public return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the IBinder that this Messenger is using to communicate with
its associated Handler.

@return Returns the IBinder backing this Messenger."
      end

      operation 3804471 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "otherObj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Comparison operator on two Messenger objects, such that true
is returned then they both point to the same Handler."
      end

      operation 3804599 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3804727 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3804855 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1463095 // CREATOR (<unidirectional association>)
	relation 1463095 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<Messenger>() {
        public Messenger createFromParcel(Parcel in) {
            IBinder target = in.readStrongBinder();
            return target != null ? new Messenger(target) : null;
        }

        public Messenger[] newArray(int size) {
            return new Messenger[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Messenger> ${name}${value};
"
	    classrelation_ref 1463095 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3804983 "writeMessengerOrNullToParcel"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "messenger" type class_ref 513719 // Messenger
	  param inout name "out" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience function for writing either a Messenger or null pointer to
a Parcel.  You must use this with {@link #readMessengerOrNullFromParcel}
for later reading it.

@param messenger The Messenger to write, or null.
@param out Where to write the Messenger."
      end

      operation 3805111 "readMessengerOrNullFromParcel"
	class_operation public return_type class_ref 513719 // Messenger
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience function for reading either a Messenger or null pointer from
a Parcel.  You must have previously written the Messenger with
{@link #writeMessengerOrNullToParcel}.

@param in The Parcel containing the written Messenger.

@return Returns the Messenger read from the Parcel, or null if null had
been written."
      end

      operation 3805239 "Messenger"
	public explicit_return_type ""
	nparams 1
	  param inout name "target" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a Messenger from a raw IBinder, which had previously been
retrieved with {@link #getBinder}.

@param target The IBinder this Messenger should communicate with."
      end
    end

    class 535991 "AsyncResult"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " @hide "
      classrelation 1426103 // userObj (<unidirectional association>)
	relation 1426103 --->
	  a role_name "userObj" public
	    comment " Instance Variables *************************
 Expect either exception or result to be null
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1426103 // userObj (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      attribute 1577655 "exception"
	public explicit_type "Throwable"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1426231 // result (<unidirectional association>)
	relation 1426231 --->
	  a role_name "result" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1426231 // result (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      operation 3682999 "forMessage"
	class_operation public return_type class_ref 535991 // AsyncResult
	nparams 3
	  param inout name "m" type class_ref 287287 // Message
	  param inout name "r" type class_ref 132663 // Object
	  param inout name "ex" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Class Methods ****************************
 Saves and sets m.obj "
      end

      operation 3683127 "forMessage"
	class_operation public return_type class_ref 535991 // AsyncResult
	nparams 1
	  param inout name "m" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Saves and sets m.obj "
      end

      operation 3683255 "AsyncResult"
	public explicit_return_type ""
	nparams 3
	  param inout name "uo" type class_ref 132663 // Object
	  param inout name "r" type class_ref 132663 // Object
	  param inout name "ex" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " please note, this sets m.obj to be this "
      end
    end

    class 536119 "BadParcelableException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Exception thrown when a {@link Parcelable} is malformed or otherwise invalid.
<p>
This is typically encountered when a custom {@link Parcelable} object is
passed to another process that doesn't have the same {@link Parcelable} class
in its {@link ClassLoader}."
      classrelation 1426359 // <generalisation>
	relation 1426359 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1426359 // <generalisation>
	  b parent class_ref 335287 // AndroidRuntimeException
      end

      operation 3683383 "BadParcelableException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3683511 "BadParcelableException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Exception"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 536247 "BaseBundle"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A mapping from String keys to values of various types. In most cases, you
should work directly with either the {@link Bundle} or
{@link PersistableBundle} subclass."
      classrelation 1426487 // TAG (<unidirectional association>)
	relation 1426487 --->
	  a role_name "TAG" init_value " \"Bundle\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1426487 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1577783 "DEBUG"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1577911 "BUNDLE_MAGIC"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x4C444E42"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Keep in sync with frameworks/native/libs/binder/PersistableBundle.cpp.
 'B' 'N' 'D' 'L'"
      end

      attribute 1578039 "FLAG_DEFUSABLE"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1 << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag indicating that this Bundle is okay to \"defuse.\" That is, it's okay
for system processes to ignore any {@link BadParcelableException}
encountered when unparceling it, leaving an empty bundle in its place.
<p>
This should <em>only</em> be set when the Bundle reaches its final
destination, otherwise a system process may clobber contents that were
destined for an app that could have unparceled them.
"
      end

      attribute 1578167 "LOG_DEFUSABLE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1578295 "sShouldDefuse"
	class_attribute volatile private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3683639 "setShouldDefuse"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "shouldDefuse" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set global variable indicating that any Bundles parsed in this process
should be \"defused.\" That is, any {@link BadParcelableException}
encountered will be suppressed and logged, leaving an empty Bundle
instead of crashing.

@hide"
      end

      class 536375 "NoImagePreloadHolder"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1426615 // EMPTY_PARCEL (<unidirectional association>)
	  relation 1426615 --->
	    a role_name "EMPTY_PARCEL" init_value " Parcel.obtain()" class_relation const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1426615 // EMPTY_PARCEL (<unidirectional association>)
	    b parent class_ref 137527 // Parcel
	end
      end

      classrelation 1426743 // mMap (<unidirectional association>)
	relation 1426743 --->
	  a role_name "mMap" init_value " null" package
	    comment " Invariant - exactly one of mMap / mParcelledData will be null
 (except inside a call to unparcel)
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Object> ${name}${value};
"
	    classrelation_ref 1426743 // mMap (<unidirectional association>)
	  b parent class_ref 156343 // ArrayMap
      end

      classrelation 1426871 // mParcelledData (<unidirectional association>)
	relation 1426871 --->
	  a role_name "mParcelledData" init_value " null" package
	    comment "
If mParcelledData is non-null, then mMap will be null and the
data are stored as a Parcel containing a Bundle.  When the data
are unparcelled, mParcelledData willbe set to null.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1426871 // mParcelledData (<unidirectional association>)
	  b parent class_ref 137527 // Parcel
      end

      attribute 1578423 "mClassLoader"
	private explicit_type "ClassLoader"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The ClassLoader used when unparcelling data from mParcelledData.
"
      end

      attribute 1578551 "mFlags"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      operation 3683767 "BaseBundle"
	package explicit_return_type ""
	nparams 2
	  param inout name "loader" explicit_type "ClassLoader"
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty Bundle that uses a specific ClassLoader for
instantiating Parcelable and Serializable objects.

@param loader An explicit ClassLoader to use when instantiating objects
inside of the Bundle.
@param capacity Initial size of the ArrayMap."
      end

      operation 3683895 "BaseBundle"
	package explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty Bundle."
      end

      operation 3684023 "BaseBundle"
	package explicit_return_type ""
	nparams 1
	  param inout name "parcelledData" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Bundle whose data is stored as a Parcel.  The data
will be unparcelled on first contact, using the assigned ClassLoader.

@param parcelledData a Parcel containing a Bundle"
      end

      operation 3684151 "BaseBundle"
	package explicit_return_type ""
	nparams 2
	  param inout name "parcelledData" type class_ref 137527 // Parcel
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3684279 "BaseBundle"
	package explicit_return_type ""
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty Bundle that uses a specific ClassLoader for
instantiating Parcelable and Serializable objects.

@param loader An explicit ClassLoader to use when instantiating objects
inside of the Bundle."
      end

      operation 3684407 "BaseBundle"
	package explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new, empty Bundle sized to hold the given number of
elements. The Bundle will grow as needed.

@param capacity the initial capacity of the Bundle"
      end

      operation 3684535 "BaseBundle"
	package explicit_return_type ""
	nparams 1
	  param inout name "b" type class_ref 536247 // BaseBundle
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a Bundle containing a copy of the mappings from the given
Bundle.

@param b a Bundle to be copied."
      end

      operation 3684663 "getPairValue"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "TODO: optimize this later (getting just the value part of a Bundle
with a single pair) once Bundle.forPair() above is implemented
with a special single-value Map implementation/serialization.

Note: value in single-pair Bundle may be null.

@hide"
      end

      operation 3684791 "setClassLoader"
	package explicit_return_type "void"
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the ClassLoader this Bundle uses when instantiating objects.

@param loader An explicit ClassLoader to use when instantiating objects
inside of the Bundle."
      end

      operation 3684919 "getClassLoader"
	package explicit_return_type "ClassLoader"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the ClassLoader currently associated with this Bundle."
      end

      operation 3685047 "unparcel"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the underlying data are stored as a Parcel, unparcel them
using the currently assigned class loader.

 package "
      end

      operation 3685175 "isParcelled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3685303 "isEmptyParcel"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3685431 "getMap"
	package return_type class_ref 156343 // ArrayMap
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3685559 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of mappings contained in this Bundle.

@return the number of mappings as an int."
      end

      operation 3685687 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the mapping of this Bundle is empty, false otherwise."
      end

      operation 3685815 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all elements from the mapping of this Bundle."
      end

      operation 3685943 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the given key is contained in the mapping
of this Bundle.

@param key a String key
@return true if the key is part of the mapping, false otherwise"
      end

      operation 3686071 "get"
	public return_type class_ref 132663 // Object
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the entry with the given key as an object.

@param key a String key
@return an Object, or null"
      end

      operation 3686199 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes any entry with the given key from the mapping of this Bundle.

@param key a String key"
      end

      operation 3686327 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bundle" type class_ref 158007 // PersistableBundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts all mappings from the given PersistableBundle into this BaseBundle.

@param bundle a PersistableBundle"
      end

      operation 3686455 "putAll"
	package explicit_return_type "void"
	nparams 1
	  param inout name "map" type class_ref 156343 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts all mappings from the given Map into this BaseBundle.

@param map a Map"
      end

      operation 3686583 "keySet"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Set containing the Strings used as keys in this Bundle.

@return a Set of String keys"
      end

      operation 3686711 "putBoolean"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a Boolean value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a boolean"
      end

      operation 3686839 "putByte"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a byte value into the mapping of this Bundle, replacing
any existing value for the given key.

@param key a String, or null
@param value a byte"
      end

      operation 3686967 "putChar"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a char value into the mapping of this Bundle, replacing
any existing value for the given key.

@param key a String, or null
@param value a char"
      end

      operation 3687095 "putShort"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a short value into the mapping of this Bundle, replacing
any existing value for the given key.

@param key a String, or null
@param value a short"
      end

      operation 3687223 "putInt"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts an int value into the mapping of this Bundle, replacing
any existing value for the given key.

@param key a String, or null
@param value an int"
      end

      operation 3687351 "putLong"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a long value into the mapping of this Bundle, replacing
any existing value for the given key.

@param key a String, or null
@param value a long"
      end

      operation 3687479 "putFloat"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a float value into the mapping of this Bundle, replacing
any existing value for the given key.

@param key a String, or null
@param value a float"
      end

      operation 3687607 "putDouble"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a double value into the mapping of this Bundle, replacing
any existing value for the given key.

@param key a String, or null
@param value a double"
      end

      operation 3687735 "putString"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a String value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a String, or null"
      end

      operation 3687863 "putCharSequence"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a CharSequence value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a CharSequence, or null"
      end

      operation 3687991 "putIntegerArrayList"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "ArrayList<Integer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts an ArrayList<Integer> value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value an ArrayList<Integer> object, or null"
      end

      operation 3688119 "putStringArrayList"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "ArrayList<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts an ArrayList<String> value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value an ArrayList<String> object, or null"
      end

      operation 3688247 "putCharSequenceArrayList"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "ArrayList<CharSequence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts an ArrayList<CharSequence> value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value an ArrayList<CharSequence> object, or null"
      end

      operation 3688375 "putSerializable"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "Serializable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a Serializable value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a Serializable object, or null"
      end

      operation 3688503 "putBooleanArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a boolean array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a boolean array object, or null"
      end

      operation 3688631 "putByteArray"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a byte array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a byte array object, or null"
      end

      operation 3688759 "putShortArray"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a short array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a short array object, or null"
      end

      operation 3688887 "putCharArray"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a char array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a char array object, or null"
      end

      operation 3689015 "putIntArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts an int array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value an int array object, or null"
      end

      operation 3689143 "putLongArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a long array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a long array object, or null"
      end

      operation 3689271 "putFloatArray"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a float array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a float array object, or null"
      end

      operation 3689399 "putDoubleArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a double array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a double array object, or null"
      end

      operation 3689527 "putStringArray"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a String array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a String array object, or null"
      end

      operation 3689655 "putCharSequenceArray"
	package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a CharSequence array value into the mapping of this Bundle, replacing
any existing value for the given key.  Either key or value may be null.

@param key a String, or null
@param value a CharSequence array object, or null"
      end

      operation 3689783 "getBoolean"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or false if
no mapping of the desired type exists for the given key.

@param key a String
@return a boolean value"
      end

      operation 3689911 "typeWarning"
	package explicit_return_type "void"
	nparams 5
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 132663 // Object
	  param inout name "className" type class_ref 129591 // String
	  param inout name "defaultValue" type class_ref 132663 // Object
	  param inout name "e" explicit_type "ClassCastException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Log a message if the value was non-null but not of the expected type"
      end

      operation 3690039 "typeWarning"
	package explicit_return_type "void"
	nparams 4
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 132663 // Object
	  param inout name "className" type class_ref 129591 // String
	  param inout name "e" explicit_type "ClassCastException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3690167 "getBoolean"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "defaultValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return a boolean value"
      end

      operation 3690295 "getByte"
	package explicit_return_type "byte"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or (byte) 0 if
no mapping of the desired type exists for the given key.

@param key a String
@return a byte value"
      end

      operation 3690423 "getByte"
	package explicit_return_type "Byte"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "defaultValue" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return a byte value"
      end

      operation 3690551 "getChar"
	package explicit_return_type "char"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or (char) 0 if
no mapping of the desired type exists for the given key.

@param key a String
@return a char value"
      end

      operation 3690679 "getChar"
	package explicit_return_type "char"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "defaultValue" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return a char value"
      end

      operation 3690807 "getShort"
	package explicit_return_type "short"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or (short) 0 if
no mapping of the desired type exists for the given key.

@param key a String
@return a short value"
      end

      operation 3690935 "getShort"
	package explicit_return_type "short"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "defaultValue" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return a short value"
      end

      operation 3691063 "getInt"
	public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or 0 if
no mapping of the desired type exists for the given key.

@param key a String
@return an int value"
      end

      operation 3691191 "getInt"
	public explicit_return_type "int"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return an int value"
      end

      operation 3691319 "getLong"
	public explicit_return_type "long"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or 0L if
no mapping of the desired type exists for the given key.

@param key a String
@return a long value"
      end

      operation 3691447 "getLong"
	public explicit_return_type "long"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "defaultValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return a long value"
      end

      operation 3691575 "getFloat"
	package explicit_return_type "float"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or 0.0f if
no mapping of the desired type exists for the given key.

@param key a String
@return a float value"
      end

      operation 3691703 "getFloat"
	package explicit_return_type "float"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "defaultValue" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return a float value"
      end

      operation 3691831 "getDouble"
	public explicit_return_type "double"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or 0.0 if
no mapping of the desired type exists for the given key.

@param key a String
@return a double value"
      end

      operation 3691959 "getDouble"
	public explicit_return_type "double"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "defaultValue" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key.

@param key a String
@param defaultValue Value to return if key does not exist
@return a double value"
      end

      operation 3692087 "getString"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a String value, or null"
      end

      operation 3692215 "getString"
	public return_type class_ref 129591 // String
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "defaultValue" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key or if a null
value is explicitly associated with the given key.

@param key a String, or null
@param defaultValue Value to return if key does not exist or if a null
    value is associated with the given key.
@return the String value associated with the given key, or defaultValue
    if no valid String object is currently mapped to that key."
      end

      operation 3692343 "getCharSequence"
	package explicit_return_type "CharSequence"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a CharSequence value, or null"
      end

      operation 3692471 "getCharSequence"
	package explicit_return_type "CharSequence"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "defaultValue" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value associated with the given key, or defaultValue if
no mapping of the desired type exists for the given key or if a null
value is explicitly associated with the given key.

@param key a String, or null
@param defaultValue Value to return if key does not exist or if a null
    value is associated with the given key.
@return the CharSequence value associated with the given key, or defaultValue
    if no valid CharSequence object is currently mapped to that key."
      end

      operation 3692599 "getSerializable"
	package explicit_return_type "Serializable"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a Serializable value, or null"
      end

      operation 3692727 "getIntegerArrayList"
	package explicit_return_type "ArrayList<Integer>"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return an ArrayList<String> value, or null"
      end

      operation 3692855 "getStringArrayList"
	package return_type class_ref 129591 // String
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return an ArrayList<String> value, or null"
      end

      operation 3692983 "getCharSequenceArrayList"
	package explicit_return_type "ArrayList<CharSequence>"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return an ArrayList<CharSequence> value, or null"
      end

      operation 3693111 "getBooleanArray"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a boolean[] value, or null"
      end

      operation 3693239 "getByteArray"
	package explicit_return_type "byte"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a byte[] value, or null"
      end

      operation 3693367 "getShortArray"
	package explicit_return_type "short"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a short[] value, or null"
      end

      operation 3693495 "getCharArray"
	package explicit_return_type "char"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a char[] value, or null"
      end

      operation 3693623 "getIntArray"
	public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return an int[] value, or null"
      end

      operation 3693751 "getLongArray"
	public explicit_return_type "long"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a long[] value, or null"
      end

      operation 3693879 "getFloatArray"
	package explicit_return_type "float"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a float[] value, or null"
      end

      operation 3694007 "getDoubleArray"
	public explicit_return_type "double"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a double[] value, or null"
      end

      operation 3694135 "getStringArray"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a String[] value, or null"
      end

      operation 3694263 "getCharSequenceArray"
	package explicit_return_type "CharSequence"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Returns the value associated with the given key, or null if
no mapping of the desired type exists for the given key or a null
value is explicitly associated with the key.

@param key a String, or null
@return a CharSequence[] value, or null"
      end

      operation 3694391 "writeToParcelInner"
	package explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the Bundle contents to a Parcel, typically in order for
it to be passed through an IBinder connection.
@param parcel The parcel to copy this bundle to."
      end

      operation 3694519 "readFromParcelInner"
	package explicit_return_type "void"
	nparams 1
	  param inout name "parcel" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the Parcel contents into this Bundle, typically in order for
it to be passed through an IBinder connection.
@param parcel The parcel to overwrite this bundle from."
      end

      operation 3694647 "readFromParcelInner"
	private explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 536503 "BatteryManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The BatteryManager class contains strings and constants used for values
in the {@link android.content.Intent#ACTION_BATTERY_CHANGED} Intent, and
provides a method for querying battery and charging properties."
      classrelation 1426999 // EXTRA_STATUS (<unidirectional association>)
	relation 1426999 --->
	  a role_name "EXTRA_STATUS" init_value " \"status\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
integer containing the current status constant.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1426999 // EXTRA_STATUS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1427127 // EXTRA_HEALTH (<unidirectional association>)
	relation 1427127 --->
	  a role_name "EXTRA_HEALTH" init_value " \"health\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
integer containing the current health constant.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1427127 // EXTRA_HEALTH (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1427255 // EXTRA_PRESENT (<unidirectional association>)
	relation 1427255 --->
	  a role_name "EXTRA_PRESENT" init_value " \"present\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
boolean indicating whether a battery is present.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1427255 // EXTRA_PRESENT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1427383 // EXTRA_LEVEL (<unidirectional association>)
	relation 1427383 --->
	  a role_name "EXTRA_LEVEL" init_value " \"level\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
integer field containing the current battery level, from 0 to
{@link #EXTRA_SCALE}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1427383 // EXTRA_LEVEL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1427511 // EXTRA_SCALE (<unidirectional association>)
	relation 1427511 --->
	  a role_name "EXTRA_SCALE" init_value " \"scale\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
integer containing the maximum battery level.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1427511 // EXTRA_SCALE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1427639 // EXTRA_ICON_SMALL (<unidirectional association>)
	relation 1427639 --->
	  a role_name "EXTRA_ICON_SMALL" init_value " \"icon-small\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
integer containing the resource ID of a small status bar icon
indicating the current battery state.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1427639 // EXTRA_ICON_SMALL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1427767 // EXTRA_PLUGGED (<unidirectional association>)
	relation 1427767 --->
	  a role_name "EXTRA_PLUGGED" init_value " \"plugged\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
integer indicating whether the device is plugged in to a power
source; 0 means it is on battery, other constants are different
types of power sources.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1427767 // EXTRA_PLUGGED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1427895 // EXTRA_VOLTAGE (<unidirectional association>)
	relation 1427895 --->
	  a role_name "EXTRA_VOLTAGE" init_value " \"voltage\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
integer containing the current battery voltage level.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1427895 // EXTRA_VOLTAGE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1428023 // EXTRA_TEMPERATURE (<unidirectional association>)
	relation 1428023 --->
	  a role_name "EXTRA_TEMPERATURE" init_value " \"temperature\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
integer containing the current battery temperature.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1428023 // EXTRA_TEMPERATURE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1428151 // EXTRA_TECHNOLOGY (<unidirectional association>)
	relation 1428151 --->
	  a role_name "EXTRA_TECHNOLOGY" init_value " \"technology\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
String describing the technology of the current battery.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1428151 // EXTRA_TECHNOLOGY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1428279 // EXTRA_INVALID_CHARGER (<unidirectional association>)
	relation 1428279 --->
	  a role_name "EXTRA_INVALID_CHARGER" init_value " \"invalid_charger\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
Int value set to nonzero if an unsupported charger is attached
to the device.
{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1428279 // EXTRA_INVALID_CHARGER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1428407 // EXTRA_MAX_CHARGING_CURRENT (<unidirectional association>)
	relation 1428407 --->
	  a role_name "EXTRA_MAX_CHARGING_CURRENT" init_value " \"max_charging_current\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
Int value set to the maximum charging current supported by the charger in micro amperes.
{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1428407 // EXTRA_MAX_CHARGING_CURRENT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1428535 // EXTRA_MAX_CHARGING_VOLTAGE (<unidirectional association>)
	relation 1428535 --->
	  a role_name "EXTRA_MAX_CHARGING_VOLTAGE" init_value " \"max_charging_voltage\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
Int value set to the maximum charging voltage supported by the charger in micro volts.
{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1428535 // EXTRA_MAX_CHARGING_VOLTAGE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1428663 // EXTRA_CHARGE_COUNTER (<unidirectional association>)
	relation 1428663 --->
	  a role_name "EXTRA_CHARGE_COUNTER" init_value " \"charge_counter\"" class_relation const_relation public
	    comment "
Extra for {@link android.content.Intent#ACTION_BATTERY_CHANGED}:
integer containing the charge counter present in the battery.
{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1428663 // EXTRA_CHARGE_COUNTER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1578679 "BATTERY_STATUS_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " values for \"status\" field in the ACTION_BATTERY_CHANGED Intent"
      end

      attribute 1578807 "BATTERY_STATUS_CHARGING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1578935 "BATTERY_STATUS_DISCHARGING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1579063 "BATTERY_STATUS_NOT_CHARGING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1579191 "BATTERY_STATUS_FULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1579319 "BATTERY_HEALTH_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " values for \"health\" field in the ACTION_BATTERY_CHANGED Intent"
      end

      attribute 1579447 "BATTERY_HEALTH_GOOD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1579575 "BATTERY_HEALTH_OVERHEAT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1579703 "BATTERY_HEALTH_DEAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1579831 "BATTERY_HEALTH_OVER_VOLTAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1579959 "BATTERY_HEALTH_UNSPECIFIED_FAILURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1580087 "BATTERY_HEALTH_COLD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1580215 "BATTERY_PLUGGED_AC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " values of the \"plugged\" field in the ACTION_BATTERY_CHANGED intent.
 These must be powers of 2.
 Power source is an AC charger. "
      end

      attribute 1580343 "BATTERY_PLUGGED_USB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Power source is a USB port. "
      end

      attribute 1580471 "BATTERY_PLUGGED_WIRELESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Power source is wireless. "
      end

      attribute 1580599 "BATTERY_PLUGGED_ANY"
	class_attribute const_attribute public explicit_type "int"
	init_value "
            BATTERY_PLUGGED_AC | BATTERY_PLUGGED_USB | BATTERY_PLUGGED_WIRELESS"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      classrelation 1428791 // ACTION_CHARGING (<unidirectional association>)
	relation 1428791 --->
	  a role_name "ACTION_CHARGING" init_value " \"android.os.action.CHARGING\"" class_relation const_relation public
	    comment "
Sent when the device's battery has started charging (or has reached full charge
and the device is on power).  This is a good time to do work that you would like to
avoid doing while on battery (that is to avoid draining the user's battery due to
things they don't care enough about).

This is paired with {@link #ACTION_DISCHARGING}.  The current state can always
be retrieved with {@link #isCharging()}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1428791 // ACTION_CHARGING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1428919 // ACTION_DISCHARGING (<unidirectional association>)
	relation 1428919 --->
	  a role_name "ACTION_DISCHARGING" init_value " \"android.os.action.DISCHARGING\"" class_relation const_relation public
	    comment "
Sent when the device's battery may be discharging, so apps should avoid doing
extraneous work that would cause it to discharge faster.

This is paired with {@link #ACTION_CHARGING}.  The current state can always
be retrieved with {@link #isCharging()}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1428919 // ACTION_DISCHARGING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1580727 "BATTERY_PROPERTY_CHARGE_COUNTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Battery property identifiers.  These must match the values in
frameworks/native/include/batteryservice/BatteryService.h

 Battery capacity in microampere-hours, as an integer. "
      end

      attribute 1580855 "BATTERY_PROPERTY_CURRENT_NOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Instantaneous battery current in microamperes, as an integer.  Positive
values indicate net current entering the battery from a charge source,
negative values indicate net current discharging from the battery.
"
      end

      attribute 1580983 "BATTERY_PROPERTY_CURRENT_AVERAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Average battery current in microamperes, as an integer.  Positive
values indicate net current entering the battery from a charge source,
negative values indicate net current discharging from the battery.
The time period over which the average is computed may depend on the
fuel gauge hardware and its configuration.
"
      end

      attribute 1581111 "BATTERY_PROPERTY_CAPACITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Remaining battery capacity as an integer percentage of total capacity
(with no fractional part).
"
      end

      attribute 1581239 "BATTERY_PROPERTY_ENERGY_COUNTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Battery remaining energy in nanowatt-hours, as a long integer.
"
      end

      attribute 1581367 "mBatteryStats"
	const_attribute private explicit_type "IBatteryStats"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1581495 "mBatteryPropertiesRegistrar"
	const_attribute private explicit_type "IBatteryPropertiesRegistrar"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3694775 "BatteryManager"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@removed Was previously made visible by accident."
      end

      operation 3694903 "isCharging"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the battery is currently considered to be charging.  This means that
the device is plugged in and is supplying sufficient power that the battery level is
going up (or the battery is fully charged).  Changes in this state are matched by
broadcasts of {@link #ACTION_CHARGING} and {@link #ACTION_DISCHARGING}."
      end

      operation 3695031 "queryProperty"
	private explicit_return_type "long"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Query a battery property from the batteryproperties service.

Returns the requested value, or Long.MIN_VALUE if property not
supported on this system or on other error."
      end

      operation 3695159 "getIntProperty"
	public explicit_return_type "int"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value of a battery property of integer type.  If the
platform does not provide the property queried, this value will
be Integer.MIN_VALUE.

@param id identifier of the requested property

@return the property value, or Integer.MIN_VALUE if not supported."
      end

      operation 3695287 "getLongProperty"
	public explicit_return_type "long"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the value of a battery property of long type If the
platform does not provide the property queried, this value will
be Long.MIN_VALUE.

@param id identifier of the requested property

@return the property value, or Long.MIN_VALUE if not supported."
      end
    end

    class 536631 "BatteryManagerInternal"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Battery manager local system service interface.

@hide Only for use within the system server."
      operation 3695415 "isPowered"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "plugTypeSet" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the device is plugged into any of the specified plug types."
      end

      operation 3695543 "getPlugType"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current plug type."
      end

      operation 3695671 "getBatteryLevel"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns battery level as a percentage."
      end

      operation 3695799 "getBatteryLevelLow"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether we currently consider the battery level to be low."
      end

      operation 3695927 "getInvalidCharger"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a non-zero value if an unsupported charger is attached."
      end
    end

    class 536759 "BatteryProperties"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@hide}"
      classrelation 1429047 // <realization>
	relation 1429047 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1429047 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1581623 "chargerAcOnline"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1581751 "chargerUsbOnline"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1581879 "chargerWirelessOnline"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1582007 "maxChargingCurrent"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1582135 "maxChargingVoltage"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1582263 "batteryStatus"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1582391 "batteryHealth"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1582519 "batteryPresent"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1582647 "batteryLevel"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1582775 "batteryVoltage"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1582903 "batteryTemperature"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1583031 "batteryChargeCounter"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1429175 // batteryTechnology (<unidirectional association>)
	relation 1429175 --->
	  a role_name "batteryTechnology" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1429175 // batteryTechnology (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3696055 "BatteryProperties"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3696183 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "other" type class_ref 536759 // BatteryProperties
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3696311 "BatteryProperties"
	private explicit_return_type ""
	nparams 1
	  param inout name "p" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parcel read/write code must be kept in sync with
frameworks/native/services/batteryservice/BatteryProperties.cpp"
      end

      operation 3696439 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "p" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1429303 // CREATOR (<unidirectional association>)
	relation 1429303 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<BatteryProperties>() {
        public BatteryProperties createFromParcel(Parcel p) {
            return new BatteryProperties(p);
        }

        public BatteryProperties[] newArray(int size) {
            return new BatteryProperties[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<BatteryProperties> ${name}${value};
"
	    classrelation_ref 1429303 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3696567 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 536887 "BatteryProperty"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Battery properties that may be queried using
BatteryManager.getProperty()}


@hide"
      classrelation 1429431 // <realization>
	relation 1429431 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1429431 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1583159 "mValueLong"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3696695 "BatteryProperty"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3696823 "getLong"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3696951 "BatteryProperty"
	private explicit_return_type ""
	nparams 1
	  param inout name "p" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parcel read/write code must be kept in sync with
frameworks/native/services/batteryservice/BatteryProperty.cpp"
      end

      operation 3697079 "readFromParcel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3697207 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "p" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1429559 // CREATOR (<unidirectional association>)
	relation 1429559 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<BatteryProperty>() {
        public BatteryProperty createFromParcel(Parcel p) {
            return new BatteryProperty(p);
        }

        public BatteryProperty[] newArray(int size) {
            return new BatteryProperty[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<BatteryProperty> ${name}${value};
"
	    classrelation_ref 1429559 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3697335 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 537015 "BatteryStats"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class providing access to battery usage statistics, including information on
wakelocks, processes, packages, and services.  All times are represented in microseconds
except where indicated otherwise.
@hide"
      classrelation 1429687 // <realization>
	relation 1429687 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1429687 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1583287 "LOCAL_LOGV"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1429815 // SERVICE_NAME (<unidirectional association>)
	relation 1429815 --->
	  a role_name "SERVICE_NAME" init_value " \"batterystats\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1429815 // SERVICE_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1583415 "WAKE_TYPE_PARTIAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a partial wake lock timer.
"
      end

      attribute 1583543 "WAKE_TYPE_FULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a full wake lock timer.
"
      end

      attribute 1583671 "WAKE_TYPE_WINDOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a window wake lock timer.
"
      end

      attribute 1583799 "SENSOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a sensor timer.
"
      end

      attribute 1583927 "WIFI_RUNNING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a a wifi running timer
"
      end

      attribute 1584055 "FULL_WIFI_LOCK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a full wifi lock timer
"
      end

      attribute 1584183 "WIFI_SCAN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a wifi scan
"
      end

      attribute 1584311 "WIFI_MULTICAST_ENABLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a wifi multicast timer
"
      end

      attribute 1584439 "VIDEO_TURNED_ON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a video turn on timer
"
      end

      attribute 1584567 "VIBRATOR_ON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a vibrator on timer
"
      end

      attribute 1584695 "FOREGROUND_ACTIVITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a foreground activity timer
"
      end

      attribute 1584823 "WIFI_BATCHED_SCAN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a wifi batched scan is active
"
      end

      attribute 1584951 "PROCESS_STATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a process state timer
"
      end

      attribute 1585079 "SYNC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a sync timer
"
      end

      attribute 1585207 "JOB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a job timer
"
      end

      attribute 1585335 "AUDIO_TURNED_ON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating an audio turn on timer
"
      end

      attribute 1585463 "FLASHLIGHT_TURNED_ON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a flashlight turn on timer
"
      end

      attribute 1585591 "CAMERA_TURNED_ON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 17"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a camera turn on timer
"
      end

      attribute 1585719 "WAKE_TYPE_DRAW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 18"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a draw wake lock timer.
"
      end

      attribute 1585847 "BLUETOOTH_SCAN_ON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 19"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant indicating a bluetooth scan timer.
"
      end

      attribute 1585975 "STATS_SINCE_CHARGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Include all of the data in the stats, including previously saved data.
"
      end

      attribute 1586103 "STATS_CURRENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Include only the current run in the stats.
"
      end

      attribute 1586231 "STATS_SINCE_UNPLUGGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Include only the run since the last time the device was unplugged in the stats.
"
      end

      classrelation 1429943 // STAT_NAMES (<unidirectional association>)
	relation 1429943 --->
	  a role_name "STAT_NAMES" multiplicity "[]" init_value " { \"l\", \"c\", \"u\" }" class_relation const_relation private
	    comment " NOTE: Update this list if you add/change any stats above.
 These characters are supposed to represent \"total\", \"last\", \"current\", 
 and \"unplugged\". They were shortened for efficiency sake.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1429943 // STAT_NAMES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1430071 // CHECKIN_VERSION (<unidirectional association>)
	relation 1430071 --->
	  a role_name "CHECKIN_VERSION" init_value " \"18\"" class_relation const_relation package
	    comment "
Current version of checkin data format.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1430071 // CHECKIN_VERSION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1586359 "BATTERY_STATS_CHECKIN_VERSION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Old version, we hit 9 and ran out of room, need to remove.
"
      end

      attribute 1586487 "BYTES_PER_KB"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1024"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1586615 "BYTES_PER_MB"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1048576"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 1024^2"
      end

      attribute 1586743 "BYTES_PER_GB"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1073741824"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "1024^3"
      end

      classrelation 1430199 // VERSION_DATA (<unidirectional association>)
	relation 1430199 --->
	  a role_name "VERSION_DATA" init_value " \"vers\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1430199 // VERSION_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1430327 // UID_DATA (<unidirectional association>)
	relation 1430327 --->
	  a role_name "UID_DATA" init_value " \"uid\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1430327 // UID_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1430455 // WAKEUP_ALARM_DATA (<unidirectional association>)
	relation 1430455 --->
	  a role_name "WAKEUP_ALARM_DATA" init_value " \"wua\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1430455 // WAKEUP_ALARM_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1430583 // APK_DATA (<unidirectional association>)
	relation 1430583 --->
	  a role_name "APK_DATA" init_value " \"apk\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1430583 // APK_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1430711 // PROCESS_DATA (<unidirectional association>)
	relation 1430711 --->
	  a role_name "PROCESS_DATA" init_value " \"pr\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1430711 // PROCESS_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1430839 // CPU_DATA (<unidirectional association>)
	relation 1430839 --->
	  a role_name "CPU_DATA" init_value " \"cpu\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1430839 // CPU_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1430967 // SENSOR_DATA (<unidirectional association>)
	relation 1430967 --->
	  a role_name "SENSOR_DATA" init_value " \"sr\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1430967 // SENSOR_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1431095 // VIBRATOR_DATA (<unidirectional association>)
	relation 1431095 --->
	  a role_name "VIBRATOR_DATA" init_value " \"vib\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1431095 // VIBRATOR_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1431223 // FOREGROUND_DATA (<unidirectional association>)
	relation 1431223 --->
	  a role_name "FOREGROUND_DATA" init_value " \"fg\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1431223 // FOREGROUND_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1431351 // STATE_TIME_DATA (<unidirectional association>)
	relation 1431351 --->
	  a role_name "STATE_TIME_DATA" init_value " \"st\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1431351 // STATE_TIME_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1431479 // WAKELOCK_DATA (<unidirectional association>)
	relation 1431479 --->
	  a role_name "WAKELOCK_DATA" init_value " \"wl\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1431479 // WAKELOCK_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1431607 // SYNC_DATA (<unidirectional association>)
	relation 1431607 --->
	  a role_name "SYNC_DATA" init_value " \"sy\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1431607 // SYNC_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1431735 // JOB_DATA (<unidirectional association>)
	relation 1431735 --->
	  a role_name "JOB_DATA" init_value " \"jb\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1431735 // JOB_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1431863 // KERNEL_WAKELOCK_DATA (<unidirectional association>)
	relation 1431863 --->
	  a role_name "KERNEL_WAKELOCK_DATA" init_value " \"kwl\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1431863 // KERNEL_WAKELOCK_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1431991 // WAKEUP_REASON_DATA (<unidirectional association>)
	relation 1431991 --->
	  a role_name "WAKEUP_REASON_DATA" init_value " \"wr\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1431991 // WAKEUP_REASON_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1432119 // NETWORK_DATA (<unidirectional association>)
	relation 1432119 --->
	  a role_name "NETWORK_DATA" init_value " \"nt\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1432119 // NETWORK_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1432247 // USER_ACTIVITY_DATA (<unidirectional association>)
	relation 1432247 --->
	  a role_name "USER_ACTIVITY_DATA" init_value " \"ua\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1432247 // USER_ACTIVITY_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1432375 // BATTERY_DATA (<unidirectional association>)
	relation 1432375 --->
	  a role_name "BATTERY_DATA" init_value " \"bt\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1432375 // BATTERY_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1432503 // BATTERY_DISCHARGE_DATA (<unidirectional association>)
	relation 1432503 --->
	  a role_name "BATTERY_DISCHARGE_DATA" init_value " \"dc\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1432503 // BATTERY_DISCHARGE_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1432631 // BATTERY_LEVEL_DATA (<unidirectional association>)
	relation 1432631 --->
	  a role_name "BATTERY_LEVEL_DATA" init_value " \"lv\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1432631 // BATTERY_LEVEL_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1432759 // GLOBAL_WIFI_DATA (<unidirectional association>)
	relation 1432759 --->
	  a role_name "GLOBAL_WIFI_DATA" init_value " \"gwfl\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1432759 // GLOBAL_WIFI_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1432887 // WIFI_DATA (<unidirectional association>)
	relation 1432887 --->
	  a role_name "WIFI_DATA" init_value " \"wfl\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1432887 // WIFI_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1433015 // GLOBAL_WIFI_CONTROLLER_DATA (<unidirectional association>)
	relation 1433015 --->
	  a role_name "GLOBAL_WIFI_CONTROLLER_DATA" init_value " \"gwfcd\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1433015 // GLOBAL_WIFI_CONTROLLER_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1433143 // WIFI_CONTROLLER_DATA (<unidirectional association>)
	relation 1433143 --->
	  a role_name "WIFI_CONTROLLER_DATA" init_value " \"wfcd\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1433143 // WIFI_CONTROLLER_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1433271 // GLOBAL_BLUETOOTH_CONTROLLER_DATA (<unidirectional association>)
	relation 1433271 --->
	  a role_name "GLOBAL_BLUETOOTH_CONTROLLER_DATA" init_value " \"gble\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1433271 // GLOBAL_BLUETOOTH_CONTROLLER_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1433399 // BLUETOOTH_CONTROLLER_DATA (<unidirectional association>)
	relation 1433399 --->
	  a role_name "BLUETOOTH_CONTROLLER_DATA" init_value " \"ble\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1433399 // BLUETOOTH_CONTROLLER_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1433527 // BLUETOOTH_MISC_DATA (<unidirectional association>)
	relation 1433527 --->
	  a role_name "BLUETOOTH_MISC_DATA" init_value " \"blem\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1433527 // BLUETOOTH_MISC_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1433655 // MISC_DATA (<unidirectional association>)
	relation 1433655 --->
	  a role_name "MISC_DATA" init_value " \"m\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1433655 // MISC_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1433783 // GLOBAL_NETWORK_DATA (<unidirectional association>)
	relation 1433783 --->
	  a role_name "GLOBAL_NETWORK_DATA" init_value " \"gn\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1433783 // GLOBAL_NETWORK_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1433911 // GLOBAL_MODEM_CONTROLLER_DATA (<unidirectional association>)
	relation 1433911 --->
	  a role_name "GLOBAL_MODEM_CONTROLLER_DATA" init_value " \"gmcd\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1433911 // GLOBAL_MODEM_CONTROLLER_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1434039 // MODEM_CONTROLLER_DATA (<unidirectional association>)
	relation 1434039 --->
	  a role_name "MODEM_CONTROLLER_DATA" init_value " \"mcd\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1434039 // MODEM_CONTROLLER_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1434167 // HISTORY_STRING_POOL (<unidirectional association>)
	relation 1434167 --->
	  a role_name "HISTORY_STRING_POOL" init_value " \"hsp\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1434167 // HISTORY_STRING_POOL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1434295 // HISTORY_DATA (<unidirectional association>)
	relation 1434295 --->
	  a role_name "HISTORY_DATA" init_value " \"h\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1434295 // HISTORY_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1434423 // SCREEN_BRIGHTNESS_DATA (<unidirectional association>)
	relation 1434423 --->
	  a role_name "SCREEN_BRIGHTNESS_DATA" init_value " \"br\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1434423 // SCREEN_BRIGHTNESS_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1434551 // SIGNAL_STRENGTH_TIME_DATA (<unidirectional association>)
	relation 1434551 --->
	  a role_name "SIGNAL_STRENGTH_TIME_DATA" init_value " \"sgt\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1434551 // SIGNAL_STRENGTH_TIME_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1434679 // SIGNAL_SCANNING_TIME_DATA (<unidirectional association>)
	relation 1434679 --->
	  a role_name "SIGNAL_SCANNING_TIME_DATA" init_value " \"sst\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1434679 // SIGNAL_SCANNING_TIME_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1434807 // SIGNAL_STRENGTH_COUNT_DATA (<unidirectional association>)
	relation 1434807 --->
	  a role_name "SIGNAL_STRENGTH_COUNT_DATA" init_value " \"sgc\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1434807 // SIGNAL_STRENGTH_COUNT_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1434935 // DATA_CONNECTION_TIME_DATA (<unidirectional association>)
	relation 1434935 --->
	  a role_name "DATA_CONNECTION_TIME_DATA" init_value " \"dct\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1434935 // DATA_CONNECTION_TIME_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1435063 // DATA_CONNECTION_COUNT_DATA (<unidirectional association>)
	relation 1435063 --->
	  a role_name "DATA_CONNECTION_COUNT_DATA" init_value " \"dcc\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1435063 // DATA_CONNECTION_COUNT_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1435191 // WIFI_STATE_TIME_DATA (<unidirectional association>)
	relation 1435191 --->
	  a role_name "WIFI_STATE_TIME_DATA" init_value " \"wst\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1435191 // WIFI_STATE_TIME_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1435319 // WIFI_STATE_COUNT_DATA (<unidirectional association>)
	relation 1435319 --->
	  a role_name "WIFI_STATE_COUNT_DATA" init_value " \"wsc\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1435319 // WIFI_STATE_COUNT_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1435447 // WIFI_SUPPL_STATE_TIME_DATA (<unidirectional association>)
	relation 1435447 --->
	  a role_name "WIFI_SUPPL_STATE_TIME_DATA" init_value " \"wsst\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1435447 // WIFI_SUPPL_STATE_TIME_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1435575 // WIFI_SUPPL_STATE_COUNT_DATA (<unidirectional association>)
	relation 1435575 --->
	  a role_name "WIFI_SUPPL_STATE_COUNT_DATA" init_value " \"wssc\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1435575 // WIFI_SUPPL_STATE_COUNT_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1435703 // WIFI_SIGNAL_STRENGTH_TIME_DATA (<unidirectional association>)
	relation 1435703 --->
	  a role_name "WIFI_SIGNAL_STRENGTH_TIME_DATA" init_value " \"wsgt\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1435703 // WIFI_SIGNAL_STRENGTH_TIME_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1435831 // WIFI_SIGNAL_STRENGTH_COUNT_DATA (<unidirectional association>)
	relation 1435831 --->
	  a role_name "WIFI_SIGNAL_STRENGTH_COUNT_DATA" init_value " \"wsgc\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1435831 // WIFI_SIGNAL_STRENGTH_COUNT_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1435959 // POWER_USE_SUMMARY_DATA (<unidirectional association>)
	relation 1435959 --->
	  a role_name "POWER_USE_SUMMARY_DATA" init_value " \"pws\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1435959 // POWER_USE_SUMMARY_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1436087 // POWER_USE_ITEM_DATA (<unidirectional association>)
	relation 1436087 --->
	  a role_name "POWER_USE_ITEM_DATA" init_value " \"pwi\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1436087 // POWER_USE_ITEM_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1436215 // DISCHARGE_STEP_DATA (<unidirectional association>)
	relation 1436215 --->
	  a role_name "DISCHARGE_STEP_DATA" init_value " \"dsd\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1436215 // DISCHARGE_STEP_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1436343 // CHARGE_STEP_DATA (<unidirectional association>)
	relation 1436343 --->
	  a role_name "CHARGE_STEP_DATA" init_value " \"csd\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1436343 // CHARGE_STEP_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1436471 // DISCHARGE_TIME_REMAIN_DATA (<unidirectional association>)
	relation 1436471 --->
	  a role_name "DISCHARGE_TIME_REMAIN_DATA" init_value " \"dtr\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1436471 // DISCHARGE_TIME_REMAIN_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1436599 // CHARGE_TIME_REMAIN_DATA (<unidirectional association>)
	relation 1436599 --->
	  a role_name "CHARGE_TIME_REMAIN_DATA" init_value " \"ctr\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1436599 // CHARGE_TIME_REMAIN_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1436727 // FLASHLIGHT_DATA (<unidirectional association>)
	relation 1436727 --->
	  a role_name "FLASHLIGHT_DATA" init_value " \"fla\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1436727 // FLASHLIGHT_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1436855 // CAMERA_DATA (<unidirectional association>)
	relation 1436855 --->
	  a role_name "CAMERA_DATA" init_value " \"cam\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1436855 // CAMERA_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1436983 // VIDEO_DATA (<unidirectional association>)
	relation 1436983 --->
	  a role_name "VIDEO_DATA" init_value " \"vid\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1436983 // VIDEO_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1437111 // AUDIO_DATA (<unidirectional association>)
	relation 1437111 --->
	  a role_name "AUDIO_DATA" init_value " \"aud\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1437111 // AUDIO_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1437239 // RESULT_RECEIVER_CONTROLLER_KEY (<unidirectional association>)
	relation 1437239 --->
	  a role_name "RESULT_RECEIVER_CONTROLLER_KEY" init_value " \"controller_activity\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1437239 // RESULT_RECEIVER_CONTROLLER_KEY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1586871 "mFormatBuilder"
	const_attribute private explicit_type "StringBuilder"
	init_value " new StringBuilder(32)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1586999 "mFormatter"
	const_attribute private explicit_type "Formatter"
	init_value " new Formatter(mFormatBuilder)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 537143 "Counter"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3697463 "getCountLocked"
	  abstract public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the count associated with this Counter for the
selected type of statistics.

@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT"
	end

	operation 3697591 "logState"
	  abstract public explicit_return_type "void"
	  nparams 2
	    param inout name "pw" type class_ref 287415 // Printer
	    param inout name "prefix" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Temporary for debugging."
	end
      end

      class 537271 "LongCounter"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3697719 "getCountLocked"
	  abstract public explicit_return_type "long"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the count associated with this Counter for the
selected type of statistics.

@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT"
	end

	operation 3697847 "logState"
	  abstract public explicit_return_type "void"
	  nparams 2
	    param inout name "pw" type class_ref 287415 // Printer
	    param inout name "prefix" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Temporary for debugging."
	end
      end

      class 537399 "ControllerActivityCounter"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3697975 "getIdleTimeCounter"
	  abstract public return_type class_ref 537271 // LongCounter
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return a non-null {@link LongCounter} representing time spent (milliseconds) in the
idle state."
	end

	operation 3698103 "getRxTimeCounter"
	  abstract public return_type class_ref 537271 // LongCounter
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return a non-null {@link LongCounter} representing time spent (milliseconds) in the
receive state."
	end

	operation 3698231 "getTxTimeCounters"
	  abstract public return_type class_ref 537271 // LongCounter
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "An array of {@link LongCounter}, representing various transmit levels, where each level
may draw a different amount of power. The levels themselves are controller-specific.
@return non-null array of {@link LongCounter}s representing time spent (milliseconds) in
various transmit level states."
	end

	operation 3698359 "getPowerCounter"
	  abstract public return_type class_ref 537271 // LongCounter
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return a non-null {@link LongCounter} representing the power consumed by the controller
in all states, measured in milli-ampere-milliseconds (mAms). The counter may always
yield a value of 0 if the device doesn't support power calculations."
	end
      end

      class 537527 "Timer"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3698487 "getCountLocked"
	  abstract public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the count associated with this Timer for the
selected type of statistics.

@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT"
	end

	operation 3698615 "getTotalTimeLocked"
	  abstract public explicit_return_type "long"
	  nparams 2
	    param in name "elapsedRealtimeUs" explicit_type "long"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the total time in microseconds associated with this Timer for the
selected type of statistics.

@param elapsedRealtimeUs current elapsed realtime of system in microseconds
@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT
@return a time in microseconds"
	end

	operation 3698743 "getTimeSinceMarkLocked"
	  abstract public explicit_return_type "long"
	  nparams 1
	    param in name "elapsedRealtimeUs" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the total time in microseconds associated with this Timer since the
'mark' was last set.

@param elapsedRealtimeUs current elapsed realtime of system in microseconds
@return a time in microseconds"
	end

	operation 3698871 "logState"
	  abstract public explicit_return_type "void"
	  nparams 2
	    param inout name "pw" type class_ref 287415 // Printer
	    param inout name "prefix" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Temporary for debugging."
	end
      end

      class 537655 "Uid"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3698999 "getWakelockStats"
	  abstract public return_type class_ref 156343 // ArrayMap
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, ? extends Wakelock> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a mapping containing wakelock statistics.

@return a Map from Strings to Uid.Wakelock objects."
	end

	operation 3699127 "getSyncStats"
	  abstract public return_type class_ref 156343 // ArrayMap
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, ? extends Timer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a mapping containing sync statistics.

@return a Map from Strings to Timer objects."
	end

	operation 3699255 "getJobStats"
	  abstract public return_type class_ref 156343 // ArrayMap
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, ? extends Timer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a mapping containing scheduled job statistics.

@return a Map from Strings to Timer objects."
	end

	class 537783 "Wakelock"
	  abstract visibility public 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  operation 3699383 "getWakeTime"
	    abstract public return_type class_ref 537527 // Timer
	    nparams 1
	      param in name "type" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	operation 3699511 "getSensorStats"
	  abstract public return_type class_ref 139575 // SparseArray
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Sensor> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a mapping containing sensor statistics.

@return a Map from Integer sensor ids to Uid.Sensor objects."
	end

	operation 3699639 "getPidStats"
	  abstract public return_type class_ref 139575 // SparseArray
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Pid> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a mapping containing active process data."
	end

	operation 3699767 "getProcessStats"
	  abstract public return_type class_ref 156343 // ArrayMap
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, ? extends Proc> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a mapping containing process statistics.

@return a Map from Strings to Uid.Proc objects."
	end

	operation 3699895 "getPackageStats"
	  abstract public return_type class_ref 156343 // ArrayMap
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, ? extends Pkg> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a mapping containing package statistics.

@return a Map from Strings to Uid.Pkg objects."
	end

	operation 3700023 "getWifiControllerActivity"
	  abstract public return_type class_ref 537399 // ControllerActivityCounter
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3700151 "getBluetoothControllerActivity"
	  abstract public return_type class_ref 537399 // ControllerActivityCounter
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3700279 "getModemControllerActivity"
	  abstract public return_type class_ref 537399 // ControllerActivityCounter
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3700407 "getUid"
	  abstract public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@hide}"
	end

	operation 3700535 "noteWifiRunningLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3700663 "noteWifiStoppedLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3700791 "noteFullWifiLockAcquiredLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3700919 "noteFullWifiLockReleasedLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3701047 "noteWifiScanStartedLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3701175 "noteWifiScanStoppedLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3701303 "noteWifiBatchedScanStartedLocked"
	  abstract public explicit_return_type "void"
	  nparams 2
	    param in name "csph" explicit_type "int"
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3701431 "noteWifiBatchedScanStoppedLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3701559 "noteWifiMulticastEnabledLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3701687 "noteWifiMulticastDisabledLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3701815 "noteActivityResumedLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3701943 "noteActivityPausedLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3702071 "getWifiRunningTime"
	  abstract public explicit_return_type "long"
	  nparams 2
	    param in name "elapsedRealtimeUs" explicit_type "long"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3702199 "getFullWifiLockTime"
	  abstract public explicit_return_type "long"
	  nparams 2
	    param in name "elapsedRealtimeUs" explicit_type "long"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3702327 "getWifiScanTime"
	  abstract public explicit_return_type "long"
	  nparams 2
	    param in name "elapsedRealtimeUs" explicit_type "long"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3702455 "getWifiScanCount"
	  abstract public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3702583 "getWifiBatchedScanTime"
	  abstract public explicit_return_type "long"
	  nparams 3
	    param in name "csphBin" explicit_type "int"
	    param in name "elapsedRealtimeUs" explicit_type "long"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3702711 "getWifiBatchedScanCount"
	  abstract public explicit_return_type "int"
	  nparams 2
	    param in name "csphBin" explicit_type "int"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3702839 "getWifiMulticastTime"
	  abstract public explicit_return_type "long"
	  nparams 2
	    param in name "elapsedRealtimeUs" explicit_type "long"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3702967 "getAudioTurnedOnTimer"
	  abstract public return_type class_ref 537527 // Timer
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3703095 "getVideoTurnedOnTimer"
	  abstract public return_type class_ref 537527 // Timer
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3703223 "getFlashlightTurnedOnTimer"
	  abstract public return_type class_ref 537527 // Timer
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3703351 "getCameraTurnedOnTimer"
	  abstract public return_type class_ref 537527 // Timer
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3703479 "getForegroundActivityTimer"
	  abstract public return_type class_ref 537527 // Timer
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3703607 "getBluetoothScanTimer"
	  abstract public return_type class_ref 537527 // Timer
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 1587127 "PROCESS_STATE_TOP"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Note: the following times are disjoint.  They can be added together to find the
 total time a uid has had any processes running at all.

Time this uid has any processes in the top state (or above such as persistent).
"
	end

	attribute 1587255 "PROCESS_STATE_FOREGROUND_SERVICE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Time this uid has any process with a started out bound foreground service, but
none in the \"top\" state.
"
	end

	attribute 1587383 "PROCESS_STATE_TOP_SLEEPING"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Time this uid has any process that is top while the device is sleeping, but none
in the \"foreground service\" or better state.
"
	end

	attribute 1587511 "PROCESS_STATE_FOREGROUND"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Time this uid has any process in an active foreground state, but none in the
\"top sleeping\" or better state.
"
	end

	attribute 1587639 "PROCESS_STATE_BACKGROUND"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Time this uid has any process in an active background state, but none in the
\"foreground\" or better state.
"
	end

	attribute 1587767 "PROCESS_STATE_CACHED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 5"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Time this uid has any processes that are sitting around cached, not in one of the
other active states.
"
	end

	attribute 1587895 "NUM_PROCESS_STATE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 6"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Total number of process states we track.
"
	end

	classrelation 1437367 // PROCESS_STATE_NAMES (<unidirectional association>)
	  relation 1437367 --->
	    a role_name "PROCESS_STATE_NAMES" multiplicity "[]" init_value " {
            \"Top\", \"Fg Service\", \"Top Sleeping\", \"Foreground\", \"Background\", \"Cached\"
        }" class_relation const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1437367 // PROCESS_STATE_NAMES (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	operation 3703735 "getProcessStateTime"
	  abstract public explicit_return_type "long"
	  nparams 3
	    param in name "state" explicit_type "int"
	    param in name "elapsedRealtimeUs" explicit_type "long"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3703863 "getProcessStateTimer"
	  abstract public return_type class_ref 537527 // Timer
	  nparams 1
	    param in name "state" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3703991 "getVibratorOnTimer"
	  abstract public return_type class_ref 537527 // Timer
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 1588023 "NUM_WIFI_BATCHED_SCAN_BINS"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 5"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1437495 // USER_ACTIVITY_TYPES (<unidirectional association>)
	  relation 1437495 --->
	    a role_name "USER_ACTIVITY_TYPES" multiplicity "[]" init_value " {
            \"other\", \"button\", \"touch\", \"accessibility\"
        }" class_relation const_relation package
	      comment "
Note that these must match the constants in android.os.PowerManager.
Also, if the user activity types change, the BatteryStatsImpl.VERSION must
also be bumped.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1437495 // USER_ACTIVITY_TYPES (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1588151 "NUM_USER_ACTIVITY_TYPES"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3704119 "noteUserActivityLocked"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param in name "type" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3704247 "hasUserActivity"
	  abstract public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3704375 "getUserActivityCount"
	  abstract public explicit_return_type "int"
	  nparams 2
	    param in name "type" explicit_type "int"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3704503 "hasNetworkActivity"
	  abstract public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3704631 "getNetworkActivityBytes"
	  abstract public explicit_return_type "long"
	  nparams 2
	    param in name "type" explicit_type "int"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3704759 "getNetworkActivityPackets"
	  abstract public explicit_return_type "long"
	  nparams 2
	    param in name "type" explicit_type "int"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3704887 "getMobileRadioActiveTime"
	  abstract public explicit_return_type "long"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3705015 "getMobileRadioActiveCount"
	  abstract public explicit_return_type "int"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3705143 "getUserCpuTimeUs"
	  abstract public explicit_return_type "long"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the total cpu time (in microseconds) this UID had processes executing in userspace."
	end

	operation 3705271 "getSystemCpuTimeUs"
	  abstract public explicit_return_type "long"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the total cpu time (in microseconds) this UID had processes executing kernel syscalls."
	end

	operation 3705399 "getCpuPowerMaUs"
	  abstract public explicit_return_type "long"
	  nparams 1
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the total cpu power consumed (in milli-ampere-microseconds)."
	end

	operation 3705527 "getTimeAtCpuSpeed"
	  abstract public explicit_return_type "long"
	  nparams 3
	    param in name "cluster" explicit_type "int"
	    param in name "step" explicit_type "int"
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the approximate cpu time (in milliseconds) spent at a certain CPU speed for a
given CPU cluster.
@param cluster the index of the CPU cluster.
@param step the index of the CPU speed. This is not the actual speed of the CPU.
@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.
@see com.android.internal.os.PowerProfile#getNumCpuClusters()
@see com.android.internal.os.PowerProfile#getNumSpeedStepsInCpuCluster(int)"
	end

	class 537911 "Sensor"
	  abstract visibility public 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 1588279 "GPS"
	    class_attribute const_attribute public explicit_type "int"
	    init_value " -10000"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    comment "FIXME: it's not correct to use this magic value because it
could clash with a sensor handle (which are defined by
the sensor HAL, and therefore out of our control

 Magic sensor number for the GPS."
	  end

	  operation 3705655 "getHandle"
	    abstract public explicit_return_type "int"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 3705783 "getSensorTime"
	    abstract public return_type class_ref 537527 // Timer
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 538039 "Pid"
	  visibility public 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 1588407 "mWakeNesting"
	    public explicit_type "int"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 1588535 "mWakeSumMs"
	    public explicit_type "long"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 1588663 "mWakeStartMs"
	    public explicit_type "long"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end

	class 538167 "Proc"
	  abstract visibility public 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  class 538295 "ExcessivePower"
	    visibility public 
	    cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	    java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	    php_decl ""
	    python_2_2 python_decl ""
	    idl_decl ""
	    explicit_switch_type ""
	    
	    attribute 1588791 "TYPE_WAKE"
	      class_attribute const_attribute public explicit_type "int"
	      init_value " 1"
	      cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      php_decl ""
	      python_decl ""
	      idl_decl ""
	    end

	    attribute 1588919 "TYPE_CPU"
	      class_attribute const_attribute public explicit_type "int"
	      init_value " 2"
	      cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      php_decl ""
	      python_decl ""
	      idl_decl ""
	    end

	    attribute 1589047 "type"
	      public explicit_type "int"
	      cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      php_decl ""
	      python_decl ""
	      idl_decl ""
	    end

	    attribute 1589175 "overTime"
	      public explicit_type "long"
	      cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      php_decl ""
	      python_decl ""
	      idl_decl ""
	    end

	    attribute 1589303 "usedTime"
	      public explicit_type "long"
	      cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      php_decl ""
	      python_decl ""
	      idl_decl ""
	    end
	  end

	  operation 3705911 "isActive"
	    abstract public explicit_return_type "boolean"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns true if this process is still active in the battery stats."
	  end

	  operation 3706039 "getUserTime"
	    abstract public explicit_return_type "long"
	    nparams 1
	      param in name "which" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the total time (in milliseconds) spent executing in user code.

@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
	  end

	  operation 3706167 "getSystemTime"
	    abstract public explicit_return_type "long"
	    nparams 1
	      param in name "which" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the total time (in milliseconds) spent executing in system code.

@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
	  end

	  operation 3706295 "getStarts"
	    abstract public explicit_return_type "int"
	    nparams 1
	      param in name "which" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the number of times the process has been started.

@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
	  end

	  operation 3706423 "getNumCrashes"
	    abstract public explicit_return_type "int"
	    nparams 1
	      param in name "which" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the number of times the process has crashed.

@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
	  end

	  operation 3706551 "getNumAnrs"
	    abstract public explicit_return_type "int"
	    nparams 1
	      param in name "which" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the number of times the process has ANRed.

@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
	  end

	  operation 3706679 "getForegroundTime"
	    abstract public explicit_return_type "long"
	    nparams 1
	      param in name "which" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns the cpu time (milliseconds) spent while the process was in the foreground.
@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.
@return foreground cpu time in microseconds"
	  end

	  operation 3706807 "countExcessivePowers"
	    abstract public explicit_return_type "int"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 3706935 "getExcessivePower"
	    abstract public return_type class_ref 538295 // ExcessivePower
	    nparams 1
	      param in name "i" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end

	class 538423 "Pkg"
	  abstract visibility public 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  operation 3707063 "getWakeupAlarmStats"
	    abstract public return_type class_ref 156343 // ArrayMap
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, ? extends Counter> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns information about all wakeup alarms that have been triggered for this
package.  The mapping keys are tag names for the alarms, the counter contains
the number of times the alarm was triggered while on battery."
	  end

	  operation 3707191 "getServiceStats"
	    abstract public return_type class_ref 156343 // ArrayMap
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, ? extends Serv> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Returns a mapping containing service statistics."
	  end

	  class 538551 "Serv"
	    abstract visibility public 
	    cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	    java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	    php_decl ""
	    python_2_2 python_decl ""
	    idl_decl ""
	    explicit_switch_type ""
	    
	    operation 3707319 "getStartTime"
	      abstract public explicit_return_type "long"
	      nparams 2
	        param in name "batteryUptime" explicit_type "long"
	        param in name "which" explicit_type "int"
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	      comment "Returns the amount of time spent started.

@param batteryUptime elapsed uptime on battery in microseconds.
@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.
@return"
	    end

	    operation 3707447 "getStarts"
	      abstract public explicit_return_type "int"
	      nparams 1
	        param in name "which" explicit_type "int"
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	      comment "Returns the total number of times startService() has been called.

@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
	    end

	    operation 3707575 "getLaunches"
	      abstract public explicit_return_type "int"
	      nparams 1
	        param in name "which" explicit_type "int"
	      cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	      java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	      
	      
	      
	      comment "Returns the total number times the service has been launched.

@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
	    end
	  end
	end
      end

      class 538679 "LevelStepTracker"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1589431 "mLastStepTime"
	  public explicit_type "long"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1589559 "mNumStepDurations"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1589687 "mStepDurations"
	  const_attribute public explicit_type "long"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3707703 "LevelStepTracker"
	  public explicit_return_type ""
	  nparams 1
	    param in name "maxLevelSteps" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3707831 "LevelStepTracker"
	  public explicit_return_type ""
	  nparams 2
	    param in name "numSteps" explicit_type "int"
	    param inout name "steps" explicit_type "long"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3707959 "getDurationAt"
	  public explicit_return_type "long"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3708087 "getLevelAt"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3708215 "getInitModeAt"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3708343 "getModModeAt"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3708471 "appendHex"
	  private explicit_return_type "void"
	  nparams 3
	    param in name "val" explicit_type "long"
	    param in name "topOffset" explicit_type "int"
	    param inout name "out" explicit_type "StringBuilder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3708599 "encodeEntryAt"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "out" explicit_type "StringBuilder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3708727 "decodeEntryAt"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "index" explicit_type "int"
	    param inout name "value" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3708855 "init"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3708983 "clearTime"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3709111 "computeTimePerLevel"
	  public explicit_return_type "long"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3709239 "computeTimeEstimate"
	  public explicit_return_type "long"
	  nparams 3
	    param in name "modesOfInterest" explicit_type "long"
	    param in name "modeValues" explicit_type "long"
	    param inout name "outNumOfInterest" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3709367 "addLevelSteps"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "numStepLevels" explicit_type "int"
	    param in name "modeBits" explicit_type "long"
	    param in name "elapsedRealtime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3709495 "readFromParcel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "in" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3709623 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "out" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 538807 "PackageChange"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1437623 // mPackageName (<unidirectional association>)
	  relation 1437623 --->
	    a role_name "mPackageName" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1437623 // mPackageName (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1589815 "mUpdate"
	  public explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1589943 "mVersionCode"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 538935 "DailyItem"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1590071 "mStartTime"
	  public explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1590199 "mEndTime"
	  public explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1437751 // mDischargeSteps (<unidirectional association>)
	  relation 1437751 --->
	    a role_name "mDischargeSteps" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1437751 // mDischargeSteps (<unidirectional association>)
	    b parent class_ref 538679 // LevelStepTracker
	end

	classrelation 1437879 // mChargeSteps (<unidirectional association>)
	  relation 1437879 --->
	    a role_name "mChargeSteps" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1437879 // mChargeSteps (<unidirectional association>)
	    b parent class_ref 538679 // LevelStepTracker
	end

	classrelation 1438007 // mPackageChanges (<unidirectional association>)
	  relation 1438007 --->
	    stereotype "ArrayList"
	    a role_name "mPackageChanges" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 1438007 // mPackageChanges (<unidirectional association>)
	    b parent class_ref 538807 // PackageChange
	end
      end

      operation 3709751 "getDailyItemLocked"
	abstract public return_type class_ref 538935 // DailyItem
	nparams 1
	  param in name "daysAgo" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3709879 "getCurrentDailyStartTime"
	abstract public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3710007 "getNextMinDailyDeadline"
	abstract public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3710135 "getNextMaxDailyDeadline"
	abstract public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 539063 "HistoryTag"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1438135 // string (<unidirectional association>)
	  relation 1438135 --->
	    a role_name "string" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1438135 // string (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1590327 "uid"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1590455 "poolIdx"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3710263 "setTo"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "o" type class_ref 539063 // HistoryTag
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3710391 "setTo"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "_string" type class_ref 129591 // String
	    param in name "_uid" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3710519 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "dest" type class_ref 137527 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3710647 "readFromParcel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "src" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3710775 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 132663 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3710903 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 539191 "HistoryStepDetails"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1590583 "userTime"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Time (in 1/100 second) spent in user space and the kernel since the last step."
	end

	attribute 1590711 "systemTime"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1590839 "appCpuUid1"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Top three apps using CPU in the last step, with times in 1/100 second."
	end

	attribute 1590967 "appCpuUTime1"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1591095 "appCpuSTime1"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1591223 "appCpuUid2"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1591351 "appCpuUTime2"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1591479 "appCpuSTime2"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1591607 "appCpuUid3"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1591735 "appCpuUTime3"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1591863 "appCpuSTime3"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1591991 "statUserTime"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Information from /proc/stat"
	end

	attribute 1592119 "statSystemTime"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1592247 "statIOWaitTime"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1592375 "statIrqTime"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1592503 "statSoftIrqTime"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1592631 "statIdlTime"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1438263 // statPlatformIdleState (<unidirectional association>)
	  relation 1438263 --->
	    a role_name "statPlatformIdleState" public
	      comment " Platform-level low power state stats
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1438263 // statPlatformIdleState (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	operation 3711031 "HistoryStepDetails"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3711159 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3711287 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "out" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3711415 "readFromParcel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "in" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 539319 "HistoryItem"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1438391 // <realization>
	  relation 1438391 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1438391 // <realization>
	    b parent class_ref 137399 // Parcelable
	end

	classrelation 1438519 // next (<unidirectional association>)
	  relation 1438519 --->
	    a role_name "next" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1438519 // next (<unidirectional association>)
	    b parent class_ref 539319 // HistoryItem
	end

	attribute 1592759 "time"
	  public explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The time of this event in milliseconds, as per SystemClock.elapsedRealtime()."
	end

	attribute 1592887 "CMD_UPDATE"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " These can be written as deltas"
	end

	attribute 1593015 "CMD_NULL"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1593143 "CMD_START"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1593271 "CMD_CURRENT_TIME"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 5"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1593399 "CMD_OVERFLOW"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 6"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1593527 "CMD_RESET"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 7"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1593655 "CMD_SHUTDOWN"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 8"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1593783 "cmd"
	  public explicit_type "byte"
	  init_value " CMD_NULL"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3711543 "isDeltaData"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return whether the command code is a delta data update."
	end

	attribute 1593911 "batteryLevel"
	  public explicit_type "byte"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1594039 "batteryStatus"
	  public explicit_type "byte"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1594167 "batteryHealth"
	  public explicit_type "byte"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1594295 "batteryPlugType"
	  public explicit_type "byte"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1594423 "batteryTemperature"
	  public explicit_type "short"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1594551 "batteryVoltage"
	  public explicit_type "char"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1594679 "batteryChargeUAh"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The charge of the battery in micro-Ampere-hours."
	end

	attribute 1594807 "STATE_BRIGHTNESS_SHIFT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Constants from SCREEN_BRIGHTNESS_*"
	end

	attribute 1594935 "STATE_BRIGHTNESS_MASK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x7"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1595063 "STATE_PHONE_SIGNAL_STRENGTH_SHIFT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Constants from SIGNAL_STRENGTH_*"
	end

	attribute 1595191 "STATE_PHONE_SIGNAL_STRENGTH_MASK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x7 << STATE_PHONE_SIGNAL_STRENGTH_SHIFT"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1595319 "STATE_PHONE_STATE_SHIFT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 6"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Constants from ServiceState.STATE_*"
	end

	attribute 1595447 "STATE_PHONE_STATE_MASK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x7 << STATE_PHONE_STATE_SHIFT"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1595575 "STATE_DATA_CONNECTION_SHIFT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 9"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Constants from DATA_CONNECTION_*"
	end

	attribute 1595703 "STATE_DATA_CONNECTION_MASK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x1f << STATE_DATA_CONNECTION_SHIFT"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1595831 "STATE_CPU_RUNNING_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<31"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " These states always appear directly in the first int token
 of a delta change; they should be ones that change relatively
 frequently."
	end

	attribute 1595959 "STATE_WAKE_LOCK_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<30"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1596087 "STATE_GPS_ON_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<29"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1596215 "STATE_WIFI_FULL_LOCK_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<28"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1596343 "STATE_WIFI_SCAN_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<27"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1596471 "STATE_WIFI_RADIO_ACTIVE_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<26"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1596599 "STATE_MOBILE_RADIO_ACTIVE_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<25"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1596727 "STATE_RESERVED_0"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1<<24"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Do not use, this is used for coulomb delta count."
	end

	attribute 1596855 "STATE_SENSOR_ON_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<23"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " These are on the lower bits used for the command; if they change
 we need to write another int of data."
	end

	attribute 1596983 "STATE_AUDIO_ON_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<22"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1597111 "STATE_PHONE_SCANNING_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<21"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1597239 "STATE_SCREEN_ON_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<20"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " consider moving to states2"
	end

	attribute 1597367 "STATE_BATTERY_PLUGGED_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<19"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " consider moving to states2"
	end

	attribute 1597495 "STATE_WIFI_MULTICAST_ON_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<16"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " empty slot
 empty slot"
	end

	attribute 1597623 "MOST_INTERESTING_STATES"
	  class_attribute const_attribute public explicit_type "int"
	  init_value "
            STATE_BATTERY_PLUGGED_FLAG | STATE_SCREEN_ON_FLAG"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1597751 "SETTLE_TO_ZERO_STATES"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0xffff0000 & ~MOST_INTERESTING_STATES"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1597879 "states"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1598007 "STATE2_WIFI_SUPPL_STATE_SHIFT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Constants from WIFI_SUPPL_STATE_*"
	end

	attribute 1598135 "STATE2_WIFI_SUPPL_STATE_MASK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0xf"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1598263 "STATE2_WIFI_SIGNAL_STRENGTH_SHIFT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Values for NUM_WIFI_SIGNAL_STRENGTH_BINS"
	end

	attribute 1598391 "STATE2_WIFI_SIGNAL_STRENGTH_MASK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value "
                0x7 << STATE2_WIFI_SIGNAL_STRENGTH_SHIFT"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1598519 "STATE2_POWER_SAVE_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<31"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1598647 "STATE2_VIDEO_ON_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<30"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1598775 "STATE2_WIFI_RUNNING_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<29"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1598903 "STATE2_WIFI_ON_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<28"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1599031 "STATE2_FLASHLIGHT_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<27"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1599159 "STATE2_DEVICE_IDLE_SHIFT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 25"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1599287 "STATE2_DEVICE_IDLE_MASK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x3 << STATE2_DEVICE_IDLE_SHIFT"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1599415 "STATE2_CHARGING_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<24"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1599543 "STATE2_PHONE_IN_CALL_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<23"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1599671 "STATE2_BLUETOOTH_ON_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<22"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1599799 "STATE2_CAMERA_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1<<21"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1599927 "STATE2_BLUETOOTH_SCAN_FLAG"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1 << 20"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1600055 "MOST_INTERESTING_STATES2"
	  class_attribute const_attribute public explicit_type "int"
	  init_value "
            STATE2_POWER_SAVE_FLAG | STATE2_WIFI_ON_FLAG | STATE2_DEVICE_IDLE_MASK
            | STATE2_CHARGING_FLAG | STATE2_PHONE_IN_CALL_FLAG | STATE2_BLUETOOTH_ON_FLAG"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1600183 "SETTLE_TO_ZERO_STATES2"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0xffff0000 & ~MOST_INTERESTING_STATES2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1600311 "states2"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1438647 // wakelockTag (<unidirectional association>)
	  relation 1438647 --->
	    a role_name "wakelockTag" public
	      comment " The wake lock that was acquired at this point.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1438647 // wakelockTag (<unidirectional association>)
	    b parent class_ref 539063 // HistoryTag
	end

	classrelation 1438775 // wakeReasonTag (<unidirectional association>)
	  relation 1438775 --->
	    a role_name "wakeReasonTag" public
	      comment " Kernel wakeup reason at this point.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1438775 // wakeReasonTag (<unidirectional association>)
	    b parent class_ref 539063 // HistoryTag
	end

	classrelation 1438903 // stepDetails (<unidirectional association>)
	  relation 1438903 --->
	    a role_name "stepDetails" public
	      comment " Non-null when there is more detailed information at this step.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1438903 // stepDetails (<unidirectional association>)
	    b parent class_ref 539191 // HistoryStepDetails
	end

	attribute 1600439 "EVENT_FLAG_START"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x8000"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1600567 "EVENT_FLAG_FINISH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x4000"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1600695 "EVENT_NONE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0000"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " No event in this item."
	end

	attribute 1600823 "EVENT_PROC"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0001"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event is about a process that is running."
	end

	attribute 1600951 "EVENT_FOREGROUND"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0002"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event is about an application package that is in the foreground."
	end

	attribute 1601079 "EVENT_TOP"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0003"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event is about an application package that is at the top of the screen."
	end

	attribute 1601207 "EVENT_SYNC"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0004"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event is about active sync operations."
	end

	attribute 1601335 "EVENT_WAKE_LOCK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0005"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Events for all additional wake locks aquired/release within a wake block.
 These are not generated by default."
	end

	attribute 1601463 "EVENT_JOB"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0006"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event is about an application executing a scheduled job."
	end

	attribute 1601591 "EVENT_USER_RUNNING"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0007"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Events for users running."
	end

	attribute 1601719 "EVENT_USER_FOREGROUND"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0008"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Events for foreground user."
	end

	attribute 1601847 "EVENT_CONNECTIVITY_CHANGED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0009"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event for connectivity changed."
	end

	attribute 1601975 "EVENT_ACTIVE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x000a"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event for becoming active taking us out of idle mode."
	end

	attribute 1602103 "EVENT_PACKAGE_INSTALLED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x000b"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event for a package being installed."
	end

	attribute 1602231 "EVENT_PACKAGE_UNINSTALLED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x000c"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event for a package being uninstalled."
	end

	attribute 1602359 "EVENT_ALARM"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x000d"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event for a package being uninstalled."
	end

	attribute 1602487 "EVENT_COLLECT_EXTERNAL_STATS"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x000e"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Record that we have decided we need to collect new stats data."
	end

	attribute 1602615 "EVENT_PACKAGE_INACTIVE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x000f"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event for a package becoming inactive due to being unused for a period of time."
	end

	attribute 1602743 "EVENT_PACKAGE_ACTIVE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0010"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event for a package becoming active due to an interaction."
	end

	attribute 1602871 "EVENT_TEMP_WHITELIST"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0011"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event for a package being on the temporary whitelist."
	end

	attribute 1602999 "EVENT_SCREEN_WAKE_UP"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0012"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Event for the screen waking up."
	end

	attribute 1603127 "EVENT_COUNT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0x0013"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Number of event types."
	end

	attribute 1603255 "EVENT_TYPE_MASK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " ~(EVENT_FLAG_START|EVENT_FLAG_FINISH)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Mask to extract out only the type part of the event."
	end

	attribute 1603383 "EVENT_PROC_START"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_PROC | EVENT_FLAG_START"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1603511 "EVENT_PROC_FINISH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_PROC | EVENT_FLAG_FINISH"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1603639 "EVENT_FOREGROUND_START"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_FOREGROUND | EVENT_FLAG_START"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1603767 "EVENT_FOREGROUND_FINISH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_FOREGROUND | EVENT_FLAG_FINISH"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1603895 "EVENT_TOP_START"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_TOP | EVENT_FLAG_START"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1604023 "EVENT_TOP_FINISH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_TOP | EVENT_FLAG_FINISH"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1604151 "EVENT_SYNC_START"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_SYNC | EVENT_FLAG_START"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1604279 "EVENT_SYNC_FINISH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_SYNC | EVENT_FLAG_FINISH"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1604407 "EVENT_WAKE_LOCK_START"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_WAKE_LOCK | EVENT_FLAG_START"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1604535 "EVENT_WAKE_LOCK_FINISH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_WAKE_LOCK | EVENT_FLAG_FINISH"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1604663 "EVENT_JOB_START"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_JOB | EVENT_FLAG_START"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1604791 "EVENT_JOB_FINISH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_JOB | EVENT_FLAG_FINISH"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1604919 "EVENT_USER_RUNNING_START"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_USER_RUNNING | EVENT_FLAG_START"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1605047 "EVENT_USER_RUNNING_FINISH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_USER_RUNNING | EVENT_FLAG_FINISH"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1605175 "EVENT_USER_FOREGROUND_START"
	  class_attribute const_attribute public explicit_type "int"
	  init_value "
                EVENT_USER_FOREGROUND | EVENT_FLAG_START"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1605303 "EVENT_USER_FOREGROUND_FINISH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value "
                EVENT_USER_FOREGROUND | EVENT_FLAG_FINISH"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1605431 "EVENT_ALARM_START"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_ALARM | EVENT_FLAG_START"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1605559 "EVENT_ALARM_FINISH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " EVENT_ALARM | EVENT_FLAG_FINISH"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1605687 "EVENT_TEMP_WHITELIST_START"
	  class_attribute const_attribute public explicit_type "int"
	  init_value "
                EVENT_TEMP_WHITELIST | EVENT_FLAG_START"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1605815 "EVENT_TEMP_WHITELIST_FINISH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value "
                EVENT_TEMP_WHITELIST | EVENT_FLAG_FINISH"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1605943 "eventCode"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " For CMD_EVENT."
	end

	classrelation 1439031 // eventTag (<unidirectional association>)
	  relation 1439031 --->
	    a role_name "eventTag" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1439031 // eventTag (<unidirectional association>)
	    b parent class_ref 539063 // HistoryTag
	end

	attribute 1606071 "currentTime"
	  public explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Only set for CMD_CURRENT_TIME or CMD_RESET, as per System.currentTimeMillis()."
	end

	attribute 1606199 "numReadInts"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Meta-data when reading."
	end

	classrelation 1439159 // localWakelockTag (<unidirectional association>)
	  relation 1439159 --->
	    a role_name "localWakelockTag" init_value " new HistoryTag()" const_relation public
	      comment " Pre-allocated objects.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1439159 // localWakelockTag (<unidirectional association>)
	    b parent class_ref 539063 // HistoryTag
	end

	classrelation 1439287 // localWakeReasonTag (<unidirectional association>)
	  relation 1439287 --->
	    a role_name "localWakeReasonTag" init_value " new HistoryTag()" const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1439287 // localWakeReasonTag (<unidirectional association>)
	    b parent class_ref 539063 // HistoryTag
	end

	classrelation 1439415 // localEventTag (<unidirectional association>)
	  relation 1439415 --->
	    a role_name "localEventTag" init_value " new HistoryTag()" const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1439415 // localEventTag (<unidirectional association>)
	    b parent class_ref 539063 // HistoryTag
	end

	operation 3711671 "HistoryItem"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3711799 "HistoryItem"
	  public explicit_return_type ""
	  nparams 2
	    param in name "time" explicit_type "long"
	    param inout name "src" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3711927 "describeContents"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3712055 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "dest" type class_ref 137527 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3712183 "readFromParcel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "src" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3712311 "clear"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3712439 "setTo"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "o" type class_ref 539319 // HistoryItem
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3712567 "setTo"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "time" explicit_type "long"
	    param in name "cmd" explicit_type "byte"
	    param inout name "o" type class_ref 539319 // HistoryItem
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3712695 "setToCommon"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "o" type class_ref 539319 // HistoryItem
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3712823 "sameNonEvent"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 539319 // HistoryItem
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3712951 "same"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "o" type class_ref 539319 // HistoryItem
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 539447 "HistoryEventTracker"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1439543 // mActiveEvents (<unidirectional association>)
	  relation 1439543 --->
	    stereotype "HashMap"
	    a role_name "mActiveEvents" multiplicity "[]" init_value " (HashMap<String, SparseIntArray>[]) new HashMap[HistoryItem.EVENT_COUNT]" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, SparseIntArray>${multiplicity} ${name}${value};
"
	      classrelation_ref 1439543 // mActiveEvents (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	operation 3713079 "updateState"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "name" type class_ref 129591 // String
	    param in name "uid" explicit_type "int"
	    param in name "poolIdx" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3713207 "removeEvents"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "code" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3713335 "getStateForEvent"
	  public return_type class_ref 129591 // String
	  nparams 1
	    param in name "code" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}HashMap<${type}, SparseIntArray> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 539575 "BitDescription"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1606327 "mask"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1606455 "shift"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1439671 // name (<unidirectional association>)
	  relation 1439671 --->
	    a role_name "name" const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1439671 // name (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1439799 // shortName (<unidirectional association>)
	  relation 1439799 --->
	    a role_name "shortName" const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1439799 // shortName (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1439927 // values (<unidirectional association>)
	  relation 1439927 --->
	    a role_name "values" multiplicity "[]" const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1439927 // values (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1440055 // shortValues (<unidirectional association>)
	  relation 1440055 --->
	    a role_name "shortValues" multiplicity "[]" const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1440055 // shortValues (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	operation 3713463 "BitDescription"
	  public explicit_return_type ""
	  nparams 3
	    param in name "mask" explicit_type "int"
	    param inout name "name" type class_ref 129591 // String
	    param inout name "shortName" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3713591 "BitDescription"
	  public explicit_return_type ""
	  nparams 6
	    param in name "mask" explicit_type "int"
	    param in name "shift" explicit_type "int"
	    param inout name "name" type class_ref 129591 // String
	    param inout name "shortName" type class_ref 129591 // String
	    param inout name "values" type class_ref 129591 // String
	    param inout name "shortValues" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 3713719 "commitCurrentHistoryBatchLocked"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Don't allow any more batching in to the current history event.  This
is called when printing partial histories, so to ensure that the next
history event will go in to a new batch after what was printed in the
last partial history."
      end

      operation 3713847 "getHistoryTotalSize"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3713975 "getHistoryUsedSize"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3714103 "startIteratingHistoryLocked"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3714231 "getHistoryStringPoolSize"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3714359 "getHistoryStringPoolBytes"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3714487 "getHistoryTagPoolString"
	abstract public return_type class_ref 129591 // String
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3714615 "getHistoryTagPoolUid"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3714743 "getNextHistoryLocked"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "out" type class_ref 539319 // HistoryItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3714871 "finishIteratingHistoryLocked"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3714999 "startIteratingOldHistoryLocked"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3715127 "getNextOldHistoryLocked"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "out" type class_ref 539319 // HistoryItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3715255 "finishIteratingOldHistoryLocked"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3715383 "getHistoryBaseTime"
	abstract public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the base time offset for the battery history."
      end

      operation 3715511 "getStartCount"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times the device has been started."
      end

      operation 3715639 "getScreenOnTime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that the screen has been on while the device was
running on battery.

{@hide}"
      end

      operation 3715767 "getScreenOnCount"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times the screen was turned on.

{@hide}"
      end

      operation 3715895 "getInteractiveTime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1606583 "SCREEN_BRIGHTNESS_DARK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1606711 "SCREEN_BRIGHTNESS_DIM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1606839 "SCREEN_BRIGHTNESS_MEDIUM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1606967 "SCREEN_BRIGHTNESS_LIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1607095 "SCREEN_BRIGHTNESS_BRIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1440183 // SCREEN_BRIGHTNESS_NAMES (<unidirectional association>)
	relation 1440183 --->
	  a role_name "SCREEN_BRIGHTNESS_NAMES" multiplicity "[]" init_value " {
        \"dark\", \"dim\", \"medium\", \"light\", \"bright\"
    }" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1440183 // SCREEN_BRIGHTNESS_NAMES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1440311 // SCREEN_BRIGHTNESS_SHORT_NAMES (<unidirectional association>)
	relation 1440311 --->
	  a role_name "SCREEN_BRIGHTNESS_SHORT_NAMES" multiplicity "[]" init_value " {
        \"0\", \"1\", \"2\", \"3\", \"4\"
    }" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1440311 // SCREEN_BRIGHTNESS_SHORT_NAMES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1607223 "NUM_SCREEN_BRIGHTNESS_BINS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3716023 "getScreenBrightnessTime"
	abstract public explicit_return_type "long"
	nparams 3
	  param in name "brightnessBin" explicit_type "int"
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that the screen has been on with
the given brightness

{@hide}"
      end

      operation 3716151 "getPowerSaveModeEnabledTime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that power save mode has been enabled while the device was
running on battery.

{@hide}"
      end

      operation 3716279 "getPowerSaveModeEnabledCount"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times that power save mode was enabled.

{@hide}"
      end

      attribute 1607351 "DEVICE_IDLE_MODE_OFF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for device idle mode: not active.
"
      end

      attribute 1607479 "DEVICE_IDLE_MODE_LIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for device idle mode: active in lightweight mode.
"
      end

      attribute 1607607 "DEVICE_IDLE_MODE_DEEP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for device idle mode: active in full mode.
"
      end

      operation 3716407 "getDeviceIdleModeTime"
	abstract public explicit_return_type "long"
	nparams 3
	  param in name "mode" explicit_type "int"
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that device has been in idle mode while
running on battery.

{@hide}"
      end

      operation 3716535 "getDeviceIdleModeCount"
	abstract public explicit_return_type "int"
	nparams 2
	  param in name "mode" explicit_type "int"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times that the devie has gone in to idle mode.

{@hide}"
      end

      operation 3716663 "getLongestDeviceIdleModeTime"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the longest duration we spent in a particular device idle mode (fully in the
mode, not in idle maintenance etc)."
      end

      operation 3716791 "getDeviceIdlingTime"
	abstract public explicit_return_type "long"
	nparams 3
	  param in name "mode" explicit_type "int"
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that device has been in idling while on
battery.  This is broader than {@link #getDeviceIdleModeTime} -- it
counts all of the time that we consider the device to be idle, whether or not
it is currently in the actual device idle mode.

{@hide}"
      end

      operation 3716919 "getDeviceIdlingCount"
	abstract public explicit_return_type "int"
	nparams 2
	  param in name "mode" explicit_type "int"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times that the devie has started idling.

{@hide}"
      end

      operation 3717047 "getNumConnectivityChange"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times that connectivity state changed.

{@hide}"
      end

      operation 3717175 "getPhoneOnTime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that the phone has been on while the device was
running on battery.

{@hide}"
      end

      operation 3717303 "getPhoneOnCount"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times a phone call was activated.

{@hide}"
      end

      operation 3717431 "getPhoneSignalStrengthTime"
	abstract public explicit_return_type "long"
	nparams 3
	  param in name "strengthBin" explicit_type "int"
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that the phone has been running with
the given signal strength.

{@hide}"
      end

      operation 3717559 "getPhoneSignalScanningTime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that the phone has been trying to
acquire a signal.

{@hide}"
      end

      operation 3717687 "getPhoneSignalStrengthCount"
	abstract public explicit_return_type "int"
	nparams 2
	  param in name "strengthBin" explicit_type "int"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times the phone has entered the given signal strength.

{@hide}"
      end

      operation 3717815 "getMobileRadioActiveTime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that the mobile network has been active
(in a high power state).

{@hide}"
      end

      operation 3717943 "getMobileRadioActiveCount"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times that the mobile network has transitioned to the
active state.

{@hide}"
      end

      operation 3718071 "getMobileRadioActiveAdjustedTime"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that is the difference between the mobile radio
time we saw based on the elapsed timestamp when going down vs. the given time stamp
from the radio.

{@hide}"
      end

      operation 3718199 "getMobileRadioActiveUnknownTime"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that the mobile network has been active
(in a high power state) but not being able to blame on an app.

{@hide}"
      end

      operation 3718327 "getMobileRadioActiveUnknownCount"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return count of number of times radio was up that could not be blamed on apps.

{@hide}"
      end

      attribute 1607735 "DATA_CONNECTION_NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1607863 "DATA_CONNECTION_GPRS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1607991 "DATA_CONNECTION_EDGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1608119 "DATA_CONNECTION_UMTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1608247 "DATA_CONNECTION_CDMA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1608375 "DATA_CONNECTION_EVDO_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1608503 "DATA_CONNECTION_EVDO_A"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1608631 "DATA_CONNECTION_1xRTT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1608759 "DATA_CONNECTION_HSDPA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1608887 "DATA_CONNECTION_HSUPA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1609015 "DATA_CONNECTION_HSPA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1609143 "DATA_CONNECTION_IDEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1609271 "DATA_CONNECTION_EVDO_B"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1609399 "DATA_CONNECTION_LTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1609527 "DATA_CONNECTION_EHRPD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1609655 "DATA_CONNECTION_HSPAP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1609783 "DATA_CONNECTION_OTHER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1440439 // DATA_CONNECTION_NAMES (<unidirectional association>)
	relation 1440439 --->
	  a role_name "DATA_CONNECTION_NAMES" multiplicity "[]" init_value " {
        \"none\", \"gprs\", \"edge\", \"umts\", \"cdma\", \"evdo_0\", \"evdo_A\",
        \"1xrtt\", \"hsdpa\", \"hsupa\", \"hspa\", \"iden\", \"evdo_b\", \"lte\",
        \"ehrpd\", \"hspap\", \"other\"
    }" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1440439 // DATA_CONNECTION_NAMES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1609911 "NUM_DATA_CONNECTION_TYPES"
	class_attribute const_attribute public explicit_type "int"
	init_value " DATA_CONNECTION_OTHER+1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3718455 "getPhoneDataConnectionTime"
	abstract public explicit_return_type "long"
	nparams 3
	  param in name "dataType" explicit_type "int"
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that the phone has been running with
the given data connection.

{@hide}"
      end

      operation 3718583 "getPhoneDataConnectionCount"
	abstract public explicit_return_type "int"
	nparams 2
	  param in name "dataType" explicit_type "int"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times the phone has entered the given data
connection type.

{@hide}"
      end

      attribute 1610039 "WIFI_SUPPL_STATE_INVALID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1610167 "WIFI_SUPPL_STATE_DISCONNECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1610295 "WIFI_SUPPL_STATE_INTERFACE_DISABLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1610423 "WIFI_SUPPL_STATE_INACTIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1610551 "WIFI_SUPPL_STATE_SCANNING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1610679 "WIFI_SUPPL_STATE_AUTHENTICATING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1610807 "WIFI_SUPPL_STATE_ASSOCIATING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1610935 "WIFI_SUPPL_STATE_ASSOCIATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1611063 "WIFI_SUPPL_STATE_FOUR_WAY_HANDSHAKE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1611191 "WIFI_SUPPL_STATE_GROUP_HANDSHAKE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1611319 "WIFI_SUPPL_STATE_COMPLETED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1611447 "WIFI_SUPPL_STATE_DORMANT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1611575 "WIFI_SUPPL_STATE_UNINITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1611703 "NUM_WIFI_SUPPL_STATES"
	class_attribute const_attribute public explicit_type "int"
	init_value " WIFI_SUPPL_STATE_UNINITIALIZED+1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1440567 // WIFI_SUPPL_STATE_NAMES (<unidirectional association>)
	relation 1440567 --->
	  a role_name "WIFI_SUPPL_STATE_NAMES" multiplicity "[]" init_value " {
        \"invalid\", \"disconn\", \"disabled\", \"inactive\", \"scanning\",
        \"authenticating\", \"associating\", \"associated\", \"4-way-handshake\",
        \"group-handshake\", \"completed\", \"dormant\", \"uninit\"
    }" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1440567 // WIFI_SUPPL_STATE_NAMES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1440695 // WIFI_SUPPL_STATE_SHORT_NAMES (<unidirectional association>)
	relation 1440695 --->
	  a role_name "WIFI_SUPPL_STATE_SHORT_NAMES" multiplicity "[]" init_value " {
        \"inv\", \"dsc\", \"dis\", \"inact\", \"scan\",
        \"auth\", \"ascing\", \"asced\", \"4-way\",
        \"group\", \"compl\", \"dorm\", \"uninit\"
    }" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1440695 // WIFI_SUPPL_STATE_SHORT_NAMES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1440823 // HISTORY_STATE_DESCRIPTIONS (<unidirectional association>)
	relation 1440823 --->
	  a role_name "HISTORY_STATE_DESCRIPTIONS" multiplicity "[]" init_value " new BitDescription[] {
        new BitDescription(HistoryItem.STATE_CPU_RUNNING_FLAG, \"running\", \"r\"),
        new BitDescription(HistoryItem.STATE_WAKE_LOCK_FLAG, \"wake_lock\", \"w\"),
        new BitDescription(HistoryItem.STATE_SENSOR_ON_FLAG, \"sensor\", \"s\"),
        new BitDescription(HistoryItem.STATE_GPS_ON_FLAG, \"gps\", \"g\"),
        new BitDescription(HistoryItem.STATE_WIFI_FULL_LOCK_FLAG, \"wifi_full_lock\", \"Wl\"),
        new BitDescription(HistoryItem.STATE_WIFI_SCAN_FLAG, \"wifi_scan\", \"Ws\"),
        new BitDescription(HistoryItem.STATE_WIFI_MULTICAST_ON_FLAG, \"wifi_multicast\", \"Wm\"),
        new BitDescription(HistoryItem.STATE_WIFI_RADIO_ACTIVE_FLAG, \"wifi_radio\", \"Wr\"),
        new BitDescription(HistoryItem.STATE_MOBILE_RADIO_ACTIVE_FLAG, \"mobile_radio\", \"Pr\"),
        new BitDescription(HistoryItem.STATE_PHONE_SCANNING_FLAG, \"phone_scanning\", \"Psc\"),
        new BitDescription(HistoryItem.STATE_AUDIO_ON_FLAG, \"audio\", \"a\"),
        new BitDescription(HistoryItem.STATE_SCREEN_ON_FLAG, \"screen\", \"S\"),
        new BitDescription(HistoryItem.STATE_BATTERY_PLUGGED_FLAG, \"plugged\", \"BP\"),
        new BitDescription(HistoryItem.STATE_DATA_CONNECTION_MASK,
                HistoryItem.STATE_DATA_CONNECTION_SHIFT, \"data_conn\", \"Pcn\",
                DATA_CONNECTION_NAMES, DATA_CONNECTION_NAMES),
        new BitDescription(HistoryItem.STATE_PHONE_STATE_MASK,
                HistoryItem.STATE_PHONE_STATE_SHIFT, \"phone_state\", \"Pst\",
                new String[] {\"in\", \"out\", \"emergency\", \"off\"},
                new String[] {\"in\", \"out\", \"em\", \"off\"}),
        new BitDescription(HistoryItem.STATE_PHONE_SIGNAL_STRENGTH_MASK,
                HistoryItem.STATE_PHONE_SIGNAL_STRENGTH_SHIFT, \"phone_signal_strength\", \"Pss\",
                SignalStrength.SIGNAL_STRENGTH_NAMES,
                new String[] { \"0\", \"1\", \"2\", \"3\", \"4\" }),
        new BitDescription(HistoryItem.STATE_BRIGHTNESS_MASK,
                HistoryItem.STATE_BRIGHTNESS_SHIFT, \"brightness\", \"Sb\",
                SCREEN_BRIGHTNESS_NAMES, SCREEN_BRIGHTNESS_SHORT_NAMES),
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1440823 // HISTORY_STATE_DESCRIPTIONS (<unidirectional association>)
	  b parent class_ref 539575 // BitDescription
      end

      classrelation 1440951 // HISTORY_STATE2_DESCRIPTIONS (<unidirectional association>)
	relation 1440951 --->
	  a role_name "HISTORY_STATE2_DESCRIPTIONS" multiplicity "[]" init_value " new BitDescription[] {
        new BitDescription(HistoryItem.STATE2_POWER_SAVE_FLAG, \"power_save\", \"ps\"),
        new BitDescription(HistoryItem.STATE2_VIDEO_ON_FLAG, \"video\", \"v\"),
        new BitDescription(HistoryItem.STATE2_WIFI_RUNNING_FLAG, \"wifi_running\", \"Ww\"),
        new BitDescription(HistoryItem.STATE2_WIFI_ON_FLAG, \"wifi\", \"W\"),
        new BitDescription(HistoryItem.STATE2_FLASHLIGHT_FLAG, \"flashlight\", \"fl\"),
        new BitDescription(HistoryItem.STATE2_DEVICE_IDLE_MASK,
                HistoryItem.STATE2_DEVICE_IDLE_SHIFT, \"device_idle\", \"di\",
                new String[] { \"off\", \"light\", \"full\", \"???\" },
                new String[] { \"off\", \"light\", \"full\", \"???\" }),
        new BitDescription(HistoryItem.STATE2_CHARGING_FLAG, \"charging\", \"ch\"),
        new BitDescription(HistoryItem.STATE2_PHONE_IN_CALL_FLAG, \"phone_in_call\", \"Pcl\"),
        new BitDescription(HistoryItem.STATE2_BLUETOOTH_ON_FLAG, \"bluetooth\", \"b\"),
        new BitDescription(HistoryItem.STATE2_WIFI_SIGNAL_STRENGTH_MASK,
                HistoryItem.STATE2_WIFI_SIGNAL_STRENGTH_SHIFT, \"wifi_signal_strength\", \"Wss\",
                new String[] { \"0\", \"1\", \"2\", \"3\", \"4\" },
                new String[] { \"0\", \"1\", \"2\", \"3\", \"4\" }),
        new BitDescription(HistoryItem.STATE2_WIFI_SUPPL_STATE_MASK,
                HistoryItem.STATE2_WIFI_SUPPL_STATE_SHIFT, \"wifi_suppl\", \"Wsp\",
                WIFI_SUPPL_STATE_NAMES, WIFI_SUPPL_STATE_SHORT_NAMES),
        new BitDescription(HistoryItem.STATE2_CAMERA_FLAG, \"camera\", \"ca\"),
        new BitDescription(HistoryItem.STATE2_BLUETOOTH_SCAN_FLAG, \"ble_scan\", \"bles\"),
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1440951 // HISTORY_STATE2_DESCRIPTIONS (<unidirectional association>)
	  b parent class_ref 539575 // BitDescription
      end

      classrelation 1441079 // HISTORY_EVENT_NAMES (<unidirectional association>)
	relation 1441079 --->
	  a role_name "HISTORY_EVENT_NAMES" multiplicity "[]" init_value " new String[] {
            \"null\", \"proc\", \"fg\", \"top\", \"sync\", \"wake_lock_in\", \"job\", \"user\", \"userfg\", \"conn\",
            \"active\", \"pkginst\", \"pkgunin\", \"alarm\", \"stats\", \"inactive\", \"active\", \"tmpwhitelist\",
            \"screenwake\",
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1441079 // HISTORY_EVENT_NAMES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1441207 // HISTORY_EVENT_CHECKIN_NAMES (<unidirectional association>)
	relation 1441207 --->
	  a role_name "HISTORY_EVENT_CHECKIN_NAMES" multiplicity "[]" init_value " new String[] {
            \"Enl\", \"Epr\", \"Efg\", \"Etp\", \"Esy\", \"Ewl\", \"Ejb\", \"Eur\", \"Euf\", \"Ecn\",
            \"Eac\", \"Epi\", \"Epu\", \"Eal\", \"Est\", \"Eai\", \"Eaa\", \"Etw\",
            \"Esw\",
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1441207 // HISTORY_EVENT_CHECKIN_NAMES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3718711 "getWifiOnTime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that wifi has been on while the device was
running on battery.

{@hide}"
      end

      operation 3718839 "getGlobalWifiRunningTime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that wifi has been on and the driver has
been in the running state while the device was running on battery.

{@hide}"
      end

      attribute 1611831 "WIFI_STATE_OFF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1611959 "WIFI_STATE_OFF_SCANNING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1612087 "WIFI_STATE_ON_NO_NETWORKS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1612215 "WIFI_STATE_ON_DISCONNECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1612343 "WIFI_STATE_ON_CONNECTED_STA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1612471 "WIFI_STATE_ON_CONNECTED_P2P"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1612599 "WIFI_STATE_ON_CONNECTED_STA_P2P"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1612727 "WIFI_STATE_SOFT_AP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1441335 // WIFI_STATE_NAMES (<unidirectional association>)
	relation 1441335 --->
	  a role_name "WIFI_STATE_NAMES" multiplicity "[]" init_value " {
        \"off\", \"scanning\", \"no_net\", \"disconn\",
        \"sta\", \"p2p\", \"sta_p2p\", \"soft_ap\"
    }" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1441335 // WIFI_STATE_NAMES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1612855 "NUM_WIFI_STATES"
	class_attribute const_attribute public explicit_type "int"
	init_value " WIFI_STATE_SOFT_AP+1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3718967 "getWifiStateTime"
	abstract public explicit_return_type "long"
	nparams 3
	  param in name "wifiState" explicit_type "int"
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that WiFi has been running in the given state.

{@hide}"
      end

      operation 3719095 "getWifiStateCount"
	abstract public explicit_return_type "int"
	nparams 2
	  param in name "wifiState" explicit_type "int"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times that WiFi has entered the given state.

{@hide}"
      end

      operation 3719223 "getWifiSupplStateTime"
	abstract public explicit_return_type "long"
	nparams 3
	  param in name "state" explicit_type "int"
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that the wifi supplicant has been
in a given state.

{@hide}"
      end

      operation 3719351 "getWifiSupplStateCount"
	abstract public explicit_return_type "int"
	nparams 2
	  param in name "state" explicit_type "int"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times that the wifi supplicant has transitioned
to a given state.

{@hide}"
      end

      attribute 1612983 "NUM_WIFI_SIGNAL_STRENGTH_BINS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3719479 "getWifiSignalStrengthTime"
	abstract public explicit_return_type "long"
	nparams 3
	  param in name "strengthBin" explicit_type "int"
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that WIFI has been running with
the given signal strength.

{@hide}"
      end

      operation 3719607 "getWifiSignalStrengthCount"
	abstract public explicit_return_type "int"
	nparams 2
	  param in name "strengthBin" explicit_type "int"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times WIFI has entered the given signal strength.

{@hide}"
      end

      operation 3719735 "getFlashlightOnTime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that the flashlight has been on while the device was
running on battery.

{@hide}"
      end

      operation 3719863 "getFlashlightOnCount"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of times that the flashlight has been turned on while the device was
running on battery.

{@hide}"
      end

      operation 3719991 "getCameraOnTime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that the camera has been on while the device was
running on battery.

{@hide}"
      end

      operation 3720119 "getBluetoothScanTime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time in microseconds that bluetooth scans were running while the device was
on battery.

{@hide}"
      end

      attribute 1613111 "NETWORK_MOBILE_RX_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1613239 "NETWORK_MOBILE_TX_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1613367 "NETWORK_WIFI_RX_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1613495 "NETWORK_WIFI_TX_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1613623 "NETWORK_BT_RX_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1613751 "NETWORK_BT_TX_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1613879 "NUM_NETWORK_ACTIVITY_TYPES"
	class_attribute const_attribute public explicit_type "int"
	init_value " NETWORK_BT_TX_DATA + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3720247 "getNetworkActivityBytes"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "type" explicit_type "int"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3720375 "getNetworkActivityPackets"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "type" explicit_type "int"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3720503 "hasWifiActivityReporting"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the BatteryStats object has detailed WiFi power reports.
When true, calling {@link #getWifiControllerActivity()} will yield the
actual power data."
      end

      operation 3720631 "getWifiControllerActivity"
	abstract public return_type class_ref 537399 // ControllerActivityCounter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link ControllerActivityCounter} which is an aggregate of the times spent
in various radio controller states, such as transmit, receive, and idle.
@return non-null {@link ControllerActivityCounter}"
      end

      operation 3720759 "hasBluetoothActivityReporting"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the BatteryStats object has detailed bluetooth power reports.
When true, calling {@link #getBluetoothControllerActivity()} will yield the
actual power data."
      end

      operation 3720887 "getBluetoothControllerActivity"
	abstract public return_type class_ref 537399 // ControllerActivityCounter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link ControllerActivityCounter} which is an aggregate of the times spent
in various radio controller states, such as transmit, receive, and idle.
@return non-null {@link ControllerActivityCounter}"
      end

      operation 3721015 "hasModemActivityReporting"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the BatteryStats object has detailed modem power reports.
When true, calling {@link #getModemControllerActivity()} will yield the
actual power data."
      end

      operation 3721143 "getModemControllerActivity"
	abstract public return_type class_ref 537399 // ControllerActivityCounter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link ControllerActivityCounter} which is an aggregate of the times spent
in various radio controller states, such as transmit, receive, and idle.
@return non-null {@link ControllerActivityCounter}"
      end

      operation 3721271 "getStartClockTime"
	abstract public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the wall clock time when battery stats data collection started."
      end

      operation 3721399 "getStartPlatformVersion"
	abstract public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return platform version tag that we were running in when the battery stats started."
      end

      operation 3721527 "getEndPlatformVersion"
	abstract public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return platform version tag that we were running in when the battery stats ended."
      end

      operation 3721655 "getParcelVersion"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the internal version code of the parcelled format."
      end

      operation 3721783 "getIsOnBattery"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether we are currently running on battery."
      end

      operation 3721911 "getUidStats"
	abstract public return_type class_ref 139575 // SparseArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Uid> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a SparseArray containing the statistics for each uid."
      end

      operation 3722039 "getBatteryUptime"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "curTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current battery uptime in microseconds.

@param curTime the amount of elapsed realtime in microseconds."
      end

      operation 3722167 "getBatteryRealtime"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "curTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current battery realtime in microseconds.

@param curTime the amount of elapsed realtime in microseconds."
      end

      operation 3722295 "getDischargeStartLevel"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the battery percentage level at the last time the device was unplugged from power, or
the last time it booted on battery power. "
      end

      operation 3722423 "getDischargeCurrentLevel"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current battery percentage level if we are in a discharge cycle, otherwise
returns the level at the last plug event."
      end

      operation 3722551 "getLowDischargeAmountSinceCharge"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the amount the battery has discharged since the stats were
last reset after charging, as a lower-end approximation."
      end

      operation 3722679 "getHighDischargeAmountSinceCharge"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the amount the battery has discharged since the stats were
last reset after charging, as an upper-end approximation."
      end

      operation 3722807 "getDischargeAmount"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the discharge amount over the selected discharge period <var>which</var>."
      end

      operation 3722935 "getDischargeAmountScreenOn"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the amount the battery has discharged while the screen was on,
since the last time power was unplugged."
      end

      operation 3723063 "getDischargeAmountScreenOnSinceCharge"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the amount the battery has discharged while the screen was on,
since the last time the device was charged."
      end

      operation 3723191 "getDischargeAmountScreenOff"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the amount the battery has discharged while the screen was off,
since the last time power was unplugged."
      end

      operation 3723319 "getDischargeAmountScreenOffSinceCharge"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the amount the battery has discharged while the screen was off,
since the last time the device was charged."
      end

      operation 3723447 "computeBatteryUptime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "curTime" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total, last, or current battery uptime in microseconds.

@param curTime the elapsed realtime in microseconds.
@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
      end

      operation 3723575 "computeBatteryRealtime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "curTime" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total, last, or current battery realtime in microseconds.

@param curTime the current elapsed realtime in microseconds.
@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
      end

      operation 3723703 "computeBatteryScreenOffUptime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "curTime" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total, last, or current battery screen off uptime in microseconds.

@param curTime the elapsed realtime in microseconds.
@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
      end

      operation 3723831 "computeBatteryScreenOffRealtime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "curTime" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total, last, or current battery screen off realtime in microseconds.

@param curTime the current elapsed realtime in microseconds.
@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
      end

      operation 3723959 "computeUptime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "curTime" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total, last, or current uptime in microseconds.

@param curTime the current elapsed realtime in microseconds.
@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
      end

      operation 3724087 "computeRealtime"
	abstract public explicit_return_type "long"
	nparams 2
	  param in name "curTime" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the total, last, or current realtime in microseconds.

@param curTime the current elapsed realtime in microseconds.
@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT."
      end

      operation 3724215 "computeBatteryTimeRemaining"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "curTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compute an approximation for how much run time (in microseconds) is remaining on
the battery.  Returns -1 if no time can be computed: either there is not
enough current data to make a decision, or the battery is currently
charging.

@param curTime The current elepsed realtime in microseconds."
      end

      attribute 1614007 "STEP_LEVEL_TIME_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x000000ffffffffffL"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The part of a step duration that is the actual time."
      end

      attribute 1614135 "STEP_LEVEL_LEVEL_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x0000ff0000000000L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Bits in a step duration that are the new battery level we are at."
      end

      attribute 1614263 "STEP_LEVEL_LEVEL_SHIFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 40"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1614391 "STEP_LEVEL_INITIAL_MODE_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x00ff000000000000L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Bits in a step duration that are the initial mode we were in at that step."
      end

      attribute 1614519 "STEP_LEVEL_INITIAL_MODE_SHIFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 48"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1614647 "STEP_LEVEL_MODIFIED_MODE_MASK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0xff00000000000000L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Bits in a step duration that indicate which modes changed during that step."
      end

      attribute 1614775 "STEP_LEVEL_MODIFIED_MODE_SHIFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 56"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1614903 "STEP_LEVEL_MODE_SCREEN_STATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x03"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Step duration mode: the screen is on, off, dozed, etc; value is Display.STATE_* - 1."
      end

      attribute 1615031 "STEP_LEVEL_MODE_POWER_SAVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Step duration mode: power save is on."
      end

      attribute 1615159 "STEP_LEVEL_MODE_DEVICE_IDLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Step duration mode: device is currently in idle mode."
      end

      attribute 1615287 "STEP_LEVEL_MODES_OF_INTEREST"
	class_attribute const_attribute public explicit_type "int"
	multiplicity "[]"
	init_value " new int[] {
            STEP_LEVEL_MODE_SCREEN_STATE|STEP_LEVEL_MODE_POWER_SAVE,
            STEP_LEVEL_MODE_SCREEN_STATE|STEP_LEVEL_MODE_POWER_SAVE|STEP_LEVEL_MODE_DEVICE_IDLE,
            STEP_LEVEL_MODE_SCREEN_STATE|STEP_LEVEL_MODE_DEVICE_IDLE,
            STEP_LEVEL_MODE_SCREEN_STATE|STEP_LEVEL_MODE_POWER_SAVE,
            STEP_LEVEL_MODE_SCREEN_STATE|STEP_LEVEL_MODE_POWER_SAVE,
            STEP_LEVEL_MODE_SCREEN_STATE|STEP_LEVEL_MODE_POWER_SAVE,
            STEP_LEVEL_MODE_SCREEN_STATE|STEP_LEVEL_MODE_POWER_SAVE,
            STEP_LEVEL_MODE_SCREEN_STATE|STEP_LEVEL_MODE_POWER_SAVE,
            STEP_LEVEL_MODE_SCREEN_STATE|STEP_LEVEL_MODE_POWER_SAVE|STEP_LEVEL_MODE_DEVICE_IDLE,
            STEP_LEVEL_MODE_SCREEN_STATE|STEP_LEVEL_MODE_DEVICE_IDLE,
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1615415 "STEP_LEVEL_MODE_VALUES"
	class_attribute const_attribute public explicit_type "int"
	multiplicity "[]"
	init_value " new int[] {
            (Display.STATE_OFF-1),
            (Display.STATE_OFF-1)|STEP_LEVEL_MODE_POWER_SAVE,
            (Display.STATE_OFF-1)|STEP_LEVEL_MODE_DEVICE_IDLE,
            (Display.STATE_ON-1),
            (Display.STATE_ON-1)|STEP_LEVEL_MODE_POWER_SAVE,
            (Display.STATE_DOZE-1),
            (Display.STATE_DOZE-1)|STEP_LEVEL_MODE_POWER_SAVE,
            (Display.STATE_DOZE_SUSPEND-1),
            (Display.STATE_DOZE_SUSPEND-1)|STEP_LEVEL_MODE_POWER_SAVE,
            (Display.STATE_DOZE_SUSPEND-1)|STEP_LEVEL_MODE_DEVICE_IDLE,
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1441463 // STEP_LEVEL_MODE_LABELS (<unidirectional association>)
	relation 1441463 --->
	  a role_name "STEP_LEVEL_MODE_LABELS" multiplicity "[]" init_value " new String[] {
            \"screen off\",
            \"screen off power save\",
            \"screen off device idle\",
            \"screen on\",
            \"screen on power save\",
            \"screen doze\",
            \"screen doze power save\",
            \"screen doze-suspend\",
            \"screen doze-suspend power save\",
            \"screen doze-suspend device idle\",
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1441463 // STEP_LEVEL_MODE_LABELS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3724343 "getDischargeScreenOffCoulombCounter"
	abstract public return_type class_ref 537271 // LongCounter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the counter keeping track of the amount of battery discharge while the screen was off,
measured in micro-Ampere-hours. This will be non-zero only if the device's battery has
a coulomb counter."
      end

      operation 3724471 "getDischargeCoulombCounter"
	abstract public return_type class_ref 537271 // LongCounter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the counter keeping track of the amount of battery discharge measured in
micro-Ampere-hours. This will be non-zero only if the device's battery has
a coulomb counter."
      end

      operation 3724599 "getEstimatedBatteryCapacity"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the estimated real battery capacity, which may be less than the capacity
declared by the PowerProfile.
@return The estimated battery capacity in mAh."
      end

      operation 3724727 "getDischargeLevelStepTracker"
	abstract public return_type class_ref 538679 // LevelStepTracker
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the array of discharge step durations."
      end

      operation 3724855 "getDailyDischargeLevelStepTracker"
	abstract public return_type class_ref 538679 // LevelStepTracker
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the array of daily discharge step durations."
      end

      operation 3724983 "computeChargeTimeRemaining"
	abstract public explicit_return_type "long"
	nparams 1
	  param in name "curTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compute an approximation for how much time (in microseconds) remains until the battery
is fully charged.  Returns -1 if no time can be computed: either there is not
enough current data to make a decision, or the battery is currently
discharging.

@param curTime The current elepsed realtime in microseconds."
      end

      operation 3725111 "getChargeLevelStepTracker"
	abstract public return_type class_ref 538679 // LevelStepTracker
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the array of charge step durations."
      end

      operation 3725239 "getDailyChargeLevelStepTracker"
	abstract public return_type class_ref 538679 // LevelStepTracker
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the array of daily charge step durations."
      end

      operation 3725367 "getDailyPackageChanges"
	abstract public return_type class_ref 538807 // PackageChange
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3725495 "getWakeupReasonStats"
	abstract public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type}, ? extends Timer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3725623 "getKernelWakelockStats"
	abstract public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type}, ? extends Timer> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3725751 "writeToParcelWithoutUids"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3725879 "formatTimeRaw"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "out" explicit_type "StringBuilder"
	  param in name "seconds" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3726007 "formatTimeMs"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "sb" explicit_type "StringBuilder"
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3726135 "formatTimeMsNoSpace"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "sb" explicit_type "StringBuilder"
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3726263 "formatRatioLocked"
	public return_type class_ref 129591 // String
	nparams 2
	  param in name "num" explicit_type "long"
	  param in name "den" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3726391 "formatBytesLocked"
	package return_type class_ref 129591 // String
	nparams 1
	  param in name "bytes" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3726519 "computeWakeLock"
	class_operation private explicit_return_type "long"
	nparams 3
	  param inout name "timer" type class_ref 537527 // Timer
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3726647 "printWakeLock"
	class_operation private return_type class_ref 129591 // String
	nparams 6
	  param inout name "sb" explicit_type "StringBuilder"
	  param inout name "timer" type class_ref 537527 // Timer
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param inout name "name" type class_ref 129591 // String
	  param in name "which" explicit_type "int"
	  param inout name "linePrefix" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param sb a StringBuilder object.
@param timer a Timer object contining the wakelock times.
@param elapsedRealtimeUs the current on-battery time in microseconds.
@param name the name of the wakelock.
@param which which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.
@param linePrefix a String to be prepended to each line of output.
@return the line prefix"
      end

      operation 3726775 "printTimer"
	class_operation private explicit_return_type "boolean"
	nparams 7
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "sb" explicit_type "StringBuilder"
	  param inout name "timer" type class_ref 537527 // Timer
	  param in name "rawRealtime" explicit_type "long"
	  param in name "which" explicit_type "int"
	  param inout name "prefix" type class_ref 129591 // String
	  param inout name "type" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@param pw a PrintWriter object to print to.
@param sb a StringBuilder object.
@param timer a Timer object contining the wakelock times.
@param rawRealtime the current on-battery time in microseconds.
@param which which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.
@param prefix a String to be prepended to each line of output.
@param type the name of the timer."
      end

      operation 3726903 "printWakeLockCheckin"
	class_operation private return_type class_ref 129591 // String
	nparams 6
	  param inout name "sb" explicit_type "StringBuilder"
	  param inout name "timer" type class_ref 537527 // Timer
	  param in name "elapsedRealtimeUs" explicit_type "long"
	  param inout name "name" type class_ref 129591 // String
	  param in name "which" explicit_type "int"
	  param inout name "linePrefix" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checkin version of wakelock printer. Prints simple comma-separated list.

@param sb a StringBuilder object.
@param timer a Timer object contining the wakelock times.
@param elapsedRealtimeUs the current time in microseconds.
@param name the name of the wakelock.
@param which which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.
@param linePrefix a String to be prepended to each line of output.
@return the line prefix"
      end

      operation 3727031 "dumpLineHeader"
	class_operation private explicit_return_type "void"
	nparams 4
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "uid" explicit_type "int"
	  param inout name "category" type class_ref 129591 // String
	  param inout name "type" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3727159 "dumpLine"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "uid" explicit_type "int"
	  param inout name "category" type class_ref 129591 // String
	  param inout name "type" type class_ref 129591 // String
	  param inout name "" explicit_type "Object...args"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dump a comma-separated line of values for terse checkin mode.

@param pw the PageWriter to dump log to
@param category category of data (e.g. \"total\", \"last\", \"unplugged\", \"current\" )
@param type type of data (e.g. \"wakelock\", \"sensor\", \"process\", \"apk\" ,  \"process\", \"network\")
@param args type-dependent data arguments"
      end

      operation 3727287 "dumpTimer"
	class_operation private explicit_return_type "void"
	nparams 7
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "uid" explicit_type "int"
	  param inout name "category" type class_ref 129591 // String
	  param inout name "type" type class_ref 129591 // String
	  param inout name "timer" type class_ref 537527 // Timer
	  param in name "rawRealtime" explicit_type "long"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dump a given timer stat for terse checkin mode.

@param pw the PageWriter to dump log to
@param uid the UID to log
@param category category of data (e.g. \"total\", \"last\", \"unplugged\", \"current\" )
@param type type of data (e.g. \"wakelock\", \"sensor\", \"process\", \"apk\" ,  \"process\", \"network\")
@param timer a {@link Timer} to dump stats for
@param rawRealtime the current elapsed realtime of the system in microseconds
@param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT"
      end

      operation 3727415 "controllerActivityHasData"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "counter" type class_ref 537399 // ControllerActivityCounter
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the ControllerActivityCounter has any data worth dumping."
      end

      operation 3727543 "dumpControllerActivityLine"
	class_operation private explicit_return_type "void"
	nparams 6
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "uid" explicit_type "int"
	  param inout name "category" type class_ref 129591 // String
	  param inout name "type" type class_ref 129591 // String
	  param inout name "counter" type class_ref 537399 // ControllerActivityCounter
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dumps the ControllerActivityCounter if it has any data worth dumping.
The order of the arguments in the final check in line is:

idle, rx, power, tx...

where tx... is one or more transmit level times."
      end

      operation 3727671 "printControllerActivityIfInteresting"
	private explicit_return_type "void"
	nparams 6
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "sb" explicit_type "StringBuilder"
	  param inout name "prefix" type class_ref 129591 // String
	  param inout name "controllerName" type class_ref 129591 // String
	  param inout name "counter" type class_ref 537399 // ControllerActivityCounter
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3727799 "printControllerActivity"
	private explicit_return_type "void"
	nparams 6
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "sb" explicit_type "StringBuilder"
	  param inout name "prefix" type class_ref 129591 // String
	  param inout name "controllerName" type class_ref 129591 // String
	  param inout name "counter" type class_ref 537399 // ControllerActivityCounter
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3727927 "dumpCheckinLocked"
	public explicit_return_type "void"
	nparams 4
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "which" explicit_type "int"
	  param in name "reqUid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Temporary for settings."
      end

      operation 3728055 "dumpCheckinLocked"
	public explicit_return_type "void"
	nparams 5
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "which" explicit_type "int"
	  param in name "reqUid" explicit_type "int"
	  param inout name "wifiOnly" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checkin server version of dump to produce more compact, computer-readable log.

NOTE: all times are expressed in 'ms'."
      end

      class 539703 "TimerEntry"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1441591 // mName (<unidirectional association>)
	  relation 1441591 --->
	    a role_name "mName" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1441591 // mName (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1615543 "mId"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1441719 // mTimer (<unidirectional association>)
	  relation 1441719 --->
	    a role_name "mTimer" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1441719 // mTimer (<unidirectional association>)
	    b parent class_ref 537527 // Timer
	end

	attribute 1615671 "mTime"
	  const_attribute package explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3728183 "TimerEntry"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "name" type class_ref 129591 // String
	    param in name "id" explicit_type "int"
	    param inout name "timer" type class_ref 537527 // Timer
	    param in name "time" explicit_type "long"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 3728311 "printmAh"
	private explicit_return_type "void"
	nparams 2
	  param inout name "printer" explicit_type "PrintWriter"
	  param in name "power" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3728439 "printmAh"
	private explicit_return_type "void"
	nparams 2
	  param inout name "sb" explicit_type "StringBuilder"
	  param in name "power" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3728567 "dumpLocked"
	public explicit_return_type "void"
	nparams 5
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "prefix" type class_ref 129591 // String
	  param in name "which" explicit_type "int"
	  param in name "reqUid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Temporary for settings."
      end

      operation 3728695 "dumpLocked"
	public explicit_return_type "void"
	nparams 6
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "prefix" type class_ref 129591 // String
	  param in name "which" explicit_type "int"
	  param in name "reqUid" explicit_type "int"
	  param inout name "wifiOnly" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, final ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	
	
	
      end

      operation 3728823 "printBitDescriptions"
	class_operation package explicit_return_type "void"
	nparams 6
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "oldval" explicit_type "int"
	  param in name "newval" explicit_type "int"
	  param inout name "wakelockTag" type class_ref 539063 // HistoryTag
	  param inout name "descriptions" type class_ref 539575 // BitDescription
	  param inout name "longNames" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3728951 "prepareForDumpLocked"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 539831 "HistoryPrinter"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1615799 "oldState"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1615927 "oldState2"
	  package explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1616055 "oldLevel"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1616183 "oldStatus"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1616311 "oldHealth"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1616439 "oldPlug"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1616567 "oldTemp"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1616695 "oldVolt"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1616823 "oldChargeMAh"
	  package explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1616951 "lastTime"
	  package explicit_type "long"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3729079 "reset"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3729207 "printNextItem"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "pw" explicit_type "PrintWriter"
	    param inout name "rec" type class_ref 539319 // HistoryItem
	    param in name "baseTime" explicit_type "long"
	    param inout name "checkin" explicit_type "boolean"
	    param inout name "verbose" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3729335 "printStepCpuUidDetails"
	  private explicit_return_type "void"
	  nparams 4
	    param inout name "pw" explicit_type "PrintWriter"
	    param in name "uid" explicit_type "int"
	    param in name "utime" explicit_type "int"
	    param in name "stime" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3729463 "printStepCpuUidCheckinDetails"
	  private explicit_return_type "void"
	  nparams 4
	    param inout name "pw" explicit_type "PrintWriter"
	    param in name "uid" explicit_type "int"
	    param in name "utime" explicit_type "int"
	    param in name "stime" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 3729591 "printSizeValue"
	private explicit_return_type "void"
	nparams 2
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "size" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3729719 "dumpTimeEstimate"
	class_operation private explicit_return_type "boolean"
	nparams 5
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "label1" type class_ref 129591 // String
	  param inout name "label2" type class_ref 129591 // String
	  param inout name "label3" type class_ref 129591 // String
	  param in name "estimatedTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3729847 "dumpDurationSteps"
	class_operation private explicit_return_type "boolean"
	nparams 5
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "prefix" type class_ref 129591 // String
	  param inout name "header" type class_ref 129591 // String
	  param inout name "steps" type class_ref 538679 // LevelStepTracker
	  param inout name "checkin" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1617079 "DUMP_CHARGED_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1617207 "DUMP_DAILY_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1617335 "DUMP_HISTORY_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1617463 "DUMP_INCLUDE_HISTORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1617591 "DUMP_VERBOSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1617719 "DUMP_DEVICE_WIFI_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3729975 "dumpHistoryLocked"
	private explicit_return_type "void"
	nparams 4
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "flags" explicit_type "int"
	  param in name "histStart" explicit_type "long"
	  param inout name "checkin" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3730103 "dumpDailyLevelStepSummary"
	private explicit_return_type "void"
	nparams 6
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "prefix" type class_ref 129591 // String
	  param inout name "label" type class_ref 129591 // String
	  param inout name "steps" type class_ref 538679 // LevelStepTracker
	  param inout name "tmpSb" explicit_type "StringBuilder"
	  param inout name "tmpOutInt" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3730231 "dumpDailyPackageChanges"
	private explicit_return_type "void"
	nparams 3
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "prefix" type class_ref 129591 // String
	  param inout name "changes" explicit_type "ArrayList<PackageChange>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3730359 "dumpLocked"
	public explicit_return_type "void"
	nparams 5
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "flags" explicit_type "int"
	  param in name "reqUid" explicit_type "int"
	  param in name "histStart" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	
	
	
	comment "Dumps a human-readable summary of the battery statistics to the given PrintWriter.

@param pw a Printer to receive the dump output."
      end

      operation 3730487 "dumpCheckinLocked"
	public explicit_return_type "void"
	nparams 5
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "apps" explicit_type "List<ApplicationInfo>"
	  param in name "flags" explicit_type "int"
	  param in name "histStart" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	
	
	
      end
    end

    class 539959 "Broadcaster"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " @hide "
      operation 3730615 "Broadcaster"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3730743 "request"
	public explicit_return_type "void"
	nparams 3
	  param in name "senderWhat" explicit_type "int"
	  param inout name "target" type class_ref 132023 // Handler
	  param in name "targetWhat" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sign up for notifications about something.

 When this broadcaster pushes a message with senderWhat in the what field,
 target will be sent a copy of that message with targetWhat in the what field."
      end

      operation 3730871 "cancelRequest"
	public explicit_return_type "void"
	nparams 3
	  param in name "senderWhat" explicit_type "int"
	  param inout name "target" type class_ref 132023 // Handler
	  param in name "targetWhat" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregister for notifications for this senderWhat/target/targetWhat tuple."
      end

      operation 3730999 "dumpRegistrations"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For debugging purposes, print the registrations to System.out"
      end

      operation 3731127 "broadcast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send out msg.  Anyone who has registered via the request() method will be
sent the message."
      end

      class 540087 "Registration"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1441847 // next (<unidirectional association>)
	  relation 1441847 --->
	    a role_name "next" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1441847 // next (<unidirectional association>)
	    b parent class_ref 540087 // Registration
	end

	classrelation 1441975 // prev (<unidirectional association>)
	  relation 1441975 --->
	    a role_name "prev" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1441975 // prev (<unidirectional association>)
	    b parent class_ref 540087 // Registration
	end

	attribute 1617847 "senderWhat"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1442103 // targets (<unidirectional association>)
	  relation 1442103 --->
	    a role_name "targets" multiplicity "[]" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1442103 // targets (<unidirectional association>)
	    b parent class_ref 132023 // Handler
	end

	attribute 1617975 "targetWhats"
	  package explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 1442231 // mReg (<unidirectional association>)
	relation 1442231 --->
	  a role_name "mReg" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1442231 // mReg (<unidirectional association>)
	  b parent class_ref 540087 // Registration
      end
    end

    class 540215 "Build"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Information about the current build, extracted from system properties."
      classrelation 1442359 // TAG (<unidirectional association>)
	relation 1442359 --->
	  a role_name "TAG" init_value " \"Build\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1442359 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1442487 // UNKNOWN (<unidirectional association>)
	relation 1442487 --->
	  a role_name "UNKNOWN" init_value " \"unknown\"" class_relation const_relation public
	    comment " Value used for when a build property is unknown. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1442487 // UNKNOWN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1442615 // ID (<unidirectional association>)
	relation 1442615 --->
	  a role_name "ID" init_value " getString(\"ro.build.id\")" class_relation const_relation public
	    comment " Either a changelist number, or a label like \"M4-rc20\". 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1442615 // ID (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1442743 // DISPLAY (<unidirectional association>)
	relation 1442743 --->
	  a role_name "DISPLAY" init_value " getString(\"ro.build.display.id\")" class_relation const_relation public
	    comment " A build ID string meant for displaying to the user 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1442743 // DISPLAY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1442871 // PRODUCT (<unidirectional association>)
	relation 1442871 --->
	  a role_name "PRODUCT" init_value " getString(\"ro.product.name\")" class_relation const_relation public
	    comment " The name of the overall product. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1442871 // PRODUCT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1442999 // DEVICE (<unidirectional association>)
	relation 1442999 --->
	  a role_name "DEVICE" init_value " getString(\"ro.product.device\")" class_relation const_relation public
	    comment " The name of the industrial design. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1442999 // DEVICE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1443127 // BOARD (<unidirectional association>)
	relation 1443127 --->
	  a role_name "BOARD" init_value " getString(\"ro.product.board\")" class_relation const_relation public
	    comment " The name of the underlying board, like \"goldfish\". 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1443127 // BOARD (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1443255 // CPU_ABI (<unidirectional association>)
	relation 1443255 --->
	  a role_name "CPU_ABI" class_relation const_relation public
	    comment "
The name of the instruction set (CPU type + ABI convention) of native code.

@deprecated Use {@link #SUPPORTED_ABIS} instead.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 1443255 // CPU_ABI (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1443383 // CPU_ABI2 (<unidirectional association>)
	relation 1443383 --->
	  a role_name "CPU_ABI2" class_relation const_relation public
	    comment "
The name of the second instruction set (CPU type + ABI convention) of native code.

@deprecated Use {@link #SUPPORTED_ABIS} instead.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 1443383 // CPU_ABI2 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1443511 // MANUFACTURER (<unidirectional association>)
	relation 1443511 --->
	  a role_name "MANUFACTURER" init_value " getString(\"ro.product.manufacturer\")" class_relation const_relation public
	    comment " The manufacturer of the product/hardware. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1443511 // MANUFACTURER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1443639 // BRAND (<unidirectional association>)
	relation 1443639 --->
	  a role_name "BRAND" init_value " getString(\"ro.product.brand\")" class_relation const_relation public
	    comment " The consumer-visible brand with which the product/hardware will be associated, if any. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1443639 // BRAND (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1443767 // MODEL (<unidirectional association>)
	relation 1443767 --->
	  a role_name "MODEL" init_value " getString(\"ro.product.model\")" class_relation const_relation public
	    comment " The end-user-visible name for the end product. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1443767 // MODEL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1443895 // BOOTLOADER (<unidirectional association>)
	relation 1443895 --->
	  a role_name "BOOTLOADER" init_value " getString(\"ro.bootloader\")" class_relation const_relation public
	    comment " The system bootloader version number. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1443895 // BOOTLOADER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1444023 // RADIO (<unidirectional association>)
	relation 1444023 --->
	  a role_name "RADIO" init_value " getString(TelephonyProperties.PROPERTY_BASEBAND_VERSION)" class_relation const_relation public
	    comment "
The radio firmware version number.

@deprecated The radio firmware version is frequently not
available when this class is initialized, leading to a blank or
\"unknown\" value for this string.  Use
{@link #getRadioVersion} instead.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 1444023 // RADIO (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1444151 // HARDWARE (<unidirectional association>)
	relation 1444151 --->
	  a role_name "HARDWARE" init_value " getString(\"ro.hardware\")" class_relation const_relation public
	    comment " The name of the hardware (from the kernel command line or /proc). 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1444151 // HARDWARE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1618103 "IS_EMULATOR"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " getString(\"ro.kernel.qemu\").equals(\"1\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Whether this build was for an emulator device.
@hide
"
      end

      classrelation 1444279 // SERIAL (<unidirectional association>)
	relation 1444279 --->
	  a role_name "SERIAL" init_value " getString(\"ro.serialno\")" class_relation const_relation public
	    comment " A hardware serial number, if available.  Alphanumeric only, case-insensitive. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1444279 // SERIAL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1444407 // SUPPORTED_ABIS (<unidirectional association>)
	relation 1444407 --->
	  a role_name "SUPPORTED_ABIS" multiplicity "[]" init_value " getStringList(\"ro.product.cpu.abilist\", \",\")" class_relation const_relation public
	    comment "
An ordered list of ABIs supported by this device. The most preferred ABI is the first
element in the list.

See {@link #SUPPORTED_32_BIT_ABIS} and {@link #SUPPORTED_64_BIT_ABIS}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1444407 // SUPPORTED_ABIS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1444535 // SUPPORTED_32_BIT_ABIS (<unidirectional association>)
	relation 1444535 --->
	  a role_name "SUPPORTED_32_BIT_ABIS" multiplicity "[]" init_value "
            getStringList(\"ro.product.cpu.abilist32\", \",\")" class_relation const_relation public
	    comment "
An ordered list of <b>32 bit</b> ABIs supported by this device. The most preferred ABI
is the first element in the list.

See {@link #SUPPORTED_ABIS} and {@link #SUPPORTED_64_BIT_ABIS}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1444535 // SUPPORTED_32_BIT_ABIS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1444663 // SUPPORTED_64_BIT_ABIS (<unidirectional association>)
	relation 1444663 --->
	  a role_name "SUPPORTED_64_BIT_ABIS" multiplicity "[]" init_value "
            getStringList(\"ro.product.cpu.abilist64\", \",\")" class_relation const_relation public
	    comment "
An ordered list of <b>64 bit</b> ABIs supported by this device. The most preferred ABI
is the first element in the list.

See {@link #SUPPORTED_ABIS} and {@link #SUPPORTED_32_BIT_ABIS}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1444663 // SUPPORTED_64_BIT_ABIS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      extra_member 132407 "initialization"
	
	cpp "" ""
	java "  static {
        /*
         * Adjusts CPU_ABI and CPU_ABI2 depending on whether or not a given process is 64 bit.
         * 32 bit processes will always see 32 bit ABIs in these fields for backward
         * compatibility.
         */
        final String[] abiList;
        if (VMRuntime.getRuntime().is64Bit()) {
            abiList = SUPPORTED_64_BIT_ABIS;
        } else {
            abiList = SUPPORTED_32_BIT_ABIS;
        }

        CPU_ABI = abiList[0];
        if (abiList.length > 1) {
            CPU_ABI2 = abiList[1];
        } else {
            CPU_ABI2 = \"\";
        }
    }"
	php ""
	python ""
	idl ""
      end

      class 540343 "VERSION"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1444791 // INCREMENTAL (<unidirectional association>)
	  relation 1444791 --->
	    a role_name "INCREMENTAL" init_value " getString(\"ro.build.version.incremental\")" class_relation const_relation public
	      comment "
The internal value used by the underlying source control to
represent this build.  E.g., a perforce changelist number
or a git hash.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1444791 // INCREMENTAL (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1444919 // RELEASE (<unidirectional association>)
	  relation 1444919 --->
	    a role_name "RELEASE" init_value " getString(\"ro.build.version.release\")" class_relation const_relation public
	      comment "
The user-visible version string.  E.g., \"1.0\" or \"3.4b5\".

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1444919 // RELEASE (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1445047 // BASE_OS (<unidirectional association>)
	  relation 1445047 --->
	    a role_name "BASE_OS" init_value " SystemProperties.get(\"ro.build.version.base_os\", \"\")" class_relation const_relation public
	      comment "
The base OS build the product is based on.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1445047 // BASE_OS (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1445175 // SECURITY_PATCH (<unidirectional association>)
	  relation 1445175 --->
	    a role_name "SECURITY_PATCH" init_value " SystemProperties.get(
                \"ro.build.version.security_patch\", \"\")" class_relation const_relation public
	      comment "
The user-visible security patch level.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1445175 // SECURITY_PATCH (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1445303 // SDK (<unidirectional association>)
	  relation 1445303 --->
	    a role_name "SDK" init_value " getString(\"ro.build.version.sdk\")" class_relation const_relation public
	      comment "
The user-visible SDK version of the framework in its raw String
representation; use {@link #SDK_INT} instead.

@deprecated Use {@link #SDK_INT} to easily get this as an integer.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      java_annotation "@Deprecated
"
	      classrelation_ref 1445303 // SDK (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1618231 "SDK_INT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " SystemProperties.getInt(
                \"ro.build.version.sdk\", 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The user-visible SDK version of the framework; its possible
values are defined in {@link Build.VERSION_CODES}.
"
	end

	attribute 1618359 "PREVIEW_SDK_INT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " SystemProperties.getInt(
                \"ro.build.version.preview_sdk\", 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The developer preview revision of a prerelease SDK. This value will always
be <code>0</code> on production platform builds/devices.

<p>When this value is nonzero, any new API added since the last
officially published {@link #SDK_INT API level} is only guaranteed to be present
on that specific preview revision. For example, an API <code>Activity.fooBar()</code>
might be present in preview revision 1 but renamed or removed entirely in
preview revision 2, which may cause an app attempting to call it to crash
at runtime.</p>

<p>Experimental apps targeting preview APIs should check this value for
equality (<code>==</code>) with the preview SDK revision they were built for
before using any prerelease platform APIs. Apps that detect a preview SDK revision
other than the specific one they expect should fall back to using APIs from
the previously published API level only to avoid unwanted runtime exceptions.
</p>
"
	end

	classrelation 1445431 // CODENAME (<unidirectional association>)
	  relation 1445431 --->
	    a role_name "CODENAME" init_value " getString(\"ro.build.version.codename\")" class_relation const_relation public
	      comment "
The current development codename, or the string \"REL\" if this is
a release build.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1445431 // CODENAME (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1445559 // ALL_CODENAMES (<unidirectional association>)
	  relation 1445559 --->
	    a role_name "ALL_CODENAMES" multiplicity "[]" init_value " getStringList(\"ro.build.version.all_codenames\", \",\")" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1445559 // ALL_CODENAMES (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1445687 // ACTIVE_CODENAMES (<unidirectional association>)
	  relation 1445687 --->
	    a role_name "ACTIVE_CODENAMES" multiplicity "[]" init_value " \"REL\".equals(ALL_CODENAMES[0])
                ? new String[0] : ALL_CODENAMES" class_relation const_relation public
	      comment "
@hide

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1445687 // ACTIVE_CODENAMES (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1618487 "RESOURCES_SDK_INT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " SDK_INT + ACTIVE_CODENAMES.length"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The SDK version to use when accessing resources.
Use the current SDK version code.  For every active development codename
we are operating under, we bump the assumed resource platform version by 1.
@hide
"
	end
      end

      class 540471 "VERSION_CODES"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1618615 "CUR_DEVELOPMENT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 10000"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Magic version number for a current development build, which has
not yet turned into an official release.
"
	end

	attribute 1618743 "BASE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "October 2008: The original, first, version of Android.  Yay!
"
	end

	attribute 1618871 "BASE_1_1"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "February 2009: First Android update, officially called 1.1.
"
	end

	attribute 1618999 "CUPCAKE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "May 2009: Android 1.5.
"
	end

	attribute 1619127 "DONUT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "September 2009: Android 1.6.

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li> They must explicitly request the
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} permission to be
able to modify the contents of the SD card.  (Apps targeting
earlier versions will always request the permission.)
<li> They must explicitly request the
{@link android.Manifest.permission#READ_PHONE_STATE} permission to be
able to be able to retrieve phone state info.  (Apps targeting
earlier versions will always request the permission.)
<li> They are assumed to support different screen densities and
sizes.  (Apps targeting earlier versions are assumed to only support
medium density normal size screens unless otherwise indicated).
They can still explicitly specify screen support either way with the
supports-screens manifest tag.
<li> {@link android.widget.TabHost} will use the new dark tab
background design.
</ul>
"
	end

	attribute 1619255 "ECLAIR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 5"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "November 2009: Android 2.0

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li> The {@link android.app.Service#onStartCommand
Service.onStartCommand} function will return the new
{@link android.app.Service#START_STICKY} behavior instead of the
old compatibility {@link android.app.Service#START_STICKY_COMPATIBILITY}.
<li> The {@link android.app.Activity} class will now execute back
key presses on the key up instead of key down, to be able to detect
canceled presses from virtual keys.
<li> The {@link android.widget.TabWidget} class will use a new color scheme
for tabs. In the new scheme, the foreground tab has a medium gray background
the background tabs have a dark gray background.
</ul>
"
	end

	attribute 1619383 "ECLAIR_0_1"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 6"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "December 2009: Android 2.0.1
"
	end

	attribute 1619511 "ECLAIR_MR1"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 7"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "January 2010: Android 2.1
"
	end

	attribute 1619639 "FROYO"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 8"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "June 2010: Android 2.2
"
	end

	attribute 1619767 "GINGERBREAD"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 9"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "November 2010: Android 2.3

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li> The application's notification icons will be shown on the new
dark status bar background, so must be visible in this situation.
</ul>
"
	end

	attribute 1619895 "GINGERBREAD_MR1"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 10"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "February 2011: Android 2.3.3.
"
	end

	attribute 1620023 "HONEYCOMB"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 11"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "February 2011: Android 3.0.

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li> The default theme for applications is now dark holographic:
     {@link android.R.style#Theme_Holo}.
<li> On large screen devices that do not have a physical menu
button, the soft (compatibility) menu is disabled.
<li> The activity lifecycle has changed slightly as per
{@link android.app.Activity}.
<li> An application will crash if it does not call through
to the super implementation of its
{@link android.app.Activity#onPause Activity.onPause()} method.
<li> When an application requires a permission to access one of
its components (activity, receiver, service, provider), this
permission is no longer enforced when the application wants to
access its own component.  This means it can require a permission
on a component that it does not itself hold and still access that
component.
<li> {@link android.content.Context#getSharedPreferences
Context.getSharedPreferences()} will not automatically reload
the preferences if they have changed on storage, unless
{@link android.content.Context#MODE_MULTI_PROCESS} is used.
<li> {@link android.view.ViewGroup#setMotionEventSplittingEnabled}
will default to true.
<li> {@link android.view.WindowManager.LayoutParams#FLAG_SPLIT_TOUCH}
is enabled by default on windows.
<li> {@link android.widget.PopupWindow#isSplitTouchEnabled()
PopupWindow.isSplitTouchEnabled()} will return true by default.
<li> {@link android.widget.GridView} and {@link android.widget.ListView}
will use {@link android.view.View#setActivated View.setActivated}
for selected items if they do not implement {@link android.widget.Checkable}.
<li> {@link android.widget.Scroller} will be constructed with
\"flywheel\" behavior enabled by default.
</ul>
"
	end

	attribute 1620151 "HONEYCOMB_MR1"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 12"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "May 2011: Android 3.1.
"
	end

	attribute 1620279 "HONEYCOMB_MR2"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 13"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "June 2011: Android 3.2.

<p>Update to Honeycomb MR1 to support 7 inch tablets, improve
screen compatibility mode, etc.</p>

<p>As of this version, applications that don't say whether they
support XLARGE screens will be assumed to do so only if they target
{@link #HONEYCOMB} or later; it had been {@link #GINGERBREAD} or
later.  Applications that don't support a screen size at least as
large as the current screen will provide the user with a UI to
switch them in to screen size compatibility mode.</p>

<p>This version introduces new screen size resource qualifiers
based on the screen size in dp: see
{@link android.content.res.Configuration#screenWidthDp},
{@link android.content.res.Configuration#screenHeightDp}, and
{@link android.content.res.Configuration#smallestScreenWidthDp}.
Supplying these in &lt;supports-screens&gt; as per
{@link android.content.pm.ApplicationInfo#requiresSmallestWidthDp},
{@link android.content.pm.ApplicationInfo#compatibleWidthLimitDp}, and
{@link android.content.pm.ApplicationInfo#largestWidthLimitDp} is
preferred over the older screen size buckets and for older devices
the appropriate buckets will be inferred from them.</p>

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li><p>New {@link android.content.pm.PackageManager#FEATURE_SCREEN_PORTRAIT}
and {@link android.content.pm.PackageManager#FEATURE_SCREEN_LANDSCAPE}
features were introduced in this release.  Applications that target
previous platform versions are assumed to require both portrait and
landscape support in the device; when targeting Honeycomb MR1 or
greater the application is responsible for specifying any specific
orientation it requires.</p>
<li><p>{@link android.os.AsyncTask} will use the serial executor
by default when calling {@link android.os.AsyncTask#execute}.</p>
<li><p>{@link android.content.pm.ActivityInfo#configChanges
ActivityInfo.configChanges} will have the
{@link android.content.pm.ActivityInfo#CONFIG_SCREEN_SIZE} and
{@link android.content.pm.ActivityInfo#CONFIG_SMALLEST_SCREEN_SIZE}
bits set; these need to be cleared for older applications because
some developers have done absolute comparisons against this value
instead of correctly masking the bits they are interested in.
</ul>
"
	end

	attribute 1620407 "ICE_CREAM_SANDWICH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 14"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "October 2011: Android 4.0.

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li> For devices without a dedicated menu key, the software compatibility
menu key will not be shown even on phones.  By targeting Ice Cream Sandwich
or later, your UI must always have its own menu UI affordance if needed,
on both tablets and phones.  The ActionBar will take care of this for you.
<li> 2d drawing hardware acceleration is now turned on by default.
You can use
{@link android.R.attr#hardwareAccelerated android:hardwareAccelerated}
to turn it off if needed, although this is strongly discouraged since
it will result in poor performance on larger screen devices.
<li> The default theme for applications is now the \"device default\" theme:
     {@link android.R.style#Theme_DeviceDefault}. This may be the
     holo dark theme or a different dark theme defined by the specific device.
     The {@link android.R.style#Theme_Holo} family must not be modified
     for a device to be considered compatible. Applications that explicitly
     request a theme from the Holo family will be guaranteed that these themes
     will not change character within the same platform version. Applications
     that wish to blend in with the device should use a theme from the
     {@link android.R.style#Theme_DeviceDefault} family.
<li> Managed cursors can now throw an exception if you directly close
the cursor yourself without stopping the management of it; previously failures
would be silently ignored.
<li> The fadingEdge attribute on views will be ignored (fading edges is no
longer a standard part of the UI).  A new requiresFadingEdge attribute allows
applications to still force fading edges on for special cases.
<li> {@link android.content.Context#bindService Context.bindService()}
will not automatically add in {@link android.content.Context#BIND_WAIVE_PRIORITY}.
<li> App Widgets will have standard padding automatically added around
them, rather than relying on the padding being baked into the widget itself.
<li> An exception will be thrown if you try to change the type of a
window after it has been added to the window manager.  Previously this
would result in random incorrect behavior.
<li> {@link android.view.animation.AnimationSet} will parse out
the duration, fillBefore, fillAfter, repeatMode, and startOffset
XML attributes that are defined.
<li> {@link android.app.ActionBar#setHomeButtonEnabled
ActionBar.setHomeButtonEnabled()} is false by default.
</ul>
"
	end

	attribute 1620535 "ICE_CREAM_SANDWICH_MR1"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 15"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "December 2011: Android 4.0.3.
"
	end

	attribute 1620663 "JELLY_BEAN"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 16"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "June 2012: Android 4.1.

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li> You must explicitly request the {@link android.Manifest.permission#READ_CALL_LOG}
and/or {@link android.Manifest.permission#WRITE_CALL_LOG} permissions;
access to the call log is no longer implicitly provided through
{@link android.Manifest.permission#READ_CONTACTS} and
{@link android.Manifest.permission#WRITE_CONTACTS}.
<li> {@link android.widget.RemoteViews} will throw an exception if
setting an onClick handler for views being generated by a
{@link android.widget.RemoteViewsService} for a collection container;
previously this just resulted in a warning log message.
<li> New {@link android.app.ActionBar} policy for embedded tabs:
embedded tabs are now always stacked in the action bar when in portrait
mode, regardless of the size of the screen.
<li> {@link android.webkit.WebSettings#setAllowFileAccessFromFileURLs(boolean)
WebSettings.setAllowFileAccessFromFileURLs} and
{@link android.webkit.WebSettings#setAllowUniversalAccessFromFileURLs(boolean)
WebSettings.setAllowUniversalAccessFromFileURLs} default to false.
<li> Calls to {@link android.content.pm.PackageManager#setComponentEnabledSetting
PackageManager.setComponentEnabledSetting} will now throw an
IllegalArgumentException if the given component class name does not
exist in the application's manifest.
<li> {@link android.nfc.NfcAdapter#setNdefPushMessage
NfcAdapter.setNdefPushMessage},
{@link android.nfc.NfcAdapter#setNdefPushMessageCallback
NfcAdapter.setNdefPushMessageCallback} and
{@link android.nfc.NfcAdapter#setOnNdefPushCompleteCallback
NfcAdapter.setOnNdefPushCompleteCallback} will throw
IllegalStateException if called after the Activity has been destroyed.
<li> Accessibility services must require the new
{@link android.Manifest.permission#BIND_ACCESSIBILITY_SERVICE} permission or
they will not be available for use.
<li> {@link android.accessibilityservice.AccessibilityServiceInfo#FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
AccessibilityServiceInfo.FLAG_INCLUDE_NOT_IMPORTANT_VIEWS} must be set
for unimportant views to be included in queries.
</ul>
"
	end

	attribute 1620791 "JELLY_BEAN_MR1"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 17"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "November 2012: Android 4.2, Moar jelly beans!

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li>Content Providers: The default value of {@code android:exported} is now
{@code false}. See
<a href=\"{@docRoot}guide/topics/manifest/provider-element.html#exported\">
the android:exported section</a> in the provider documentation for more details.</li>
<li>{@link android.view.View#getLayoutDirection() View.getLayoutDirection()}
can return different values than {@link android.view.View#LAYOUT_DIRECTION_LTR}
based on the locale etc.
<li> {@link android.webkit.WebView#addJavascriptInterface(Object, String)
WebView.addJavascriptInterface} requires explicit annotations on methods
for them to be accessible from Javascript.
</ul>
"
	end

	attribute 1620919 "JELLY_BEAN_MR2"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 18"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "July 2013: Android 4.3, the revenge of the beans.
"
	end

	attribute 1621047 "KITKAT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 19"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "October 2013: Android 4.4, KitKat, another tasty treat.

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li> The default result of
{@link android.preference.PreferenceActivity#isValidFragment(String)
PreferenceActivity.isValueFragment} becomes false instead of true.</li>
<li> In {@link android.webkit.WebView}, apps targeting earlier versions will have
JS URLs evaluated directly and any result of the evaluation will not replace
the current page content.  Apps targetting KITKAT or later that load a JS URL will
have the result of that URL replace the content of the current page</li>
<li> {@link android.app.AlarmManager#set AlarmManager.set} becomes interpreted as
an inexact value, to give the system more flexibility in scheduling alarms.</li>
<li> {@link android.content.Context#getSharedPreferences(String, int)
Context.getSharedPreferences} no longer allows a null name.</li>
<li> {@link android.widget.RelativeLayout} changes to compute wrapped content
margins correctly.</li>
<li> {@link android.app.ActionBar}'s window content overlay is allowed to be
drawn.</li>
<li>The {@link android.Manifest.permission#READ_EXTERNAL_STORAGE}
permission is now always enforced.</li>
<li>Access to package-specific external storage directories belonging
to the calling app no longer requires the
{@link android.Manifest.permission#READ_EXTERNAL_STORAGE} or
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE}
permissions.</li>
</ul>
"
	end

	attribute 1621175 "KITKAT_WATCH"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 20"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "June 2014: Android 4.4W. KitKat for watches, snacks on the run.

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li>{@link android.app.AlertDialog} might not have a default background if the theme does
not specify one.</li>
</ul>
"
	end

	attribute 1621303 "L"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 21"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Temporary until we completely switch to {@link #LOLLIPOP}.
@hide
"
	end

	attribute 1621431 "LOLLIPOP"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 21"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "November 2014: Lollipop.  A flat one with beautiful shadows.  But still tasty.

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li> {@link android.content.Context#bindService Context.bindService} now
requires an explicit Intent, and will throw an exception if given an implicit
Intent.</li>
<li> {@link android.app.Notification.Builder Notification.Builder} will
not have the colors of their various notification elements adjusted to better
match the new material design look.</li>
<li> {@link android.os.Message} will validate that a message is not currently
in use when it is recycled.</li>
<li> Hardware accelerated drawing in windows will be enabled automatically
in most places.</li>
<li> {@link android.widget.Spinner} throws an exception if attaching an
adapter with more than one item type.</li>
<li> If the app is a launcher, the launcher will be available to the user
even when they are using corporate profiles (which requires that the app
use {@link android.content.pm.LauncherApps} to correctly populate its
apps UI).</li>
<li> Calling {@link android.app.Service#stopForeground Service.stopForeground}
with removeNotification false will modify the still posted notification so that
it is no longer forced to be ongoing.</li>
<li> A {@link android.service.dreams.DreamService} must require the
{@link android.Manifest.permission#BIND_DREAM_SERVICE} permission to be usable.</li>
</ul>
"
	end

	attribute 1621559 "LOLLIPOP_MR1"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 22"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "March 2015: Lollipop with an extra sugar coating on the outside!
"
	end

	attribute 1621687 "M"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 23"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "M is for Marshmallow!

<p>Applications targeting this or a later release will get these
new changes in behavior:</p>
<ul>
<li> Runtime permissions.  Dangerous permissions are no longer granted at
install time, but must be requested by the application at runtime through
{@link android.app.Activity#requestPermissions}.</li>
<li> Bluetooth and Wi-Fi scanning now requires holding the location permission.</li>
<li> {@link android.app.AlarmManager#setTimeZone AlarmManager.setTimeZone} will fail if
the given timezone is non-Olson.</li>
<li> Activity transitions will only return shared
elements mapped in the returned view hierarchy back to the calling activity.</li>
<li> {@link android.view.View} allows a number of behaviors that may break
existing apps: Canvas throws an exception if restore() is called too many times,
widgets may return a hint size when returning UNSPECIFIED measure specs, and it
will respect the attributes {@link android.R.attr#foreground},
{@link android.R.attr#foregroundGravity}, {@link android.R.attr#foregroundTint}, and
{@link android.R.attr#foregroundTintMode}.</li>
<li> {@link android.view.MotionEvent#getButtonState MotionEvent.getButtonState}
will no longer report {@link android.view.MotionEvent#BUTTON_PRIMARY}
and {@link android.view.MotionEvent#BUTTON_SECONDARY} as synonyms for
{@link android.view.MotionEvent#BUTTON_STYLUS_PRIMARY} and
{@link android.view.MotionEvent#BUTTON_STYLUS_SECONDARY}.</li>
<li> {@link android.widget.ScrollView} now respects the layout param margins
when measuring.</li>
</ul>
"
	end

	attribute 1621815 "N"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 24"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "N is for ¯\\_(ツ)_/¯.
"
	end
      end

      classrelation 1445815 // TYPE (<unidirectional association>)
	relation 1445815 --->
	  a role_name "TYPE" init_value " getString(\"ro.build.type\")" class_relation const_relation public
	    comment " The type of build, like \"user\" or \"eng\". 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1445815 // TYPE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1445943 // TAGS (<unidirectional association>)
	relation 1445943 --->
	  a role_name "TAGS" init_value " getString(\"ro.build.tags\")" class_relation const_relation public
	    comment " Comma-separated tags describing the build, like \"unsigned,debug\". 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1445943 // TAGS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1446071 // FINGERPRINT (<unidirectional association>)
	relation 1446071 --->
	  a role_name "FINGERPRINT" init_value " deriveFingerprint()" class_relation const_relation public
	    comment " A string that uniquely identifies this build.  Do not attempt to parse this value. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1446071 // FINGERPRINT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3731255 "deriveFingerprint"
	class_operation private return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Some devices split the fingerprint components between multiple
partitions, so we might derive the fingerprint at runtime."
      end

      operation 3731383 "ensureFingerprintProperty"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensure that raw fingerprint system property is defined. If it was derived
dynamically by {@link #deriveFingerprint()} this is where we push the
derived value into the property service.

@hide"
      end

      operation 3731511 "isBuildConsistent"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies the the current flash of the device is consistent with what
was expected at build time.
1) Checks that device fingerprint is defined and that it matches across
   various partitions.
2) Verifies radio and bootloader partitions are those expected in the build.

@hide"
      end

      attribute 1621943 "TIME"
	class_attribute const_attribute public explicit_type "long"
	init_value " getLong(\"ro.build.date.utc\") * 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The following properties only make sense for internal engineering builds."
      end

      classrelation 1446199 // USER (<unidirectional association>)
	relation 1446199 --->
	  a role_name "USER" init_value " getString(\"ro.build.user\")" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1446199 // USER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1446327 // HOST (<unidirectional association>)
	relation 1446327 --->
	  a role_name "HOST" init_value " getString(\"ro.build.host\")" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1446327 // HOST (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1622071 "IS_DEBUGGABLE"
	class_attribute const_attribute public explicit_type "boolean"
	init_value "
            SystemProperties.getInt(\"ro.debuggable\", 0) == 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Returns true if we are running a debug build such as \"user-debug\" or \"eng\".
@hide
"
      end

      attribute 1622199 "PERMISSIONS_REVIEW_REQUIRED"
	class_attribute const_attribute public explicit_type "boolean"
	init_value "
            SystemProperties.getInt(\"ro.permission_review_required\", 0) == 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specifies whether the permissions needed by a legacy app should be
reviewed before any of its components can run. A legacy app is one
with targetSdkVersion < 23, i.e apps using the old permission model.
If review is not required, permissions are reviewed before the app
is installed.

@hide
"
      end

      operation 3731639 "getRadioVersion"
	class_operation public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version string for the radio firmware.  May return
null (if, for instance, the radio is not currently on)."
      end

      operation 3731767 "getString"
	class_operation private return_type class_ref 129591 // String
	nparams 1
	  param inout name "property" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3731895 "getStringList"
	class_operation private return_type class_ref 129591 // String
	nparams 2
	  param inout name "property" type class_ref 129591 // String
	  param inout name "separator" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3732023 "getLong"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "property" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 540599 "CommonClock"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Used for accessing the android common time service's common clock and receiving notifications
about common time synchronization status changes.
@hide"
      attribute 1622711 "TIME_NOT_SYNCED"
	class_attribute const_attribute public explicit_type "long"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sentinel value returned by {@link #getTime()} and {@link #getEstimatedError()} when the
common time service is not able to determine the current common time due to a lack of
synchronization.
"
      end

      attribute 1622839 "INVALID_TIMELINE_ID"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sentinel value returned by {@link #getTimelineId()} when the common time service is not
currently synced to any timeline.
"
      end

      attribute 1622967 "ERROR_ESTIMATE_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7FFFFFFF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sentinel value returned by {@link #getEstimatedError()} when the common time service is not
currently synced to any timeline.
"
      end

      attribute 1623095 "STATE_INVALID"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value used by {@link #getState()} to indicate that there was an internal error while
attempting to determine the state of the common time service.
"
      end

      attribute 1623223 "STATE_INITIAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value used by {@link #getState()} to indicate that the common time service is in its initial
state and attempting to find the current timeline master, if any.  The service will
transition to either {@link #STATE_CLIENT} if it finds an active master, or to
{@link #STATE_MASTER} if no active master is found and this client becomes the master of a
new timeline.
"
      end

      attribute 1623351 "STATE_CLIENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value used by {@link #getState()} to indicate that the common time service is in its client
state and is synchronizing its time to a different timeline master on the network.
"
      end

      attribute 1623479 "STATE_MASTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value used by {@link #getState()} to indicate that the common time service is in its master
state and is serving as the timeline master for other common time service clients on the
network.
"
      end

      attribute 1623607 "STATE_RONIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value used by {@link #getState()} to indicate that the common time service is in its Ronin
state.  Common time service instances in the client state enter the Ronin state after their
timeline master becomes unreachable on the network.  Common time services who enter the Ronin
state will begin a new master election for the timeline they were recently clients of.  As
clients detect they are not the winner and drop out of the election, they will transition to
the {@link #STATE_WAIT_FOR_ELECTION} state.  When there is only one client remaining in the
election, it will assume ownership of the timeline and transition to the
{@link #STATE_MASTER} state.  During the election, all clients will allow their timeline to
drift without applying correction.
"
      end

      attribute 1623735 "STATE_WAIT_FOR_ELECTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value used by {@link #getState()} to indicate that the common time service is waiting for a
master election to conclude and for the new master to announce itself before transitioning to
the {@link #STATE_CLIENT} state.  If no new master announces itself within the timeout
threshold, the time service will transition back to the {@link #STATE_RONIN} state in order
to restart the election.
"
      end

      classrelation 1447095 // SERVICE_NAME (<unidirectional association>)
	relation 1447095 --->
	  a role_name "SERVICE_NAME" init_value " \"common_time.clock\"" class_relation const_relation public
	    comment "
Name of the underlying native binder service

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1447095 // SERVICE_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3741751 "CommonClock"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@throws android.os.RemoteException"
      end

      operation 3741879 "create"
	class_operation public return_type class_ref 540599 // CommonClock
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handy class factory method."
      end

      operation 3742007 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Release all native resources held by this {@link android.os.CommonClock} instance.  Once
resources have been released, the {@link android.os.CommonClock} instance is disconnected from
the native service and will throw a {@link android.os.RemoteException} if any of its
methods are called.  Clients should always call release on their client instances before
releasing their last Java reference to the instance.  Failure to do this will cause
non-deterministic native resource reclamation and may cause the common time service to remain
active on the network for longer than it should."
      end

      operation 3742135 "getTime"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the common clock's current time.

@return a signed 64-bit value representing the current common time in microseconds, or the
special value {@link #TIME_NOT_SYNCED} if the common time service is currently not
synchronized.
@throws android.os.RemoteException"
      end

      operation 3742263 "getEstimatedError"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current estimation of common clock's synchronization accuracy from the common time
service.

@return a signed 32-bit value representing the common time service's estimation of
synchronization accuracy in microseconds, or the special value
{@link #ERROR_ESTIMATE_UNKNOWN} if the common time service is currently not synchronized.
Negative values indicate that the local server estimates that the nominal common time is
behind the local server's time (in other words, the local clock is running fast) Positive
values indicate that the local server estimates that the nominal common time is ahead of the
local server's time (in other words, the local clock is running slow)
@throws android.os.RemoteException"
      end

      operation 3742391 "getTimelineId"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ID of the timeline the common time service is currently synchronizing its clock to.

@return a long representing the unique ID of the timeline the common time service is
currently synchronizing with, or {@link #INVALID_TIMELINE_ID} if the common time service is
currently not synchronized.
@throws android.os.RemoteException"
      end

      operation 3742519 "getState"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current state of this clock's common time service in the the master election
algorithm.

@return a integer indicating the current state of the this clock's common time service in the
master election algorithm or {@link #STATE_INVALID} if there is an internal error.
@throws android.os.RemoteException"
      end

      operation 3742647 "getMasterAddr"
	public explicit_return_type "InetSocketAddress"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the IP address and UDP port of the current timeline master.

@return an InetSocketAddress containing the IP address and UDP port of the current timeline
master, or null if there is no current master.
@throws android.os.RemoteException"
      end

      class 540727 "OnTimelineChangedListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3742775 "onTimelineChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "newTimelineId" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Method called when the time service's timeline has changed.

@param newTimelineId a long which uniquely identifies the timeline the time
synchronization service is now a member of, or {@link #INVALID_TIMELINE_ID} if the the
service is not synchronized to any timeline."
	end
      end

      operation 3742903 "setTimelineChangedListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 540727 // OnTimelineChangedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers an OnTimelineChangedListener interface.
<p>Call this method with a null listener to stop receiving server death notifications."
      end

      class 540855 "OnServerDiedListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3743031 "onServerDied"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Method called when the native media server has died.  <p>If the native common time
service encounters a fatal error and needs to restart, the binder connection from the
{@link android.os.CommonClock} instance to the common time service will be broken.  To
restore functionality, clients should {@link #release()} their old visualizer and create
a new instance."
	end
      end

      operation 3743159 "setServerDiedListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 540855 // OnServerDiedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers an OnServerDiedListener interface.
<p>Call this method with a null listener to stop receiving server death notifications."
      end

      operation 3743287 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3743415 "throwOnDeadServer"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1447223 // mListenerLock (<unidirectional association>)
	relation 1447223 --->
	  a role_name "mListenerLock" init_value " new Object()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1447223 // mListenerLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      classrelation 1447351 // mTimelineChangedListener (<unidirectional association>)
	relation 1447351 --->
	  a role_name "mTimelineChangedListener" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1447351 // mTimelineChangedListener (<unidirectional association>)
	  b parent class_ref 540727 // OnTimelineChangedListener
      end

      classrelation 1447479 // mServerDiedListener (<unidirectional association>)
	relation 1447479 --->
	  a role_name "mServerDiedListener" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1447479 // mServerDiedListener (<unidirectional association>)
	  b parent class_ref 540855 // OnServerDiedListener
      end

      classrelation 1447607 // mRemote (<unidirectional association>)
	relation 1447607 --->
	  a role_name "mRemote" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1447607 // mRemote (<unidirectional association>)
	  b parent class_ref 132919 // IBinder
      end

      classrelation 1447735 // mInterfaceDesc (<unidirectional association>)
	relation 1447735 --->
	  a role_name "mInterfaceDesc" init_value " \"\"" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1447735 // mInterfaceDesc (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1447863 // mUtils (<unidirectional association>)
	relation 1447863 --->
	  a role_name "mUtils" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1447863 // mUtils (<unidirectional association>)
	  b parent class_ref 540983 // CommonTimeUtils
      end

      classrelation 1447991 // mDeathHandler (<unidirectional association>)
	relation 1447991 --->
	  a role_name "mDeathHandler" init_value " new IBinder.DeathRecipient() {
        public void binderDied() {
            synchronized (mListenerLock) {
                if (null != mServerDiedListener)
                    mServerDiedListener.onServerDied();
            }
        }
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1447991 // mDeathHandler (<unidirectional association>)
	  b parent class_ref 277943 // DeathRecipient
      end

      class 541111 "TimelineChangedListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1448119 // <generalisation>
	  relation 1448119 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1448119 // <generalisation>
	    b parent class_ref 277559 // Binder
	end

	operation 3743543 "onTransact"
	  protected explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" type class_ref 137527 // Parcel
	    param inout name "reply" type class_ref 137527 // Parcel
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	classrelation 1448247 // DESCRIPTOR (<unidirectional association>)
	  relation 1448247 --->
	    a role_name "DESCRIPTOR" init_value " \"android.os.ICommonClockListener\"" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1448247 // DESCRIPTOR (<unidirectional association>)
	    b parent class_ref 129591 // String
	end
      end

      classrelation 1448375 // mCallbackTgt (<unidirectional association>)
	relation 1448375 --->
	  a role_name "mCallbackTgt" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1448375 // mCallbackTgt (<unidirectional association>)
	  b parent class_ref 541111 // TimelineChangedListener
      end

      operation 3743671 "registerTimelineChangeListener"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3743799 "unregisterTimelineChangeListener"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1623863 "METHOD_IS_COMMON_TIME_VALID"
	class_attribute const_attribute private explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1623991 "METHOD_COMMON_TIME_TO_LOCAL_TIME"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_IS_COMMON_TIME_VALID + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1624119 "METHOD_LOCAL_TIME_TO_COMMON_TIME"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_COMMON_TIME_TO_LOCAL_TIME + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1624247 "METHOD_GET_COMMON_TIME"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_LOCAL_TIME_TO_COMMON_TIME + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1624375 "METHOD_GET_COMMON_FREQ"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_COMMON_TIME + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1624503 "METHOD_GET_LOCAL_TIME"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_COMMON_FREQ + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1624631 "METHOD_GET_LOCAL_FREQ"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_LOCAL_TIME + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1624759 "METHOD_GET_ESTIMATED_ERROR"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_LOCAL_FREQ + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1624887 "METHOD_GET_TIMELINE_ID"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_ESTIMATED_ERROR + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1625015 "METHOD_GET_STATE"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_TIMELINE_ID + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1625143 "METHOD_GET_MASTER_ADDRESS"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_STATE + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1625271 "METHOD_REGISTER_LISTENER"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_MASTER_ADDRESS + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1625399 "METHOD_UNREGISTER_LISTENER"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_REGISTER_LISTENER + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1625527 "METHOD_CBK_ON_TIMELINE_CHANGED"
	class_attribute const_attribute private explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 540983 "CommonTimeUtils"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 1628471 "SUCCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Successful operation.
"
      end

      attribute 1628599 "ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unspecified error.
"
      end

      attribute 1628727 "ERROR_BAD_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to bad parameter value.
"
      end

      attribute 1628855 "ERROR_DEAD_OBJECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to dead remote object.
"
      end

      operation 3747127 "CommonTimeUtils"
	public explicit_return_type ""
	nparams 2
	  param inout name "remote" type class_ref 132919 // IBinder
	  param inout name "interfaceDesc" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3747255 "transactGetInt"
	public explicit_return_type "int"
	nparams 2
	  param in name "method_code" explicit_type "int"
	  param in name "error_ret_val" explicit_type "int"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3747383 "transactSetInt"
	public explicit_return_type "int"
	nparams 2
	  param in name "method_code" explicit_type "int"
	  param in name "val" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3747511 "transactGetLong"
	public explicit_return_type "long"
	nparams 2
	  param in name "method_code" explicit_type "int"
	  param in name "error_ret_val" explicit_type "long"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3747639 "transactSetLong"
	public explicit_return_type "int"
	nparams 2
	  param in name "method_code" explicit_type "int"
	  param in name "val" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3747767 "transactGetString"
	public return_type class_ref 129591 // String
	nparams 2
	  param in name "method_code" explicit_type "int"
	  param inout name "error_ret_val" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3747895 "transactSetString"
	public explicit_return_type "int"
	nparams 2
	  param in name "method_code" explicit_type "int"
	  param inout name "val" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3748023 "transactGetSockaddr"
	public explicit_return_type "InetSocketAddress"
	nparams 1
	  param in name "method_code" explicit_type "int"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3748151 "transactSetSockaddr"
	public explicit_return_type "int"
	nparams 2
	  param in name "method_code" explicit_type "int"
	  param inout name "addr" explicit_type "InetSocketAddress"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1449399 // mRemote (<unidirectional association>)
	relation 1449399 --->
	  a role_name "mRemote" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1449399 // mRemote (<unidirectional association>)
	  b parent class_ref 132919 // IBinder
      end

      classrelation 1449527 // mInterfaceDesc (<unidirectional association>)
	relation 1449527 --->
	  a role_name "mInterfaceDesc" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1449527 // mInterfaceDesc (<unidirectional association>)
	  b parent class_ref 129591 // String
      end
    end

    class 541239 "CommonTimeConfig"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Used for configuring and controlling the status of the android common time service.
@hide"
      attribute 1625655 "SUCCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Successful operation.
"
      end

      attribute 1625783 "ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unspecified error.
"
      end

      attribute 1625911 "ERROR_BAD_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to bad parameter value.
"
      end

      attribute 1626039 "ERROR_DEAD_OBJECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to dead remote object.
"
      end

      attribute 1626167 "INVALID_GROUP_ID"
	class_attribute const_attribute public explicit_type "long"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sentinel value returned by {@link #getMasterElectionGroupId()} when an error occurs trying to
fetch the master election group.
"
      end

      classrelation 1448503 // SERVICE_NAME (<unidirectional association>)
	relation 1448503 --->
	  a role_name "SERVICE_NAME" init_value " \"common_time.config\"" class_relation const_relation public
	    comment "
Name of the underlying native binder service

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1448503 // SERVICE_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3743927 "CommonTimeConfig"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@throws android.os.RemoteException"
      end

      operation 3744055 "create"
	class_operation public return_type class_ref 541239 // CommonTimeConfig
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handy class factory method."
      end

      operation 3744183 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Release all native resources held by this {@link android.os.CommonTimeConfig} instance.  Once
resources have been released, the {@link android.os.CommonTimeConfig} instance is
disconnected from the native service and will throw a {@link android.os.RemoteException} if
any of its methods are called.  Clients should always call release on their client instances
before releasing their last Java reference to the instance.  Failure to do this will cause
non-deterministic native resource reclamation and may cause the common time service to remain
active on the network for longer than it should."
      end

      operation 3744311 "getMasterElectionPriority"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current priority of the common time service used in the master election protocol.

@return an 8 bit value indicating the priority of this common time service relative to other
common time services operating in the same domain.
@throws android.os.RemoteException"
      end

      operation 3744439 "setMasterElectionPriority"
	public explicit_return_type "int"
	nparams 1
	  param in name "priority" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current priority of the common time service used in the master election protocol.

@param priority priority of the common time service used in the master election protocol.
Lower numbers are lower priority.
@return {@link #SUCCESS} in case of success,
{@link #ERROR} or {@link #ERROR_DEAD_OBJECT} in case of failure."
      end

      operation 3744567 "getMasterElectionEndpoint"
	public explicit_return_type "InetSocketAddress"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the IP endpoint used by the time service to participate in the master election protocol.

@return an InetSocketAddress containing the IP address and UDP port being used by the
system's common time service to participate in the master election protocol.
@throws android.os.RemoteException"
      end

      operation 3744695 "setMasterElectionEndpoint"
	public explicit_return_type "int"
	nparams 1
	  param inout name "ep" explicit_type "InetSocketAddress"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the IP endpoint used by the common time service to participate in the master election
protocol.

@param ep The IP address and UDP port to be used by the common time service to participate in
the master election protocol.  The supplied IP address must be either the broadcast or
multicast address, unicast addresses are considered to be illegal values.
@return {@link #SUCCESS} in case of success,
{@link #ERROR}, {@link #ERROR_BAD_VALUE} or {@link #ERROR_DEAD_OBJECT} in case of failure."
      end

      operation 3744823 "getMasterElectionGroupId"
	public explicit_return_type "long"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current group ID used by the common time service in the master election protocol.

@return The 64-bit group ID of the common time service.
@throws android.os.RemoteException"
      end

      operation 3744951 "setMasterElectionGroupId"
	public explicit_return_type "int"
	nparams 1
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current group ID used by the common time service in the master election protocol.

@param id The 64-bit group ID of the common time service.
@return {@link #SUCCESS} in case of success,
{@link #ERROR}, {@link #ERROR_BAD_VALUE} or {@link #ERROR_DEAD_OBJECT} in case of failure."
      end

      operation 3745079 "getInterfaceBinding"
	public return_type class_ref 129591 // String
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the network interface which the common time service attempts to bind to.

@return a string with the network interface name which the common time service is bound to,
or null if the service is currently unbound.  Examples of interface names are things like
\"eth0\", or \"wlan0\".
@throws android.os.RemoteException"
      end

      operation 3745207 "setNetworkBinding"
	public explicit_return_type "int"
	nparams 1
	  param inout name "ifaceName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the name of the network interface which the common time service should attempt to bind
to.

@param ifaceName The name of the network interface (\"eth0\", \"wlan0\", etc...) wich the common
time service should attempt to bind to, or null to force the common time service to unbind
from the network and run in networkless mode.
@return {@link #SUCCESS} in case of success,
{@link #ERROR}, {@link #ERROR_BAD_VALUE} or {@link #ERROR_DEAD_OBJECT} in case of failure."
      end

      operation 3745335 "getMasterAnnounceInterval"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the amount of time the common time service will wait between master announcements when
it is the timeline master.

@return The time (in milliseconds) between master announcements.
@throws android.os.RemoteException"
      end

      operation 3745463 "setMasterAnnounceInterval"
	public explicit_return_type "int"
	nparams 1
	  param in name "interval" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the amount of time the common time service will wait between master announcements when
it is the timeline master.

@param interval The time (in milliseconds) between master announcements.
@return {@link #SUCCESS} in case of success,
{@link #ERROR}, {@link #ERROR_BAD_VALUE} or {@link #ERROR_DEAD_OBJECT} in case of failure."
      end

      operation 3745591 "getClientSyncInterval"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the amount of time the common time service will wait between time synchronization
requests when it is the client of another common time service on the network.

@return The time (in milliseconds) between time sync requests.
@throws android.os.RemoteException"
      end

      operation 3745719 "setClientSyncInterval"
	public explicit_return_type "int"
	nparams 1
	  param in name "interval" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the amount of time the common time service will wait between time synchronization
requests when it is the client of another common time service on the network.

@param interval The time (in milliseconds) between time sync requests.
@return {@link #SUCCESS} in case of success,
{@link #ERROR}, {@link #ERROR_BAD_VALUE} or {@link #ERROR_DEAD_OBJECT} in case of failure."
      end

      operation 3745847 "getPanicThreshold"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the panic threshold for the estimated error level of the common time service.  When the
common time service's estimated error rises above this level, the service will panic and
reset, causing a discontinuity in the currently synchronized timeline.

@return The threshold (in microseconds) past which the common time service will panic.
@throws android.os.RemoteException"
      end

      operation 3745975 "setPanicThreshold"
	public explicit_return_type "int"
	nparams 1
	  param in name "threshold" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the panic threshold for the estimated error level of the common time service.  When the
common time service's estimated error rises above this level, the service will panic and
reset, causing a discontinuity in the currently synchronized timeline.

@param threshold The threshold (in microseconds) past which the common time service will
panic.
@return {@link #SUCCESS} in case of success,
{@link #ERROR}, {@link #ERROR_BAD_VALUE} or {@link #ERROR_DEAD_OBJECT} in case of failure."
      end

      operation 3746103 "getAutoDisable"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current state of the common time service's auto disable flag.

@return The current state of the common time service's auto disable flag.
@throws android.os.RemoteException"
      end

      operation 3746231 "setAutoDisable"
	public explicit_return_type "int"
	nparams 1
	  param inout name "autoDisable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current state of the common time service's auto disable flag.  When the time
service's auto disable flag is set, it will automatically cease all network activity when
it has no active local clients, resuming activity the next time the service has interested
local clients.  When the auto disabled flag is cleared, the common time service will continue
to participate the time synchronization group even when it has no active local clients.

@param autoDisable The desired state of the common time service's auto disable flag.
@return {@link #SUCCESS} in case of success,
{@link #ERROR} or {@link #ERROR_DEAD_OBJECT} in case of failure."
      end

      operation 3746359 "forceNetworklessMasterMode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "At startup, the time service enters the initial state and remains there until it is given a
network interface to bind to.  Common time will be unavailable to clients of the common time
service until the service joins a network (even an empty network).  Devices may use the
{@link #forceNetworklessMasterMode()} method to force a time service in the INITIAL state
with no network configuration to assume MASTER status for a brand new timeline in order to
allow clients of the common time service to operate, even though the device is isolated and
not on any network.  When a networkless master does join a network, it will defer to any
masters already on the network, or continue to maintain the timeline it made up during its
networkless state if no other masters are detected.  Attempting to force a client into master
mode while it is actively bound to a network will fail with the status code {@link #ERROR}

@return {@link #SUCCESS} in case of success,
{@link #ERROR} or {@link #ERROR_DEAD_OBJECT} in case of failure."
      end

      class 541367 "OnServerDiedListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3746487 "onServerDied"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Method called when the native common time service has died.  <p>If the native common time
service encounters a fatal error and needs to restart, the binder connection from the
{@link android.os.CommonTimeConfig} instance to the common time service will be broken."
	end
      end

      operation 3746615 "setServerDiedListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 541367 // OnServerDiedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers an OnServerDiedListener interface.
<p>Call this method with a null listener to stop receiving server death notifications."
      end

      operation 3746743 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3746871 "checkDeadServer"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3746999 "throwOnDeadServer"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1448631 // mListenerLock (<unidirectional association>)
	relation 1448631 --->
	  a role_name "mListenerLock" init_value " new Object()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1448631 // mListenerLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      classrelation 1448759 // mServerDiedListener (<unidirectional association>)
	relation 1448759 --->
	  a role_name "mServerDiedListener" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1448759 // mServerDiedListener (<unidirectional association>)
	  b parent class_ref 541367 // OnServerDiedListener
      end

      classrelation 1448887 // mRemote (<unidirectional association>)
	relation 1448887 --->
	  a role_name "mRemote" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1448887 // mRemote (<unidirectional association>)
	  b parent class_ref 132919 // IBinder
      end

      classrelation 1449015 // mInterfaceDesc (<unidirectional association>)
	relation 1449015 --->
	  a role_name "mInterfaceDesc" init_value " \"\"" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1449015 // mInterfaceDesc (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1449143 // mUtils (<unidirectional association>)
	relation 1449143 --->
	  a role_name "mUtils" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1449143 // mUtils (<unidirectional association>)
	  b parent class_ref 540983 // CommonTimeUtils
      end

      classrelation 1449271 // mDeathHandler (<unidirectional association>)
	relation 1449271 --->
	  a role_name "mDeathHandler" init_value " new IBinder.DeathRecipient() {
        public void binderDied() {
            synchronized (mListenerLock) {
                if (null != mServerDiedListener)
                    mServerDiedListener.onServerDied();
            }
        }
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1449271 // mDeathHandler (<unidirectional association>)
	  b parent class_ref 277943 // DeathRecipient
      end

      attribute 1626295 "METHOD_GET_MASTER_ELECTION_PRIORITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1626423 "METHOD_SET_MASTER_ELECTION_PRIORITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_MASTER_ELECTION_PRIORITY + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1626551 "METHOD_GET_MASTER_ELECTION_ENDPOINT"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_SET_MASTER_ELECTION_PRIORITY + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1626679 "METHOD_SET_MASTER_ELECTION_ENDPOINT"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_MASTER_ELECTION_ENDPOINT + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1626807 "METHOD_GET_MASTER_ELECTION_GROUP_ID"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_SET_MASTER_ELECTION_ENDPOINT + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1626935 "METHOD_SET_MASTER_ELECTION_GROUP_ID"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_MASTER_ELECTION_GROUP_ID + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1627063 "METHOD_GET_INTERFACE_BINDING"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_SET_MASTER_ELECTION_GROUP_ID + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1627191 "METHOD_SET_INTERFACE_BINDING"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_INTERFACE_BINDING + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1627319 "METHOD_GET_MASTER_ANNOUNCE_INTERVAL"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_SET_INTERFACE_BINDING + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1627447 "METHOD_SET_MASTER_ANNOUNCE_INTERVAL"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_MASTER_ANNOUNCE_INTERVAL + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1627575 "METHOD_GET_CLIENT_SYNC_INTERVAL"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_SET_MASTER_ANNOUNCE_INTERVAL + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1627703 "METHOD_SET_CLIENT_SYNC_INTERVAL"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_CLIENT_SYNC_INTERVAL + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1627831 "METHOD_GET_PANIC_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_SET_CLIENT_SYNC_INTERVAL + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1627959 "METHOD_SET_PANIC_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_PANIC_THRESHOLD + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1628087 "METHOD_GET_AUTO_DISABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_SET_PANIC_THRESHOLD + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1628215 "METHOD_SET_AUTO_DISABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_GET_AUTO_DISABLE + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1628343 "METHOD_FORCE_NETWORKLESS_MASTER_MODE"
	class_attribute const_attribute private explicit_type "int"
	init_value " METHOD_SET_AUTO_DISABLE + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 541495 "CountDownTimer"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Schedule a countdown until a time in the future, with
regular notifications on intervals along the way.

Example of showing a 30 second countdown in a text field:

<pre class=\"prettyprint\">
new CountDownTimer(30000, 1000) {

    public void onTick(long millisUntilFinished) {
        mTextField.setText(\"seconds remaining: \" + millisUntilFinished / 1000);
    }

    public void onFinish() {
        mTextField.setText(\"done!\");
    }
 }.start();
</pre>

The calls to {@link #onTick(long)} are synchronized to this object so that
one call to {@link #onTick(long)} won't ever occur before the previous
callback is complete.  This is only relevant when the implementation of
{@link #onTick(long)} takes an amount of time to execute that is significant
compared to the countdown interval."
      attribute 1629111 "mMillisInFuture"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Millis since epoch when alarm should stop.
"
      end

      attribute 1629239 "mCountdownInterval"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The interval in millis that the user receives callbacks
"
      end

      attribute 1629367 "mStopTimeInFuture"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1629495 "mCancelled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "boolean representing if the timer was cancelled
"
      end

      operation 3749047 "CountDownTimer"
	public explicit_return_type ""
	nparams 2
	  param in name "millisInFuture" explicit_type "long"
	  param in name "countDownInterval" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param millisInFuture The number of millis in the future from the call
  to {@link #start()} until the countdown is done and {@link #onFinish()}
  is called.
@param countDownInterval The interval along the way to receive
  {@link #onTick(long)} callbacks."
      end

      operation 3749175 "cancel"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancel the countdown."
      end

      operation 3749303 "start"
	public return_type class_ref 541495 // CountDownTimer
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start the countdown."
      end

      operation 3749431 "onTick"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "millisUntilFinished" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback fired on regular interval.
@param millisUntilFinished The amount of time until finished."
      end

      operation 3749559 "onFinish"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback fired when the time is up."
      end

      attribute 1629623 "MSG"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1449655 // mHandler (<unidirectional association>)
	relation 1449655 --->
	  a role_name "mHandler" init_value " new Handler() {

        @Override
        public void handleMessage(Message msg) {

            synchronized (CountDownTimer.this) {
                if (mCancelled) {
                    return;
                }

                final long millisLeft = mStopTimeInFuture - SystemClock.elapsedRealtime();

                if (millisLeft <= 0) {
                    onFinish();
                } else if (millisLeft < mCountdownInterval) {
                    // no tick, just delay until done
                    sendMessageDelayed(obtainMessage(MSG), millisLeft);
                } else {
                    long lastTickStart = SystemClock.elapsedRealtime();
                    onTick(millisLeft);

                    // take into account user's onTick taking time to execute
                    long delay = lastTickStart + mCountdownInterval - SystemClock.elapsedRealtime();

                    // special case: user's onTick took more than interval to
                    // complete, skip to next interval
                    while (delay < 0) delay += mCountdownInterval;

                    sendMessageDelayed(obtainMessage(MSG), delay);
                }
            }
        }
    }" private
	    comment " handles counting down
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1449655 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end
    end

    class 541623 "CpuUsageInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "CPU usage information per core."
      classrelation 1449783 // <realization>
	relation 1449783 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1449783 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1629751 "mActive"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1629879 "mTotal"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1449911 // CREATOR (<unidirectional association>)
	relation 1449911 --->
	  a role_name "CREATOR" init_value " new
            Parcelable.Creator<CpuUsageInfo>() {
                    public CpuUsageInfo createFromParcel(Parcel in) {
                        return new CpuUsageInfo(in);
                    }

                    public CpuUsageInfo[] newArray(int size) {
                        return new CpuUsageInfo[size];
                    }
                }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<CpuUsageInfo> ${name}${value};
"
	    classrelation_ref 1449911 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3749687 "CpuUsageInfo"
	public explicit_return_type ""
	nparams 2
	  param in name "activeTime" explicit_type "long"
	  param in name "totalTime" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3749815 "CpuUsageInfo"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3749943 "getActive"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the active time in milliseconds since the system last booted.

@return Active time in milliseconds."
      end

      operation 3750071 "getTotal"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the total time in milliseconds that the CPU has been enabled since the system last
booted. This includes time the CPU spent idle.

@return Total time in milliseconds."
      end

      operation 3750199 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3750327 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3750455 "readFromParcel"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 541751 "DeadObjectException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The object you are calling has died, because its hosting process
no longer exists."
      classrelation 1450167 // <generalisation>
	relation 1450167 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1450167 // <generalisation>
	  b parent class_ref 159031 // RemoteException
      end

      operation 3751095 "DeadObjectException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3751223 "DeadObjectException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 541879 "DeadSystemException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The core Android system has died and is going through a runtime restart. All
running apps will be promptly killed."
      classrelation 1450295 // <generalisation>
	relation 1450295 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1450295 // <generalisation>
	  b parent class_ref 541751 // DeadObjectException
      end

      operation 3751351 "DeadSystemException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 542519 "Environment"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides access to environment variables."
      classrelation 1452599 // TAG (<unidirectional association>)
	relation 1452599 --->
	  a role_name "TAG" init_value " \"Environment\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1452599 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1452727 // ENV_EXTERNAL_STORAGE (<unidirectional association>)
	relation 1452727 --->
	  a role_name "ENV_EXTERNAL_STORAGE" init_value " \"EXTERNAL_STORAGE\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1452727 // ENV_EXTERNAL_STORAGE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1452855 // ENV_ANDROID_ROOT (<unidirectional association>)
	relation 1452855 --->
	  a role_name "ENV_ANDROID_ROOT" init_value " \"ANDROID_ROOT\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1452855 // ENV_ANDROID_ROOT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1452983 // ENV_ANDROID_DATA (<unidirectional association>)
	relation 1452983 --->
	  a role_name "ENV_ANDROID_DATA" init_value " \"ANDROID_DATA\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1452983 // ENV_ANDROID_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1453111 // ENV_ANDROID_EXPAND (<unidirectional association>)
	relation 1453111 --->
	  a role_name "ENV_ANDROID_EXPAND" init_value " \"ANDROID_EXPAND\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1453111 // ENV_ANDROID_EXPAND (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1453239 // ENV_ANDROID_STORAGE (<unidirectional association>)
	relation 1453239 --->
	  a role_name "ENV_ANDROID_STORAGE" init_value " \"ANDROID_STORAGE\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1453239 // ENV_ANDROID_STORAGE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1453367 // ENV_DOWNLOAD_CACHE (<unidirectional association>)
	relation 1453367 --->
	  a role_name "ENV_DOWNLOAD_CACHE" init_value " \"DOWNLOAD_CACHE\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1453367 // ENV_DOWNLOAD_CACHE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1453495 // ENV_OEM_ROOT (<unidirectional association>)
	relation 1453495 --->
	  a role_name "ENV_OEM_ROOT" init_value " \"OEM_ROOT\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1453495 // ENV_OEM_ROOT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1453623 // ENV_ODM_ROOT (<unidirectional association>)
	relation 1453623 --->
	  a role_name "ENV_ODM_ROOT" init_value " \"ODM_ROOT\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1453623 // ENV_ODM_ROOT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1453751 // ENV_VENDOR_ROOT (<unidirectional association>)
	relation 1453751 --->
	  a role_name "ENV_VENDOR_ROOT" init_value " \"VENDOR_ROOT\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1453751 // ENV_VENDOR_ROOT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1453879 // DIR_ANDROID (<unidirectional association>)
	relation 1453879 --->
	  a role_name "DIR_ANDROID" init_value " \"Android\"" class_relation const_relation public
	    comment " {@hide} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1453879 // DIR_ANDROID (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1454007 // DIR_DATA (<unidirectional association>)
	relation 1454007 --->
	  a role_name "DIR_DATA" init_value " \"data\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1454007 // DIR_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1454135 // DIR_MEDIA (<unidirectional association>)
	relation 1454135 --->
	  a role_name "DIR_MEDIA" init_value " \"media\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1454135 // DIR_MEDIA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1454263 // DIR_OBB (<unidirectional association>)
	relation 1454263 --->
	  a role_name "DIR_OBB" init_value " \"obb\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1454263 // DIR_OBB (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1454391 // DIR_FILES (<unidirectional association>)
	relation 1454391 --->
	  a role_name "DIR_FILES" init_value " \"files\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1454391 // DIR_FILES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1454519 // DIR_CACHE (<unidirectional association>)
	relation 1454519 --->
	  a role_name "DIR_CACHE" init_value " \"cache\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1454519 // DIR_CACHE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1454647 // DIRECTORY_ANDROID (<unidirectional association>)
	relation 1454647 --->
	  a role_name "DIRECTORY_ANDROID" init_value " DIR_ANDROID" class_relation const_relation public
	    comment " {@hide} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 1454647 // DIRECTORY_ANDROID (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1642295 "DIR_ANDROID_ROOT"
	class_attribute const_attribute private explicit_type "File"
	init_value " getDirectory(ENV_ANDROID_ROOT, \"/system\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1642423 "DIR_ANDROID_DATA"
	class_attribute const_attribute private explicit_type "File"
	init_value " getDirectory(ENV_ANDROID_DATA, \"/data\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1642551 "DIR_ANDROID_EXPAND"
	class_attribute const_attribute private explicit_type "File"
	init_value " getDirectory(ENV_ANDROID_EXPAND, \"/mnt/expand\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1642679 "DIR_ANDROID_STORAGE"
	class_attribute const_attribute private explicit_type "File"
	init_value " getDirectory(ENV_ANDROID_STORAGE, \"/storage\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1642807 "DIR_DOWNLOAD_CACHE"
	class_attribute const_attribute private explicit_type "File"
	init_value " getDirectory(ENV_DOWNLOAD_CACHE, \"/cache\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1642935 "DIR_OEM_ROOT"
	class_attribute const_attribute private explicit_type "File"
	init_value " getDirectory(ENV_OEM_ROOT, \"/oem\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1643063 "DIR_ODM_ROOT"
	class_attribute const_attribute private explicit_type "File"
	init_value " getDirectory(ENV_ODM_ROOT, \"/odm\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1643191 "DIR_VENDOR_ROOT"
	class_attribute const_attribute private explicit_type "File"
	init_value " getDirectory(ENV_VENDOR_ROOT, \"/vendor\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 542647 "UserEnvironment"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1643447 "mUserId"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3771447 "UserEnvironment"
	  public explicit_return_type ""
	  nparams 1
	    param in name "userId" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3771575 "getExternalDirs"
	  public explicit_return_type "File"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3771703 "getExternalStorageDirectory"
	  public explicit_return_type "File"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	end

	operation 3771831 "getExternalStoragePublicDirectory"
	  public explicit_return_type "File"
	  nparams 1
	    param inout name "type" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	end

	operation 3771959 "buildExternalStoragePublicDirs"
	  public explicit_return_type "File"
	  nparams 1
	    param inout name "type" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3772087 "buildExternalStorageAndroidDataDirs"
	  public explicit_return_type "File"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3772215 "buildExternalStorageAndroidObbDirs"
	  public explicit_return_type "File"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3772343 "buildExternalStorageAppDataDirs"
	  public explicit_return_type "File"
	  nparams 1
	    param inout name "packageName" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3772471 "buildExternalStorageAppMediaDirs"
	  public explicit_return_type "File"
	  nparams 1
	    param inout name "packageName" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3772599 "buildExternalStorageAppObbDirs"
	  public explicit_return_type "File"
	  nparams 1
	    param inout name "packageName" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3772727 "buildExternalStorageAppFilesDirs"
	  public explicit_return_type "File"
	  nparams 1
	    param inout name "packageName" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3772855 "buildExternalStorageAppCacheDirs"
	  public explicit_return_type "File"
	  nparams 1
	    param inout name "packageName" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1454775 // sCurrentUser (<unidirectional association>)
	relation 1454775 --->
	  a role_name "sCurrentUser" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1454775 // sCurrentUser (<unidirectional association>)
	  b parent class_ref 542647 // UserEnvironment
      end

      attribute 1643319 "sUserRequired"
	class_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 132791 "initialization"
	
	cpp "" ""
	java "  static {
        initForCurrentUser();
    }"
	php ""
	python ""
	idl ""
      end

      operation 3771319 "initForCurrentUser"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3772983 "getRootDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return root of the \"system\" partition holding the core Android OS.
Always present and mounted read-only."
      end

      operation 3773111 "getStorageDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3773239 "getOemDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return root directory of the \"oem\" partition holding OEM customizations,
if any. If present, the partition is mounted read-only.

@hide"
      end

      operation 3773367 "getOdmDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return root directory of the \"odm\" partition holding ODM customizations,
if any. If present, the partition is mounted read-only.

@hide"
      end

      operation 3773495 "getVendorDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return root directory of the \"vendor\" partition that holds vendor-provided
software that should persist across simple reflashing of the \"system\" partition.
@hide"
      end

      operation 3773623 "getUserSystemDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Return the system directory for a user. This is for use by system
services to store files relating to the user. This directory will be
automatically deleted when the user is removed.

@deprecated This directory is valid and still exists, but callers should
            <em>strongly</em> consider switching to
            {@link #getDataSystemCeDirectory(int)} which is protected
            with user credentials or
            {@link #getDataSystemDeDirectory(int)} which supports fast
            user wipe.
@hide"
      end

      operation 3773751 "getUserConfigDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the config directory for a user. This is for use by system
services to store files relating to the user which should be readable by
any app running as that user.

@deprecated This directory is valid and still exists, but callers should
            <em>strongly</em> consider switching to
            {@link #getDataMiscCeDirectory(int)} which is protected with
            user credentials or {@link #getDataMiscDeDirectory(int)}
            which supports fast user wipe.
@hide"
      end

      operation 3773879 "getDataDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the user data directory."
      end

      operation 3774007 "getDataDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "volumeUuid" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3774135 "getExpandDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3774263 "getDataSystemDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3774391 "getDataSystemDeDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base directory for per-user system directory, device encrypted.
{@hide}"
      end

      operation 3774519 "getDataSystemCeDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base directory for per-user system directory, credential encrypted.
{@hide}"
      end

      operation 3774647 "getDataSystemCeDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3774775 "getDataSystemDeDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3774903 "getDataMiscDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3775031 "getDataMiscCeDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3775159 "getDataMiscDeDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3775287 "getDataProfilesDeDirectory"
	class_operation private explicit_return_type "File"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3775415 "getDataProfilesDePackageDirectory"
	class_operation public explicit_return_type "File"
	nparams 2
	  param in name "userId" explicit_type "int"
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3775543 "getDataProfilesDeForeignDexDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3775671 "getDataAppDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "volumeUuid" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3775799 "getDataAppEphemeralDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "volumeUuid" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3775927 "getDataUserCeDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "volumeUuid" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3776055 "getDataUserCeDirectory"
	class_operation public explicit_return_type "File"
	nparams 2
	  param inout name "volumeUuid" type class_ref 129591 // String
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3776183 "getDataUserCePackageDirectory"
	class_operation public explicit_return_type "File"
	nparams 3
	  param inout name "volumeUuid" type class_ref 129591 // String
	  param in name "userId" explicit_type "int"
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3776311 "getDataUserDeDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "volumeUuid" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3776439 "getDataUserDeDirectory"
	class_operation public explicit_return_type "File"
	nparams 2
	  param inout name "volumeUuid" type class_ref 129591 // String
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3776567 "getDataUserDePackageDirectory"
	class_operation public explicit_return_type "File"
	nparams 3
	  param inout name "volumeUuid" type class_ref 129591 // String
	  param in name "userId" explicit_type "int"
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3776695 "getExternalStorageDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the primary shared/external storage directory. This directory may
not currently be accessible if it has been mounted by the user on their
computer, has been removed from the device, or some other problem has
happened. You can determine its current state with
{@link #getExternalStorageState()}.
<p>
<em>Note: don't be confused by the word \"external\" here. This directory
can better be thought as media/shared storage. It is a filesystem that
can hold a relatively large amount of data and that is shared across all
applications (does not enforce permissions). Traditionally this is an SD
card, but it may also be implemented as built-in storage in a device that
is distinct from the protected internal storage and can be mounted as a
filesystem on a computer.</em>
<p>
On devices with multiple users (as described by {@link UserManager}),
each user has their own isolated shared storage. Applications only have
access to the shared storage for the user they're running as.
<p>
In devices with multiple shared/external storage directories, this
directory represents the primary storage that the user will interact
with. Access to secondary storage is available through
{@link Context#getExternalFilesDirs(String)},
{@link Context#getExternalCacheDirs()}, and
{@link Context#getExternalMediaDirs()}.
<p>
Applications should not directly use this top-level directory, in order
to avoid polluting the user's root namespace. Any files that are private
to the application should be placed in a directory returned by
{@link android.content.Context#getExternalFilesDir
Context.getExternalFilesDir}, which the system will take care of deleting
if the application is uninstalled. Other shared files should be placed in
one of the directories returned by
{@link #getExternalStoragePublicDirectory}.
<p>
Writing to this path requires the
{@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} permission,
and starting in {@link android.os.Build.VERSION_CODES#KITKAT}, read access requires the
{@link android.Manifest.permission#READ_EXTERNAL_STORAGE} permission,
which is automatically granted if you hold the write permission.
<p>
Starting in {@link android.os.Build.VERSION_CODES#KITKAT}, if your
application only needs to store internal data, consider using
{@link Context#getExternalFilesDir(String)},
{@link Context#getExternalCacheDir()}, or
{@link Context#getExternalMediaDirs()}, which require no permissions to
read or write.
<p>
This path may change between platform versions, so applications should
only persist relative paths.
<p>
Here is an example of typical code to monitor the state of external
storage:
<p>
{@sample development/samples/ApiDemos/src/com/example/android/apis/content/ExternalStorage.java
monitor_storage}

@see #getExternalStorageState()
@see #isExternalStorageRemovable()"
      end

      operation 3776823 "getLegacyExternalStorageDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3776951 "getLegacyExternalStorageObbDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      classrelation 1454903 // DIRECTORY_MUSIC (<unidirectional association>)
	relation 1454903 --->
	  a role_name "DIRECTORY_MUSIC" init_value " \"Music\"" class_relation public
	    comment "
Standard directory in which to place any audio files that should be
in the regular list of music for the user.
This may be combined with
{@link #DIRECTORY_PODCASTS}, {@link #DIRECTORY_NOTIFICATIONS},
{@link #DIRECTORY_ALARMS}, and {@link #DIRECTORY_RINGTONES} as a series
of directories to categories a particular audio file as more than one
type.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1454903 // DIRECTORY_MUSIC (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1455031 // DIRECTORY_PODCASTS (<unidirectional association>)
	relation 1455031 --->
	  a role_name "DIRECTORY_PODCASTS" init_value " \"Podcasts\"" class_relation public
	    comment "
Standard directory in which to place any audio files that should be
in the list of podcasts that the user can select (not as regular
music).
This may be combined with {@link #DIRECTORY_MUSIC},
{@link #DIRECTORY_NOTIFICATIONS},
{@link #DIRECTORY_ALARMS}, and {@link #DIRECTORY_RINGTONES} as a series
of directories to categories a particular audio file as more than one
type.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1455031 // DIRECTORY_PODCASTS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1455159 // DIRECTORY_RINGTONES (<unidirectional association>)
	relation 1455159 --->
	  a role_name "DIRECTORY_RINGTONES" init_value " \"Ringtones\"" class_relation public
	    comment "
Standard directory in which to place any audio files that should be
in the list of ringtones that the user can select (not as regular
music).
This may be combined with {@link #DIRECTORY_MUSIC},
{@link #DIRECTORY_PODCASTS}, {@link #DIRECTORY_NOTIFICATIONS}, and
{@link #DIRECTORY_ALARMS} as a series
of directories to categories a particular audio file as more than one
type.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1455159 // DIRECTORY_RINGTONES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1455287 // DIRECTORY_ALARMS (<unidirectional association>)
	relation 1455287 --->
	  a role_name "DIRECTORY_ALARMS" init_value " \"Alarms\"" class_relation public
	    comment "
Standard directory in which to place any audio files that should be
in the list of alarms that the user can select (not as regular
music).
This may be combined with {@link #DIRECTORY_MUSIC},
{@link #DIRECTORY_PODCASTS}, {@link #DIRECTORY_NOTIFICATIONS},
and {@link #DIRECTORY_RINGTONES} as a series
of directories to categories a particular audio file as more than one
type.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1455287 // DIRECTORY_ALARMS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1455415 // DIRECTORY_NOTIFICATIONS (<unidirectional association>)
	relation 1455415 --->
	  a role_name "DIRECTORY_NOTIFICATIONS" init_value " \"Notifications\"" class_relation public
	    comment "
Standard directory in which to place any audio files that should be
in the list of notifications that the user can select (not as regular
music).
This may be combined with {@link #DIRECTORY_MUSIC},
{@link #DIRECTORY_PODCASTS},
{@link #DIRECTORY_ALARMS}, and {@link #DIRECTORY_RINGTONES} as a series
of directories to categories a particular audio file as more than one
type.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1455415 // DIRECTORY_NOTIFICATIONS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1455543 // DIRECTORY_PICTURES (<unidirectional association>)
	relation 1455543 --->
	  a role_name "DIRECTORY_PICTURES" init_value " \"Pictures\"" class_relation public
	    comment "
Standard directory in which to place pictures that are available to
the user.  Note that this is primarily a convention for the top-level
public directory, as the media scanner will find and collect pictures
in any directory.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1455543 // DIRECTORY_PICTURES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1455671 // DIRECTORY_MOVIES (<unidirectional association>)
	relation 1455671 --->
	  a role_name "DIRECTORY_MOVIES" init_value " \"Movies\"" class_relation public
	    comment "
Standard directory in which to place movies that are available to
the user.  Note that this is primarily a convention for the top-level
public directory, as the media scanner will find and collect movies
in any directory.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1455671 // DIRECTORY_MOVIES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1455799 // DIRECTORY_DOWNLOADS (<unidirectional association>)
	relation 1455799 --->
	  a role_name "DIRECTORY_DOWNLOADS" init_value " \"Download\"" class_relation public
	    comment "
Standard directory in which to place files that have been downloaded by
the user.  Note that this is primarily a convention for the top-level
public directory, you are free to download files anywhere in your own
private directories.  Also note that though the constant here is
named DIRECTORY_DOWNLOADS (plural), the actual file name is non-plural for
backwards compatibility reasons.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1455799 // DIRECTORY_DOWNLOADS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1455927 // DIRECTORY_DCIM (<unidirectional association>)
	relation 1455927 --->
	  a role_name "DIRECTORY_DCIM" init_value " \"DCIM\"" class_relation public
	    comment "
The traditional location for pictures and videos when mounting the
device as a camera.  Note that this is primarily a convention for the
top-level public directory, as this convention makes no sense elsewhere.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1455927 // DIRECTORY_DCIM (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1456055 // DIRECTORY_DOCUMENTS (<unidirectional association>)
	relation 1456055 --->
	  a role_name "DIRECTORY_DOCUMENTS" init_value " \"Documents\"" class_relation public
	    comment "
Standard directory in which to place documents that have been created by
the user.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1456055 // DIRECTORY_DOCUMENTS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1456183 // STANDARD_DIRECTORIES (<unidirectional association>)
	relation 1456183 --->
	  a role_name "STANDARD_DIRECTORIES" multiplicity "[]" init_value " {
            DIRECTORY_MUSIC,
            DIRECTORY_PODCASTS,
            DIRECTORY_RINGTONES,
            DIRECTORY_ALARMS,
            DIRECTORY_NOTIFICATIONS,
            DIRECTORY_PICTURES,
            DIRECTORY_MOVIES,
            DIRECTORY_DOWNLOADS,
            DIRECTORY_DCIM,
            DIRECTORY_DOCUMENTS
    }" class_relation const_relation public
	    comment "
List of standard storage directories.
<p>
Each of its values have its own constant:
<ul>
  <li>{@link #DIRECTORY_MUSIC}
  <li>{@link #DIRECTORY_PODCASTS}
  <li>{@link #DIRECTORY_ALARMS}
  <li>{@link #DIRECTORY_RINGTONES}
  <li>{@link #DIRECTORY_NOTIFICATIONS}
  <li>{@link #DIRECTORY_PICTURES}
  <li>{@link #DIRECTORY_MOVIES}
  <li>{@link #DIRECTORY_DOWNLOADS}
  <li>{@link #DIRECTORY_DCIM}
  <li>{@link #DIRECTORY_DOCUMENTS}
</ul>
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1456183 // STANDARD_DIRECTORIES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3777079 "isStandardDirectory"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "dir" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3777207 "getExternalStoragePublicDirectory"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "type" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a top-level shared/external storage directory for placing files of a
particular type. This is where the user will typically place and manage
their own files, so you should be careful about what you put here to
ensure you don't erase their files or get in the way of their own
organization.
<p>
On devices with multiple users (as described by {@link UserManager}),
each user has their own isolated shared storage. Applications only have
access to the shared storage for the user they're running as.
</p>
<p>
Here is an example of typical code to manipulate a picture on the public
shared storage:
</p>
{@sample development/samples/ApiDemos/src/com/example/android/apis/content/ExternalStorage.java
public_picture}

@param type The type of storage directory to return. Should be one of
           {@link #DIRECTORY_MUSIC}, {@link #DIRECTORY_PODCASTS},
           {@link #DIRECTORY_RINGTONES}, {@link #DIRECTORY_ALARMS},
           {@link #DIRECTORY_NOTIFICATIONS}, {@link #DIRECTORY_PICTURES},
           {@link #DIRECTORY_MOVIES}, {@link #DIRECTORY_DOWNLOADS},
           {@link #DIRECTORY_DCIM}, or {@link #DIRECTORY_DOCUMENTS}. May not be null.
@return Returns the File path for the directory. Note that this directory
        may not yet exist, so you must make sure it exists before using
        it such as with {@link File#mkdirs File.mkdirs()}."
      end

      operation 3777335 "buildExternalStorageAndroidDataDirs"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path for android-specific data on the SD card.
@hide"
      end

      operation 3777463 "buildExternalStorageAppDataDirs"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates the raw path to an application's data
@hide"
      end

      operation 3777591 "buildExternalStorageAppMediaDirs"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates the raw path to an application's media
@hide"
      end

      operation 3777719 "buildExternalStorageAppObbDirs"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates the raw path to an application's OBB files
@hide"
      end

      operation 3777847 "buildExternalStorageAppFilesDirs"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates the path to an application's files.
@hide"
      end

      operation 3777975 "buildExternalStorageAppCacheDirs"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates the path to an application's cache.
@hide"
      end

      operation 3778103 "getDownloadCacheDirectory"
	class_operation public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the download/cache content directory."
      end

      classrelation 1456311 // MEDIA_UNKNOWN (<unidirectional association>)
	relation 1456311 --->
	  a role_name "MEDIA_UNKNOWN" init_value " \"unknown\"" class_relation const_relation public
	    comment "
Unknown storage state, such as when a path isn't backed by known storage
media.

@see #getExternalStorageState(File)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1456311 // MEDIA_UNKNOWN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1456439 // MEDIA_REMOVED (<unidirectional association>)
	relation 1456439 --->
	  a role_name "MEDIA_REMOVED" init_value " \"removed\"" class_relation const_relation public
	    comment "
Storage state if the media is not present.

@see #getExternalStorageState(File)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1456439 // MEDIA_REMOVED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1456567 // MEDIA_UNMOUNTED (<unidirectional association>)
	relation 1456567 --->
	  a role_name "MEDIA_UNMOUNTED" init_value " \"unmounted\"" class_relation const_relation public
	    comment "
Storage state if the media is present but not mounted.

@see #getExternalStorageState(File)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1456567 // MEDIA_UNMOUNTED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1456695 // MEDIA_CHECKING (<unidirectional association>)
	relation 1456695 --->
	  a role_name "MEDIA_CHECKING" init_value " \"checking\"" class_relation const_relation public
	    comment "
Storage state if the media is present and being disk-checked.

@see #getExternalStorageState(File)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1456695 // MEDIA_CHECKING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1456823 // MEDIA_NOFS (<unidirectional association>)
	relation 1456823 --->
	  a role_name "MEDIA_NOFS" init_value " \"nofs\"" class_relation const_relation public
	    comment "
Storage state if the media is present but is blank or is using an
unsupported filesystem.

@see #getExternalStorageState(File)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1456823 // MEDIA_NOFS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1456951 // MEDIA_MOUNTED (<unidirectional association>)
	relation 1456951 --->
	  a role_name "MEDIA_MOUNTED" init_value " \"mounted\"" class_relation const_relation public
	    comment "
Storage state if the media is present and mounted at its mount point with
read/write access.

@see #getExternalStorageState(File)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1456951 // MEDIA_MOUNTED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1457079 // MEDIA_MOUNTED_READ_ONLY (<unidirectional association>)
	relation 1457079 --->
	  a role_name "MEDIA_MOUNTED_READ_ONLY" init_value " \"mounted_ro\"" class_relation const_relation public
	    comment "
Storage state if the media is present and mounted at its mount point with
read-only access.

@see #getExternalStorageState(File)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1457079 // MEDIA_MOUNTED_READ_ONLY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1457207 // MEDIA_SHARED (<unidirectional association>)
	relation 1457207 --->
	  a role_name "MEDIA_SHARED" init_value " \"shared\"" class_relation const_relation public
	    comment "
Storage state if the media is present not mounted, and shared via USB
mass storage.

@see #getExternalStorageState(File)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1457207 // MEDIA_SHARED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1457335 // MEDIA_BAD_REMOVAL (<unidirectional association>)
	relation 1457335 --->
	  a role_name "MEDIA_BAD_REMOVAL" init_value " \"bad_removal\"" class_relation const_relation public
	    comment "
Storage state if the media was removed before it was unmounted.

@see #getExternalStorageState(File)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1457335 // MEDIA_BAD_REMOVAL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1457463 // MEDIA_UNMOUNTABLE (<unidirectional association>)
	relation 1457463 --->
	  a role_name "MEDIA_UNMOUNTABLE" init_value " \"unmountable\"" class_relation const_relation public
	    comment "
Storage state if the media is present but cannot be mounted. Typically
this happens if the file system on the media is corrupted.

@see #getExternalStorageState(File)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1457463 // MEDIA_UNMOUNTABLE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1457591 // MEDIA_EJECTING (<unidirectional association>)
	relation 1457591 --->
	  a role_name "MEDIA_EJECTING" init_value " \"ejecting\"" class_relation const_relation public
	    comment "
Storage state if the media is in the process of being ejected.

@see #getExternalStorageState(File)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1457591 // MEDIA_EJECTING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3778231 "getExternalStorageState"
	class_operation public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current state of the primary shared/external storage media.

@see #getExternalStorageDirectory()
@return one of {@link #MEDIA_UNKNOWN}, {@link #MEDIA_REMOVED},
        {@link #MEDIA_UNMOUNTED}, {@link #MEDIA_CHECKING},
        {@link #MEDIA_NOFS}, {@link #MEDIA_MOUNTED},
        {@link #MEDIA_MOUNTED_READ_ONLY}, {@link #MEDIA_SHARED},
        {@link #MEDIA_BAD_REMOVAL}, or {@link #MEDIA_UNMOUNTABLE}."
      end

      operation 3778359 "getStorageState"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "path" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated use {@link #getExternalStorageState(File)}"
      end

      operation 3778487 "getExternalStorageState"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "path" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current state of the shared/external storage media at the
given path.

@return one of {@link #MEDIA_UNKNOWN}, {@link #MEDIA_REMOVED},
        {@link #MEDIA_UNMOUNTED}, {@link #MEDIA_CHECKING},
        {@link #MEDIA_NOFS}, {@link #MEDIA_MOUNTED},
        {@link #MEDIA_MOUNTED_READ_ONLY}, {@link #MEDIA_SHARED},
        {@link #MEDIA_BAD_REMOVAL}, or {@link #MEDIA_UNMOUNTABLE}."
      end

      operation 3778615 "isExternalStorageRemovable"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the primary shared/external storage media is physically
removable.

@return true if the storage device can be removed (such as an SD card),
        or false if the storage device is built in and cannot be
        physically removed."
      end

      operation 3778743 "isExternalStorageRemovable"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "path" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the shared/external storage media at the given path is
physically removable.

@return true if the storage device can be removed (such as an SD card),
        or false if the storage device is built in and cannot be
        physically removed.
@throws IllegalArgumentException if the path is not a valid storage
            device."
      end

      operation 3778871 "isExternalStorageEmulated"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the primary shared/external storage media is emulated.
<p>
The contents of emulated storage devices are backed by a private user
data partition, which means there is little benefit to apps storing data
here instead of the private directories returned by
{@link Context#getFilesDir()}, etc.
<p>
This returns true when emulated storage is backed by either internal
storage or an adopted storage device.

@see DevicePolicyManager#setStorageEncryption(android.content.ComponentName,
     boolean)"
      end

      operation 3778999 "isExternalStorageEmulated"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "path" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the shared/external storage media at the given path is
emulated.
<p>
The contents of emulated storage devices are backed by a private user
data partition, which means there is little benefit to apps storing data
here instead of the private directories returned by
{@link Context#getFilesDir()}, etc.
<p>
This returns true when emulated storage is backed by either internal
storage or an adopted storage device.

@throws IllegalArgumentException if the path is not a valid storage
            device."
      end

      operation 3779127 "getDirectory"
	class_operation package explicit_return_type "File"
	nparams 2
	  param inout name "variableName" type class_ref 129591 // String
	  param inout name "defaultPath" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3779255 "setUserRequired"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "userRequired" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3779383 "throwIfUserRequired"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3779511 "buildPaths"
	class_operation public explicit_return_type "File"
	nparams 2
	  param inout name "base" explicit_type "File"
	  param inout name "" explicit_type "String...segments"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append path segments to each given base path, returning result.

@hide"
      end

      operation 3779639 "buildPath"
	class_operation public explicit_return_type "File"
	nparams 2
	  param inout name "base" explicit_type "File"
	  param inout name "" explicit_type "String...segments"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Append path segments to given base path, returning result.

@hide"
      end

      operation 3779767 "isStorageDisabled"
	class_operation private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3779895 "maybeTranslateEmulatedPathToInternal"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "path" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the given path exists on emulated external storage, return the
translated backing path hosted on internal storage. This bypasses any
emulation later, improving performance. This is <em>only</em> suitable
for read-only access.
<p>
Returns original path if given path doesn't meet these criteria. Callers
must hold {@link android.Manifest.permission#WRITE_MEDIA_STORAGE}
permission.

@hide"
      end
    end

    class 542775 "FactoryTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides support for in-place factory test functions.

This class provides a few properties that alter the normal operation of the system
during factory testing.

{@hide}"
      attribute 1643575 "FACTORY_TEST_OFF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1643703 "FACTORY_TEST_LOW_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1643831 "FACTORY_TEST_HIGH_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3780023 "getMode"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current factory test mode.

@return One of: {@link #FACTORY_TEST_OFF}, {@link #FACTORY_TEST_LOW_LEVEL},
or {@link #FACTORY_TEST_HIGH_LEVEL}."
      end

      operation 3780151 "isLongPressOnPowerOffEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When true, long-press on power should immediately cause the device to
shut down, without prompting the user."
      end
    end

    class 542903 "FileBridge"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Simple bridge that allows file access across process boundaries without
returning the underlying {@link FileDescriptor}. This is useful when the
server side needs to strongly assert that a client side is completely
hands-off.

@hide"
      classrelation 1457719 // <generalisation>
	relation 1457719 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1457719 // <generalisation>
	  b parent class_ref 295863 // Thread
      end

      classrelation 1457847 // TAG (<unidirectional association>)
	relation 1457847 --->
	  a role_name "TAG" init_value " \"FileBridge\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1457847 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1643959 "MSG_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " TODO: consider extending to support bidirectional IO"
      end

      attribute 1644087 "CMD_WRITE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " CMD_WRITE [len] [data] "
      end

      attribute 1644215 "CMD_FSYNC"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " CMD_FSYNC "
      end

      attribute 1644343 "CMD_CLOSE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " CMD_CLOSE "
      end

      attribute 1644471 "mTarget"
	private explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1644599 "mServer"
	const_attribute private explicit_type "FileDescriptor"
	init_value " new FileDescriptor()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1644727 "mClient"
	const_attribute private explicit_type "FileDescriptor"
	init_value " new FileDescriptor()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1644855 "mClosed"
	volatile private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3780279 "FileBridge"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3780407 "isClosed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3780535 "forceClose"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3780663 "setTargetFile"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3780791 "getClientSocket"
	public explicit_return_type "FileDescriptor"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3780919 "run"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 543031 "FileBridgeOutputStream"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1457975 // <generalisation>
	  relation 1457975 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1457975 // <generalisation>
	    b parent class_ref 417719 // OutputStream
	end

	classrelation 1458103 // mClientPfd (<unidirectional association>)
	  relation 1458103 --->
	    a role_name "mClientPfd" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1458103 // mClientPfd (<unidirectional association>)
	    b parent class_ref 264887 // ParcelFileDescriptor
	end

	attribute 1644983 "mClient"
	  const_attribute private explicit_type "FileDescriptor"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1645111 "mTemp"
	  const_attribute private explicit_type "byte"
	  multiplicity "[]"
	  init_value " new byte[MSG_LENGTH]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3781047 "FileBridgeOutputStream"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "clientPfd" type class_ref 264887 // ParcelFileDescriptor
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3781175 "FileBridgeOutputStream"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "client" explicit_type "FileDescriptor"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3781303 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3781431 "fsync"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3781559 "writeCommandAndBlock"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "cmd" explicit_type "int"
	    param inout name "cmdString" type class_ref 129591 // String
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3781687 "write"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "buffer" explicit_type "byte"
	    param in name "byteOffset" explicit_type "int"
	    param in name "byteCount" explicit_type "int"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3781815 "write"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "oneByte" explicit_type "int"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 543287 "FileUriExposedException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when an application exposes a {@code file://}
{@link android.net.Uri} to another app.
<p>
This exposure is discouraged since the receiving app may not have access to
the shared path. For example, the receiving app may not have requested the
{@link android.Manifest.permission#READ_EXTERNAL_STORAGE} runtime permission,
or the platform may be sharing the {@link android.net.Uri} across user
profile boundaries.
<p>
Instead, apps should use {@code content://} Uris so the platform can extend
temporary permission for the receiving app to access the resource.
<p>
This is only thrown for applications targeting {@link Build.VERSION_CODES#N}
or higher. Applications targeting earlier SDK versions are allowed to share
{@code file://} {@link android.net.Uri}, but it's strongly discouraged.

@see android.support.v4.content.FileProvider
@see Intent#FLAG_GRANT_READ_URI_PERMISSION"
      classrelation 1458743 // <generalisation>
	relation 1458743 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1458743 // <generalisation>
	  b parent class_ref 446775 // RuntimeException
      end

      operation 3783863 "FileUriExposedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 543415 "FileUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Tools for managing files.  Not for public consumption.
@hide"
      classrelation 1458871 // TAG (<unidirectional association>)
	relation 1458871 --->
	  a role_name "TAG" init_value " \"FileUtils\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1458871 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1647415 "S_IRWXU"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00700"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1647543 "S_IRUSR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1647671 "S_IWUSR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1647799 "S_IXUSR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1647927 "S_IRWXG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00070"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1648055 "S_IRGRP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1648183 "S_IWGRP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1648311 "S_IXGRP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1648439 "S_IRWXO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00007"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1648567 "S_IROTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1648695 "S_IWOTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1648823 "S_IXOTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 00001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 543543 "NoImagePreloadHolder"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1648951 "SAFE_FILENAME_PATTERN"
	  class_attribute const_attribute public explicit_type "Pattern"
	  init_value " Pattern.compile(\"[\\\\w%+,./=_-]+\")"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      attribute 1649079 "EMPTY"
	class_attribute const_attribute private explicit_type "File"
	multiplicity "[]"
	init_value " new File[0]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3783991 "setPermissions"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "path" explicit_type "File"
	  param in name "mode" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "gid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set owner and mode of of given {@link File}.

@param mode to apply through {@code chmod}
@param uid to apply through {@code chown}, or -1 to leave unchanged
@param gid to apply through {@code chown}, or -1 to leave unchanged
@return 0 on success, otherwise errno."
      end

      operation 3784119 "setPermissions"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "path" type class_ref 129591 // String
	  param in name "mode" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "gid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set owner and mode of of given path.

@param mode to apply through {@code chmod}
@param uid to apply through {@code chown}, or -1 to leave unchanged
@param gid to apply through {@code chown}, or -1 to leave unchanged
@return 0 on success, otherwise errno."
      end

      operation 3784247 "setPermissions"
	class_operation public explicit_return_type "int"
	nparams 4
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "mode" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "gid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set owner and mode of of given {@link FileDescriptor}.

@param mode to apply through {@code chmod}
@param uid to apply through {@code chown}, or -1 to leave unchanged
@param gid to apply through {@code chown}, or -1 to leave unchanged
@return 0 on success, otherwise errno."
      end

      operation 3784375 "copyPermissions"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "from" explicit_type "File"
	  param inout name "to" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3784503 "getUid"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "path" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return owning UID of given path, otherwise -1."
      end

      operation 3784631 "sync"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "stream" explicit_type "FileOutputStream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform an fsync on the given FileOutputStream.  The stream at this
point must be flushed but not yet closed."
      end

      operation 3784759 "copyFile"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "srcFile" explicit_type "File"
	  param inout name "destFile" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
      end

      operation 3784887 "copyFileOrThrow"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "srcFile" explicit_type "File"
	  param inout name "destFile" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " copy a file from srcFile to destFile, return true if succeed, return
 false if fail"
      end

      operation 3785015 "copyToFile"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "inputStream" explicit_type "InputStream"
	  param inout name "destFile" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
      end

      operation 3785143 "copyToFileOrThrow"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "inputStream" explicit_type "InputStream"
	  param inout name "destFile" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy data from a source stream to destFile.
Return true if succeed, return false if failed."
      end

      operation 3785271 "isFilenameSafe"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "file" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if a filename is \"safe\" (no metacharacters or spaces).
@param file  The file to check"
      end

      operation 3785399 "readTextFile"
	class_operation public return_type class_ref 129591 // String
	nparams 3
	  param inout name "file" explicit_type "File"
	  param in name "max" explicit_type "int"
	  param inout name "ellipsis" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a text file into a String, optionally limiting the length.
@param file to read (will not seek, so things like /proc files are OK)
@param max length (positive for head, negative of tail, 0 for no limit)
@param ellipsis to add of the file was truncated (can be null)
@return the contents of the file, possibly truncated
@throws IOException if something goes wrong reading the file"
      end

      operation 3785527 "stringToFile"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param inout name "string" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3785655 "stringToFile"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "filename" type class_ref 129591 // String
	  param inout name "string" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes string to file. Basically same as \"echo -n $string > $filename\"

@param filename
@param string
@throws IOException"
      end

      operation 3785783 "checksumCrc32"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "file" explicit_type "File"
	nexceptions 2
	  explicit_exception "FileNotFoundException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the checksum of a file using the CRC32 checksum routine.
The value of the checksum is returned.

@param file  the file to checksum, must not be null
@return the checksum value or an exception is thrown."
      end

      operation 3785911 "deleteOlderFiles"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "dir" explicit_type "File"
	  param in name "minCount" explicit_type "int"
	  param in name "minAge" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delete older files in a directory until only those matching the given
constraints remain.

@param minCount Always keep at least this many files.
@param minAge Always keep files younger than this age.
@return if any files were deleted."
      end

      operation 3786039 "contains"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "dirs" explicit_type "File"
	  param inout name "file" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test if a file lives under the given directory, either as a direct child
or a distant grandchild.
<p>
Both files <em>must</em> have been resolved using
{@link File#getCanonicalFile()} to avoid symlink or path traversal
attacks."
      end

      operation 3786167 "contains"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "dir" explicit_type "File"
	  param inout name "file" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test if a file lives under the given directory, either as a direct child
or a distant grandchild.
<p>
Both files <em>must</em> have been resolved using
{@link File#getCanonicalFile()} to avoid symlink or path traversal
attacks."
      end

      operation 3786295 "deleteContentsAndDir"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "dir" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3786423 "deleteContents"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "dir" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3786551 "isValidExtFilenameChar"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3786679 "isValidExtFilename"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if given filename is valid for an ext4 filesystem."
      end

      operation 3786807 "buildValidExtFilename"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mutate the given filename to make it valid for an ext4 filesystem,
replacing any invalid characters with \"_\"."
      end

      operation 3786935 "isValidFatFilenameChar"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3787063 "isValidFatFilename"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if given filename is valid for a FAT filesystem."
      end

      operation 3787191 "buildValidFatFilename"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mutate the given filename to make it valid for a FAT filesystem,
replacing any invalid characters with \"_\"."
      end

      operation 3787319 "trimFilename"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "str" type class_ref 129591 // String
	  param in name "maxBytes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@VisibleForTesting
"
	
	
	
      end

      operation 3787447 "trimFilename"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "res" explicit_type "StringBuilder"
	  param in name "maxBytes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3787575 "rewriteAfterRename"
	class_operation public return_type class_ref 129591 // String
	nparams 3
	  param inout name "beforeDir" explicit_type "File"
	  param inout name "afterDir" explicit_type "File"
	  param inout name "path" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3787703 "rewriteAfterRename"
	class_operation public return_type class_ref 129591 // String
	nparams 3
	  param inout name "beforeDir" explicit_type "File"
	  param inout name "afterDir" explicit_type "File"
	  param inout name "paths" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3787831 "rewriteAfterRename"
	class_operation public explicit_return_type "File"
	nparams 3
	  param inout name "beforeDir" explicit_type "File"
	  param inout name "afterDir" explicit_type "File"
	  param inout name "file" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a path under the \"before\" directory, rewrite it to live under the
\"after\" directory. For example, {@code /before/foo/bar.txt} would become
{@code /after/foo/bar.txt}."
      end

      operation 3787959 "buildUniqueFile"
	class_operation public explicit_return_type "File"
	nparams 3
	  param inout name "parent" explicit_type "File"
	  param inout name "mimeType" type class_ref 129591 // String
	  param inout name "displayName" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a unique file name under the given parent directory. If the display name doesn't
have an extension that matches the requested MIME type, the default extension for that MIME
type is appended. If a file already exists, the name is appended with a numerical value to
make it unique.

For example, the display name 'example' with 'text/plain' MIME might produce
'example.txt' or 'example (1).txt', etc.

@throws FileNotFoundException"
      end

      operation 3788087 "splitFileName"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "mimeType" type class_ref 129591 // String
	  param inout name "displayName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Splits file name into base name and extension.
If the display name doesn't have an extension that matches the requested MIME type, the
extension is regarded as a part of filename and default extension for that MIME type is
appended."
      end

      operation 3788215 "buildFile"
	class_operation private explicit_return_type "File"
	nparams 3
	  param inout name "parent" explicit_type "File"
	  param inout name "name" type class_ref 129591 // String
	  param inout name "ext" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3788343 "listOrEmpty"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "dir" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
      end

      operation 3788471 "listFilesOrEmpty"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "dir" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
      end

      operation 3788599 "listFilesOrEmpty"
	class_operation public explicit_return_type "File"
	nparams 2
	  param inout name "dir" explicit_type "File"
	  param inout name "filter" explicit_type "FilenameFilter"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
      end

      operation 3788727 "newFileOrNull"
	class_operation public explicit_return_type "File"
	nparams 1
	  param inout name "path" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
      end
    end

    class 543671 "HardwarePropertiesManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The HardwarePropertiesManager class provides a mechanism of accessing hardware state of a
device: CPU, GPU and battery temperatures, CPU usage per core, fan speed, etc."
      classrelation 1458999 // TAG (<unidirectional association>)
	relation 1458999 --->
	  a role_name "TAG" init_value " HardwarePropertiesManager.class.getSimpleName()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1458999 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1649207 "mService"
	const_attribute private explicit_type "IHardwarePropertiesManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 543799 "DeviceTemperatureType"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef({
        DEVICE_TEMPERATURE_CPU, DEVICE_TEMPERATURE_GPU, DEVICE_TEMPERATURE_BATTERY,
                DEVICE_TEMPERATURE_SKIN
    })
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 543927 "TemperatureSource"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef({
        TEMPERATURE_CURRENT, TEMPERATURE_THROTTLING, TEMPERATURE_SHUTDOWN,
                TEMPERATURE_THROTTLING_BELOW_VR_MIN
    })
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      attribute 1649335 "DEVICE_TEMPERATURE_CPU"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Device temperature types. These must match the values in
frameworks/native/include/hardwareproperties/HardwarePropertiesManager.h

 Temperature of CPUs in Celsius. "
      end

      attribute 1649463 "DEVICE_TEMPERATURE_GPU"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Temperature of GPUs in Celsius. "
      end

      attribute 1649591 "DEVICE_TEMPERATURE_BATTERY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Temperature of battery in Celsius. "
      end

      attribute 1649719 "DEVICE_TEMPERATURE_SKIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Temperature of device skin in Celsius. "
      end

      attribute 1649847 "TEMPERATURE_CURRENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Get current temperature. "
      end

      attribute 1649975 "TEMPERATURE_THROTTLING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Get throttling temperature threshold. "
      end

      attribute 1650103 "TEMPERATURE_SHUTDOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Get shutdown temperature threshold. "
      end

      attribute 1650231 "TEMPERATURE_THROTTLING_BELOW_VR_MIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Get throttling temperature threshold above which minimum clockrates for VR mode will not be
met.
"
      end

      attribute 1650359 "UNDEFINED_TEMPERATURE"
	class_attribute const_attribute public explicit_type "float"
	init_value " -Float.MAX_VALUE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Undefined temperature constant. "
      end

      classrelation 1459127 // mContext (<unidirectional association>)
	relation 1459127 --->
	  a role_name "mContext" const_relation private
	    comment " Calling app context. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1459127 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      operation 3788855 "HardwarePropertiesManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "service" explicit_type "IHardwarePropertiesManager"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3788983 "getDeviceTemperatures"
	public explicit_return_type "float"
	nparams 2
	  param in name "type" explicit_type "int"
	  param in name "source" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}@DeviceTemperatureType ${t0} ${p0}, @TemperatureSource ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Return an array of device temperatures in Celsius.

@param type type of requested device temperature, one of {@link #DEVICE_TEMPERATURE_CPU},
{@link #DEVICE_TEMPERATURE_GPU}, {@link #DEVICE_TEMPERATURE_BATTERY} or {@link
#DEVICE_TEMPERATURE_SKIN}.
@param source source of requested device temperature, one of {@link #TEMPERATURE_CURRENT},
{@link #TEMPERATURE_THROTTLING}, {@link #TEMPERATURE_THROTTLING_BELOW_VR_MIN} or
{@link #TEMPERATURE_SHUTDOWN}.
@return an array of requested float device temperatures. Temperature equals to
        {@link #UNDEFINED_TEMPERATURE} if undefined.
        Empty if platform doesn't provide the queried temperature.

@throws SecurityException if something other than the profile or device owner, or the
       current VR service tries to retrieve information provided by this service."
      end

      operation 3789111 "getCpuUsages"
	public return_type class_ref 541623 // CpuUsageInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Return an array of CPU usage info for each core.

@return an array of {@link android.os.CpuUsageInfo} for each core. Return {@code null} for
        each unplugged core.
        Empty if CPU usage is not supported on this system.

@throws SecurityException if something other than the profile or device owner, or the
       current VR service tries to retrieve information provided by this service."
      end

      operation 3789239 "getFanSpeeds"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Return an array of fan speeds in RPM.

@return an array of float fan speeds in RPM. Empty if there are no fans or fan speed is not
supported on this system.

@throws SecurityException if something other than the profile or device owner, or the
       current VR service tries to retrieve information provided by this service."
      end
    end

    class 544055 "IServiceManager"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Basic interface for finding and publishing system services.

An implementation of this interface is usually published as the
global context object, which can be retrieved via
BinderNative.getContextObject().  An easy way to retrieve this
is with the static method BnServiceManager.getDefault().

@hide"
      classrelation 1459255 // <generalisation>
	relation 1459255 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1459255 // <generalisation>
	  b parent class_ref 277687 // IInterface
      end

      operation 3789367 "getService"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve an existing service called @a name from the
service manager.  Blocks for a few seconds waiting for it to be
published if it does not already exist."
      end

      operation 3789495 "checkService"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve an existing service called @a name from the
service manager.  Non-blocking."
      end

      operation 3789623 "addService"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 129591 // String
	  param inout name "service" type class_ref 132919 // IBinder
	  param inout name "allowIsolated" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Place a new @a service called @a name into the service
manager."
      end

      operation 3789751 "listServices"
	public return_type class_ref 129591 // String
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a list of all currently running services."
      end

      operation 3789879 "setPermissionController"
	public explicit_return_type "void"
	nparams 1
	  param inout name "controller" explicit_type "IPermissionController"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Assign a permission controller to the service manager.  After set, this
interface is checked before any services are added."
      end

      classrelation 1459383 // descriptor (<unidirectional association>)
	relation 1459383 --->
	  a role_name "descriptor" init_value " \"android.os.IServiceManager\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1459383 // descriptor (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1650487 "GET_SERVICE_TRANSACTION"
	public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1650615 "CHECK_SERVICE_TRANSACTION"
	public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION+1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1650743 "ADD_SERVICE_TRANSACTION"
	public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION+2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1650871 "LIST_SERVICES_TRANSACTION"
	public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION+3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1650999 "CHECK_SERVICES_TRANSACTION"
	public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION+4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1651127 "SET_PERMISSION_CONTROLLER_TRANSACTION"
	public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION+5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 544183 "MemoryFile"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "MemoryFile is a wrapper for the Linux ashmem driver.
MemoryFiles are backed by shared memory, which can be optionally
set to be purgeable.
Purgeable files may have their contents reclaimed by the kernel
in low memory conditions (only if allowPurging is set to true).
After a file is purged, attempts to read or write the file will
cause an IOException to be thrown."
      classrelation 1461431 // TAG (<unidirectional association>)
	relation 1461431 --->
	  a role_name "TAG" init_value " \"MemoryFile\"" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1461431 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1652407 "PROT_READ"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mmap(2) protection flags from <sys/mman.h>"
      end

      attribute 1652535 "PROT_WRITE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3796151 "native_open"
	class_operation private explicit_return_type "FileDescriptor"
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3796279 "native_mmap"
	class_operation private explicit_return_type "long"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "length" explicit_type "int"
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
	comment " returns memory address for ashmem region"
      end

      operation 3796407 "native_munmap"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "addr" explicit_type "long"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3796535 "native_close"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3796663 "native_read"
	class_operation private explicit_return_type "int"
	nparams 7
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "address" explicit_type "long"
	  param inout name "buffer" explicit_type "byte"
	  param in name "srcOffset" explicit_type "int"
	  param in name "destOffset" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param inout name "isUnpinned" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws};
"
	
	
	
      end

      operation 3796791 "native_write"
	class_operation private explicit_return_type "void"
	nparams 7
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "address" explicit_type "long"
	  param inout name "buffer" explicit_type "byte"
	  param in name "srcOffset" explicit_type "int"
	  param in name "destOffset" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param inout name "isUnpinned" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws};
"
	
	
	
      end

      operation 3796919 "native_pin"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "pin" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3797047 "native_get_size"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      attribute 1652663 "mFD"
	private explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ashmem file descriptor"
      end

      attribute 1652791 "mAddress"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " address of ashmem memory"
      end

      attribute 1652919 "mLength"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " total length of our ashmem region"
      end

      attribute 1653047 "mAllowPurging"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if our ashmem region is unpinned"
      end

      operation 3797175 "MemoryFile"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allocates a new ashmem region. The region is initially not purgable.

@param name optional name for the file (can be null).
@param length of the memory file in bytes, must be non-negative.
@throws IOException if the memory file could not be created."
      end

      operation 3797303 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the memory file. If there are no other open references to the memory
file, it will be deleted."
      end

      operation 3797431 "deactivate"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unmaps the memory file from the process's memory space, but does not close it.
After this method has been called, read and write operations through this object
will fail, but {@link #getFileDescriptor()} will still return a valid file descriptor.

@hide"
      end

      operation 3797559 "isDeactivated"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the memory file has been deactivated."
      end

      operation 3797687 "isClosed"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the memory file has been closed."
      end

      operation 3797815 "finalize"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3797943 "length"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the memory file.

@return file length."
      end

      operation 3798071 "isPurgingAllowed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is memory file purging enabled?

@return true if the file may be purged."
      end

      operation 3798199 "allowPurging"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "allowPurging" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables or disables purging of the memory file.

@param allowPurging true if the operating system can purge the contents
of the file in low memory situations
@return previous value of allowPurging"
      end

      operation 3798327 "getInputStream"
	public explicit_return_type "InputStream"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new InputStream for reading from the memory file.

@return InputStream"
      end

      operation 3798455 "getOutputStream"
	public explicit_return_type "OutputStream"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new OutputStream for writing to the memory file.

@return OutputStream"
      end

      operation 3798583 "readBytes"
	public explicit_return_type "int"
	nparams 4
	  param inout name "buffer" explicit_type "byte"
	  param in name "srcOffset" explicit_type "int"
	  param in name "destOffset" explicit_type "int"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads bytes from the memory file.
Will throw an IOException if the file has been purged.

@param buffer byte array to read bytes into.
@param srcOffset offset into the memory file to read from.
@param destOffset offset into the byte array buffer to read into.
@param count number of bytes to read.
@return number of bytes read.
@throws IOException if the memory file has been purged or deactivated."
      end

      operation 3798711 "writeBytes"
	public explicit_return_type "void"
	nparams 4
	  param inout name "buffer" explicit_type "byte"
	  param in name "srcOffset" explicit_type "int"
	  param in name "destOffset" explicit_type "int"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write bytes to the memory file.
Will throw an IOException if the file has been purged.

@param buffer byte array to write bytes from.
@param srcOffset offset into the byte array buffer to write from.
@param destOffset offset  into the memory file to write to.
@param count number of bytes to write.
@throws IOException if the memory file has been purged or deactivated."
      end

      operation 3798839 "getFileDescriptor"
	public explicit_return_type "FileDescriptor"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a FileDescriptor for the memory file.

The returned file descriptor is not duplicated.

@throws IOException If the memory file has been closed.

@hide"
      end

      operation 3798967 "getSize"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the memory file that the file descriptor refers to,
or -1 if the file descriptor does not refer to a memory file.

@throws IOException If <code>fd</code> is not a valid file descriptor.

@hide"
      end

      class 544311 "MemoryInputStream"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1461559 // <generalisation>
	  relation 1461559 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1461559 // <generalisation>
	    b parent class_ref 189751 // InputStream
	end

	attribute 1653175 "mMark"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1653303 "mOffset"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1653431 "mSingleByte"
	  private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3799095 "available"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3799223 "markSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3799351 "mark"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "readlimit" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3799479 "reset"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3799607 "read"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3799735 "read"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "buffer" explicit_type "byte"
	    param in name "offset" explicit_type "int"
	    param in name "count" explicit_type "int"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3799863 "skip"
	  public explicit_return_type "long"
	  nparams 1
	    param in name "n" explicit_type "long"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 544439 "MemoryOutputStream"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1461687 // <generalisation>
	  relation 1461687 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1461687 // <generalisation>
	    b parent class_ref 417719 // OutputStream
	end

	attribute 1653559 "mOffset"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1653687 "mSingleByte"
	  private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3799991 "write"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "buffer" explicit_type "byte"
	    param in name "offset" explicit_type "int"
	    param in name "count" explicit_type "int"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3800119 "write"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "oneByte" explicit_type "int"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 544567 "NetworkOnMainThreadException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when an application attempts
to perform a networking operation on its main thread.

<p>This is only thrown for applications targeting the Honeycomb
SDK or higher.  Applications targeting earlier SDK versions
are allowed to do networking on their main event loop threads,
but it's heavily discouraged.  See the document
<a href=\"{@docRoot}guide/practices/design/responsiveness.html\">
Designing for Responsiveness</a>.

<p>Also see {@link StrictMode}."
      classrelation 1463223 // <generalisation>
	relation 1463223 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1463223 // <generalisation>
	  b parent class_ref 446775 // RuntimeException
      end
    end

    class 544695 "NullVibrator"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Vibrator implementation that does nothing.

@hide"
      classrelation 1463351 // <generalisation>
	relation 1463351 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1463351 // <generalisation>
	  b parent class_ref 495927 // Vibrator
      end

      classrelation 1463479 // sInstance (<unidirectional association>)
	relation 1463479 --->
	  a role_name "sInstance" init_value " new NullVibrator()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1463479 // sInstance (<unidirectional association>)
	  b parent class_ref 544695 // NullVibrator
      end

      operation 3805367 "NullVibrator"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3805495 "getInstance"
	class_operation public return_type class_ref 544695 // NullVibrator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3805623 "hasVibrator"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3805751 "vibrate"
	public explicit_return_type "void"
	nparams 4
	  param in name "uid" explicit_type "int"
	  param inout name "opPkg" type class_ref 129591 // String
	  param in name "milliseconds" explicit_type "long"
	  param inout name "attributes" type class_ref 385335 // AudioAttributes
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@hide"
      end

      operation 3805879 "vibrate"
	public explicit_return_type "void"
	nparams 5
	  param in name "uid" explicit_type "int"
	  param inout name "opPkg" type class_ref 129591 // String
	  param inout name "pattern" explicit_type "long"
	  param in name "repeat" explicit_type "int"
	  param inout name "attributes" type class_ref 385335 // AudioAttributes
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@hide"
      end

      operation 3806007 "cancel"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 544823 "OperationCanceledException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An exception type that is thrown when an operation in progress is canceled.

@see CancellationSignal"
      classrelation 1463607 // <generalisation>
	relation 1463607 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1463607 // <generalisation>
	  b parent class_ref 446775 // RuntimeException
      end

      operation 3806135 "OperationCanceledException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3806263 "OperationCanceledException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 544951 "ParcelFormatException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The contents of a Parcel (usually during unmarshalling) does not
contain the expected data."
      classrelation 1464759 // <generalisation>
	relation 1464759 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1464759 // <generalisation>
	  b parent class_ref 446775 // RuntimeException
      end

      operation 3832247 "ParcelFormatException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3832375 "ParcelFormatException"
	public explicit_return_type ""
	nparams 1
	  param inout name "reason" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 545591 "PowerManagerInternal"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Power manager local system service interface.

@hide Only for use within the system server."
      attribute 1666743 "WAKEFULNESS_ASLEEP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wakefulness: The device is asleep.  It can only be awoken by a call to wakeUp().
The screen should be off or in the process of being turned off by the display controller.
The device typically passes through the dozing state first.
"
      end

      attribute 1666871 "WAKEFULNESS_AWAKE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wakefulness: The device is fully awake.  It can be put to sleep by a call to goToSleep().
When the user activity timeout expires, the device may start dreaming or go to sleep.
"
      end

      attribute 1666999 "WAKEFULNESS_DREAMING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wakefulness: The device is dreaming.  It can be awoken by a call to wakeUp(),
which ends the dream.  The device goes to sleep when goToSleep() is called, when
the dream ends or when unplugged.
User activity may brighten the screen but does not end the dream.
"
      end

      attribute 1667127 "WAKEFULNESS_DOZING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Wakefulness: The device is dozing.  It is almost asleep but is allowing a special
low-power \"doze\" dream to run which keeps the display on but lets the application
processor be suspended.  It can be awoken by a call to wakeUp() which ends the dream.
The device fully goes to sleep if the dream cannot be started or ends on its own.
"
      end

      attribute 1667255 "POWER_HINT_INTERACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Power hint:
Interaction: The user is interacting with the device. The corresponding data field must be
the expected duration of the fling, or 0 if unknown.

Sustained Performance Mode: Enable/Disables Sustained Performance Mode.

These must be kept in sync with the values in hardware/libhardware/include/hardware/power.h
"
      end

      attribute 1667383 "POWER_HINT_SUSTAINED_PERFORMANCE_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3850295 "wakefulnessToString"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "wakefulness" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3850423 "isInteractive"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "wakefulness" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the wakefulness state represents an interactive state
as defined by {@link android.os.PowerManager#isInteractive}."
      end

      operation 3850551 "setScreenBrightnessOverrideFromWindowManager"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "brightness" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by the window manager to override the screen brightness based on the
current foreground activity.

This method must only be called by the window manager.

@param brightness The overridden brightness, or -1 to disable the override."
      end

      operation 3850679 "setButtonBrightnessOverrideFromWindowManager"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "brightness" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by the window manager to override the button brightness based on the
current foreground activity.

This method must only be called by the window manager.

@param brightness The overridden brightness, or -1 to disable the override."
      end

      operation 3850807 "setUserActivityTimeoutOverrideFromWindowManager"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "timeoutMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by the window manager to override the user activity timeout based on the
current foreground activity.  It can only be used to make the timeout shorter
than usual, not longer.

This method must only be called by the window manager.

@param timeoutMillis The overridden timeout, or -1 to disable the override."
      end

      operation 3850935 "setUserInactiveOverrideFromWindowManager"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by the window manager to tell the power manager that the user is no longer actively
using the device."
      end

      operation 3851063 "setMaximumScreenOffTimeoutFromDeviceAdmin"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "timeMs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by device administration to set the maximum screen off timeout.

This method must only be called by the device administration policy manager."
      end

      operation 3851191 "setDozeOverrideFromDreamManager"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "screenState" explicit_type "int"
	  param in name "screenBrightness" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used by the dream manager to override certain properties while dozing.

@param screenState The overridden screen state, or {@link Display#STATE_UNKNOWN}
to disable the override.
@param screenBrightness The overridden screen brightness, or
{@link PowerManager#BRIGHTNESS_DEFAULT} to disable the override."
      end

      operation 3851319 "getLowPowerModeEnabled"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3851447 "registerLowPowerModeObserver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 545719 // LowPowerModeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 545719 "LowPowerModeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3851575 "onLowPowerModeChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "enabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 3851703 "setDeviceIdleMode"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3851831 "setLightDeviceIdleMode"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3851959 "setDeviceIdleWhitelist"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "appids" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3852087 "setDeviceIdleTempWhitelist"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "appids" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3852215 "updateUidProcState"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "uid" explicit_type "int"
	  param in name "procState" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3852343 "uidGone"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3852471 "powerHint"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "hintId" explicit_type "int"
	  param in name "data" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 545847 "ZygoteStartFailedEx"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "package"
      classrelation 1469751 // <generalisation>
	relation 1469751 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1469751 // <generalisation>
	  b parent class_ref 190647 // Exception
      end

      operation 3852599 "ZygoteStartFailedEx"
	package explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3852727 "ZygoteStartFailedEx"
	package explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3852855 "ZygoteStartFailedEx"
	package explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 129591 // String
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 545975 "Process"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Tools for managing OS processes."
      classrelation 1469879 // LOG_TAG (<unidirectional association>)
	relation 1469879 --->
	  a role_name "LOG_TAG" init_value " \"Process\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1469879 // LOG_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1470007 // ZYGOTE_SOCKET (<unidirectional association>)
	relation 1470007 --->
	  a role_name "ZYGOTE_SOCKET" init_value " \"zygote\"" class_relation const_relation public
	    comment "
@hide for internal use only.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1470007 // ZYGOTE_SOCKET (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1470135 // SECONDARY_ZYGOTE_SOCKET (<unidirectional association>)
	relation 1470135 --->
	  a role_name "SECONDARY_ZYGOTE_SOCKET" init_value " \"zygote_secondary\"" class_relation const_relation public
	    comment "
@hide for internal use only.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1470135 // SECONDARY_ZYGOTE_SOCKET (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1667511 "ROOT_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the root UID.
@hide
"
      end

      attribute 1667639 "SYSTEM_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID under which system code runs.
"
      end

      attribute 1667767 "PHONE_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID under which the telephony code runs.
"
      end

      attribute 1667895 "SHELL_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID for the user shell.
@hide
"
      end

      attribute 1668023 "LOG_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1007"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID for the log group.
@hide
"
      end

      attribute 1668151 "WIFI_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID for the WIFI supplicant process.
@hide
"
      end

      attribute 1668279 "MEDIA_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1013"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID for the mediaserver process.
@hide
"
      end

      attribute 1668407 "DRM_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1019"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID for the DRM process.
@hide
"
      end

      attribute 1668535 "VPN_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1016"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID for the group that controls VPN services.
@hide
"
      end

      attribute 1668663 "NFC_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1027"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID for the NFC service process.
@hide
"
      end

      attribute 1668791 "BLUETOOTH_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID for the Bluetooth service process.
@hide
"
      end

      attribute 1668919 "MEDIA_RW_GID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1023"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the GID for the group that allows write access to the internal media storage.
@hide
"
      end

      attribute 1669047 "PACKAGE_INFO_GID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1032"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Access to installed package details
@hide
"
      end

      attribute 1669175 "SHARED_RELRO_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1037"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID for the shared RELRO file updater process.
@hide
"
      end

      attribute 1669303 "AUDIOSERVER_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1041"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID for the audioserver process.
@hide
"
      end

      attribute 1669431 "CAMERASERVER_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1047"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the UID/GID for the cameraserver process
@hide
"
      end

      attribute 1669559 "FIRST_APPLICATION_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the start of a range of UIDs (and GIDs), going from this
number to {@link #LAST_APPLICATION_UID} that are reserved for assigning
to applications.
"
      end

      attribute 1669687 "LAST_APPLICATION_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 19999"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Last of application-specific UIDs starting at
{@link #FIRST_APPLICATION_UID}.
"
      end

      attribute 1669815 "FIRST_ISOLATED_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 99000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "First uid used for fully isolated sandboxed processes (with no permissions of their own)
@hide
"
      end

      attribute 1669943 "LAST_ISOLATED_UID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 99999"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Last uid used for fully isolated sandboxed processes (with no permissions of their own)
@hide
"
      end

      attribute 1670071 "SHARED_USER_GID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9997"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the gid shared by all applications running under the same profile.
@hide
"
      end

      attribute 1670199 "FIRST_SHARED_APPLICATION_GID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 50000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "First gid for applications to share resources. Used when forward-locking
is enabled but all UserHandles need to be able to read the resources.
@hide
"
      end

      attribute 1670327 "LAST_SHARED_APPLICATION_GID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 59999"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Last gid for applications to share resources. Used when forward-locking
is enabled but all UserHandles need to be able to read the resources.
@hide
"
      end

      attribute 1670455 "THREAD_PRIORITY_DEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Standard priority of application threads.
Use with {@link #setThreadPriority(int)} and
{@link #setThreadPriority(int, int)}, <b>not</b> with the normal
{@link java.lang.Thread} class.
"
      end

      attribute 1670583 "THREAD_PRIORITY_LOWEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 19"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "***************************************
** Keep in sync with utils/threads.h **
***************************************


Lowest available thread priority.  Only for those who really, really
don't want to run if anything else is happening.
Use with {@link #setThreadPriority(int)} and
{@link #setThreadPriority(int, int)}, <b>not</b> with the normal
{@link java.lang.Thread} class.
"
      end

      attribute 1670711 "THREAD_PRIORITY_BACKGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Standard priority background threads.  This gives your thread a slightly
lower than normal priority, so that it will have less chance of impacting
the responsiveness of the user interface.
Use with {@link #setThreadPriority(int)} and
{@link #setThreadPriority(int, int)}, <b>not</b> with the normal
{@link java.lang.Thread} class.
"
      end

      attribute 1670839 "THREAD_PRIORITY_FOREGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Standard priority of threads that are currently running a user interface
that the user is interacting with.  Applications can not normally
change to this priority; the system will automatically adjust your
application threads as the user moves through the UI.
Use with {@link #setThreadPriority(int)} and
{@link #setThreadPriority(int, int)}, <b>not</b> with the normal
{@link java.lang.Thread} class.
"
      end

      attribute 1670967 "THREAD_PRIORITY_DISPLAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Standard priority of system display threads, involved in updating
the user interface.  Applications can not
normally change to this priority.
Use with {@link #setThreadPriority(int)} and
{@link #setThreadPriority(int, int)}, <b>not</b> with the normal
{@link java.lang.Thread} class.
"
      end

      attribute 1671095 "THREAD_PRIORITY_URGENT_DISPLAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Standard priority of the most important display threads, for compositing
the screen and retrieving input events.  Applications can not normally
change to this priority.
Use with {@link #setThreadPriority(int)} and
{@link #setThreadPriority(int, int)}, <b>not</b> with the normal
{@link java.lang.Thread} class.
"
      end

      attribute 1671223 "THREAD_PRIORITY_AUDIO"
	class_attribute const_attribute public explicit_type "int"
	init_value " -16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Standard priority of audio threads.  Applications can not normally
change to this priority.
Use with {@link #setThreadPriority(int)} and
{@link #setThreadPriority(int, int)}, <b>not</b> with the normal
{@link java.lang.Thread} class.
"
      end

      attribute 1671351 "THREAD_PRIORITY_URGENT_AUDIO"
	class_attribute const_attribute public explicit_type "int"
	init_value " -19"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Standard priority of the most important audio threads.
Applications can not normally change to this priority.
Use with {@link #setThreadPriority(int)} and
{@link #setThreadPriority(int, int)}, <b>not</b> with the normal
{@link java.lang.Thread} class.
"
      end

      attribute 1671479 "THREAD_PRIORITY_MORE_FAVORABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Minimum increment to make a priority more favorable.
"
      end

      attribute 1671607 "THREAD_PRIORITY_LESS_FAVORABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " +1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Minimum increment to make a priority less favorable.
"
      end

      attribute 1671735 "SCHED_OTHER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Default scheduling policy
@hide
"
      end

      attribute 1671863 "SCHED_FIFO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "First-In First-Out scheduling policy
@hide
"
      end

      attribute 1671991 "SCHED_RR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Round-Robin scheduling policy
@hide
"
      end

      attribute 1672119 "SCHED_BATCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Batch scheduling policy
@hide
"
      end

      attribute 1672247 "SCHED_IDLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Idle scheduling policy
@hide
"
      end

      attribute 1672375 "THREAD_GROUP_DEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Keep in sync with SP_* constants of enum type SchedPolicy
 declared in system/core/include/cutils/sched_policy.h,
 except THREAD_GROUP_DEFAULT does not correspond to any SP_* value.

Default thread group -
has meaning with setProcessGroup() only, cannot be used with setThreadGroup().
When used with setProcessGroup(), the group of each thread in the process
is conditionally changed based on that thread's current priority, as follows:
threads with priority numerically less than THREAD_PRIORITY_BACKGROUND
are moved to foreground thread group.  All other threads are left unchanged.
@hide
"
      end

      attribute 1672503 "THREAD_GROUP_BG_NONINTERACTIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Background thread group - All threads in
this group are scheduled with a reduced share of the CPU.
Value is same as constant SP_BACKGROUND of enum SchedPolicy.
FIXME rename to THREAD_GROUP_BACKGROUND.
@hide
"
      end

      attribute 1672631 "THREAD_GROUP_FOREGROUND"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Foreground thread group - All threads in
this group are scheduled with a normal share of the CPU.
Value is same as constant SP_FOREGROUND of enum SchedPolicy.
Not used at this level.
@hide
"
      end

      attribute 1672759 "THREAD_GROUP_SYSTEM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "System thread group.
@hide
"
      end

      attribute 1672887 "THREAD_GROUP_AUDIO_APP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Application audio thread group.
@hide
"
      end

      attribute 1673015 "THREAD_GROUP_AUDIO_SYS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "System audio thread group.
@hide
"
      end

      attribute 1673143 "THREAD_GROUP_TOP_APP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Thread group for top foreground app.
@hide
"
      end

      attribute 1673271 "SIGNAL_QUIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1673399 "SIGNAL_KILL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1673527 "SIGNAL_USR1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1673655 "sStartElapsedRealtime"
	class_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1673783 "sStartUptimeMillis"
	class_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 546103 "ZygoteState"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1470263 // socket (<unidirectional association>)
	  relation 1470263 --->
	    a role_name "socket" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1470263 // socket (<unidirectional association>)
	    b parent class_ref 418487 // LocalSocket
	end

	attribute 1673911 "inputStream"
	  const_attribute package explicit_type "DataInputStream"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1674039 "writer"
	  const_attribute package explicit_type "BufferedWriter"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1470391 // abiList (<unidirectional association>)
	  relation 1470391 --->
	    stereotype "List"
	    a role_name "abiList" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 1470391 // abiList (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1674167 "mClosed"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3852983 "ZygoteState"
	  private explicit_return_type ""
	  nparams 4
	    param inout name "socket" type class_ref 418487 // LocalSocket
	    param inout name "inputStream" explicit_type "DataInputStream"
	    param inout name "writer" explicit_type "BufferedWriter"
	    param inout name "abiList" explicit_type "List<String>"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3853111 "connect"
	  class_operation public return_type class_ref 546103 // ZygoteState
	  nparams 1
	    param inout name "socketAddress" type class_ref 129591 // String
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3853239 "matches"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "abi" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3853367 "close"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3853495 "isClosed"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1470519 // primaryZygoteState (<unidirectional association>)
	relation 1470519 --->
	  a role_name "primaryZygoteState" class_relation package
	    comment "
The state of the connection to the primary zygote.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1470519 // primaryZygoteState (<unidirectional association>)
	  b parent class_ref 546103 // ZygoteState
      end

      classrelation 1470647 // secondaryZygoteState (<unidirectional association>)
	relation 1470647 --->
	  a role_name "secondaryZygoteState" class_relation package
	    comment "
The state of the connection to the secondary zygote.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1470647 // secondaryZygoteState (<unidirectional association>)
	  b parent class_ref 546103 // ZygoteState
      end

      class 546231 "ProcessStartResult"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1675831 "pid"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The PID of the newly started process.
Always >= 0.  (If the start failed, an exception will have been thrown instead.)
"
	end

	attribute 1675959 "usingWrapper"
	  public explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "True if the process was started with a wrapper attached.
"
	end
      end

      operation 3853623 "start"
	class_operation public return_type class_ref 546231 // ProcessStartResult
	nparams 13
	  param in name "processClass" type class_ref 129591 // String
	  param in name "niceName" type class_ref 129591 // String
	  param in name "uid" explicit_type "int"
	  param in name "gid" explicit_type "int"
	  param inout name "gids" explicit_type "int"
	  param in name "debugFlags" explicit_type "int"
	  param in name "mountExternal" explicit_type "int"
	  param in name "targetSdkVersion" explicit_type "int"
	  param inout name "seInfo" type class_ref 129591 // String
	  param inout name "abi" type class_ref 129591 // String
	  param inout name "instructionSet" type class_ref 129591 // String
	  param inout name "appDataDir" type class_ref 129591 // String
	  param inout name "zygoteArgs" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12}[] ${p12}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start a new process.

<p>If processes are enabled, a new process is created and the
static main() function of a <var>processClass</var> is executed there.
The process will continue running after this function returns.

<p>If processes are not enabled, a new thread in the caller's
process is created and main() of <var>processClass</var> called there.

<p>The niceName parameter, if not an empty string, is a custom name to
give to the process instead of using processClass.  This allows you to
make easily identifyable processes even if you are using the same base
<var>processClass</var> to start them.

@param processClass The class to use as the process's main entry
                    point.
@param niceName A more readable name to use for the process.
@param uid The user-id under which the process will run.
@param gid The group-id under which the process will run.
@param gids Additional group-ids associated with the process.
@param debugFlags Additional flags.
@param targetSdkVersion The target SDK version for the app.
@param seInfo null-ok SELinux information for the new process.
@param abi non-null the ABI this app should be started with.
@param instructionSet null-ok the instruction set to use.
@param appDataDir null-ok the data directory of the app.
@param zygoteArgs Additional arguments to supply to the zygote process.

@return An object that describes the result of the attempt to start the process.
@throws RuntimeException on fatal start failure

{@hide}"
      end

      attribute 1674295 "ZYGOTE_RETRY_MILLIS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 500"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " retry interval for opening a zygote socket "
      end

      operation 3853751 "getAbiList"
	class_operation private return_type class_ref 129591 // String
	nparams 2
	  param inout name "writer" explicit_type "BufferedWriter"
	  param inout name "inputStream" explicit_type "DataInputStream"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries the zygote for the list of ABIS it supports.

@throws ZygoteStartFailedEx if the query failed."
      end

      operation 3853879 "zygoteSendArgsAndGetResult"
	class_operation private return_type class_ref 546231 // ProcessStartResult
	nparams 2
	  param inout name "zygoteState" type class_ref 546103 // ZygoteState
	  param inout name "args" explicit_type "ArrayList<String>"
	nexceptions 1
	  exception class_ref 545847 // ZygoteStartFailedEx
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an argument list to the zygote process, which starts a new child
and returns the child's pid. Please note: the present implementation
replaces newlines in the argument list with spaces.

@throws ZygoteStartFailedEx if process start failed for any reason"
      end

      operation 3854007 "startViaZygote"
	class_operation private return_type class_ref 546231 // ProcessStartResult
	nparams 13
	  param in name "processClass" type class_ref 129591 // String
	  param in name "niceName" type class_ref 129591 // String
	  param in name "uid" explicit_type "int"
	  param in name "gid" explicit_type "int"
	  param in name "gids" explicit_type "int"
	  param in name "debugFlags" explicit_type "int"
	  param in name "mountExternal" explicit_type "int"
	  param in name "targetSdkVersion" explicit_type "int"
	  param inout name "seInfo" type class_ref 129591 // String
	  param inout name "abi" type class_ref 129591 // String
	  param inout name "instructionSet" type class_ref 129591 // String
	  param inout name "appDataDir" type class_ref 129591 // String
	  param inout name "extraArgs" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 545847 // ZygoteStartFailedEx
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12}[] ${p12}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts a new process via the zygote mechanism.

@param processClass Class name whose static main() to run
@param niceName 'nice' process name to appear in ps
@param uid a POSIX uid that the new process should setuid() to
@param gid a POSIX gid that the new process shuold setgid() to
@param gids null-ok; a list of supplementary group IDs that the
new process should setgroup() to.
@param debugFlags Additional flags.
@param targetSdkVersion The target SDK version for the app.
@param seInfo null-ok SELinux information for the new process.
@param abi the ABI the process should use.
@param instructionSet null-ok the instruction set to use.
@param appDataDir null-ok the data directory of the app.
@param extraArgs Additional arguments to supply to the zygote process.
@return An object that describes the result of the attempt to start the process.
@throws ZygoteStartFailedEx if process start failed for any reason"
      end

      operation 3854135 "establishZygoteConnectionForAbi"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "abi" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to establish a connection to the zygote that handles a given {@code abi}. Might block and retry if the
zygote is unresponsive. This method is a no-op if a connection is already open.

@hide"
      end

      operation 3854263 "openZygoteSocketIfNeeded"
	class_operation private return_type class_ref 546103 // ZygoteState
	nparams 1
	  param inout name "abi" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 545847 // ZygoteStartFailedEx
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tries to open socket to Zygote process if not already open. If
already open, does nothing.  May block and retry."
      end

      operation 3854391 "getElapsedCpuTime"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns elapsed milliseconds of the time this process has run.
@return  Returns the number of milliseconds this process has return."
      end

      operation 3854519 "getStartElapsedRealtime"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@link SystemClock#elapsedRealtime()} at which this process was started."
      end

      operation 3854647 "getStartUptimeMillis"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@link SystemClock#uptimeMillis()} at which this process was started."
      end

      operation 3854775 "setStartTimes"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "elapsedRealtime" explicit_type "long"
	  param in name "uptimeMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3854903 "is64Bit"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the current process is a 64-bit runtime."
      end

      operation 3855031 "myPid"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the identifier of this process, which can be used with
{@link #killProcess} and {@link #sendSignal}."
      end

      operation 3855159 "myPpid"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the identifier of this process' parent.
@hide"
      end

      operation 3855287 "myTid"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the identifier of the calling thread, which be used with
{@link #setThreadPriority(int, int)}."
      end

      operation 3855415 "myUid"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the identifier of this process's uid.  This is the kernel uid
that the process is running under, which is the identity of its
app-specific sandbox.  It is different from {@link #myUserHandle} in that
a uid identifies a specific app sandbox in a specific user."
      end

      operation 3855543 "myUserHandle"
	class_operation public return_type class_ref 131383 // UserHandle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this process's user handle.  This is the
user the process is running under.  It is distinct from
{@link #myUid()} in that a particular user will have multiple
distinct apps running under it each with their own uid."
      end

      operation 3855671 "isApplicationUid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given uid belongs to an application.
@param uid A kernel uid.
@return Whether the uid corresponds to an application sandbox running in
    a specific user."
      end

      operation 3855799 "isIsolated"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the current process is in an isolated sandbox.
@hide"
      end

      operation 3855927 "isIsolated"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3856055 "getUidForName"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the UID assigned to a particular user name, or -1 if there is
none.  If the given string consists of only numbers, it is converted
directly to a uid."
      end

      operation 3856183 "getGidForName"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the GID assigned to a particular user name, or -1 if there is
none.  If the given string consists of only numbers, it is converted
directly to a gid."
      end

      operation 3856311 "getUidForPid"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "pid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a uid for a currently running process.
@param pid the process id
@return the uid of the process, or -1 if the process is not running.
@hide pending API council review"
      end

      operation 3856439 "getParentPid"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "pid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parent process id for a currently running process.
@param pid the process id
@return the parent process id of the process, or -1 if the process is not running.
@hide"
      end

      operation 3856567 "getThreadGroupLeader"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "tid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the thread group leader id for a currently running thread.
@param tid the thread id
@return the thread group leader id of the thread, or -1 if the thread is not running.
        This is same as what getpid(2) would return if called by tid.
@hide"
      end

      operation 3856695 "setThreadPriority"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "tid" explicit_type "int"
	  param in name "priority" explicit_type "int"
	nexceptions 2
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "SecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Set the priority of a thread, based on Linux priorities.

@param tid The identifier of the thread/process to change.
@param priority A Linux priority level, from -20 for highest scheduling
priority to 19 for lowest scheduling priority.

@throws IllegalArgumentException Throws IllegalArgumentException if
<var>tid</var> does not exist.
@throws SecurityException Throws SecurityException if your process does
not have permission to modify the given thread, or to use the given
priority."
      end

      operation 3856823 "setCanSelfBackground"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "backgroundOk" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Call with 'false' to cause future calls to {@link #setThreadPriority(int)} to
throw an exception if passed a background-level thread priority.  This is only
effective if the JNI layer is built with GUARD_THREAD_PRIORITY defined to 1.

@hide"
      end

      operation 3856951 "setThreadGroup"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "tid" explicit_type "int"
	  param in name "group" explicit_type "int"
	nexceptions 2
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "SecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Sets the scheduling group for a thread.
@hide
@param tid The identifier of the thread to change.
@param group The target group for this thread from THREAD_GROUP_*.

@throws IllegalArgumentException Throws IllegalArgumentException if
<var>tid</var> does not exist.
@throws SecurityException Throws SecurityException if your process does
not have permission to modify the given thread, or to use the given
priority.
If the thread is a thread group leader, that is it's gettid() == getpid(),
then the other threads in the same thread group are _not_ affected."
      end

      operation 3857079 "setProcessGroup"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "pid" explicit_type "int"
	  param in name "group" explicit_type "int"
	nexceptions 2
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "SecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Sets the scheduling group for a process and all child threads
@hide
@param pid The identifier of the process to change.
@param group The target group for this process from THREAD_GROUP_*.

@throws IllegalArgumentException Throws IllegalArgumentException if
<var>tid</var> does not exist.
@throws SecurityException Throws SecurityException if your process does
not have permission to modify the given thread, or to use the given
priority.

group == THREAD_GROUP_DEFAULT means to move all non-background priority
threads to the foreground scheduling group, but to leave background
priority threads alone.  group == THREAD_GROUP_BG_NONINTERACTIVE moves all
threads, regardless of priority, to the background scheduling group.
group == THREAD_GROUP_FOREGROUND is not allowed."
      end

      operation 3857207 "getProcessGroup"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "pid" explicit_type "int"
	nexceptions 2
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "SecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Return the scheduling group of requested process.

@hide"
      end

      operation 3857335 "getExclusiveCores"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
"
	
	
	
	comment "On some devices, the foreground process may have one or more CPU
cores exclusively reserved for it. This method can be used to
retrieve which cores that are (if any), so the calling process
can then use sched_setaffinity() to lock a thread to these cores.
Note that the calling process must currently be running in the
foreground for this method to return any cores.

The CPU core(s) exclusively reserved for the foreground process will
stay reserved for as long as the process stays in the foreground.

As soon as a process leaves the foreground, those CPU cores will
no longer be reserved for it, and will most likely be reserved for
the new foreground process. It's not necessary to change the affinity
of your process when it leaves the foreground (if you had previously
set it to use a reserved core); the OS will automatically take care
of resetting the affinity at that point.

@return an array of integers, indicating the CPU cores exclusively
reserved for this process. The array will have length zero if no
CPU cores are exclusively reserved for this process at this point
in time."
      end

      operation 3857463 "setThreadPriority"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "priority" explicit_type "int"
	nexceptions 2
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "SecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Set the priority of the calling thread, based on Linux priorities.  See
{@link #setThreadPriority(int, int)} for more information.

@param priority A Linux priority level, from -20 for highest scheduling
priority to 19 for lowest scheduling priority.

@throws IllegalArgumentException Throws IllegalArgumentException if
<var>tid</var> does not exist.
@throws SecurityException Throws SecurityException if your process does
not have permission to modify the given thread, or to use the given
priority.

@see #setThreadPriority(int, int)"
      end

      operation 3857591 "getThreadPriority"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "tid" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalArgumentException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Return the current priority of a thread, based on Linux priorities.

@param tid The identifier of the thread/process to change.

@return Returns the current priority, as a Linux priority level,
from -20 for highest scheduling priority to 19 for lowest scheduling
priority.

@throws IllegalArgumentException Throws IllegalArgumentException if
<var>tid</var> does not exist."
      end

      operation 3857719 "setThreadScheduler"
	class_operation public explicit_return_type "void"
	nparams 3
	  param in name "tid" explicit_type "int"
	  param in name "policy" explicit_type "int"
	  param in name "priority" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalArgumentException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
	comment "Set the scheduling policy and priority of a thread, based on Linux.

@param tid The identifier of the thread/process to change.
@param policy A Linux scheduling policy such as SCHED_OTHER etc.
@param priority A Linux priority level in a range appropriate for the given policy.

@throws IllegalArgumentException Throws IllegalArgumentException if
<var>tid</var> does not exist, or if <var>priority</var> is out of range for the policy.
@throws SecurityException Throws SecurityException if your process does
not have permission to modify the given thread, or to use the given
scheduling policy or priority.

{@hide}"
      end

      operation 3857847 "supportsProcesses"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Determine whether the current environment supports multiple processes.

@return Returns true if the system can run in multiple processes, else
false if everything is running in a single process.

@deprecated This method always returns true.  Do not use."
      end

      operation 3857975 "setSwappiness"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param in name "pid" explicit_type "int"
	  param inout name "is_increased" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Adjust the swappiness level for a process.

@param pid The process identifier to set.
@param is_increased Whether swappiness should be increased or default.

@return Returns true if the underlying system supports this
        feature, else false.

{@hide}"
      end

      operation 3858103 "setArgV0"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Change this process's argv[0] parameter.  This can be useful to show
more descriptive information in things like the 'ps' command.

@param text The new name of this process.

{@hide}"
      end

      operation 3858231 "killProcess"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "pid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Kill the process with the given PID.
Note that, though this API allows us to request to
kill any process based on its PID, the kernel will
still impose standard restrictions on which PIDs you
are actually able to kill.  Typically this means only
the process running the caller's packages/application
and any additional processes created by that app; packages
sharing a common UID will also be able to kill each
other's processes."
      end

      operation 3858359 "setUid"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment " @hide "
      end

      operation 3858487 "setGid"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment " @hide "
      end

      operation 3858615 "sendSignal"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "pid" explicit_type "int"
	  param in name "signal" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Send a signal to the given process.

@param pid The pid of the target process.
@param signal The signal to send."
      end

      operation 3858743 "killProcessQuiet"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "pid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Private impl for avoiding a log message...  DO NOT USE without doing
your own log, or the Android Illuminati will find you some night and
beat you up."
      end

      operation 3858871 "sendSignalQuiet"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "pid" explicit_type "int"
	  param in name "signal" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "@hide
Private impl for avoiding a log message...  DO NOT USE without doing
your own log, or the Android Illuminati will find you some night and
beat you up."
      end

      operation 3858999 "getFreeMemory"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment " @hide "
      end

      operation 3859127 "getTotalMemory"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment " @hide "
      end

      operation 3859255 "readProcLines"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "path" type class_ref 129591 // String
	  param inout name "reqFields" type class_ref 129591 // String
	  param inout name "outSizes" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws};
"
	
	
	
	comment " @hide "
      end

      operation 3859383 "getPids"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "path" type class_ref 129591 // String
	  param inout name "lastArray" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws};
"
	
	
	
	comment " @hide "
      end

      attribute 1674423 "PROC_TERM_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xff"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1674551 "PROC_ZERO_TERM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1674679 "PROC_SPACE_TERM"
	class_attribute const_attribute public explicit_type "int"
	init_value " (int)' '"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1674807 "PROC_TAB_TERM"
	class_attribute const_attribute public explicit_type "int"
	init_value " (int)'\\t'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1674935 "PROC_COMBINE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1675063 "PROC_PARENS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1675191 "PROC_QUOTES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1675319 "PROC_CHAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1675447 "PROC_OUT_STRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1675575 "PROC_OUT_LONG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1675703 "PROC_OUT_FLOAT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      operation 3859511 "readProcFile"
	class_operation public explicit_return_type "boolean"
	nparams 5
	  param inout name "file" type class_ref 129591 // String
	  param inout name "format" explicit_type "int"
	  param inout name "outStrings" type class_ref 129591 // String
	  param inout name "outLongs" explicit_type "long"
	  param inout name "outFloats" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws};
"
	
	
	
	comment " @hide "
      end

      operation 3859639 "parseProcLine"
	class_operation public explicit_return_type "boolean"
	nparams 7
	  param inout name "buffer" explicit_type "byte"
	  param in name "startIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	  param inout name "format" explicit_type "int"
	  param inout name "outStrings" type class_ref 129591 // String
	  param inout name "outLongs" explicit_type "long"
	  param inout name "outFloats" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}, ${t5}[] ${p5}, ${t6}[] ${p6}${)}${throws};
"
	
	
	
	comment " @hide "
      end

      operation 3859767 "getPidsForCommands"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "cmds" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0}[] ${p0}${)}${throws};
"
	
	
	
	comment " @hide "
      end

      operation 3859895 "getPss"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "pid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Gets the total Pss value for a given process, in bytes.

@param pid the process to the Pss for
@return the total Pss value for the given process in bytes,
 or -1 if the value cannot be determined 
@hide"
      end

      operation 3860023 "killProcessGroup"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "uid" explicit_type "int"
	  param in name "pid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Kill all processes in a process group started for the given
pid.
@hide"
      end

      operation 3860151 "removeAllProcessGroups"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Remove all process groups.  Expected to be called when ActivityManager
is restarted.
@hide"
      end
    end

    class 546359 "RecoverySystem"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "RecoverySystem contains methods for interacting with the Android
recovery system (the separate partition that can be used to install
system updates, wipe user data, etc.)"
      classrelation 1470775 // TAG (<unidirectional association>)
	relation 1470775 --->
	  a role_name "TAG" init_value " \"RecoverySystem\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1470775 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1676087 "DEFAULT_KEYSTORE"
	class_attribute const_attribute private explicit_type "File"
	init_value "
        new File(\"/system/etc/security/otacerts.zip\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Default location of zip file containing public keys (X509
certs) authorized to sign OTA updates.
"
      end

      attribute 1676215 "PUBLISH_PROGRESS_INTERVAL_MS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 500"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Send progress to listeners no more often than this (in ms). "
      end

      attribute 1676343 "RECOVERY_DIR"
	class_attribute const_attribute private explicit_type "File"
	init_value " new File(\"/cache/recovery\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Used to communicate with recovery.  See bootable/recovery/recovery.cpp. "
      end

      attribute 1676471 "LOG_FILE"
	class_attribute const_attribute private explicit_type "File"
	init_value " new File(RECOVERY_DIR, \"log\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1676599 "LAST_INSTALL_FILE"
	class_attribute const_attribute private explicit_type "File"
	init_value " new File(RECOVERY_DIR, \"last_install\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1470903 // LAST_PREFIX (<unidirectional association>)
	relation 1470903 --->
	  a role_name "LAST_PREFIX" init_value " \"last_\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1470903 // LAST_PREFIX (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1676727 "BLOCK_MAP_FILE"
	class_attribute const_attribute public explicit_type "File"
	init_value " new File(RECOVERY_DIR, \"block.map\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The recovery image uses this file to identify the location (i.e. blocks)
of an OTA package on the /data partition. The block map file is
generated by uncrypt.

@hide
"
      end

      attribute 1676855 "UNCRYPT_PACKAGE_FILE"
	class_attribute const_attribute public explicit_type "File"
	init_value " new File(RECOVERY_DIR, \"uncrypt_file\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UNCRYPT_PACKAGE_FILE stores the filename to be uncrypt'd, which will be
read by uncrypt.

@hide
"
      end

      attribute 1676983 "LOG_FILE_MAX_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 64 * 1024"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Length limits for reading files."
      end

      classrelation 1471031 // sRequestLock (<unidirectional association>)
	relation 1471031 --->
	  a role_name "sRequestLock" init_value " new Object()" class_relation const_relation private
	    comment " Prevent concurrent execution of requests.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1471031 // sRequestLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      attribute 1677111 "mService"
	const_attribute private explicit_type "IRecoverySystem"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 546487 "ProgressListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3860279 "onProgress"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "progress" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called periodically as the verification progresses.

@param progress  the approximate percentage of the
       verification that has been completed, ranging from 0
       to 100 (inclusive)."
	end
      end

      operation 3860407 "getTrustedCerts"
	class_operation private explicit_return_type "HashSet<X509Certificate>"
	nparams 1
	  param inout name "keystore" explicit_type "File"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "GeneralSecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @return the set of certs that can be used to sign an OTA package. "
      end

      operation 3860535 "verifyPackage"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "packageFile" explicit_type "File"
	  param inout name "listener" type class_ref 546487 // ProgressListener
	  param inout name "deviceCertsZipFile" explicit_type "File"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "GeneralSecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verify the cryptographic signature of a system update package
before installing it.  Note that the package is also verified
separately by the installer once the device is rebooted into
the recovery system.  This function will return only if the
package was successfully verified; otherwise it will throw an
exception.

Verification of a package can take significant time, so this
function should not be called from a UI thread.  Interrupting
the thread while this function is in progress will result in a
SecurityException being thrown (and the thread's interrupt flag
will be cleared).

@param packageFile  the package to be verified
@param listener     an object to receive periodic progress
updates as verification proceeds.  May be null.
@param deviceCertsZipFile  the zip file of certificates whose
public keys we will accept.  Verification succeeds if the
package is signed by the private key corresponding to any
public key in this file.  May be null to use the system default
file (currently \"/system/etc/security/otacerts.zip\").

@throws IOException if there were any errors reading the
package or certs files.
@throws GeneralSecurityException if verification failed"
      end

      operation 3860663 "processPackage"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "packageFile" explicit_type "File"
	  param in name "listener" type class_ref 546487 // ProgressListener
	  param in name "handler" type class_ref 132023 // Handler
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Process a given package with uncrypt. No-op if the package is not on the
/data partition.

@param Context      the Context to use
@param packageFile  the package to be processed
@param listener     an object to receive periodic progress updates as
                    processing proceeds.  May be null.
@param handler      the Handler upon which the callbacks will be
                    executed.

@throws IOException if there were any errors processing the package file.

@hide"
      end

      operation 3860791 "processPackage"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "packageFile" explicit_type "File"
	  param in name "listener" type class_ref 546487 // ProgressListener
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Process a given package with uncrypt. No-op if the package is not on the
/data partition.

@param Context      the Context to use
@param packageFile  the package to be processed
@param listener     an object to receive periodic progress updates as
                    processing proceeds.  May be null.

@throws IOException if there were any errors processing the package file.

@hide"
      end

      operation 3860919 "installPackage"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "packageFile" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reboots the device in order to install the given update
package.
Requires the {@link android.Manifest.permission#REBOOT} permission.

@param context      the Context to use
@param packageFile  the update package to install.  Must be on
a partition mountable by recovery.  (The set of partitions
known to recovery may vary from device to device.  Generally,
/cache and /data are safe.)

@throws IOException  if writing the recovery command file
fails, or if the reboot itself fails."
      end

      operation 3861047 "installPackage"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "packageFile" explicit_type "File"
	  param inout name "processed" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "If the package hasn't been processed (i.e. uncrypt'd), set up
UNCRYPT_PACKAGE_FILE and delete BLOCK_MAP_FILE to trigger uncrypt during the
reboot.

@param context      the Context to use
@param packageFile  the update package to install.  Must be on a
partition mountable by recovery.
@param processed    if the package has been processed (uncrypt'd).

@throws IOException if writing the recovery command file fails, or if
the reboot itself fails.

@hide"
      end

      operation 3861175 "scheduleUpdateOnBoot"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "packageFile" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Schedule to install the given package on next boot. The caller needs to
ensure that the package must have been processed (uncrypt'd) if needed.
It sets up the command in BCB (bootloader control block), which will
be read by the bootloader and the recovery image.

@param Context      the Context to use.
@param packageFile  the package to be installed.

@throws IOException if there were any errors setting up the BCB.

@hide"
      end

      operation 3861303 "cancelScheduledUpdate"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Cancel any scheduled update by clearing up the BCB (bootloader control
block).

@param Context      the Context to use.

@throws IOException if there were any errors clearing up the BCB.

@hide"
      end

      operation 3861431 "rebootWipeUserData"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reboots the device and wipes the user data and cache
partitions.  This is sometimes called a \"factory reset\", which
is something of a misnomer because the system partition is not
restored to its factory state.  Requires the
{@link android.Manifest.permission#REBOOT} permission.

@param context  the Context to use

@throws IOException  if writing the recovery command file
fails, or if the reboot itself fails.
@throws SecurityException if the current user is not allowed to wipe data."
      end

      operation 3861559 "rebootWipeUserData"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "reason" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3861687 "rebootWipeUserData"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "shutdown" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3861815 "rebootWipeUserData"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "shutdown" explicit_type "boolean"
	  param inout name "reason" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reboots the device and wipes the user data and cache
partitions.  This is sometimes called a \"factory reset\", which
is something of a misnomer because the system partition is not
restored to its factory state.  Requires the
{@link android.Manifest.permission#REBOOT} permission.

@param context   the Context to use
@param shutdown  if true, the device will be powered down after
                 the wipe completes, rather than being rebooted
                 back to the regular system.

@throws IOException  if writing the recovery command file
fails, or if the reboot itself fails.
@throws SecurityException if the current user is not allowed to wipe data.

@hide"
      end

      operation 3861943 "rebootWipeCache"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reboot into the recovery system to wipe the /cache partition.
@throws IOException if something goes wrong."
      end

      operation 3862071 "rebootWipeCache"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "reason" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 3862199 "bootCommand"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "" explicit_type "String...args"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reboot into the recovery system with the supplied argument.
@param args to pass to the recovery utility.
@throws IOException if something goes wrong."
      end

      operation 3862327 "parseLastInstallLog"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Read last_install; then report time (in seconds) and I/O (in MiB) for
 this update to tron.
 Only report on the reboots immediately after an OTA update."
      end

      operation 3862455 "handleAftermath"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called after booting to process and remove recovery-related files.
@return the log file from recovery, or null if none was found.

@hide"
      end

      operation 3862583 "recursiveDelete"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "name" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internally, delete a given file or directory recursively."
      end

      operation 3862711 "uncrypt"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "packageFile" type class_ref 129591 // String
	  param inout name "listener" explicit_type "IRecoverySystemProgressListener"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Talks to RecoverySystemService via Binder to trigger uncrypt."
      end

      operation 3862839 "setupBcb"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "command" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Talks to RecoverySystemService via Binder to set up the BCB."
      end

      operation 3862967 "clearBcb"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Talks to RecoverySystemService via Binder to clear up the BCB."
      end

      operation 3863095 "sanitizeArg"
	class_operation private return_type class_ref 129591 // String
	nparams 1
	  param inout name "arg" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internally, recovery treats each line of the command file as a separate
argv, so we only need to protect against newlines and nulls."
      end

      operation 3863223 "RecoverySystem"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@removed Was previously made visible by accident."
      end

      operation 3863351 "RecoverySystem"
	public explicit_return_type ""
	nparams 1
	  param inout name "service" explicit_type "IRecoverySystem"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end
    end

    class 546615 "Registrant"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " @hide "
      operation 3863479 "Registrant"
	public explicit_return_type ""
	nparams 3
	  param inout name "h" type class_ref 132023 // Handler
	  param in name "what" explicit_type "int"
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3863607 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3863735 "notifyRegistrant"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3863863 "notifyResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3863991 "notifyException"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3864119 "notifyRegistrant"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ar" type class_ref 535991 // AsyncResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This makes a copy of @param ar"
      end

      operation 3864247 "internalNotifyRegistrant"
	package explicit_return_type "void"
	nparams 2
	  param inout name "result" type class_ref 132663 // Object
	  param inout name "exception" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "package"
      end

      operation 3864375 "messageForRegistrant"
	public return_type class_ref 287287 // Message
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "NOTE: May return null if weak reference has been collected"
      end

      operation 3864503 "getHandler"
	public return_type class_ref 132023 // Handler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1677239 "refH"
	package explicit_type "WeakReference"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1677367 "what"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1471159 // userObj (<unidirectional association>)
	relation 1471159 --->
	  a role_name "userObj" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1471159 // userObj (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end
    end

    class 546743 "RegistrantList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " @hide "
      attribute 1677495 "registrants"
	package explicit_type "ArrayList"
	init_value " new ArrayList()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " of Registrant"
      end

      operation 3864631 "add"
	public explicit_return_type "void"
	nparams 3
	  param inout name "h" type class_ref 132023 // Handler
	  param in name "what" explicit_type "int"
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3864759 "addUnique"
	public explicit_return_type "void"
	nparams 3
	  param inout name "h" type class_ref 132023 // Handler
	  param in name "what" explicit_type "int"
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3864887 "add"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" type class_ref 546615 // Registrant
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3865015 "removeCleared"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3865143 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3865271 "get"
	public return_type class_ref 132663 // Object
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3865399 "internalNotifyRegistrants"
	private explicit_return_type "void"
	nparams 2
	  param inout name "result" type class_ref 132663 // Object
	  param inout name "exception" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3865527 "notifyRegistrants"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3865655 "notifyException"
	public explicit_return_type "void"
	nparams 1
	  param inout name "exception" explicit_type "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3865783 "notifyResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3865911 "notifyRegistrants"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ar" type class_ref 535991 // AsyncResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3866039 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "h" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 546999 "RemoteMailException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " @hide "
      classrelation 1471799 // <generalisation>
	relation 1471799 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1471799 // <generalisation>
	  b parent class_ref 190647 // Exception
      end

      operation 3867063 "RemoteMailException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3867191 "RemoteMailException"
	public explicit_return_type ""
	nparams 1
	  param inout name "s" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 547127 "SELinux"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides access to the centralized jni bindings for
SELinux interaction.
{@hide}"
      classrelation 1471927 // TAG (<unidirectional association>)
	relation 1471927 --->
	  a role_name "TAG" init_value " \"SELinux\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1471927 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1677751 "SELINUX_ANDROID_RESTORECON_NOCHANGE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Keep in sync with ./external/libselinux/include/selinux/android.h "
      end

      attribute 1677879 "SELINUX_ANDROID_RESTORECON_VERBOSE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1678007 "SELINUX_ANDROID_RESTORECON_RECURSE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1678135 "SELINUX_ANDROID_RESTORECON_FORCE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1678263 "SELINUX_ANDROID_RESTORECON_DATADATA"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3867319 "isSELinuxEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Determine whether SELinux is disabled or enabled.
@return a boolean indicating whether SELinux is enabled."
      end

      operation 3867447 "isSELinuxEnforced"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Determine whether SELinux is permissive or enforcing.
@return a boolean indicating whether SELinux is enforcing."
      end

      operation 3867575 "setFSCreateContext"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "context" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Sets the security context for newly created file objects.
@param context a security context given as a String.
@return a boolean indicating whether the operation succeeded."
      end

      operation 3867703 "setFileContext"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "path" type class_ref 129591 // String
	  param inout name "context" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Change the security context of an existing file object.
@param path representing the path of file object to relabel.
@param context new security context given as a String.
@return a boolean indicating whether the operation succeeded."
      end

      operation 3867831 "getFileContext"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "path" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Get the security context of a file object.
@param path the pathname of the file object.
@return a security context given as a String."
      end

      operation 3867959 "getPeerContext"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Get the security context of a peer socket.
@param fd FileDescriptor class of the peer socket.
@return a String representing the peer socket security context."
      end

      operation 3868087 "getContext"
	class_operation public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Gets the security context of the current process.
@return a String representing the security context of the current process."
      end

      operation 3868215 "getPidContext"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "pid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Gets the security context of a given process id.
@param pid an int representing the process id to check.
@return a String representing the security context of the given pid."
      end

      operation 3868343 "checkSELinuxAccess"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "scon" type class_ref 129591 // String
	  param inout name "tcon" type class_ref 129591 // String
	  param inout name "tclass" type class_ref 129591 // String
	  param inout name "perm" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
	comment "Check permissions between two security contexts.
@param scon The source or subject security context.
@param tcon The target or object security context.
@param tclass The object security class name.
@param perm The permission name.
@return a boolean indicating whether permission was granted."
      end

      operation 3868471 "restorecon"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "pathname" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "NullPointerException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restores a file to its default SELinux security context.
If the system is not compiled with SELinux, then {@code true}
is automatically returned.
If SELinux is compiled in, but disabled, then {@code true} is
returned.

@param pathname The pathname of the file to be relabeled.
@return a boolean indicating whether the relabeling succeeded.
@exception NullPointerException if the pathname is a null object."
      end

      operation 3868599 "native_restorecon"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "pathname" type class_ref 129591 // String
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Restores a file to its default SELinux security context.
If the system is not compiled with SELinux, then {@code true}
is automatically returned.
If SELinux is compiled in, but disabled, then {@code true} is
returned.

@param pathname The pathname of the file to be relabeled.
@return a boolean indicating whether the relabeling succeeded."
      end

      operation 3868727 "restorecon"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "file" explicit_type "File"
	nexceptions 1
	  explicit_exception "NullPointerException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restores a file to its default SELinux security context.
If the system is not compiled with SELinux, then {@code true}
is automatically returned.
If SELinux is compiled in, but disabled, then {@code true} is
returned.

@param file The File object representing the path to be relabeled.
@return a boolean indicating whether the relabeling succeeded.
@exception NullPointerException if the file is a null object."
      end

      operation 3868855 "restoreconRecursive"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "file" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recursively restores all files under the given path to their default
SELinux security context. If the system is not compiled with SELinux,
then {@code true} is automatically returned. If SELinux is compiled in,
but disabled, then {@code true} is returned.

@return a boolean indicating whether the relabeling succeeded."
      end
    end

    class 547255 "ServiceManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " @hide "
      classrelation 1472055 // TAG (<unidirectional association>)
	relation 1472055 --->
	  a role_name "TAG" init_value " \"ServiceManager\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1472055 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1472183 // sServiceManager (<unidirectional association>)
	relation 1472183 --->
	  a role_name "sServiceManager" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1472183 // sServiceManager (<unidirectional association>)
	  b parent class_ref 544055 // IServiceManager
      end

      classrelation 1472311 // sCache (<unidirectional association>)
	relation 1472311 --->
	  stereotype "HashMap"
	  a role_name "sCache" init_value " new HashMap<String, IBinder>()" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, IBinder> ${name}${value};
"
	    classrelation_ref 1472311 // sCache (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3868983 "getIServiceManager"
	class_operation private return_type class_ref 544055 // IServiceManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3869111 "getService"
	class_operation public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a reference to a service with the given name.

@param name the name of the service to get
@return a reference to the service, or <code>null</code> if the service doesn't exist"
      end

      operation 3869239 "addService"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param inout name "service" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Place a new @a service called @a name into the service
manager.

@param name the name of the new service
@param service the service object"
      end

      operation 3869367 "addService"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 129591 // String
	  param inout name "service" type class_ref 132919 // IBinder
	  param inout name "allowIsolated" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Place a new @a service called @a name into the service
manager.

@param name the name of the new service
@param service the service object
@param allowIsolated set to true to allow isolated sandboxed processes
to access this service"
      end

      operation 3869495 "checkService"
	class_operation public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve an existing service called @a name from the
service manager.  Non-blocking."
      end

      operation 3869623 "listServices"
	class_operation public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a list of all currently running services.
@return an array of all currently running services, or <code>null</code> in
case of an exception"
      end

      operation 3869751 "initServiceCache"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "cache" explicit_type "Map<String, IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is only intended to be called when the process is first being brought
up and bound by the activity manager. There is only one thread in the process
at that time, so no locking is done.

@param cache the cache of service references
@hide"
      end
    end

    class 547383 "ServiceManagerNative"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Native implementation of the service manager.  Most clients will only
care about getDefault() and possibly asInterface().
@hide"
      classrelation 1472439 // <generalisation>
	relation 1472439 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1472439 // <generalisation>
	  b parent class_ref 277559 // Binder
      end

      classrelation 1472567 // <realization>
	relation 1472567 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1472567 // <realization>
	  b parent class_ref 544055 // IServiceManager
      end

      operation 3869879 "asInterface"
	class_operation public return_type class_ref 544055 // IServiceManager
	nparams 1
	  param inout name "obj" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast a Binder object into a service manager interface, generating
a proxy if needed."
      end

      operation 3870007 "ServiceManagerNative"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3870135 "onTransact"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "code" explicit_type "int"
	  param inout name "data" type class_ref 137527 // Parcel
	  param inout name "reply" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3870263 "asBinder"
	public return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 547511 "ServiceManagerProxy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1472695 // <realization>
	relation 1472695 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1472695 // <realization>
	  b parent class_ref 544055 // IServiceManager
      end

      operation 3870391 "ServiceManagerProxy"
	public explicit_return_type ""
	nparams 1
	  param inout name "remote" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3870519 "asBinder"
	public return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3870647 "getService"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3870775 "checkService"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3870903 "addService"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 129591 // String
	  param inout name "service" type class_ref 132919 // IBinder
	  param inout name "allowIsolated" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3871031 "listServices"
	public return_type class_ref 129591 // String
	nparams 0
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3871159 "setPermissionController"
	public explicit_return_type "void"
	nparams 1
	  param inout name "controller" explicit_type "IPermissionController"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1472823 // mRemote (<unidirectional association>)
	relation 1472823 --->
	  a role_name "mRemote" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1472823 // mRemote (<unidirectional association>)
	  b parent class_ref 132919 // IBinder
      end
    end

    class 547767 "StatFs"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Retrieve overall information about the space on a filesystem. This is a
wrapper for Unix statvfs()."
      attribute 1679671 "mStat"
	private explicit_type "StructStatVfs"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3873463 "StatFs"
	public explicit_return_type ""
	nparams 1
	  param inout name "path" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new StatFs for looking at the stats of the filesystem at
{@code path}. Upon construction, the stat of the file system will be
performed, and the values retrieved available from the methods on this
class.

@param path path in the desired file system to stat."
      end

      operation 3873591 "doStat"
	class_operation private explicit_return_type "StructStatVfs"
	nparams 1
	  param inout name "path" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3873719 "restat"
	public explicit_return_type "void"
	nparams 1
	  param inout name "path" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform a restat of the file system referenced by this object. This is
the same as re-constructing the object with the same file system path,
and the new stat values are available upon return."
      end

      operation 3873847 "getBlockSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link #getBlockSizeLong()} instead."
      end

      operation 3873975 "getBlockSizeLong"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The size, in bytes, of a block on the file system. This corresponds to
the Unix {@code statvfs.f_bsize} field."
      end

      operation 3874103 "getBlockCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link #getBlockCountLong()} instead."
      end

      operation 3874231 "getBlockCountLong"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The total number of blocks on the file system. This corresponds to the
Unix {@code statvfs.f_blocks} field."
      end

      operation 3874359 "getFreeBlocks"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link #getFreeBlocksLong()} instead."
      end

      operation 3874487 "getFreeBlocksLong"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The total number of blocks that are free on the file system, including
reserved blocks (that are not available to normal applications). This
corresponds to the Unix {@code statvfs.f_bfree} field. Most applications
will want to use {@link #getAvailableBlocks()} instead."
      end

      operation 3874615 "getFreeBytes"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The number of bytes that are free on the file system, including reserved
blocks (that are not available to normal applications). Most applications
will want to use {@link #getAvailableBytes()} instead."
      end

      operation 3874743 "getAvailableBlocks"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link #getAvailableBlocksLong()} instead."
      end

      operation 3874871 "getAvailableBlocksLong"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The number of blocks that are free on the file system and available to
applications. This corresponds to the Unix {@code statvfs.f_bavail} field."
      end

      operation 3874999 "getAvailableBytes"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The number of bytes that are free on the file system and available to
applications."
      end

      operation 3875127 "getTotalBytes"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The total number of bytes supported by the file system."
      end
    end

    class 550455 "SynchronousResultReceiver"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Extends ResultReceiver to allow the server end of the ResultReceiver to synchronously wait
on the response from the client. This enables an RPC like system but with the ability to
timeout and discard late results.

NOTE: Can only be used for one response. Subsequent responses on the same instance are ignored.
{@hide}"
      classrelation 1479351 // <generalisation>
	relation 1479351 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1479351 // <generalisation>
	  b parent class_ref 277815 // ResultReceiver
      end

      class 550583 "Result"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1687479 "resultCode"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1479479 // bundle (<unidirectional association>)
	  relation 1479479 --->
	    a role_name "bundle" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      java_annotation "@Nullable
"
	      classrelation_ref 1479479 // bundle (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	operation 3891511 "Result"
	  public explicit_return_type ""
	  nparams 2
	    param in name "resultCode" explicit_type "int"
	    param inout name "bundle" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1479607 // mFuture (<unidirectional association>)
	relation 1479607 --->
	  stereotype "CompletableFuture"
	  a role_name "mFuture" init_value " new CompletableFuture<>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1479607 // mFuture (<unidirectional association>)
	  b parent class_ref 550583 // Result
      end

      operation 3891639 "SynchronousResultReceiver"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3891767 "onReceiveResult"
	protected explicit_return_type "void"
	nparams 2
	  param in name "resultCode" explicit_type "int"
	  param inout name "resultData" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3891895 "awaitResult"
	public return_type class_ref 550583 // Result
	nparams 1
	  param in name "timeoutMillis" explicit_type "long"
	nexceptions 1
	  explicit_exception "TimeoutException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Blocks waiting for the result from the remote client.

@return the Result
@throws TimeoutException if the timeout in milliseconds expired."
      end
    end

    class 550711 "SystemClock"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Core timekeeping facilities.

<p> Three different clocks are available, and they should not be confused:

<ul>
    <li> <p> {@link System#currentTimeMillis System.currentTimeMillis()}
    is the standard \"wall\" clock (time and date) expressing milliseconds
    since the epoch.  The wall clock can be set by the user or the phone
    network (see {@link #setCurrentTimeMillis}), so the time may jump
    backwards or forwards unpredictably.  This clock should only be used
    when correspondence with real-world dates and times is important, such
    as in a calendar or alarm clock application.  Interval or elapsed
    time measurements should use a different clock.  If you are using
    System.currentTimeMillis(), consider listening to the
    {@link android.content.Intent#ACTION_TIME_TICK ACTION_TIME_TICK},
    {@link android.content.Intent#ACTION_TIME_CHANGED ACTION_TIME_CHANGED}
    and {@link android.content.Intent#ACTION_TIMEZONE_CHANGED
    ACTION_TIMEZONE_CHANGED} {@link android.content.Intent Intent}
    broadcasts to find out when the time changes.

    <li> <p> {@link #uptimeMillis} is counted in milliseconds since the
    system was booted.  This clock stops when the system enters deep
    sleep (CPU off, display dark, device waiting for external input),
    but is not affected by clock scaling, idle, or other power saving
    mechanisms.  This is the basis for most interval timing
    such as {@link Thread#sleep(long) Thread.sleep(millls)},
    {@link Object#wait(long) Object.wait(millis)}, and
    {@link System#nanoTime System.nanoTime()}.  This clock is guaranteed
    to be monotonic, and is suitable for interval timing when the
    interval does not span device sleep.  Most methods that accept a
    timestamp value currently expect the {@link #uptimeMillis} clock.

    <li> <p> {@link #elapsedRealtime} and {@link #elapsedRealtimeNanos}
    return the time since the system was booted, and include deep sleep.
    This clock is guaranteed to be monotonic, and continues to tick even
    when the CPU is in power saving modes, so is the recommend basis
    for general purpose interval timing.

</ul>

There are several mechanisms for controlling the timing of events:

<ul>
    <li> <p> Standard functions like {@link Thread#sleep(long)
    Thread.sleep(millis)} and {@link Object#wait(long) Object.wait(millis)}
    are always available.  These functions use the {@link #uptimeMillis}
    clock; if the device enters sleep, the remainder of the time will be
    postponed until the device wakes up.  These synchronous functions may
    be interrupted with {@link Thread#interrupt Thread.interrupt()}, and
    you must handle {@link InterruptedException}.

    <li> <p> {@link #sleep SystemClock.sleep(millis)} is a utility function
    very similar to {@link Thread#sleep(long) Thread.sleep(millis)}, but it
    ignores {@link InterruptedException}.  Use this function for delays if
    you do not use {@link Thread#interrupt Thread.interrupt()}, as it will
    preserve the interrupted state of the thread.

    <li> <p> The {@link android.os.Handler} class can schedule asynchronous
    callbacks at an absolute or relative time.  Handler objects also use the
    {@link #uptimeMillis} clock, and require an {@link android.os.Looper
    event loop} (normally present in any GUI application).

    <li> <p> The {@link android.app.AlarmManager} can trigger one-time or
    recurring events which occur even when the device is in deep sleep
    or your application is not running.  Events may be scheduled with your
    choice of {@link java.lang.System#currentTimeMillis} (RTC) or
    {@link #elapsedRealtime} (ELAPSED_REALTIME), and cause an
    {@link android.content.Intent} broadcast when they occur.
</ul>"
      classrelation 1479735 // TAG (<unidirectional association>)
	relation 1479735 --->
	  a role_name "TAG" init_value " \"SystemClock\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1479735 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3892023 "SystemClock"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class is uninstantiable."
      end

      operation 3892151 "sleep"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "ms" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits a given number of milliseconds (of uptimeMillis) before returning.
Similar to {@link java.lang.Thread#sleep(long)}, but does not throw
{@link InterruptedException}; {@link Thread#interrupt()} events are
deferred until the next interruptible operation.  Does not return until
at least the specified number of milliseconds has elapsed.

@param ms to sleep before returning, in milliseconds of uptime."
      end

      operation 3892279 "setCurrentTimeMillis"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "millis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current wall time, in milliseconds.  Requires the calling
process to have appropriate permissions.

@return if the clock was successfully set to the specified time."
      end

      operation 3892407 "uptimeMillis"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns milliseconds since boot, not counting time spent in deep sleep.

@return milliseconds of non-sleep uptime since boot."
      end

      operation 3892535 "elapsedRealtime"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns milliseconds since boot, including time spent in sleep.

@return elapsed milliseconds since boot."
      end

      operation 3892663 "elapsedRealtimeNanos"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns nanoseconds since boot, including time spent in sleep.

@return elapsed nanoseconds since boot."
      end

      operation 3892791 "currentThreadTimeMillis"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns milliseconds running in the current thread.

@return elapsed milliseconds in the thread"
      end

      operation 3892919 "currentThreadTimeMicro"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns microseconds running in the current thread.

@return elapsed microseconds in the thread

@hide"
      end

      operation 3893047 "currentTimeMicro"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns current wall time in  microseconds.

@return elapsed microseconds in wall time

@hide"
      end
    end

    class 550839 "SystemProperties"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Gives access to the system properties store.  The system properties
store contains a list of string key-value pairs.

{@hide}"
      attribute 1687607 "PROP_NAME_MAX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 31"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1687735 "PROP_VALUE_MAX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 91"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1687863 "sChangeCallbacks"
	class_attribute const_attribute private explicit_type "Runnable"
	init_value " new ArrayList<Runnable>()"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3893175 "native_get"
	class_operation private return_type class_ref 129591 // String
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3893303 "native_get"
	class_operation private return_type class_ref 129591 // String
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "def" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3893431 "native_get_int"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "def" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3893559 "native_get_long"
	class_operation private explicit_return_type "long"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "def" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3893687 "native_get_boolean"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "def" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3893815 "native_set"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "def" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3893943 "native_add_change_callback"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3894071 "get"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value for the given key.
@return an empty string if the key isn't found
@throws IllegalArgumentException if the key exceeds 32 characters"
      end

      operation 3894199 "get"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "def" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value for the given key.
@return if the key isn't found, return def if it isn't null, or an empty string otherwise
@throws IllegalArgumentException if the key exceeds 32 characters"
      end

      operation 3894327 "getInt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "def" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value for the given key, and return as an integer.
@param key the key to lookup
@param def a default value to return
@return the key parsed as an integer, or def if the key isn't found or
        cannot be parsed
@throws IllegalArgumentException if the key exceeds 32 characters"
      end

      operation 3894455 "getLong"
	class_operation public explicit_return_type "long"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "def" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value for the given key, and return as a long.
@param key the key to lookup
@param def a default value to return
@return the key parsed as a long, or def if the key isn't found or
        cannot be parsed
@throws IllegalArgumentException if the key exceeds 32 characters"
      end

      operation 3894583 "getBoolean"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "def" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value for the given key, returned as a boolean.
Values 'n', 'no', '0', 'false' or 'off' are considered false.
Values 'y', 'yes', '1', 'true' or 'on' are considered true.
(case sensitive).
If the key does not exist, or has any other value, then the default
result is returned.
@param key the key to lookup
@param def a default value to return
@return the key parsed as a boolean, or def if the key isn't found or is
        not able to be parsed as a boolean.
@throws IllegalArgumentException if the key exceeds 32 characters"
      end

      operation 3894711 "set"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "val" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value for the given key.
@throws IllegalArgumentException if the key exceeds 32 characters
@throws IllegalArgumentException if the value exceeds 92 characters"
      end

      operation 3894839 "addChangeCallback"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "callback" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3894967 "callChangeCallbacks"
	class_operation package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 550967 "SystemService"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Controls and utilities for low-level {@code init} services.

@hide"
      classrelation 1479863 // sStates (<unidirectional association>)
	relation 1479863 --->
	  stereotype "HashMap"
	  a role_name "sStates" init_value " Maps.newHashMap()" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, State> ${name}${value};
"
	    classrelation_ref 1479863 // sStates (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      class 551095 "State"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1687991 "RUNNING"
	  public type class_ref 551095 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}(\"running\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1688119 "STOPPING"
	  public type class_ref 551095 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}(\"stopping\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1688247 "STOPPED"
	  public type class_ref 551095 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}(\"stopped\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1688375 "RESTARTING"
	  public type class_ref 551095 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}(\"restarting\"),${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3895095 "State"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "state" type class_ref 129591 // String
	  
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1479991 // sPropertyLock (<unidirectional association>)
	relation 1479991 --->
	  a role_name "sPropertyLock" init_value " new Object()" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1479991 // sPropertyLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      extra_member 133175 "initialization"
	
	cpp "" ""
	java "  static {
        SystemProperties.addChangeCallback(new Runnable() {
            @Override
            public void run() {
                synchronized (sPropertyLock) {
                    sPropertyLock.notifyAll();
                }
            }
        });
    }"
	php ""
	python ""
	idl ""
      end

      operation 3895223 "start"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Request that the init daemon start a named service. "
      end

      operation 3895351 "stop"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Request that the init daemon stop a named service. "
      end

      operation 3895479 "restart"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Request that the init daemon restart a named service. "
      end

      operation 3895607 "getState"
	class_operation public return_type class_ref 551095 // State
	nparams 1
	  param inout name "service" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return current state of given service."
      end

      operation 3895735 "isStopped"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "service" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if given service is {@link State#STOPPED}."
      end

      operation 3895863 "isRunning"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "service" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if given service is {@link State#RUNNING}."
      end

      operation 3895991 "waitForState"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "service" type class_ref 129591 // String
	  param inout name "state" type class_ref 551095 // State
	  param in name "timeoutMillis" explicit_type "long"
	nexceptions 1
	  explicit_exception "TimeoutException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wait until given service has entered specific state."
      end

      operation 3896119 "waitForAnyStopped"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "" explicit_type "String...services"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Wait until any of given services enters {@link State#STOPPED}."
      end
    end

    class 551223 "SystemVibrator"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Vibrator implementation that controls the main system vibrator.

@hide"
      classrelation 1480119 // <generalisation>
	relation 1480119 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1480119 // <generalisation>
	  b parent class_ref 495927 // Vibrator
      end

      classrelation 1480247 // TAG (<unidirectional association>)
	relation 1480247 --->
	  a role_name "TAG" init_value " \"Vibrator\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1480247 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1688503 "mService"
	const_attribute private explicit_type "IVibratorService"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1480375 // mToken (<unidirectional association>)
	relation 1480375 --->
	  a role_name "mToken" init_value " new Binder()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1480375 // mToken (<unidirectional association>)
	  b parent class_ref 277559 // Binder
      end

      operation 3896247 "SystemVibrator"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3896375 "SystemVibrator"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3896503 "hasVibrator"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3896631 "vibrate"
	public explicit_return_type "void"
	nparams 4
	  param in name "uid" explicit_type "int"
	  param inout name "opPkg" type class_ref 129591 // String
	  param in name "milliseconds" explicit_type "long"
	  param inout name "attributes" type class_ref 385335 // AudioAttributes
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@hide"
      end

      operation 3896759 "vibrate"
	public explicit_return_type "void"
	nparams 5
	  param in name "uid" explicit_type "int"
	  param inout name "opPkg" type class_ref 129591 // String
	  param inout name "pattern" explicit_type "long"
	  param in name "repeat" explicit_type "int"
	  param inout name "attributes" type class_ref 385335 // AudioAttributes
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "@hide"
      end

      operation 3896887 "usageForAttributes"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "attributes" type class_ref 385335 // AudioAttributes
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3897015 "cancel"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 551351 "TokenWatcher"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Helper class that helps you use IBinder objects as reference counted
tokens.  IBinders make good tokens because we find out when they are
removed
"
      operation 3897143 "TokenWatcher"
	public explicit_return_type ""
	nparams 2
	  param inout name "h" type class_ref 132023 // Handler
	  param inout name "tag" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct the TokenWatcher

@param h A handler to call {@link #acquired} and {@link #released}
on.  If you don't care, just call it like this, although your thread
will have to be a Looper thread.
<code>new TokenWatcher(new Handler())</code>
@param tag A debugging tag for this TokenWatcher"
      end

      operation 3897271 "acquired"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the number of active tokens goes from 0 to 1."
      end

      operation 3897399 "released"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the number of active tokens goes from 1 to 0."
      end

      operation 3897527 "acquire"
	public explicit_return_type "void"
	nparams 2
	  param inout name "token" type class_ref 132919 // IBinder
	  param inout name "tag" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Record that this token has been acquired.  When acquire is called, and
the current count is 0, the acquired method is called on the given
handler.

@param token An IBinder object.  If this token has already been acquired,
             no action is taken.
@param tag   A string used by the {@link #dump} method for debugging,
             to see who has references."
      end

      operation 3897655 "cleanup"
	public explicit_return_type "void"
	nparams 2
	  param inout name "token" type class_ref 132919 // IBinder
	  param inout name "unlink" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3897783 "release"
	public explicit_return_type "void"
	nparams 1
	  param inout name "token" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3897911 "isAcquired"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3898039 "dump"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3898167 "dump"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pw" explicit_type "PrintWriter"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3898295 "dumpInternal"
	private return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 1688631 "mNotificationTask"
	private explicit_type "Runnable"
	init_value " new Runnable() {
        public void run()
        {
            int value;
            synchronized (mTokens) {
                value = mNotificationQueue;
                mNotificationQueue = -1;
            }
            if (value == 1) {
                acquired();
            }
            else if (value == 0) {
                released();
            }
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3898423 "sendNotificationLocked"
	private explicit_return_type "void"
	nparams 1
	  param inout name "on" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 551479 "Death"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1480503 // <realization>
	  relation 1480503 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1480503 // <realization>
	    b parent class_ref 277943 // DeathRecipient
	end

	classrelation 1480631 // token (<unidirectional association>)
	  relation 1480631 --->
	    a role_name "token" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1480631 // token (<unidirectional association>)
	    b parent class_ref 132919 // IBinder
	end

	classrelation 1480759 // tag (<unidirectional association>)
	  relation 1480759 --->
	    a role_name "tag" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1480759 // tag (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	operation 3898551 "Death"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "token" type class_ref 132919 // IBinder
	    param inout name "tag" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3898679 "binderDied"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3898807 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "Throwable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1480887 // mTokens (<unidirectional association>)
	relation 1480887 --->
	  stereotype "WeakHashMap"
	  a role_name "mTokens" init_value " new WeakHashMap<IBinder,Death>()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type},Death> ${name}${value};
"
	    classrelation_ref 1480887 // mTokens (<unidirectional association>)
	  b parent class_ref 132919 // IBinder
      end

      classrelation 1481015 // mHandler (<unidirectional association>)
	relation 1481015 --->
	  a role_name "mHandler" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1481015 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      classrelation 1481143 // mTag (<unidirectional association>)
	relation 1481143 --->
	  a role_name "mTag" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1481143 // mTag (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1688759 "mNotificationQueue"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1688887 "mAcquired"
	volatile private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 551607 "Trace"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Writes trace events to the system trace buffer.  These trace events can be
collected and visualized using the Systrace tool.

<p>This tracing mechanism is independent of the method tracing mechanism
offered by {@link Debug#startMethodTracing}.  In particular, it enables
tracing of events that occur across multiple processes.
<p>For information about using the Systrace tool, read <a
href=\"{@docRoot}tools/debugging/systrace.html\">Analyzing Display and Performance
with Systrace</a>."
      classrelation 1481271 // TAG (<unidirectional association>)
	relation 1481271 --->
	  a role_name "TAG" init_value " \"Trace\"" class_relation const_relation private
	    comment "
Writes trace events to the kernel trace buffer.  These trace events can be
collected using the \"atrace\" program for offline analysis.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1481271 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1689015 "TRACE_TAG_NEVER"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These tags must be kept in sync with system/core/include/cutils/trace.h.
 They should also be added to frameworks/native/cmds/atrace/atrace.cpp.
 @hide "
      end

      attribute 1689143 "TRACE_TAG_ALWAYS"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1689271 "TRACE_TAG_GRAPHICS"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1689399 "TRACE_TAG_INPUT"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1689527 "TRACE_TAG_VIEW"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1689655 "TRACE_TAG_WEBVIEW"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1689783 "TRACE_TAG_WINDOW_MANAGER"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1689911 "TRACE_TAG_ACTIVITY_MANAGER"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1690039 "TRACE_TAG_SYNC_MANAGER"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1690167 "TRACE_TAG_AUDIO"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1690295 "TRACE_TAG_VIDEO"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1690423 "TRACE_TAG_CAMERA"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1690551 "TRACE_TAG_HAL"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1690679 "TRACE_TAG_APP"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1690807 "TRACE_TAG_RESOURCES"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1690935 "TRACE_TAG_DALVIK"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1691063 "TRACE_TAG_RS"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1691191 "TRACE_TAG_BIONIC"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1691319 "TRACE_TAG_POWER"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 17"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1691447 "TRACE_TAG_PACKAGE_MANAGER"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 18"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1691575 "TRACE_TAG_SYSTEM_SERVER"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 19"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1691703 "TRACE_TAG_DATABASE"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1L << 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1691831 "TRACE_TAG_NOT_READY"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1L << 63"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1691959 "MAX_SECTION_NAME_LEN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 127"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1692087 "sEnabledTags"
	class_attribute volatile private explicit_type "long"
	init_value " TRACE_TAG_NOT_READY"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Must be volatile to avoid word tearing."
      end

      operation 3898935 "nativeGetEnabledTags"
	class_operation private explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3899063 "nativeTraceCounter"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "tag" explicit_type "long"
	  param inout name "name" type class_ref 129591 // String
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 3899191 "nativeTraceBegin"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "tag" explicit_type "long"
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3899319 "nativeTraceEnd"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "tag" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3899447 "nativeAsyncTraceBegin"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "tag" explicit_type "long"
	  param inout name "name" type class_ref 129591 // String
	  param in name "cookie" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 3899575 "nativeAsyncTraceEnd"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "tag" explicit_type "long"
	  param inout name "name" type class_ref 129591 // String
	  param in name "cookie" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 3899703 "nativeSetAppTracingAllowed"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "allowed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3899831 "nativeSetTracingEnabled"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "allowed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      extra_member 133303 "initialization"
	
	cpp "" ""
	java "  static {
        // We configure two separate change callbacks, one in Trace.cpp and one here.  The
        // native callback reads the tags from the system property, and this callback
        // reads the value that the native code retrieved.  It's essential that the native
        // callback executes first.
        //
        // The system provides ordering through a priority level.  Callbacks made through
        // SystemProperties.addChangeCallback currently have a negative priority, while
        // our native code is using a priority of zero.
        SystemProperties.addChangeCallback(new Runnable() {
            @Override public void run() {
                cacheEnabledTags();
            }
        });
    }"
	php ""
	python ""
	idl ""
      end

      operation 3899959 "Trace"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3900087 "cacheEnabledTags"
	class_operation private explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Caches a copy of the enabled-tag bits.  The \"master\" copy is held by the native code,
and comes from the PROPERTY_TRACE_TAG_ENABLEFLAGS property.
<p>
If the native code hasn't yet read the property, we will cause it to do one-time
initialization.  We don't want to do this during class init, because this class is
preloaded, so all apps would be stuck with whatever the zygote saw.  (The zygote
doesn't see the system-property update broadcasts.)
<p>
We want to defer initialization until the first use by an app, post-zygote.
<p>
We're okay if multiple threads call here simultaneously -- the native state is
synchronized, and sEnabledTags is volatile (prevents word tearing)."
      end

      operation 3900215 "isTagEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "traceTag" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if a trace tag is enabled.

@param traceTag The trace tag to check.
@return True if the trace tag is valid.

@hide"
      end

      operation 3900343 "traceCounter"
	class_operation public explicit_return_type "void"
	nparams 3
	  param in name "traceTag" explicit_type "long"
	  param inout name "counterName" type class_ref 129591 // String
	  param in name "counterValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes trace message to indicate the value of a given counter.

@param traceTag The trace tag.
@param counterName The counter name to appear in the trace.
@param counterValue The counter value.

@hide"
      end

      operation 3900471 "setAppTracingAllowed"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "allowed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether application tracing is allowed for this process.  This is intended to be set
once at application start-up time based on whether the application is debuggable.

@hide"
      end

      operation 3900599 "setTracingEnabled"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether tracing is enabled in this process.  Tracing is disabled shortly after Zygote
initializes and re-enabled after processes fork from Zygote.  This is done because Zygote
has no way to be notified about changes to the tracing tags, and if Zygote ever reads and
caches the tracing tags, forked processes will inherit those stale tags.

@hide"
      end

      operation 3900727 "traceBegin"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "traceTag" explicit_type "long"
	  param inout name "methodName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a trace message to indicate that a given section of code has
begun. Must be followed by a call to {@link #traceEnd} using the same
tag.

@param traceTag The trace tag.
@param methodName The method name to appear in the trace.

@hide"
      end

      operation 3900855 "traceEnd"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "traceTag" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a trace message to indicate that the current method has ended.
Must be called exactly once for each call to {@link #traceBegin} using the same tag.

@param traceTag The trace tag.

@hide"
      end

      operation 3900983 "asyncTraceBegin"
	class_operation public explicit_return_type "void"
	nparams 3
	  param in name "traceTag" explicit_type "long"
	  param inout name "methodName" type class_ref 129591 // String
	  param in name "cookie" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a trace message to indicate that a given section of code has
begun. Must be followed by a call to {@link #asyncTraceEnd} using the same
tag. Unlike {@link #traceBegin(long, String)} and {@link #traceEnd(long)},
asynchronous events do not need to be nested. The name and cookie used to
begin an event must be used to end it.

@param traceTag The trace tag.
@param methodName The method name to appear in the trace.
@param cookie Unique identifier for distinguishing simultaneous events

@hide"
      end

      operation 3901111 "asyncTraceEnd"
	class_operation public explicit_return_type "void"
	nparams 3
	  param in name "traceTag" explicit_type "long"
	  param inout name "methodName" type class_ref 129591 // String
	  param in name "cookie" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a trace message to indicate that the current method has ended.
Must be called exactly once for each call to {@link #asyncTraceBegin(long, String, int)}
using the same tag, name and cookie.

@param traceTag The trace tag.
@param methodName The method name to appear in the trace.
@param cookie Unique identifier for distinguishing simultaneous events

@hide"
      end

      operation 3901239 "beginSection"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "sectionName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a trace message to indicate that a given section of code has begun. This call must
be followed by a corresponding call to {@link #endSection()} on the same thread.

<p class=\"note\"> At this time the vertical bar character '|', newline character '\\n', and
null character '\\0' are used internally by the tracing mechanism.  If sectionName contains
these characters they will be replaced with a space character in the trace.

@param sectionName The name of the code section to appear in the trace.  This may be at
most 127 Unicode code units long."
      end

      operation 3901367 "endSection"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a trace message to indicate that a given section of code has ended. This call must
be preceeded by a corresponding call to {@link #beginSection(String)}. Calling this method
will mark the end of the most recently begun section of code, so care must be taken to
ensure that beginSection / endSection pairs are properly nested and called from the same
thread."
      end
    end

    class 551735 "TransactionTooLargeException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The Binder transaction failed because it was too large.
<p>
During a remote procedure call, the arguments and the return value of the call
are transferred as {@link Parcel} objects stored in the Binder transaction buffer.
If the arguments or the return value are too large to fit in the transaction buffer,
then the call will fail and {@link TransactionTooLargeException} will be thrown.
</p><p>
The Binder transaction buffer has a limited fixed size, currently 1Mb, which
is shared by all transactions in progress for the process.  Consequently this
exception can be thrown when there are many transactions in progress even when
most of the individual transactions are of moderate size.
</p><p>
There are two possible outcomes when a remote procedure call throws
{@link TransactionTooLargeException}.  Either the client was unable to send
its request to the service (most likely if the arguments were too large to fit in
the transaction buffer), or the service was unable to send its response back
to the client (most likely if the return value was too large to fit
in the transaction buffer).  It is not possible to tell which of these outcomes
actually occurred.  The client should assume that a partial failure occurred.
</p><p>
The key to avoiding {@link TransactionTooLargeException} is to keep all
transactions relatively small.  Try to minimize the amount of memory needed to create
a {@link Parcel} for the arguments and the return value of the remote procedure call.
Avoid transferring huge arrays of strings or large bitmaps.
If possible, try to break up big requests into smaller pieces.
</p><p>
If you are implementing a service, it may help to impose size or complexity
contraints on the queries that clients can perform.  For example, if the result set
could become large, then don't allow the client to request more than a few records
at a time.  Alternately, instead of returning all of the available data all at once,
return the essential information first and make the client ask for additional information
later as needed.
</p>"
      classrelation 1481399 // <generalisation>
	relation 1481399 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1481399 // <generalisation>
	  b parent class_ref 159031 // RemoteException
      end

      operation 3901495 "TransactionTooLargeException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3901623 "TransactionTooLargeException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 551863 "UEventObserver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "UEventObserver is an abstract class that receives UEvents from the kernel.<p>

Subclass UEventObserver, implementing onUEvent(UEvent event), then call
startObserving() with a match string. The UEvent thread will then call your
onUEvent() method when a UEvent occurs that contains your match string.<p>

Call stopObserving() to stop receiving UEvents.<p>

There is only one UEvent thread per process, even if that process has
multiple UEventObserver subclass instances. The UEvent thread starts when
the startObserving() is called for the first time in that process. Once
started the UEvent thread will not stop (although it can stop notifying
UEventObserver's via stopObserving()).<p>

@hide"
      classrelation 1481655 // TAG (<unidirectional association>)
	relation 1481655 --->
	  a role_name "TAG" init_value " \"UEventObserver\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1481655 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1692215 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 551991 "UEventThread"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1482039 // <generalisation>
	  relation 1482039 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1482039 // <generalisation>
	    b parent class_ref 295863 // Thread
	end

	classrelation 1482167 // mKeysAndObservers (<unidirectional association>)
	  relation 1482167 --->
	    stereotype "ArrayList"
	    a role_name "mKeysAndObservers" init_value " new ArrayList<Object>()" const_relation private
	      comment " Many to many mapping of string match to observer.
 Multimap would be better, but not available in android, so use
 an ArrayList where even elements are the String match and odd
 elements the corresponding UEventObserver observer "
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 1482167 // mKeysAndObservers (<unidirectional association>)
	    b parent class_ref 132663 // Object
	end

	classrelation 1482295 // mTempObserversToSignal (<unidirectional association>)
	  relation 1482295 --->
	    stereotype "ArrayList"
	    a role_name "mTempObserversToSignal" init_value "
                new ArrayList<UEventObserver>()" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 1482295 // mTempObserversToSignal (<unidirectional association>)
	    b parent class_ref 551863 // UEventObserver
	end

	operation 3904311 "UEventThread"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3904439 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3904567 "sendEvent"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "message" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3904695 "addObserver"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "match" type class_ref 129591 // String
	    param inout name "observer" type class_ref 551863 // UEventObserver
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3904823 "removeObserver"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "observer" type class_ref 551863 // UEventObserver
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Removes every key/value pair where value=observer from mObservers "
	end
      end

      classrelation 1481783 // sThread (<unidirectional association>)
	relation 1481783 --->
	  a role_name "sThread" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1481783 // sThread (<unidirectional association>)
	  b parent class_ref 551991 // UEventThread
      end

      operation 3902391 "nativeSetup"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3902519 "nativeWaitForNextEvent"
	class_operation private return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3902647 "nativeAddMatch"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "match" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3902775 "nativeRemoveMatch"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "match" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3902903 "UEventObserver"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3903031 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3903159 "getThread"
	class_operation private return_type class_ref 551991 // UEventThread
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3903287 "peekThread"
	class_operation private return_type class_ref 551991 // UEventThread
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3903415 "startObserving"
	public explicit_return_type "void"
	nparams 1
	  param inout name "match" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin observation of UEvents.<p>
This method will cause the UEvent thread to start if this is the first
invocation of startObserving in this process.<p>
Once called, the UEvent thread will call onUEvent() when an incoming
UEvent matches the specified string.<p>
This method can be called multiple times to register multiple matches.
Only one call to stopObserving is required even with multiple registered
matches.

@param match A substring of the UEvent to match.  Try to be as specific
as possible to avoid incurring unintended additional cost from processing
irrelevant messages.  Netlink messages can be moderately high bandwidth and
are expensive to parse.  For example, some devices may send one netlink message
for each vsync period."
      end

      operation 3903543 "stopObserving"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End observation of UEvents.<p>
This process's UEvent thread will never call onUEvent() on this
UEventObserver after this call. Repeated calls have no effect."
      end

      operation 3903671 "onUEvent"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 552119 // UEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses of UEventObserver should override this method to handle
UEvents."
      end

      class 552119 "UEvent"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1481911 // mMap (<unidirectional association>)
	  relation 1481911 --->
	    stereotype "HashMap"
	    a role_name "mMap" init_value " new HashMap<String,String>()" const_relation private
	      comment " collection of key=value pairs parsed from the uevent message"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type},String> ${name}${value};
"
	      classrelation_ref 1481911 // mMap (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	operation 3903799 "UEvent"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "message" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3903927 "get"
	  public return_type class_ref 129591 // String
	  nparams 1
	    param inout name "key" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3904055 "get"
	  public return_type class_ref 129591 // String
	  nparams 2
	    param inout name "key" type class_ref 129591 // String
	    param inout name "defaultValue" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3904183 "toString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 552247 "UpdateEngine"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "UpdateEngine handles calls to the update engine which takes care of A/B OTA
updates. It wraps up the update engine Binder APIs and exposes them as
SystemApis, which will be called by system apps like GmsCore.

The APIs defined in this class and UpdateEngineCallback class must be in
sync with the ones in
system/update_engine/binder_bindings/android/os/IUpdateEngine.aidl and
system/update_engine/binder_bindings/android/os/IUpdateEngineCallback.aidl.

{@hide}"
      classrelation 1482423 // TAG (<unidirectional association>)
	relation 1482423 --->
	  a role_name "TAG" init_value " \"UpdateEngine\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1482423 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1482551 // UPDATE_ENGINE_SERVICE (<unidirectional association>)
	relation 1482551 --->
	  a role_name "UPDATE_ENGINE_SERVICE" init_value " \"android.os.UpdateEngineService\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1482551 // UPDATE_ENGINE_SERVICE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      class 552375 "ErrorCodeConstants"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1692343 "SUCCESS"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1692471 "ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1692599 "FILESYSTEM_COPIER_ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1692727 "POST_INSTALL_RUNNER_ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 5"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1692855 "PAYLOAD_MISMATCHED_TYPE_ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 6"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1692983 "INSTALL_DEVICE_OPEN_ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 7"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1693111 "KERNEL_DEVICE_OPEN_ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 8"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1693239 "DOWNLOAD_TRANSFER_ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 9"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1693367 "PAYLOAD_HASH_MISMATCH_ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 10"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1693495 "PAYLOAD_SIZE_MISMATCH_ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 11"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1693623 "DOWNLOAD_PAYLOAD_VERIFICATION_ERROR"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 12"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 552503 "UpdateStatusConstants"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1693751 "IDLE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1693879 "CHECKING_FOR_UPDATE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1694007 "UPDATE_AVAILABLE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1694135 "DOWNLOADING"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1694263 "VERIFYING"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1694391 "FINALIZING"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 5"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1694519 "UPDATED_NEED_REBOOT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 6"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1694647 "REPORTING_ERROR_EVENT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 7"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1694775 "ATTEMPTING_ROLLBACK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 8"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1694903 "DISABLED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 9"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      attribute 1695031 "mUpdateEngine"
	private explicit_type "IUpdateEngine"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3904951 "UpdateEngine"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
      end

      operation 3905079 "bind"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "callback" type class_ref 552631 // UpdateEngineCallback
	  param in name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
      end

      operation 3905207 "bind"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "callback" type class_ref 552631 // UpdateEngineCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
      end

      operation 3905335 "applyPayload"
	public explicit_return_type "void"
	nparams 4
	  param inout name "url" type class_ref 129591 // String
	  param in name "offset" explicit_type "long"
	  param in name "size" explicit_type "long"
	  param inout name "headerKeyValuePairs" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
      end

      operation 3905463 "cancel"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
      end

      operation 3905591 "suspend"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
      end

      operation 3905719 "resume"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
      end

      operation 3905847 "resetStatus"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
      end
    end

    class 552631 "UpdateEngineCallback"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Callback function for UpdateEngine.

The APIs defined in this class and UpdateEngine class must be in sync with
the ones in
system/update_engine/binder_bindings/android/os/IUpdateEngine.aidl and
system/update_engine/binder_bindings/android/os/IUpdateEngineCallback.aidl.

{@hide}"
      operation 3905975 "onStatusUpdate"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "status" explicit_type "int"
	  param in name "percent" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
      end

      operation 3906103 "onPayloadApplicationComplete"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "errorCode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
      end
    end

    class 552759 "UpdateLock"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Advisory wakelock-like mechanism by which processes that should not be interrupted for
OTA/update purposes can so advise the OS.  This is particularly relevant for headless
or kiosk-like operation.

@hide"
      attribute 1695159 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1482679 // TAG (<unidirectional association>)
	relation 1482679 --->
	  a role_name "TAG" init_value " \"UpdateLock\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1482679 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1695287 "sService"
	class_attribute private explicit_type "IUpdateLock"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3906231 "checkService"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1482807 // mToken (<unidirectional association>)
	relation 1482807 --->
	  a role_name "mToken" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1482807 // mToken (<unidirectional association>)
	  b parent class_ref 132919 // IBinder
      end

      attribute 1695415 "mCount"
	package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1695543 "mRefCounted"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1695671 "mHeld"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1482935 // mTag (<unidirectional association>)
	relation 1482935 --->
	  a role_name "mTag" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1482935 // mTag (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1483063 // UPDATE_LOCK_CHANGED (<unidirectional association>)
	relation 1483063 --->
	  a role_name "UPDATE_LOCK_CHANGED" init_value " \"android.os.UpdateLock.UPDATE_LOCK_CHANGED\"" class_relation const_relation public
	    comment "
Broadcast Intent action sent when the global update lock state changes,
i.e. when the first locker acquires an update lock, or when the last
locker releases theirs.  The broadcast is sticky but is sent only to
registered receivers.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1483063 // UPDATE_LOCK_CHANGED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1483191 // NOW_IS_CONVENIENT (<unidirectional association>)
	relation 1483191 --->
	  a role_name "NOW_IS_CONVENIENT" init_value " \"nowisconvenient\"" class_relation const_relation public
	    comment "
Boolean Intent extra on the UPDATE_LOCK_CHANGED sticky broadcast, indicating
whether now is an appropriate time to interrupt device activity with an
update operation.  True means that updates are okay right now; false indicates
that perhaps later would be a better time.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1483191 // NOW_IS_CONVENIENT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1483319 // TIMESTAMP (<unidirectional association>)
	relation 1483319 --->
	  a role_name "TIMESTAMP" init_value " \"timestamp\"" class_relation const_relation public
	    comment "
Long Intent extra on the UPDATE_LOCK_CHANGED sticky broadcast, marking the
wall-clock time [in UTC] at which the broadcast was sent.  Note that this is
in the System.currentTimeMillis() time base, which may be non-monotonic especially
around reboots.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1483319 // TIMESTAMP (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3906359 "UpdateLock"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an UpdateLock instance.
@param tag An arbitrary string used to identify this lock instance in dump output."
      end

      operation 3906487 "setReferenceCounted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isRefCounted" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the refcount behavior of this update lock."
      end

      operation 3906615 "isHeld"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is this lock currently held?"
      end

      operation 3906743 "acquire"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Acquire an update lock."
      end

      operation 3906871 "acquireLocked"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3906999 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Release this update lock."
      end

      operation 3907127 "releaseLocked"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3907255 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 553015 "UserManagerInternal"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide Only for use within the system server."
      class 553143 "UserRestrictionsListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3923511 "onUserRestrictionsChanged"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "userId" explicit_type "int"
	    param inout name "newRestrictions" type class_ref 131511 // Bundle
	    param inout name "prevRestrictions" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a user restriction changes.

@param userId target user id
@param newRestrictions new user restrictions
@param prevRestrictions user restrictions that were previously set"
	end
      end

      operation 3923639 "setDevicePolicyUserRestrictions"
	abstract public explicit_return_type "void"
	nparams 3
	  param in name "userId" explicit_type "int"
	  param inout name "localRestrictions" type class_ref 131511 // Bundle
	  param inout name "globalRestrictions" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @NonNull ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link com.android.server.devicepolicy.DevicePolicyManagerService}
to set per-user as well as global user restrictions.

@param userId target user id for the local restrictions.
@param localRestrictions per-user restrictions.
    Caller must not change it once passed to this method.
@param globalRestrictions global restrictions set by DO.  Must be null when PO changed user
    restrictions, in which case global restrictions won't change.
    Caller must not change it once passed to this method."
      end

      operation 3923767 "getBaseUserRestrictions"
	abstract public return_type class_ref 131511 // Bundle
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the \"base\" user restrictions.

Used by {@link com.android.server.devicepolicy.DevicePolicyManagerService} for upgrading
from MNC."
      end

      operation 3923895 "setBaseUserRestrictionsByDpmsForMigration"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "userId" explicit_type "int"
	  param inout name "baseRestrictions" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link com.android.server.devicepolicy.DevicePolicyManagerService} for upgrading
from MNC."
      end

      operation 3924023 "getUserRestriction"
	abstract public explicit_return_type "boolean"
	nparams 2
	  param in name "userId" explicit_type "int"
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a user restriction. "
      end

      operation 3924151 "addUserRestrictionsListener"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 553143 // UserRestrictionsListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Adds a listener to user restriction changes. "
      end

      operation 3924279 "removeUserRestrictionsListener"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 553143 // UserRestrictionsListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Remove a {@link UserRestrictionsListener}. "
      end

      operation 3924407 "setDeviceManaged"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "isManaged" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link com.android.server.devicepolicy.DevicePolicyManagerService} to update
whether the device is managed by device owner."
      end

      operation 3924535 "setUserManaged"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "userId" explicit_type "int"
	  param inout name "isManaged" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link com.android.server.devicepolicy.DevicePolicyManagerService} to update
whether the user is managed by profile owner."
      end

      operation 3924663 "setUserIcon"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "userId" explicit_type "int"
	  param inout name "bitmap" type class_ref 131127 // Bitmap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link com.android.server.devicepolicy.DevicePolicyManagerService} to omit
restriction check, because DevicePolicyManager must always be able to set user icon
regardless of any restriction.
Also called by {@link com.android.server.pm.UserManagerService} because the logic of setting
the icon is in this method."
      end

      operation 3924791 "setForceEphemeralUsers"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "forceEphemeralUsers" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link com.android.server.devicepolicy.DevicePolicyManagerService} to inform the
user manager whether all users should be created ephemeral."
      end

      operation 3924919 "removeAllUsers"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Switches to the system user and deletes all other users.

<p>Called by the {@link com.android.server.devicepolicy.DevicePolicyManagerService} when
the force-ephemeral-users policy is toggled on to make sure there are no pre-existing
non-ephemeral users left."
      end

      operation 3925047 "onEphemeralUserStop"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the activity manager when the ephemeral user goes to background and its removal
starts as a result.

<p>It marks the ephemeral user as disabled in order to prevent it from being re-entered
before its removal finishes.

@param userId the ID of the ephemeral user."
      end

      operation 3925175 "createUserEvenWhenDisallowed"
	abstract public return_type class_ref 334135 // UserInfo
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as UserManager.createUser(), but bypasses the check for DISALLOW_ADD_USER.

<p>Called by the {@link com.android.server.devicepolicy.DevicePolicyManagerService} when
createAndManageUser is called by the device owner."
      end

      operation 3925303 "isUserUnlockingOrUnlocked"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether the given user is running in an
{@code UserState.STATE_RUNNING_UNLOCKING} or
{@code UserState.STATE_RUNNING_UNLOCKED} state."
      end

      operation 3925431 "isUserRunning"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether the given user is running"
      end

      operation 3925559 "setUserState"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "userId" explicit_type "int"
	  param in name "userState" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set user's running state"
      end

      operation 3925687 "removeUserState"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove user's running state"
      end
    end

    class 819383 "ParcelArrayBenchmark"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 2791479 "mSize"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Param({ \"1\", \"10\", \"100\", \"1000\" })
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2533943 // mWriteParcel (<unidirectional association>)
	relation 2533943 --->
	  a role_name "mWriteParcel" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2533943 // mWriteParcel (<unidirectional association>)
	  b parent class_ref 137527 // Parcel
      end

      attribute 2791607 "mByteArray"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2791735 "mIntArray"
	private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2791863 "mLongArray"
	private explicit_type "long"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2534071 // mByteParcel (<unidirectional association>)
	relation 2534071 --->
	  a role_name "mByteParcel" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2534071 // mByteParcel (<unidirectional association>)
	  b parent class_ref 137527 // Parcel
      end

      classrelation 2534199 // mIntParcel (<unidirectional association>)
	relation 2534199 --->
	  a role_name "mIntParcel" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2534199 // mIntParcel (<unidirectional association>)
	  b parent class_ref 137527 // Parcel
      end

      classrelation 2534327 // mLongParcel (<unidirectional association>)
	relation 2534327 --->
	  a role_name "mLongParcel" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2534327 // mLongParcel (<unidirectional association>)
	  b parent class_ref 137527 // Parcel
      end

      operation 6545975 "setUp"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@BeforeExperiment
"
	
	
	
      end

      operation 6546103 "tearDown"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@AfterExperiment
"
	
	
	
      end

      operation 6546231 "timeWriteByteArray"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6546359 "timeCreateByteArray"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6546487 "timeReadByteArray"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6546615 "timeWriteIntArray"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6546743 "timeCreateIntArray"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6546871 "timeReadIntArray"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6546999 "timeWriteLongArray"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6547127 "timeCreateLongArray"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6547255 "timeReadLongArray"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 819511 "ParcelBenchmark"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2534455 // mParcel (<unidirectional association>)
	relation 2534455 --->
	  a role_name "mParcel" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2534455 // mParcel (<unidirectional association>)
	  b parent class_ref 137527 // Parcel
      end

      operation 6547383 "setUp"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@BeforeExperiment
"
	
	
	
      end

      operation 6547511 "tearDown"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@AfterExperiment
"
	
	
	
      end

      operation 6547639 "timeWriteByte"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6547767 "timeReadByte"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6547895 "timeWriteInt"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6548023 "timeReadInt"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6548151 "timeWriteLong"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6548279 "timeReadLong"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 819639 "StrictModeBenchmark"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2534583 // mOff (<unidirectional association>)
	relation 2534583 --->
	  a role_name "mOff" init_value " new ThreadPolicy.Builder().build()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2534583 // mOff (<unidirectional association>)
	  b parent class_ref 548023 // ThreadPolicy
      end

      classrelation 2534711 // mOn (<unidirectional association>)
	relation 2534711 --->
	  a role_name "mOn" init_value " new ThreadPolicy.Builder().detectAll().build()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2534711 // mOn (<unidirectional association>)
	  b parent class_ref 548023 // ThreadPolicy
      end

      operation 6548407 "timeToggleThreadPolicy"
	public explicit_return_type "void"
	nparams 1
	  param in name "reps" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 862391 "AidlTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2643895 // <generalisation>
	relation 2643895 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2643895 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      attribute 2858935 "mRemote"
	private explicit_type "IAidlTest"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6798007 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6798135 "check"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "p" type class_ref 862519 // TestParcelable
	  param in name "n" explicit_type "int"
	  param inout name "s" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 862519 "TestParcelable"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2644023 // <realization>
	  relation 2644023 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2644023 // <realization>
	    b parent class_ref 137399 // Parcelable
	end

	attribute 2859063 "mAnInt"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 2644151 // mAString (<unidirectional association>)
	  relation 2644151 --->
	    a role_name "mAString" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2644151 // mAString (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	operation 6798263 "TestParcelable"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6798391 "TestParcelable"
	  public explicit_return_type ""
	  nparams 2
	    param in name "i" explicit_type "int"
	    param inout name "s" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6798519 "describeContents"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6798647 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "parcel" type class_ref 137527 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6798775 "readFromParcel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "parcel" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 2644279 // CREATOR (<unidirectional association>)
	  relation 2644279 --->
	    a role_name "CREATOR" init_value " new Parcelable.Creator<TestParcelable>() {
            public TestParcelable createFromParcel(Parcel parcel) {
                return new TestParcelable(parcel.readInt(),
                        parcel.readString());
            }

            public TestParcelable[] newArray(int size) {
                return new TestParcelable[size];
            }
        }" class_relation const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<TestParcelable> ${name}${value};
"
	      classrelation_ref 2644279 // CREATOR (<unidirectional association>)
	    b parent class_ref 137655 // Creator
	end

	operation 6798903 "toString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 862647 "AidlObject"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2644407 // <generalisation>
	  relation 2644407 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2644407 // <generalisation>
	    b parent class_ref 862775 // Stub
	end

	operation 6799031 "queryLocalInterface"
	  public return_type class_ref 277687 // IInterface
	  nparams 1
	    param inout name "descriptor" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6799159 "intMethod"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "a" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6799287 "parcelableIn"
	  public return_type class_ref 862519 // TestParcelable
	  nparams 1
	    param inout name "p" type class_ref 862519 // TestParcelable
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6799415 "parcelableOut"
	  public return_type class_ref 862519 // TestParcelable
	  nparams 1
	    param inout name "p" type class_ref 862519 // TestParcelable
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6799543 "parcelableInOut"
	  public return_type class_ref 862519 // TestParcelable
	  nparams 1
	    param inout name "p" type class_ref 862519 // TestParcelable
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6799671 "listParcelableLonger"
	  public return_type class_ref 862519 // TestParcelable
	  nparams 2
	    param inout name "list" explicit_type "List<TestParcelable>"
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6799799 "listParcelableShorter"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "list" explicit_type "List<TestParcelable>"
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6799927 "booleanArray"
	  public explicit_return_type "boolean"
	  nparams 3
	    param inout name "a0" explicit_type "boolean"
	    param inout name "a1" explicit_type "boolean"
	    param inout name "a2" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6800055 "charArray"
	  public explicit_return_type "char"
	  nparams 3
	    param inout name "a0" explicit_type "char"
	    param inout name "a1" explicit_type "char"
	    param inout name "a2" explicit_type "char"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6800183 "intArray"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "a0" explicit_type "int"
	    param inout name "a1" explicit_type "int"
	    param inout name "a2" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6800311 "longArray"
	  public explicit_return_type "long"
	  nparams 3
	    param inout name "a0" explicit_type "long"
	    param inout name "a1" explicit_type "long"
	    param inout name "a2" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6800439 "floatArray"
	  public explicit_return_type "float"
	  nparams 3
	    param inout name "a0" explicit_type "float"
	    param inout name "a1" explicit_type "float"
	    param inout name "a2" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6800567 "doubleArray"
	  public explicit_return_type "double"
	  nparams 3
	    param inout name "a0" explicit_type "double"
	    param inout name "a1" explicit_type "double"
	    param inout name "a2" explicit_type "double"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6800695 "stringArray"
	  public return_type class_ref 129591 // String
	  nparams 3
	    param inout name "a0" type class_ref 129591 // String
	    param inout name "a1" type class_ref 129591 // String
	    param inout name "a2" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6800823 "parcelableArray"
	  public return_type class_ref 862519 // TestParcelable
	  nparams 3
	    param inout name "a0" type class_ref 862519 // TestParcelable
	    param inout name "a1" type class_ref 862519 // TestParcelable
	    param inout name "a2" type class_ref 862519 // TestParcelable
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6800951 "voidSecurityException"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6801079 "intSecurityException"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6801207 "testInt"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6801335 "testParcelableIn"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6801463 "testParcelableOut"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6801591 "testParcelableInOut"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6801719 "testListParcelableLonger"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6801847 "testListParcelableShorter"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6801975 "testArrays"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6802103 "testVoidSecurityException"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6802231 "testIntSecurityException"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end
    end

    class 862903 "BinderThreadPriorityService"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Service used by {@link BinderThreadPriorityTest} to verify
the conveyance of thread priorities over Binder."
      classrelation 2644535 // <generalisation>
	relation 2644535 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2644535 // <generalisation>
	  b parent class_ref 300343 // Service
      end

      classrelation 2644663 // TAG (<unidirectional association>)
	relation 2644663 --->
	  a role_name "TAG" init_value " \"BinderThreadPriorityService\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2644663 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 2859191 "mBinder"
	const_attribute private explicit_type "IBinderThreadPriorityService.Stub"
	init_value "
            new IBinderThreadPriorityService.Stub() {
        public int getThreadPriority() {
            return Process.getThreadPriority(Process.myTid());
        }

        public String getThreadSchedulerGroup() {
            return BinderThreadPriorityTest.getSchedulerGroup();
        }

        public void callBack(IBinderThreadPriorityService recurse) {
            try {
                recurse.callBack(this);
            } catch (RemoteException e) {
                Log.e(TAG, \"Binder callback failed\", e);
            }
        }

        public void setPriorityAndCallBack(int priority, IBinderThreadPriorityService recurse) {
            Process.setThreadPriority(priority);
            try {
                recurse.callBack(this);
            } catch (RemoteException e) {
                Log.e(TAG, \"Binder callback failed\", e);
            }
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6802359 "onBind"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 863031 "BinderThreadPriorityTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Test whether Binder calls inherit thread priorities correctly."
      classrelation 2644791 // <generalisation>
	relation 2644791 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2644791 // <generalisation>
	  b parent class_ref 627895 // AndroidTestCase
      end

      classrelation 2644919 // TAG (<unidirectional association>)
	relation 2644919 --->
	  a role_name "TAG" init_value " \"BinderThreadPriorityTest\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2644919 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 2859319 "mService"
	private explicit_type "IBinderThreadPriorityService"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2859447 "mSavedPriority"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2645047 // mConnection (<unidirectional association>)
	relation 2645047 --->
	  a role_name "mConnection" init_value " new ServiceConnection() {
        public void onServiceConnected(ComponentName name, IBinder service) {
            synchronized (BinderThreadPriorityTest.this) {
                mService = IBinderThreadPriorityService.Stub.asInterface(service);
                BinderThreadPriorityTest.this.notifyAll();
            }
        }

        public void onServiceDisconnected(ComponentName name) {
            mService = null;
        }
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2645047 // mConnection (<unidirectional association>)
	  b parent class_ref 132407 // ServiceConnection
      end

      class 863159 "ServiceStub"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2645175 // <generalisation>
	  relation 2645175 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2645175 // <generalisation>
	    b parent class_ref 863287 // Stub
	end

	operation 6802487 "getThreadPriority"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6802615 "getThreadSchedulerGroup"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6802743 "setPriorityAndCallBack"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "p" explicit_type "int"
	    param inout name "cb" explicit_type "IBinderThreadPriorityService"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6802871 "callBack"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "cb" explicit_type "IBinderThreadPriorityService"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6802999 "fail"
	  class_operation private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6803127 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6803255 "tearDown"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6803383 "getSchedulerGroup"
	class_operation public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6803511 "expectedSchedulerGroup"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "prio" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6803639 "testPassPriorityToService"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6803767 "testCallBackFromServiceWithPriority"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 863415 "BrightnessLimit"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Tries to set the brightness to 0. Should be silently thwarted by the framework."
      classrelation 2645303 // <generalisation>
	relation 2645303 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2645303 // <generalisation>
	  b parent class_ref 128183 // Activity
      end

      classrelation 2645431 // <realization>
	relation 2645431 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2645431 // <realization>
	  b parent class_ref 142647 // OnClickListener
      end

      operation 6803895 "onCreate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6804023 "onClick"
	public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 863543 "BroadcasterTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2645559 // <generalisation>
	relation 2645559 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2645559 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      attribute 2859575 "MESSAGE_A"
	class_attribute const_attribute private explicit_type "int"
	init_value " 23234"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2859703 "MESSAGE_B"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2859831 "MESSAGE_C"
	class_attribute const_attribute private explicit_type "int"
	init_value " 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2859959 "MESSAGE_D"
	class_attribute const_attribute private explicit_type "int"
	init_value " 95"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6804151 "test1"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      class 863671 "Tests2and3"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2646071 // <generalisation>
	  relation 2646071 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2646071 // <generalisation>
	    b parent class_ref 863799 // HandlerTester
	end

	operation 6805431 "Tests2and3"
	  package explicit_return_type ""
	  nparams 1
	    param in name "n" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 2860343 "N"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 2646199 // mHandlers (<unidirectional association>)
	  relation 2646199 --->
	    a role_name "mHandlers" multiplicity "[]" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 2646199 // mHandlers (<unidirectional association>)
	    b parent class_ref 132023 // Handler
	end

	attribute 2860471 "mSuccess"
	  package explicit_type "boolean"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 6805559 "go"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6805687 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6805815 "test2"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6805943 "test3"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6806071 "test4"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6806199 "test5"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6806327 "test6"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end
    end

    class 863799 "HandlerTester"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2645687 // <generalisation>
	relation 2645687 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2645687 // <generalisation>
	  b parent class_ref 295863 // Thread
      end

      operation 6804279 "go"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6804407 "handleMessage"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 287287 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6804535 "HandlerTester"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6804663 "doTest"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6804791 "success"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6804919 "failure"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6805047 "run"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 863927 "H"
	visibility protected 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2645815 // <generalisation>
	  relation 2645815 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2645815 // <generalisation>
	    b parent class_ref 132023 // Handler
	end

	operation 6805175 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6805303 "quit"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 2860087 "mDone"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2860215 "mSuccess"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2645943 // mLooper (<unidirectional association>)
	relation 2645943 --->
	  a role_name "mLooper" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2645943 // mLooper (<unidirectional association>)
	  b parent class_ref 129335 // Looper
      end
    end

    class 864055 "BuildTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides test cases for android.os.Build and, in turn, many of the
system properties set by the build system."
      classrelation 2646327 // <generalisation>
	relation 2646327 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2646327 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      classrelation 2646455 // TAG (<unidirectional association>)
	relation 2646455 --->
	  a role_name "TAG" init_value " \"BuildTest\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2646455 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 6806455 "assertNotEmpty"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "message" type class_ref 129591 // String
	  param inout name "string" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Asserts that a String is non-null and non-empty.  If it is not,
an AssertionFailedError is thrown with the given message."
      end

      operation 6806583 "assertNotEmpty"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "string" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Asserts that a String is non-null and non-empty.  If it is not,
an AssertionFailedError is thrown."
      end

      operation 6806711 "testBuildFields"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment "Asserts that all android.os.Build fields are non-empty and/or in a valid range."
      end
    end

    class 864183 "FileBridgeTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2646583 // <generalisation>
	relation 2646583 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2646583 // <generalisation>
	  b parent class_ref 627895 // AndroidTestCase
      end

      attribute 2860599 "file"
	private explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2860727 "fileOs"
	private explicit_type "FileOutputStream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2646711 // bridge (<unidirectional association>)
	relation 2646711 --->
	  a role_name "bridge" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2646711 // bridge (<unidirectional association>)
	  b parent class_ref 542903 // FileBridge
      end

      classrelation 2646839 // client (<unidirectional association>)
	relation 2646839 --->
	  a role_name "client" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2646839 // client (<unidirectional association>)
	  b parent class_ref 543031 // FileBridgeOutputStream
      end

      operation 6806839 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6806967 "tearDown"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6807095 "assertOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6807223 "closeAndAssertClosed"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6807351 "assertContents"
	private explicit_return_type "void"
	nparams 1
	  param inout name "expected" explicit_type "byte"
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6807479 "testNoWriteNoSync"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6807607 "testNoWriteSync"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6807735 "testWriteNoSync"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6807863 "testWriteSync"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6807991 "testWriteSyncWrite"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6808119 "testEmptyWrite"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6808247 "testWriteAfterClose"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6808375 "testRandomWrite"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6808503 "testGiantWrite"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 864311 "FileObserverTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2646967 // <generalisation>
	relation 2646967 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2646967 // <generalisation>
	  b parent class_ref 627895 // AndroidTestCase
      end

      class 864439 "Observer"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2647223 // <generalisation>
	  relation 2647223 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2647223 // <generalisation>
	    b parent class_ref 279479 // FileObserver
	end

	attribute 2860983 "events"
	  public explicit_type "Map"
	  init_value " Lists.newArrayList()"
	  stereotype "List"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2861111 "totalEvents"
	  public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 6808631 "Observer"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "path" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6808759 "onEvent"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "event" explicit_type "int"
	    param inout name "path" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2647095 // mObserver (<unidirectional association>)
	relation 2647095 --->
	  a role_name "mObserver" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2647095 // mObserver (<unidirectional association>)
	  b parent class_ref 864439 // Observer
      end

      attribute 2860855 "mTestFile"
	private explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6808887 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6809015 "tearDown"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6809143 "testRun"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6809271 "waitForEvent"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6809399 "getEventString"
	private return_type class_ref 129591 // String
	nparams 1
	  param in name "event" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 864567 "FileUtilsTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@MediumTest
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2647351 // <generalisation>
	relation 2647351 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2647351 // <generalisation>
	  b parent class_ref 627895 // AndroidTestCase
      end

      classrelation 2647479 // TEST_DATA (<unidirectional association>)
	relation 2647479 --->
	  a role_name "TEST_DATA" init_value "
            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2647479 // TEST_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 2861239 "mDir"
	private explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2861367 "mTestFile"
	private explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2861495 "mCopyFile"
	private explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2861623 "mTarget"
	private explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6809527 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6809655 "tearDown"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6809783 "testCopyFile"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TODO: test setPermissions(), getPermissions()"
      end

      operation 6809911 "testCopyToFile"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6810039 "testIsFilenameSafe"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6810167 "testReadTextFile"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6810295 "testReadTextFileWithZeroLengthFile"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6810423 "testContains"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6810551 "testDeleteOlderEmptyDir"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6810679 "testDeleteOlderTypical"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6810807 "testDeleteOlderInFuture"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6810935 "testDeleteOlderOnlyAge"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6811063 "testDeleteOlderOnlyCount"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6811191 "testValidExtFilename"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6811319 "testValidFatFilename"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6811447 "testTrimFilename"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6811575 "testBuildUniqueFile_normal"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6811703 "testBuildUniqueFile_unknown"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6811831 "testBuildUniqueFile_dir"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6811959 "testBuildUniqueFile_increment"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6812087 "assertNameEquals"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "expected" type class_ref 129591 // String
	  param inout name "actual" explicit_type "File"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6812215 "touch"
	private explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param in name "age" explicit_type "long"
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6812343 "stageFile"
	private explicit_return_type "void"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param inout name "data" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6812471 "assertDirContents"
	private explicit_return_type "void"
	nparams 1
	  param inout name "" explicit_type "String...expected"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 864695 "HandlerThreadTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2647607 // <generalisation>
	relation 2647607 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2647607 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      attribute 2861751 "TEST_WHAT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2861879 "mGotMessage"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2862007 "mGotMessageWhat"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2862135 "mDidSetup"
	volatile private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2862263 "mLooperTid"
	volatile private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6812599 "testHandlerThread"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end
    end

    class 864823 "IdleHandlerTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2647735 // <generalisation>
	relation 2647735 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2647735 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      class 864951 "BaseTestHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2648247 // <generalisation>
	  relation 2648247 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2648247 // <generalisation>
	    b parent class_ref 865079 // TestHandlerThread
	end

	classrelation 2648375 // mHandler (<unidirectional association>)
	  relation 2648375 --->
	    a role_name "mHandler" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2648375 // mHandler (<unidirectional association>)
	    b parent class_ref 132023 // Handler
	end

	operation 6813751 "BaseTestHandler"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6813879 "go"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6814007 "addIdleHandler"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6814135 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6814263 "queueIdle"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6814391 "testOneShotFirst"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6814519 "testOneShotLater"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6814647 "testRepeatedFirst"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6814775 "testRepeatedLater"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end
    end

    class 865079 "TestHandlerThread"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 2862391 "mDone"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2862519 "mSuccess"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2647863 // mFailure (<unidirectional association>)
	relation 2647863 --->
	  a role_name "mFailure" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2647863 // mFailure (<unidirectional association>)
	  b parent class_ref 446775 // RuntimeException
      end

      classrelation 2647991 // mLooper (<unidirectional association>)
	relation 2647991 --->
	  a role_name "mLooper" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2647991 // mLooper (<unidirectional association>)
	  b parent class_ref 129335 // Looper
      end

      operation 6812727 "go"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6812855 "TestHandlerThread"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6812983 "doTest"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6813111 "getLooper"
	public return_type class_ref 129335 // Looper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6813239 "success"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6813367 "failure"
	public explicit_return_type "void"
	nparams 1
	  param inout name "failure" type class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 865207 "LooperThread"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2648119 // <generalisation>
	  relation 2648119 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2648119 // <generalisation>
	    b parent class_ref 295863 // Thread
	end

	operation 6813495 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6813623 "quit"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 865335 "LocaleListTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2648503 // <generalisation>
	relation 2648503 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2648503 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      operation 6814903 "testConstructor"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6815031 "testConstructor_nullThrows"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6815159 "testGetDefault_localeSetDefaultCalledButNoChangeNecessary"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end
    end

    class 865463 "MemoryFileTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2648631 // <generalisation>
	relation 2648631 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2648631 // <generalisation>
	  b parent class_ref 627895 // AndroidTestCase
      end

      operation 6815287 "compareBuffers"
	private explicit_return_type "void"
	nparams 3
	  param inout name "buffer1" explicit_type "byte"
	  param inout name "buffer2" explicit_type "byte"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6815415 "testPurge"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Keep allocating new files till the system purges them.

 Flaky test - temporarily suppress from large suite for now
 @LargeTest"
      end

      operation 6815543 "testRun"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6815671 "testOutputStreamAdvances"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " http://code.google.com/p/android/issues/detail?id=11415"
      end

      operation 6815799 "readIndexOutOfBoundsException"
	private explicit_return_type "void"
	nparams 3
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param inout name "msg" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Tests for the IndexOutOfBoundsException cases in read()."
      end

      operation 6815927 "testReadNegativeOffset"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6816055 "testReadNegativeCount"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6816183 "testReadOffsetOverflow"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6816311 "testReadOffsetCountOverflow"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6816439 "testReadEOF"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment " Test behavior of read() at end of file"
      end

      operation 6816567 "testCloseClose"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment " Tests that close() is idempotent"
      end

      operation 6816695 "testCloseRead"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment " Tests that we can't read from a closed memory file"
      end

      operation 6816823 "testCloseWrite"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment " Tests that we can't write to a closed memory file"
      end

      operation 6816951 "testCloseAllowPurging"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment " Tests that we can't call allowPurging() after close()"
      end

      operation 6817079 "testCloseLeak"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
	comment " Tests that we don't leak file descriptors or mmap areas"
      end

      attribute 2862647 "testString"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[] {
        3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8, 9, 7, 9, 3, 2, 3, 8, 4, 6, 2, 6, 4, 3, 3, 8, 3, 2, 7, 9, 5, 0, 2, 8, 8, 4, 1, 9, 7, 1, 6, 9, 3, 9, 9, 3, 7, 5, 1, 0, 5, 8, 2, 0, 9, 7, 4, 9, 4, 4, 5, 9, 2, 3, 0, 7, 8, 1, 6, 4,
        0, 6, 2, 8, 6, 2, 0, 8, 9, 9, 8, 6, 2, 8, 0, 3, 4, 8, 2, 5, 3, 4, 2, 1, 1, 7, 0, 6, 7, 9, 8, 2, 1, 4, 8, 0, 8, 6, 5, 1, 3, 2, 8, 2, 3, 0, 6, 6, 4, 7, 0, 9, 3, 8, 4, 4, 6, 0, 9, 5, 5, 0, 5, 8, 2, 2, 3, 1, 7, 2,
        5, 3, 5, 9, 4, 0, 8, 1, 2, 8, 4, 8, 1, 1, 1, 7, 4, 5, 0, 2, 8, 4, 1, 0, 2, 7, 0, 1, 9, 3, 8, 5, 2, 1, 1, 0, 5, 5, 5, 9, 6, 4, 4, 6, 2, 2, 9, 4, 8, 9, 5, 4, 9, 3, 0, 3, 8, 1, 9, 6, 4, 4, 2, 8, 8, 1, 0, 9, 7, 5,
        6, 6, 5, 9, 3, 3, 4, 4, 6, 1, 2, 8, 4, 7, 5, 6, 4, 8, 2, 3, 3, 7, 8, 6, 7, 8, 3, 1, 6, 5, 2, 7, 1, 2, 0, 1, 9, 0, 9, 1, 4, 5, 6, 4, 8, 5, 6, 6, 9, 2, 3, 4, 6, 0, 3, 4, 8, 6, 1, 0, 4, 5, 4, 3, 2, 6, 6, 4, 8, 2,
        1, 3, 3, 9, 3, 6, 0, 7, 2, 6, 0, 2, 4, 9, 1, 4, 1, 2, 7, 3, 7, 2, 4, 5, 8, 7, 0, 0, 6, 6, 0, 6, 3, 1, 5, 5, 8, 8, 1, 7, 4, 8, 8, 1, 5, 2, 0, 9, 2, 0, 9, 6, 2, 8, 2, 9, 2, 5, 4, 0, 9, 1, 7, 1, 5, 3, 6, 4, 3, 6,
        7, 8, 9, 2, 5, 9, 0, 3, 6, 0, 0, 1, 1, 3, 3, 0, 5, 3, 0, 5, 4, 8, 8, 2, 0, 4, 6, 6, 5, 2, 1, 3, 8, 4, 1, 4, 6, 9, 5, 1, 9, 4, 1, 5, 1, 1, 6, 0, 9, 4, 3, 3, 0, 5, 7, 2, 7, 0, 3, 6, 5, 7, 5, 9, 5, 9, 1, 9, 5, 3,
        0, 9, 2, 1, 8, 6, 1, 1, 7, 3, 8, 1, 9, 3, 2, 6, 1, 1, 7, 9, 3, 1, 0, 5, 1, 1, 8, 5, 4, 8, 0, 7, 4, 4, 6, 2, 3, 7, 9, 9, 6, 2, 7, 4, 9, 5, 6, 7, 3, 5, 1, 8, 8, 5, 7, 5, 2, 7, 2, 4, 8, 9, 1, 2, 2, 7, 9, 3, 8, 1,
        8, 3, 0, 1, 1, 9, 4, 9, 1, 2, 9, 8, 3, 3, 6, 7, 3, 3, 6, 2, 4, 4, 0, 6, 5, 6, 6, 4, 3, 0, 8, 6, 0, 2, 1, 3, 9, 4, 9, 4, 6, 3, 9, 5, 2, 2, 4, 7, 3, 7, 1, 9, 0, 7, 0, 2, 1, 7, 9, 8, 6, 0, 9, 4, 3, 7, 0, 2, 7, 7,
        0, 5, 3, 9, 2, 1, 7, 1, 7, 6, 2, 9, 3, 1, 7, 6, 7, 5, 2, 3, 8, 4, 6, 7, 4, 8, 1, 8, 4, 6, 7, 6, 6, 9, 4, 0, 5, 1, 3, 2, 0, 0, 0, 5, 6, 8, 1, 2, 7, 1, 4, 5, 2, 6, 3, 5, 6, 0, 8, 2, 7, 7, 8, 5, 7, 7, 1, 3, 4, 2,
        7, 5, 7, 7, 8, 9, 6, 0, 9, 1, 7, 3, 6, 3, 7, 1, 7, 8, 7, 2, 1, 4, 6, 8, 4, 4, 0, 9, 0, 1, 2, 2, 4, 9, 5, 3, 4, 3, 0, 1, 4, 6, 5, 4, 9, 5, 8, 5, 3, 7, 1, 0, 5, 0, 7, 9, 2, 2, 7, 9, 6, 8, 9, 2, 5, 8, 9, 2, 3, 5,
        4, 2, 0, 1, 9, 9, 5, 6, 1, 1, 2, 1, 2, 9, 0, 2, 1, 9, 6, 0, 8, 6, 4, 0, 3, 4, 4, 1, 8, 1, 5, 9, 8, 1, 3, 6, 2, 9, 7, 7, 4, 7, 7, 1, 3, 0, 9, 9, 6, 0, 5, 1, 8, 7, 0, 7, 2, 1, 1, 3, 4, 9, 9, 9, 9, 9, 9, 8, 3, 7,
        2, 9, 7, 8, 0, 4, 9, 9, 5, 1, 0, 5, 9, 7, 3, 1, 7, 3, 2, 8, 1, 6, 0, 9, 6, 3, 1, 8, 5, 9, 5, 0, 2, 4, 4, 5, 9, 4, 5, 5, 3, 4, 6, 9, 0, 8, 3, 0, 2, 6, 4, 2, 5, 2, 2, 3, 0, 8, 2, 5, 3, 3, 4, 4, 6, 8, 5, 0, 3, 5,
        2, 6, 1, 9, 3, 1, 1, 8, 8, 1, 7, 1, 0, 1, 0, 0, 0, 3, 1, 3, 7, 8, 3, 8, 7, 5, 2, 8, 8, 6, 5, 8, 7, 5, 3, 3, 2, 0, 8, 3, 8, 1, 4, 2, 0, 6, 1, 7, 1, 7, 7, 6, 6, 9, 1, 4, 7, 3, 0, 3, 5, 9, 8, 2, 5, 3, 4, 9, 0, 4,
        2, 8, 7, 5, 5, 4, 6, 8, 7, 3, 1, 1, 5, 9, 5, 6, 2, 8, 6, 3, 8, 8, 2, 3, 5, 3, 7, 8, 7, 5, 9, 3, 7, 5, 1, 9, 5, 7, 7, 8, 1, 8, 5, 7, 7, 8, 0, 5, 3, 2, 1, 7, 1, 2, 2, 6, 8, 0, 6, 6, 1, 3, 0, 0, 1, 9, 2, 7, 8, 7,
        6, 6, 1, 1, 1, 9, 5, 9, 0, 9, 2, 1, 6, 4, 2, 0, 1, 9, 8, 9, 3, 8, 0, 9, 5, 2, 5, 7, 2, 0, 1, 0, 6, 5, 4, 8, 5, 8, 6, 3, 2, 7, 8, 8, 6, 5, 9, 3, 6, 1, 5, 3, 3, 8, 1, 8, 2, 7, 9, 6, 8, 2, 3, 0, 3, 0, 1, 9, 5, 2,
        0, 3, 5, 3, 0, 1, 8, 5, 2, 9, 6, 8, 9, 9, 5, 7, 7, 3, 6, 2, 2, 5, 9, 9, 4, 1, 3, 8, 9, 1, 2, 4, 9, 7, 2, 1, 7, 7, 5, 2, 8, 3, 4, 7, 9, 1, 3, 1, 5, 1, 5, 5, 7, 4, 8, 5, 7, 2, 4, 2, 4, 5, 4, 1, 5, 0, 6, 9, 5, 9,
        5, 0, 8, 2, 9, 5, 3, 3, 1, 1, 6, 8, 6, 1, 7, 2, 7, 8, 5, 5, 8, 8, 9, 0, 7, 5, 0, 9, 8, 3, 8, 1, 7, 5, 4, 6, 3, 7, 4, 6, 4, 9, 3, 9, 3, 1, 9, 2, 5, 5, 0, 6, 0, 4, 0, 0, 9, 2, 7, 7, 0, 1, 6, 7, 1, 1, 3, 9, 0, 0,
        9, 8, 4, 8, 8, 2, 4, 0, 1, 2, 8, 5, 8, 3, 6, 1, 6, 0, 3, 5, 6, 3, 7, 0, 7, 6, 6, 0, 1, 0, 4, 7, 1, 0, 1, 8, 1, 9, 4, 2, 9, 5, 5, 5, 9, 6, 1, 9, 8, 9, 4, 6, 7, 6, 7, 8, 3, 7, 4, 4, 9, 4, 4, 8, 2, 5, 5, 3, 7, 9,
        7, 7, 4, 7, 2, 6, 8, 4, 7, 1, 0, 4, 0, 4, 7, 5, 3, 4, 6, 4, 6, 2, 0, 8, 0, 4, 6, 6, 8, 4, 2, 5, 9, 0, 6, 9, 4, 9, 1, 2, 9, 3, 3, 1, 3, 6, 7, 7, 0, 2, 8, 9, 8, 9, 1, 5, 2, 1, 0, 4, 7, 5, 2, 1, 6, 2, 0, 5, 6, 9,
        6, 6, 0, 2, 4, 0, 5, 8, 0, 3, 8, 1, 5, 0, 1, 9, 3, 5, 1, 1, 2, 5, 3, 3, 8, 2, 4, 3, 0, 0, 3, 5, 5, 8, 7, 6, 4, 0, 2, 4, 7, 4, 9, 6, 4, 7, 3, 2, 6, 3, 9, 1, 4, 1, 9, 9, 2, 7, 2, 6, 0, 4, 2, 6, 9, 9, 2, 2, 7, 9,
        6, 7, 8, 2, 3, 5, 4, 7, 8, 1, 6, 3, 6, 0, 0, 9, 3, 4, 1, 7, 2, 1, 6, 4, 1, 2, 1, 9, 9, 2, 4, 5, 8, 6, 3, 1, 5, 0, 3, 0, 2, 8, 6, 1, 8, 2, 9, 7, 4, 5, 5, 5, 7, 0, 6, 7, 4, 9, 8, 3, 8, 5, 0, 5, 4, 9, 4, 5, 8, 8,
        5, 8, 6, 9, 2, 6, 9, 9, 5, 6, 9, 0, 9, 2, 7, 2, 1, 0, 7, 9, 7, 5, 0, 9, 3, 0, 2, 9, 5, 5, 3, 2, 1, 1, 6, 5, 3, 4, 4, 9, 8, 7, 2, 0, 2, 7, 5, 5, 9, 6, 0, 2, 3, 6, 4, 8, 0, 6, 6, 5, 4, 9, 9, 1, 1, 9, 8, 8, 1, 8,
        3, 4, 7, 9, 7, 7, 5, 3, 5, 6, 6, 3, 6, 9, 8, 0, 7, 4, 2, 6, 5, 4, 2, 5, 2, 7, 8, 6, 2, 5, 5, 1, 8, 1, 8, 4, 1, 7, 5, 7, 4, 6, 7, 2, 8, 9, 0, 9, 7, 7, 7, 7, 2, 7, 9, 3, 8, 0, 0, 0, 8, 1, 6, 4, 7, 0, 6, 0, 0, 1,
        6, 1, 4, 5, 2, 4, 9, 1, 9, 2, 1, 7, 3, 2, 1, 7, 2, 1, 4, 7, 7, 2, 3, 5, 0, 1, 4, 1, 4, 4, 1, 9, 7, 3, 5, 6, 8, 5, 4, 8, 1, 6, 1, 3, 6, 1, 1, 5, 7, 3, 5, 2, 5, 5, 2, 1, 3, 3, 4, 7, 5, 7, 4, 1, 8, 4, 9, 4, 6, 8,
        4, 3, 8, 5, 2, 3, 3, 2, 3, 9, 0, 7, 3, 9, 4, 1, 4, 3, 3, 3, 4, 5, 4, 7, 7, 6, 2, 4, 1, 6, 8, 6, 2, 5, 1, 8, 9, 8, 3, 5, 6, 9, 4, 8, 5, 5, 6, 2, 0, 9, 9, 2, 1, 9, 2, 2, 2, 1, 8, 4, 2, 7, 2, 5, 5, 0, 2, 5, 4, 2,
        5, 6, 8, 8, 7, 6, 7, 1, 7, 9, 0, 4, 9, 4, 6, 0, 1, 6, 5, 3, 4, 6, 6, 8, 0, 4, 9, 8, 8, 6, 2, 7, 2, 3, 2, 7, 9, 1, 7, 8, 6, 0, 8, 5, 7, 8, 4, 3, 8, 3, 8, 2, 7, 9, 6, 7, 9, 7, 6, 6, 8, 1, 4, 5, 4, 1, 0, 0, 9, 5,
        3, 8, 8, 3, 7, 8, 6, 3, 6, 0, 9, 5, 0, 6, 8, 0, 0, 6, 4, 2, 2, 5, 1, 2, 5, 2, 0, 5, 1, 1, 7, 3, 9, 2, 9, 8, 4, 8, 9, 6, 0, 8, 4, 1, 2, 8, 4, 8, 8, 6, 2, 6, 9, 4, 5, 6, 0, 4, 2, 4, 1, 9, 6, 5, 2, 8, 5, 0, 2, 2,
        2, 1, 0, 6, 6, 1, 1, 8, 6, 3, 0, 6, 7, 4, 4, 2, 7, 8, 6, 2, 2, 0, 3, 9, 1, 9, 4, 9, 4, 5, 0, 4, 7, 1, 2, 3, 7, 1, 3, 7, 8, 6, 9, 6, 0, 9, 5, 6, 3, 6, 4, 3, 7, 1, 9, 1, 7, 2, 8, 7, 4, 6, 7, 7, 6, 4, 6, 5, 7, 5,
        7, 3, 9, 6, 2, 4, 1, 3, 8, 9, 0, 8, 6, 5, 8, 3, 2, 6, 4, 5, 9, 9, 5, 8, 1, 3, 3, 9, 0, 4, 7, 8, 0, 2, 7, 5, 9, 0, 0, 9, 9, 4, 6, 5, 7, 6, 4, 0, 7, 8, 9, 5, 1, 2, 6, 9, 4, 6, 8, 3, 9, 8, 3, 5, 2, 5, 9, 5, 7, 0,
        9, 8, 2, 5, 8, 2, 2, 6, 2, 0, 5, 2, 2, 4, 8, 9, 4, 0, 7, 7, 2, 6, 7, 1, 9, 4, 7, 8, 2, 6, 8, 4, 8, 2, 6, 0, 1, 4, 7, 6, 9, 9, 0, 9, 0, 2, 6, 4, 0, 1, 3, 6, 3, 9, 4, 4, 3, 7, 4, 5, 5, 3, 0, 5, 0, 6, 8, 2, 0, 3,
        4, 9, 6, 2, 5, 2, 4, 5, 1, 7, 4, 9, 3, 9, 9, 6, 5, 1, 4, 3, 1, 4, 2, 9, 8, 0, 9, 1, 9, 0, 6, 5, 9, 2, 5, 0, 9, 3, 7, 2, 2, 1, 6, 9, 6, 4, 6, 1, 5, 1, 5, 7, 0, 9, 8, 5, 8, 3, 8, 7, 4, 1, 0, 5, 9, 7, 8, 8, 5, 9,
        5, 9, 7, 7, 2, 9, 7, 5, 4, 9, 8, 9, 3, 0, 1, 6, 1, 7, 5, 3, 9, 2, 8, 4, 6, 8, 1, 3, 8, 2, 6, 8, 6, 8, 3, 8, 6, 8, 9, 4, 2, 7, 7, 4, 1, 5, 5, 9, 9, 1, 8, 5, 5, 9, 2, 5, 2, 4, 5, 9, 5, 3, 9, 5, 9, 4, 3, 1, 0, 4,
        9, 9, 7, 2, 5, 2, 4, 6, 8, 0, 8, 4, 5, 9, 8, 7, 2, 7, 3, 6, 4, 4, 6, 9, 5, 8, 4, 8, 6, 5, 3, 8, 3, 6, 7, 3, 6, 2, 2, 2, 6, 2, 6, 0, 9, 9, 1, 2, 4, 6, 0, 8, 0, 5, 1, 2, 4, 3, 8, 8, 4, 3, 9, 0, 4, 5, 1, 2, 4, 4,
        1, 3, 6, 5, 4, 9, 7, 6, 2, 7, 8, 0, 7, 9, 7, 7, 1, 5, 6, 9, 1, 4, 3, 5, 9, 9, 7, 7, 0, 0, 1, 2, 9, 6, 1, 6, 0, 8, 9, 4, 4, 1, 6, 9, 4, 8, 6, 8, 5, 5, 5, 8, 4, 8, 4, 0, 6, 3, 5, 3, 4, 2, 2, 0, 7, 2, 2, 2, 5, 8,
        2, 8, 4, 8, 8, 6, 4, 8, 1, 5, 8, 4, 5, 6, 0, 2, 8, 5, 0, 6, 0, 1, 6, 8, 4, 2, 7, 3, 9, 4, 5, 2, 2, 6, 7, 4, 6, 7, 6, 7, 8, 8, 9, 5, 2, 5, 2, 1, 3, 8, 5, 2, 2, 5, 4, 9, 9, 5, 4, 6, 6, 6, 7, 2, 7, 8, 2, 3, 9, 8,
        6, 4, 5, 6, 5, 9, 6, 1, 1, 6, 3, 5, 4, 8, 8, 6, 2, 3, 0, 5, 7, 7, 4, 5, 6, 4, 9, 8, 0, 3, 5, 5, 9, 3, 6, 3, 4, 5, 6, 8, 1, 7, 4, 3, 2, 4, 1, 1, 2, 5, 1, 5, 0, 7, 6, 0, 6, 9, 4, 7, 9, 4, 5, 1, 0, 9, 6, 5, 9, 6,
        0, 9, 4, 0, 2, 5, 2, 2, 8, 8, 7, 9, 7, 1, 0, 8, 9, 3, 1, 4, 5, 6, 6, 9, 1, 3, 6, 8, 6, 7, 2, 2, 8, 7, 4, 8, 9, 4, 0, 5, 6, 0, 1, 0, 1, 5, 0, 3, 3, 0, 8, 6, 1, 7, 9, 2, 8, 6, 8, 0, 9, 2, 0, 8, 7, 4, 7, 6, 0, 9,
        1, 7, 8, 2, 4, 9, 3, 8, 5, 8, 9, 0, 0, 9, 7, 1, 4, 9, 0, 9, 6, 7, 5, 9, 8, 5, 2, 6, 1, 3, 6, 5, 5, 4, 9, 7, 8, 1, 8, 9, 3, 1, 2, 9, 7, 8, 4, 8, 2, 1, 6, 8, 2, 9, 9, 8, 9, 4, 8, 7, 2, 2, 6, 5, 8, 8, 0, 4, 8, 5,
        7, 5, 6, 4, 0, 1, 4, 2, 7, 0, 4, 7, 7, 5, 5, 5, 1, 3, 2, 3, 7, 9, 6, 4, 1, 4, 5, 1, 5, 2, 3, 7, 4, 6, 2, 3, 4, 3, 6, 4, 5, 4, 2, 8, 5, 8, 4, 4, 4, 7, 9, 5, 2, 6, 5, 8, 6, 7, 8, 2, 1, 0, 5, 1, 1, 4, 1, 3, 5, 4,
        7, 3, 5, 7, 3, 9, 5, 2, 3, 1, 1, 3, 4, 2, 7, 1, 6, 6, 1, 0, 2, 1, 3, 5, 9, 6, 9, 5, 3, 6, 2, 3, 1, 4, 4, 2, 9, 5, 2, 4, 8, 4, 9, 3, 7, 1, 8, 7, 1, 1, 0, 1, 4, 5, 7, 6, 5, 4, 0, 3, 5, 9, 0, 2, 7, 9, 9, 3, 4, 4,
        0, 3, 7, 4, 2, 0, 0, 7, 3, 1, 0, 5, 7, 8, 5, 3, 9, 0, 6, 2, 1, 9, 8, 3, 8, 7, 4, 4, 7, 8, 0, 8, 4, 7, 8, 4, 8, 9, 6, 8, 3, 3, 2, 1, 4, 4, 5, 7, 1, 3, 8, 6, 8, 7, 5, 1, 9, 4, 3, 5, 0, 6, 4, 3, 0, 2, 1, 8, 4, 5,
        3, 1, 9, 1, 0, 4, 8, 4, 8, 1, 0, 0, 5, 3, 7, 0, 6, 1, 4, 6, 8, 0, 6, 7, 4, 9, 1, 9, 2, 7, 8, 1, 9, 1, 1, 9, 7, 9, 3, 9, 9, 5, 2, 0, 6, 1, 4, 1, 9, 6, 6, 3, 4, 2, 8, 7, 5, 4, 4, 4, 0, 6, 4, 3, 7, 4, 5, 1, 2, 3,
        7, 1, 8, 1, 9, 2, 1, 7, 9, 9, 9, 8, 3, 9, 1, 0, 1, 5, 9, 1, 9, 5, 6, 1, 8, 1, 4, 6, 7, 5, 1, 4, 2, 6, 9, 1, 2, 3, 9, 7, 4, 8, 9, 4, 0, 9, 0, 7, 1, 8, 6, 4, 9, 4, 2, 3, 1, 9, 6, 1, 5, 6, 7, 9, 4, 5, 2, 0, 8, 0,
        9, 5, 1, 4, 6, 5, 5, 0, 2, 2, 5, 2, 3, 1, 6, 0, 3, 8, 8, 1, 9, 3, 0, 1, 4, 2, 0, 9, 3, 7, 6, 2, 1, 3, 7, 8, 5, 5, 9, 5, 6, 6, 3, 8, 9, 3, 7, 7, 8, 7, 0, 8, 3, 0, 3, 9, 0, 6, 9, 7, 9, 2, 0, 7, 7, 3, 4, 6, 7, 2,
        2, 1, 8, 2, 5, 6, 2, 5, 9, 9, 6, 6, 1, 5, 0, 1, 4, 2, 1, 5, 0, 3, 0, 6, 8, 0, 3, 8, 4, 4, 7, 7, 3, 4, 5, 4, 9, 2, 0, 2, 6, 0, 5, 4, 1, 4, 6, 6, 5, 9, 2, 5, 2, 0, 1, 4, 9, 7, 4, 4, 2, 8, 5, 0, 7, 3, 2, 5, 1, 8,
        6, 6, 6, 0, 0, 2, 1, 3, 2, 4, 3, 4, 0, 8, 8, 1, 9, 0, 7, 1, 0, 4, 8, 6, 3, 3, 1, 7, 3, 4, 6, 4, 9, 6, 5, 1, 4, 5, 3, 9, 0, 5, 7, 9, 6, 2, 6, 8, 5, 6, 1, 0, 0, 5, 5, 0, 8, 1, 0, 6, 6, 5, 8, 7, 9, 6, 9, 9, 8, 1,
        6, 3, 5, 7, 4, 7, 3, 6, 3, 8, 4, 0, 5, 2, 5, 7, 1, 4, 5, 9, 1, 0, 2, 8, 9, 7, 0, 6, 4, 1, 4, 0, 1, 1, 0, 9, 7, 1, 2, 0, 6, 2, 8, 0, 4, 3, 9, 0, 3, 9, 7, 5, 9, 5, 1, 5, 6, 7, 7, 1, 5, 7, 7, 0, 0, 4, 2, 0, 3, 3,
        7, 8, 6, 9, 9, 3, 6, 0, 0, 7, 2, 3, 0, 5, 5, 8, 7, 6, 3, 1, 7, 6, 3, 5, 9, 4, 2, 1, 8, 7, 3, 1, 2, 5, 1, 4, 7, 1, 2, 0, 5, 3, 2, 9, 2, 8, 1, 9, 1, 8, 2, 6, 1, 8, 6, 1, 2, 5, 8, 6, 7, 3, 2, 1, 5, 7, 9, 1, 9, 8,
        4, 1, 4, 8, 4, 8, 8, 2, 9, 1, 6, 4, 4, 7, 0, 6, 0, 9, 5, 7, 5, 2, 7, 0, 6, 9, 5, 7, 2, 2, 0, 9, 1, 7, 5, 6, 7, 1, 1, 6, 7, 2, 2, 9, 1, 0, 9, 8, 1, 6, 9, 0, 9, 1, 5, 2, 8, 0, 1, 7, 3, 5, 0, 6, 7, 1, 2, 7, 4, 8,
        5, 8, 3, 2, 2, 2, 8, 7, 1, 8, 3, 5, 2, 0, 9, 3, 5, 3, 9, 6, 5, 7, 2, 5, 1, 2, 1, 0, 8, 3, 5, 7, 9, 1, 5, 1, 3, 6, 9, 8, 8, 2, 0, 9, 1, 4, 4, 4, 2, 1, 0, 0, 6, 7, 5, 1, 0, 3, 3, 4, 6, 7, 1, 1, 0, 3, 1, 4, 1, 2,
        6, 7, 1, 1, 1, 3, 6, 9, 9, 0, 8, 6, 5, 8, 5, 1, 6, 3, 9, 8, 3, 1, 5, 0, 1, 9, 7, 0, 1, 6, 5, 1, 5, 1, 1, 6, 8, 5, 1, 7, 1, 4, 3, 7, 6, 5, 7, 6, 1, 8, 3, 5, 1, 5, 5, 6, 5, 0, 8, 8, 4, 9, 0, 9, 9, 8, 9, 8, 5, 9,
        9, 8, 2, 3, 8, 7, 3, 4, 5, 5, 2, 8, 3, 3, 1, 6, 3, 5, 5, 0, 7, 6, 4, 7, 9, 1, 8, 5, 3, 5, 8, 9, 3, 2, 2, 6, 1, 8, 5, 4, 8, 9, 6, 3, 2, 1, 3, 2, 9, 3, 3, 0, 8, 9, 8, 5, 7, 0, 6, 4, 2, 0, 4, 6, 7, 5, 2, 5, 9, 0,
        7, 0, 9, 1, 5, 4, 8, 1, 4, 1, 6, 5, 4, 9, 8, 5, 9, 4, 6, 1, 6, 3, 7, 1, 8, 0, 2, 7, 0, 9, 8, 1, 9, 9, 4, 3, 0, 9, 9, 2, 4, 4, 8, 8, 9, 5, 7, 5, 7, 1, 2, 8, 2, 8, 9, 0, 5, 9, 2, 3, 2, 3, 3, 2, 6, 0, 9, 7, 2, 9,
        9, 7, 1, 2, 0, 8, 4, 4, 3, 3, 5, 7, 3, 2, 6, 5, 4, 8, 9, 3, 8, 2, 3, 9, 1, 1, 9, 3, 2, 5, 9, 7, 4, 6, 3, 6, 6, 7, 3, 0, 5, 8, 3, 6, 0, 4, 1, 4, 2, 8, 1, 3, 8, 8, 3, 0, 3, 2, 0, 3, 8, 2, 4, 9, 0, 3, 7, 5, 8, 9,
        8, 5, 2, 4, 3, 7, 4, 4, 1, 7, 0, 2, 9, 1, 3, 2, 7, 6, 5, 6, 1, 8, 0, 9, 3, 7, 7, 3, 4, 4, 4, 0, 3, 0, 7, 0, 7, 4, 6, 9, 2, 1, 1, 2, 0, 1, 9, 1, 3, 0, 2, 0, 3, 3, 0, 3, 8, 0, 1, 9, 7, 6, 2, 1, 1, 0, 1, 1, 0, 0,
        4, 4, 9, 2, 9, 3, 2, 1, 5, 1, 6, 0, 8, 4, 2, 4, 4, 4, 8, 5, 9, 6, 3, 7, 6, 6, 9, 8, 3, 8, 9, 5, 2, 2, 8, 6, 8, 4, 7, 8, 3, 1, 2, 3, 5, 5, 2, 6, 5, 8, 2, 1, 3, 1, 4, 4, 9, 5, 7, 6, 8, 5, 7, 2, 6, 2, 4, 3, 3, 4,
        4, 1, 8, 9, 3, 0, 3, 9, 6, 8, 6, 4, 2, 6, 2, 4, 3, 4, 1, 0, 7, 7, 3, 2, 2, 6, 9, 7, 8, 0, 2, 8, 0, 7, 3, 1, 8, 9, 1, 5, 4, 4, 1, 1, 0, 1, 0, 4, 4, 6, 8, 2, 3, 2, 5, 2, 7, 1, 6, 2, 0, 1, 0, 5, 2, 6, 5, 2, 2, 7,
        2, 1, 1, 1, 6, 6, 0, 3, 9, 6, 6, 6, 5, 5, 7, 3, 0, 9, 2, 5, 4, 7, 1, 1, 0, 5, 5, 7, 8, 5, 3, 7, 6, 3, 4, 6, 6, 8, 2, 0, 6, 5, 3, 1, 0, 9, 8, 9, 6, 5, 2, 6, 9, 1, 8, 6, 2, 0, 5, 6, 4, 7, 6, 9, 3, 1, 2, 5, 7, 0,
        5, 8, 6, 3, 5, 6, 6, 2, 0, 1, 8, 5, 5, 8, 1, 0, 0, 7, 2, 9, 3, 6, 0, 6, 5, 9, 8, 7, 6, 4, 8, 6, 1, 1, 7, 9, 1, 0, 4, 5, 3, 3, 4, 8, 8, 5, 0, 3, 4, 6, 1, 1, 3, 6, 5, 7, 6, 8, 6, 7, 5, 3, 2, 4, 9, 4, 4, 1, 6, 6,
        8, 0, 3, 9, 6, 2, 6, 5, 7, 9, 7, 8, 7, 7, 1, 8, 5, 5, 6, 0, 8, 4, 5, 5, 2, 9, 6, 5, 4, 1, 2, 6, 6, 5, 4, 0, 8, 5, 3, 0, 6, 1, 4, 3, 4, 4, 4, 3, 1, 8, 5, 8, 6, 7, 6, 9, 7, 5, 1, 4, 5, 6, 6, 1, 4, 0, 6, 8, 0, 0,
        7, 0, 0, 2, 3, 7, 8, 7, 7, 6, 5, 9, 1, 3, 4, 4, 0, 1, 7, 1, 2, 7, 4, 9, 4, 7, 0, 4, 2, 0, 5, 6, 2, 2, 3, 0, 5, 3, 8, 9, 9, 4, 5, 6, 1, 3, 1, 4, 0, 7, 1, 1, 2, 7, 0, 0, 0, 4, 0, 7, 8, 5, 4, 7, 3, 3, 2, 6, 9, 9,
        3, 9, 0, 8, 1, 4, 5, 4, 6, 6, 4, 6, 4, 5, 8, 8, 0, 7, 9, 7, 2, 7, 0, 8, 2, 6, 6, 8, 3, 0, 6, 3, 4, 3, 2, 8, 5, 8, 7, 8, 5, 6, 9, 8, 3, 0, 5, 2, 3, 5, 8, 0, 8, 9, 3, 3, 0, 6, 5, 7, 5, 7, 4, 0, 6, 7, 9, 5, 4, 5,
        7, 1, 6, 3, 7, 7, 5, 2, 5, 4, 2, 0, 2, 1, 1, 4, 9, 5, 5, 7, 6, 1, 5, 8, 1, 4, 0, 0, 2, 5, 0, 1, 2, 6, 2, 2, 8, 5, 9, 4, 1, 3, 0, 2, 1, 6, 4, 7, 1, 5, 5, 0, 9, 7, 9, 2, 5, 9, 2, 3, 0, 9, 9, 0, 7, 9, 6, 5, 4, 7,
        3, 7, 6, 1, 2, 5, 5, 1, 7, 6, 5, 6, 7, 5, 1, 3, 5, 7, 5, 1, 7, 8, 2, 9, 6, 6, 6, 4, 5, 4, 7, 7, 9, 1, 7, 4, 5, 0, 1, 1, 2, 9, 9, 6, 1, 4, 8, 9, 0, 3, 0, 4, 6, 3, 9, 9, 4, 7, 1, 3, 2, 9, 6, 2, 1, 0, 7, 3, 4, 0,
        4, 3, 7, 5, 1, 8, 9, 5, 7, 3, 5, 9, 6, 1, 4, 5, 8, 9, 0, 1, 9, 3, 8, 9, 7, 1, 3, 1, 1, 1, 7, 9, 0, 4, 2, 9, 7, 8, 2, 8, 5, 6, 4, 7, 5, 0, 3, 2, 0, 3, 1, 9, 8, 6, 9, 1, 5, 1, 4, 0, 2, 8, 7, 0, 8, 0, 8, 5, 9, 9,
        0, 4, 8, 0, 1, 0, 9, 4, 1, 2, 1, 4, 7, 2, 2, 1, 3, 1, 7, 9, 4, 7, 6, 4, 7, 7, 7, 2, 6, 2, 2, 4, 1, 4, 2, 5, 4, 8, 5, 4, 5, 4, 0, 3, 3, 2, 1, 5, 7, 1, 8, 5, 3, 0, 6, 1, 4, 2, 2, 8, 8, 1, 3, 7, 5, 8, 5, 0, 4, 3,
        0, 6, 3, 3, 2, 1, 7, 5, 1, 8, 2, 9, 7, 9, 8, 6, 6, 2, 2, 3, 7, 1, 7, 2, 1, 5, 9, 1, 6, 0, 7, 7, 1, 6, 6, 9, 2, 5, 4, 7, 4, 8, 7, 3, 8, 9, 8, 6, 6, 5, 4, 9, 4, 9, 4, 5, 0, 1, 1, 4, 6, 5, 4, 0, 6, 2, 8, 4, 3, 3,
        6, 6, 3, 9, 3, 7, 9, 0, 0, 3, 9, 7, 6, 9, 2, 6, 5, 6, 7, 2, 1, 4, 6, 3, 8, 5, 3, 0, 6, 7, 3, 6, 0, 9, 6, 5, 7, 1, 2, 0, 9, 1, 8, 0, 7, 6, 3, 8, 3, 2, 7, 1, 6, 6, 4, 1, 6, 2, 7, 4, 8, 8, 8, 8, 0, 0, 7, 8, 6, 9,
        2, 5, 6, 0, 2, 9, 0, 2, 2, 8, 4, 7, 2, 1, 0, 4, 0, 3, 1, 7, 2, 1, 1, 8, 6, 0, 8, 2, 0, 4, 1, 9, 0, 0, 0, 4, 2, 2, 9, 6, 6, 1, 7, 1, 1, 9, 6, 3, 7, 7, 9, 2, 1, 3, 3, 7, 5, 7, 5, 1, 1, 4, 9, 5, 9, 5, 0, 1, 5, 6,
        6, 0, 4, 9, 6, 3, 1, 8, 6, 2, 9, 4, 7, 2, 6, 5, 4, 7, 3, 6, 4, 2, 5, 2, 3, 0, 8, 1, 7, 7, 0, 3, 6, 7, 5, 1, 5, 9, 0, 6, 7, 3, 5, 0, 2, 3, 5, 0, 7, 2, 8, 3, 5, 4, 0, 5, 6, 7, 0, 4, 0, 3, 8, 6, 7, 4, 3, 5, 1, 3,
        6, 2, 2, 2, 2, 4, 7, 7, 1, 5, 8, 9, 1, 5, 0, 4, 9, 5, 3, 0, 9, 8, 4, 4, 4, 8, 9, 3, 3, 3, 0, 9, 6, 3, 4, 0, 8, 7, 8, 0, 7, 6, 9, 3, 2, 5, 9, 9, 3, 9, 7, 8, 0, 5, 4, 1, 9, 3, 4, 1, 4, 4, 7, 3, 7, 7, 4, 4, 1, 8,
        4, 2, 6, 3, 1, 2, 9, 8, 6, 0, 8, 0, 9, 9, 8, 8, 8, 6, 8, 7, 4, 1, 3, 2, 6, 0, 4, 7, 2, 1, 5, 6, 9, 5, 1, 6, 2, 3, 9, 6, 5, 8, 6, 4, 5, 7, 3, 0, 2, 1, 6, 3, 1, 5, 9, 8, 1, 9, 3, 1, 9, 5, 1, 6, 7, 3, 5, 3, 8, 1,
        2, 9, 7, 4, 1, 6, 7, 7, 2, 9, 4, 7, 8, 6, 7, 2, 4, 2, 2, 9, 2, 4, 6, 5, 4, 3, 6, 6, 8, 0, 0, 9, 8, 0, 6, 7, 6, 9, 2, 8, 2, 3, 8, 2, 8, 0, 6, 8, 9, 9, 6, 4, 0, 0, 4, 8, 2, 4, 3, 5, 4, 0, 3, 7, 0, 1, 4, 1, 6, 3,
        1, 4, 9, 6, 5, 8, 9, 7, 9, 4, 0, 9, 2, 4, 3, 2, 3, 7, 8, 9, 6, 9, 0, 7, 0, 6, 9, 7, 7, 9, 4, 2, 2, 3, 6, 2, 5, 0, 8, 2, 2, 1, 6, 8, 8, 9, 5, 7, 3, 8, 3, 7, 9, 8, 6, 2, 3, 0, 0, 1, 5, 9, 3, 7, 7, 6, 4, 7, 1, 6,
        5, 1, 2, 2, 8, 9, 3, 5, 7, 8, 6, 0, 1, 5, 8, 8, 1, 6, 1, 7, 5, 5, 7, 8, 2, 9, 7, 3, 5, 2, 3, 3, 4, 4, 6, 0, 4, 2, 8, 1, 5, 1, 2, 6, 2, 7, 2, 0, 3, 7, 3, 4, 3, 1, 4, 6, 5, 3, 1, 9, 7, 7, 7, 7, 4, 1, 6, 0, 3, 1,
        9, 9, 0, 6, 6, 5, 5, 4, 1, 8, 7, 6, 3, 9, 7, 9, 2, 9, 3, 3, 4, 4, 1, 9, 5, 2, 1, 5, 4, 1, 3, 4, 1, 8, 9, 9, 4, 8, 5, 4, 4, 4, 7, 3, 4, 5, 6, 7, 3, 8, 3, 1, 6, 2, 4, 9, 9, 3, 4, 1, 9, 1, 3, 1, 8, 1, 4, 8, 0, 9,
        2, 7, 7, 7, 7, 1, 0, 3, 8, 6, 3, 8, 7, 7, 3, 4, 3, 1, 7, 7, 2, 0, 7, 5, 4, 5, 6, 5, 4, 5, 3, 2, 2, 0, 7, 7, 7, 0, 9, 2, 1, 2, 0, 1, 9, 0, 5, 1, 6, 6, 0, 9, 6, 2, 8, 0, 4, 9, 0, 9, 2, 6, 3, 6, 0, 1, 9, 7, 5, 9,
        8, 8, 2, 8, 1, 6, 1, 3, 3, 2, 3, 1, 6, 6, 6, 3, 6, 5, 2, 8, 6, 1, 9, 3, 2, 6, 6, 8, 6, 3, 3, 6, 0, 6, 2, 7, 3, 5, 6, 7, 6, 3, 0, 3, 5, 4, 4, 7, 7, 6, 2, 8, 0, 3, 5, 0, 4, 5, 0, 7, 7, 7, 2, 3, 5, 5, 4, 7, 1, 0,
        5, 8, 5, 9, 5, 4, 8, 7, 0, 2, 7, 9, 0, 8, 1, 4, 3, 5, 6, 2, 4, 0, 1, 4, 5, 1, 7, 1, 8, 0, 6, 2, 4, 6, 4, 3, 6, 2, 6, 7, 9, 4, 5, 6, 1, 2, 7, 5, 3, 1, 8, 1, 3, 4, 0, 7, 8, 3, 3, 0, 3, 3, 6, 2, 5, 4, 2, 3, 2, 7,
        8, 3, 9, 4, 4, 9, 7, 5, 3, 8, 2, 4, 3, 7, 2, 0, 5, 8, 3, 5, 3, 1, 1, 4, 7, 7, 1, 1, 9, 9, 2, 6, 0, 6, 3, 8, 1, 3, 3, 4, 6, 7, 7, 6, 8, 7, 9, 6, 9, 5, 9, 7, 0, 3, 0, 9, 8, 3, 3, 9, 1, 3, 0, 7, 7, 1, 0, 9, 8, 7,
        0, 4, 0, 8, 5, 9, 1, 3, 3, 7, 4, 6, 4, 1, 4, 4, 2, 8, 2, 2, 7, 7, 2, 6, 3, 4, 6, 5, 9, 4, 7, 0, 4, 7, 4, 5, 8, 7, 8, 4, 7, 7, 8, 7, 2, 0, 1, 9, 2, 7, 7, 1, 5, 2, 8, 0, 7, 3, 1, 7, 6, 7, 9, 0, 7, 7, 0, 7, 1, 5,
        7, 2, 1, 3, 4, 4, 4, 7, 3, 0, 6, 0, 5, 7, 0, 0, 7, 3, 3, 4, 9, 2, 4, 3, 6, 9, 3, 1, 1, 3, 8, 3, 5, 0, 4, 9, 3, 1, 6, 3, 1, 2, 8, 4, 0, 4, 2, 5, 1, 2, 1, 9, 2, 5, 6, 5, 1, 7, 9, 8, 0, 6, 9, 4, 1, 1, 3, 5, 2, 8,
        0, 1, 3, 1, 4, 7, 0, 1, 3, 0, 4, 7, 8, 1, 6, 4, 3, 7, 8, 8, 5, 1, 8, 5, 2, 9, 0, 9, 2, 8, 5, 4, 5, 2, 0, 1, 1, 6, 5, 8, 3, 9, 3, 4, 1, 9, 6, 5, 6, 2, 1, 3, 4, 9, 1, 4, 3, 4, 1, 5, 9, 5, 6, 2, 5, 8, 6, 5, 8, 6,
        5, 5, 7, 0, 5, 5, 2, 6, 9, 0, 4, 9, 6, 5, 2, 0, 9, 8, 5, 8, 0, 3, 3, 8, 5, 0, 7, 2, 2, 4, 2, 6, 4, 8, 2, 9, 3, 9, 7, 2, 8, 5, 8, 4, 7, 8, 3, 1, 6, 3, 0, 5, 7, 7, 7, 7, 5, 6, 0, 6, 8, 8, 8, 7, 6, 4, 4, 6, 2, 4,
        8, 2, 4, 6, 8, 5, 7, 9, 2, 6, 0, 3, 9, 5, 3, 5, 2, 7, 7, 3, 4, 8, 0, 3, 0, 4, 8, 0, 2, 9, 0, 0, 5, 8, 7, 6, 0, 7, 5, 8, 2, 5, 1, 0, 4, 7, 4, 7, 0, 9, 1, 6, 4, 3, 9, 6, 1, 3, 6, 2, 6, 7, 6, 0, 4, 4, 9, 2, 5, 6,
        2, 7, 4, 2, 0, 4, 2, 0, 8, 3, 2, 0, 8, 5, 6, 6, 1, 1, 9, 0, 6, 2, 5, 4, 5, 4, 3, 3, 7, 2, 1, 3, 1, 5, 3, 5, 9, 5, 8, 4, 5, 0, 6, 8, 7, 7, 2, 4, 6, 0, 2, 9, 0, 1, 6, 1, 8, 7, 6, 6, 7, 9, 5, 2, 4, 0, 6, 1, 6, 3,
        4, 2, 5, 2, 2, 5, 7, 7, 1, 9, 5, 4, 2, 9, 1, 6, 2, 9, 9, 1, 9, 3, 0, 6, 4, 5, 5, 3, 7, 7, 9, 9, 1, 4, 0, 3, 7, 3, 4, 0, 4, 3, 2, 8, 7, 5, 2, 6, 2, 8, 8, 8, 9, 6, 3, 9, 9, 5, 8, 7, 9, 4, 7, 5, 7, 2, 9, 1, 7, 4,
        6, 4, 2, 6, 3, 5, 7, 4, 5, 5, 2, 5, 4, 0, 7, 9, 0, 9, 1, 4, 5, 1, 3, 5, 7, 1, 1, 1, 3, 6, 9, 4, 1, 0, 9, 1, 1, 9, 3, 9, 3, 2, 5, 1, 9, 1, 0, 7, 6, 0, 2, 0, 8, 2, 5, 2, 0, 2, 6, 1, 8, 7, 9, 8, 5, 3, 1, 8, 8, 7,
        7, 0, 5, 8, 4, 2, 9, 7, 2, 5, 9, 1, 6, 7, 7, 8, 1, 3, 1, 4, 9, 6, 9, 9, 0, 0, 9, 0, 1, 9, 2, 1, 1, 6, 9, 7, 1, 7, 3, 7, 2, 7, 8, 4, 7, 6, 8, 4, 7, 2, 6, 8, 6, 0, 8, 4, 9, 0, 0, 3, 3, 7, 7, 0, 2, 4, 2, 4, 2, 9,
        1, 6, 5, 1, 3, 0, 0, 5, 0, 0, 5, 1, 6, 8, 3, 2, 3, 3, 6, 4, 3, 5, 0, 3, 8, 9, 5, 1, 7, 0, 2, 9, 8, 9, 3, 9, 2, 2, 3, 3, 4, 5, 1, 7, 2, 2, 0, 1, 3, 8, 1, 2, 8, 0, 6, 9, 6, 5, 0, 1, 1, 7, 8, 4, 4, 0, 8, 7, 4, 5,
        1, 9, 6, 0, 1, 2, 1, 2, 2, 8, 5, 9, 9, 3, 7, 1, 6, 2, 3, 1, 3, 0, 1, 7, 1, 1, 4, 4, 4, 8, 4, 6, 4, 0, 9, 0, 3, 8, 9, 0, 6, 4, 4, 9, 5, 4, 4, 4, 0, 0, 6, 1, 9, 8, 6, 9, 0, 7, 5, 4, 8, 5, 1, 6, 0, 2, 6, 3, 2, 7,
        5, 0, 5, 2, 9, 8, 3, 4, 9, 1, 8, 7, 4, 0, 7, 8, 6, 6, 8, 0, 8, 8, 1, 8, 3, 3, 8, 5, 1, 0, 2, 2, 8, 3, 3, 4, 5, 0, 8, 5, 0, 4, 8, 6, 0, 8, 2, 5, 0, 3, 9, 3, 0, 2, 1, 3, 3, 2, 1, 9, 7, 1, 5, 5, 1, 8, 4, 3, 0, 6,
        3, 5, 4, 5, 5, 0, 0, 7, 6, 6, 8, 2, 8, 2, 9, 4, 9, 3, 0, 4, 1, 3, 7, 7, 6, 5, 5, 2, 7, 9, 3, 9, 7, 5, 1, 7, 5, 4, 6, 1, 3, 9, 5, 3, 9, 8, 4, 6, 8, 3, 3, 9, 3, 6, 3, 8, 3, 0, 4, 7, 4, 6, 1, 1, 9, 9, 6, 6, 5, 3,
        8, 5, 8, 1, 5, 3, 8, 4, 2, 0, 5, 6, 8, 5, 3, 3, 8, 6, 2, 1, 8, 6, 7, 2, 5, 2, 3, 3, 4, 0, 2, 8, 3, 0, 8, 7, 1, 1, 2, 3, 2, 8, 2, 7, 8, 9, 2, 1, 2, 5, 0, 7, 7, 1, 2, 6, 2, 9, 4, 6, 3, 2, 2, 9, 5, 6, 3, 9, 8, 9,
        8, 9, 8, 9, 3, 5, 8, 2, 1, 1, 6, 7, 4, 5, 6, 2, 7, 0, 1, 0, 2, 1, 8, 3, 5, 6, 4, 6, 2, 2, 0, 1, 3, 4, 9, 6, 7, 1, 5, 1, 8, 8, 1, 9, 0, 9, 7, 3, 0, 3, 8, 1, 1, 9, 8, 0, 0, 4, 9, 7, 3, 4, 0, 7, 2, 3, 9, 6, 1, 0,
        3, 6, 8, 5, 4, 0, 6, 6, 4, 3, 1, 9, 3, 9, 5, 0, 9, 7, 9, 0, 1, 9, 0, 6, 9, 9, 6, 3, 9, 5, 5, 2, 4, 5, 3, 0, 0, 5, 4, 5, 0, 5, 8, 0, 6, 8, 5, 5, 0, 1, 9, 5, 6, 7, 3, 0, 2, 2, 9, 2, 1, 9, 1, 3, 9, 3, 3, 9, 1, 8,
        5, 6, 8, 0, 3, 4, 4, 9, 0, 3, 9, 8, 2, 0, 5, 9, 5, 5, 1, 0, 0, 2, 2, 6, 3, 5, 3, 5, 3, 6, 1, 9, 2, 0, 4, 1, 9, 9, 4, 7, 4, 5, 5, 3, 8, 5, 9, 3, 8, 1, 0, 2, 3, 4, 3, 9, 5, 5, 4, 4, 9, 5, 9, 7, 7, 8, 3, 7, 7, 9,
        0, 2, 3, 7, 4, 2, 1, 6, 1, 7, 2, 7, 1, 1, 1, 7, 2, 3, 6, 4, 3, 4, 3, 5, 4, 3, 9, 4, 7, 8, 2, 2, 1, 8, 1, 8, 5, 2, 8, 6, 2, 4, 0, 8, 5, 1, 4, 0, 0, 6, 6, 6, 0, 4, 4, 3, 3, 2, 5, 8, 8, 8, 5, 6, 9, 8, 6, 7, 0, 5,
        4, 3, 1, 5, 4, 7, 0, 6, 9, 6, 5, 7, 4, 7, 4, 5, 8, 5, 5, 0, 3, 3, 2, 3, 2, 3, 3, 4, 2, 1, 0, 7, 3, 0, 1, 5, 4, 5, 9, 4, 0, 5, 1, 6, 5, 5, 3, 7, 9, 0, 6, 8, 6, 6, 2, 7, 3, 3, 3, 7, 9, 9, 5, 8, 5, 1, 1, 5, 6, 2,
        5, 7, 8, 4, 3, 2, 2, 9, 8, 8, 2, 7, 3, 7, 2, 3, 1, 9, 8, 9, 8, 7, 5, 7, 1, 4, 1, 5, 9, 5, 7, 8, 1, 1, 1, 9, 6, 3, 5, 8, 3, 3, 0, 0, 5, 9, 4, 0, 8, 7, 3, 0, 6, 8, 1, 2, 1, 6, 0, 2, 8, 7, 6, 4, 9, 6, 2, 8, 6, 7,
        4, 4, 6, 0, 4, 7, 7, 4, 6, 4, 9, 1, 5, 9, 9, 5, 0, 5, 4, 9, 7, 3, 7, 4, 2, 5, 6, 2, 6, 9, 0, 1, 0, 4, 9, 0, 3, 7, 7, 8, 1, 9, 8, 6, 8, 3, 5, 9, 3, 8, 1, 4, 6, 5, 7, 4, 1, 2, 6, 8, 0, 4, 9, 2, 5, 6, 4, 8, 7, 9,
        8, 5, 5, 6, 1, 4, 5, 3, 7, 2, 3, 4, 7, 8, 6, 7, 3, 3, 0, 3, 9, 0, 4, 6, 8, 8, 3, 8, 3, 4, 3, 6, 3, 4, 6, 5, 5, 3, 7, 9, 4, 9, 8, 6, 4, 1, 9, 2, 7, 0, 5, 6, 3, 8, 7, 2, 9, 3, 1, 7, 4, 8, 7, 2, 3, 3, 2, 0, 8, 3,
        7, 6, 0, 1, 1, 2, 3, 0, 2, 9, 9, 1, 1, 3, 6, 7, 9, 3, 8, 6, 2, 7, 0, 8, 9, 4, 3, 8, 7, 9, 9, 3, 6, 2, 0, 1, 6, 2, 9, 5, 1, 5, 4, 1, 3, 3, 7, 1, 4, 2, 4, 8, 9, 2, 8, 3, 0, 7, 2, 2, 0, 1, 2, 6, 9, 0, 1, 4, 7, 5,
        4, 6, 6, 8, 4, 7, 6, 5, 3, 5, 7, 6, 1, 6, 4, 7, 7, 3, 7, 9, 4, 6, 7, 5, 2, 0, 0, 4, 9, 0, 7, 5, 7, 1, 5, 5, 5, 2, 7, 8, 1, 9, 6, 5, 3, 6, 2, 1, 3, 2, 3, 9, 2, 6, 4, 0, 6, 1, 6, 0, 1, 3, 6, 3, 5, 8, 1, 5, 5, 9,
        0, 7, 4, 2, 2, 0, 2, 0, 2, 0, 3, 1, 8, 7, 2, 7, 7, 6, 0, 5, 2, 7, 7, 2, 1, 9, 0, 0, 5, 5, 6, 1, 4, 8, 4, 2, 5, 5, 5, 1, 8, 7, 9, 2, 5, 3, 0, 3, 4, 3, 5, 1, 3, 9, 8, 4, 4, 2, 5, 3, 2, 2, 3, 4, 1, 5, 7, 6, 2, 3,
        3, 6, 1, 0, 6, 4, 2, 5, 0, 6, 3, 9, 0, 4, 9, 7, 5, 0, 0, 8, 6, 5, 6, 2, 7, 1, 0, 9, 5, 3, 5, 9, 1, 9, 4, 6, 5, 8, 9, 7, 5, 1, 4, 1, 3, 1, 0, 3, 4, 8, 2, 2, 7, 6, 9, 3, 0, 6, 2, 4, 7, 4, 3, 5, 3, 6, 3, 2, 5, 6,
        9, 1, 6, 0, 7, 8, 1, 5, 4, 7, 8, 1, 8, 1, 1, 5, 2, 8, 4, 3, 6, 6, 7, 9, 5, 7, 0, 6, 1, 1, 0, 8, 6, 1, 5, 3, 3, 1, 5, 0, 4, 4, 5, 2, 1, 2, 7, 4, 7, 3, 9, 2, 4, 5, 4, 4, 9, 4, 5, 4, 2, 3, 6, 8, 2, 8, 8, 6, 0, 6,
        1, 3, 4, 0, 8, 4, 1, 4, 8, 6, 3, 7, 7, 6, 7, 0, 0, 9, 6, 1, 2, 0, 7, 1, 5, 1, 2, 4, 9, 1, 4, 0, 4, 3, 0, 2, 7, 2, 5, 3, 8, 6, 0, 7, 6, 4, 8, 2, 3, 6, 3, 4, 1, 4, 3, 3, 4, 6, 2, 3, 5, 1, 8, 9, 7, 5, 7, 6, 6, 4,
        5, 2, 1, 6, 4, 1, 3, 7, 6, 7, 9, 6, 9, 0, 3, 1, 4, 9, 5, 0, 1, 9, 1, 0, 8, 5, 7, 5, 9, 8, 4, 4, 2, 3, 9, 1, 9, 8, 6, 2, 9, 1, 6, 4, 2, 1, 9, 3, 9, 9, 4, 9, 0, 7, 2, 3, 6, 2, 3, 4, 6, 4, 6, 8, 4, 4, 1, 1, 7, 3,
        9, 4, 0, 3, 2, 6, 5, 9, 1, 8, 4, 0, 4, 4, 3, 7, 8, 0, 5, 1, 3, 3, 3, 8, 9, 4, 5, 2, 5, 7, 4, 2, 3, 9, 9, 5, 0, 8, 2, 9, 6, 5, 9, 1, 2, 2, 8, 5, 0, 8, 5, 5, 5, 8, 2, 1, 5, 7, 2, 5, 0, 3, 1, 0, 7, 1, 2, 5, 7, 0,
        1, 2, 6, 6, 8, 3, 0, 2, 4, 0, 2, 9, 2, 9, 5, 2, 5, 2, 2, 0, 1, 1, 8, 7, 2, 6, 7, 6, 7, 5, 6, 2, 2, 0, 4, 1, 5, 4, 2, 0, 5, 1, 6, 1, 8, 4, 1, 6, 3, 4, 8, 4, 7, 5, 6, 5, 1, 6, 9, 9, 9, 8, 1, 1, 6, 1, 4, 1, 0, 1,
        0, 0, 2, 9, 9, 6, 0, 7, 8, 3, 8, 6, 9, 0, 9, 2, 9, 1, 6, 0, 3, 0, 2, 8, 8, 4, 0, 0, 2, 6, 9, 1, 0, 4, 1, 4, 0, 7, 9, 2, 8, 8, 6, 2, 1, 5, 0, 7, 8, 4, 2, 4, 5, 1, 6, 7, 0, 9, 0, 8, 7, 0, 0, 0, 6, 9, 9, 2, 8, 2,
        1, 2, 0, 6, 6, 0, 4, 1, 8, 3, 7, 1, 8, 0, 6, 5, 3, 5, 5, 6, 7, 2, 5, 2, 5, 3, 2, 5, 6, 7, 5, 3, 2, 8, 6, 1, 2, 9, 1, 0, 4, 2, 4, 8, 7, 7, 6, 1, 8, 2, 5, 8, 2, 9, 7, 6, 5, 1, 5, 7, 9, 5, 9, 8, 4, 7, 0, 3, 5, 6,
        2, 2, 2, 6, 2, 9, 3, 4, 8, 6, 0, 0, 3, 4, 1, 5, 8, 7, 2, 2, 9, 8, 0, 5, 3, 4, 9, 8, 9, 6, 5, 0, 2, 2, 6, 2, 9, 1, 7, 4, 8, 7, 8, 8, 2, 0, 2, 7, 3, 4, 2, 0, 9, 2, 2, 2, 2, 4, 5, 3, 3, 9, 8, 5, 6, 2, 6, 4, 7, 6,
        6, 9, 1, 4, 9, 0, 5, 5, 6, 2, 8, 4, 2, 5, 0, 3, 9, 1, 2, 7, 5, 7, 7, 1, 0, 2, 8, 4, 0, 2, 7, 9, 9, 8, 0, 6, 6, 3, 6, 5, 8, 2, 5, 4, 8, 8, 9, 2, 6, 4, 8, 8, 0, 2, 5, 4, 5, 6, 6, 1, 0, 1, 7, 2, 9, 6, 7, 0, 2, 6,
        6, 4, 0, 7, 6, 5, 5, 9, 0, 4, 2, 9, 0, 9, 9, 4, 5, 6, 8, 1, 5, 0, 6, 5, 2, 6, 5, 3, 0, 5, 3, 7, 1, 8, 2, 9, 4, 1, 2, 7, 0, 3, 3, 6, 9, 3, 1, 3, 7, 8, 5, 1, 7, 8, 6, 0, 9, 0, 4, 0, 7, 0, 8, 6, 6, 7, 1, 1, 4, 9,
        6, 5, 5, 8, 3, 4, 3, 4, 3, 4, 7, 6, 9, 3, 3, 8, 5, 7, 8, 1, 7, 1, 1, 3, 8, 6, 4, 5, 5, 8, 7, 3, 6, 7, 8, 1, 2, 3, 0, 1, 4, 5, 8, 7, 6, 8, 7, 1, 2, 6, 6, 0, 3, 4, 8, 9, 1, 3, 9, 0, 9, 5, 6, 2, 0, 0, 9, 9, 3, 9,
        3, 6, 1, 0, 3, 1, 0, 2, 9, 1, 6, 1, 6, 1, 5, 2, 8, 8, 1, 3, 8, 4, 3, 7, 9, 0, 9, 9, 0, 4, 2, 3, 1, 7, 4, 7, 3, 3, 6, 3, 9, 4, 8, 0, 4, 5, 7, 5, 9, 3, 1, 4, 9, 3, 1, 4, 0, 5, 2, 9, 7, 6, 3, 4, 7, 5, 7, 4, 8, 1,
        1, 9, 3, 5, 6, 7, 0, 9, 1, 1, 0, 1, 3, 7, 7, 5, 1, 7, 2, 1, 0, 0, 8, 0, 3, 1, 5, 5, 9, 0, 2, 4, 8, 5, 3, 0, 9, 0, 6, 6, 9, 2, 0, 3, 7, 6, 7, 1, 9, 2, 2, 0, 3, 3, 2, 2, 9, 0, 9, 4, 3, 3, 4, 6, 7, 6, 8, 5, 1, 4,
        2, 2, 1, 4, 4, 7, 7, 3, 7, 9, 3, 9, 3, 7, 5, 1, 7, 0, 3, 4, 4, 3, 6, 6, 1, 9, 9, 1, 0, 4, 0, 3, 3, 7, 5, 1, 1, 1, 7, 3, 5, 4, 7, 1, 9, 1, 8, 5, 5, 0, 4, 6, 4, 4, 9, 0, 2, 6, 3, 6, 5, 5, 1, 2, 8, 1, 6, 2, 2, 8,
        8, 2, 4, 4, 6, 2, 5, 7, 5, 9, 1, 6, 3, 3, 3, 0, 3, 9, 1, 0, 7, 2, 2, 5, 3, 8, 3, 7, 4, 2, 1, 8, 2, 1, 4, 0, 8, 8, 3, 5, 0, 8, 6, 5, 7, 3, 9, 1, 7, 7, 1, 5, 0, 9, 6, 8, 2, 8, 8, 7, 4, 7, 8, 2, 6, 5, 6, 9, 9, 5,
        9, 9, 5, 7, 4, 4, 9, 0, 6, 6, 1, 7, 5, 8, 3, 4, 4, 1, 3, 7, 5, 2, 2, 3, 9, 7, 0, 9, 6, 8, 3, 4, 0, 8, 0, 0, 5, 3, 5, 5, 9, 8, 4, 9, 1, 7, 5, 4, 1, 7, 3, 8, 1, 8, 8, 3, 9, 9, 9, 4, 4, 6, 9, 7, 4, 8, 6, 7, 6, 2,
        6, 5, 5, 1, 6, 5, 8, 2, 7, 6, 5, 8, 4, 8, 3, 5, 8, 8, 4, 5, 3, 1, 4, 2, 7, 7, 5, 6, 8, 7, 9, 0, 0, 2, 9, 0, 9, 5, 1, 7, 0, 2, 8, 3, 5, 2, 9, 7, 1, 6, 3, 4, 4, 5, 6, 2, 1, 2, 9, 6, 4, 0, 4, 3, 5, 2, 3, 1, 1, 7,
        6, 0, 0, 6, 6, 5, 1, 0, 1, 2, 4, 1, 2, 0, 0, 6, 5, 9, 7, 5, 5, 8, 5, 1, 2, 7, 6, 1, 7, 8, 5, 8, 3, 8, 2, 9, 2, 0, 4, 1, 9, 7, 4, 8, 4, 4, 2, 3, 6, 0, 8, 0, 0, 7, 1, 9, 3, 0, 4, 5, 7, 6, 1, 8, 9, 3, 2, 3, 4, 9,
        2, 2, 9, 2, 7, 9, 6, 5, 0, 1, 9, 8, 7, 5, 1, 8, 7, 2, 1, 2, 7, 2, 6, 7, 5, 0, 7, 9, 8, 1, 2, 5, 5, 4, 7, 0, 9, 5, 8, 9, 0, 4, 5, 5, 6, 3, 5, 7, 9, 2, 1, 2, 2, 1, 0, 3, 3, 3, 4, 6, 6, 9, 7, 4, 9, 9, 2, 3, 5, 6,
        3, 0, 2, 5, 4, 9, 4, 7, 8, 0, 2, 4, 9, 0, 1, 1, 4, 1, 9, 5, 2, 1, 2, 3, 8, 2, 8, 1, 5, 3, 0, 9, 1, 1, 4, 0, 7, 9, 0, 7, 3, 8, 6, 0, 2, 5, 1, 5, 2, 2, 7, 4, 2, 9, 9, 5, 8, 1, 8, 0, 7, 2, 4, 7, 1, 6, 2, 5, 9, 1,
        6, 6, 8, 5, 4, 5, 1, 3, 3, 3, 1, 2, 3, 9, 4, 8, 0, 4, 9, 4, 7, 0, 7, 9, 1, 1, 9, 1, 5, 3, 2, 6, 7, 3, 4, 3, 0, 2, 8, 2, 4, 4, 1, 8, 6, 0, 4, 1, 4, 2, 6, 3, 6, 3, 9, 5, 4, 8, 0, 0, 0, 4, 4, 8, 0, 0, 2, 6, 7, 0,
        4, 9, 6, 2, 4, 8, 2, 0, 1, 7, 9, 2, 8, 9, 6, 4, 7, 6, 6, 9, 7, 5, 8, 3, 1, 8, 3, 2, 7, 1, 3, 1, 4, 2, 5, 1, 7, 0, 2, 9, 6, 9, 2, 3, 4, 8, 8, 9, 6, 2, 7, 6, 6, 8, 4, 4, 0, 3, 2, 3, 2, 6, 0, 9, 2, 7, 5, 2, 4, 9,
        6, 0, 3, 5, 7, 9, 9, 6, 4, 6, 9, 2, 5, 6, 5, 0, 4, 9, 3, 6, 8, 1, 8, 3, 6, 0, 9, 0, 0, 3, 2, 3, 8, 0, 9, 2, 9, 3, 4, 5,
        9, 5, 8, 8, 9, 7, 0, 6, 9, 5, 3, 6, 5, 3, 4, 9, 4, 0, 6, 0, 3, 4, 0, 2, 1, 6, 6, 5, 4, 4, 3, 7, 5, 5, 8, 9, 0, 0, 4, 5, 6, 3, 2, 8, 8, 2, 2, 5, 0, 5, 4, 5, 2, 5, 5, 6, 4, 0, 5, 6, 4, 4, 8, 2, 4, 6, 5, 1, 5, 1,
        8, 7, 5, 4, 7, 1, 1, 9, 6, 2, 1, 8, 4, 4, 3, 9, 6, 5, 8, 2, 5, 3, 3, 7, 5, 4, 3, 8, 8, 5, 6, 9, 0, 9, 4, 1, 1, 3, 0, 3, 1, 5, 0, 9, 5, 2, 6, 1, 7, 9, 3, 7, 8, 0, 0, 2, 9, 7, 4, 1, 2, 0, 7, 6, 6, 5, 1, 4, 7, 9,
        3, 9, 4, 2, 5, 9, 0, 2, 9, 8, 9, 6, 9, 5, 9, 4, 6, 9, 9, 5, 5, 6, 5, 7, 6, 1, 2, 1, 8, 6, 5, 6, 1, 9, 6, 7, 3, 3, 7, 8, 6, 2, 3, 6, 2, 5, 6, 1, 2, 5, 2, 1, 6, 3, 2, 0, 8, 6, 2, 8, 6, 9, 2, 2, 2, 1, 0, 3, 2, 7,
        4, 8, 8, 9, 2, 1, 8, 6, 5, 4, 3, 6, 4, 8, 0, 2, 2, 9, 6, 7, 8, 0, 7, 0, 5, 7, 6, 5, 6, 1, 5, 1, 4, 4, 6, 3, 2, 0, 4, 6, 9, 2, 7, 9, 0, 6, 8, 2, 1, 2, 0, 7, 3, 8, 8, 3, 7, 7, 8, 1, 4, 2, 3, 3, 5, 6, 2, 8, 2, 3,
        6, 0, 8, 9, 6, 3, 2, 0, 8, 0, 6, 8, 2, 2, 2, 4, 6, 8, 0, 1, 2, 2, 4, 8, 2, 6, 1, 1, 7, 7, 1, 8, 5, 8, 9, 6, 3, 8, 1, 4, 0, 9, 1, 8, 3, 9, 0, 3, 6, 7, 3, 6, 7, 2, 2, 2, 0, 8, 8, 8, 3, 2, 1, 5, 1, 3, 7, 5, 5, 6,
        0, 0, 3, 7, 2, 7, 9, 8, 3, 9, 4, 0, 0, 4, 1, 5, 2, 9, 7, 0, 0, 2, 8, 7, 8, 3, 0, 7, 6, 6, 7, 0, 9, 4, 4, 4, 7, 4, 5, 6, 0, 1, 3, 4, 5, 5, 6, 4, 1, 7, 2, 5, 4, 3, 7, 0, 9, 0, 6, 9, 7, 9, 3, 9, 6, 1, 2, 2, 5, 7,
        1, 4, 2, 9, 8, 9, 4, 6, 7, 1, 5, 4, 3, 5, 7, 8, 4, 6, 8, 7, 8, 8, 6, 1, 4, 4, 4, 5, 8, 1, 2, 3, 1, 4, 5, 9, 3, 5, 7, 1, 9, 8, 4, 9, 2, 2, 5, 2, 8, 4, 7, 1, 6, 0, 5, 0, 4, 9, 2, 2, 1, 2, 4, 2, 4, 7, 0, 1, 4, 1,
        2, 1, 4, 7, 8, 0, 5, 7, 3, 4, 5, 5, 1, 0, 5, 0, 0, 8, 0, 1, 9, 0, 8, 6, 9, 9, 6, 0, 3, 3, 0, 2, 7, 6, 3, 4, 7, 8, 7, 0, 8, 1, 0, 8, 1, 7, 5, 4, 5, 0, 1, 1, 9, 3, 0, 7, 1, 4, 1, 2, 2, 3, 3, 9, 0, 8, 6, 6, 3, 9,
        3, 8, 3, 3, 9, 5, 2, 9, 4, 2, 5, 7, 8, 6, 9, 0, 5, 0, 7, 6, 4, 3, 1, 0, 0, 6, 3, 8, 3, 5, 1, 9, 8, 3, 4, 3, 8, 9, 3, 4, 1, 5, 9, 6, 1, 3, 1, 8, 5, 4, 3, 4, 7, 5, 4, 6, 4, 9, 5, 5, 6, 9, 7, 8, 1, 0, 3, 8, 2, 9,
        3, 0, 9, 7, 1, 6, 4, 6, 5, 1, 4, 3, 8, 4, 0, 7, 0, 0, 7, 0, 7, 3, 6, 0, 4, 1, 1, 2, 3, 7, 3, 5, 9, 9, 8, 4, 3, 4, 5, 2, 2, 5, 1, 6, 1, 0, 5, 0, 7, 0, 2, 7, 0, 5, 6, 2, 3, 5, 2, 6, 6, 0, 1, 2, 7, 6, 4, 8, 4, 8,
        3, 0, 8, 4, 0, 7, 6, 1, 1, 8, 3, 0, 1, 3, 0, 5, 2, 7, 9, 3, 2, 0, 5, 4, 2, 7, 4, 6, 2, 8, 6, 5, 4, 0, 3, 6, 0, 3, 6, 7, 4, 5, 3, 2, 8, 6, 5, 1, 0, 5, 7, 0, 6, 5, 8, 7, 4, 8, 8, 2, 2, 5, 6, 9, 8, 1, 5, 7, 9, 3,
        6, 7, 8, 9, 7, 6, 6, 9, 7, 4, 2, 2, 0, 5, 7, 5, 0, 5, 9, 6, 8, 3, 4, 4, 0, 8, 6, 9, 7, 3, 5, 0, 2, 0, 1, 4, 1, 0, 2, 0, 6, 7, 2, 3, 5, 8, 5, 0, 2, 0, 0, 7, 2, 4, 5, 2, 2, 5, 6, 3, 2, 6, 5, 1, 3, 4, 1, 0, 5, 5,
        9, 2, 4, 0, 1, 9, 0, 2, 7, 4, 2, 1, 6, 2, 4, 8, 4, 3, 9, 1, 4, 0, 3, 5, 9, 9, 8, 9, 5, 3, 5, 3, 9, 4, 5, 9, 0, 9, 4, 4, 0, 7, 0, 4, 6, 9, 1, 2, 0, 9, 1, 4, 0, 9, 3, 8, 7, 0, 0, 1, 2, 6, 4, 5, 6, 0, 0, 1, 6, 2,
        3, 7, 4, 2, 8, 8, 0, 2, 1, 0, 9, 2, 7, 6, 4, 5, 7, 9, 3, 1, 0, 6, 5, 7, 9, 2, 2, 9, 5, 5, 2, 4, 9, 8, 8, 7, 2, 7, 5, 8, 4, 6, 1, 0, 1, 2, 6, 4, 8, 3, 6, 9, 9, 9, 8, 9, 2, 2, 5, 6, 9, 5, 9, 6, 8, 8, 1, 5, 9, 2,
        0, 5, 6, 0, 0, 1, 0, 1, 6, 5, 5, 2, 5, 6, 3, 7, 5, 6, 7, 8
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 865591 "MessageQueueTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Suppress
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Failing.
 Failing."
      classrelation 2648759 // <generalisation>
	relation 2648759 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2648759 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      class 865719 "BaseTestHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2648887 // <generalisation>
	  relation 2648887 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2648887 // <generalisation>
	    b parent class_ref 865079 // TestHandlerThread
	end

	classrelation 2649015 // mHandler (<unidirectional association>)
	  relation 2649015 --->
	    a role_name "mHandler" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2649015 // mHandler (<unidirectional association>)
	    b parent class_ref 132023 // Handler
	end

	attribute 2862775 "mLastMessage"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2862903 "mCount"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 6817207 "BaseTestHandler"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6817335 "go"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6817463 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6817591 "testMessageOrder"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6817719 "testAtFrontOfQueue"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      class 865847 "TestFieldIntegrityHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2649143 // <generalisation>
	  relation 2649143 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2649143 // <generalisation>
	    b parent class_ref 865079 // TestHandlerThread
	end

	classrelation 2649271 // mHandler (<unidirectional association>)
	  relation 2649271 --->
	    a role_name "mHandler" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2649271 // mHandler (<unidirectional association>)
	    b parent class_ref 132023 // Handler
	end

	attribute 2863031 "mLastMessage"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2863159 "mCount"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 6817847 "TestFieldIntegrityHandler"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6817975 "go"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6818103 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6818231 "testFieldIntegrity"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end
    end

    class 865975 "MessengerService"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2649399 // <generalisation>
	relation 2649399 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2649399 // <generalisation>
	  b parent class_ref 300343 // Service
      end

      classrelation 2649527 // mHandler (<unidirectional association>)
	relation 2649527 --->
	  a role_name "mHandler" init_value " new Handler() {
        @Override
        public void handleMessage(Message msg) {
            Message reply = Message.obtain();
            reply.copyFrom(msg);
            try {
                msg.replyTo.send(reply);
            } catch (RemoteException e) {
            }
        }
    }" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2649527 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      classrelation 2649655 // mMessenger (<unidirectional association>)
	relation 2649655 --->
	  a role_name "mMessenger" init_value " new Messenger(mHandler)" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2649655 // mMessenger (<unidirectional association>)
	  b parent class_ref 513719 // Messenger
      end

      operation 6818359 "MessengerService"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6818487 "onBind"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 866103 "MessengerTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2649783 // <generalisation>
	relation 2649783 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2649783 // <generalisation>
	  b parent class_ref 627895 // AndroidTestCase
      end

      classrelation 2649911 // mServiceMessenger (<unidirectional association>)
	relation 2649911 --->
	  a role_name "mServiceMessenger" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2649911 // mServiceMessenger (<unidirectional association>)
	  b parent class_ref 513719 // Messenger
      end

      classrelation 2650039 // mConnection (<unidirectional association>)
	relation 2650039 --->
	  a role_name "mConnection" init_value " new ServiceConnection() {
        public void onServiceConnected(ComponentName name, IBinder service) {
            synchronized (MessengerTest.this) {
                mServiceMessenger = new Messenger(service);
                MessengerTest.this.notifyAll();
            }
        }
        public void onServiceDisconnected(ComponentName name) {
            mServiceMessenger = null;
        }
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2650039 // mConnection (<unidirectional association>)
	  b parent class_ref 132407 // ServiceConnection
      end

      class 866231 "TestThread"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2650167 // <generalisation>
	  relation 2650167 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2650167 // <generalisation>
	    b parent class_ref 865079 // TestHandlerThread
	end

	classrelation 2650295 // mTestHandler (<unidirectional association>)
	  relation 2650295 --->
	    a role_name "mTestHandler" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2650295 // mTestHandler (<unidirectional association>)
	    b parent class_ref 132023 // Handler
	end

	classrelation 2650423 // mTestMessenger (<unidirectional association>)
	  relation 2650423 --->
	    a role_name "mTestMessenger" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2650423 // mTestMessenger (<unidirectional association>)
	    b parent class_ref 513719 // Messenger
	end

	operation 6818615 "go"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6818743 "executeTest"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6818871 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 6818999 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6819127 "tearDown"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6819255 "testSend"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end
    end

    class 866359 "OsTests"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 6819383 "suite"
	class_operation public explicit_return_type "TestSuite"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 866487 "PerformanceCollectorTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2650551 // <generalisation>
	relation 2650551 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2650551 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      classrelation 2650679 // mPerfCollector (<unidirectional association>)
	relation 2650679 --->
	  a role_name "mPerfCollector" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2650679 // mPerfCollector (<unidirectional association>)
	  b parent class_ref 295351 // PerformanceCollector
      end

      operation 6819511 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6819639 "tearDown"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6819767 "testBeginSnapshotNoWriter"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6819895 "testEndSnapshotNoWriter"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6820023 "testStartTimingNoWriter"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6820151 "testAddIterationNoWriter"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6820279 "testStopTimingNoWriter"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6820407 "testBeginSnapshot"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6820535 "testEndSnapshot"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6820663 "testStartTiming"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6820791 "testAddIteration"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6820919 "testStopTiming"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6821047 "testAddMeasurementLong"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6821175 "testAddMeasurementFloat"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6821303 "testAddMeasurementString"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6821431 "testSimpleSequence"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6821559 "testLongSequence"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6821687 "testOutOfOrderSequence"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
	comment "Verify that snapshotting and timing do not interfere w/ each other,
by staggering calls to snapshot and timing functions."
      end

      operation 6821815 "workForRandomPeriod"
	private explicit_return_type "void"
	nparams 2
	  param in name "minDuration" explicit_type "int"
	  param in name "maxDuration" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6821943 "workForRandomTinyPeriod"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6822071 "workForRandomShortPeriod"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6822199 "workForRandomLongPeriod"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6822327 "verifySnapshotBundle"
	private explicit_return_type "void"
	nparams 1
	  param inout name "snapshot" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6822455 "verifyIterationBundle"
	private explicit_return_type "void"
	nparams 2
	  param inout name "iteration" type class_ref 131511 // Bundle
	  param inout name "label" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6822583 "verifyTimingBundle"
	private explicit_return_type "void"
	nparams 2
	  param inout name "timing" type class_ref 131511 // Bundle
	  param inout name "labels" explicit_type "ArrayList<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6822711 "assertEqualsBundle"
	private explicit_return_type "void"
	nparams 2
	  param inout name "b1" type class_ref 131511 // Bundle
	  param inout name "b2" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6822839 "readPrivateField"
	private return_type class_ref 132663 // Object
	nparams 2
	  param inout name "fieldName" type class_ref 129591 // String
	  param inout name "object" type class_ref 132663 // Object
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 866615 "MockPerformanceResultsWriter"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2650807 // <realization>
	  relation 2650807 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2650807 // <realization>
	    b parent class_ref 298295 // PerformanceResultsWriter
	end

	classrelation 2650935 // snapshotLabel (<unidirectional association>)
	  relation 2650935 --->
	    a role_name "snapshotLabel" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2650935 // snapshotLabel (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 2651063 // snapshotResults (<unidirectional association>)
	  relation 2651063 --->
	    a role_name "snapshotResults" init_value " new Bundle()" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2651063 // snapshotResults (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	classrelation 2651191 // timingLabel (<unidirectional association>)
	  relation 2651191 --->
	    a role_name "timingLabel" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2651191 // timingLabel (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 2651319 // timingResults (<unidirectional association>)
	  relation 2651319 --->
	    a role_name "timingResults" init_value " new Bundle()" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2651319 // timingResults (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	operation 6822967 "writeBeginSnapshot"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "label" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6823095 "writeEndSnapshot"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "results" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6823223 "writeStartTiming"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "label" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6823351 "writeStopTiming"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "results" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6823479 "writeMeasurement"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "label" type class_ref 129591 // String
	    param in name "value" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6823607 "writeMeasurement"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "label" type class_ref 129591 // String
	    param in name "value" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6823735 "writeMeasurement"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "label" type class_ref 129591 // String
	    param inout name "value" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 866743 "PowerManagerTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2651447 // <generalisation>
	relation 2651447 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2651447 // <generalisation>
	  b parent class_ref 627895 // AndroidTestCase
      end

      classrelation 2651575 // mPm (<unidirectional association>)
	relation 2651575 --->
	  a role_name "mPm" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2651575 // mPm (<unidirectional association>)
	  b parent class_ref 500279 // PowerManager
      end

      operation 6823863 "setUp"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Setup any common data for the upcoming tests."
      end

      operation 6823991 "testPreconditions"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment "Confirm that the setup is good.

@throws Exception"
      end

      operation 6824119 "testNewWakeLock"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment "Confirm that we can create functional wakelocks.

@throws Exception"
      end

      operation 6824247 "testBadNewWakeLock"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment "Confirm that we can't create dysfunctional wakelocks.

@throws Exception"
      end

      operation 6824375 "doTestWakeLock"
	private explicit_return_type "void"
	nparams 1
	  param inout name "wl" type class_ref 500407 // WakeLock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply a few tests to a wakelock to make sure it's healthy.

@param wl The wakelock to be tested."
      end

      operation 6824503 "doTestSetBacklightBrightness"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test that calling {@link android.os.IHardwareService#setBacklights(int)} requires
permissions.
<p>Tests permission:
  {@link android.Manifest.permission#DEVICE_POWER}"
      end
    end

    class 866871 "ProcessTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2651703 // <generalisation>
	relation 2651703 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2651703 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      operation 6824631 "testProcessGetUidFromName"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end

      operation 6824759 "testProcessGetUidFromNameFailure"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MediumTest
"
	
	
	
      end
    end

    class 866999 "SystemPropertiesTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2651831 // <generalisation>
	relation 2651831 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2651831 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      classrelation 2651959 // KEY (<unidirectional association>)
	relation 2651959 --->
	  a role_name "KEY" init_value " \"com.android.frameworks.coretests\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2651959 // KEY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 6824887 "testProperties"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end
    end

    class 867127 "TraceTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to test the native tracing support.  Run this test
while tracing on the emulator and then run traceview to view the trace."
      classrelation 2652087 // <generalisation>
	relation 2652087 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2652087 // <generalisation>
	  b parent class_ref 627895 // AndroidTestCase
      end

      classrelation 2652215 // TAG (<unidirectional association>)
	relation 2652215 --->
	  a role_name "TAG" init_value " \"TraceTest\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2652215 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 2863287 "eMethodCalls"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2863415 "fMethodCalls"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2863543 "gMethodCalls"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6825015 "testNativeTracingFromJava"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6825143 "disableTestNativeTracingFromC"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Suppress
"
	
	
	
	comment " This should not run in the automated suite."
      end

      operation 6825271 "nativeMethod"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6825399 "nativeMethodAndStartTracing"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6825527 "testMethodTracing"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
@Suppress
"
	
	
	
      end

      operation 6825655 "topMethod"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 867255 "aThread"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2652343 // <generalisation>
	  relation 2652343 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2652343 // <generalisation>
	    b parent class_ref 295863 // Thread
	end

	operation 6825783 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 6825911 "aMethod"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calls other methods to make some interesting trace data.

@return a meaningless value"
      end

      operation 6826039 "bMethod"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calls another method to make some interesting trace data.

@return a meaningless value"
      end

      operation 6826167 "cMethod"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Executes a simple loop to make some interesting trace data.

@return a meaningless value"
      end

      operation 6826295 "dMethod"
	private explicit_return_type "int"
	nparams 1
	  param in name "level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Calls itself recursively to make some interesting trace data.

@return a meaningless value"
      end

      operation 6826423 "eMethod"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6826551 "fMethod"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6826679 "gMethod"
	public explicit_return_type "int"
	nparams 1
	  param in name "level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      extra_member 138935 "initialization"
	
	cpp "" ""
	java "  static {
        Log.i(TAG, \"Loading trace_test native library...\");
        try {
            System.loadLibrary(\"trace_test\");
            Log.i(TAG, \"Successfully loaded trace_test native library\");
        }
        catch (UnsatisfiedLinkError ule) {
            Log.w(TAG, \"Could not load trace_test native library\");
        }
    }"
	php ""
	python ""
	idl ""
      end
    end

    class 1849271 "Handler_Delegate"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Delegate overriding selected methods of android.os.Handler

Through the layoutlib_create tool, selected methods of Handler have been replaced
by calls to methods of the same name in this delegate class.

"
      operation 35332663 "sendMessageAtTime"
	class_operation package explicit_return_type "boolean"
	nparams 3
	  param inout name "handler" type class_ref 132023 // Handler
	  param inout name "msg" type class_ref 287287 // Message
	  param in name "uptimeMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment " -------- Delegate methods
package"
      end

      class 1849399 "IHandlerCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 35332791 "sendMessageAtTime"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "handler" type class_ref 132023 // Handler
	    param inout name "msg" type class_ref 287287 // Message
	    param in name "uptimeMillis" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 5904695 // sCallbacks (<unidirectional association>)
	relation 5904695 --->
	  stereotype "ThreadLocal"
	  a role_name "sCallbacks" init_value "
        new ThreadLocal<IHandlerCallback>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 5904695 // sCallbacks (<unidirectional association>)
	  b parent class_ref 1849399 // IHandlerCallback
      end

      operation 35332919 "setCallback"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 1849399 // IHandlerCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1849527 "HandlerThread_Delegate"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Delegate overriding selected methods of android.os.HandlerThread

Through the layoutlib_create tool, selected methods of Handler have been replaced
by calls to methods of the same name in this delegate class.

"
      operation 35333047 "cleanUp"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "context" explicit_type "BridgeContext"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35333175 "run"
	class_operation package explicit_return_type "void"
	nparams 1
	  param inout name "theThread" type class_ref 286647 // HandlerThread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment " -------- Delegate methods
package"
      end
    end

    class 1849655 "Looper_Accessor"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class allowing access to package-protected methods/fields."
      operation 35333303 "cleanupThread"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35333431 "catchReflectionException"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1849783 "SystemClock_Delegate"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Delegate implementing the native methods of android.os.SystemClock

Through the layoutlib_create tool, the original native methods of SystemClock have been replaced
by calls to methods of the same name in this delegate class.

Because it's a stateless class to start with, there's no need to keep a {@link DelegateManager}
around to map int to instance of the delegate.
"
      operation 35333559 "uptimeMillis"
	class_operation package explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "Returns milliseconds since boot, not counting time spent in deep sleep.
<b>Note:</b> This value may get reset occasionally (before it would
otherwise wrap around).

@return milliseconds of non-sleep uptime since boot.

package"
      end

      operation 35333687 "elapsedRealtime"
	class_operation package explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "Returns milliseconds since boot, including time spent in sleep.

@return elapsed milliseconds since boot.

package"
      end

      operation 35333815 "elapsedRealtimeNanos"
	class_operation package explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "Returns nanoseconds since boot, including time spent in sleep.

@return elapsed nanoseconds since boot.

package"
      end

      operation 35333943 "currentThreadTimeMillis"
	class_operation package explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "Returns milliseconds running in the current thread.

@return elapsed milliseconds in the thread

package"
      end

      operation 35334071 "currentThreadTimeMicro"
	class_operation package explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "Returns microseconds running in the current thread.

@return elapsed microseconds in the thread

@hide

package"
      end

      operation 35334199 "currentTimeMicro"
	class_operation package explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "Returns current wall time in  microseconds.

@return elapsed microseconds in wall time

@hide

package"
      end
    end

    class 1849911 "SystemProperties_Delegate"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Delegate implementing the native methods of android.os.SystemProperties

Through the layoutlib_create tool, the original native methods of SystemProperties have been
replaced by calls to methods of the same name in this delegate class.

Because it's a stateless class to start with, there's no need to keep a {@link DelegateManager}
around to map int to instance of the delegate."
      operation 35334327 "native_get"
	class_operation package return_type class_ref 129591 // String
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "package"
      end

      operation 35334455 "native_get"
	class_operation package return_type class_ref 129591 // String
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "def" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "package"
      end

      operation 35334583 "native_get_int"
	class_operation package explicit_return_type "int"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "def" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "package"
      end

      operation 35334711 "native_get_long"
	class_operation package explicit_return_type "long"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "def" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "package"
      end

      operation 35334839 "native_get_boolean"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "def" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "Values 'n', 'no', '0', 'false' or 'off' are considered false.
Values 'y', 'yes', '1', 'true' or 'on' are considered true.

package"
      end

      operation 35334967 "native_set"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "def" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "package"
      end

      operation 35335095 "native_add_change_callback"
	class_operation package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "package"
      end
    end
  end

  deploymentview 128439 "os"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 128567 "Parcelable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 137399 // Parcelable
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 220471 "IBinder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
${definition}"
      associated_classes
	class_ref 132919 // IBinder
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 220599 "Binder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import android.util.Slog;
import com.android.internal.util.FastPrintWriter;
import libcore.io.IoUtils;
import java.io.FileDescriptor;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.lang.ref.WeakReference;
import java.lang.reflect.Modifier;
${definition}"
      associated_classes
	class_ref 277559 // Binder
	class_ref 278199 // BinderProxy
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 220727 "IInterface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 277687 // IInterface
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 224311 "Handler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import android.util.Printer;
import java.lang.reflect.Modifier;
${definition}"
      associated_classes
	class_ref 132023 // Handler
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 227767 "MessageQueue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.IntDef;
import android.annotation.NonNull;
import android.util.Log;
import android.util.Printer;
import android.util.SparseArray;
import java.io.FileDescriptor;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 286903 // MessageQueue
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 228151 "PerformanceCollector"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 295351 // PerformanceCollector
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 246839 "ResultReceiver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.os.IResultReceiver;
${definition}"
      associated_classes
	class_ref 277815 // ResultReceiver
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 250807 "ParcelFileDescriptor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.BroadcastReceiver;
import android.content.ContentProvider;
import android.os.MessageQueue.OnFileDescriptorEventListener;
import android.system.ErrnoException;
import android.system.Os;
import android.system.OsConstants;
import android.system.StructStat;
import android.util.Log;
import dalvik.system.CloseGuard;
import libcore.io.IoUtils;
import libcore.io.Memory;
import java.io.Closeable;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.DatagramSocket;
import java.net.Socket;
import java.nio.ByteOrder;
import static android.system.OsConstants.AF_UNIX;
import static android.system.OsConstants.SEEK_SET;
import static android.system.OsConstants.SOCK_STREAM;
import static android.system.OsConstants.SOCK_SEQPACKET;
import static android.system.OsConstants.S_ISLNK;
import static android.system.OsConstants.S_ISREG;
${definition}"
      associated_classes
	class_ref 264887 // ParcelFileDescriptor
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 252471 "AsyncTask"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.MainThread;
import android.annotation.WorkerThread;
import java.util.ArrayDeque;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.Callable;
import java.util.concurrent.CancellationException;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicInteger;
${definition}"
      associated_classes
	class_ref 367927 // AsyncTask
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 252599 "CancellationSignal"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ICancellationSignal;
${definition}"
      associated_classes
	class_ref 279095 // CancellationSignal
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 284215 "PatternMatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 426679 // PatternMatcher
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 308535 "HandlerThread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 286647 // HandlerThread
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 318519 "Vibrator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.ActivityThread;
import android.content.Context;
import android.media.AudioAttributes;
${definition}"
      associated_classes
	class_ref 495927 // Vibrator
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 319415 "RemoteCallbackList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.ArrayMap;
${definition}"
      associated_classes
	class_ref 497335 // RemoteCallbackList
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 340535 "AsyncResult"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Message;
${definition}"
      associated_classes
	class_ref 535991 // AsyncResult
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 340663 "BadParcelableException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.AndroidRuntimeException;
${definition}"
      associated_classes
	class_ref 536119 // BadParcelableException
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 340791 "BaseBundle"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.Nullable;
import android.util.ArrayMap;
import android.util.Log;
import android.util.MathUtils;
import android.util.Slog;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 536247 // BaseBundle
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 340919 "BatteryManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.BatteryProperty;
import android.os.IBatteryPropertiesRegistrar;
import android.os.RemoteException;
import android.os.ServiceManager;
import com.android.internal.app.IBatteryStats;
${definition}"
      associated_classes
	class_ref 536503 // BatteryManager
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 341047 "BatteryManagerInternal"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 536631 // BatteryManagerInternal
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 341175 "BatteryProperties"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 536759 // BatteryProperties
      end
      comment " Copyright 2013, The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 341303 "BatteryProperty"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 536887 // BatteryProperty
      end
      comment " Copyright 2013, The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 341431 "BatteryStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Formatter;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.telephony.SignalStrength;
import android.text.format.DateFormat;
import android.util.ArrayMap;
import android.util.MutableBoolean;
import android.util.Pair;
import android.util.Printer;
import android.util.SparseArray;
import android.util.SparseIntArray;
import android.util.TimeUtils;
import android.view.Display;
import com.android.internal.os.BatterySipper;
import com.android.internal.os.BatteryStatsHelper;
${definition}"
      associated_classes
	class_ref 537015 // BatteryStats
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 341559 "Broadcaster"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 539959 // Broadcaster
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 341687 "Build"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.text.TextUtils;
import android.util.Slog;
import com.android.internal.telephony.TelephonyProperties;
import dalvik.system.VMRuntime;
import java.util.Objects;
${definition}"
      associated_classes
	class_ref 540215 // Build
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 341815 "Bundle"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.Nullable;
import android.util.ArrayMap;
import android.util.Size;
import android.util.SizeF;
import android.util.SparseArray;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 131511 // Bundle
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 341943 "CommonClock"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.net.InetSocketAddress;
import java.util.NoSuchElementException;
import android.os.Binder;
import android.os.CommonTimeUtils;
import android.os.IBinder;
import android.os.Parcel;
import android.os.RemoteException;
import android.os.ServiceManager;
${definition}"
      associated_classes
	class_ref 540599 // CommonClock
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 342071 "CommonTimeConfig"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.net.InetSocketAddress;
import java.util.NoSuchElementException;
import android.os.CommonTimeUtils;
import android.os.IBinder;
import android.os.RemoteException;
import android.os.ServiceManager;
${definition}"
      associated_classes
	class_ref 541239 // CommonTimeConfig
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 342199 "CommonTimeUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import java.net.Inet4Address;
import java.net.Inet6Address;
import java.net.InetSocketAddress;
import java.util.Locale;
import static android.system.OsConstants.*;
${definition}"
      associated_classes
	class_ref 540983 // CommonTimeUtils
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 342327 "ConditionVariable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 475191 // ConditionVariable
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 342455 "CountDownTimer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 541495 // CountDownTimer
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 342583 "CpuUsageInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 541623 // CpuUsageInfo
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 342711 "RemoteException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.AndroidException;
${definition}"
      associated_classes
	class_ref 159031 // RemoteException
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 342839 "DeadObjectException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.RemoteException;
${definition}"
      associated_classes
	class_ref 541751 // DeadObjectException
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 342967 "DeadSystemException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 541879 // DeadSystemException
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 343095 "Debug"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.util.FastPrintWriter;
import com.android.internal.util.TypedProperties;
import android.app.AppGlobals;
import android.content.Context;
import android.util.Log;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.lang.annotation.Target;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.util.HashMap;
import java.util.Map;
import org.apache.harmony.dalvik.ddmc.Chunk;
import org.apache.harmony.dalvik.ddmc.ChunkHandler;
import org.apache.harmony.dalvik.ddmc.DdmServer;
import dalvik.bytecode.OpcodeInfo;
import dalvik.system.VMDebug;
${definition}"
      associated_classes
	class_ref 332343 // Debug
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 343223 "DropBoxManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.util.Log;
import com.android.internal.os.IDropBoxManagerService;
import java.io.ByteArrayInputStream;
import java.io.Closeable;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.zip.GZIPInputStream;
${definition}"
      associated_classes
	class_ref 340279 // DropBoxManager
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 343351 "Environment"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.admin.DevicePolicyManager;
import android.content.Context;
import android.os.storage.StorageManager;
import android.os.storage.StorageVolume;
import android.text.TextUtils;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 542519 // Environment
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 343479 "FactoryTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 542775 // FactoryTest
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 343607 "FileBridge"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.system.ErrnoException;
import android.system.Os;
import android.util.Log;
import libcore.io.IoBridge;
import libcore.io.IoUtils;
import libcore.io.Memory;
import libcore.io.Streams;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.ByteOrder;
import java.util.Arrays;
import static android.system.OsConstants.AF_UNIX;
import static android.system.OsConstants.SOCK_STREAM;
${definition}"
      associated_classes
	class_ref 542903 // FileBridge
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 343735 "FileObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import java.lang.ref.WeakReference;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 279479 // FileObserver
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 343863 "FileUriExposedException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Intent;
${definition}"
      associated_classes
	class_ref 543287 // FileUriExposedException
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 343991 "FileUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.provider.DocumentsContract.Document;
import android.system.ErrnoException;
import android.system.Os;
import android.system.StructStat;
import android.text.TextUtils;
import android.util.Log;
import android.util.Slog;
import android.webkit.MimeTypeMap;
import com.android.internal.annotations.VisibleForTesting;
import libcore.util.EmptyArray;
import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Objects;
import java.util.regex.Pattern;
import java.util.zip.CRC32;
import java.util.zip.CheckedInputStream;
${definition}"
      associated_classes
	class_ref 543415 // FileUtils
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 344119 "HardwarePropertiesManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.IntDef;
import android.annotation.NonNull;
import android.content.Context;
import android.util.Log;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_classes
	class_ref 543671 // HardwarePropertiesManager
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 344247 "IServiceManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 544055 // IServiceManager
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 344375 "LocaleList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.IntRange;
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.annotation.Size;
import android.icu.util.ULocale;
import com.android.internal.annotations.GuardedBy;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashSet;
import java.util.Locale;
${definition}"
      associated_classes
	class_ref 273591 // LocaleList
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 344503 "Looper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.util.Log;
import android.util.Printer;
${definition}"
      associated_classes
	class_ref 129335 // Looper
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 344631 "MemoryFile"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
${definition}"
      associated_classes
	class_ref 544183 // MemoryFile
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 344759 "Message"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.TimeUtils;
${definition}"
      associated_classes
	class_ref 287287 // Message
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 344887 "Messenger"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 513719 // Messenger
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345015 "NetworkOnMainThreadException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 544567 // NetworkOnMainThreadException
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345143 "NullVibrator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.media.AudioAttributes;
${definition}"
      associated_classes
	class_ref 544695 // NullVibrator
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345271 "OperationCanceledException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 544823 // OperationCanceledException
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345399 "Parcel"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.IntegerRes;
import android.annotation.Nullable;
import android.text.TextUtils;
import android.util.ArrayMap;
import android.util.ArraySet;
import android.util.Log;
import android.util.Size;
import android.util.SizeF;
import android.util.SparseArray;
import android.util.SparseBooleanArray;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamClass;
import java.io.Serializable;
import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import dalvik.system.VMRuntime;
${definition}"
      associated_classes
	class_ref 137527 // Parcel
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345527 "ParcelableParcel"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.MathUtils;
${definition}"
      associated_classes
	class_ref 274871 // ParcelableParcel
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345655 "ParcelFormatException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 544951 // ParcelFormatException
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345783 "ParcelUuid"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.UUID;
${definition}"
      associated_classes
	class_ref 412215 // ParcelUuid
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346039 "PersistableBundle"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.Nullable;
import android.util.ArrayMap;
import com.android.internal.util.XmlUtils;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlSerializer;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 158007 // PersistableBundle
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346167 "PooledStringReader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 401463 // PooledStringReader
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346295 "PooledStringWriter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 401207 // PooledStringWriter
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346423 "PowerManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SystemApi;
import android.content.Context;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 500279 // PowerManager
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346551 "PowerManagerInternal"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.view.Display;
${definition}"
      associated_classes
	class_ref 545591 // PowerManagerInternal
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346679 "Process"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.LocalSocket;
import android.net.LocalSocketAddress;
import android.system.Os;
import android.util.Log;
import com.android.internal.os.Zygote;
import dalvik.system.VMRuntime;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
${definition}"
      associated_classes
	class_ref 545847 // ZygoteStartFailedEx
	class_ref 545975 // Process
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346807 "RecoverySystem"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.UserManager;
import android.text.TextUtils;
import android.util.Log;
import java.io.ByteArrayInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.RandomAccessFile;
import java.security.GeneralSecurityException;
import java.security.PublicKey;
import java.security.Signature;
import java.security.SignatureException;
import java.security.cert.CertificateFactory;
import java.security.cert.X509Certificate;
import java.util.Enumeration;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import com.android.internal.logging.MetricsLogger;
import sun.security.pkcs.PKCS7;
import sun.security.pkcs.SignerInfo;
${definition}"
      associated_classes
	class_ref 546359 // RecoverySystem
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346935 "Registrant"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import android.os.Message;
import java.lang.ref.WeakReference;
${definition}"
      associated_classes
	class_ref 546615 // Registrant
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 347063 "RegistrantList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 546743 // RegistrantList
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 347191 "RemoteCallback"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.annotation.SystemApi;
${definition}"
      associated_classes
	class_ref 399159 // RemoteCallback
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 347319 "RemoteMailException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 546999 // RemoteMailException
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 347447 "SELinux"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Slog;
import java.io.IOException;
import java.io.File;
import java.io.FileDescriptor;
${definition}"
      associated_classes
	class_ref 547127 // SELinux
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 347575 "ServiceManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.os.BinderInternal;
import android.util.Log;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 547255 // ServiceManager
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 347703 "ServiceManagerNative"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 547383 // ServiceManagerNative
	class_ref 547511 // ServiceManagerProxy
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 347831 "ServiceSpecificException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 467639 // ServiceSpecificException
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 347959 "ShellCommand"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Slog;
import com.android.internal.util.FastPrintWriter;
import java.io.BufferedInputStream;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
${definition}"
      associated_classes
	class_ref 282423 // ShellCommand
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 348087 "StatFs"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.system.ErrnoException;
import android.system.Os;
import android.system.StructStatVfs;
${definition}"
      associated_classes
	class_ref 547767 // StatFs
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 348215 "StrictMode"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.ValueAnimator;
import android.app.ActivityManagerNative;
import android.app.ActivityThread;
import android.app.ApplicationErrorReport;
import android.app.IActivityManager;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.net.Uri;
import android.util.ArrayMap;
import android.util.Log;
import android.util.Printer;
import android.util.Singleton;
import android.util.Slog;
import android.view.IWindowManager;
import com.android.internal.os.RuntimeInit;
import com.android.internal.util.FastPrintWriter;
import com.android.internal.util.HexDump;
import dalvik.system.BlockGuard;
import dalvik.system.CloseGuard;
import dalvik.system.VMDebug;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.concurrent.atomic.AtomicInteger;
${definition}"
      associated_classes
	class_ref 333879 // StrictMode
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 348343 "SynchronousResultReceiver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
${definition}"
      associated_classes
	class_ref 550455 // SynchronousResultReceiver
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License."
    end

    artifact 348471 "SystemClock"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.IAlarmManager;
import android.content.Context;
import android.util.Slog;
${definition}"
      associated_classes
	class_ref 550711 // SystemClock
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 348599 "SystemProperties"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 550839 // SystemProperties
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 348727 "SystemService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.google.android.collect.Maps;
import java.util.HashMap;
import java.util.concurrent.TimeoutException;
${definition}"
      associated_classes
	class_ref 550967 // SystemService
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 348855 "SystemVibrator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.media.AudioAttributes;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 551223 // SystemVibrator
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 348983 "TokenWatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.WeakHashMap;
import java.util.Set;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 551351 // TokenWatcher
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 349111 "Trace"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 551607 // Trace
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 349239 "TransactionTooLargeException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.RemoteException;
${definition}"
      associated_classes
	class_ref 551735 // TransactionTooLargeException
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 349367 "TransactionTracker"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import android.util.Size;
import com.android.internal.util.FastPrintWriter;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 278071 // TransactionTracker
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License"
    end

    artifact 349495 "UEventObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import java.util.ArrayList;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 551863 // UEventObserver
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 349623 "UpdateEngine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.IUpdateEngine;
import android.os.IUpdateEngineCallback;
import android.os.RemoteException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 552247 // UpdateEngine
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 349751 "UpdateEngineCallback"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
${definition}"
      associated_classes
	class_ref 552631 // UpdateEngineCallback
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 349879 "UpdateLock"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 552759 // UpdateLock
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 350007 "UserHandle"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.AppIdInt;
import android.annotation.SystemApi;
import android.annotation.TestApi;
import android.annotation.UserIdInt;
import java.io.PrintWriter;
${definition}"
      associated_classes
	class_ref 131383 // UserHandle
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 350135 "UserManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.Manifest;
import android.accounts.AccountManager;
import android.annotation.IntDef;
import android.annotation.Nullable;
import android.annotation.RequiresPermission;
import android.annotation.SystemApi;
import android.annotation.UserIdInt;
import android.app.Activity;
import android.app.ActivityManager;
import android.app.ActivityManagerNative;
import android.app.admin.DevicePolicyManager;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.IntentSender;
import android.content.pm.UserInfo;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.provider.Settings;
import android.telephony.TelephonyManager;
import android.view.WindowManager.LayoutParams;
import com.android.internal.R;
import java.io.IOException;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 352439 // UserManager
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 350263 "UserManagerInternal"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.content.pm.UserInfo;
import android.graphics.Bitmap;
${definition}"
      associated_classes
	class_ref 553015 // UserManagerInternal
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License"
    end

    artifact 350391 "WorkSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 345527 // WorkSource
      end
    end

    artifact 478007 "ParcelArrayBenchmark"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.google.caliper.AfterExperiment;
import com.google.caliper.BeforeExperiment;
import com.google.caliper.Param;
${definition}"
      associated_classes
	class_ref 819383 // ParcelArrayBenchmark
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 478135 "ParcelBenchmark"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.google.caliper.AfterExperiment;
import com.google.caliper.BeforeExperiment;
${definition}"
      associated_classes
	class_ref 819511 // ParcelBenchmark
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 478263 "StrictModeBenchmark"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.StrictMode.ThreadPolicy;
${definition}"
      associated_classes
	class_ref 819639 // StrictModeBenchmark
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 500535 "AidlTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.IInterface;
import android.os.Parcel;
import android.os.Parcelable;
import android.test.suitebuilder.annotation.SmallTest;
import com.google.android.collect.Lists;
import junit.framework.TestCase;
import java.util.List;
${definition}"
      associated_classes
	class_ref 862391 // AidlTest
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 500663 "BinderThreadPriorityService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Service;
import android.content.Intent;
import android.text.TextUtils;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 862903 // BinderThreadPriorityService
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 500791 "BinderThreadPriorityTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.MediumTest;
import android.util.Log;
import java.io.File;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 863031 // BinderThreadPriorityTest
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 500919 "BrightnessLimit"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.IPowerManager;
import android.app.Activity;
import android.os.Bundle;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.provider.Settings;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import com.android.frameworks.coretests.R;
${definition}"
      associated_classes
	class_ref 863415 // BrightnessLimit
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 501047 "HandlerTester"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
${definition}"
      associated_classes
	class_ref 863799 // HandlerTester
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 501175 "BroadcasterTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Broadcaster;
import android.os.Handler;
import android.os.Message;
import android.test.suitebuilder.annotation.MediumTest;
import android.test.suitebuilder.annotation.SmallTest;
import junit.framework.TestCase;
${definition}"
      associated_classes
	class_ref 863543 // BroadcasterTest
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 501303 "BuildTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Build;
import android.test.suitebuilder.annotation.SmallTest;
import android.util.Log;
import junit.framework.Assert;
import junit.framework.TestCase;
${definition}"
      associated_classes
	class_ref 864055 // BuildTest
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 501431 "FileBridgeTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.FileBridge.FileBridgeOutputStream;
import android.test.AndroidTestCase;
import android.test.MoreAsserts;
import libcore.io.Streams;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.Random;
${definition}"
      associated_classes
	class_ref 864183 // FileBridgeTest
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 501559 "FileObserverTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.google.android.collect.Lists;
import com.google.android.collect.Maps;
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.MediumTest;
import android.util.Log;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 864311 // FileObserverTest
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 501687 "FileUtilsTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.provider.DocumentsContract.Document;
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.MediumTest;
import com.google.android.collect.Sets;
import libcore.io.IoUtils;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.util.Arrays;
import java.util.HashSet;
import static android.text.format.DateUtils.DAY_IN_MILLIS;
import static android.text.format.DateUtils.HOUR_IN_MILLIS;
import static android.text.format.DateUtils.WEEK_IN_MILLIS;
${definition}"
      associated_classes
	class_ref 864567 // FileUtilsTest
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 501815 "HandlerThreadTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import junit.framework.TestCase;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.Message;
import android.os.Process;
import android.test.suitebuilder.annotation.MediumTest;
import android.test.suitebuilder.annotation.SmallTest;
${definition}"
      associated_classes
	class_ref 864695 // HandlerThreadTest
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 501943 "TestHandlerThread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.os.MessageQueue.IdleHandler;
${definition}"
      associated_classes
	class_ref 865079 // TestHandlerThread
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 502071 "IdleHandlerTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.os.MessageQueue.IdleHandler;
import android.test.suitebuilder.annotation.MediumTest;
import junit.framework.TestCase;
${definition}"
      associated_classes
	class_ref 864823 // IdleHandlerTest
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 502199 "LocaleListTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.test.suitebuilder.annotation.SmallTest;
import java.util.Locale;
import junit.framework.TestCase;
${definition}"
      associated_classes
	class_ref 865335 // LocaleListTest
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 502327 "MemoryFileTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.LargeTest;
import android.test.suitebuilder.annotation.SmallTest;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
${definition}"
      associated_classes
	class_ref 865463 // MemoryFileTest
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 502455 "MessageQueueTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import android.os.Message;
import android.os.SystemClock;
import android.test.suitebuilder.annotation.MediumTest;
import android.test.suitebuilder.annotation.Suppress;
import junit.framework.TestCase;
${definition}"
      associated_classes
	class_ref 865591 // MessageQueueTest
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 502583 "MessengerService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Service;
import android.content.Intent;
import android.os.RemoteException;
import android.os.IBinder;
import android.os.Handler;
import android.os.Message;
import android.os.Messenger;
${definition}"
      associated_classes
	class_ref 865975 // MessengerService
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 502711 "MessengerTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.RemoteException;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.Messenger;
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.MediumTest;
${definition}"
      associated_classes
	class_ref 866103 // MessengerTest
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 502839 "OsTests"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.google.android.collect.Lists;
import junit.framework.TestSuite;
import java.util.Enumeration;
import java.util.List;
${definition}"
      associated_classes
	class_ref 866359 // OsTests
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 502967 "PerformanceCollectorTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.PerformanceCollector.PerformanceResultsWriter;
import android.test.suitebuilder.annotation.MediumTest;
import android.test.suitebuilder.annotation.SmallTest;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Random;
import junit.framework.TestCase;
${definition}"
      associated_classes
	class_ref 866487 // PerformanceCollectorTest
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 503095 "PowerManagerTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.SmallTest;
${definition}"
      associated_classes
	class_ref 866743 // PowerManagerTest
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 503223 "ProcessTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Process;
import android.os.UserHandle;
import android.test.suitebuilder.annotation.MediumTest;
import android.test.suitebuilder.annotation.SmallTest;
import junit.framework.TestCase;
${definition}"
      associated_classes
	class_ref 866871 // ProcessTest
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 503351 "SystemPropertiesTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import junit.framework.TestCase;
import android.os.SystemProperties;
import android.test.suitebuilder.annotation.SmallTest;
import static junit.framework.Assert.assertEquals;
${definition}"
      associated_classes
	class_ref 866999 // SystemPropertiesTest
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 503479 "TraceTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Debug;
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.LargeTest;
import android.test.suitebuilder.annotation.SmallTest;
import android.test.suitebuilder.annotation.Suppress;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 867127 // TraceTest
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1029431 "Handler_Delegate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.tools.layoutlib.annotations.LayoutlibDelegate;
${definition}"
      associated_classes
	class_ref 1849271 // Handler_Delegate
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1029559 "HandlerThread_Delegate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.layoutlib.bridge.android.BridgeContext;
import com.android.layoutlib.bridge.impl.RenderAction;
import com.android.tools.layoutlib.annotations.LayoutlibDelegate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 1849527 // HandlerThread_Delegate
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1029687 "Looper_Accessor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Field;
${definition}"
      associated_classes
	class_ref 1849655 // Looper_Accessor
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1029815 "SystemClock_Delegate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.layoutlib.bridge.impl.DelegateManager;
import com.android.tools.layoutlib.annotations.LayoutlibDelegate;
import com.android.tools.layoutlib.java.System_Delegate;
${definition}"
      associated_classes
	class_ref 1849783 // SystemClock_Delegate
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1029943 "SystemProperties_Delegate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.layoutlib.bridge.Bridge;
import com.android.layoutlib.bridge.impl.DelegateManager;
import com.android.tools.layoutlib.annotations.LayoutlibDelegate;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 1849911 // SystemProperties_Delegate
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end

  package_ref 154551 // storage

  package_ref 168119 // health
end
