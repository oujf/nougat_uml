class IntentTile
!!!30692791.java!!!	IntentTile(inout host : QSTile::Host, inout action : String)
        super(host);
        mContext.registerReceiver(mReceiver, new IntentFilter(action));
!!!30692919.java!!!	handleDestroy() : void
        super.handleDestroy();
        mContext.unregisterReceiver(mReceiver);
!!!30693047.java!!!	create(inout host : QSTile::Host, inout spec : String) : QSTile
        if (spec == null || !spec.startsWith(PREFIX) || !spec.endsWith(")")) {
            throw new IllegalArgumentException("Bad intent tile spec: " + spec);
        }
        final String action = spec.substring(PREFIX.length(), spec.length() - 1);
        if (action.isEmpty()) {
            throw new IllegalArgumentException("Empty intent tile spec action");
        }
        return new IntentTile(host, action);
!!!30693303.java!!!	newTileState() : QSTile::State
        return new State();
!!!30693431.java!!!	handleUserSwitch(in newUserId : int) : void
        super.handleUserSwitch(newUserId);
        mCurrentUserId = newUserId;
!!!30693559.java!!!	handleClick() : void
        MetricsLogger.action(mContext, getMetricsCategory(), mIntentPackage);
        sendIntent("click", mOnClick, mOnClickUri);
!!!30693687.java!!!	getLongClickIntent() : Intent
        return null;
!!!30693815.java!!!	handleLongClick() : void
        sendIntent("long-click", mOnLongClick, mOnLongClickUri);
!!!30693943.java!!!	sendIntent(inout type : String, inout pi : PendingIntent, inout uri : String) : void
        try {
            if (pi != null) {
                if (pi.isActivity()) {
                    getHost().startActivityDismissingKeyguard(pi);
                } else {
                    pi.send();
                }
            } else if (uri != null) {
                final Intent intent = Intent.parseUri(uri, Intent.URI_INTENT_SCHEME);
                mContext.sendBroadcastAsUser(intent, new UserHandle(mCurrentUserId));
            }
        } catch (Throwable t) {
            Log.w(TAG, "Error sending " + type + " intent", t);
        }
!!!30694071.java!!!	getTileLabel() : CharSequence
        return getState().label;
!!!30694199.java!!!	handleUpdateState(inout state : QSTile::State, inout arg : Object) : void
        Intent intent = (Intent) arg;
        if (intent == null) {
            if (mLastIntent == null) {
                return;
            }
            // No intent but need to refresh state, just use the last one.
            intent = mLastIntent;
        }
        // Save the last one in case we need it later.
        mLastIntent = intent;
        state.contentDescription = intent.getStringExtra("contentDescription");
        state.label = intent.getStringExtra("label");
        state.icon = null;
        final byte[] iconBitmap = intent.getByteArrayExtra("iconBitmap");
        if (iconBitmap != null) {
            try {
                state.icon = new BytesIcon(iconBitmap);
            } catch (Throwable t) {
                Log.w(TAG, "Error loading icon bitmap, length " + iconBitmap.length, t);
            }
        } else {
            final int iconId = intent.getIntExtra("iconId", 0);
            if (iconId != 0) {
                final String iconPackage = intent.getStringExtra("iconPackage");
                if (!TextUtils.isEmpty(iconPackage)) {
                    state.icon = new PackageDrawableIcon(iconPackage, iconId);
                } else {
                    state.icon = ResourceIcon.get(iconId);
                }
            }
        }
        mOnClick = intent.getParcelableExtra("onClick");
        mOnClickUri = intent.getStringExtra("onClickUri");
        mOnLongClick = intent.getParcelableExtra("onLongClick");
        mOnLongClickUri = intent.getStringExtra("onLongClickUri");
        mIntentPackage = intent.getStringExtra("package");
        mIntentPackage = mIntentPackage == null ? "" : mIntentPackage;
!!!30694327.java!!!	getMetricsCategory() : int
        return MetricsEvent.QS_INTENT;
