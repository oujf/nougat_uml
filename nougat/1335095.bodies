class UserTile
!!!30706615.java!!!	UserTile(inout host : QSTile::Host)
        super(host);
        mUserSwitcherController = host.getUserSwitcherController();
        mUserInfoController = host.getUserInfoController();
!!!30706743.java!!!	newTileState() : QSTile::State
        return new QSTile.State();
!!!30706871.java!!!	getLongClickIntent() : Intent
        return new Intent(Settings.ACTION_USER_SETTINGS);
!!!30706999.java!!!	handleClick() : void
        showDetail(true);
!!!30707127.java!!!	getDetailAdapter() : QSTile::DetailAdapter
        return mUserSwitcherController.userDetailAdapter;
!!!30707255.java!!!	getMetricsCategory() : int
        return MetricsEvent.QS_USER_TILE;
!!!30707383.java!!!	setListening(inout listening : boolean) : void
        if (listening) {
            mUserInfoController.addListener(this);
        } else {
            mUserInfoController.remListener(this);
        }
!!!30707511.java!!!	getTileLabel() : CharSequence
        return getState().label;
!!!30707639.java!!!	handleUpdateState(inout state : QSTile::State, inout arg : Object) : void
        final Pair<String, Drawable> p = arg != null ? (Pair<String, Drawable>) arg : mLastUpdate;
        if (p != null) {
            state.label = p.first;
            // TODO: Better content description.
            state.contentDescription = p.first;
            state.icon = new Icon() {
                @Override
                public Drawable getDrawable(Context context) {
                    return p.second;
                }
            };
        } else {
            // TODO: Default state.
        }
!!!30707767.java!!!	onUserInfoChanged(inout name : String, inout picture : Drawable) : void
        mLastUpdate = new Pair<>(name, picture);
        refreshState(mLastUpdate);
