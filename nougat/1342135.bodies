class TaskViewTransform
!!!30866615.java!!!	fillIn(inout tv : TaskView) : void
        translationZ = tv.getTranslationZ();
        scale = tv.getScaleX();
        alpha = tv.getAlpha();
        visible = true;
        dimAlpha = tv.getDimAlpha();
        viewOutlineAlpha = tv.getViewBounds().getAlpha();
        rect.set(tv.getLeft(), tv.getTop(), tv.getRight(), tv.getBottom());
!!!30866743.java!!!	copyFrom(inout other : TaskViewTransform) : void
        translationZ = other.translationZ;
        scale = other.scale;
        alpha = other.alpha;
        visible = other.visible;
        dimAlpha = other.dimAlpha;
        viewOutlineAlpha = other.viewOutlineAlpha;
        rect.set(other.rect);
!!!30866871.java!!!	isSame(inout other : TaskViewTransform) : boolean
        return translationZ == other.translationZ
                && scale == other.scale
                && other.alpha == alpha
                && dimAlpha == other.dimAlpha
                && visible == other.visible
                && rect.equals(other.rect);
!!!30866999.java!!!	reset() : void
        translationZ = 0;
        scale = 1f;
        alpha = 1f;
        dimAlpha = 0f;
        viewOutlineAlpha = 0f;
        visible = false;
        rect.setEmpty();
!!!30867127.java!!!	hasAlphaChangedFrom(in v : float) : boolean
        return (Float.compare(alpha, v) != 0);
!!!30867255.java!!!	hasScaleChangedFrom(in v : float) : boolean
        return (Float.compare(scale, v) != 0);
!!!30867383.java!!!	hasTranslationZChangedFrom(in v : float) : boolean
        return (Float.compare(translationZ, v) != 0);
!!!30867511.java!!!	hasRectChangedFrom(inout v : View) : boolean
        return ((int) rect.left != v.getLeft()) || ((int) rect.right != v.getRight()) ||
                ((int) rect.top != v.getTop()) || ((int) rect.bottom != v.getBottom());
!!!30867639.java!!!	applyToTaskView(inout v : TaskView, inout animators : ArrayList<Animator>, inout animation : AnimationProps, inout allowShadows : boolean) : void
        // Return early if not visible
        if (!visible) {
            return;
        }

        if (animation.isImmediate()) {
            if (allowShadows && hasTranslationZChangedFrom(v.getTranslationZ())) {
                v.setTranslationZ(translationZ);
            }
            if (hasScaleChangedFrom(v.getScaleX())) {
                v.setScaleX(scale);
                v.setScaleY(scale);
            }
            if (hasAlphaChangedFrom(v.getAlpha())) {
                v.setAlpha(alpha);
            }
            if (hasRectChangedFrom(v)) {
                v.setLeftTopRightBottom((int) rect.left, (int) rect.top, (int) rect.right,
                        (int) rect.bottom);
            }
        } else {
            if (allowShadows && hasTranslationZChangedFrom(v.getTranslationZ())) {
                ObjectAnimator anim = ObjectAnimator.ofFloat(v, View.TRANSLATION_Z,
                        v.getTranslationZ(), translationZ);
                animators.add(animation.apply(AnimationProps.TRANSLATION_Z, anim));
            }
            if (hasScaleChangedFrom(v.getScaleX())) {
                ObjectAnimator anim = ObjectAnimator.ofPropertyValuesHolder(v,
                        PropertyValuesHolder.ofFloat(View.SCALE_X, v.getScaleX(), scale),
                        PropertyValuesHolder.ofFloat(View.SCALE_Y, v.getScaleX(), scale));
                animators.add(animation.apply(AnimationProps.SCALE, anim));
            }
            if (hasAlphaChangedFrom(v.getAlpha())) {
                ObjectAnimator anim = ObjectAnimator.ofFloat(v, View.ALPHA, v.getAlpha(), alpha);
                animators.add(animation.apply(AnimationProps.ALPHA, anim));
            }
            if (hasRectChangedFrom(v)) {
                Rect fromViewRect = new Rect(v.getLeft(), v.getTop(), v.getRight(), v.getBottom());
                Rect toViewRect = new Rect();
                rect.round(toViewRect);
                ObjectAnimator anim = ObjectAnimator.ofPropertyValuesHolder(v,
                        PropertyValuesHolder.ofObject(LTRB, Utilities.RECT_EVALUATOR,
                                fromViewRect, toViewRect));
                animators.add(animation.apply(AnimationProps.BOUNDS, anim));
            }
        }
!!!30867767.java!!!	reset(inout v : TaskView) : void
        v.setTranslationX(0f);
        v.setTranslationY(0f);
        v.setTranslationZ(0f);
        v.setScaleX(1f);
        v.setScaleY(1f);
        v.setAlpha(1f);
        v.getViewBounds().setClipBottom(0);
        v.setLeftTopRightBottom(0, 0, 0, 0);
!!!30867895.java!!!	toString() : String
        return "R: " + rect + " V: " + visible;
