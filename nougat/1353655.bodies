class BaseGridView
!!!30790711.java!!!	BaseGridView(inout context : Context, inout attrs : AttributeSet, in defStyle : int)
        super(context, attrs, defStyle);
        mLayoutManager = new GridLayoutManager(this);
        setLayoutManager(mLayoutManager);
        setDescendantFocusability(FOCUS_AFTER_DESCENDANTS);
        setHasFixedSize(true);
        setChildrenDrawingOrderEnabled(true);
        setWillNotDraw(true);
        setOverScrollMode(View.OVER_SCROLL_NEVER);
        // Disable change animation by default on leanback.
        // Change animation will create a new view and cause undesired
        // focus animation between the old view and new view.
        ((SimpleItemAnimator)getItemAnimator()).setSupportsChangeAnimations(false);
        super.setRecyclerListener(new RecyclerView.RecyclerListener() {
            @Override
            public void onViewRecycled(RecyclerView.ViewHolder holder) {
                mLayoutManager.onChildRecycled(holder);
                if (mChainedRecyclerListener != null) {
                    mChainedRecyclerListener.onViewRecycled(holder);
                }
            }
        });
!!!30790839.java!!!	initBaseGridViewAttributes(inout context : Context, inout attrs : AttributeSet) : void
        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.lbBaseGridView);
        boolean throughFront = a.getBoolean(R.styleable.lbBaseGridView_focusOutFront, false);
        boolean throughEnd = a.getBoolean(R.styleable.lbBaseGridView_focusOutEnd, false);
        mLayoutManager.setFocusOutAllowed(throughFront, throughEnd);
        boolean throughSideStart = a.getBoolean(R.styleable.lbBaseGridView_focusOutSideStart, true);
        boolean throughSideEnd = a.getBoolean(R.styleable.lbBaseGridView_focusOutSideEnd, true);
        mLayoutManager.setFocusOutSideAllowed(throughSideStart, throughSideEnd);
        mLayoutManager.setVerticalMargin(
                a.getDimensionPixelSize(R.styleable.lbBaseGridView_verticalMargin, 0));
        mLayoutManager.setHorizontalMargin(
                a.getDimensionPixelSize(R.styleable.lbBaseGridView_horizontalMargin, 0));
        if (a.hasValue(R.styleable.lbBaseGridView_android_gravity)) {
            setGravity(a.getInt(R.styleable.lbBaseGridView_android_gravity, Gravity.NO_GRAVITY));
        }
        a.recycle();
!!!30790967.java!!!	setFocusScrollStrategy(in scrollStrategy : int) : void
        if (scrollStrategy != FOCUS_SCROLL_ALIGNED && scrollStrategy != FOCUS_SCROLL_ITEM
            && scrollStrategy != FOCUS_SCROLL_PAGE) {
            throw new IllegalArgumentException("Invalid scrollStrategy");
        }
        mLayoutManager.setFocusScrollStrategy(scrollStrategy);
        requestLayout();
!!!30791095.java!!!	getFocusScrollStrategy() : int
        return mLayoutManager.getFocusScrollStrategy();
!!!30791223.java!!!	setWindowAlignment(in windowAlignment : int) : void
        mLayoutManager.setWindowAlignment(windowAlignment);
        requestLayout();
!!!30791351.java!!!	getWindowAlignment() : int
        return mLayoutManager.getWindowAlignment();
!!!30791479.java!!!	setWindowAlignmentOffset(in offset : int) : void
        mLayoutManager.setWindowAlignmentOffset(offset);
        requestLayout();
!!!30791607.java!!!	getWindowAlignmentOffset() : int
        return mLayoutManager.getWindowAlignmentOffset();
!!!30791735.java!!!	setWindowAlignmentOffsetPercent(in offsetPercent : float) : void
        mLayoutManager.setWindowAlignmentOffsetPercent(offsetPercent);
        requestLayout();
!!!30791863.java!!!	getWindowAlignmentOffsetPercent() : float
        return mLayoutManager.getWindowAlignmentOffsetPercent();
!!!30791991.java!!!	setItemAlignmentOffset(in offset : int) : void
        mLayoutManager.setItemAlignmentOffset(offset);
        requestLayout();
!!!30792119.java!!!	getItemAlignmentOffset() : int
        return mLayoutManager.getItemAlignmentOffset();
!!!30792247.java!!!	setItemAlignmentOffsetWithPadding(inout withPadding : boolean) : void
        mLayoutManager.setItemAlignmentOffsetWithPadding(withPadding);
        requestLayout();
!!!30792375.java!!!	isItemAlignmentOffsetWithPadding() : boolean
        return mLayoutManager.isItemAlignmentOffsetWithPadding();
!!!30792503.java!!!	setItemAlignmentOffsetPercent(in offsetPercent : float) : void
        mLayoutManager.setItemAlignmentOffsetPercent(offsetPercent);
        requestLayout();
!!!30792631.java!!!	getItemAlignmentOffsetPercent() : float
        return mLayoutManager.getItemAlignmentOffsetPercent();
!!!30792759.java!!!	setItemAlignmentViewId(in viewId : int) : void
        mLayoutManager.setItemAlignmentViewId(viewId);
!!!30792887.java!!!	getItemAlignmentViewId() : int
        return mLayoutManager.getItemAlignmentViewId();
!!!30793015.java!!!	setItemMargin(in margin : int) : void
        mLayoutManager.setItemMargin(margin);
        requestLayout();
!!!30793143.java!!!	setVerticalMargin(in margin : int) : void
        mLayoutManager.setVerticalMargin(margin);
        requestLayout();
!!!30793271.java!!!	getVerticalMargin() : int
        return mLayoutManager.getVerticalMargin();
!!!30793399.java!!!	setHorizontalMargin(in margin : int) : void
        mLayoutManager.setHorizontalMargin(margin);
        requestLayout();
!!!30793527.java!!!	getHorizontalMargin() : int
        return mLayoutManager.getHorizontalMargin();
!!!30793655.java!!!	setOnChildLaidOutListener(inout listener : OnChildLaidOutListener) : void
        mLayoutManager.setOnChildLaidOutListener(listener);
!!!30793783.java!!!	setOnChildSelectedListener(inout listener : OnChildSelectedListener) : void
        mLayoutManager.setOnChildSelectedListener(listener);
!!!30793911.java!!!	setOnChildViewHolderSelectedListener(inout listener : OnChildViewHolderSelectedListener) : void
        mLayoutManager.setOnChildViewHolderSelectedListener(listener);
!!!30794039.java!!!	addOnChildViewHolderSelectedListener(inout listener : OnChildViewHolderSelectedListener) : void
        mLayoutManager.addOnChildViewHolderSelectedListener(listener);
!!!30794167.java!!!	removeOnChildViewHolderSelectedListener(inout listener : OnChildViewHolderSelectedListener) : void
        mLayoutManager.removeOnChildViewHolderSelectedListener(listener);
!!!30794295.java!!!	setSelectedPosition(in position : int) : void
        mLayoutManager.setSelection(position, 0);
!!!30794423.java!!!	setSelectedPositionWithSub(in position : int, in subposition : int) : void
        mLayoutManager.setSelectionWithSub(position, subposition, 0);
!!!30794551.java!!!	setSelectedPosition(in position : int, in scrollExtra : int) : void
        mLayoutManager.setSelection(position, scrollExtra);
!!!30794679.java!!!	setSelectedPositionWithSub(in position : int, in subposition : int, in scrollExtra : int) : void
        mLayoutManager.setSelectionWithSub(position, subposition, scrollExtra);
!!!30794807.java!!!	setSelectedPositionSmooth(in position : int) : void
        mLayoutManager.setSelectionSmooth(position);
!!!30794935.java!!!	setSelectedPositionSmoothWithSub(in position : int, in subposition : int) : void
        mLayoutManager.setSelectionSmoothWithSub(position, subposition);
!!!30795063.java!!!	setSelectedPositionSmooth(in position : int, in task : ViewHolderTask) : void
        if (task != null) {
            RecyclerView.ViewHolder vh = findViewHolderForPosition(position);
            if (vh == null || hasPendingAdapterUpdates()) {
                addOnChildViewHolderSelectedListener(new OnChildViewHolderSelectedListener() {
                    public void onChildViewHolderSelected(RecyclerView parent,
                            RecyclerView.ViewHolder child, int selectedPosition, int subposition) {
                        if (selectedPosition == position) {
                            removeOnChildViewHolderSelectedListener(this);
                            task.run(child);
                        }
                    }
                });
            } else {
                task.run(vh);
            }
        }
        setSelectedPositionSmooth(position);
!!!30795191.java!!!	setSelectedPosition(in position : int, in task : ViewHolderTask) : void
        if (task != null) {
            RecyclerView.ViewHolder vh = findViewHolderForPosition(position);
            if (vh == null || hasPendingAdapterUpdates()) {
                addOnChildViewHolderSelectedListener(new OnChildViewHolderSelectedListener() {
                    public void onChildViewHolderSelected(RecyclerView parent,
                            RecyclerView.ViewHolder child, int selectedPosition, int subposition) {
                        if (selectedPosition == position) {
                            removeOnChildViewHolderSelectedListener(this);
                            task.run(child);
                        }
                    }
                });
            } else {
                task.run(vh);
            }
        }
        setSelectedPosition(position);
!!!30795319.java!!!	getSelectedPosition() : int
        return mLayoutManager.getSelection();
!!!30795447.java!!!	getSelectedSubPosition() : int
        return mLayoutManager.getSubSelection();
!!!30795575.java!!!	setAnimateChildLayout(inout animateChildLayout : boolean) : void
        if (mAnimateChildLayout != animateChildLayout) {
            mAnimateChildLayout = animateChildLayout;
            if (!mAnimateChildLayout) {
                mSavedItemAnimator = getItemAnimator();
                super.setItemAnimator(null);
            } else {
                super.setItemAnimator(mSavedItemAnimator);
            }
        }
!!!30795703.java!!!	isChildLayoutAnimated() : boolean
        return mAnimateChildLayout;
!!!30795831.java!!!	setGravity(in gravity : int) : void
        mLayoutManager.setGravity(gravity);
        requestLayout();
!!!30795959.java!!!	onRequestFocusInDescendants(in direction : int, inout previouslyFocusedRect : Rect) : boolean
        return mLayoutManager.gridOnRequestFocusInDescendants(this, direction,
                previouslyFocusedRect);
!!!30796087.java!!!	getViewSelectedOffsets(inout view : View, inout offsets : int) : void
        mLayoutManager.getViewSelectedOffsets(view, offsets);
!!!30796215.java!!!	getChildDrawingOrder(in childCount : int, in i : int) : int
        return mLayoutManager.getChildDrawingOrder(this, childCount, i);
!!!30796343.java!!!	isChildrenDrawingOrderEnabledInternal() : boolean
        return isChildrenDrawingOrderEnabled();
!!!30796471.java!!!	focusSearch(in direction : int) : View
        if (isFocused()) {
            // focusSearch(int) is called when GridView itself is focused.
            // Calling focusSearch(view, int) to get next sibling of current selected child.
            View view = mLayoutManager.findViewByPosition(mLayoutManager.getSelection());
            if (view != null) {
                return focusSearch(view, direction);
            }
        }
        // otherwise, go to mParent to perform focusSearch
        return super.focusSearch(direction);
!!!30796599.java!!!	onFocusChanged(inout gainFocus : boolean, in direction : int, inout previouslyFocusedRect : Rect) : void
        super.onFocusChanged(gainFocus, direction, previouslyFocusedRect);
        mLayoutManager.onFocusChanged(gainFocus, direction, previouslyFocusedRect);
!!!30796727.java!!!	setFocusSearchDisabled(inout disabled : boolean) : void
        // LayoutManager may detachView and attachView in fastRelayout, it causes RowsFragment
        // re-gain focus after a BACK key pressed, so block children focus during transition.
        setDescendantFocusability(disabled ? FOCUS_BLOCK_DESCENDANTS: FOCUS_AFTER_DESCENDANTS);
        mLayoutManager.setFocusSearchDisabled(disabled);
!!!30796855.java!!!	isFocusSearchDisabled() : boolean
        return mLayoutManager.isFocusSearchDisabled();
!!!30796983.java!!!	setLayoutEnabled(inout layoutEnabled : boolean) : void
        mLayoutManager.setLayoutEnabled(layoutEnabled);
!!!30797111.java!!!	setChildrenVisibility(in visibility : int) : void
        mLayoutManager.setChildrenVisibility(visibility);
!!!30797239.java!!!	setPruneChild(inout pruneChild : boolean) : void
        mLayoutManager.setPruneChild(pruneChild);
!!!30797367.java!!!	setScrollEnabled(inout scrollEnabled : boolean) : void
        mLayoutManager.setScrollEnabled(scrollEnabled);
!!!30797495.java!!!	isScrollEnabled() : boolean
        return mLayoutManager.isScrollEnabled();
!!!30797623.java!!!	hasPreviousViewInSameRow(in position : int) : boolean
        return mLayoutManager.hasPreviousViewInSameRow(position);
!!!30797751.java!!!	setFocusDrawingOrderEnabled(inout enabled : boolean) : void
        super.setChildrenDrawingOrderEnabled(enabled);
!!!30797879.java!!!	isFocusDrawingOrderEnabled() : boolean
        return super.isChildrenDrawingOrderEnabled();
!!!30798007.java!!!	setOnTouchInterceptListener(inout listener : BaseGridView::OnTouchInterceptListener) : void
        mOnTouchInterceptListener = listener;
!!!30798135.java!!!	setOnMotionInterceptListener(inout listener : BaseGridView::OnMotionInterceptListener) : void
        mOnMotionInterceptListener = listener;
!!!30798263.java!!!	setOnKeyInterceptListener(inout listener : BaseGridView::OnKeyInterceptListener) : void
        mOnKeyInterceptListener = listener;
!!!30798391.java!!!	setOnUnhandledKeyListener(inout listener : BaseGridView::OnUnhandledKeyListener) : void
        mOnUnhandledKeyListener = listener;
!!!30798519.java!!!	getOnUnhandledKeyListener() : BaseGridView::OnUnhandledKeyListener
        return mOnUnhandledKeyListener;
!!!30798647.java!!!	dispatchKeyEvent(inout event : KeyEvent) : boolean
        if (mOnKeyInterceptListener != null && mOnKeyInterceptListener.onInterceptKeyEvent(event)) {
            return true;
        }
        if (super.dispatchKeyEvent(event)) {
            return true;
        }
        if (mOnUnhandledKeyListener != null && mOnUnhandledKeyListener.onUnhandledKey(event)) {
            return true;
        }
        return false;
!!!30798775.java!!!	dispatchTouchEvent(inout event : MotionEvent) : boolean
        if (mOnTouchInterceptListener != null) {
            if (mOnTouchInterceptListener.onInterceptTouchEvent(event)) {
                return true;
            }
        }
        return super.dispatchTouchEvent(event);
!!!30798903.java!!!	dispatchGenericFocusedEvent(inout event : MotionEvent) : boolean
        if (mOnMotionInterceptListener != null) {
            if (mOnMotionInterceptListener.onInterceptMotionEvent(event)) {
                return true;
            }
        }
        return super.dispatchGenericFocusedEvent(event);
!!!30799031.java!!!	getSaveChildrenPolicy() : int
        return mLayoutManager.mChildrenStates.getSavePolicy();
!!!30799159.java!!!	getSaveChildrenLimitNumber() : int
        return mLayoutManager.mChildrenStates.getLimitNumber();
!!!30799287.java!!!	setSaveChildrenPolicy(in savePolicy : int) : void
        mLayoutManager.mChildrenStates.setSavePolicy(savePolicy);
!!!30799415.java!!!	setSaveChildrenLimitNumber(in limitNumber : int) : void
        mLayoutManager.mChildrenStates.setLimitNumber(limitNumber);
!!!30799543.java!!!	hasOverlappingRendering() : boolean
        return mHasOverlappingRendering;
!!!30799671.java!!!	setHasOverlappingRendering(inout hasOverlapping : boolean) : void
        mHasOverlappingRendering = hasOverlapping;
!!!30799799.java!!!	onRtlPropertiesChanged(in layoutDirection : int) : void
        mLayoutManager.onRtlPropertiesChanged(layoutDirection);
!!!30799927.java!!!	setRecyclerListener(inout listener : RecyclerView::RecyclerListener) : void
        mChainedRecyclerListener = listener;
!!!30800055.java!!!	setExtraLayoutSpace(in extraLayoutSpace : int) : void
        mLayoutManager.setExtraLayoutSpace(extraLayoutSpace);
!!!30800183.java!!!	getExtraLayoutSpace() : int
        return mLayoutManager.getExtraLayoutSpace();
