class NavigationBarTransitions
!!!31133111.java!!!	NavigationBarTransitions(inout view : NavigationBarView)
        super(view, R.drawable.nav_background);
        mView = view;
        mBarService = IStatusBarService.Stub.asInterface(
                ServiceManager.getService(Context.STATUS_BAR_SERVICE));
!!!31133239.java!!!	init() : void
        applyModeBackground(-1, getMode(), false /*animate*/);
        applyMode(getMode(), false /*animate*/, true /*force*/);
!!!31133367.java!!!	onTransition(in oldMode : int, in newMode : int, inout animate : boolean) : void
        super.onTransition(oldMode, newMode, animate);
        applyMode(newMode, animate, false /*force*/);
!!!31133495.java!!!	applyMode(in mode : int, inout animate : boolean, inout force : boolean) : void

        // apply to lights out
        applyLightsOut(isLightsOut(mode), animate, force);
!!!31133623.java!!!	applyLightsOut(inout lightsOut : boolean, inout animate : boolean, inout force : boolean) : void
        if (!force && lightsOut == mLightsOut) return;

        mLightsOut = lightsOut;

        final View navButtons = mView.getCurrentView().findViewById(R.id.nav_buttons);

        // ok, everyone, stop it right there
        navButtons.animate().cancel();

        final float navButtonsAlpha = lightsOut ? 0.5f : 1f;

        if (!animate) {
            navButtons.setAlpha(navButtonsAlpha);
        } else {
            final int duration = lightsOut ? LIGHTS_OUT_DURATION : LIGHTS_IN_DURATION;
            navButtons.animate()
                .alpha(navButtonsAlpha)
                .setDuration(duration)
                .start();
        }
