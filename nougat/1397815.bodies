class ColorAndAppearanceFragment
!!!31403575.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        mNightModeController = new NightModeController(getContext());
!!!31403703.java!!!	onCreatePreferences(inout savedInstanceState : Bundle, inout rootKey : String) : void
        addPreferencesFromResource(R.xml.color_and_appearance);
!!!31403831.java!!!	onResume() : void
        super.onResume();
        MetricsLogger.visibility(getContext(), MetricsEvent.TUNER_COLOR_AND_APPEARANCE, true);
        // TODO: Figure out better title model for Tuner, to avoid any more of this.
        getActivity().setTitle(R.string.color_and_appearance);

        Preference nightMode = findPreference(KEY_NIGHT_MODE);
        nightMode.setSummary(mNightModeController.isEnabled()
                ? R.string.night_mode_on : R.string.night_mode_off);
!!!31403959.java!!!	onPause() : void
        super.onPause();
        MetricsLogger.visibility(getContext(), MetricsEvent.TUNER_COLOR_AND_APPEARANCE, false);
!!!31404087.java!!!	onDisplayPreferenceDialog(inout preference : Preference) : void
        if (preference instanceof CalibratePreference) {
            CalibrateDialog.show(this);
        } else {
            super.onDisplayPreferenceDialog(preference);
        }
!!!31404215.java!!!	startRevertTimer() : void
        getView().postDelayed(mResetColorMatrix, RESET_DELAY);
!!!31404343.java!!!	onApply() : void
        MetricsLogger.action(getContext(), MetricsEvent.ACTION_TUNER_CALIBRATE_DISPLAY_CHANGED);
        mNightModeController.setCustomValues(Settings.Secure.getString(
                getContext().getContentResolver(), Secure.ACCESSIBILITY_DISPLAY_COLOR_MATRIX));
        getView().removeCallbacks(mResetColorMatrix);
!!!31404471.java!!!	onRevert() : void
        getView().removeCallbacks(mResetColorMatrix);
        mResetColorMatrix.run();
