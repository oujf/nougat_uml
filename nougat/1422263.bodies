class Tile
!!!31584183.java!!!	Tile(in x : int, in y : int, in level : int)
            mX = x;
            mY = y;
            mTileLevel = level;
!!!31584311.java!!!	onFreeBitmap(inout bitmap : Bitmap) : void
            sTilePool.release(bitmap);
!!!31584439.java!!!	decode() : boolean
            // Get a tile from the original image. The tile is down-scaled
            // by (1 << mTilelevel) from a region in the original image.
            try {
                Bitmap reuse = sTilePool.acquire();
                if (reuse != null && reuse.getWidth() != mTileSize) {
                    reuse = null;
                }
                mDecodedTile = mModel.getTile(mTileLevel, mX, mY, reuse);
            } catch (Throwable t) {
                Log.w(TAG, "fail to decode tile", t);
            }
            return mDecodedTile != null;
!!!31584567.java!!!	onGetBitmap() : Bitmap
            Utils.assertTrue(mTileState == STATE_DECODED);

            // We need to override the width and height, so that we won't
            // draw beyond the boundaries.
            int rightEdge = ((mImageWidth - mX) >> mTileLevel);
            int bottomEdge = ((mImageHeight - mY) >> mTileLevel);
            setSize(Math.min(mTileSize, rightEdge), Math.min(mTileSize, bottomEdge));

            Bitmap bitmap = mDecodedTile;
            mDecodedTile = null;
            mTileState = STATE_ACTIVATED;
            return bitmap;
!!!31584695.java!!!	getTextureWidth() : int
            return mTileSize;
!!!31584823.java!!!	getTextureHeight() : int
            return mTileSize;
!!!31584951.java!!!	update(in x : int, in y : int, in level : int) : void
            mX = x;
            mY = y;
            mTileLevel = level;
            invalidateContent();
!!!31585079.java!!!	getParentTile() : TiledImageRenderer::Tile
            if (mTileLevel + 1 == mLevelCount) {
                return null;
            }
            int size = mTileSize << (mTileLevel + 1);
            int x = size * (mX / size);
            int y = size * (mY / size);
            return getTile(x, y, mTileLevel + 1);
!!!31585207.java!!!	toString() : String
            return String.format("tile(%s, %s, %s / %s)",
                    mX / mTileSize, mY / mTileSize, mLevel, mLevelCount);
