class Double3
!!!31649975.java!!!	Double3(inout data : Double3)
        this.x = data.x;
        this.y = data.y;
        this.z = data.z;
!!!31650103.java!!!	Double3(in x : double, in y : double, in z : double)
        this.x = x;
        this.y = y;
        this.z = z;
!!!31650231.java!!!	add(inout a : Double3, inout b : Double3) : Double3
        Double3 res = new Double3();
        res.x = a.x + b.x;
        res.y = a.y + b.y;
        res.z = a.z + b.z;

        return res;
!!!31650359.java!!!	add(inout value : Double3) : void
        x += value.x;
        y += value.y;
        z += value.z;
!!!31650487.java!!!	add(in value : double) : void
        x += value;
        y += value;
        z += value;
!!!31650615.java!!!	add(inout a : Double3, in b : double) : Double3
        Double3 res = new Double3();
        res.x = a.x + b;
        res.y = a.y + b;
        res.z = a.z + b;

        return res;
!!!31650743.java!!!	sub(inout value : Double3) : void
        x -= value.x;
        y -= value.y;
        z -= value.z;
!!!31650871.java!!!	sub(inout a : Double3, inout b : Double3) : Double3
        Double3 res = new Double3();
        res.x = a.x - b.x;
        res.y = a.y - b.y;
        res.z = a.z - b.z;

        return res;
!!!31650999.java!!!	sub(in value : double) : void
        x -= value;
        y -= value;
        z -= value;
!!!31651127.java!!!	sub(inout a : Double3, in b : double) : Double3
        Double3 res = new Double3();
        res.x = a.x - b;
        res.y = a.y - b;
        res.z = a.z - b;

        return res;
!!!31651255.java!!!	mul(inout value : Double3) : void
        x *= value.x;
        y *= value.y;
        z *= value.z;
!!!31651383.java!!!	mul(inout a : Double3, inout b : Double3) : Double3
        Double3 res = new Double3();
        res.x = a.x * b.x;
        res.y = a.y * b.y;
        res.z = a.z * b.z;

        return res;
!!!31651511.java!!!	mul(in value : double) : void
        x *= value;
        y *= value;
        z *= value;
!!!31651639.java!!!	mul(inout a : Double3, in b : double) : Double3
        Double3 res = new Double3();
        res.x = a.x * b;
        res.y = a.y * b;
        res.z = a.z * b;

        return res;
!!!31651767.java!!!	div(inout value : Double3) : void
        x /= value.x;
        y /= value.y;
        z /= value.z;
!!!31651895.java!!!	div(inout a : Double3, inout b : Double3) : Double3
        Double3 res = new Double3();
        res.x = a.x / b.x;
        res.y = a.y / b.y;
        res.z = a.z / b.z;

        return res;
!!!31652023.java!!!	div(in value : double) : void
        x /= value;
        y /= value;
        z /= value;
!!!31652151.java!!!	div(inout a : Double3, in b : double) : Double3
        Double3 res = new Double3();
        res.x = a.x / b;
        res.y = a.y / b;
        res.z = a.z / b;

        return res;
!!!31652279.java!!!	dotProduct(inout a : Double3) : double
        return (x * a.x) + (y * a.y) + (z * a.z);
!!!31652407.java!!!	dotProduct(inout a : Double3, inout b : Double3) : double
        return (b.x * a.x) + (b.y * a.y) + (b.z * a.z);
!!!31652535.java!!!	addMultiple(inout a : Double3, in factor : double) : void
        x += a.x * factor;
        y += a.y * factor;
        z += a.z * factor;
!!!31652663.java!!!	set(inout a : Double3) : void
        this.x = a.x;
        this.y = a.y;
        this.z = a.z;
!!!31652791.java!!!	negate() : void
        x = -x;
        y = -y;
        z = -z;
!!!31652919.java!!!	length() : int
        return 3;
!!!31653047.java!!!	elementSum() : double
        return x + y + z;
!!!31653175.java!!!	get(in i : int) : double
        switch (i) {
        case 0:
            return x;
        case 1:
            return y;
        case 2:
            return z;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!31653303.java!!!	setAt(in i : int, in value : double) : void
        switch (i) {
        case 0:
            x = value;
            return;
        case 1:
            y = value;
            return;
        case 2:
            z = value;
            return;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!31653431.java!!!	addAt(in i : int, in value : double) : void
        switch (i) {
        case 0:
            x += value;
            return;
        case 1:
            y += value;
            return;
        case 2:
            z += value;
            return;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!31653559.java!!!	setValues(in x : double, in y : double, in z : double) : void
        this.x = x;
        this.y = y;
        this.z = z;
!!!31653687.java!!!	copyTo(inout data : double, in offset : int) : void
        data[offset] = x;
        data[offset + 1] = y;
        data[offset + 2] = z;
