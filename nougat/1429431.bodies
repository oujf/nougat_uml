class Short4
!!!31844919.java!!!	Short4(in i : short)
        this.x = this.y = this.z = this.w = i;
!!!31845047.java!!!	Short4(in x : short, in y : short, in z : short, in w : short)
        this.x = x;
        this.y = y;
        this.z = z;
        this.w = w;
!!!31845175.java!!!	Short4(inout source : Short4)
        this.x = source.x;
        this.y = source.y;
        this.z = source.z;
        this.w = source.w;
!!!31845303.java!!!	add(inout a : Short4) : void
        this.x += a.x;
        this.y += a.y;
        this.z += a.z;
        this.w += a.w;
!!!31845431.java!!!	add(inout a : Short4, inout b : Short4) : Short4
        Short4 result = new Short4();
        result.x = (short)(a.x + b.x);
        result.y = (short)(a.y + b.y);
        result.z = (short)(a.z + b.z);
        result.w = (short)(a.w + b.w);

        return result;
!!!31845559.java!!!	add(in value : short) : void
        x += value;
        y += value;
        z += value;
        w += value;
!!!31845687.java!!!	add(inout a : Short4, in b : short) : Short4
        Short4 result = new Short4();
        result.x = (short)(a.x + b);
        result.y = (short)(a.y + b);
        result.z = (short)(a.z + b);
        result.w = (short)(a.w + b);

        return result;
!!!31845815.java!!!	sub(inout a : Short4) : void
        this.x -= a.x;
        this.y -= a.y;
        this.z -= a.z;
        this.w -= a.w;
!!!31845943.java!!!	sub(inout a : Short4, inout b : Short4) : Short4
        Short4 result = new Short4();
        result.x = (short)(a.x - b.x);
        result.y = (short)(a.y - b.y);
        result.z = (short)(a.z - b.z);
        result.w = (short)(a.w - b.w);

        return result;
!!!31846071.java!!!	sub(in value : short) : void
        x -= value;
        y -= value;
        z -= value;
        w -= value;
!!!31846199.java!!!	sub(inout a : Short4, in b : short) : Short4
        Short4 result = new Short4();
        result.x = (short)(a.x - b);
        result.y = (short)(a.y - b);
        result.z = (short)(a.z - b);
        result.w = (short)(a.w - b);

        return result;
!!!31846327.java!!!	mul(inout a : Short4) : void
        this.x *= a.x;
        this.y *= a.y;
        this.z *= a.z;
        this.w *= a.w;
!!!31846455.java!!!	mul(inout a : Short4, inout b : Short4) : Short4
        Short4 result = new Short4();
        result.x = (short)(a.x * b.x);
        result.y = (short)(a.y * b.y);
        result.z = (short)(a.z * b.z);
        result.w = (short)(a.w * b.w);

        return result;
!!!31846583.java!!!	mul(in value : short) : void
        x *= value;
        y *= value;
        z *= value;
        w *= value;
!!!31846711.java!!!	mul(inout a : Short4, in b : short) : Short4
        Short4 result = new Short4();
        result.x = (short)(a.x * b);
        result.y = (short)(a.y * b);
        result.z = (short)(a.z * b);
        result.w = (short)(a.w * b);

        return result;
!!!31846839.java!!!	div(inout a : Short4) : void
        this.x /= a.x;
        this.y /= a.y;
        this.z /= a.z;
        this.w /= a.w;
!!!31846967.java!!!	div(inout a : Short4, inout b : Short4) : Short4
        Short4 result = new Short4();
        result.x = (short)(a.x / b.x);
        result.y = (short)(a.y / b.y);
        result.z = (short)(a.z / b.z);
        result.w = (short)(a.w / b.w);

        return result;
!!!31847095.java!!!	div(in value : short) : void
        x /= value;
        y /= value;
        z /= value;
        w /= value;
!!!31847223.java!!!	div(inout a : Short4, in b : short) : Short4
        Short4 result = new Short4();
        result.x = (short)(a.x / b);
        result.y = (short)(a.y / b);
        result.z = (short)(a.z / b);
        result.w = (short)(a.w / b);

        return result;
!!!31847351.java!!!	mod(inout a : Short4) : void
        this.x %= a.x;
        this.y %= a.y;
        this.z %= a.z;
        this.w %= a.w;
!!!31847479.java!!!	mod(inout a : Short4, inout b : Short4) : Short4
        Short4 result = new Short4();
        result.x = (short)(a.x % b.x);
        result.y = (short)(a.y % b.y);
        result.z = (short)(a.z % b.z);
        result.w = (short)(a.w % b.w);

        return result;
!!!31847607.java!!!	mod(in value : short) : void
        x %= value;
        y %= value;
        z %= value;
        w %= value;
!!!31847735.java!!!	mod(inout a : Short4, in b : short) : Short4
        Short4 result = new Short4();
        result.x = (short)(a.x % b);
        result.y = (short)(a.y % b);
        result.z = (short)(a.z % b);
        result.w = (short)(a.w % b);

        return result;
!!!31847863.java!!!	length() : short
        return 4;
!!!31847991.java!!!	negate() : void
        this.x = (short)(-x);
        this.y = (short)(-y);
        this.z = (short)(-z);
        this.w = (short)(-w);
!!!31848119.java!!!	dotProduct(inout a : Short4) : short
        return (short)((x * a.x) + (y * a.y) + (z * a.z) + (w * a.w));
!!!31848247.java!!!	dotProduct(inout a : Short4, inout b : Short4) : short
        return (short)((b.x * a.x) + (b.y * a.y) + (b.z * a.z) + (b.w * a.w));
!!!31848375.java!!!	addMultiple(inout a : Short4, in factor : short) : void
        x += a.x * factor;
        y += a.y * factor;
        z += a.z * factor;
        w += a.w * factor;
!!!31848503.java!!!	set(inout a : Short4) : void
        this.x = a.x;
        this.y = a.y;
        this.z = a.z;
        this.w = a.w;
!!!31848631.java!!!	setValues(in a : short, in b : short, in c : short, in d : short) : void
        this.x = a;
        this.y = b;
        this.z = c;
        this.w = d;
!!!31848759.java!!!	elementSum() : short
        return (short)(x + y + z + w);
!!!31848887.java!!!	get(in i : int) : short
        switch (i) {
        case 0:
            return (short)(x);
        case 1:
            return (short)(y);
        case 2:
            return (short)(z);
        case 3:
            return (short)(w);
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!31849015.java!!!	setAt(in i : int, in value : short) : void
        switch (i) {
        case 0:
            x = value;
            return;
        case 1:
            y = value;
            return;
        case 2:
            z = value;
            return;
        case 3:
            w = value;
            return;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!31849143.java!!!	addAt(in i : int, in value : short) : void
        switch (i) {
        case 0:
            x += value;
            return;
        case 1:
            y += value;
            return;
        case 2:
            z += value;
            return;
        case 3:
            w += value;
            return;
        default:
            throw new IndexOutOfBoundsException("Index: i");
        }
!!!31849271.java!!!	copyTo(inout data : short, in offset : int) : void
        data[offset] = (short)(x);
        data[offset + 1] = (short)(y);
        data[offset + 2] = (short)(z);
        data[offset + 3] = (short)(w);
