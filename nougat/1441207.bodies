class ScriptIntrinsicLUT
!!!31832631.java!!!	ScriptIntrinsicLUT(in id : long, inout rs : RenderScript)
        super(id, rs);
        mTables = Allocation.createSized(rs, Element.U8(rs), 1024);
        for (int ct=0; ct < 256; ct++) {
            mCache[ct] = (byte)ct;
            mCache[ct + 256] = (byte)ct;
            mCache[ct + 512] = (byte)ct;
            mCache[ct + 768] = (byte)ct;
        }
        setVar(0, mTables);
!!!31832759.java!!!	create(inout rs : RenderScript, inout e : Element) : ScriptIntrinsicLUT
        long id = rs.nScriptIntrinsicCreate(3, e.getID(rs));
        return new ScriptIntrinsicLUT(id, rs);

!!!31832887.java!!!	validate(in index : int, in value : int) : void
        if (index < 0 || index > 255) {
            throw new RSIllegalArgumentException("Index out of range (0-255).");
        }
        if (value < 0 || value > 255) {
            throw new RSIllegalArgumentException("Value out of range (0-255).");
        }
!!!31833015.java!!!	setRed(in index : int, in value : int) : void
        validate(index, value);
        mCache[index] = (byte)value;
        mDirty = true;
!!!31833143.java!!!	setGreen(in index : int, in value : int) : void
        validate(index, value);
        mCache[index+256] = (byte)value;
        mDirty = true;
!!!31833271.java!!!	setBlue(in index : int, in value : int) : void
        validate(index, value);
        mCache[index+512] = (byte)value;
        mDirty = true;
!!!31833399.java!!!	setAlpha(in index : int, in value : int) : void
        validate(index, value);
        mCache[index+768] = (byte)value;
        mDirty = true;
!!!31833527.java!!!	forEach(inout ain : Allocation, inout aout : Allocation) : void
        forEach(ain, aout, null);
!!!31833655.java!!!	forEach(inout ain : Allocation, inout aout : Allocation, inout opt : Script::LaunchOptions) : void
        if (mDirty) {
            mDirty = false;
            mTables.copyFromUnchecked(mCache);
        }
        forEach(0, ain, aout, null, opt);
!!!31833783.java!!!	getKernelID() : Script::KernelID
        return createKernelID(0, 3, null, null);
