class BinderService
!!!32091319.java!!!	addPowerSaveWhitelistApp(inout name : String) : void
            getContext().enforceCallingOrSelfPermission(android.Manifest.permission.DEVICE_POWER,
                    null);
            long ident = Binder.clearCallingIdentity();
            try {
                addPowerSaveWhitelistAppInternal(name);
            } finally {
                Binder.restoreCallingIdentity(ident);
            }
!!!32091447.java!!!	removePowerSaveWhitelistApp(inout name : String) : void
            getContext().enforceCallingOrSelfPermission(android.Manifest.permission.DEVICE_POWER,
                    null);
            long ident = Binder.clearCallingIdentity();
            try {
                removePowerSaveWhitelistAppInternal(name);
            } finally {
                Binder.restoreCallingIdentity(ident);
            }
!!!32091575.java!!!	getSystemPowerWhitelistExceptIdle() : String
            return getSystemPowerWhitelistExceptIdleInternal();
!!!32091703.java!!!	getSystemPowerWhitelist() : String
            return getSystemPowerWhitelistInternal();
!!!32091831.java!!!	getUserPowerWhitelist() : String
            return getUserPowerWhitelistInternal();
!!!32091959.java!!!	getFullPowerWhitelistExceptIdle() : String
            return getFullPowerWhitelistExceptIdleInternal();
!!!32092087.java!!!	getFullPowerWhitelist() : String
            return getFullPowerWhitelistInternal();
!!!32092215.java!!!	getAppIdWhitelistExceptIdle() : int
            return getAppIdWhitelistExceptIdleInternal();
!!!32092343.java!!!	getAppIdWhitelist() : int
            return getAppIdWhitelistInternal();
!!!32092471.java!!!	getAppIdUserWhitelist() : int
            return getAppIdUserWhitelistInternal();
!!!32092599.java!!!	getAppIdTempWhitelist() : int
            return getAppIdTempWhitelistInternal();
!!!32092727.java!!!	isPowerSaveWhitelistExceptIdleApp(inout name : String) : boolean
            return isPowerSaveWhitelistExceptIdleAppInternal(name);
!!!32092855.java!!!	isPowerSaveWhitelistApp(inout name : String) : boolean
            return isPowerSaveWhitelistAppInternal(name);
!!!32092983.java!!!	addPowerSaveTempWhitelistApp(inout packageName : String, in duration : long, in userId : int, inout reason : String) : void
            addPowerSaveTempWhitelistAppChecked(packageName, duration, userId, reason);
!!!32093111.java!!!	addPowerSaveTempWhitelistAppForMms(inout packageName : String, in userId : int, inout reason : String) : long
            long duration = mConstants.MMS_TEMP_APP_WHITELIST_DURATION;
            addPowerSaveTempWhitelistAppChecked(packageName, duration, userId, reason);
            return duration;
!!!32093239.java!!!	addPowerSaveTempWhitelistAppForSms(inout packageName : String, in userId : int, inout reason : String) : long
            long duration = mConstants.SMS_TEMP_APP_WHITELIST_DURATION;
            addPowerSaveTempWhitelistAppChecked(packageName, duration, userId, reason);
            return duration;
!!!32093367.java!!!	exitIdle(inout reason : String) : void
            getContext().enforceCallingOrSelfPermission(Manifest.permission.DEVICE_POWER,
                    null);
            long ident = Binder.clearCallingIdentity();
            try {
                exitIdleInternal(reason);
            } finally {
                Binder.restoreCallingIdentity(ident);
            }
!!!32093495.java!!!	registerMaintenanceActivityListener(inout listener : IMaintenanceActivityListener) : boolean
            return DeviceIdleController.this.registerMaintenanceActivityListener(listener);
!!!32093623.java!!!	unregisterMaintenanceActivityListener(inout listener : IMaintenanceActivityListener) : void
            DeviceIdleController.this.unregisterMaintenanceActivityListener(listener);
!!!32093751.java!!!	dump(inout fd : FileDescriptor, inout pw : PrintWriter, inout args : String) : void
            DeviceIdleController.this.dump(fd, pw, args);
!!!32093879.java!!!	onShellCommand(inout in : FileDescriptor, inout out : FileDescriptor, inout err : FileDescriptor, inout args : String, inout resultReceiver : ResultReceiver) : void
            (new Shell()).exec(this, in, out, err, args, resultReceiver);
