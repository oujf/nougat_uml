class HardwarePropertiesManagerService
!!!32114999.java!!!	HardwarePropertiesManagerService(inout context : Context)
        mContext = context;
        synchronized (mLock) {
            nativeInit();
        }
!!!32115127.java!!!	getDeviceTemperatures(inout callingPackage : String, in type : int, in source : int) : float
        enforceHardwarePropertiesRetrievalAllowed(callingPackage);
        synchronized (mLock) {
            return nativeGetDeviceTemperatures(type, source);
        }
!!!32115255.java!!!	getCpuUsages(inout callingPackage : String) : CpuUsageInfo
        enforceHardwarePropertiesRetrievalAllowed(callingPackage);
        synchronized (mLock) {
            return nativeGetCpuUsages();
        }
!!!32115383.java!!!	getFanSpeeds(inout callingPackage : String) : float
        enforceHardwarePropertiesRetrievalAllowed(callingPackage);
        synchronized (mLock) {
            return nativeGetFanSpeeds();
        }
!!!32115511.java!!!	enforceHardwarePropertiesRetrievalAllowed(inout callingPackage : String) : void
        final PackageManager pm = mContext.getPackageManager();
        int uid = 0;
        try {
            uid = pm.getPackageUid(callingPackage, 0);
            if (Binder.getCallingUid() != uid) {
                throw new SecurityException("The caller has faked the package name.");
            }
        } catch (PackageManager.NameNotFoundException e) {
            throw new SecurityException("The caller has faked the package name.");
        }

        final int userId = UserHandle.getUserId(uid);
        final VrManagerInternal vrService = LocalServices.getService(VrManagerInternal.class);
        final DevicePolicyManager dpm = mContext.getSystemService(DevicePolicyManager.class);
        if (!dpm.isDeviceOwnerApp(callingPackage) && !dpm.isProfileOwnerApp(callingPackage)
                && !vrService.isCurrentVrListener(callingPackage, userId)) {
            throw new SecurityException("The caller is not a device or profile owner or bound "
                + "VrListenerService.");
        }
