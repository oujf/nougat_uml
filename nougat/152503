format 76
"backup" // nougat_src::frameworks::base::core::java::android::app::backup
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/core/java/android/app/backup/"
  java_package "android.app.backup"
  classview 148023 "backup"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 284471 "BackupProgress"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Information about current progress of full data backup
Used in {@link BackupObserver#onUpdate(String, BackupProgress)}

@hide"
      classrelation 923831 // <realization>
	relation 923831 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 923831 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 918967 "bytesExpected"
	const_attribute public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Expected size of data in full backup.
"
      end

      attribute 919095 "bytesTransferred"
	const_attribute public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Amount of backup data that is already saved in backup.
"
      end

      operation 2420023 "BackupProgress"
	public explicit_return_type ""
	nparams 2
	  param in name "_bytesExpected" explicit_type "long"
	  param in name "_bytesTransferred" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2420151 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2420279 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 923959 // CREATOR (<unidirectional association>)
	relation 923959 --->
	  a role_name "CREATOR" init_value " new Creator<BackupProgress>() {
        public BackupProgress createFromParcel(Parcel in) {
            return new BackupProgress(in);
        }

        public BackupProgress[] newArray(int size) {
            return new BackupProgress[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<BackupProgress> ${name}${value};
"
	    classrelation_ref 923959 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 2420407 "BackupProgress"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 284599 "RestoreSet"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Descriptive information about a set of backed-up app data available for restore.
Used by IRestoreSession clients.

@hide"
      classrelation 930487 // <realization>
	relation 930487 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 930487 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 930615 // name (<unidirectional association>)
	relation 930615 --->
	  a role_name "name" public
	    comment "
Name of this restore set.  May be user generated, may simply be the name
of the handset model, e.g. \"T-Mobile G1\".

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 930615 // name (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 930743 // device (<unidirectional association>)
	relation 930743 --->
	  a role_name "device" public
	    comment "
Identifier of the device whose data this is.  This will be as unique as
is practically possible; for example, it might be an IMEI.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 930743 // device (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 923959 "token"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Token that identifies this backup set unambiguously to the backup/restore
transport.  This is guaranteed to be valid for the duration of a restore
session, but is meaningless once the session has ended.
"
      end

      operation 2435127 "RestoreSet"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2435255 "RestoreSet"
	public explicit_return_type ""
	nparams 3
	  param inout name "_name" type class_ref 129591 // String
	  param inout name "_dev" type class_ref 129591 // String
	  param in name "_token" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2435383 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parcelable implementation"
      end

      operation 2435511 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 930871 // CREATOR (<unidirectional association>)
	relation 930871 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<RestoreSet>() {
        public RestoreSet createFromParcel(Parcel in) {
            return new RestoreSet(in);
        }

        public RestoreSet[] newArray(int size) {
            return new RestoreSet[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RestoreSet> ${name}${value};
"
	    classrelation_ref 930871 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 2435639 "RestoreSet"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 401719 "AbsoluteFileBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Like FileBackupHelper, but takes absolute paths for the files instead of
subpaths of getFilesDir()

@hide"
      classrelation 919991 // <generalisation>
	relation 919991 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 919991 // <generalisation>
	  b parent class_ref 401847 // FileBackupHelperBase
      end

      classrelation 920119 // <realization>
	relation 920119 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 920119 // <realization>
	  b parent class_ref 402231 // BackupHelper
      end

      classrelation 920247 // TAG (<unidirectional association>)
	relation 920247 --->
	  a role_name "TAG" init_value " \"AbsoluteFileBackupHelper\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 920247 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 915767 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 920375 // mContext (<unidirectional association>)
	relation 920375 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 920375 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      classrelation 920503 // mFiles (<unidirectional association>)
	relation 920503 --->
	  a role_name "mFiles" multiplicity "[]" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 920503 // mFiles (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 2407607 "AbsoluteFileBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "" explicit_type "String...files"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up / restoring the files at the given absolute locations
within the file system.

@param context
@param files"
      end

      operation 2407735 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on oldState, determine which of the files from the application's data directory
need to be backed up, write them to the data stream, and fill in newState with the
state as it exists now."
      end

      operation 2407863 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 402103 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore one absolute file entity from the restore stream"
      end
    end

    class 401847 "FileBackupHelperBase"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for the {@link android.app.backup.FileBackupHelper} implementation."
      classrelation 919735 // TAG (<unidirectional association>)
	relation 919735 --->
	  a role_name "TAG" init_value " \"FileBackupHelperBase\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 919735 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 915511 "mPtr"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 919863 // mContext (<unidirectional association>)
	relation 919863 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 919863 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 915639 "mExceptionLogged"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2405815 "FileBackupHelperBase"
	package explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2405943 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2406071 "performBackup_checked"
	class_operation package explicit_return_type "void"
	nparams 5
	  param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "files" type class_ref 129591 // String
	  param inout name "keys" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the parameters so the native code doesn't have to throw all the exceptions
since it's easier to do that from Java."
      end

      operation 2406199 "writeFile"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "f" explicit_type "File"
	  param inout name "in" type class_ref 402103 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2406327 "writeNewStateDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2406455 "isKeyInList"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "list" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2406583 "ctor"
	class_operation private explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 2406711 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "ptr" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 2406839 "performBackup_native"
	class_operation private explicit_return_type "int"
	nparams 5
	  param inout name "oldState" explicit_type "FileDescriptor"
	  param in name "data" explicit_type "long"
	  param inout name "newState" explicit_type "FileDescriptor"
	  param inout name "files" type class_ref 129591 // String
	  param inout name "keys" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws};
"
	
	
	
      end

      operation 2406967 "writeFile_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "ptr" explicit_type "long"
	  param inout name "filename" type class_ref 129591 // String
	  param in name "backupReader" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 2407095 "writeSnapshot_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "ptr" explicit_type "long"
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end
    end

    class 401975 "BackupDataOutput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the structured interface through which a {@link BackupAgent} commits
information to the backup data set, via its {@link
BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} method.  Data written for backup is presented
as a set of \"entities,\" key/value pairs in which each binary data record \"value\" is
named with a string \"key.\"
<p>
To commit a data record to the backup transport, the agent's
{@link BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} method first writes an \"entity header\" that supplies the key string for the record
and the total size of the binary value for the record.  After the header has been
written, the agent then writes the binary entity value itself.  The entity value can
be written in multiple chunks if desired, as long as the total count of bytes written
matches what was supplied to {@link #writeEntityHeader(String, int) writeEntityHeader()}.
<p>
Entity key strings are considered to be unique within a given application's backup
data set. If a backup agent writes a new entity under an existing key string, its value will
replace any previous value in the transport's remote data store.  You can remove a record
entirely from the remote data set by writing a new entity header using the
existing record's key, but supplying a negative <code>dataSize</code> parameter.
When you do so, the agent does not need to call {@link #writeEntityData(byte[], int)}.
<h3>Example</h3>
<p>
Here is an example illustrating a way to back up the value of a String variable
called <code>mStringToBackUp</code>:
<pre>
static final String MY_STRING_KEY = \"storedstring\";

public void {@link BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup(ParcelFileDescriptor oldState, BackupDataOutput data, ParcelFileDescriptor newState)}
        throws IOException {
    ...
    byte[] stringBytes = mStringToBackUp.getBytes();
    data.writeEntityHeader(MY_STRING_KEY, stringBytes.length);
    data.writeEntityData(stringBytes, stringBytes.length);
    ...
}</pre>

@see BackupAgent"
      attribute 917303 "mBackupWriter"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2414647 "BackupDataOutput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment " @hide "
      end

      operation 2414775 "writeEntityHeader"
	public explicit_return_type "int"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param in name "dataSize" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark the beginning of one record in the backup data stream. This must be called before
{@link #writeEntityData}.
@param key A string key that uniquely identifies the data record within the application.
   Keys whose first character is \\uFF00 or higher are not valid.
@param dataSize The size in bytes of this record's data.  Passing a dataSize
   of -1 indicates that the record under this key should be deleted.
@return The number of bytes written to the backup stream
@throws IOException if the write failed"
      end

      operation 2414903 "writeEntityData"
	public explicit_return_type "int"
	nparams 2
	  param inout name "data" explicit_type "byte"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a chunk of data under the current entity to the backup transport.
@param data A raw data buffer to send
@param size The number of bytes to be sent in this chunk
@return the number of bytes written
@throws IOException if the write failed"
      end

      operation 2415031 "setKeyPrefix"
	public explicit_return_type "void"
	nparams 1
	  param inout name "keyPrefix" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2415159 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 2415287 "ctor"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 2415415 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "mBackupWriter" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 2415543 "writeEntityHeader_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "mBackupWriter" explicit_type "long"
	  param inout name "key" type class_ref 129591 // String
	  param in name "dataSize" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 2415671 "writeEntityData_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "mBackupWriter" explicit_type "long"
	  param inout name "data" explicit_type "byte"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 2415799 "setKeyPrefix_native"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "mBackupWriter" explicit_type "long"
	  param inout name "keyPrefix" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end
    end

    class 402103 "BackupDataInputStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides an {@link java.io.InputStream}-like interface for accessing an
entity's data during a restore operation. Used by {@link BackupHelper} classes within the {@link
BackupAgentHelper} mechanism.
<p>
When {@link BackupHelper#restoreEntity(BackupDataInputStream) BackupHelper.restoreEntity()}
is called, the current entity's header has already been read from the underlying
{@link BackupDataInput}.  The entity's key string and total data size are available
through this class's {@link #getKey()} and {@link #size()} methods, respectively.
<p class=\"note\">
<strong>Note:</strong> The caller should take care not to seek or close the underlying data
source, nor read more than {@link #size()} bytes from the stream.</p>

@see BackupAgentHelper
@see BackupHelper"
      classrelation 922423 // <generalisation>
	relation 922423 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 922423 // <generalisation>
	  b parent class_ref 189751 // InputStream
      end

      classrelation 922551 // key (<unidirectional association>)
	relation 922551 --->
	  a role_name "key" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 922551 // key (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 917047 "dataSize"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 922679 // mData (<unidirectional association>)
	relation 922679 --->
	  a role_name "mData" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 922679 // mData (<unidirectional association>)
	  b parent class_ref 402615 // BackupDataInput
      end

      attribute 917175 "mOneByte"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2413879 "BackupDataInputStream"
	package explicit_return_type ""
	nparams 1
	  param inout name "data" type class_ref 402615 // BackupDataInput
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2414007 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read one byte of entity data from the stream, returning it as
an integer value.  If more than {@link #size()} bytes of data
are read from the stream, the output of this method is undefined.

@return The byte read, or undefined if the end of the stream has been reached."
      end

      operation 2414135 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read up to {@code size} bytes of data into a byte array, beginning at position
{@code offset} within the array.

@param b Byte array into which the data will be read
@param offset The data will be stored in {@code b} beginning at this index
  within the array.
@param size The number of bytes to read in this operation.  If insufficient
  data exists within the entity to fulfill this request, only as much data
  will be read as is available.
@return The number of bytes of data read, or zero if all of the entity's
  data has already been read."
      end

      operation 2414263 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "b" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read enough entity data into a byte array to fill the array.

@param b Byte array to fill with data from the stream.  If the stream does not
  have sufficient data to fill the array, then the contents of the remainder of
  the array will be undefined.
@return The number of bytes of data read, or zero if all of the entity's
  data has already been read."
      end

      operation 2414391 "getKey"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the key string associated with this entity within the backup data set.

@return The key string for this entity, equivalent to calling
  {@link BackupDataInput#getKey()} on the underlying {@link BackupDataInput}."
      end

      operation 2414519 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the total number of bytes of data available for the current entity.

@return The number of data bytes available, equivalent to calling
  {@link BackupDataInput#getDataSize()} on the underlying {@link BackupDataInput}."
      end
    end

    class 402231 "BackupHelper"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the calling interface that {@link BackupAgentHelper} uses
when dispatching backup and restore operations to the installed helpers.
Applications can define and install their own helpers as well as using those
provided as part of the Android framework.
<p>
Although multiple helper objects may be installed simultaneously, each helper
is responsible only for handling its own data, and will not see entities
created by other components within the backup system.  Invocations of multiple
helpers are performed sequentially by the {@link BackupAgentHelper}, with each
helper given a chance to access its own saved state from within the state record
produced during the previous backup operation.

@see BackupAgentHelper
@see FileBackupHelper
@see SharedPreferencesBackupHelper"
      operation 2407223 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on <code>oldState</code>, determine what application content
needs to be backed up, write it to <code>data</code>, and fill in
<code>newState</code> with the complete state as it exists now.
<p>
Implementing this method is much like implementing
{@link BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)
onBackup()} &mdash; the method parameters are the same.  When this method is invoked the
{@code oldState} descriptor points to the beginning of the state data
written during this helper's previous backup operation, and the {@code newState}
descriptor points to the file location at which the helper should write its
new state after performing the backup operation.
<p class=\"note\">
<strong>Note:</strong> The helper should not close or seek either the {@code oldState} or
the {@code newState} file descriptors.  It is essential that when reading the helper's
saved state from the {@code oldState} file, no extra content is consumed beyond
what was stored by this helper.  If more old state data is read, even accidentally,
it will make it impossible for additional helpers that may be invoked after this one
to properly reconstruct their prior state.</p>

@param oldState An open, read-only {@link android.os.ParcelFileDescriptor} pointing to the
           last backup state provided by the application. May be
           <code>null</code>, in which case no prior state is being
           provided and the application should perform a full backup.
@param data An open, read/write {@link BackupDataOutput}
           pointing to the backup data destination.
           Typically the application will use backup helper classes to
           write to this file.
@param newState An open, read/write {@link android.os.ParcelFileDescriptor} pointing to an
           empty file. The application should record the final backup
           state here after writing the requested data to the <code>data</code>
           output stream."
      end

      operation 2407351 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 402103 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link android.app.backup.BackupAgentHelper BackupAgentHelper}
to restore a single entity from the restore data set.  This method will be
called for each entity in the data set that belongs to this handler.
<p class=\"note\">
<strong>Note:</strong> Do not close the <code>data</code> stream.  Do not read more than
{@link android.app.backup.BackupDataInputStream#size() size()} bytes from
<code>data</code>.</p>

@param data An open {@link BackupDataInputStream} from which the backup data can be read."
      end

      operation 2407479 "writeNewStateDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link android.app.backup.BackupAgentHelper BackupAgentHelper}
after a restore operation to write the backup state file corresponding to
the data as processed by the helper.  The data written here will be
available to the helper during the next call to its
{@link #performBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)
performBackup()} method.
<p>
This method will be called even if the handler's
{@link #restoreEntity(BackupDataInputStream) restoreEntity()} method was never invoked during
the restore operation.
<p class=\"note\">
<strong>Note:</strong> The helper should not close or seek the {@code newState}
file descriptor.</p>

@param newState A {@link android.os.ParcelFileDescriptor} to which the new state will be
written."
      end
    end

    class 402359 "BackupAgent"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the central interface between an
application and Android's data backup infrastructure.  An application that wishes
to participate in the backup and restore mechanism will declare a subclass of
{@link android.app.backup.BackupAgent}, implement the
{@link #onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup()}
and {@link #onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()} methods,
and provide the name of its backup agent class in its {@code AndroidManifest.xml} file via
the <code>
<a href=\"{@docRoot}guide/topics/manifest/application-element.html\">&lt;application&gt;</a></code>
tag's {@code android:backupAgent} attribute.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupAgent, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p></div>

<h3>Basic Operation</h3>
<p>
When the application makes changes to data that it wishes to keep backed up,
it should call the
{@link android.app.backup.BackupManager#dataChanged() BackupManager.dataChanged()} method.
This notifies the Android Backup Manager that the application needs an opportunity
to update its backup image.  The Backup Manager, in turn, schedules a
backup pass to be performed at an opportune time.
<p>
Restore operations are typically performed only when applications are first
installed on a device.  At that time, the operating system checks to see whether
there is a previously-saved data set available for the application being installed, and if so,
begins an immediate restore pass to deliver the backup data as part of the installation
process.
<p>
When a backup or restore pass is run, the application's process is launched
(if not already running), the manifest-declared backup agent class (in the {@code
android:backupAgent} attribute) is instantiated within
that process, and the agent's {@link #onCreate()} method is invoked.  This prepares the
agent instance to run the actual backup or restore logic.  At this point the
agent's
{@link #onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup()} or
{@link #onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()} method will be
invoked as appropriate for the operation being performed.
<p>
A backup data set consists of one or more \"entities,\" flattened binary data
records that are each identified with a key string unique within the data set.  Adding a
record to the active data set or updating an existing record is done by simply
writing new entity data under the desired key.  Deleting an entity from the data set
is done by writing an entity under that key with header specifying a negative data
size, and no actual entity data.
<p>
<b>Helper Classes</b>
<p>
An extensible agent based on convenient helper classes is available in
{@link android.app.backup.BackupAgentHelper}.  That class is particularly
suited to handling of simple file or {@link android.content.SharedPreferences}
backup and restore.

@see android.app.backup.BackupManager
@see android.app.backup.BackupAgentHelper
@see android.app.backup.BackupDataInput
@see android.app.backup.BackupDataOutput"
      classrelation 920631 // <generalisation>
	relation 920631 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 920631 // <generalisation>
	  b parent class_ref 128439 // ContextWrapper
      end

      classrelation 920759 // TAG (<unidirectional association>)
	relation 920759 --->
	  a role_name "TAG" init_value " \"BackupAgent\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 920759 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 915895 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 916023 "TYPE_EOF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 916151 "TYPE_FILE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "During a full restore, indicates that the file system object being restored
is an ordinary file.
"
      end

      attribute 916279 "TYPE_DIRECTORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "During a full restore, indicates that the file system object being restored
is a directory.
"
      end

      attribute 916407 "TYPE_SYMLINK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      classrelation 920887 // mHandler (<unidirectional association>)
	relation 920887 --->
	  a role_name "mHandler" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 920887 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      operation 2407991 "getHandler"
	package return_type class_ref 132023 // Handler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 402487 "SharedPrefsSynchronizer"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 921015 // <realization>
	  relation 921015 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 921015 // <realization>
	    b parent class_ref 149943 // Runnable
	end

	attribute 916535 "mLatch"
	  const_attribute public explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 2408119 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 2408247 "waitForSharedPrefs"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Syncing shared preferences deferred writes needs to happen on the main looper thread"
      end

      operation 2408375 "BackupAgent"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2408503 "onCreate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provided as a convenience for agent implementations that need an opportunity
to do one-time initialization before the actual backup or restore operation
is begun.
<p>"
      end

      operation 2408631 "onDestroy"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provided as a convenience for agent implementations that need to do some
sort of shutdown process after backup or restore is completed.
<p>
Agents do not need to override this method."
      end

      operation 2408759 "onBackup"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application is being asked to write any data changed since the last
time it performed a backup operation. The state data recorded during the
last backup pass is provided in the <code>oldState</code> file
descriptor. If <code>oldState</code> is <code>null</code>, no old state
is available and the application should perform a full backup. In both
cases, a representation of the final backup state after this pass should
be written to the file pointed to by the file descriptor wrapped in
<code>newState</code>.
<p>
Each entity written to the {@link android.app.backup.BackupDataOutput}
<code>data</code> stream will be transmitted
over the current backup transport and stored in the remote data set under
the key supplied as part of the entity.  Writing an entity with a negative
data size instructs the transport to delete whatever entity currently exists
under that key from the remote data set.

@param oldState An open, read-only ParcelFileDescriptor pointing to the
           last backup state provided by the application. May be
           <code>null</code>, in which case no prior state is being
           provided and the application should perform a full backup.
@param data A structured wrapper around an open, read/write
           file descriptor pointing to the backup data destination.
           Typically the application will use backup helper classes to
           write to this file.
@param newState An open, read/write ParcelFileDescriptor pointing to an
           empty file. The application should record the final backup
           state here after writing the requested data to the <code>data</code>
           output stream."
      end

      operation 2408887 "onRestore"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 402615 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application is being restored from backup and should replace any
existing data with the contents of the backup. The backup data is
provided through the <code>data</code> parameter. Once
the restore is finished, the application should write a representation of
the final state to the <code>newState</code> file descriptor.
<p>
The application is responsible for properly erasing its old data and
replacing it with the data supplied to this method. No \"clear user data\"
operation will be performed automatically by the operating system. The
exception to this is in the case of a failed restore attempt: if
onRestore() throws an exception, the OS will assume that the
application's data may now be in an incoherent state, and will clear it
before proceeding.

@param data A structured wrapper around an open, read-only
           file descriptor pointing to a full snapshot of the
           application's data.  The application should consume every
           entity represented in this data stream.
@param appVersionCode The value of the <a
href=\"{@docRoot}guide/topics/manifest/manifest-element.html#vcode\">{@code
           android:versionCode}</a> manifest attribute,
           from the application that backed up this particular data set. This
           makes it possible for an application's agent to distinguish among any
           possible older data versions when asked to perform the restore
           operation.
@param newState An open, read/write ParcelFileDescriptor pointing to an
           empty file. The application should record the final backup
           state here after restoring its data from the <code>data</code> stream.
           When a full-backup dataset is being restored, this will be <code>null</code>."
      end

      operation 2409015 "onFullBackup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 402743 // FullBackupDataOutput
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application is having its entire file system contents backed up.  {@code data}
points to the backup destination, and the app has the opportunity to choose which
files are to be stored.  To commit a file as part of the backup, call the
{@link #fullBackupFile(File, FullBackupDataOutput)} helper method.  After all file
data is written to the output, the agent returns from this method and the backup
operation concludes.

<p>Certain parts of the app's data are never backed up even if the app explicitly
sends them to the output:

<ul>
<li>The contents of the {@link #getCacheDir()} directory</li>
<li>The contents of the {@link #getCodeCacheDir()} directory</li>
<li>The contents of the {@link #getNoBackupFilesDir()} directory</li>
<li>The contents of the app's shared library directory</li>
</ul>

<p>The default implementation of this method backs up the entirety of the
application's \"owned\" file system trees to the output other than the few exceptions
listed above.  Apps only need to override this method if they need to impose special
limitations on which files are being stored beyond the control that
{@link #getNoBackupFilesDir()} offers.
Alternatively they can provide an xml resource to specify what data to include or exclude.


@param data A structured wrapper pointing to the backup destination.
@throws IOException

@see Context#getNoBackupFilesDir()
@see ApplicationInfo#fullBackupContent
@see #fullBackupFile(File, FullBackupDataOutput)
@see #onRestoreFile(ParcelFileDescriptor, long, File, int, long, long)"
      end

      operation 2409143 "onQuotaExceeded"
	public explicit_return_type "void"
	nparams 2
	  param in name "backupDataBytes" explicit_type "long"
	  param in name "quotaBytes" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification that the application's current backup operation causes it to exceed
the maximum size permitted by the transport.  The ongoing backup operation is
halted and rolled back: any data that had been stored by a previous backup operation
is still intact.  Typically the quota-exceeded state will be detected before any data
is actually transmitted over the network.

<p>The {@code quotaBytes} value is the total data size currently permitted for this
application.  If desired, the application can use this as a hint for determining
how much data to store.  For example, a messaging application might choose to
store only the newest messages, dropping enough older content to stay under
the quota.

<p class=\"note\">Note that the maximum quota for the application can change over
time.  In particular, in the future the quota may grow.  Applications that adapt
to the quota when deciding what data to store should be aware of this and implement
their data storage mechanisms in a way that can take advantage of additional
quota.

@param backupDataBytes The amount of data measured while initializing the backup
   operation, if the total exceeds the app's alloted quota.  If initial measurement
   suggested that the data would fit but then too much data was actually submitted
   as part of the operation, then this value is the amount of data that had been
   streamed into the transport at the time the quota was reached.
@param quotaBytes The maximum data size that the transport currently permits
   this application to store as a backup."
      end

      operation 2409271 "applyXmlFiltersAndDoFullBackupForDomain"
	private explicit_return_type "void"
	nparams 6
	  param inout name "packageName" type class_ref 129591 // String
	  param inout name "domainToken" type class_ref 129591 // String
	  param inout name "includeMap" explicit_type "Map<String, Set<String>>"
	  param inout name "filterSet" type class_ref 385591 // ArraySet
	  param inout name "traversalExcludeSet" type class_ref 385591 // ArraySet
	  param inout name "data" type class_ref 402743 // FullBackupDataOutput
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String> ${p3}, ${t4}<String> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the xml yielded any <include/> tag for the provided <code>domainToken</code>.
If so, perform a {@link #fullBackupFileTree} which backs up the file or recurses if the path
is a directory."
      end

      operation 2409399 "fullBackupFile"
	public explicit_return_type "void"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param inout name "output" type class_ref 402743 // FullBackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write an entire file as part of a full-backup operation.  The file's contents
will be delivered to the backup destination along with the metadata necessary
to place it with the proper location and permissions on the device where the
data is restored.

<p class=\"note\">Attempting to back up files in directories that are ignored by
the backup system will have no effect.  For example, if the app calls this method
with a file inside the {@link #getNoBackupFilesDir()} directory, it will be ignored.
See {@link #onFullBackup(FullBackupDataOutput) for details on what directories
are excluded from backups.

@param file The file to be backed up.  The file must exist and be readable by
    the caller.
@param output The destination to which the backed-up file data will be sent."
      end

      operation 2409527 "fullBackupFileTree"
	protected explicit_return_type "void"
	nparams 6
	  param inout name "packageName" type class_ref 129591 // String
	  param inout name "domain" type class_ref 129591 // String
	  param inout name "startingPath" type class_ref 129591 // String
	  param inout name "manifestExcludes" type class_ref 385591 // ArraySet
	  param inout name "systemExcludes" type class_ref 385591 // ArraySet
	  param inout name "output" type class_ref 402743 // FullBackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<String> ${p3}, ${t4}<String> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan the dir tree (if it actually exists) and process each entry we find.  If the
'excludes' parameters are non-null, they are consulted each time a new file system entity
is visited to see whether that entity (and its subtree, if appropriate) should be
omitted from the backup process.

@param systemExcludes An optional list of excludes.
@hide"
      end

      operation 2409655 "onRestoreFile"
	public explicit_return_type "void"
	nparams 6
	  param inout name "data" type class_ref 264887 // ParcelFileDescriptor
	  param in name "size" explicit_type "long"
	  param inout name "destination" explicit_type "File"
	  param in name "type" explicit_type "int"
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle the data delivered via the given file descriptor during a full restore
operation.  The agent is given the path to the file's original location as well
as its size and metadata.
<p>
The file descriptor can only be read for {@code size} bytes; attempting to read
more data has undefined behavior.
<p>
The default implementation creates the destination file/directory and populates it
with the data from the file descriptor, then sets the file's access mode and
modification time to match the restore arguments.

@param data A read-only file descriptor from which the agent can read {@code size}
    bytes of file data.
@param size The number of bytes of file content to be restored to the given
    destination.  If the file system object being restored is a directory, {@code size}
    will be zero.
@param destination The File on disk to be restored with the given data.
@param type The kind of file system object being restored.  This will be either
    {@link BackupAgent#TYPE_FILE} or {@link BackupAgent#TYPE_DIRECTORY}.
@param mode The access mode to be assigned to the destination after its data is
    written.  This is in the standard format used by {@code chmod()}.
@param mtime The modification time of the file when it was backed up, suitable to
    be assigned to the file after its data is written.
@throws IOException"
      end

      operation 2409783 "isFileEligibleForRestore"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "destination" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2409911 "isFileSpecifiedInPathList"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param inout name "canonicalPathList" explicit_type "Collection<String>"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return True if the provided file is either directly in the provided list, or the provided
file is within a directory in the list."
      end

      operation 2410039 "onRestoreFile"
	protected explicit_return_type "void"
	nparams 7
	  param inout name "data" type class_ref 264887 // ParcelFileDescriptor
	  param in name "size" explicit_type "long"
	  param in name "type" explicit_type "int"
	  param inout name "domain" type class_ref 129591 // String
	  param inout name "path" type class_ref 129591 // String
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only specialized platform agents should overload this entry point to support
restores to crazy non-app locations.
@hide"
      end

      operation 2410167 "onRestoreFinished"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application's restore operation has completed.  This method is called after
all available data has been delivered to the application for restore (via either
the {@link #onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()} or
{@link #onRestoreFile(ParcelFileDescriptor, long, File, int, long, long) onRestoreFile()}
callbacks).  This provides the app with a stable end-of-restore opportunity to
perform any appropriate post-processing on the data that was just delivered.

@see #onRestore(BackupDataInput, int, ParcelFileDescriptor)
@see #onRestoreFile(ParcelFileDescriptor, long, File, int, long, long)"
      end

      operation 2410295 "onBind"
	public return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ----- Core implementation -----
 @hide "
      end

      classrelation 921143 // mBinder (<unidirectional association>)
	relation 921143 --->
	  a role_name "mBinder" init_value " new BackupServiceBinder().asBinder()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 921143 // mBinder (<unidirectional association>)
	  b parent class_ref 132919 // IBinder
      end

      operation 2410423 "attach"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      class 402871 "BackupServiceBinder"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 921271 // <generalisation>
	  relation 921271 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 921271 // <generalisation>
	    b parent class_ref 402999 // Stub
	end

	classrelation 921399 // TAG (<unidirectional association>)
	  relation 921399 --->
	    a role_name "TAG" init_value " \"BackupServiceBinder\"" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 921399 // TAG (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	operation 2410551 "doBackup"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	    param inout name "data" type class_ref 264887 // ParcelFileDescriptor
	    param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2410679 "doRestore"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "data" type class_ref 264887 // ParcelFileDescriptor
	    param in name "appVersionCode" explicit_type "int"
	    param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2410807 "doFullBackup"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "data" type class_ref 264887 // ParcelFileDescriptor
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2410935 "doMeasureFullBackup"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2411063 "doRestoreFile"
	  public explicit_return_type "void"
	  nparams 9
	    param inout name "data" type class_ref 264887 // ParcelFileDescriptor
	    param in name "size" explicit_type "long"
	    param in name "type" explicit_type "int"
	    param inout name "domain" type class_ref 129591 // String
	    param inout name "path" type class_ref 129591 // String
	    param in name "mode" explicit_type "long"
	    param in name "mtime" explicit_type "long"
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2411191 "doRestoreFinished"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2411319 "fail"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "message" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2411447 "doQuotaExceeded"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "backupDataBytes" explicit_type "long"
	    param in name "quotaBytes" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 403127 "FailRunnable"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 921527 // <realization>
	  relation 921527 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 921527 // <realization>
	    b parent class_ref 149943 // Runnable
	end

	classrelation 921655 // mMessage (<unidirectional association>)
	  relation 921655 --->
	    a role_name "mMessage" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 921655 // mMessage (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	operation 2411575 "FailRunnable"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "message" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2411703 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 402615 "BackupDataInput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the structured interface through which a {@link BackupAgent} reads
information from the backup data set, via its
{@link BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) onRestore()}
method.  The data is presented as a set of \"entities,\" each
representing one named record as previously stored by the agent's
{@link BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} implementation.  An entity is composed of a descriptive header plus a
byte array that holds the raw data saved in the remote backup.
<p>
The agent must consume every entity in the data stream, otherwise the
restored state of the application will be incomplete.
<h3>Example</h3>
<p>
A typical
{@link BackupAgent#onRestore(BackupDataInput,int,ParcelFileDescriptor)
onRestore()} implementation might be structured something like this:
<pre>
public void onRestore(BackupDataInput data, int appVersionCode,
                      ParcelFileDescriptor newState) {
    while (data.readNextHeader()) {
        String key = data.getKey();
        int dataSize = data.getDataSize();

        if (key.equals(MY_BACKUP_KEY_ONE)) {
            // process this kind of record here
            byte[] buffer = new byte[dataSize];
            data.readEntityData(buffer, 0, dataSize); // reads the entire entity at once

            // now 'buffer' holds the raw data and can be processed however
            // the agent wishes
            processBackupKeyOne(buffer);
        } else if (key.equals(MY_BACKUP_KEY_TO_IGNORE) {
            // a key we recognize but wish to discard
            data.skipEntityData();
        } // ... etc.
   }
}</pre>"
      attribute 916663 "mBackupReader"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 403511 "EntityHeader"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 922295 // key (<unidirectional association>)
	  relation 922295 --->
	    a role_name "key" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 922295 // key (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 916919 "dataSize"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 922167 // mHeader (<unidirectional association>)
	relation 922167 --->
	  a role_name "mHeader" init_value " new EntityHeader()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 922167 // mHeader (<unidirectional association>)
	  b parent class_ref 403511 // EntityHeader
      end

      attribute 916791 "mHeaderReady"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2412343 "BackupDataInput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment " @hide "
      end

      operation 2412471 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 2412599 "readNextHeader"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extract the next entity header from the restore stream.  After this method
return success, the {@link #getKey()} and {@link #getDataSize()} methods can
be used to inspect the entity that is now available for processing.

@return <code>true</code> when there is an entity ready for consumption from the
   restore stream, <code>false</code> if the restore stream has been fully consumed.
@throws IOException if an error occurred while reading the restore stream"
      end

      operation 2412727 "getKey"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the key associated with the current entity in the restore stream
@return the current entity's key string
@throws IllegalStateException if the next record header has not yet been read"
      end

      operation 2412855 "getDataSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the size in bytes of the data associated with the current entity in the
restore stream.

@return The size of the record's raw data, in bytes
@throws IllegalStateException if the next record header has not yet been read"
      end

      operation 2412983 "readEntityData"
	public explicit_return_type "int"
	nparams 3
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a record's raw data from the restore stream.  The record's header must first
have been processed by the {@link #readNextHeader()} method.  Multiple calls to
this method may be made in order to process the data in chunks; not all of it
must be read in a single call.  Once all of the raw data for the current entity
has been read, further calls to this method will simply return zero.

@param data An allocated byte array of at least 'size' bytes
@param offset Offset within the 'data' array at which the data will be placed
   when read from the stream
@param size The number of bytes to read in this pass
@return The number of bytes of data read.  Once all of the data for this entity
   has been read, further calls to this method will return zero.
@throws IOException if an error occurred when trying to read the restore data stream"
      end

      operation 2413111 "skipEntityData"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consume the current entity's data without extracting it into a buffer
for further processing.  This allows a {@link android.app.backup.BackupAgent} to
efficiently discard obsolete or otherwise uninteresting records during the
restore operation.

@throws IOException if an error occurred when trying to read the restore data stream"
      end

      operation 2413239 "ctor"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 2413367 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "mBackupReader" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 2413495 "readNextHeader_native"
	private explicit_return_type "int"
	nparams 2
	  param in name "mBackupReader" explicit_type "long"
	  param inout name "entity" type class_ref 403511 // EntityHeader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 2413623 "readEntityData_native"
	private explicit_return_type "int"
	nparams 4
	  param in name "mBackupReader" explicit_type "long"
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 2413751 "skipEntityData_native"
	private explicit_return_type "int"
	nparams 1
	  param in name "mBackupReader" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end
    end

    class 402743 "FullBackupDataOutput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the interface through which a {@link BackupAgent} writes entire files
to a full backup data set, via its {@link BackupAgent#onFullBackup(FullBackupDataOutput)}
method."
      classrelation 928951 // mData (<unidirectional association>)
	relation 928951 --->
	  a role_name "mData" const_relation private
	    comment " Currently a name-scoping shim around BackupDataOutput
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 928951 // mData (<unidirectional association>)
	  b parent class_ref 401975 // BackupDataOutput
      end

      attribute 922807 "mSize"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2431671 "FullBackupDataOutput"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide - used only in measure operation "
      end

      operation 2431799 "FullBackupDataOutput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2431927 "getData"
	public return_type class_ref 401975 // BackupDataOutput
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2432055 "addSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide - used for measurement pass "
      end

      operation 2432183 "getSize"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide - used for measurement pass "
      end
    end

    class 403255 "BackupAgentHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A convenient {@link BackupAgent} wrapper class that automatically manages
heterogeneous data sets within the backup data, each identified by a unique
key prefix.  When processing a backup or restore operation, the BackupAgentHelper
dispatches to one or more installed {@link BackupHelper} objects, each
of which is responsible for a defined subset of the data being processed.
<p>
An application will typically extend this class in its own
backup agent. Then, within the agent's {@link BackupAgent#onCreate() onCreate()}
method, it will call {@link #addHelper(String, BackupHelper) addHelper()} one or more times to
install the handlers for each kind of data it wishes to manage within its backups.
<p>
The Android framework currently provides two predefined {@link BackupHelper} classes:</p>
<ul><li>{@link FileBackupHelper} - Manages the backup and restore of entire files
within an application's data directory hierarchy.</li>
<li>{@link SharedPreferencesBackupHelper} - Manages the backup and restore of an
application's {@link android.content.SharedPreferences} data.</li></ul>
<p>
An application can also implement its own helper classes to work within the
{@link BackupAgentHelper} framework.  See the {@link BackupHelper} interface
documentation for details.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupAgentHelper, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p>
</div>

@see BackupHelper
@see FileBackupHelper
@see SharedPreferencesBackupHelper"
      classrelation 921783 // <generalisation>
	relation 921783 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 921783 // <generalisation>
	  b parent class_ref 402359 // BackupAgent
      end

      classrelation 921911 // TAG (<unidirectional association>)
	relation 921911 --->
	  a role_name "TAG" init_value " \"BackupAgentHelper\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 921911 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 922039 // mDispatcher (<unidirectional association>)
	relation 922039 --->
	  a role_name "mDispatcher" init_value " new BackupHelperDispatcher()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 922039 // mDispatcher (<unidirectional association>)
	  b parent class_ref 403383 // BackupHelperDispatcher
      end

      operation 2411831 "onBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Run the backup process on each of the configured handlers."
      end

      operation 2411959 "onRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 402615 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Run the restore process on each of the configured handlers."
      end

      operation 2412087 "getDispatcher"
	public return_type class_ref 403383 // BackupHelperDispatcher
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2412215 "addHelper"
	public explicit_return_type "void"
	nparams 2
	  param inout name "keyPrefix" type class_ref 129591 // String
	  param inout name "helper" type class_ref 402231 // BackupHelper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a helper for a given data subset to the agent's configuration.  Each helper
must have a prefix string that is unique within this backup agent's set of
helpers.

@param keyPrefix A string used to disambiguate the various helpers within this agent
@param helper A backup/restore helper object to be invoked during backup and restore
   operations."
      end
    end

    class 403383 "BackupHelperDispatcher"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " @hide "
      classrelation 922807 // TAG (<unidirectional association>)
	relation 922807 --->
	  a role_name "TAG" init_value " \"BackupHelperDispatcher\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 922807 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      class 403639 "Header"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 917431 "chunkSize"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " not including the header"
	end

	classrelation 922935 // keyPrefix (<unidirectional association>)
	  relation 922935 --->
	    a role_name "keyPrefix" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 922935 // keyPrefix (<unidirectional association>)
	    b parent class_ref 129591 // String
	end
      end

      classrelation 923063 // mHelpers (<unidirectional association>)
	relation 923063 --->
	  stereotype "TreeMap"
	  a role_name "mHelpers" init_value " new TreeMap<String,BackupHelper>()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type},BackupHelper> ${name}${value};
"
	    classrelation_ref 923063 // mHelpers (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 2415927 "BackupHelperDispatcher"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2416055 "addHelper"
	public explicit_return_type "void"
	nparams 2
	  param inout name "keyPrefix" type class_ref 129591 // String
	  param inout name "helper" type class_ref 402231 // BackupHelper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2416183 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2416311 "doOneBackup"
	private explicit_return_type "void"
	nparams 5
	  param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "header" type class_ref 403639 // Header
	  param inout name "helper" type class_ref 402231 // BackupHelper
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2416439 "performRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "input" type class_ref 402615 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2416567 "readHeader_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "h" type class_ref 403639 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 2416695 "skipChunk_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "bytesToSkip" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 2416823 "allocateHeader_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "h" type class_ref 403639 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 2416951 "writeHeader_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "h" type class_ref 403639 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end
    end

    class 403767 "BackupManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface through which an application interacts with the Android backup service to
request backup and restore operations.
Applications instantiate it using the constructor and issue calls through that instance.
<p>
When an application has made changes to data which should be backed up, a
call to {@link #dataChanged()} will notify the backup service. The system
will then schedule a backup operation to occur in the near future. Repeated
calls to {@link #dataChanged()} have no further effect until the backup
operation actually occurs.
<p>
A backup or restore operation for your application begins when the system launches the
{@link android.app.backup.BackupAgent} subclass you've declared in your manifest. See the
documentation for {@link android.app.backup.BackupAgent} for a detailed description
of how the operation then proceeds.
<p>
Several attributes affecting the operation of the backup and restore mechanism
can be set on the <code>
<a href=\"{@docRoot}guide/topics/manifest/application-element.html\">&lt;application&gt;</a></code>
tag in your application's AndroidManifest.xml file.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupManager, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p></div>

@attr ref android.R.styleable#AndroidManifestApplication_allowBackup
@attr ref android.R.styleable#AndroidManifestApplication_backupAgent
@attr ref android.R.styleable#AndroidManifestApplication_killAfterRestore
@attr ref android.R.styleable#AndroidManifestApplication_restoreAnyVersion"
      classrelation 923191 // TAG (<unidirectional association>)
	relation 923191 --->
	  a role_name "TAG" init_value " \"BackupManager\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 923191 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 917559 "SUCCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " BackupObserver status codes

Indicates that backup succeeded.

@hide
"
      end

      attribute 917687 "ERROR_BACKUP_NOT_ALLOWED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that backup is either not enabled at all or
backup for the package was rejected by backup service
or backup transport,

@hide
"
      end

      attribute 917815 "ERROR_PACKAGE_NOT_FOUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The requested app is not installed on the device.

@hide
"
      end

      attribute 917943 "ERROR_TRANSPORT_ABORTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " BackupTransport.TRANSPORT_ERROR"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The transport for some reason was not in a good state and
aborted the entire backup request. This is a transient
failure and should not be retried immediately.

@hide
"
      end

      attribute 918071 "ERROR_TRANSPORT_PACKAGE_REJECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value "
            BackupTransport.TRANSPORT_PACKAGE_REJECTED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Returned when the transport was unable to process the
backup request for a given package, for example if the
transport hit a transient network failure. The remaining
packages provided to {@link #requestBackup(String[], BackupObserver)}
will still be attempted.

@hide
"
      end

      attribute 918199 "ERROR_TRANSPORT_QUOTA_EXCEEDED"
	class_attribute const_attribute public explicit_type "int"
	init_value "
            BackupTransport.TRANSPORT_QUOTA_EXCEEDED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Returned when the transport reject the attempt to backup because
backup data size exceeded current quota limit for this package.

@hide
"
      end

      attribute 918327 "ERROR_AGENT_FAILURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " BackupTransport.AGENT_ERROR"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The {@link BackupAgent} for the requested package failed for some reason
and didn't provide appropriate backup data.

@hide
"
      end

      classrelation 923319 // mContext (<unidirectional association>)
	relation 923319 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 923319 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 918455 "sService"
	class_attribute private explicit_type "IBackupManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2417079 "checkServiceBinder"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2417207 "BackupManager"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a BackupManager object through which the application can
communicate with the Android backup system.

@param context The {@link android.content.Context} that was provided when
               one of your application's {@link android.app.Activity Activities}
               was created."
      end

      operation 2417335 "dataChanged"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the Android backup system that your application wishes to back up
new changes to its data.  A backup operation using your application's
{@link android.app.backup.BackupAgent} subclass will be scheduled when you
call this method."
      end

      operation 2417463 "dataChanged"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for callers who need to indicate that some other package
needs a backup pass.  This can be useful in the case of groups of packages
that share a uid.
<p>
This method requires that the application hold the \"android.permission.BACKUP\"
permission if the package named in the argument does not run under the same uid
as the caller.

@param packageName The package name identifying the application to back up."
      end

      operation 2417591 "requestRestore"
	public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 403895 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore the calling application from backup.  The data will be restored from the
current backup dataset if the application has stored data there, or from
the dataset used during the last full device setup operation if the current
backup dataset has no matching data.  If no backup data exists for this application
in either source, a nonzero value will be returned.

<p>If this method returns zero (meaning success), the OS will attempt to retrieve
a backed-up dataset from the remote transport, instantiate the application's
backup agent, and pass the dataset to the agent's
{@link android.app.backup.BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) onRestore()}
method.

@param observer The {@link RestoreObserver} to receive callbacks during the restore
operation. This must not be null.

@return Zero on success; nonzero on error."
      end

      operation 2417719 "beginRestoreSession"
	public return_type class_ref 404023 // RestoreSession
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment " system APIs start here

Begin the process of restoring data from backup.  See the
{@link android.app.backup.RestoreSession} class for documentation on that process.
@hide"
      end

      operation 2417847 "setBackupEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isEnabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Enable/disable the backup service entirely.  When disabled, no backup
or restore operations will take place.  Data-changed notifications will
still be observed and collected, however, so that changes made while the
mechanism was disabled will still be backed up properly if it is enabled
at some point in the future.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide"
      end

      operation 2417975 "isBackupEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Report whether the backup mechanism is currently enabled.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide"
      end

      operation 2418103 "setAutoRestore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isEnabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Enable/disable data restore at application install time.  When enabled, app
installation will include an attempt to fetch the app's historical data from
the archival restore dataset (if any).  When disabled, no such attempt will
be made.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide"
      end

      operation 2418231 "getCurrentTransport"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Identify the currently selected transport.  Callers must hold the
android.permission.BACKUP permission to use this method.
@return The name of the currently active backup transport.  In case of
  failure or if no transport is currently active, this method returns {@code null}.

@hide"
      end

      operation 2418359 "listAllTransports"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Request a list of all available backup transports' names.  Callers must
hold the android.permission.BACKUP permission to use this method.

@hide"
      end

      operation 2418487 "selectBackupTransport"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "transport" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Specify the current backup transport.  Callers must hold the
android.permission.BACKUP permission to use this method.

@param transport The name of the transport to select.  This should be one
  of the names returned by {@link #listAllTransports()}.
@return The name of the previously selected transport.  If the given transport
  name is not one of the currently available transports, no change is made to
  the current transport setting and the method returns null.

@hide"
      end

      operation 2418615 "backupNow"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Schedule an immediate backup attempt for all pending key/value updates.  This
is primarily intended for transports to use when they detect a suitable
opportunity for doing a backup pass.  If there are no pending updates to
be sent, no action will be taken.  Even if some updates are pending, the
transport will still be asked to confirm via the usual requestBackupTime()
method.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@hide"
      end

      operation 2418743 "getAvailableRestoreToken"
	public explicit_return_type "long"
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Ask the framework which dataset, if any, the given package's data would be
restored from if we were to install it right now.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param packageName The name of the package whose most-suitable dataset we
    wish to look up
@return The dataset token from which a restore should be attempted, or zero if
    no suitable data is available.

@hide"
      end

      operation 2418871 "isAppEligibleForBackup"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Ask the framework whether this app is eligible for backup.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param packageName The name of the package.
@return Whether this app is eligible for backup.

@hide"
      end

      operation 2418999 "requestBackup"
	public explicit_return_type "int"
	nparams 2
	  param inout name "packages" type class_ref 129591 // String
	  param inout name "observer" type class_ref 404151 // BackupObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Request an immediate backup, providing an observer to which results of the backup operation
will be published. The Android backup system will decide for each package whether it will
be full app data backup or key/value-pair-based backup.

<p>If this method returns {@link BackupManager#SUCCESS}, the OS will attempt to backup all
provided packages using the remote transport.

@param packages List of package names to backup.
@param observer The {@link BackupObserver} to receive callbacks during the backup
operation. Could be {@code null}.
@return {@link BackupManager#SUCCESS} on success; nonzero on error.
@exception  IllegalArgumentException on null or empty {@code packages} param.

@hide"
      end

      class 404279 "BackupObserverWrapper"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 923447 // <generalisation>
	  relation 923447 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 923447 // <generalisation>
	    b parent class_ref 284343 // Stub
	end

	classrelation 923575 // mHandler (<unidirectional association>)
	  relation 923575 --->
	    a role_name "mHandler" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 923575 // mHandler (<unidirectional association>)
	    b parent class_ref 132023 // Handler
	end

	classrelation 923703 // mObserver (<unidirectional association>)
	  relation 923703 --->
	    a role_name "mObserver" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 923703 // mObserver (<unidirectional association>)
	    b parent class_ref 404151 // BackupObserver
	end

	attribute 918583 "MSG_UPDATE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 918711 "MSG_RESULT"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 918839 "MSG_FINISHED"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 2419127 "BackupObserverWrapper"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "context" type class_ref 128567 // Context
	    param inout name "observer" type class_ref 404151 // BackupObserver
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2419255 "onUpdate"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "currentPackage" type class_ref 129591 // String
	    param inout name "backupProgress" type class_ref 284471 // BackupProgress
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Binder calls into this object just enqueue on the main-thread handler"
	end

	operation 2419383 "onResult"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "currentPackage" type class_ref 129591 // String
	    param in name "status" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2419511 "backupFinished"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "status" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 403895 "RestoreObserver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Callback class for receiving progress reports during a restore operation.  These
methods will all be called on your application's main thread."
      operation 2433207 "restoreSetsAvailable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 284599 // RestoreSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Supply a list of the restore datasets available from the current transport.  This
method is invoked as a callback following the application's use of the
{@link android.app.backup.IRestoreSession.getAvailableRestoreSets} method.

@param result An array of {@link android.app.backup.RestoreSet RestoreSet} objects
  describing all of the available datasets that are candidates for restoring to
  the current device.  If no applicable datasets exist, {@code result} will be
  {@code null}.

@hide"
      end

      operation 2433335 "restoreStarting"
	public explicit_return_type "void"
	nparams 1
	  param in name "numPackages" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore operation has begun.

@param numPackages The total number of packages being processed in
  this restore operation."
      end

      operation 2433463 "onUpdate"
	public explicit_return_type "void"
	nparams 2
	  param in name "nowBeingRestored" explicit_type "int"
	  param inout name "currentPackage" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An indication of which package is being restored currently, out of the
total number provided in the {@link #restoreStarting(int)} callback.  This method
is not guaranteed to be called: if the transport is unable to obtain
data for one or more of the requested packages, no onUpdate() call will
occur for those packages.

@param nowBeingRestored The index, between 1 and the numPackages parameter
  to the {@link #restoreStarting(int)} callback, of the package now being
  restored.  This may be non-monotonic; it is intended purely as a rough
  indication of the backup manager's progress through the overall restore process.
@param currentPackage The name of the package now being restored."
      end

      operation 2433591 "restoreFinished"
	public explicit_return_type "void"
	nparams 1
	  param in name "error" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore process has completed.  This method will always be called,
even if no individual package restore operations were attempted.

@param error Zero on success; a nonzero error code if the restore operation
  as a whole failed."
      end
    end

    class 404023 "RestoreSession"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface for managing a restore session.
@hide"
      classrelation 929719 // TAG (<unidirectional association>)
	relation 929719 --->
	  a role_name "TAG" init_value " \"RestoreSession\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 929719 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 929847 // mContext (<unidirectional association>)
	relation 929847 --->
	  a role_name "mContext" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 929847 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 923319 "mBinder"
	package explicit_type "IRestoreSession"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 405559 "RestoreObserverWrapper"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 930103 // <generalisation>
	  relation 930103 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 930103 // <generalisation>
	    b parent class_ref 284855 // Stub
	end

	classrelation 930231 // mHandler (<unidirectional association>)
	  relation 930231 --->
	    a role_name "mHandler" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 930231 // mHandler (<unidirectional association>)
	    b parent class_ref 132023 // Handler
	end

	classrelation 930359 // mAppObserver (<unidirectional association>)
	  relation 930359 --->
	    a role_name "mAppObserver" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 930359 // mAppObserver (<unidirectional association>)
	    b parent class_ref 403895 // RestoreObserver
	end

	attribute 923447 "MSG_RESTORE_STARTING"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 923575 "MSG_UPDATE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 923703 "MSG_RESTORE_FINISHED"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 923831 "MSG_RESTORE_SETS_AVAILABLE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 2434487 "RestoreObserverWrapper"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "context" type class_ref 128567 // Context
	    param inout name "appObserver" type class_ref 403895 // RestoreObserver
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2434615 "restoreSetsAvailable"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "result" type class_ref 284599 // RestoreSet
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Binder calls into this object just enqueue on the main-thread handler"
	end

	operation 2434743 "restoreStarting"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "numPackages" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2434871 "onUpdate"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "nowBeingRestored" explicit_type "int"
	    param inout name "currentPackage" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2434999 "restoreFinished"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "error" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 929975 // mObserver (<unidirectional association>)
	relation 929975 --->
	  a role_name "mObserver" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 929975 // mObserver (<unidirectional association>)
	  b parent class_ref 405559 // RestoreObserverWrapper
      end

      operation 2433719 "getAvailableRestoreSets"
	public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 403895 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the current transport what the available restore sets are.

@param observer a RestoreObserver object whose restoreSetsAvailable() method will
  be called on the application's main thread in order to supply the results of
  the restore set lookup by the backup transport.  This parameter must not be
  null.
@return Zero on success, nonzero on error.  The observer's restoreSetsAvailable()
  method will only be called if this method returned zero."
      end

      operation 2433847 "restoreAll"
	public explicit_return_type "int"
	nparams 2
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 403895 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore the given set onto the device, replacing the current data of any app
contained in the restore set with the data previously backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link #getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation."
      end

      operation 2433975 "restoreSome"
	public explicit_return_type "int"
	nparams 3
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 403895 // RestoreObserver
	  param inout name "packages" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore select packages from the given set onto the device, replacing the
current data of any app contained in the set with the data previously
backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success, nonzero on error. The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation.
@param packages The set of packages for which to attempt a restore.  Regardless of
  the contents of the actual back-end dataset named by {@code token}, only
  applications mentioned in this list will have their data restored.

@hide"
      end

      operation 2434103 "restorePackage"
	public explicit_return_type "int"
	nparams 2
	  param inout name "packageName" type class_ref 129591 // String
	  param inout name "observer" type class_ref 403895 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore a single application from backup.  The data will be restored from the
current backup dataset if the given package has stored data there, or from
the dataset used during the last full device setup operation if the current
backup dataset has no matching data.  If no backup data exists for this package
in either source, a nonzero value will be returned.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param packageName The name of the package whose data to restore.  If this is
  not the name of the caller's own package, then the android.permission.BACKUP
  permission must be held.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation."
      end

      operation 2434231 "endRestoreSession"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End this restore session.  After this method is called, the RestoreSession
object is no longer valid.

<p><b>Note:</b> The caller <i>must</i> invoke this method to end the restore session,
  even if {@link #restorePackage(String, RestoreObserver)} failed."
      end

      operation 2434359 "RestoreSession"
	package explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "binder" explicit_type "IRestoreSession"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Nonpublic implementation here"
      end
    end

    class 404151 "BackupObserver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Callback class for receiving progress reports during a backup operation.  These
methods will all be called on your application's main thread.

@hide"
      operation 2419639 "onUpdate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "currentBackupPackage" type class_ref 129591 // String
	  param inout name "backupProgress" type class_ref 284471 // BackupProgress
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method could be called several times for packages with full data backup.
It will tell how much of backup data is already saved and how much is expected.

@param currentBackupPackage The name of the package that now being backuped.
@param backupProgress Current progress of backup for the package."
      end

      operation 2419767 "onResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "currentBackupPackage" type class_ref 129591 // String
	  param in name "status" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The backup of single package has completed.  This method will be called at most one time
for each package and could be not called if backup is failed before and
backupFinished() is called.

@param currentBackupPackage The name of the package that was backuped.
@param status Zero on success; a nonzero error code if the backup operation failed."
      end

      operation 2419895 "backupFinished"
	public explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The backup process has completed.  This method will always be called,
even if no individual package backup operations were attempted.

@param status Zero on success; a nonzero error code if the backup operation
  as a whole failed."
      end
    end

    class 404407 "BackupTransport"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Concrete class that provides a stable-API bridge between IBackupTransport
and its implementations.

@hide"
      attribute 919223 "TRANSPORT_OK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Zero return always means things are okay.  If returned from
 getNextFullRestoreDataChunk(), it means that no data could be delivered at
 this time, but the restore is still running and the caller should simply
 retry."
      end

      attribute 919351 "NO_MORE_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -1 is special; it is used in getNextFullRestoreDataChunk() to indicate that
 we've delivered the entire data stream for the current restore target."
      end

      attribute 919479 "TRANSPORT_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Result codes that indicate real errors are negative and not -1"
      end

      attribute 919607 "TRANSPORT_NOT_INITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 919735 "TRANSPORT_PACKAGE_REJECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 919863 "AGENT_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1003"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 919991 "AGENT_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 920119 "TRANSPORT_QUOTA_EXCEEDED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1005"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 920247 "FLAG_USER_INITIATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates that operation was initiated by user, not a scheduled one.
 Transport should ignore its own moratoriums for call with this flag set."
      end

      attribute 920375 "mBinderImpl"
	package explicit_type "IBackupTransport"
	init_value " new TransportImpl()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2420535 "getBinder"
	public return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2420663 "name"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Transport self-description and general configuration interfaces


Ask the transport for the name under which it should be registered.  This will
typically be its host service's component name, but need not be."
      end

      operation 2420791 "configurationIntent"
	public return_type class_ref 131255 // Intent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport for an Intent that can be used to launch any internal
configuration Activity that it wishes to present.  For example, the transport
may offer a UI for allowing the user to supply login credentials for the
transport's off-device backend.

<p>If the transport does not supply any user-facing configuration UI, it should
return {@code null} from this method.

@return An Intent that can be passed to Context.startActivity() in order to
        launch the transport's configuration UI.  This method will return {@code null}
        if the transport does not offer any user-facing configuration UI."
      end

      operation 2420919 "currentDestinationString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "On demand, supply a one-line string that can be shown to the user that
describes the current backend destination.  For example, a transport that
can potentially associate backup data with arbitrary user accounts should
include the name of the currently-active account here.

@return A string describing the destination to which the transport is currently
        sending data.  This method should not return null."
      end

      operation 2421047 "dataManagementIntent"
	public return_type class_ref 131255 // Intent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport for an Intent that can be used to launch a more detailed
secondary data management activity.  For example, the configuration intent might
be one for allowing the user to select which account they wish to associate
their backups with, and the management intent might be one which presents a
UI for managing the data on the backend.

<p>In the Settings UI, the configuration intent will typically be invoked
when the user taps on the preferences item labeled with the current
destination string, and the management intent will be placed in an overflow
menu labelled with the management label string.

<p>If the transport does not supply any user-facing data management
UI, then it should return {@code null} from this method.

@return An intent that can be passed to Context.startActivity() in order to
        launch the transport's data-management UI.  This method will return
        {@code null} if the transport does not offer any user-facing data
        management UI."
      end

      operation 2421175 "dataManagementLabel"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "On demand, supply a short string that can be shown to the user as the label
on an overflow menu item used to invoked the data management UI.

@return A string to be used as the label for the transport's data management
        affordance.  If the transport supplies a data management intent, this
        method must not return {@code null}."
      end

      operation 2421303 "transportDirName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport where, on local device storage, to keep backup state blobs.
This is per-transport so that mock transports used for testing can coexist with
\"live\" backup services without interfering with the live bookkeeping.  The
returned string should be a name that is expected to be unambiguous among all
available backup transports; the name of the class implementing the transport
is a good choice.

@return A unique name, suitable for use as a file or directory name, that the
        Backup Manager could use to disambiguate state files associated with
        different backup transports."
      end

      operation 2421431 "initializeDevice"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Device-level operations common to both key/value and full-data storage

Initialize the server side storage for this device, erasing all stored data.
The transport may send the request immediately, or may buffer it.  After
this is called, {@link #finishBackup} will be called to ensure the request
is sent and received successfully.

<p>If the transport returns anything other than TRANSPORT_OK from this method,
the OS will halt the current initialize operation and schedule a retry in the
near future.  Even if the transport is in a state such that attempting to
\"initialize\" the backend storage is meaningless -- for example, if there is
no current live dataset at all, or there is no authenticated account under which
to store the data remotely -- the transport should return TRANSPORT_OK here
and treat the initializeDevice() / finishBackup() pair as a graceful no-op.

@return One of {@link BackupTransport#TRANSPORT_OK} (OK so far) or
  {@link BackupTransport#TRANSPORT_ERROR} (to retry following network error
  or other failure)."
      end

      operation 2421559 "clearBackupData"
	public explicit_return_type "int"
	nparams 1
	  param inout name "packageInfo" type class_ref 350391 // PackageInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Erase the given application's data from the backup destination.  This clears
out the given package's data from the current backup set, making it as though
the app had never yet been backed up.  After this is called, {@link finishBackup}
must be called to ensure that the operation is recorded successfully.

@return the same error codes as {@link #performBackup}."
      end

      operation 2421687 "finishBackup"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finish sending application data to the backup destination.  This must be
called after {@link #performBackup}, {@link #performFullBackup}, or {@link clearBackupData}
to ensure that all data is sent and the operation properly finalized.  Only when this
method returns true can a backup be assumed to have succeeded.

@return the same error codes as {@link #performBackup} or {@link #performFullBackup}."
      end

      operation 2421815 "requestBackupTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Key/value incremental backup support interfaces

Verify that this is a suitable time for a key/value backup pass.  This should return zero
if a backup is reasonable right now, some positive value otherwise.  This method
will be called outside of the {@link #performBackup}/{@link #finishBackup} pair.

<p>If this is not a suitable time for a backup, the transport should return a
backoff delay, in milliseconds, after which the Backup Manager should try again.

@return Zero if this is a suitable time for a backup pass, or a positive time delay
  in milliseconds to suggest deferring the backup pass for a while."
      end

      operation 2421943 "performBackup"
	public explicit_return_type "int"
	nparams 3
	  param inout name "packageInfo" type class_ref 350391 // PackageInfo
	  param inout name "inFd" type class_ref 264887 // ParcelFileDescriptor
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send one application's key/value data update to the backup destination.  The
transport may send the data immediately, or may buffer it.  If this method returns
{@link #TRANSPORT_OK}, {@link #finishBackup} will then be called to ensure the data
is sent and recorded successfully.

@param packageInfo The identity of the application whose data is being backed up.
  This specifically includes the signature list for the package.
@param inFd Descriptor of file with data that resulted from invoking the application's
  BackupService.doBackup() method.  This may be a pipe rather than a file on
  persistent media, so it may not be seekable.
@param flags {@link BackupTransport#FLAG_USER_INITIATED} or 0.
@return one of {@link BackupTransport#TRANSPORT_OK} (OK so far),
 {@link BackupTransport#TRANSPORT_PACKAGE_REJECTED} (to suppress backup of this
 specific package, but allow others to proceed),
 {@link BackupTransport#TRANSPORT_ERROR} (on network error or other failure), or
 {@link BackupTransport#TRANSPORT_NOT_INITIALIZED} (if the backend dataset has
 become lost due to inactivity purge or some other reason and needs re-initializing)"
      end

      operation 2422071 "performBackup"
	public explicit_return_type "int"
	nparams 2
	  param inout name "packageInfo" type class_ref 350391 // PackageInfo
	  param inout name "inFd" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Legacy version of {@link #performBackup(PackageInfo, ParcelFileDescriptor, int)} that
doesn't use flags parameter."
      end

      operation 2422199 "getAvailableRestoreSets"
	public return_type class_ref 284599 // RestoreSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Key/value dataset restore interfaces

Get the set of all backups currently available over this transport.

@return Descriptions of the set of restore images available for this device,
  or null if an error occurred (the attempt should be rescheduled)."
      end

      operation 2422327 "getCurrentRestoreSet"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the identifying token of the backup set currently being stored from
this device.  This is used in the case of applications wishing to restore
their last-known-good data.

@return A token that can be passed to {@link #startRestore}, or 0 if there
  is no backup set available corresponding to the current device state."
      end

      operation 2422455 "startRestore"
	public explicit_return_type "int"
	nparams 2
	  param in name "token" explicit_type "long"
	  param inout name "packages" type class_ref 350391 // PackageInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start restoring application data from backup.  After calling this function,
alternate calls to {@link #nextRestorePackage} and {@link #nextRestoreData}
to walk through the actual application data.

@param token A backup token as returned by {@link #getAvailableRestoreSets}
  or {@link #getCurrentRestoreSet}.
@param packages List of applications to restore (if data is available).
  Application data will be restored in the order given.
@return One of {@link BackupTransport#TRANSPORT_OK} (OK so far, call
  {@link #nextRestorePackage}) or {@link BackupTransport#TRANSPORT_ERROR}
  (an error occurred, the restore should be aborted and rescheduled)."
      end

      operation 2422583 "nextRestorePackage"
	public return_type class_ref 404535 // RestoreDescription
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the package name of the next application with data in the backup store, plus
a description of the structure of the restored archive: either TYPE_KEY_VALUE for
an original-API key/value dataset, or TYPE_FULL_STREAM for a tarball-type archive stream.

<p>If the package name in the returned RestoreDescription object is the singleton
{@link RestoreDescription#NO_MORE_PACKAGES}, it indicates that no further data is available
in the current restore session: all packages described in startRestore() have been
processed.

<p>If this method returns {@code null}, it means that a transport-level error has
occurred and the entire restore operation should be abandoned.

<p class=\"note\">The OS may call {@link #nextRestorePackage()} multiple times
before calling either {@link #getRestoreData(ParcelFileDescriptor) getRestoreData()}
or {@link #getNextFullRestoreDataChunk(ParcelFileDescriptor) getNextFullRestoreDataChunk()}.
It does this when it has determined that it needs to skip restore of one or more
packages.  The transport should not actually transfer any restore data for
the given package in response to {@link #nextRestorePackage()}, but rather wait
for an explicit request before doing so.

@return A RestoreDescription object containing the name of one of the packages
  supplied to {@link #startRestore} plus an indicator of the data type of that
  restore data; or {@link RestoreDescription#NO_MORE_PACKAGES} to indicate that
  no more packages can be restored in this session; or {@code null} to indicate
  a transport-level error."
      end

      operation 2422711 "getRestoreData"
	public explicit_return_type "int"
	nparams 1
	  param inout name "outFd" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the data for the application returned by {@link #nextRestorePackage}, if that
method reported {@link RestoreDescription#TYPE_KEY_VALUE} as its delivery type.
If the package has only TYPE_FULL_STREAM data, then this method will return an
error.

@param data An open, writable file into which the key/value backup data should be stored.
@return the same error codes as {@link #startRestore}."
      end

      operation 2422839 "finishRestore"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End a restore session (aborting any in-process data transfer as necessary),
freeing any resources and connections used during the restore process."
      end

      operation 2422967 "requestFullBackupTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Full backup interfaces

Verify that this is a suitable time for a full-data backup pass.  This should return zero
if a backup is reasonable right now, some positive value otherwise.  This method
will be called outside of the {@link #performFullBackup}/{@link #finishBackup} pair.

<p>If this is not a suitable time for a backup, the transport should return a
backoff delay, in milliseconds, after which the Backup Manager should try again.

@return Zero if this is a suitable time for a backup pass, or a positive time delay
  in milliseconds to suggest deferring the backup pass for a while.

@see #requestBackupTime()"
      end

      operation 2423095 "performFullBackup"
	public explicit_return_type "int"
	nparams 3
	  param inout name "targetPackage" type class_ref 350391 // PackageInfo
	  param inout name "socket" type class_ref 264887 // ParcelFileDescriptor
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin the process of sending an application's full-data archive to the backend.
The description of the package whose data will be delivered is provided, as well as
the socket file descriptor on which the transport will receive the data itself.

<p>If the package is not eligible for backup, the transport should return
{@link BackupTransport#TRANSPORT_PACKAGE_REJECTED}.  In this case the system will
simply proceed with the next candidate if any, or finish the full backup operation
if all apps have been processed.

<p>After the transport returns {@link BackupTransport#TRANSPORT_OK} from this
method, the OS will proceed to call {@link #sendBackupData()} one or more times
to deliver the application's data as a streamed tarball.  The transport should not
read() from the socket except as instructed to via the {@link #sendBackupData(int)}
method.

<p>After all data has been delivered to the transport, the system will call
{@link #finishBackup()}.  At this point the transport should commit the data to
its datastore, if appropriate, and close the socket that had been provided in
{@link #performFullBackup(PackageInfo, ParcelFileDescriptor)}.

<p class=\"note\">If the transport returns TRANSPORT_OK from this method, then the
OS will always provide a matching call to {@link #finishBackup()} even if sending
data via {@link #sendBackupData(int)} failed at some point.

@param targetPackage The package whose data is to follow.
@param socket The socket file descriptor through which the data will be provided.
   If the transport returns {@link #TRANSPORT_PACKAGE_REJECTED} here, it must still
   close this file descriptor now; otherwise it should be cached for use during
   succeeding calls to {@link #sendBackupData(int)}, and closed in response to
   {@link #finishBackup()}.
@param flags {@link BackupTransport#FLAG_USER_INITIATED} or 0.
@return TRANSPORT_PACKAGE_REJECTED to indicate that the stated application is not
   to be backed up; TRANSPORT_OK to indicate that the OS may proceed with delivering
   backup data; TRANSPORT_ERROR to indicate a fatal error condition that precludes
   performing a backup at this time."
      end

      operation 2423223 "performFullBackup"
	public explicit_return_type "int"
	nparams 2
	  param inout name "targetPackage" type class_ref 350391 // PackageInfo
	  param inout name "socket" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Legacy version of {@link #performFullBackup(PackageInfo, ParcelFileDescriptor, int)} that
doesn't use flags parameter."
      end

      operation 2423351 "checkFullBackupSize"
	public explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called after {@link #performFullBackup} to make sure that the transport is willing to
handle a full-data backup operation of the specified size on the current package.
If the transport returns anything other than TRANSPORT_OK, the package's backup
operation will be skipped (and {@link #finishBackup() invoked} with no data for that
package being passed to {@link #sendBackupData}.

<p class=\"note\">The platform does no size-based rejection of full backup attempts on
its own: it is always the responsibility of the transport to implement its own policy.
In particular, even if the preflighted payload size is zero, the platform will still call
this method and will proceed to back up an archive metadata header with no file content
if this method returns TRANSPORT_OK.  To avoid storing such payloads the transport
must recognize this case and return TRANSPORT_PACKAGE_REJECTED.

Added in {@link android.os.Build.VERSION_CODES#M}.

@param size The estimated size of the full-data payload for this app.  This includes
        manifest and archive format overhead, but is not guaranteed to be precise.
@return TRANSPORT_OK if the platform is to proceed with the full-data backup,
        TRANSPORT_PACKAGE_REJECTED if the proposed payload size is too large for
        the transport to handle, or TRANSPORT_ERROR to indicate a fatal error
        condition that means the platform cannot perform a backup at this time."
      end

      operation 2423479 "sendBackupData"
	public explicit_return_type "int"
	nparams 1
	  param in name "numBytes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the transport to read {@code numBytes} bytes of data from the socket file
descriptor provided in the {@link #performFullBackup(PackageInfo, ParcelFileDescriptor)}
call, and deliver those bytes to the datastore.

@param numBytes The number of bytes of tarball data available to be read from the
   socket.
@return TRANSPORT_OK on successful processing of the data; TRANSPORT_ERROR to
   indicate a fatal error situation.  If an error is returned, the system will
   call finishBackup() and stop attempting backups until after a backoff and retry
   interval."
      end

      operation 2423607 "cancelFullBackup"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the transport to cancel the currently-ongoing full backup operation.  This
will happen between {@link #performFullBackup()} and {@link #finishBackup()}
if the OS needs to abort the backup operation for any reason, such as a crash in
the application undergoing backup.

<p>When it receives this call, the transport should discard any partial archive
that it has stored so far.  If possible it should also roll back to the previous
known-good archive in its datastore.

<p>If the transport receives this callback, it will <em>not</em> receive a
call to {@link #finishBackup()}.  It needs to tear down any ongoing backup state
here."
      end

      operation 2423735 "isAppEligibleForBackup"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "targetPackage" type class_ref 350391 // PackageInfo
	  param inout name "isFullBackup" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport whether this app is eligible for backup.

@param targetPackage The identity of the application.
@param isFullBackup If set, transport should check if app is eligible for full data backup,
  otherwise to check if eligible for key-value backup.
@return Whether this app is eligible for backup."
      end

      operation 2423863 "getBackupQuota"
	public explicit_return_type "long"
	nparams 2
	  param inout name "packageName" type class_ref 129591 // String
	  param inout name "isFullBackup" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the transport about current quota for backup size of the package.

@param packageName ID of package to provide the quota.
@param isFullBackup If set, transport should return limit for full data backup, otherwise
                    for key-value backup.
@return Current limit on backup size in bytes."
      end

      operation 2423991 "getNextFullRestoreDataChunk"
	public explicit_return_type "int"
	nparams 1
	  param inout name "socket" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ------------------------------------------------------------------------------------
 Full restore interfaces

Ask the transport to provide data for the \"current\" package being restored.  This
is the package that was just reported by {@link #nextRestorePackage()} as having
{@link RestoreDescription#TYPE_FULL_STREAM} data.

The transport writes some data to the socket supplied to this call, and returns
the number of bytes written.  The system will then read that many bytes and
stream them to the application's agent for restore, then will call this method again
to receive the next chunk of the archive.  This sequence will be repeated until the
transport returns zero indicating that all of the package's data has been delivered
(or returns a negative value indicating some sort of hard error condition at the
transport level).

<p>After this method returns zero, the system will then call
{@link #nextRestorePackage()} to begin the restore process for the next
application, and the sequence begins again.

<p>The transport should always close this socket when returning from this method.
Do not cache this socket across multiple calls or you may leak file descriptors.

@param socket The file descriptor that the transport will use for delivering the
   streamed archive.  The transport must close this socket in all cases when returning
   from this method.
@return {@link #NO_MORE_DATA} when no more data for the current package is available.
   A positive value indicates the presence of that many bytes to be delivered to the app.
   A value of zero indicates that no data was deliverable at this time, but the restore
   is still running and the caller should retry.  {@link #TRANSPORT_PACKAGE_REJECTED}
   means that the current package's restore operation should be aborted, but that
   the transport itself is still in a good state and so a multiple-package restore
   sequence can still be continued.  Any other negative return value is treated as a
   fatal error condition that aborts all further restore operations on the current dataset."
      end

      operation 2424119 "abortFullRestore"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the OS encounters an error while processing {@link RestoreDescription#TYPE_FULL_STREAM}
data for restore, it will invoke this method to tell the transport that it should
abandon the data download for the current package.  The OS will then either call
{@link #nextRestorePackage()} again to move on to restoring the next package in the
set being iterated over, or will call {@link #finishRestore()} to shut down the restore
operation.

@return {@link #TRANSPORT_OK} if the transport was successful in shutting down the
   current stream cleanly, or {@link #TRANSPORT_ERROR} to indicate a serious
   transport-level failure.  If the transport reports an error here, the entire restore
   operation will immediately be finished with no further attempts to restore app data."
      end

      class 404663 "TransportImpl"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 924087 // <generalisation>
	  relation 924087 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 924087 // <generalisation>
	    b parent class_ref 404791 // Stub
	end

	operation 2424247 "name"
	  public return_type class_ref 129591 // String
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2424375 "configurationIntent"
	  public return_type class_ref 131255 // Intent
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2424503 "currentDestinationString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2424631 "dataManagementIntent"
	  public return_type class_ref 131255 // Intent
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2424759 "dataManagementLabel"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2424887 "transportDirName"
	  public return_type class_ref 129591 // String
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2425015 "requestBackupTime"
	  public explicit_return_type "long"
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2425143 "initializeDevice"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2425271 "performBackup"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "packageInfo" type class_ref 350391 // PackageInfo
	    param inout name "inFd" type class_ref 264887 // ParcelFileDescriptor
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2425399 "clearBackupData"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "packageInfo" type class_ref 350391 // PackageInfo
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2425527 "finishBackup"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2425655 "getAvailableRestoreSets"
	  public return_type class_ref 284599 // RestoreSet
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2425783 "getCurrentRestoreSet"
	  public explicit_return_type "long"
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2425911 "startRestore"
	  public explicit_return_type "int"
	  nparams 2
	    param in name "token" explicit_type "long"
	    param inout name "packages" type class_ref 350391 // PackageInfo
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2426039 "nextRestorePackage"
	  public return_type class_ref 404535 // RestoreDescription
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2426167 "getRestoreData"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "outFd" type class_ref 264887 // ParcelFileDescriptor
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2426295 "finishRestore"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2426423 "requestFullBackupTime"
	  public explicit_return_type "long"
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2426551 "performFullBackup"
	  public explicit_return_type "int"
	  nparams 3
	    param inout name "targetPackage" type class_ref 350391 // PackageInfo
	    param inout name "socket" type class_ref 264887 // ParcelFileDescriptor
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2426679 "checkFullBackupSize"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "size" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2426807 "sendBackupData"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "numBytes" explicit_type "int"
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2426935 "cancelFullBackup"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2427063 "isAppEligibleForBackup"
	  public explicit_return_type "boolean"
	  nparams 2
	    param inout name "targetPackage" type class_ref 350391 // PackageInfo
	    param inout name "isFullBackup" explicit_type "boolean"
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2427191 "getBackupQuota"
	  public explicit_return_type "long"
	  nparams 2
	    param inout name "packageName" type class_ref 129591 // String
	    param inout name "isFullBackup" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2427319 "getNextFullRestoreDataChunk"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "socket" type class_ref 264887 // ParcelFileDescriptor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2427447 "abortFullRestore"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 404535 "RestoreDescription"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemApi
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Description of the available restore data for a given package.  Returned by a
BackupTransport in response to a request about the next available restorable
package.

@see BackupTransport#nextRestorePackage()

@hide"
      classrelation 929079 // <realization>
	relation 929079 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 929079 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 929207 // mPackageName (<unidirectional association>)
	relation 929207 --->
	  a role_name "mPackageName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 929207 // mPackageName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 922935 "mDataType"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 929335 // NO_MORE_PACKAGES_SENTINEL (<unidirectional association>)
	relation 929335 --->
	  a role_name "NO_MORE_PACKAGES_SENTINEL" init_value " \"\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 929335 // NO_MORE_PACKAGES_SENTINEL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 929463 // NO_MORE_PACKAGES (<unidirectional association>)
	relation 929463 --->
	  a role_name "NO_MORE_PACKAGES" init_value "
            new RestoreDescription(NO_MORE_PACKAGES_SENTINEL, 0)" class_relation const_relation public
	    comment "
Return this constant RestoreDescription from BackupTransport.nextRestorePackage()
to indicate that no more package data is available in the current restore operation.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 929463 // NO_MORE_PACKAGES (<unidirectional association>)
	  b parent class_ref 404535 // RestoreDescription
      end

      attribute 923063 "TYPE_KEY_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ---------------------------------------
 Data type identifiers
 This package's restore data is an original-style key/value dataset "
      end

      attribute 923191 "TYPE_FULL_STREAM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " This package's restore data is a tarball-type full data stream "
      end

      operation 2432311 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2432439 "RestoreDescription"
	public explicit_return_type ""
	nparams 2
	  param inout name "packageName" type class_ref 129591 // String
	  param in name "dataType" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------
 API"
      end

      operation 2432567 "getPackageName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2432695 "getDataType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2432823 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " ---------------------------------------
 Parcelable implementation - not used by transport"
      end

      operation 2432951 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 929591 // CREATOR (<unidirectional association>)
	relation 929591 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<RestoreDescription>() {
        public RestoreDescription createFromParcel(Parcel in) {
            final RestoreDescription unparceled = new RestoreDescription(in);
            return (NO_MORE_PACKAGES_SENTINEL.equals(unparceled.mPackageName))
                    ? NO_MORE_PACKAGES
                    : unparceled;
        }

        public RestoreDescription[] newArray(int size) {
            return new RestoreDescription[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RestoreDescription> ${name}${value};
"
	    classrelation_ref 929591 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 2433079 "RestoreDescription"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 404919 "BlobBackupHelper"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility class for writing BackupHelpers whose underlying data is a
fixed set of byte-array blobs.  The helper manages diff detection
and compression on the wire.

@hide"
      classrelation 924215 // <realization>
	relation 924215 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 924215 // <realization>
	  b parent class_ref 402231 // BackupHelper
      end

      classrelation 924343 // TAG (<unidirectional association>)
	relation 924343 --->
	  a role_name "TAG" init_value " \"BlobBackupHelper\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 924343 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 920503 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 920631 "mCurrentBlobVersion"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 924471 // mKeys (<unidirectional association>)
	relation 924471 --->
	  a role_name "mKeys" multiplicity "[]" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 924471 // mKeys (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 2427575 "BlobBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param in name "currentBlobVersion" explicit_type "int"
	  param inout name "" explicit_type "String...keys"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2427703 "getBackupPayload"
	abstract protected explicit_return_type "byte"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Client interface

Generate and return the byte array containing the backup payload describing
the current data state.  During a backup operation this method is called once
per key that was supplied to the helper's constructor.

@return A byte array containing the data blob that the caller wishes to store,
    or {@code null} if the current state is empty or undefined."
      end

      operation 2427831 "applyRestoredPayload"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "payload" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a byte array that was restored from backup, do whatever is appropriate
to apply that described state in the live system.  This method is called once
per key/value payload that was delivered for restore.  Typically data is delivered
for restore in lexical order by key, <i>not</i> in the order in which the keys
were supplied in the constructor.

@param payload The byte array that was passed to {@link #getBackupPayload()}
    on the ancestral device."
      end

      operation 2427959 "readOldState"
	private return_type class_ref 156343 // ArrayMap
	nparams 1
	  param inout name "oldStateFd" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, Long> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"resource\")
"
	
	
	
	comment " Internal implementation

State on-disk format:
[Int]    : overall blob version number
[Int=N] : number of keys represented in the state blob
N* :
    [String] key
    [Long]   blob checksum, calculated after compression"
      end

      operation 2428087 "writeBackupState"
	private explicit_return_type "void"
	nparams 2
	  param inout name "state" type class_ref 156343 // ArrayMap
	  param inout name "stateFile" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, Long> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "New overall state record"
      end

      operation 2428215 "deflate"
	private explicit_return_type "byte"
	nparams 1
	  param inout name "data" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Also versions the deflated blob internally in case we need to revise it"
      end

      operation 2428343 "inflate"
	private explicit_return_type "byte"
	nparams 1
	  param inout name "compressedData" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns null if inflation failed"
      end

      operation 2428471 "checksum"
	private explicit_return_type "long"
	nparams 1
	  param inout name "buffer" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2428599 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldStateFd" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newStateFd" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " BackupHelper interface"
      end

      operation 2428727 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 402103 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2428855 "writeNewStateDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 405047 "FileBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A helper class that can be used in conjunction with
{@link android.app.backup.BackupAgentHelper} to manage the backup of a set of
files. Whenever backup is performed, all files changed since the last backup
will be saved in their entirety. When backup first occurs,
every file in the list provided to {@link #FileBackupHelper} will be backed up.
<p>
During restore, if the helper encounters data for a file that was not
specified when the FileBackupHelper object was constructed, that data
will be ignored.
<p class=\"note\"><strong>Note:</strong> This should be
used only with small configuration files, not large binary files."
      classrelation 924599 // <generalisation>
	relation 924599 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 924599 // <generalisation>
	  b parent class_ref 401847 // FileBackupHelperBase
      end

      classrelation 924727 // <realization>
	relation 924727 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 924727 // <realization>
	  b parent class_ref 402231 // BackupHelper
      end

      classrelation 924855 // TAG (<unidirectional association>)
	relation 924855 --->
	  a role_name "TAG" init_value " \"FileBackupHelper\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 924855 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 920759 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 924983 // mContext (<unidirectional association>)
	relation 924983 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 924983 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 920887 "mFilesDir"
	package explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 925111 // mFiles (<unidirectional association>)
	relation 925111 --->
	  a role_name "mFiles" multiplicity "[]" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 925111 // mFiles (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 2428983 "FileBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "" explicit_type "String...files"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper to manage backup/restore of entire files within the
application's data directory hierarchy.

@param context The backup agent's Context object
@param files A list of the files to be backed up or restored."
      end

      operation 2429111 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on <code>oldState</code>, determine which of the files from the
application's data directory need to be backed up, write them to the data
stream, and fill in <code>newState</code> with the state as it exists
now. When <code>oldState</code> is <code>null</code>, all the files will
be backed up.
<p>
This should only be called directly from within the {@link BackupAgentHelper}
implementation. See
{@link android.app.backup.BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)}
for a description of parameter meanings."
      end

      operation 2429239 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 402103 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore one record [representing a single file] from the restore dataset.
<p>
This should only be called directly from within the {@link BackupAgentHelper}
implementation."
      end
    end

    class 405175 "FullBackup"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Global constant definitions et cetera related to the full-backup-to-fd
binary format.  Nothing in this namespace is part of any API; it's all
hidden details of the current implementation gathered into one location.

@hide"
      classrelation 925239 // TAG (<unidirectional association>)
	relation 925239 --->
	  a role_name "TAG" init_value " \"FullBackup\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 925239 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 925367 // TAG_XML_PARSER (<unidirectional association>)
	relation 925367 --->
	  a role_name "TAG_XML_PARSER" init_value " \"BackupXmlParserLogging\"" class_relation const_relation package
	    comment " Enable this log tag to get verbose information while parsing the client xml. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 925367 // TAG_XML_PARSER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 925495 // APK_TREE_TOKEN (<unidirectional association>)
	relation 925495 --->
	  a role_name "APK_TREE_TOKEN" init_value " \"a\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 925495 // APK_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 925623 // OBB_TREE_TOKEN (<unidirectional association>)
	relation 925623 --->
	  a role_name "OBB_TREE_TOKEN" init_value " \"obb\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 925623 // OBB_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 925751 // ROOT_TREE_TOKEN (<unidirectional association>)
	relation 925751 --->
	  a role_name "ROOT_TREE_TOKEN" init_value " \"r\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 925751 // ROOT_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 925879 // FILES_TREE_TOKEN (<unidirectional association>)
	relation 925879 --->
	  a role_name "FILES_TREE_TOKEN" init_value " \"f\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 925879 // FILES_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 926007 // NO_BACKUP_TREE_TOKEN (<unidirectional association>)
	relation 926007 --->
	  a role_name "NO_BACKUP_TREE_TOKEN" init_value " \"nb\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926007 // NO_BACKUP_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 926135 // DATABASE_TREE_TOKEN (<unidirectional association>)
	relation 926135 --->
	  a role_name "DATABASE_TREE_TOKEN" init_value " \"db\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926135 // DATABASE_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 926263 // SHAREDPREFS_TREE_TOKEN (<unidirectional association>)
	relation 926263 --->
	  a role_name "SHAREDPREFS_TREE_TOKEN" init_value " \"sp\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926263 // SHAREDPREFS_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 926391 // CACHE_TREE_TOKEN (<unidirectional association>)
	relation 926391 --->
	  a role_name "CACHE_TREE_TOKEN" init_value " \"c\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926391 // CACHE_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 926519 // DEVICE_ROOT_TREE_TOKEN (<unidirectional association>)
	relation 926519 --->
	  a role_name "DEVICE_ROOT_TREE_TOKEN" init_value " \"d_r\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926519 // DEVICE_ROOT_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 926647 // DEVICE_FILES_TREE_TOKEN (<unidirectional association>)
	relation 926647 --->
	  a role_name "DEVICE_FILES_TREE_TOKEN" init_value " \"d_f\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926647 // DEVICE_FILES_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 926775 // DEVICE_NO_BACKUP_TREE_TOKEN (<unidirectional association>)
	relation 926775 --->
	  a role_name "DEVICE_NO_BACKUP_TREE_TOKEN" init_value " \"d_nb\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926775 // DEVICE_NO_BACKUP_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 926903 // DEVICE_DATABASE_TREE_TOKEN (<unidirectional association>)
	relation 926903 --->
	  a role_name "DEVICE_DATABASE_TREE_TOKEN" init_value " \"d_db\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 926903 // DEVICE_DATABASE_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 927031 // DEVICE_SHAREDPREFS_TREE_TOKEN (<unidirectional association>)
	relation 927031 --->
	  a role_name "DEVICE_SHAREDPREFS_TREE_TOKEN" init_value " \"d_sp\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927031 // DEVICE_SHAREDPREFS_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 927159 // DEVICE_CACHE_TREE_TOKEN (<unidirectional association>)
	relation 927159 --->
	  a role_name "DEVICE_CACHE_TREE_TOKEN" init_value " \"d_c\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927159 // DEVICE_CACHE_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 927287 // MANAGED_EXTERNAL_TREE_TOKEN (<unidirectional association>)
	relation 927287 --->
	  a role_name "MANAGED_EXTERNAL_TREE_TOKEN" init_value " \"ef\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927287 // MANAGED_EXTERNAL_TREE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 927415 // SHARED_STORAGE_TOKEN (<unidirectional association>)
	relation 927415 --->
	  a role_name "SHARED_STORAGE_TOKEN" init_value " \"shared\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927415 // SHARED_STORAGE_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 927543 // APPS_PREFIX (<unidirectional association>)
	relation 927543 --->
	  a role_name "APPS_PREFIX" init_value " \"apps/\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927543 // APPS_PREFIX (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 927671 // SHARED_PREFIX (<unidirectional association>)
	relation 927671 --->
	  a role_name "SHARED_PREFIX" init_value " SHARED_STORAGE_TOKEN + \"/\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927671 // SHARED_PREFIX (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 927799 // FULL_BACKUP_INTENT_ACTION (<unidirectional association>)
	relation 927799 --->
	  a role_name "FULL_BACKUP_INTENT_ACTION" init_value " \"fullback\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927799 // FULL_BACKUP_INTENT_ACTION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 927927 // FULL_RESTORE_INTENT_ACTION (<unidirectional association>)
	relation 927927 --->
	  a role_name "FULL_RESTORE_INTENT_ACTION" init_value " \"fullrest\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 927927 // FULL_RESTORE_INTENT_ACTION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 928055 // CONF_TOKEN_INTENT_EXTRA (<unidirectional association>)
	relation 928055 --->
	  a role_name "CONF_TOKEN_INTENT_EXTRA" init_value " \"conftoken\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 928055 // CONF_TOKEN_INTENT_EXTRA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 2429367 "backupToTar"
	class_operation public explicit_return_type "int"
	nparams 6
	  param inout name "packageName" type class_ref 129591 // String
	  param inout name "domain" type class_ref 129591 // String
	  param inout name "linkdomain" type class_ref 129591 // String
	  param inout name "rootpath" type class_ref 129591 // String
	  param inout name "path" type class_ref 129591 // String
	  param inout name "output" type class_ref 402743 // FullBackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws};
"
	
	
	
	comment "@hide"
      end

      classrelation 928183 // kPackageBackupSchemeMap (<unidirectional association>)
	relation 928183 --->
	  stereotype "Map"
	  a role_name "kPackageBackupSchemeMap" init_value "
            new ArrayMap<String, BackupScheme>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, BackupScheme> ${name}${value};
"
	    classrelation_ref 928183 // kPackageBackupSchemeMap (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      class 405303 "BackupScheme"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@VisibleForTesting
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 921015 "FILES_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 921143 "DATABASE_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 921271 "ROOT_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 921399 "SHAREDPREF_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 921527 "CACHE_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 921655 "NOBACKUP_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 921783 "DEVICE_FILES_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 921911 "DEVICE_DATABASE_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 922039 "DEVICE_ROOT_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 922167 "DEVICE_SHAREDPREF_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 922295 "DEVICE_CACHE_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 922423 "DEVICE_NOBACKUP_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 922551 "EXTERNAL_DIR"
	  const_attribute private explicit_type "File"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 922679 "mFullBackupContent"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 928311 // mPackageManager (<unidirectional association>)
	  relation 928311 --->
	    a role_name "mPackageManager" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 928311 // mPackageManager (<unidirectional association>)
	    b parent class_ref 129079 // PackageManager
	end

	classrelation 928439 // mPackageName (<unidirectional association>)
	  relation 928439 --->
	    a role_name "mPackageName" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 928439 // mPackageName (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	operation 2429879 "tokenToDirectoryPath"
	  package return_type class_ref 129591 // String
	  nparams 1
	    param inout name "domainToken" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Parse out the semantic domains into the correct physical location."
	end

	classrelation 928567 // mIncludes (<unidirectional association>)
	  relation 928567 --->
	    stereotype "Map"
	    a role_name "mIncludes" package
	      comment "A map of domain -> list of canonical file names in that domain that are to be included.
We keep track of the domain so that we can go through the file system in order later on.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Set<String>> ${name}${value};
"
	      classrelation_ref 928567 // mIncludes (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 928695 // mExcludes (<unidirectional association>)
	  relation 928695 --->
	    a role_name "mExcludes" package
	      comment "e
List that will be populated with the canonical names of each file or directory that is
to be excluded.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 928695 // mExcludes (<unidirectional association>)
	    b parent class_ref 385591 // ArraySet
	end

	operation 2430007 "BackupScheme"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "context" type class_ref 128567 // Context
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2430135 "isFullBackupContentEnabled"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2430263 "maybeParseAndGetCanonicalIncludePaths"
	  public return_type class_ref 129591 // String
	  nparams 0
	  nexceptions 2
	    explicit_exception "IOException"
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type}, Set<String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return A mapping of domain -> canonical paths within that domain. Each of these paths
specifies a file that the client has explicitly included in their backup set. If this
map is empty we will back up the entire data directory (including managed external
storage)."
	end

	operation 2430391 "maybeParseAndGetCanonicalExcludePaths"
	  public return_type class_ref 385591 // ArraySet
	  nparams 0
	  nexceptions 2
	    explicit_exception "IOException"
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return A set of canonical paths that are to be excluded from the backup/restore set."
	end

	operation 2430519 "maybeParseBackupSchemeLocked"
	  private explicit_return_type "void"
	  nparams 0
	  nexceptions 2
	    explicit_exception "IOException"
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2430647 "parseBackupSchemeFromXmlLocked"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "parser" explicit_type "XmlPullParser"
	    param inout name "excludes" explicit_type "Set<String>"
	    param inout name "includes" explicit_type "Map<String, Set<String>>"
	  nexceptions 2
	    explicit_exception "IOException"
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@VisibleForTesting
"
	  
	  
	  
	end

	operation 2430775 "parseCurrentTagForDomain"
	  private return_type class_ref 129591 // String
	  nparams 4
	    param inout name "parser" explicit_type "XmlPullParser"
	    param inout name "excludes" explicit_type "Set<String>"
	    param inout name "includes" explicit_type "Map<String, Set<String>>"
	    param inout name "domain" type class_ref 129591 // String
	  nexceptions 1
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2430903 "getTokenForXmlDomain"
	  private return_type class_ref 129591 // String
	  nparams 1
	    param inout name "xmlDomain" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Map xml specified domain (human-readable, what clients put in their manifest's xml) to
BackupAgent internal data token.
@return null if the xml domain was invalid."
	end

	operation 2431031 "extractCanonicalFile"
	  private explicit_return_type "File"
	  nparams 2
	    param inout name "domain" explicit_type "File"
	    param inout name "filePathFromXml" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "
@param domain Directory where the specified file should exist. Not null.
@param filePathFromXml parsed from xml. Not sanitised before calling this function so may be
                       null.
@return The canonical path of the file specified or null if no such file exists."
	end

	operation 2431159 "getDirectoryForCriteriaDomain"
	  private explicit_return_type "File"
	  nparams 1
	    param inout name "domain" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@param domain parsed from xml. Not sanitised before calling this function so may be null.
@return The directory relevant to the domain specified."
	end

	operation 2431287 "validateInnerTagContents"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "parser" explicit_type "XmlPullParser"
	  nexceptions 1
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Let's be strict about the type of xml the client can write. If we see anything untoward,
throw an XmlPullParserException."
	end
      end

      operation 2429495 "getBackupScheme"
	class_operation package return_type class_ref 405303 // BackupScheme
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2429623 "getBackupSchemeForTest"
	class_operation public return_type class_ref 405303 // BackupScheme
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2429751 "restoreFile"
	class_operation public explicit_return_type "void"
	nparams 6
	  param inout name "data" type class_ref 264887 // ParcelFileDescriptor
	  param in name "size" explicit_type "long"
	  param in name "type" explicit_type "int"
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	  param inout name "outFile" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy data from a socket to the given File location on permanent storage.  The
modification time and access mode of the resulting file will be set if desired,
although group/all rwx modes will be stripped: the restored file will not be
accessible from outside the target application even if the original file was.
If the {@code type} parameter indicates that the result should be a directory,
the socket parameter may be {@code null}; even if it is valid, no data will be
read from it in this case.
<p>
If the {@code mode} argument is negative, then the resulting output file will not
have its access mode or last modification time reset as part of this operation.

@param data Socket supplying the data to be copied to the output file.  If the
   output is a directory, this may be {@code null}.
@param size Number of bytes of data to copy from the socket to the file.  At least
   this much data must be available through the {@code data} parameter.
@param type Must be either {@link BackupAgent#TYPE_FILE} for ordinary file data
   or {@link BackupAgent#TYPE_DIRECTORY} for a directory.
@param mode Unix-style file mode (as used by the chmod(2) syscall) to be set on
   the output file or directory.  group/all rwx modes are stripped even if set
   in this parameter.  If this parameter is negative then neither
   the mode nor the mtime values will be applied to the restored file.
@param mtime A timestamp in the standard Unix epoch that will be imposed as the
   last modification time of the output file.  if the {@code mode} parameter is
   negative then this parameter will be ignored.
@param outFile Location within the filesystem to place the data.  This must point
   to a location that is writeable by the caller, preferably using an absolute path.
@throws IOException"
      end
    end

    class 405431 "FullBackupAgent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Simple concrete class that merely provides the default BackupAgent full backup/restore
implementations for applications that do not supply their own.

{@hide}"
      classrelation 928823 // <generalisation>
	relation 928823 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 928823 // <generalisation>
	  b parent class_ref 402359 // BackupAgent
      end

      operation 2431415 "onBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2431543 "onRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 402615 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 405687 "SharedPreferencesBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A helper class that can be used in conjunction with
{@link android.app.backup.BackupAgentHelper} to manage the backup of
{@link android.content.SharedPreferences}. Whenever a backup is performed, it
will back up all named shared preferences that have changed since the last
backup operation.
<p>
To use this class, the application's backup agent class should extend
{@link android.app.backup.BackupAgentHelper}.  Then, in the agent's
{@link BackupAgent#onCreate()} method, an instance of this class should be
allocated and installed as a backup/restore handler within the BackupAgentHelper
framework.  For example, an agent supporting backup and restore for
an application with two groups of {@link android.content.SharedPreferences}
data might look something like this:
<pre>
import android.app.backup.BackupAgentHelper;
import android.app.backup.SharedPreferencesBackupHelper;

public class MyBackupAgent extends BackupAgentHelper {
    // The names of the SharedPreferences groups that the application maintains.  These
    // are the same strings that are passed to {@link Context#getSharedPreferences(String, int)}.
    static final String PREFS_DISPLAY = \"displayprefs\";
    static final String PREFS_SCORES = \"highscores\";

    // An arbitrary string used within the BackupAgentHelper implementation to
    // identify the SharedPreferenceBackupHelper's data.
    static final String MY_PREFS_BACKUP_KEY = \"myprefs\";

    // Simply allocate a helper and install it
    void onCreate() {
        SharedPreferencesBackupHelper helper =
                new SharedPreferencesBackupHelper(this, PREFS_DISPLAY, PREFS_SCORES);
        addHelper(MY_PREFS_BACKUP_KEY, helper);
    }
}</pre>
<p>
No further implementation is needed; the {@link BackupAgentHelper} mechanism automatically
dispatches the
{@link BackupAgent#onBackup(android.os.ParcelFileDescriptor, BackupDataOutput, android.os.ParcelFileDescriptor) BackupAgent.onBackup()}
and
{@link BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) BackupAgent.onRestore()}
callbacks to the SharedPreferencesBackupHelper as appropriate."
      classrelation 930999 // <generalisation>
	relation 930999 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 930999 // <generalisation>
	  b parent class_ref 401847 // FileBackupHelperBase
      end

      classrelation 931127 // <realization>
	relation 931127 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 931127 // <realization>
	  b parent class_ref 402231 // BackupHelper
      end

      classrelation 931255 // TAG (<unidirectional association>)
	relation 931255 --->
	  a role_name "TAG" init_value " \"SharedPreferencesBackupHelper\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 931255 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 924087 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 931383 // mContext (<unidirectional association>)
	relation 931383 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 931383 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      classrelation 931511 // mPrefGroups (<unidirectional association>)
	relation 931511 --->
	  a role_name "mPrefGroups" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 931511 // mPrefGroups (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 2435767 "SharedPreferencesBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "" explicit_type "String...prefGroups"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up and restoring the
{@link android.content.SharedPreferences} under the given names.

@param context The application {@link android.content.Context}
@param prefGroups The names of each {@link android.content.SharedPreferences} file to
back up"
      end

      operation 2435895 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Backs up the configured {@link android.content.SharedPreferences} groups."
      end

      operation 2436023 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 402103 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restores one entity from the restore data stream to its proper shared
preferences file store."
      end
    end

    class 405815 "WallpaperBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Helper for backing up / restoring wallpapers.  Basically an AbsoluteFileBackupHelper,
but with logic for deciding what to do with restored wallpaper images.

@hide"
      classrelation 931639 // <generalisation>
	relation 931639 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 931639 // <generalisation>
	  b parent class_ref 401847 // FileBackupHelperBase
      end

      classrelation 931767 // <realization>
	relation 931767 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 931767 // <realization>
	  b parent class_ref 402231 // BackupHelper
      end

      classrelation 931895 // TAG (<unidirectional association>)
	relation 931895 --->
	  a role_name "TAG" init_value " \"WallpaperBackupHelper\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 931895 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 924215 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 924343 "REJECT_OUTSIZED_RESTORE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If 'true', then apply an acceptable-size heuristic at restore time, dropping back
 to the factory default wallpaper if the restored one differs \"too much\" from the
 device's preferred wallpaper image dimensions."
      end

      attribute 924471 "MAX_HEIGHT_RATIO"
	class_attribute const_attribute private explicit_type "double"
	init_value " 1.35"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " When outsized restore rejection is enabled, this is the maximum ratio between the
 source and target image heights that will be permitted.  The ratio is checked both
 ways (i.e. >= MAX, or <= 1/MAX) to validate restores from both largeer-than-target
 and smaller-than-target sources."
      end

      attribute 924599 "MIN_HEIGHT_RATIO"
	class_attribute const_attribute private explicit_type "double"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The height ratio check when applying larger images on smaller screens is separate;
 in current policy we accept any such restore regardless of the relative dimensions."
      end

      classrelation 932023 // WALLPAPER_IMAGE (<unidirectional association>)
	relation 932023 --->
	  a role_name "WALLPAPER_IMAGE" init_value "
            new File(Environment.getUserSystemDirectory(UserHandle.USER_SYSTEM),
                    \"wallpaper\").getAbsolutePath()" class_relation const_relation public
	    comment " This path must match what the WallpaperManagerService uses
 TODO: Will need to change if backing up non-primary user's wallpaper
 http://b/22388012
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 932023 // WALLPAPER_IMAGE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 932151 // WALLPAPER_INFO (<unidirectional association>)
	relation 932151 --->
	  a role_name "WALLPAPER_INFO" init_value "
            new File(Environment.getUserSystemDirectory(UserHandle.USER_SYSTEM),
                    \"wallpaper_info.xml\").getAbsolutePath()" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 932151 // WALLPAPER_INFO (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 932279 // WALLPAPER_IMAGE_KEY (<unidirectional association>)
	relation 932279 --->
	  a role_name "WALLPAPER_IMAGE_KEY" init_value "
            \"/data/data/com.android.settings/files/wallpaper\"" class_relation const_relation public
	    comment " Use old keys to keep legacy data compatibility and avoid writing two wallpapers
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 932279 // WALLPAPER_IMAGE_KEY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 932407 // WALLPAPER_INFO_KEY (<unidirectional association>)
	relation 932407 --->
	  a role_name "WALLPAPER_INFO_KEY" init_value " \"/data/system/wallpaper_info.xml\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 932407 // WALLPAPER_INFO_KEY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 932535 // STAGE_FILE (<unidirectional association>)
	relation 932535 --->
	  a role_name "STAGE_FILE" init_value "
            new File(Environment.getUserSystemDirectory(UserHandle.USER_SYSTEM),
                    \"wallpaper-tmp\").getAbsolutePath()" class_relation const_relation private
	    comment " Stage file - should be adjacent to the WALLPAPER_IMAGE location.  The wallpapers
 will be saved to this file from the restore stream, then renamed to the proper
 location if it's deemed suitable.
 TODO: Will need to change if backing up non-primary user's wallpaper
 http://b/22388012
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 932535 // STAGE_FILE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 932663 // mContext (<unidirectional association>)
	relation 932663 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 932663 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      classrelation 932791 // mFiles (<unidirectional association>)
	relation 932791 --->
	  a role_name "mFiles" multiplicity "[]" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 932791 // mFiles (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 932919 // mKeys (<unidirectional association>)
	relation 932919 --->
	  a role_name "mKeys" multiplicity "[]" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 932919 // mKeys (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 924727 "mDesiredMinWidth"
	package explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 924855 "mDesiredMinHeight"
	package explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2436151 "WallpaperBackupHelper"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "files" type class_ref 129591 // String
	  param inout name "keys" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up / restoring the files at the given absolute locations
within the file system.

@param context
@param files"
      end

      operation 2436279 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 264887 // ParcelFileDescriptor
	  param inout name "data" type class_ref 401975 // BackupDataOutput
	  param inout name "newState" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Based on oldState, determine which of the files from the application's data directory
need to be backed up, write them to the data stream, and fill in newState with the
state as it exists now."
      end

      operation 2436407 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 402103 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Restore one absolute file entity from the restore stream.  If we're restoring the
magic wallpaper file, take specific action to determine whether it is suitable for
the current device."
      end

      operation 2436535 "onRestoreFinished"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hook for the agent to call this helper upon completion of the restore.  We do this
upon completion so that we know both the imagery and the wallpaper info have
been emplaced without requiring either or relying on ordering."
      end
    end

    class 838583 "BackupDataTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2582583 // <generalisation>
	relation 2582583 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2582583 // <generalisation>
	  b parent class_ref 627895 // AndroidTestCase
      end

      classrelation 2582711 // KEY1 (<unidirectional association>)
	relation 2582711 --->
	  a role_name "KEY1" init_value " \"key1\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2582711 // KEY1 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2582839 // KEY2 (<unidirectional association>)
	relation 2582839 --->
	  a role_name "KEY2" init_value " \"key2a\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2582839 // KEY2 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2582967 // KEY3 (<unidirectional association>)
	relation 2582967 --->
	  a role_name "KEY3" init_value " \"key3bc\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2582967 // KEY3 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2583095 // KEY4 (<unidirectional association>)
	relation 2583095 --->
	  a role_name "KEY4" init_value " \"key4dad\"" class_relation const_relation private
	    comment " variable key lengths to test padding"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2583095 // KEY4 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2583223 // KEYS (<unidirectional association>)
	relation 2583223 --->
	  a role_name "KEYS" multiplicity "[]" init_value " {KEY1, KEY2, KEY3, KEY4}" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2583223 // KEYS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2583351 // DATA1 (<unidirectional association>)
	relation 2583351 --->
	  a role_name "DATA1" init_value " \"abcdef\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2583351 // DATA1 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2583479 // DATA2 (<unidirectional association>)
	relation 2583479 --->
	  a role_name "DATA2" init_value " \"abcdefg\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2583479 // DATA2 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2583607 // DATA3 (<unidirectional association>)
	relation 2583607 --->
	  a role_name "DATA3" init_value " \"abcdefgh\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2583607 // DATA3 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2583735 // DATA4 (<unidirectional association>)
	relation 2583735 --->
	  a role_name "DATA4" init_value " \"abcdeffhi\"" class_relation const_relation private
	    comment "variable data lengths to test padding"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2583735 // DATA4 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2583863 // DATA (<unidirectional association>)
	relation 2583863 --->
	  a role_name "DATA" multiplicity "[]" init_value " {DATA1, DATA2, DATA3, DATA4}" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2583863 // DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2583991 // TAG (<unidirectional association>)
	relation 2583991 --->
	  a role_name "TAG" init_value " \"BackupDataTest\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2583991 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 2822327 "mFile"
	private explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2584119 // mDataFile (<unidirectional association>)
	relation 2584119 --->
	  a role_name "mDataFile" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2584119 // mDataFile (<unidirectional association>)
	  b parent class_ref 264887 // ParcelFileDescriptor
      end

      attribute 2822455 "mDirectory"
	private explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2584247 // mStatusBundle (<unidirectional association>)
	relation 2584247 --->
	  a role_name "mStatusBundle" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2584247 // mStatusBundle (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      classrelation 2584375 // mAssets (<unidirectional association>)
	relation 2584375 --->
	  a role_name "mAssets" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2584375 // mAssets (<unidirectional association>)
	  b parent class_ref 128823 // AssetManager
      end

      operation 6649015 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6649143 "tearDown"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6649271 "testSingle"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6649399 "testMultiple"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6649527 "testDelete"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6649655 "testMixed"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6649783 "testReadMockData"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6649911 "testReadRealData"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6650039 "copyAssetToFile"
	private explicit_return_type "void"
	nparams 2
	  param inout name "source" type class_ref 129591 // String
	  param inout name "destination" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6650167 "openForWriting"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6650295 "openForReading"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6650423 "writeEntity"
	private explicit_return_type "void"
	nparams 3
	  param inout name "bdo" type class_ref 401975 // BackupDataOutput
	  param inout name "key" type class_ref 129591 // String
	  param inout name "data" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6650551 "deleteEntity"
	private explicit_return_type "void"
	nparams 2
	  param inout name "bdo" type class_ref 401975 // BackupDataOutput
	  param inout name "key" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6650679 "readAndVerifyEntity"
	private explicit_return_type "void"
	nparams 3
	  param inout name "bdi" type class_ref 402615 // BackupDataInput
	  param inout name "expectedKey" type class_ref 129591 // String
	  param inout name "expectedData" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6650807 "readAndVerifyDeletedEntity"
	private explicit_return_type "void"
	nparams 2
	  param inout name "bdi" type class_ref 402615 // BackupDataInput
	  param inout name "expectedKey" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 838711 "FullBackupTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2584503 // <generalisation>
	relation 2584503 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2584503 // <generalisation>
	  b parent class_ref 627895 // AndroidTestCase
      end

      attribute 2822583 "mFactory"
	private explicit_type "XmlPullParserFactory"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2822711 "mXpp"
	private explicit_type "XmlPullParser"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2584631 // mContext (<unidirectional association>)
	relation 2584631 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2584631 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      classrelation 2584759 // includeMap (<unidirectional association>)
	relation 2584759 --->
	  stereotype "Map"
	  a role_name "includeMap" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Set<String>> ${name}${value};
"
	    classrelation_ref 2584759 // includeMap (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2584887 // excludesSet (<unidirectional association>)
	relation 2584887 --->
	  stereotype "Set"
	  a role_name "excludesSet" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 2584887 // excludesSet (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 6650935 "setUp"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6651063 "testparseBackupSchemeFromXml_onlyInclude"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6651191 "testparseBackupSchemeFromXml_onlyExclude"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6651319 "testparseBackupSchemeFromXml_includeAndExclude"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6651447 "testparseBackupSchemeFromXml_lotsOfIncludesAndExcludes"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6651575 "testParseBackupSchemeFromXml_invalidXmlFails"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6651703 "testInvalidPath_doesNotBackup"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6651831 "testDoubleDotInPath_isIgnored"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6651959 "testDoubleSlashInPath_isIgnored"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 149175 "backup"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 261431 "FileBackupHelperBase"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
import java.io.FileDescriptor;
${definition}"
      associated_classes
	class_ref 401847 // FileBackupHelperBase
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 261559 "BackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
${definition}"
      associated_classes
	class_ref 402231 // BackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 261687 "AbsoluteFileBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 401719 // AbsoluteFileBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 261815 "BackupAgent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.IBackupAgent;
import android.app.QueuedWork;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.pm.ApplicationInfo;
import android.os.Binder;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.ParcelFileDescriptor;
import android.os.Process;
import android.os.RemoteException;
import android.system.ErrnoException;
import android.system.Os;
import android.system.OsConstants;
import android.system.StructStat;
import android.util.ArraySet;
import android.util.Log;
import org.xmlpull.v1.XmlPullParserException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.CountDownLatch;
${definition}"
      associated_classes
	class_ref 402359 // BackupAgent
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 261943 "BackupAgentHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 403255 // BackupAgentHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 262071 "BackupDataInput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import java.io.FileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 402615 // BackupDataInput
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 262199 "BackupDataInputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 402103 // BackupDataInputStream
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 262327 "BackupDataOutput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.ParcelFileDescriptor;
import java.io.FileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 401975 // BackupDataOutput
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 262455 "BackupHelperDispatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.FileDescriptor;
import java.io.IOException;
import java.util.Map;
import java.util.TreeMap;
${definition}"
      associated_classes
	class_ref 403383 // BackupHelperDispatcher
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 262583 "BackupManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.util.Log;
import android.util.Pair;
${definition}"
      associated_classes
	class_ref 403767 // BackupManager
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 262711 "BackupObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
${definition}"
      associated_classes
	class_ref 404151 // BackupObserver
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License"
    end

    artifact 262839 "BackupProgress"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 284471 // BackupProgress
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License"
    end

    artifact 262967 "BackupTransport"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.os.IBinder;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import com.android.internal.backup.IBackupTransport;
${definition}"
      associated_classes
	class_ref 404407 // BackupTransport
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 263095 "BlobBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import android.util.ArrayMap;
import android.util.Log;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.CRC32;
import java.util.zip.DeflaterOutputStream;
import java.util.zip.InflaterInputStream;
${definition}"
      associated_classes
	class_ref 404919 // BlobBackupHelper
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 263223 "FileBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 405047 // FileBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 263351 "FullBackup"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.res.XmlResourceParser;
import android.os.ParcelFileDescriptor;
import android.os.Process;
import android.system.ErrnoException;
import android.system.Os;
import android.text.TextUtils;
import android.util.ArrayMap;
import android.util.ArraySet;
import android.util.Log;
import com.android.internal.annotations.VisibleForTesting;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Map;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 405175 // FullBackup
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 263479 "FullBackupAgent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 405431 // FullBackupAgent
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 263607 "FullBackupDataOutput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
${definition}"
      associated_classes
	class_ref 402743 // FullBackupDataOutput
      end
    end

    artifact 263735 "RestoreDescription"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 404535 // RestoreDescription
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 263863 "RestoreObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.String;
import android.annotation.SystemApi;
import android.app.backup.RestoreSet;
${definition}"
      associated_classes
	class_ref 403895 // RestoreObserver
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 263991 "RestoreSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.app.backup.RestoreObserver;
import android.app.backup.RestoreSet;
import android.app.backup.IRestoreObserver;
import android.app.backup.IRestoreSession;
import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.os.RemoteException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 404023 // RestoreSession
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 264119 "RestoreSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 284599 // RestoreSet
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 264247 "SharedPreferencesBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.QueuedWork;
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 405687 // SharedPreferencesBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 264375 "WallpaperBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.WallpaperManager;
import android.content.Context;
import android.graphics.BitmapFactory;
import android.graphics.Point;
import android.os.Environment;
import android.os.ParcelFileDescriptor;
import android.os.UserHandle;
import android.util.Slog;
import android.view.Display;
import android.view.WindowManager;
import java.io.File;
${definition}"
      associated_classes
	class_ref 405815 // WallpaperBackupHelper
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 491575 "BackupDataTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.backup.BackupDataInput;
import android.app.backup.BackupDataOutput;
import android.content.res.AssetFileDescriptor;
import android.content.res.AssetManager;
import android.os.Bundle;
import android.os.Environment;
import android.os.ParcelFileDescriptor;
import android.test.AndroidTestCase;
import android.test.InstrumentationTestCase;
import android.util.Base64;
import android.util.Log;
import org.json.JSONObject;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.lang.Exception;
import java.nio.ByteBuffer;
${definition}"
      associated_classes
	class_ref 838583 // BackupDataTest
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 491703 "FullBackupTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.test.AndroidTestCase;
import android.util.ArrayMap;
import android.util.ArraySet;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlPullParserFactory;
import java.io.File;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.Set;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
${definition}"
      associated_classes
	class_ref 838711 // FullBackupTest
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
