class SystemAudioAutoInitiationAction
!!!32915511.java!!!	SystemAudioAutoInitiationAction(inout source : HdmiCecLocalDevice, in avrAddress : int)
        super(source);
        mAvrAddress = avrAddress;
!!!32915639.java!!!	start() : boolean
        mState = STATE_WAITING_FOR_SYSTEM_AUDIO_MODE_STATUS;

        addTimer(mState, HdmiConfig.TIMEOUT_MS);
        sendGiveSystemAudioModeStatus();
        return true;
!!!32915767.java!!!	sendGiveSystemAudioModeStatus() : void
        sendCommand(HdmiCecMessageBuilder.buildGiveSystemAudioModeStatus(getSourceAddress(),
                mAvrAddress), new SendMessageCallback() {
            @Override
            public void onSendCompleted(int error) {
                if (error != Constants.SEND_RESULT_SUCCESS) {
                    tv().setSystemAudioMode(false, true);
                    finish();
                }
            }
        });
!!!32915895.java!!!	processCommand(inout cmd : HdmiCecMessage) : boolean
        if (mState != STATE_WAITING_FOR_SYSTEM_AUDIO_MODE_STATUS
                || mAvrAddress != cmd.getSource()) {
            return false;
        }

        if (cmd.getOpcode() == Constants.MESSAGE_SYSTEM_AUDIO_MODE_STATUS) {
            handleSystemAudioModeStatusMessage(HdmiUtils.parseCommandParamSystemAudioStatus(cmd));
            return true;
        }
        return false;
!!!32916023.java!!!	handleSystemAudioModeStatusMessage(inout isSystemAudioModeOn : boolean) : void
        if (!canChangeSystemAudio()) {
            HdmiLogger.debug("Cannot change system audio mode in auto initiation action.");
            finish();
            return;
        }

        boolean systemAudioModeSetting = tv().getSystemAudioModeSetting();
        if (systemAudioModeSetting && !isSystemAudioModeOn) {
            addAndStartAction(new SystemAudioActionFromTv(tv(), mAvrAddress, systemAudioModeSetting, null));
        } else {
            tv().setSystemAudioMode(isSystemAudioModeOn, true);
        }
        finish();
!!!32916151.java!!!	handleTimerEvent(in state : int) : void
        if (mState != state) {
            return;
        }

        switch (mState) {
            case STATE_WAITING_FOR_SYSTEM_AUDIO_MODE_STATUS:
                handleSystemAudioModeStatusTimeout();
                break;
        }
!!!32916279.java!!!	handleSystemAudioModeStatusTimeout() : void
        if (tv().getSystemAudioModeSetting()) {
            if (canChangeSystemAudio()) {
                addAndStartAction(new SystemAudioActionFromTv(tv(), mAvrAddress, true, null));
            }
        } else {
            tv().setSystemAudioMode(false, true);
        }
        finish();
!!!32916407.java!!!	canChangeSystemAudio() : boolean
        return !(tv().hasAction(SystemAudioActionFromTv.class)
               || tv().hasAction(SystemAudioActionFromAvr.class));
