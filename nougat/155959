format 76
"accessibilityservice" // nougat_src::frameworks::base::core::java::android::accessibilityservice
  revision 2
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/core/java/android/accessibilityservice/"
  java_package "android.accessibilityservice"
  classview 151479 "accessibilityservice"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 299447 "AccessibilityServiceInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class describes an {@link AccessibilityService}. The system notifies an
{@link AccessibilityService} for {@link android.view.accessibility.AccessibilityEvent}s
according to the information encapsulated in this class.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about creating AccessibilityServices, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>

@attr ref android.R.styleable#AccessibilityService_accessibilityEventTypes
@attr ref android.R.styleable#AccessibilityService_accessibilityFeedbackType
@attr ref android.R.styleable#AccessibilityService_accessibilityFlags
@attr ref android.R.styleable#AccessibilityService_canRequestEnhancedWebAccessibility
@attr ref android.R.styleable#AccessibilityService_canRequestFilterKeyEvents
@attr ref android.R.styleable#AccessibilityService_canRequestTouchExplorationMode
@attr ref android.R.styleable#AccessibilityService_canRetrieveWindowContent
@attr ref android.R.styleable#AccessibilityService_description
@attr ref android.R.styleable#AccessibilityService_notificationTimeout
@attr ref android.R.styleable#AccessibilityService_packageNames
@attr ref android.R.styleable#AccessibilityService_settingsActivity

@see AccessibilityService
@see android.view.accessibility.AccessibilityEvent
@see android.view.accessibility.AccessibilityManager"
      classrelation 623415 // <realization>
	relation 623415 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 623415 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 623543 // TAG_ACCESSIBILITY_SERVICE (<unidirectional association>)
	relation 623543 --->
	  a role_name "TAG_ACCESSIBILITY_SERVICE" init_value " \"accessibility-service\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 623543 // TAG_ACCESSIBILITY_SERVICE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 582327 "CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Capability: This accessibility service can retrieve the active window content.
@see android.R.styleable#AccessibilityService_canRetrieveWindowContent
"
      end

      attribute 582455 "CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Capability: This accessibility service can request touch exploration mode in which
touched items are spoken aloud and the UI can be explored via gestures.
@see android.R.styleable#AccessibilityService_canRequestTouchExplorationMode
"
      end

      attribute 582583 "CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Capability: This accessibility service can request enhanced web accessibility
enhancements. For example, installing scripts to make app content more accessible.
@see android.R.styleable#AccessibilityService_canRequestEnhancedWebAccessibility
"
      end

      attribute 582711 "CAPABILITY_CAN_REQUEST_FILTER_KEY_EVENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Capability: This accessibility service can request to filter the key event stream.
@see android.R.styleable#AccessibilityService_canRequestFilterKeyEvents
"
      end

      attribute 582839 "CAPABILITY_CAN_CONTROL_MAGNIFICATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Capability: This accessibility service can control display magnification.
@see android.R.styleable#AccessibilityService_canControlMagnification
"
      end

      attribute 582967 "CAPABILITY_CAN_PERFORM_GESTURES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Capability: This accessibility service can perform gestures.
@see android.R.styleable#AccessibilityService_canPerformGestures
"
      end

      class 306103 "CapabilityInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 585783 "capability"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 585911 "titleResId"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 586039 "descResId"
	  const_attribute public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1447991 "CapabilityInfo"
	  public explicit_return_type ""
	  nparams 3
	    param in name "capability" explicit_type "int"
	    param in name "titleResId" explicit_type "int"
	    param in name "descResId" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 623671 // sAvailableCapabilityInfos (<unidirectional association>)
	relation 623671 --->
	  a role_name "sAvailableCapabilityInfos" init_value "
            new SparseArray<CapabilityInfo>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<CapabilityInfo> ${name}${value};
"
	    classrelation_ref 623671 // sAvailableCapabilityInfos (<unidirectional association>)
	  b parent class_ref 139575 // SparseArray
      end

      extra_member 129975 "initialization"
	
	cpp "" ""
	java "  static {
        sAvailableCapabilityInfos.put(CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT,
                new CapabilityInfo(CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT,
                        R.string.capability_title_canRetrieveWindowContent,
                        R.string.capability_desc_canRetrieveWindowContent));
        sAvailableCapabilityInfos.put(CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION,
                new CapabilityInfo(CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION,
                        R.string.capability_title_canRequestTouchExploration,
                        R.string.capability_desc_canRequestTouchExploration));
        sAvailableCapabilityInfos.put(CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY,
                new CapabilityInfo(CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY,
                        R.string.capability_title_canRequestEnhancedWebAccessibility,
                        R.string.capability_desc_canRequestEnhancedWebAccessibility));
        sAvailableCapabilityInfos.put(CAPABILITY_CAN_REQUEST_FILTER_KEY_EVENTS,
                new CapabilityInfo(CAPABILITY_CAN_REQUEST_FILTER_KEY_EVENTS,
                        R.string.capability_title_canRequestFilterKeyEvents,
                        R.string.capability_desc_canRequestFilterKeyEvents));
        sAvailableCapabilityInfos.put(CAPABILITY_CAN_CONTROL_MAGNIFICATION,
                new CapabilityInfo(CAPABILITY_CAN_CONTROL_MAGNIFICATION,
                        R.string.capability_title_canControlMagnification,
                        R.string.capability_desc_canControlMagnification));
        sAvailableCapabilityInfos.put(CAPABILITY_CAN_PERFORM_GESTURES,
                new CapabilityInfo(CAPABILITY_CAN_PERFORM_GESTURES,
                        R.string.capability_title_canPerformGestures,
                        R.string.capability_desc_canPerformGestures));
    }"
	php ""
	python ""
	idl ""
      end

      attribute 583095 "FEEDBACK_SPOKEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes spoken feedback.
"
      end

      attribute 583223 "FEEDBACK_HAPTIC"
	class_attribute const_attribute public explicit_type "int"
	init_value "  0x0000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes haptic feedback.
"
      end

      attribute 583351 "FEEDBACK_AUDIBLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes audible (not spoken) feedback.
"
      end

      attribute 583479 "FEEDBACK_VISUAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes visual feedback.
"
      end

      attribute 583607 "FEEDBACK_GENERIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes generic feedback.
"
      end

      attribute 583735 "FEEDBACK_BRAILLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes braille feedback.
"
      end

      attribute 583863 "FEEDBACK_ALL_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xFFFFFFFF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mask for all feedback types.

@see #FEEDBACK_SPOKEN
@see #FEEDBACK_HAPTIC
@see #FEEDBACK_AUDIBLE
@see #FEEDBACK_VISUAL
@see #FEEDBACK_GENERIC
@see #FEEDBACK_BRAILLE
"
      end

      attribute 583991 "DEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If an {@link AccessibilityService} is the default for a given type.
Default service is invoked only if no package specific one exists. In case of
more than one package specific service only the earlier registered is notified.
"
      end

      attribute 584119 "FLAG_INCLUDE_NOT_IMPORTANT_VIEWS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If this flag is set the system will regard views that are not important
for accessibility in addition to the ones that are important for accessibility.
That is, views that are marked as not important for accessibility via
{@link View#IMPORTANT_FOR_ACCESSIBILITY_NO} or
{@link View#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS} and views that are
marked as potentially important for accessibility via
{@link View#IMPORTANT_FOR_ACCESSIBILITY_AUTO} for which the system has determined
that are not important for accessibility, are reported while querying the window
content and also the accessibility service will receive accessibility events from
them.
<p>
<strong>Note:</strong> For accessibility services targeting API version
{@link Build.VERSION_CODES#JELLY_BEAN} or higher this flag has to be explicitly
set for the system to regard views that are not important for accessibility. For
accessibility services targeting API version lower than
{@link Build.VERSION_CODES#JELLY_BEAN} this flag is ignored and all views are
regarded for accessibility purposes.
</p>
<p>
Usually views not important for accessibility are layout managers that do not
react to user actions, do not draw any content, and do not have any special
semantics in the context of the screen content. For example, a three by three
grid can be implemented as three horizontal linear layouts and one vertical,
or three vertical linear layouts and one horizontal, or one grid layout, etc.
In this context the actual layout mangers used to achieve the grid configuration
are not important, rather it is important that there are nine evenly distributed
elements.
</p>
"
      end

      attribute 584247 "FLAG_REQUEST_TOUCH_EXPLORATION_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This flag requests that the system gets into touch exploration mode.
In this mode a single finger moving on the screen behaves as a mouse
pointer hovering over the user interface. The system will also detect
certain gestures performed on the touch screen and notify this service.
The system will enable touch exploration mode if there is at least one
accessibility service that has this flag set. Hence, clearing this
flag does not guarantee that the device will not be in touch exploration
mode since there may be another enabled service that requested it.
<p>
For accessibility services targeting API version higher than
{@link Build.VERSION_CODES#JELLY_BEAN_MR1} that want to set
this flag have to declare this capability in their meta-data by setting
the attribute {@link android.R.attr#canRequestTouchExplorationMode
canRequestTouchExplorationMode} to true, otherwise this flag will
be ignored. For how to declare the meta-data of a service refer to
{@value AccessibilityService#SERVICE_META_DATA}.
</p>
<p>
Services targeting API version equal to or lower than
{@link Build.VERSION_CODES#JELLY_BEAN_MR1} will work normally, i.e.
the first time they are run, if this flag is specified, a dialog is
shown to the user to confirm enabling explore by touch.
</p>
@see android.R.styleable#AccessibilityService_canRequestTouchExplorationMode
"
      end

      attribute 584375 "FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This flag requests from the system to enable web accessibility enhancing
extensions. Such extensions aim to provide improved accessibility support
for content presented in a {@link android.webkit.WebView}. An example of such
an extension is injecting JavaScript from a secure source. The system will enable
enhanced web accessibility if there is at least one accessibility service
that has this flag set. Hence, clearing this flag does not guarantee that the
device will not have enhanced web accessibility enabled since there may be
another enabled service that requested it.
<p>
Services that want to set this flag have to declare this capability
in their meta-data by setting the attribute {@link android.R.attr
#canRequestEnhancedWebAccessibility canRequestEnhancedWebAccessibility} to
true, otherwise this flag will be ignored. For how to declare the meta-data
of a service refer to {@value AccessibilityService#SERVICE_META_DATA}.
</p>
@see android.R.styleable#AccessibilityService_canRequestEnhancedWebAccessibility
"
      end

      attribute 584503 "FLAG_REPORT_VIEW_IDS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This flag requests that the {@link AccessibilityNodeInfo}s obtained
by an {@link AccessibilityService} contain the id of the source view.
The source view id will be a fully qualified resource name of the
form \"package:id/name\", for example \"foo.bar:id/my_list\", and it is
useful for UI test automation. This flag is not set by default.
"
      end

      attribute 584631 "FLAG_REQUEST_FILTER_KEY_EVENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This flag requests from the system to filter key events. If this flag
is set the accessibility service will receive the key events before
applications allowing it implement global shortcuts.
<p>
Services that want to set this flag have to declare this capability
in their meta-data by setting the attribute {@link android.R.attr
#canRequestFilterKeyEvents canRequestFilterKeyEvents} to true,
otherwise this flag will be ignored. For how to declare the meta-data
of a service refer to {@value AccessibilityService#SERVICE_META_DATA}.
</p>
@see android.R.styleable#AccessibilityService_canRequestFilterKeyEvents
"
      end

      attribute 584759 "FLAG_RETRIEVE_INTERACTIVE_WINDOWS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This flag indicates to the system that the accessibility service wants
to access content of all interactive windows. An interactive window is a
window that has input focus or can be touched by a sighted user when explore
by touch is not enabled. If this flag is not set your service will not receive
{@link android.view.accessibility.AccessibilityEvent#TYPE_WINDOWS_CHANGED}
events, calling AccessibilityService{@link AccessibilityService#getWindows()
AccessibilityService.getWindows()} will return an empty list, and {@link
AccessibilityNodeInfo#getWindow() AccessibilityNodeInfo.getWindow()} will
return null.
<p>
Services that want to set this flag have to declare the capability
to retrieve window content in their meta-data by setting the attribute
{@link android.R.attr#canRetrieveWindowContent canRetrieveWindowContent} to
true, otherwise this flag will be ignored. For how to declare the meta-data
of a service refer to {@value AccessibilityService#SERVICE_META_DATA}.
</p>
@see android.R.styleable#AccessibilityService_canRetrieveWindowContent
"
      end

      attribute 584887 "FLAG_FORCE_DIRECT_BOOT_AWARE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00010000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      attribute 585015 "eventTypes"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The event types an {@link AccessibilityService} is interested in.
<p>
  <strong>Can be dynamically set at runtime.</strong>
</p>
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_CLICKED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_LONG_CLICKED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_FOCUSED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_SELECTED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_TEXT_CHANGED
@see android.view.accessibility.AccessibilityEvent#TYPE_WINDOW_STATE_CHANGED
@see android.view.accessibility.AccessibilityEvent#TYPE_NOTIFICATION_STATE_CHANGED
@see android.view.accessibility.AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_START
@see android.view.accessibility.AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_END
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_HOVER_ENTER
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_HOVER_EXIT
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_SCROLLED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_TEXT_SELECTION_CHANGED
@see android.view.accessibility.AccessibilityEvent#TYPE_WINDOW_CONTENT_CHANGED
@see android.view.accessibility.AccessibilityEvent#TYPE_TOUCH_INTERACTION_START
@see android.view.accessibility.AccessibilityEvent#TYPE_TOUCH_INTERACTION_END
@see android.view.accessibility.AccessibilityEvent#TYPE_ANNOUNCEMENT
@see android.view.accessibility.AccessibilityEvent#TYPE_GESTURE_DETECTION_START
@see android.view.accessibility.AccessibilityEvent#TYPE_GESTURE_DETECTION_END
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_ACCESSIBILITY_FOCUSED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
@see android.view.accessibility.AccessibilityEvent#TYPE_WINDOWS_CHANGED
"
      end

      classrelation 623799 // packageNames (<unidirectional association>)
	relation 623799 --->
	  a role_name "packageNames" multiplicity "[]" public
	    comment "
The package names an {@link AccessibilityService} is interested in. Setting
to <code>null</code> is equivalent to all packages.
<p>
  <strong>Can be dynamically set at runtime.</strong>
</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 623799 // packageNames (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 585143 "feedbackType"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The feedback type an {@link AccessibilityService} provides.
<p>
  <strong>Can be dynamically set at runtime.</strong>
</p>
@see #FEEDBACK_AUDIBLE
@see #FEEDBACK_GENERIC
@see #FEEDBACK_HAPTIC
@see #FEEDBACK_SPOKEN
@see #FEEDBACK_VISUAL
@see #FEEDBACK_BRAILLE
"
      end

      attribute 585271 "notificationTimeout"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The timeout after the most recent event of a given type before an
{@link AccessibilityService} is notified.
<p>
  <strong>Can be dynamically set at runtime.</strong>.
</p>
<p>
<strong>Note:</strong> The event notification timeout is useful to avoid propagating
      events to the client too frequently since this is accomplished via an expensive
      interprocess call. One can think of the timeout as a criteria to determine when
      event generation has settled down.
"
      end

      attribute 585399 "flags"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This field represents a set of flags used for configuring an
{@link AccessibilityService}.
<p>
  <strong>Can be dynamically set at runtime.</strong>
</p>
@see #DEFAULT
@see #FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
@see #FLAG_REQUEST_TOUCH_EXPLORATION_MODE
@see #FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
@see #FLAG_REQUEST_FILTER_KEY_EVENTS
@see #FLAG_REPORT_VIEW_IDS
@see #FLAG_RETRIEVE_INTERACTIVE_WINDOWS
"
      end

      classrelation 623927 // mId (<unidirectional association>)
	relation 623927 --->
	  a role_name "mId" private
	    comment "
The unique string Id to identify the accessibility service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 623927 // mId (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 624055 // mResolveInfo (<unidirectional association>)
	relation 624055 --->
	  a role_name "mResolveInfo" private
	    comment "
The Service that implements this accessibility service component.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 624055 // mResolveInfo (<unidirectional association>)
	  b parent class_ref 306231 // ResolveInfo
      end

      classrelation 624183 // mSettingsActivityName (<unidirectional association>)
	relation 624183 --->
	  a role_name "mSettingsActivityName" private
	    comment "
The accessibility service setting activity's name, used by the system
settings to launch the setting activity of this accessibility service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 624183 // mSettingsActivityName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 585527 "mCapabilities"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bit mask with capabilities of this service.
"
      end

      attribute 585655 "mDescriptionResId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Resource id of the description of the accessibility service.
"
      end

      classrelation 624311 // mNonLocalizedDescription (<unidirectional association>)
	relation 624311 --->
	  a role_name "mNonLocalizedDescription" private
	    comment "
Non localized description of the accessibility service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 624311 // mNonLocalizedDescription (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 1444407 "AccessibilityServiceInfo"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance."
      end

      operation 1444535 "AccessibilityServiceInfo"
	public explicit_return_type ""
	nparams 2
	  param inout name "resolveInfo" type class_ref 306231 // ResolveInfo
	  param inout name "context" type class_ref 128567 // Context
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance.

@param resolveInfo The service resolve info.
@param context Context for accessing resources.
@throws XmlPullParserException If a XML parsing error occurs.
@throws IOException If a XML parsing error occurs.

@hide"
      end

      operation 1444663 "updateDynamicallyConfigurableProperties"
	public explicit_return_type "void"
	nparams 1
	  param inout name "other" type class_ref 299447 // AccessibilityServiceInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the properties that an AccessibilitySerivice can change dynamically.

@param other The info from which to update the properties.

@hide"
      end

      operation 1444791 "setComponentName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "component" type class_ref 132279 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 1444919 "getId"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The accessibility service id.
<p>
  <strong>Generated by the system.</strong>
</p>
@return The id."
      end

      operation 1445047 "getResolveInfo"
	public return_type class_ref 306231 // ResolveInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The service {@link ResolveInfo}.
<p>
  <strong>Generated by the system.</strong>
</p>
@return The info."
      end

      operation 1445175 "getSettingsActivityName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The settings activity name.
<p>
   <strong>Statically set from
   {@link AccessibilityService#SERVICE_META_DATA meta-data}.</strong>
</p>
@return The settings activity name."
      end

      operation 1445303 "getCanRetrieveWindowContent"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether this service can retrieve the current window's content.
<p>
   <strong>Statically set from
   {@link AccessibilityService#SERVICE_META_DATA meta-data}.</strong>
</p>
@return True if window content can be retrieved.

@deprecated Use {@link #getCapabilities()}."
      end

      operation 1445431 "getCapabilities"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the bit mask of capabilities this accessibility service has such as
being able to retrieve the active window content, etc.

@return The capability bit mask.

@see #CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
@see #CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
@see #CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
@see #CAPABILITY_FILTER_KEY_EVENTS
@see #CAPABILITY_CAN_CONTROL_MAGNIFICATION
@see #CAPABILITY_CAN_PERFORM_GESTURES"
      end

      operation 1445559 "setCapabilities"
	public explicit_return_type "void"
	nparams 1
	  param in name "capabilities" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the bit mask of capabilities this accessibility service has such as
being able to retrieve the active window content, etc.

@param capabilities The capability bit mask.

@see #CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
@see #CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
@see #CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
@see #CAPABILITY_FILTER_KEY_EVENTS
@see #CAPABILITY_CAN_CONTROL_MAGNIFICATION
@see #CAPABILITY_CAN_PERFORM_GESTURES

@hide"
      end

      operation 1445687 "getDescription"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the non-localized description of the accessibility service.
<p>
   <strong>Statically set from
   {@link AccessibilityService#SERVICE_META_DATA meta-data}.</strong>
</p>
@return The description.

@deprecated Use {@link #loadDescription(PackageManager)}."
      end

      operation 1445815 "loadDescription"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "packageManager" type class_ref 129079 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The localized description of the accessibility service.
<p>
   <strong>Statically set from
   {@link AccessibilityService#SERVICE_META_DATA meta-data}.</strong>
</p>
@return The localized description."
      end

      operation 1445943 "isDirectBootAware"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 1446071 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 1446199 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "flagz" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1446327 "initFromParcel"
	private explicit_return_type "void"
	nparams 1
	  param inout name "parcel" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1446455 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1446583 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1446711 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1446839 "appendFeedbackTypes"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "stringBuilder" explicit_type "StringBuilder"
	  param in name "feedbackTypes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1446967 "appendPackageNames"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "stringBuilder" explicit_type "StringBuilder"
	  param inout name "packageNames" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1447095 "appendEventTypes"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "stringBuilder" explicit_type "StringBuilder"
	  param in name "eventTypes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1447223 "appendFlags"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "stringBuilder" explicit_type "StringBuilder"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1447351 "appendCapabilities"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "stringBuilder" explicit_type "StringBuilder"
	  param in name "capabilities" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1447479 "feedbackTypeToString"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "feedbackType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of a feedback type. For example,
{@link #FEEDBACK_SPOKEN} is represented by the string FEEDBACK_SPOKEN.

@param feedbackType The feedback type.
@return The string representation."
      end

      operation 1447607 "flagToString"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "flag" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of a flag. For example,
{@link #DEFAULT} is represented by the string DEFAULT.

@param flag The flag.
@return The string representation."
      end

      operation 1447735 "capabilityToString"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "capability" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of a capability. For example,
{@link #CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT} is represented
by the string CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT.

@param capability The capability.
@return The string representation."
      end

      operation 1447863 "getCapabilityInfos"
	public return_type class_ref 306103 // CapabilityInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
@return The list of {@link CapabilityInfo} objects."
      end

      classrelation 624439 // CREATOR (<unidirectional association>)
	relation 624439 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<AccessibilityServiceInfo>() {
        public AccessibilityServiceInfo createFromParcel(Parcel parcel) {
            AccessibilityServiceInfo info = new AccessibilityServiceInfo();
            info.initFromParcel(parcel);
            return info;
        }

        public AccessibilityServiceInfo[] newArray(int size) {
            return new AccessibilityServiceInfo[size];
        }
    }" class_relation const_relation public
	    comment "
@see Parcelable.Creator

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AccessibilityServiceInfo> ${name}${value};
"
	    classrelation_ref 624439 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end

    class 300087 "AccessibilityService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Accessibility services are intended to assist users with disabilities in using
Android devices and apps. They run in the background and receive callbacks by the system
when {@link AccessibilityEvent}s are fired. Such events denote some state transition
in the user interface, for example, the focus has changed, a button has been clicked,
etc. Such a service can optionally request the capability for querying the content
of the active window. Development of an accessibility service requires extending this
class and implementing its abstract methods.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about creating AccessibilityServices, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>

<h3>Lifecycle</h3>
<p>
The lifecycle of an accessibility service is managed exclusively by the system and
follows the established service life cycle. Starting an accessibility service is triggered
exclusively by the user explicitly turning the service on in device settings. After the system
binds to a service, it calls {@link AccessibilityService#onServiceConnected()}. This method can
be overriden by clients that want to perform post binding setup.
</p>
<p>
An accessibility service stops either when the user turns it off in device settings or when
it calls {@link AccessibilityService#disableSelf()}.
</p>
<h3>Declaration</h3>
<p>
An accessibility is declared as any other service in an AndroidManifest.xml, but it
must do two things:
<ul>
    <ol>
        Specify that it handles the \"android.accessibilityservice.AccessibilityService\"
        {@link android.content.Intent}.
    </ol>
    <ol>
        Request the {@link android.Manifest.permission#BIND_ACCESSIBILITY_SERVICE} permission to
        ensure that only the system can bind to it.
    </ol>
</ul>
If either of these items is missing, the system will ignore the accessibility service.
Following is an example declaration:
</p>
<pre> &lt;service android:name=\".MyAccessibilityService\"
        android:permission=\"android.permission.BIND_ACCESSIBILITY_SERVICE\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.accessibilityservice.AccessibilityService\" /&gt;
    &lt;/intent-filter&gt;
    . . .
&lt;/service&gt;</pre>
<h3>Configuration</h3>
<p>
An accessibility service can be configured to receive specific types of accessibility events,
listen only to specific packages, get events from each type only once in a given time frame,
retrieve window content, specify a settings activity, etc.
</p>
<p>
There are two approaches for configuring an accessibility service:
</p>
<ul>
<li>
Providing a {@link #SERVICE_META_DATA meta-data} entry in the manifest when declaring
the service. A service declaration with a meta-data tag is presented below:
<pre> &lt;service android:name=\".MyAccessibilityService\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.accessibilityservice.AccessibilityService\" /&gt;
    &lt;/intent-filter&gt;
    &lt;meta-data android:name=\"android.accessibilityservice\" android:resource=\"@xml/accessibilityservice\" /&gt;
&lt;/service&gt;</pre>
<p class=\"note\">
<strong>Note:</strong> This approach enables setting all properties.
</p>
<p>
For more details refer to {@link #SERVICE_META_DATA} and
<code>&lt;{@link android.R.styleable#AccessibilityService accessibility-service}&gt;</code>.
</p>
</li>
<li>
Calling {@link AccessibilityService#setServiceInfo(AccessibilityServiceInfo)}. Note
that this method can be called any time to dynamically change the service configuration.
<p class=\"note\">
<strong>Note:</strong> This approach enables setting only dynamically configurable properties:
{@link AccessibilityServiceInfo#eventTypes},
{@link AccessibilityServiceInfo#feedbackType},
{@link AccessibilityServiceInfo#flags},
{@link AccessibilityServiceInfo#notificationTimeout},
{@link AccessibilityServiceInfo#packageNames}
</p>
<p>
For more details refer to {@link AccessibilityServiceInfo}.
</p>
</li>
</ul>
<h3>Retrieving window content</h3>
<p>
A service can specify in its declaration that it can retrieve window
content which is represented as a tree of {@link AccessibilityWindowInfo} and
{@link AccessibilityNodeInfo} objects. Note that
declaring this capability requires that the service declares its configuration via
an XML resource referenced by {@link #SERVICE_META_DATA}.
</p>
<p>
Window content may be retrieved with
{@link AccessibilityEvent#getSource() AccessibilityEvent.getSource()},
{@link AccessibilityService#findFocus(int)},
{@link AccessibilityService#getWindows()}, or
{@link AccessibilityService#getRootInActiveWindow()}.
</p>
<p class=\"note\">
<strong>Note</strong> An accessibility service may have requested to be notified for
a subset of the event types, and thus be unaware when the node hierarchy has changed. It is also
possible for a node to contain outdated information because the window content may change at any
time.
</p>
<h3>Notification strategy</h3>
<p>
All accessibility services are notified of all events they have requested, regardless of their
feedback type.
</p>
<p class=\"note\">
<strong>Note:</strong> The event notification timeout is useful to avoid propagating
events to the client too frequently since this is accomplished via an expensive
interprocess call. One can think of the timeout as a criteria to determine when
event generation has settled down.</p>
<h3>Event types</h3>
<ul>
<li>{@link AccessibilityEvent#TYPE_VIEW_CLICKED}</li>
<li>{@link AccessibilityEvent#TYPE_VIEW_LONG_CLICKED}</li>
<li>{@link AccessibilityEvent#TYPE_VIEW_FOCUSED}</li>
<li>{@link AccessibilityEvent#TYPE_VIEW_SELECTED}</li>
<li>{@link AccessibilityEvent#TYPE_VIEW_TEXT_CHANGED}</li>
<li>{@link AccessibilityEvent#TYPE_WINDOW_STATE_CHANGED}</li>
<li>{@link AccessibilityEvent#TYPE_NOTIFICATION_STATE_CHANGED}</li>
<li>{@link AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_START}</li>
<li>{@link AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_END}</li>
<li>{@link AccessibilityEvent#TYPE_VIEW_HOVER_ENTER}</li>
<li>{@link AccessibilityEvent#TYPE_VIEW_HOVER_EXIT}</li>
<li>{@link AccessibilityEvent#TYPE_VIEW_SCROLLED}</li>
<li>{@link AccessibilityEvent#TYPE_VIEW_TEXT_SELECTION_CHANGED}</li>
<li>{@link AccessibilityEvent#TYPE_WINDOW_CONTENT_CHANGED}</li>
<li>{@link AccessibilityEvent#TYPE_ANNOUNCEMENT}</li>
<li>{@link AccessibilityEvent#TYPE_GESTURE_DETECTION_START}</li>
<li>{@link AccessibilityEvent#TYPE_GESTURE_DETECTION_END}</li>
<li>{@link AccessibilityEvent#TYPE_TOUCH_INTERACTION_START}</li>
<li>{@link AccessibilityEvent#TYPE_TOUCH_INTERACTION_END}</li>
<li>{@link AccessibilityEvent#TYPE_VIEW_ACCESSIBILITY_FOCUSED}</li>
<li>{@link AccessibilityEvent#TYPE_WINDOWS_CHANGED}</li>
<li>{@link AccessibilityEvent#TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED}</li>
</ul>
<h3>Feedback types</h3>
<ul>
<li>{@link AccessibilityServiceInfo#FEEDBACK_AUDIBLE}</li>
<li>{@link AccessibilityServiceInfo#FEEDBACK_HAPTIC}</li>
<li>{@link AccessibilityServiceInfo#FEEDBACK_AUDIBLE}</li>
<li>{@link AccessibilityServiceInfo#FEEDBACK_VISUAL}</li>
<li>{@link AccessibilityServiceInfo#FEEDBACK_GENERIC}</li>
<li>{@link AccessibilityServiceInfo#FEEDBACK_BRAILLE}</li>
</ul>
@see AccessibilityEvent
@see AccessibilityServiceInfo
@see android.view.accessibility.AccessibilityManager"
      class 300215 "IAccessibilityServiceClientWrapper"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 613815 // <generalisation>
	  relation 613815 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 613815 // <generalisation>
	    b parent class_ref 302135 // Stub
	end

	attribute 570423 "DO_INIT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 570551 "DO_ON_INTERRUPT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 570679 "DO_ON_ACCESSIBILITY_EVENT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 570807 "DO_ON_GESTURE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 570935 "DO_CLEAR_ACCESSIBILITY_CACHE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 5"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 571063 "DO_ON_KEY_EVENT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 6"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 571191 "DO_ON_MAGNIFICATION_CHANGED"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 7"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 571319 "DO_ON_SOFT_KEYBOARD_SHOW_MODE_CHANGED"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 8"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 571447 "DO_GESTURE_COMPLETE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 9"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 614711 // mCallback (<unidirectional association>)
	  relation 614711 --->
	    a role_name "mCallback" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 614711 // mCallback (<unidirectional association>)
	    b parent class_ref 300983 // Callbacks
	end

	attribute 571575 "mConnectionId"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1399991 "IAccessibilityServiceClientWrapper"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "context" type class_ref 128567 // Context
	    param inout name "looper" type class_ref 129335 // Looper
	    param inout name "callback" type class_ref 300983 // Callbacks
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400119 "init"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "connection" explicit_type "IAccessibilityServiceConnection"
	    param in name "connectionId" explicit_type "int"
	    param inout name "windowToken" type class_ref 132919 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400247 "onInterrupt"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400375 "onAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400503 "onGesture"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "gestureId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400631 "clearAccessibilityCache"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1400759 "onKeyEvent"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "event" type class_ref 137015 // KeyEvent
	    param in name "sequence" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1400887 "onMagnificationChanged"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "region" type class_ref 136119 // Region
	    param in name "scale" explicit_type "float"
	    param in name "centerX" explicit_type "float"
	    param in name "centerY" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1401015 "onSoftKeyboardShowModeChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "showMode" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1401143 "onPerformGestureResult"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "sequence" explicit_type "int"
	    param inout name "successfully" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1401271 "executeMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "message" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 611639 // <generalisation>
	relation 611639 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 611639 // <generalisation>
	  b parent class_ref 300343 // Service
      end

      attribute 566967 "GESTURE_SWIPE_UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe up gesture on the touch screen.
"
      end

      attribute 567095 "GESTURE_SWIPE_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe down gesture on the touch screen.
"
      end

      attribute 567223 "GESTURE_SWIPE_LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe left gesture on the touch screen.
"
      end

      attribute 567351 "GESTURE_SWIPE_RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe right gesture on the touch screen.
"
      end

      attribute 567479 "GESTURE_SWIPE_LEFT_AND_RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe left and right gesture on the touch screen.
"
      end

      attribute 567607 "GESTURE_SWIPE_RIGHT_AND_LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe right and left gesture on the touch screen.
"
      end

      attribute 567735 "GESTURE_SWIPE_UP_AND_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe up and down gesture on the touch screen.
"
      end

      attribute 567863 "GESTURE_SWIPE_DOWN_AND_UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe down and up gesture on the touch screen.
"
      end

      attribute 567991 "GESTURE_SWIPE_LEFT_AND_UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a left and up gesture on the touch screen.
"
      end

      attribute 568119 "GESTURE_SWIPE_LEFT_AND_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a left and down gesture on the touch screen.
"
      end

      attribute 568247 "GESTURE_SWIPE_RIGHT_AND_UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a right and up gesture on the touch screen.
"
      end

      attribute 568375 "GESTURE_SWIPE_RIGHT_AND_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a right and down gesture on the touch screen.
"
      end

      attribute 568503 "GESTURE_SWIPE_UP_AND_LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed an up and left gesture on the touch screen.
"
      end

      attribute 568631 "GESTURE_SWIPE_UP_AND_RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed an up and right gesture on the touch screen.
"
      end

      attribute 568759 "GESTURE_SWIPE_DOWN_AND_LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed an down and left gesture on the touch screen.
"
      end

      attribute 568887 "GESTURE_SWIPE_DOWN_AND_RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed an down and right gesture on the touch screen.
"
      end

      classrelation 611767 // SERVICE_INTERFACE (<unidirectional association>)
	relation 611767 --->
	  a role_name "SERVICE_INTERFACE" init_value "
        \"android.accessibilityservice.AccessibilityService\"" class_relation const_relation public
	    comment "
The {@link Intent} that must be declared as handled by the service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 611767 // SERVICE_INTERFACE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 611895 // SERVICE_META_DATA (<unidirectional association>)
	relation 611895 --->
	  a role_name "SERVICE_META_DATA" init_value " \"android.accessibilityservice\"" class_relation const_relation public
	    comment "
Name under which an AccessibilityService component publishes information
about itself. This meta-data must reference an XML resource containing an
<code>&lt;{@link android.R.styleable#AccessibilityService accessibility-service}&gt;</code>
tag. This is a a sample XML file configuring an accessibility service:
<pre> &lt;accessibility-service
    android:accessibilityEventTypes=\"typeViewClicked|typeViewFocused\"
    android:packageNames=\"foo.bar, foo.baz\"
    android:accessibilityFeedbackType=\"feedbackSpoken\"
    android:notificationTimeout=\"100\"
    android:accessibilityFlags=\"flagDefault\"
    android:settingsActivity=\"foo.bar.TestBackActivity\"
    android:canRetrieveWindowContent=\"true\"
    android:canRequestTouchExplorationMode=\"true\"
    . . .
/&gt;</pre>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 611895 // SERVICE_META_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 569015 "GLOBAL_ACTION_BACK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to go back.
"
      end

      attribute 569143 "GLOBAL_ACTION_HOME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to go home.
"
      end

      attribute 569271 "GLOBAL_ACTION_RECENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to toggle showing the overview of recent apps
"
      end

      attribute 569399 "GLOBAL_ACTION_NOTIFICATIONS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to open the notifications.
"
      end

      attribute 569527 "GLOBAL_ACTION_QUICK_SETTINGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to open the quick settings.
"
      end

      attribute 569655 "GLOBAL_ACTION_POWER_DIALOG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to open the power long-press dialog.
"
      end

      attribute 569783 "GLOBAL_ACTION_TOGGLE_SPLIT_SCREEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to toggle docking the current app's window
"
      end

      classrelation 612023 // LOG_TAG (<unidirectional association>)
	relation 612023 --->
	  a role_name "LOG_TAG" init_value " \"AccessibilityService\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 612023 // LOG_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      class 300983 "Callbacks"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1388727 "onAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1388855 "onInterrupt"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1388983 "onServiceConnected"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1389111 "init"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "connectionId" explicit_type "int"
	    param inout name "windowToken" type class_ref 132919 // IBinder
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1389239 "onGesture"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "gestureId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1389367 "onKeyEvent"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "event" type class_ref 137015 // KeyEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1389495 "onMagnificationChanged"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "region" type class_ref 136119 // Region
	    param in name "scale" explicit_type "float"
	    param in name "centerX" explicit_type "float"
	    param in name "centerY" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1389623 "onSoftKeyboardShowModeChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "showMode" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1389751 "onPerformGestureResult"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "sequence" explicit_type "int"
	    param inout name "completedSuccessfully" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 301111 "SoftKeyboardShowMode"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef({SHOW_MODE_AUTO, SHOW_MODE_HIDDEN})
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      attribute 569911 "SHOW_MODE_AUTO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 570039 "SHOW_MODE_HIDDEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 570167 "mConnectionId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 612151 // mInfo (<unidirectional association>)
	relation 612151 --->
	  a role_name "mInfo" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 612151 // mInfo (<unidirectional association>)
	  b parent class_ref 299447 // AccessibilityServiceInfo
      end

      classrelation 612279 // mWindowToken (<unidirectional association>)
	relation 612279 --->
	  a role_name "mWindowToken" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 612279 // mWindowToken (<unidirectional association>)
	  b parent class_ref 132919 // IBinder
      end

      classrelation 612407 // mWindowManager (<unidirectional association>)
	relation 612407 --->
	  a role_name "mWindowManager" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 612407 // mWindowManager (<unidirectional association>)
	  b parent class_ref 154039 // WindowManager
      end

      class 301239 "MagnificationController"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 613047 // mService (<unidirectional association>)
	  relation 613047 --->
	    a role_name "mService" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 613047 // mService (<unidirectional association>)
	    b parent class_ref 300087 // AccessibilityService
	end

	class 301879 "OnMagnificationChangedListener"
	  visibility public stereotype "interface"
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  operation 1393335 "onMagnificationChanged"
	    public explicit_return_type "void"
	    nparams 5
	      param inout name "controller" type class_ref 301239 // MagnificationController
	      param inout name "region" type class_ref 136119 // Region
	      param in name "scale" explicit_type "float"
	      param in name "centerX" explicit_type "float"
	      param in name "centerY" explicit_type "float"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Called when the magnified region, scale, or center changes.

@param controller the magnification controller
@param region the magnification region
@param scale the new scale
@param centerX the new X coordinate, in unscaled coordinates, around which
magnification is focused
@param centerY the new Y coordinate, in unscaled coordinates, around which
magnification is focused"
	  end
	end

	classrelation 613175 // mListeners (<unidirectional association>)
	  relation 613175 --->
	    a role_name "mListeners" private
	      comment "
Map of listeners to their handlers. Lazily created when adding the
first magnification listener.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<OnMagnificationChangedListener, Handler> ${name}${value};
"
	      classrelation_ref 613175 // mListeners (<unidirectional association>)
	    b parent class_ref 156343 // ArrayMap
	end

	classrelation 613303 // mLock (<unidirectional association>)
	  relation 613303 --->
	    a role_name "mLock" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 613303 // mLock (<unidirectional association>)
	    b parent class_ref 132663 // Object
	end

	operation 1391543 "MagnificationController"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "service" type class_ref 300087 // AccessibilityService
	    param inout name "lock" type class_ref 132663 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1391671 "onServiceConnected"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the service is connected."
	end

	operation 1391799 "addListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 301879 // OnMagnificationChangedListener
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds the specified change listener to the list of magnification
change listeners. The callback will occur on the service's main
thread.

@param listener the listener to add, must be non-{@code null}"
	end

	operation 1391927 "addListener"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "listener" type class_ref 301879 // OnMagnificationChangedListener
	    param inout name "handler" type class_ref 132023 // Handler
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds the specified change listener to the list of magnification
change listeners. The callback will occur on the specified
{@link Handler}'s thread, or on the service's main thread if the
handler is {@code null}.

@param listener the listener to add, must be non-null
@param handler the handler on which the callback should execute, or
       {@code null} to execute on the service's main thread"
	end

	operation 1392055 "removeListener"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "listener" type class_ref 301879 // OnMagnificationChangedListener
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes all instances of the specified change listener from the list
of magnification change listeners.

@param listener the listener to remove, must be non-null
@return {@code true} if at least one instance of the listener was
        removed"
	end

	operation 1392183 "setMagnificationCallbackEnabled"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "enabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1392311 "dispatchMagnificationChanged"
	  package explicit_return_type "void"
	  nparams 4
	    param in name "region" type class_ref 136119 // Region
	    param in name "scale" explicit_type "float"
	    param in name "centerX" explicit_type "float"
	    param in name "centerY" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Dispatches magnification changes to any registered listeners. This
should be called on the service's main thread."
	end

	operation 1392439 "getScale"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the current magnification scale.
<p>
<strong>Note:</strong> If the service is not yet connected (e.g.
{@link AccessibilityService#onServiceConnected()} has not yet been
called) or the service has been disconnected, this method will
return a default value of {@code 1.0f}.

@return the current magnification scale"
	end

	operation 1392567 "getCenterX"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the unscaled screen-relative X coordinate of the focal
center of the magnified region. This is the point around which
zooming occurs and is guaranteed to lie within the magnified
region.
<p>
<strong>Note:</strong> If the service is not yet connected (e.g.
{@link AccessibilityService#onServiceConnected()} has not yet been
called) or the service has been disconnected, this method will
return a default value of {@code 0.0f}.

@return the unscaled screen-relative X coordinate of the center of
        the magnified region"
	end

	operation 1392695 "getCenterY"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the unscaled screen-relative Y coordinate of the focal
center of the magnified region. This is the point around which
zooming occurs and is guaranteed to lie within the magnified
region.
<p>
<strong>Note:</strong> If the service is not yet connected (e.g.
{@link AccessibilityService#onServiceConnected()} has not yet been
called) or the service has been disconnected, this method will
return a default value of {@code 0.0f}.

@return the unscaled screen-relative Y coordinate of the center of
        the magnified region"
	end

	operation 1392823 "getMagnificationRegion"
	  public return_type class_ref 136119 // Region
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@NonNull
"
	  
	  
	  
	  comment "Returns the region of the screen currently active for magnification. Changes to
magnification scale and center only affect this portion of the screen. The rest of the
screen, for example input methods, cannot be magnified. This region is relative to the
unscaled screen and is independent of the scale and center point.
<p>
The returned region will be empty if magnification is not active. Magnification is active
if magnification gestures are enabled or if a service is running that can control
magnification.
<p>
<strong>Note:</strong> If the service is not yet connected (e.g.
{@link AccessibilityService#onServiceConnected()} has not yet been
called) or the service has been disconnected, this method will
return an empty region.

@return the region of the screen currently active for magnification, or an empty region
if magnification is not active."
	end

	operation 1392951 "reset"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "animate" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Resets magnification scale and center to their default (e.g. no
magnification) values.
<p>
<strong>Note:</strong> If the service is not yet connected (e.g.
{@link AccessibilityService#onServiceConnected()} has not yet been
called) or the service has been disconnected, this method will have
no effect and return {@code false}.

@param animate {@code true} to animate from the current scale and
               center or {@code false} to reset the scale and center
               immediately
@return {@code true} on success, {@code false} on failure"
	end

	operation 1393079 "setScale"
	  public explicit_return_type "boolean"
	  nparams 2
	    param in name "scale" explicit_type "float"
	    param inout name "animate" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the magnification scale.
<p>
<strong>Note:</strong> If the service is not yet connected (e.g.
{@link AccessibilityService#onServiceConnected()} has not yet been
called) or the service has been disconnected, this method will have
no effect and return {@code false}.

@param scale the magnification scale to set, must be >= 1 and <= 5
@param animate {@code true} to animate from the current scale or
               {@code false} to set the scale immediately
@return {@code true} on success, {@code false} on failure"
	end

	operation 1393207 "setCenter"
	  public explicit_return_type "boolean"
	  nparams 3
	    param in name "centerX" explicit_type "float"
	    param in name "centerY" explicit_type "float"
	    param inout name "animate" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the center of the magnified viewport.
<p>
<strong>Note:</strong> If the service is not yet connected (e.g.
{@link AccessibilityService#onServiceConnected()} has not yet been
called) or the service has been disconnected, this method will have
no effect and return {@code false}.

@param centerX the unscaled screen-relative X coordinate on which to
               center the viewport
@param centerY the unscaled screen-relative Y coordinate on which to
               center the viewport
@param animate {@code true} to animate from the current viewport
               center or {@code false} to set the center immediately
@return {@code true} on success, {@code false} on failure"
	end
      end

      classrelation 612535 // mMagnificationController (<unidirectional association>)
	relation 612535 --->
	  a role_name "mMagnificationController" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 612535 // mMagnificationController (<unidirectional association>)
	  b parent class_ref 301239 // MagnificationController
      end

      class 301367 "SoftKeyboardController"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 613431 // mService (<unidirectional association>)
	  relation 613431 --->
	    a role_name "mService" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 613431 // mService (<unidirectional association>)
	    b parent class_ref 300087 // AccessibilityService
	end

	class 302007 "OnShowModeChangedListener"
	  visibility public stereotype "interface"
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  operation 1394871 "onShowModeChanged"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "controller" type class_ref 301367 // SoftKeyboardController
	      param in name "showMode" explicit_type "int"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @SoftKeyboardShowMode ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	    comment "Called when the soft keyboard behavior changes. The default show mode is
{@code SHOW_MODE_AUTO}, where the soft keyboard is shown when a text input field is
focused. An AccessibilityService can also request the show mode
{@code SHOW_MODE_HIDDEN}, where the soft keyboard is never shown.

@param controller the soft keyboard controller
@param showMode the current soft keyboard show mode"
	  end
	end

	classrelation 613559 // mListeners (<unidirectional association>)
	  relation 613559 --->
	    a role_name "mListeners" private
	      comment "
Map of listeners to their handlers. Lazily created when adding the first
soft keyboard change listener.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<OnShowModeChangedListener, Handler> ${name}${value};
"
	      classrelation_ref 613559 // mListeners (<unidirectional association>)
	    b parent class_ref 156343 // ArrayMap
	end

	classrelation 613687 // mLock (<unidirectional association>)
	  relation 613687 --->
	    a role_name "mLock" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 613687 // mLock (<unidirectional association>)
	    b parent class_ref 132663 // Object
	end

	operation 1393719 "SoftKeyboardController"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "service" type class_ref 300087 // AccessibilityService
	    param inout name "lock" type class_ref 132663 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1393847 "onServiceConnected"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the service is connected."
	end

	operation 1393975 "addOnShowModeChangedListener"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "listener" type class_ref 302007 // OnShowModeChangedListener
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds the specified change listener to the list of show mode change listeners. The
callback will occur on the service's main thread. Listener is not called on registration."
	end

	operation 1394103 "addOnShowModeChangedListener"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "listener" type class_ref 302007 // OnShowModeChangedListener
	    param inout name "handler" type class_ref 132023 // Handler
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds the specified change listener to the list of soft keyboard show mode change
listeners. The callback will occur on the specified {@link Handler}'s thread, or on the
services's main thread if the handler is {@code null}.

@param listener the listener to add, must be non-null
@param handler the handler on which to callback should execute, or {@code null} to
       execute on the service's main thread"
	end

	operation 1394231 "removeOnShowModeChangedListener"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "listener" type class_ref 302007 // OnShowModeChangedListener
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes all instances of the specified change listener from the list of magnification
change listeners.

@param listener the listener to remove, must be non-null
@return {@code true} if at least one instance of the listener was removed"
	end

	operation 1394359 "setSoftKeyboardCallbackEnabled"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "enabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1394487 "dispatchSoftKeyboardShowModeChanged"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "showMode" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Dispatches the soft keyboard show mode change to any registered listeners. This should
be called on the service's main thread."
	end

	operation 1394615 "getShowMode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SoftKeyboardShowMode
"
	  
	  
	  
	  comment "Returns the show mode of the soft keyboard. The default show mode is
{@code SHOW_MODE_AUTO}, where the soft keyboard is shown when a text input field is
focused. An AccessibilityService can also request the show mode
{@code SHOW_MODE_HIDDEN}, where the soft keyboard is never shown.

@return the current soft keyboard show mode"
	end

	operation 1394743 "setShowMode"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "showMode" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@SoftKeyboardShowMode ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the soft keyboard show mode. The default show mode is
{@code SHOW_MODE_AUTO}, where the soft keyboard is shown when a text input field is
focused. An AccessibilityService can also request the show mode
{@code SHOW_MODE_HIDDEN}, where the soft keyboard is never shown. The
The lastto this method will be honored, regardless of any previous calls (including those
made by other AccessibilityServices).
<p>
<strong>Note:</strong> If the service is not yet conected (e.g.
{@link AccessibilityService#onServiceConnected()} has not yet been called) or the
service has been disconnected, this method will hav no effect and return {@code false}.

@param showMode the new show mode for the soft keyboard
@return {@code true} on success"
	end
      end

      classrelation 612663 // mSoftKeyboardController (<unidirectional association>)
	relation 612663 --->
	  a role_name "mSoftKeyboardController" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 612663 // mSoftKeyboardController (<unidirectional association>)
	  b parent class_ref 301367 // SoftKeyboardController
      end

      attribute 570295 "mGestureStatusCallbackSequence"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 301495 "GestureResultCallbackInfo"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 614839 // gestureDescription (<unidirectional association>)
	  relation 614839 --->
	    a role_name "gestureDescription" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 614839 // gestureDescription (<unidirectional association>)
	    b parent class_ref 301623 // GestureDescription
	end

	classrelation 614967 // callback (<unidirectional association>)
	  relation 614967 --->
	    a role_name "callback" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 614967 // callback (<unidirectional association>)
	    b parent class_ref 301751 // GestureResultCallback
	end

	classrelation 615095 // handler (<unidirectional association>)
	  relation 615095 --->
	    a role_name "handler" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 615095 // handler (<unidirectional association>)
	    b parent class_ref 132023 // Handler
	end

	operation 1401655 "GestureResultCallbackInfo"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "gestureDescription" type class_ref 301623 // GestureDescription
	    param inout name "callback" type class_ref 301751 // GestureResultCallback
	    param inout name "handler" type class_ref 132023 // Handler
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 612791 // mGestureStatusCallbackInfos (<unidirectional association>)
	relation 612791 --->
	  a role_name "mGestureStatusCallbackInfos" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<GestureResultCallbackInfo> ${name}${value};
"
	    classrelation_ref 612791 // mGestureStatusCallbackInfos (<unidirectional association>)
	  b parent class_ref 139575 // SparseArray
      end

      classrelation 612919 // mLock (<unidirectional association>)
	relation 612919 --->
	  a role_name "mLock" init_value " new Object()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 612919 // mLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      operation 1389879 "onAccessibilityEvent"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 138679 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback for {@link android.view.accessibility.AccessibilityEvent}s.

@param event The new event. This event is owned by the caller and cannot be used after
this method returns. Services wishing to use the event after this method returns should
make a copy."
      end

      operation 1390007 "onInterrupt"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback for interrupting the accessibility feedback."
      end

      operation 1390135 "dispatchServiceConnected"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatches service connection to internal components first, then the
client code."
      end

      operation 1390263 "onServiceConnected"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is a part of the {@link AccessibilityService} lifecycle and is
called after the system has successfully bound to the service. If is
convenient to use this method for setting the {@link AccessibilityServiceInfo}.

@see AccessibilityServiceInfo
@see #setServiceInfo(AccessibilityServiceInfo)"
      end

      operation 1390391 "onGesture"
	protected explicit_return_type "boolean"
	nparams 1
	  param in name "gestureId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the system when the user performs a specific gesture on the
touch screen.

<strong>Note:</strong> To receive gestures an accessibility service must
request that the device is in touch exploration mode by setting the
{@link android.accessibilityservice.AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE}
flag.

@param gestureId The unique id of the performed gesture.

@return Whether the gesture was handled.

@see #GESTURE_SWIPE_UP
@see #GESTURE_SWIPE_UP_AND_LEFT
@see #GESTURE_SWIPE_UP_AND_DOWN
@see #GESTURE_SWIPE_UP_AND_RIGHT
@see #GESTURE_SWIPE_DOWN
@see #GESTURE_SWIPE_DOWN_AND_LEFT
@see #GESTURE_SWIPE_DOWN_AND_UP
@see #GESTURE_SWIPE_DOWN_AND_RIGHT
@see #GESTURE_SWIPE_LEFT
@see #GESTURE_SWIPE_LEFT_AND_UP
@see #GESTURE_SWIPE_LEFT_AND_RIGHT
@see #GESTURE_SWIPE_LEFT_AND_DOWN
@see #GESTURE_SWIPE_RIGHT
@see #GESTURE_SWIPE_RIGHT_AND_UP
@see #GESTURE_SWIPE_RIGHT_AND_LEFT
@see #GESTURE_SWIPE_RIGHT_AND_DOWN"
      end

      operation 1390519 "onKeyEvent"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "event" type class_ref 137015 // KeyEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback that allows an accessibility service to observe the key events
before they are passed to the rest of the system. This means that the events
are first delivered here before they are passed to the device policy, the
input method, or applications.
<p>
<strong>Note:</strong> It is important that key events are handled in such
a way that the event stream that would be passed to the rest of the system
is well-formed. For example, handling the down event but not the up event
and vice versa would generate an inconsistent event stream.
</p>
<p>
<strong>Note:</strong> The key events delivered in this method are copies
and modifying them will have no effect on the events that will be passed
to the system. This method is intended to perform purely filtering
functionality.
<p>

@param event The event to be processed. This event is owned by the caller and cannot be used
after this method returns. Services wishing to use the event after this method returns should
make a copy.
@return If true then the event will be consumed and not delivered to
        applications, otherwise it will be delivered as usual."
      end

      operation 1390647 "getWindows"
	public return_type class_ref 299575 // AccessibilityWindowInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the windows on the screen. This method returns only the windows
that a sighted user can interact with, as opposed to all windows.
For example, if there is a modal dialog shown and the user cannot touch
anything behind it, then only the modal window will be reported
(assuming it is the top one). For convenience the returned windows
are ordered in a descending layer order, which is the windows that
are higher in the Z-order are reported first. Since the user can always
interact with the window that has input focus by typing, the focused
window is always returned (even if covered by a modal window).
<p>
<strong>Note:</strong> In order to access the windows your service has
to declare the capability to retrieve window content by setting the
{@link android.R.styleable#AccessibilityService_canRetrieveWindowContent}
property in its meta-data. For details refer to {@link #SERVICE_META_DATA}.
Also the service has to opt-in to retrieve the interactive windows by
setting the {@link AccessibilityServiceInfo#FLAG_RETRIEVE_INTERACTIVE_WINDOWS}
flag.
</p>

@return The windows if there are windows and the service is can retrieve
        them, otherwise an empty list."
      end

      operation 1390775 "getRootInActiveWindow"
	public return_type class_ref 147127 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the root node in the currently active window if this service
can retrieve window content. The active window is the one that the user
is currently touching or the window with input focus, if the user is not
touching any window.
<p>
The currently active window is defined as the window that most recently fired one
of the following events:
{@link AccessibilityEvent#TYPE_WINDOW_STATE_CHANGED},
{@link AccessibilityEvent#TYPE_VIEW_HOVER_ENTER},
{@link AccessibilityEvent#TYPE_VIEW_HOVER_EXIT}.
In other words, the last window shown that also has input focus.
</p>
<p>
<strong>Note:</strong> In order to access the root node your service has
to declare the capability to retrieve window content by setting the
{@link android.R.styleable#AccessibilityService_canRetrieveWindowContent}
property in its meta-data. For details refer to {@link #SERVICE_META_DATA}.
</p>

@return The root node if this service can retrieve window content."
      end

      operation 1390903 "disableSelf"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables the service. After calling this method, the service will be disabled and settings
will show that it is turned off."
      end

      operation 1391031 "getMagnificationController"
	public return_type class_ref 301239 // MagnificationController
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Returns the magnification controller, which may be used to query and
modify the state of display magnification.
<p>
<strong>Note:</strong> In order to control magnification, your service
must declare the capability by setting the
{@link android.R.styleable#AccessibilityService_canControlMagnification}
property in its meta-data. For more information, see
{@link #SERVICE_META_DATA}.

@return the magnification controller"
      end

      operation 1391159 "dispatchGesture"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "gesture" type class_ref 301623 // GestureDescription
	  param inout name "callback" type class_ref 301751 // GestureResultCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatch a gesture to the touch screen. Any gestures currently in progress, whether from
the user, this service, or another service, will be cancelled.
<p>
The gesture will be dispatched as if it were performed directly on the screen by a user, so
the events may be affected by features such as magnification and explore by touch.
</p>
<p>
<strong>Note:</strong> In order to dispatch gestures, your service
must declare the capability by setting the
{@link android.R.styleable#AccessibilityService_canPerformGestures}
property in its meta-data. For more information, see
{@link #SERVICE_META_DATA}.
</p>

@param gesture The gesture to dispatch
@param callback The object to call back when the status of the gesture is known. If
{@code null}, no status is reported.
@param handler The handler on which to call back the {@code callback} object. If
{@code null}, the object is called back on the service's main thread.

@return {@code true} if the gesture is dispatched, {@code false} if not."
      end

      class 301751 "GestureResultCallback"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1401399 "onCompleted"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "gestureDescription" type class_ref 301623 // GestureDescription
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Called when the gesture has completed successfully

@param gestureDescription The description of the gesture that completed."
	end

	operation 1401527 "onCancelled"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "gestureDescription" type class_ref 301623 // GestureDescription
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Called when the gesture was cancelled

@param gestureDescription The description of the gesture that was cancelled."
	end
      end

      operation 1391287 "onPerformGestureResult"
	package explicit_return_type "void"
	nparams 2
	  param in name "sequence" explicit_type "int"
	  param in name "completedSuccessfully" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1391415 "onMagnificationChanged"
	private explicit_return_type "void"
	nparams 4
	  param inout name "region" type class_ref 136119 // Region
	  param in name "scale" explicit_type "float"
	  param in name "centerX" explicit_type "float"
	  param in name "centerY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1393463 "getSoftKeyboardController"
	public return_type class_ref 301367 // SoftKeyboardController
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Returns the soft keyboard controller, which may be used to query and modify the soft keyboard
show mode.

@return the soft keyboard controller"
      end

      operation 1393591 "onSoftKeyboardShowModeChanged"
	private explicit_return_type "void"
	nparams 1
	  param in name "showMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1394999 "performGlobalAction"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a global action. Such an action can be performed
at any moment regardless of the current application or user
location in that application. For example going back, going
home, opening recents, etc.

@param action The action to perform.
@return Whether the action was successfully performed.

@see #GLOBAL_ACTION_BACK
@see #GLOBAL_ACTION_HOME
@see #GLOBAL_ACTION_NOTIFICATIONS
@see #GLOBAL_ACTION_RECENTS"
      end

      operation 1395127 "findFocus"
	public return_type class_ref 147127 // AccessibilityNodeInfo
	nparams 1
	  param in name "focus" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Find the view that has the specified focus type. The search is performed
across all windows.
<p>
<strong>Note:</strong> In order to access the windows your service has
to declare the capability to retrieve window content by setting the
{@link android.R.styleable#AccessibilityService_canRetrieveWindowContent}
property in its meta-data. For details refer to {@link #SERVICE_META_DATA}.
Also the service has to opt-in to retrieve the interactive windows by
setting the {@link AccessibilityServiceInfo#FLAG_RETRIEVE_INTERACTIVE_WINDOWS}
flag. Otherwise, the search will be performed only in the active window.
</p>

@param focus The focus to find. One of {@link AccessibilityNodeInfo#FOCUS_INPUT} or
        {@link AccessibilityNodeInfo#FOCUS_ACCESSIBILITY}.
@return The node info of the focused view or null.

@see AccessibilityNodeInfo#FOCUS_INPUT
@see AccessibilityNodeInfo#FOCUS_ACCESSIBILITY"
      end

      operation 1395255 "getServiceInfo"
	public return_type class_ref 299447 // AccessibilityServiceInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the an {@link AccessibilityServiceInfo} describing this
{@link AccessibilityService}. This method is useful if one wants
to change some of the dynamically configurable properties at
runtime.

@return The accessibility service info.

@see AccessibilityServiceInfo"
      end

      operation 1395383 "setServiceInfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 299447 // AccessibilityServiceInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link AccessibilityServiceInfo} that describes this service.
<p>
Note: You can call this method any time but the info will be picked up after
      the system has bound to this service and when this method is called thereafter.

@param info The info."
      end

      operation 1395511 "sendServiceInfo"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link AccessibilityServiceInfo} for this service if the latter is
properly set and there is an {@link IAccessibilityServiceConnection} to the
AccessibilityManagerService."
      end

      operation 1395639 "getSystemService"
	public return_type class_ref 132663 // Object
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1395767 "onBind"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Implement to return the implementation of the internal accessibility
service interface."
      end
    end

    class 301623 "GestureDescription"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Accessibility services with the
{@link android.R.styleable#AccessibilityService_canPerformGestures} property can dispatch
gestures. This class describes those gestures. Gestures are made up of one or more strokes.
Gestures are immutable once built.
<p>
Spatial dimensions throughout are in screen pixels. Time is measured in milliseconds."
      attribute 586167 "MAX_STROKE_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Gestures may contain no more than this many strokes "
      end

      attribute 586295 "MAX_GESTURE_DURATION_MS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 60 * 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Upper bound on total gesture duration. Nearly all gestures will be much shorter.
"
      end

      class 306359 "StrokeDescription"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 624823 // mPath (<unidirectional association>)
	  relation 624823 --->
	    a role_name "mPath" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 624823 // mPath (<unidirectional association>)
	    b parent class_ref 272823 // Path
	end

	attribute 586551 "mStartTime"
	  package explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 586679 "mEndTime"
	  package explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 586807 "mTimeToLengthConversion"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 624951 // mPathMeasure (<unidirectional association>)
	  relation 624951 --->
	    a role_name "mPathMeasure" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 624951 // mPathMeasure (<unidirectional association>)
	    b parent class_ref 306743 // PathMeasure
	end

	attribute 586935 "mTapLocation"
	  package explicit_type "float"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The tap location is only set for zero-length paths"
	end

	operation 1449527 "StrokeDescription"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "path" type class_ref 272823 // Path
	    param in name "startTime" explicit_type "long"
	    param in name "duration" explicit_type "long"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}@NonNull ${t0} ${p0}, @IntRange(from = 0) ${t1} ${p1}, @IntRange(from = 0) ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@param path The path to follow. Must have exactly one contour. The bounds of the path
must not be negative. The path must not be empty. If the path has zero length
(for example, a single {@code moveTo()}), the stroke is a touch that doesn't move.
@param startTime The time, in milliseconds, from the time the gesture starts to the
time the stroke should start. Must not be negative.
@param duration The duration, in milliseconds, the stroke takes to traverse the path.
Must not be negative."
	end

	operation 1449655 "getPath"
	  public return_type class_ref 272823 // Path
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Retrieve a copy of the path for this stroke

@return A copy of the path"
	end

	operation 1449783 "getStartTime"
	  public explicit_return_type "long"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the stroke's start time

@return the start time for this stroke."
	end

	operation 1449911 "getDuration"
	  public explicit_return_type "long"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the stroke's duration

@return the duration for this stroke"
	end

	operation 1450039 "getLength"
	  package explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1450167 "getPosForTime"
	  package explicit_return_type "boolean"
	  nparams 2
	    param in name "time" explicit_type "long"
	    param inout name "pos" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Assumes hasPointForTime returns true "
	end

	operation 1450295 "hasPointForTime"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "time" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 624567 // mStrokes (<unidirectional association>)
	relation 624567 --->
	  stereotype "List"
	  a role_name "mStrokes" init_value " new ArrayList<>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 624567 // mStrokes (<unidirectional association>)
	  b parent class_ref 306359 // StrokeDescription
      end

      attribute 586423 "mTempPos"
	const_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " new float[2]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1448119 "getMaxStrokeCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the upper limit for the number of strokes a gesture may contain.

@return The maximum number of strokes."
      end

      operation 1448247 "getMaxGestureDuration"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the upper limit on a gesture's duration.

@return The maximum duration in milliseconds."
      end

      operation 1448375 "GestureDescription"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1448503 "GestureDescription"
	private explicit_return_type ""
	nparams 1
	  param inout name "strokes" explicit_type "List<StrokeDescription>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1448631 "getStrokeCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the number of stroke in the gesture.

@return the number of strokes in this gesture"
      end

      operation 1448759 "getStroke"
	public return_type class_ref 306359 // StrokeDescription
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@IntRange(from = 0) ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a stroke from the gesture

@param index the index of the stroke

@return A description of the stroke."
      end

      operation 1448887 "getNextKeyPointAtLeast"
	private explicit_return_type "long"
	nparams 1
	  param in name "offset" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the smallest key point (where a path starts or ends) that is at least a specified
offset
@param offset the minimum start time
@return The next key time that is at least the offset or -1 if one can't be found"
      end

      operation 1449015 "getPointsForTime"
	private explicit_return_type "int"
	nparams 2
	  param in name "time" explicit_type "long"
	  param inout name "touchPoints" type class_ref 306487 // TouchPoint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the points that correspond to a particular moment in time.
@param time The time of interest
@param touchPoints An array to hold the current touch points. Must be preallocated to at
least the number of paths in the gesture to prevent going out of bounds
@return The number of points found, and thus the number of elements set in each array"
      end

      class 306487 "TouchPoint"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 625079 // <realization>
	  relation 625079 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 625079 // <realization>
	    b parent class_ref 137399 // Parcelable
	end

	attribute 587063 "FLAG_IS_START_OF_PATH"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0x01"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 587191 "FLAG_IS_END_OF_PATH"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0x02"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 587319 "mPathIndex"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 587447 "mIsStartOfPath"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 587575 "mIsEndOfPath"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 587703 "mX"
	  package explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 587831 "mY"
	  package explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1450423 "TouchPoint"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1450551 "TouchPoint"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "pointToCopy" type class_ref 306487 // TouchPoint
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1450679 "TouchPoint"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "parcel" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1450807 "copyFrom"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "other" type class_ref 306487 // TouchPoint
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1450935 "describeContents"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1451063 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "dest" type class_ref 137527 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	classrelation 625207 // CREATOR (<unidirectional association>)
	  relation 625207 --->
	    a role_name "CREATOR" init_value " new Parcelable.Creator<TouchPoint>() {
            public TouchPoint createFromParcel(Parcel in) {
                return new TouchPoint(in);
            }

            public TouchPoint[] newArray(int size) {
                return new TouchPoint[size];
            }
        }" class_relation const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<TouchPoint> ${name}${value};
"
	      classrelation_ref 625207 // CREATOR (<unidirectional association>)
	    b parent class_ref 137655 // Creator
	end
      end

      operation 1449143 "getTotalDuration"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "paths" explicit_type "List<StrokeDescription>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Total duration assumes that the gesture starts at 0; waiting around to start a gesture
 counts against total duration"
      end

      class 306615 "Builder"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 624695 // mStrokes (<unidirectional association>)
	  relation 624695 --->
	    stereotype "List"
	    a role_name "mStrokes" init_value " new ArrayList<>()" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 624695 // mStrokes (<unidirectional association>)
	    b parent class_ref 306359 // StrokeDescription
	end

	operation 1449271 "addStroke"
	  public return_type class_ref 306615 // Builder
	  nparams 1
	    param inout name "strokeDescription" type class_ref 306359 // StrokeDescription
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a stroke to the gesture description. Up to
{@link GestureDescription#getMaxStrokeCount()} paths may be
added to a gesture, and the total gesture duration (earliest path start time to latest
path end time) may not exceed {@link GestureDescription#getMaxGestureDuration()}.

@param strokeDescription the stroke to add.

@return this"
	end

	operation 1449399 "build"
	  public return_type class_ref 301623 // GestureDescription
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 306871 "GestureStep"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 625335 // <realization>
	  relation 625335 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 625335 // <realization>
	    b parent class_ref 137399 // Parcelable
	end

	attribute 587959 "timeSinceGestureStart"
	  public explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 588087 "numTouchPoints"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 625463 // touchPoints (<unidirectional association>)
	  relation 625463 --->
	    a role_name "touchPoints" multiplicity "[]" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 625463 // touchPoints (<unidirectional association>)
	    b parent class_ref 306487 // TouchPoint
	end

	operation 1451191 "GestureStep"
	  public explicit_return_type ""
	  nparams 3
	    param in name "timeSinceGestureStart" explicit_type "long"
	    param in name "numTouchPoints" explicit_type "int"
	    param inout name "touchPointsToCopy" type class_ref 306487 // TouchPoint
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1451319 "GestureStep"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "parcel" type class_ref 137527 // Parcel
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1451447 "describeContents"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1451575 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "dest" type class_ref 137527 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	classrelation 625591 // CREATOR (<unidirectional association>)
	  relation 625591 --->
	    a role_name "CREATOR" init_value " new Parcelable.Creator<GestureStep>() {
            public GestureStep createFromParcel(Parcel in) {
                return new GestureStep(in);
            }

            public GestureStep[] newArray(int size) {
                return new GestureStep[size];
            }
        }" class_relation const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<GestureStep> ${name}${value};
"
	      classrelation_ref 625591 // CREATOR (<unidirectional association>)
	    b parent class_ref 137655 // Creator
	end
      end

      class 306999 "MotionEventGenerator"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 588215 "EVENT_META_STATE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Constants used to initialize all MotionEvents
"
	end

	attribute 588343 "EVENT_BUTTON_STATE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 588471 "EVENT_DEVICE_ID"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 588599 "EVENT_EDGE_FLAGS"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 588727 "EVENT_SOURCE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " InputDevice.SOURCE_TOUCHSCREEN"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 588855 "EVENT_FLAGS"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 588983 "EVENT_X_PRECISION"
	  class_attribute const_attribute private explicit_type "float"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 589111 "EVENT_Y_PRECISION"
	  class_attribute const_attribute private explicit_type "float"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 625719 // sCurrentTouchPoints (<unidirectional association>)
	  relation 625719 --->
	    a role_name "sCurrentTouchPoints" multiplicity "[]" class_relation private
	      comment " Lazily-created scratch memory for processing touches 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 625719 // sCurrentTouchPoints (<unidirectional association>)
	    b parent class_ref 306487 // TouchPoint
	end

	classrelation 625847 // sLastTouchPoints (<unidirectional association>)
	  relation 625847 --->
	    a role_name "sLastTouchPoints" multiplicity "[]" class_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 625847 // sLastTouchPoints (<unidirectional association>)
	    b parent class_ref 306487 // TouchPoint
	end

	classrelation 625975 // sPointerCoords (<unidirectional association>)
	  relation 625975 --->
	    a role_name "sPointerCoords" multiplicity "[]" class_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 625975 // sPointerCoords (<unidirectional association>)
	    b parent class_ref 303031 // PointerCoords
	end

	classrelation 626103 // sPointerProps (<unidirectional association>)
	  relation 626103 --->
	    a role_name "sPointerProps" multiplicity "[]" class_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 626103 // sPointerProps (<unidirectional association>)
	    b parent class_ref 307127 // PointerProperties
	end

	operation 1451703 "getGestureStepsFromGestureDescription"
	  class_operation package return_type class_ref 306871 // GestureStep
	  nparams 2
	    param inout name "description" type class_ref 301623 // GestureDescription
	    param in name "sampleTimeMs" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1451831 "getMotionEventsFromGestureSteps"
	  class_operation public return_type class_ref 146743 // MotionEvent
	  nparams 1
	    param inout name "steps" explicit_type "List<GestureStep>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1451959 "getCurrentTouchPoints"
	  class_operation private return_type class_ref 306487 // TouchPoint
	  nparams 1
	    param in name "requiredCapacity" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1452087 "getLastTouchPoints"
	  class_operation private return_type class_ref 306487 // TouchPoint
	  nparams 1
	    param in name "requiredCapacity" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1452215 "getPointerCoords"
	  class_operation private return_type class_ref 303031 // PointerCoords
	  nparams 1
	    param in name "requiredCapacity" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1452343 "getPointerProps"
	  class_operation private return_type class_ref 307127 // PointerProperties
	  nparams 1
	    param in name "requiredCapacity" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1452471 "appendMoveEventIfNeeded"
	  class_operation private explicit_return_type "void"
	  nparams 6
	    param inout name "motionEvents" explicit_type "List<MotionEvent>"
	    param inout name "lastTouchPoints" type class_ref 306487 // TouchPoint
	    param in name "lastTouchPointsSize" explicit_type "int"
	    param inout name "currentTouchPoints" type class_ref 306487 // TouchPoint
	    param in name "currentTouchPointsSize" explicit_type "int"
	    param in name "currentTime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1452599 "appendUpEvents"
	  class_operation private explicit_return_type "int"
	  nparams 6
	    param inout name "motionEvents" explicit_type "List<MotionEvent>"
	    param inout name "lastTouchPoints" type class_ref 306487 // TouchPoint
	    param in name "lastTouchPointsSize" explicit_type "int"
	    param inout name "currentTouchPoints" type class_ref 306487 // TouchPoint
	    param in name "currentTouchPointsSize" explicit_type "int"
	    param in name "currentTime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1452727 "appendDownEvents"
	  class_operation private explicit_return_type "int"
	  nparams 6
	    param inout name "motionEvents" explicit_type "List<MotionEvent>"
	    param inout name "lastTouchPoints" type class_ref 306487 // TouchPoint
	    param in name "lastTouchPointsSize" explicit_type "int"
	    param inout name "currentTouchPoints" type class_ref 306487 // TouchPoint
	    param in name "currentTouchPointsSize" explicit_type "int"
	    param in name "currentTime" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1452855 "obtainMotionEvent"
	  class_operation private return_type class_ref 146743 // MotionEvent
	  nparams 5
	    param in name "downTime" explicit_type "long"
	    param in name "eventTime" explicit_type "long"
	    param in name "action" explicit_type "int"
	    param inout name "touchPoints" type class_ref 306487 // TouchPoint
	    param in name "touchPointsSize" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1452983 "findPointByPathIndex"
	  class_operation private explicit_return_type "int"
	  nparams 3
	    param inout name "touchPoints" type class_ref 306487 // TouchPoint
	    param in name "touchPointsSize" explicit_type "int"
	    param in name "pathIndex" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end
  end

  deploymentview 147255 "accessibilityservice"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 229559 "AccessibilityService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accessibilityservice.GestureDescription.MotionEventGenerator;
import android.annotation.IntDef;
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ParceledListSlice;
import android.graphics.Region;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.Message;
import android.os.RemoteException;
import android.provider.Settings;
import android.util.ArrayMap;
import android.util.Log;
import android.util.Pair;
import android.util.Slog;
import android.util.SparseArray;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.WindowManager;
import android.view.WindowManagerImpl;
import android.view.accessibility.AccessibilityEvent;
import android.view.accessibility.AccessibilityInteractionClient;
import android.view.accessibility.AccessibilityNodeInfo;
import android.view.accessibility.AccessibilityWindowInfo;
import com.android.internal.os.HandlerCaller;
import com.android.internal.os.SomeArgs;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.util.List;
${definition}"
      associated_classes
	class_ref 300087 // AccessibilityService
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 231863 "AccessibilityServiceInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.ResolveInfo;
import android.content.pm.ServiceInfo;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.content.res.XmlResourceParser;
import android.os.Build;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.AttributeSet;
import android.util.SparseArray;
import android.util.TypedValue;
import android.util.Xml;
import android.view.View;
import android.view.accessibility.AccessibilityEvent;
import android.view.accessibility.AccessibilityNodeInfo;
import com.android.internal.R;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
${definition}"
      associated_classes
	class_ref 299447 // AccessibilityServiceInfo
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 231991 "GestureDescription"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.IntRange;
import android.annotation.NonNull;
import android.graphics.Path;
import android.graphics.PathMeasure;
import android.graphics.RectF;
import android.os.Parcel;
import android.os.Parcelable;
import android.view.InputDevice;
import android.view.MotionEvent;
import android.view.MotionEvent.PointerCoords;
import android.view.MotionEvent.PointerProperties;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 301623 // GestureDescription
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
