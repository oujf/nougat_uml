format 76
"accounts" // nougat_src::frameworks::base::core::java::android::accounts
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/core/java/android/accounts/"
  java_package "android.accounts"
  classview 151863 "accounts"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 307255 "AbstractAccountAuthenticator"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract base class for creating AccountAuthenticators.
In order to be an authenticator one must extend this class, provider implementations for the
abstract methods and write a service that returns the result of {@link #getIBinder()}
in the service's {@link android.app.Service#onBind(android.content.Intent)} when invoked
with an intent with action {@link AccountManager#ACTION_AUTHENTICATOR_INTENT}. This service
must specify the following intent filter and metadata tags in its AndroidManifest.xml file
<pre>
  &lt;intent-filter&gt;
    &lt;action android:name=\"android.accounts.AccountAuthenticator\" /&gt;
  &lt;/intent-filter&gt;
  &lt;meta-data android:name=\"android.accounts.AccountAuthenticator\"
            android:resource=\"@xml/authenticator\" /&gt;
</pre>
The <code>android:resource</code> attribute must point to a resource that looks like:
<pre>
&lt;account-authenticator xmlns:android=\"http://schemas.android.com/apk/res/android\"
   android:accountType=\"typeOfAuthenticator\"
   android:icon=\"@drawable/icon\"
   android:smallIcon=\"@drawable/miniIcon\"
   android:label=\"@string/label\"
   android:accountPreferences=\"@xml/account_preferences\"
/&gt;
</pre>
Replace the icons and labels with your own resources. The <code>android:accountType</code>
attribute must be a string that uniquely identifies your authenticator and will be the same
string that user will use when making calls on the {@link AccountManager} and it also
corresponds to {@link Account#type} for your accounts. One user of the android:icon is the
\"Account & Sync\" settings page and one user of the android:smallIcon is the Contact Application's
tab panels.
<p>
The preferences attribute points to a PreferenceScreen xml hierarchy that contains
a list of PreferenceScreens that can be invoked to manage the authenticator. An example is:
<pre>
&lt;PreferenceScreen xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;
   &lt;PreferenceCategory android:title=\"@string/title_fmt\" /&gt;
   &lt;PreferenceScreen
        android:key=\"key1\"
        android:title=\"@string/key1_action\"
        android:summary=\"@string/key1_summary\"&gt;
        &lt;intent
            android:action=\"key1.ACTION\"
            android:targetPackage=\"key1.package\"
            android:targetClass=\"key1.class\" /&gt;
    &lt;/PreferenceScreen&gt;
&lt;/PreferenceScreen&gt;
</pre>

<p>
The standard pattern for implementing any of the abstract methods is the following:
<ul>
<li> If the supplied arguments are enough for the authenticator to fully satisfy the request
then it will do so and return a {@link Bundle} that contains the results.
<li> If the authenticator needs information from the user to satisfy the request then it
will create an {@link Intent} to an activity that will prompt the user for the information
and then carry out the request. This intent must be returned in a Bundle as key
{@link AccountManager#KEY_INTENT}.
<p>
The activity needs to return the final result when it is complete so the Intent should contain
the {@link AccountAuthenticatorResponse} as {@link AccountManager#KEY_ACCOUNT_MANAGER_RESPONSE}.
The activity must then call {@link AccountAuthenticatorResponse#onResult} or
{@link AccountAuthenticatorResponse#onError} when it is complete.
<li> If the authenticator cannot synchronously process the request and return a result then it
may choose to return null and then use the AccountManagerResponse to send the result
when it has completed the request.
</ul>
<p>
The following descriptions of each of the abstract authenticator methods will not describe the
possible asynchronous nature of the request handling and will instead just describe the input
parameters and the expected result.
<p>
When writing an activity to satisfy these requests one must pass in the AccountManagerResponse
and return the result via that response when the activity finishes (or whenever else  the
activity author deems it is the correct time to respond).
The {@link AccountAuthenticatorActivity} handles this, so one may wish to extend that when
writing activities to handle these requests."
      classrelation 626231 // TAG (<unidirectional association>)
	relation 626231 --->
	  a role_name "TAG" init_value " \"AccountAuthenticator\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 626231 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 626359 // KEY_CUSTOM_TOKEN_EXPIRY (<unidirectional association>)
	relation 626359 --->
	  a role_name "KEY_CUSTOM_TOKEN_EXPIRY" init_value " \"android.accounts.expiry\"" class_relation const_relation public
	    comment "
Bundle key used for the {@code long} expiration time (in millis from the unix epoch) of the
associated auth token.

@see #getAuthToken

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 626359 // KEY_CUSTOM_TOKEN_EXPIRY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 626487 // KEY_AUTH_TOKEN_TYPE (<unidirectional association>)
	relation 626487 --->
	  a role_name "KEY_AUTH_TOKEN_TYPE" init_value "
            \"android.accounts.AbstractAccountAuthenticato.KEY_AUTH_TOKEN_TYPE\"" class_relation const_relation private
	    comment "
Bundle key used for the {@link String} account type in session bundle.
This is used in the default implementation of
{@link #startAddAccountSession} and {@link startUpdateCredentialsSession}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 626487 // KEY_AUTH_TOKEN_TYPE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 626615 // KEY_REQUIRED_FEATURES (<unidirectional association>)
	relation 626615 --->
	  a role_name "KEY_REQUIRED_FEATURES" init_value "
            \"android.accounts.AbstractAccountAuthenticator.KEY_REQUIRED_FEATURES\"" class_relation const_relation private
	    comment "
Bundle key used for the {@link String} array of required features in
session bundle. This is used in the default implementation of
{@link #startAddAccountSession} and {@link startUpdateCredentialsSession}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 626615 // KEY_REQUIRED_FEATURES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 626743 // KEY_OPTIONS (<unidirectional association>)
	relation 626743 --->
	  a role_name "KEY_OPTIONS" init_value "
            \"android.accounts.AbstractAccountAuthenticator.KEY_OPTIONS\"" class_relation const_relation private
	    comment "
Bundle key used for the {@link Bundle} options in session bundle. This is
used in default implementation of {@link #startAddAccountSession} and
{@link startUpdateCredentialsSession}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 626743 // KEY_OPTIONS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 626871 // KEY_ACCOUNT (<unidirectional association>)
	relation 626871 --->
	  a role_name "KEY_ACCOUNT" init_value "
            \"android.accounts.AbstractAccountAuthenticator.KEY_ACCOUNT\"" class_relation const_relation private
	    comment "
Bundle key used for the {@link Account} account in session bundle. This is used
used in default implementation of {@link startUpdateCredentialsSession}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 626871 // KEY_ACCOUNT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 626999 // mContext (<unidirectional association>)
	relation 626999 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 626999 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      operation 1453111 "AbstractAccountAuthenticator"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 307383 "Transport"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 627127 // <generalisation>
	  relation 627127 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 627127 // <generalisation>
	    b parent class_ref 307511 // Stub
	end

	operation 1453239 "addAccount"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "accountType" type class_ref 129591 // String
	    param inout name "authTokenType" type class_ref 129591 // String
	    param inout name "features" type class_ref 129591 // String
	    param inout name "options" type class_ref 131511 // Bundle
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1453367 "confirmCredentials"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "account" type class_ref 307639 // Account
	    param inout name "options" type class_ref 131511 // Bundle
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1453495 "getAuthTokenLabel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "authTokenType" type class_ref 129591 // String
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1453623 "getAuthToken"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "account" type class_ref 307639 // Account
	    param inout name "authTokenType" type class_ref 129591 // String
	    param inout name "loginOptions" type class_ref 131511 // Bundle
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1453751 "updateCredentials"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "account" type class_ref 307639 // Account
	    param inout name "authTokenType" type class_ref 129591 // String
	    param inout name "loginOptions" type class_ref 131511 // Bundle
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1453879 "editProperties"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "accountType" type class_ref 129591 // String
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1454007 "hasFeatures"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "account" type class_ref 307639 // Account
	    param inout name "features" type class_ref 129591 // String
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1454135 "getAccountRemovalAllowed"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "account" type class_ref 307639 // Account
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1454263 "getAccountCredentialsForCloning"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "account" type class_ref 307639 // Account
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1454391 "addAccountFromCredentials"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "account" type class_ref 307639 // Account
	    param inout name "accountCredentials" type class_ref 131511 // Bundle
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1454519 "startAddAccountSession"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "accountType" type class_ref 129591 // String
	    param inout name "authTokenType" type class_ref 129591 // String
	    param inout name "features" type class_ref 129591 // String
	    param inout name "options" type class_ref 131511 // Bundle
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1454647 "startUpdateCredentialsSession"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "account" type class_ref 307639 // Account
	    param inout name "authTokenType" type class_ref 129591 // String
	    param inout name "loginOptions" type class_ref 131511 // Bundle
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1454775 "finishSession"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "accountType" type class_ref 129591 // String
	    param inout name "sessionBundle" type class_ref 131511 // Bundle
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1454903 "isCredentialsUpdateSuggested"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	    param inout name "account" type class_ref 307639 // Account
	    param inout name "statusToken" type class_ref 129591 // String
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 1455031 "handleException"
	private explicit_return_type "void"
	nparams 4
	  param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	  param inout name "method" type class_ref 129591 // String
	  param inout name "data" type class_ref 129591 // String
	  param inout name "e" explicit_type "Exception"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1455159 "checkBinderPermission"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 627255 // mTransport (<unidirectional association>)
	relation 627255 --->
	  a role_name "mTransport" init_value " new Transport()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 627255 // mTransport (<unidirectional association>)
	  b parent class_ref 307383 // Transport
      end

      operation 1455287 "getIBinder"
	public return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the IBinder for the AccountAuthenticator"
      end

      operation 1455415 "editProperties"
	abstract public return_type class_ref 131511 // Bundle
	nparams 2
	  param inout name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param inout name "accountType" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Bundle that contains the Intent of the activity that can be used to edit the
properties. In order to indicate success the activity should call response.setResult()
with a non-null Bundle.
@param response used to set the result for the request. If the Constants.INTENT_KEY
  is set in the bundle then this response field is to be used for sending future
  results if and when the Intent is started.
@param accountType the AccountType whose properties are to be edited.
@return a Bundle containing the result or the Intent to start to continue the request.
  If this is null then the request is considered to still be active and the result should
  sent later using response."
      end

      operation 1455543 "addAccount"
	abstract public return_type class_ref 131511 // Bundle
	nparams 5
	  param inout name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param inout name "accountType" type class_ref 129591 // String
	  param inout name "authTokenType" type class_ref 129591 // String
	  param inout name "requiredFeatures" type class_ref 129591 // String
	  param inout name "options" type class_ref 131511 // Bundle
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an account of the specified accountType.
@param response to send the result back to the AccountManager, will never be null
@param accountType the type of account to add, will never be null
@param authTokenType the type of auth token to retrieve after adding the account, may be null
@param requiredFeatures a String array of authenticator-specific features that the added
account must support, may be null
@param options a Bundle of authenticator-specific options, may be null
@return a Bundle result or null if the result is to be returned via the response. The result
will contain either:
<ul>
<li> {@link AccountManager#KEY_INTENT}, or
<li> {@link AccountManager#KEY_ACCOUNT_NAME} and {@link AccountManager#KEY_ACCOUNT_TYPE} of
the account that was added, or
<li> {@link AccountManager#KEY_ERROR_CODE} and {@link AccountManager#KEY_ERROR_MESSAGE} to
indicate an error
</ul>
@throws NetworkErrorException if the authenticator could not honor the request due to a
network error"
      end

      operation 1455671 "confirmCredentials"
	abstract public return_type class_ref 131511 // Bundle
	nparams 3
	  param inout name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param inout name "account" type class_ref 307639 // Account
	  param inout name "options" type class_ref 131511 // Bundle
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the user knows the credentials of an account.
@param response to send the result back to the AccountManager, will never be null
@param account the account whose credentials are to be checked, will never be null
@param options a Bundle of authenticator-specific options, may be null
@return a Bundle result or null if the result is to be returned via the response. The result
will contain either:
<ul>
<li> {@link AccountManager#KEY_INTENT}, or
<li> {@link AccountManager#KEY_BOOLEAN_RESULT}, true if the check succeeded, false otherwise
<li> {@link AccountManager#KEY_ERROR_CODE} and {@link AccountManager#KEY_ERROR_MESSAGE} to
indicate an error
</ul>
@throws NetworkErrorException if the authenticator could not honor the request due to a
network error"
      end

      operation 1455799 "getAuthToken"
	abstract public return_type class_ref 131511 // Bundle
	nparams 4
	  param inout name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param inout name "account" type class_ref 307639 // Account
	  param inout name "authTokenType" type class_ref 129591 // String
	  param inout name "options" type class_ref 131511 // Bundle
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an authtoken for an account.

If not {@code null}, the resultant {@link Bundle} will contain different sets of keys
depending on whether a token was successfully issued and, if not, whether one
could be issued via some {@link android.app.Activity}.
<p>
If a token cannot be provided without some additional activity, the Bundle should contain
{@link AccountManager#KEY_INTENT} with an associated {@link Intent}. On the other hand, if
there is no such activity, then a Bundle containing
{@link AccountManager#KEY_ERROR_CODE} and {@link AccountManager#KEY_ERROR_MESSAGE} should be
returned.
<p>
If a token can be successfully issued, the implementation should return the
{@link AccountManager#KEY_ACCOUNT_NAME} and {@link AccountManager#KEY_ACCOUNT_TYPE} of the
account associated with the token as well as the {@link AccountManager#KEY_AUTHTOKEN}. In
addition {@link AbstractAccountAuthenticator} implementations that declare themselves
{@code android:customTokens=true} may also provide a non-negative {@link
#KEY_CUSTOM_TOKEN_EXPIRY} long value containing the expiration timestamp of the expiration
time (in millis since the unix epoch).
<p>
Implementers should assume that tokens will be cached on the basis of account and
authTokenType. The system may ignore the contents of the supplied options Bundle when
determining to re-use a cached token. Furthermore, implementers should assume a supplied
expiration time will be treated as non-binding advice.
<p>
Finally, note that for android:customTokens=false authenticators, tokens are cached
indefinitely until some client calls {@link
AccountManager#invalidateAuthToken(String,String)}.

@param response to send the result back to the AccountManager, will never be null
@param account the account whose credentials are to be retrieved, will never be null
@param authTokenType the type of auth token to retrieve, will never be null
@param options a Bundle of authenticator-specific options, may be null
@return a Bundle result or null if the result is to be returned via the response.
@throws NetworkErrorException if the authenticator could not honor the request due to a
network error"
      end

      operation 1455927 "getAuthTokenLabel"
	abstract public return_type class_ref 129591 // String
	nparams 1
	  param inout name "authTokenType" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the authenticator for a localized label for the given authTokenType.
@param authTokenType the authTokenType whose label is to be returned, will never be null
@return the localized label of the auth token type, may be null if the type isn't known"
      end

      operation 1456055 "updateCredentials"
	abstract public return_type class_ref 131511 // Bundle
	nparams 4
	  param inout name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param inout name "account" type class_ref 307639 // Account
	  param inout name "authTokenType" type class_ref 129591 // String
	  param inout name "options" type class_ref 131511 // Bundle
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update the locally stored credentials for an account.
@param response to send the result back to the AccountManager, will never be null
@param account the account whose credentials are to be updated, will never be null
@param authTokenType the type of auth token to retrieve after updating the credentials,
may be null
@param options a Bundle of authenticator-specific options, may be null
@return a Bundle result or null if the result is to be returned via the response. The result
will contain either:
<ul>
<li> {@link AccountManager#KEY_INTENT}, or
<li> {@link AccountManager#KEY_ACCOUNT_NAME} and {@link AccountManager#KEY_ACCOUNT_TYPE} of
the account whose credentials were updated, or
<li> {@link AccountManager#KEY_ERROR_CODE} and {@link AccountManager#KEY_ERROR_MESSAGE} to
indicate an error
</ul>
@throws NetworkErrorException if the authenticator could not honor the request due to a
network error"
      end

      operation 1456183 "hasFeatures"
	abstract public return_type class_ref 131511 // Bundle
	nparams 3
	  param inout name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param inout name "account" type class_ref 307639 // Account
	  param inout name "features" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the account supports all the specified authenticator specific features.
@param response to send the result back to the AccountManager, will never be null
@param account the account to check, will never be null
@param features an array of features to check, will never be null
@return a Bundle result or null if the result is to be returned via the response. The result
will contain either:
<ul>
<li> {@link AccountManager#KEY_INTENT}, or
<li> {@link AccountManager#KEY_BOOLEAN_RESULT}, true if the account has all the features,
false otherwise
<li> {@link AccountManager#KEY_ERROR_CODE} and {@link AccountManager#KEY_ERROR_MESSAGE} to
indicate an error
</ul>
@throws NetworkErrorException if the authenticator could not honor the request due to a
network error"
      end

      operation 1456311 "getAccountRemovalAllowed"
	public return_type class_ref 131511 // Bundle
	nparams 2
	  param inout name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param inout name "account" type class_ref 307639 // Account
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the removal of this account is allowed.
@param response to send the result back to the AccountManager, will never be null
@param account the account to check, will never be null
@return a Bundle result or null if the result is to be returned via the response. The result
will contain either:
<ul>
<li> {@link AccountManager#KEY_INTENT}, or
<li> {@link AccountManager#KEY_BOOLEAN_RESULT}, true if the removal of the account is
allowed, false otherwise
<li> {@link AccountManager#KEY_ERROR_CODE} and {@link AccountManager#KEY_ERROR_MESSAGE} to
indicate an error
</ul>
@throws NetworkErrorException if the authenticator could not honor the request due to a
network error"
      end

      operation 1456439 "getAccountCredentialsForCloning"
	public return_type class_ref 131511 // Bundle
	nparams 2
	  param in name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param in name "account" type class_ref 307639 // Account
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Bundle that contains whatever is required to clone the account on a different
user. The Bundle is passed to the authenticator instance in the target user via
{@link #addAccountFromCredentials(AccountAuthenticatorResponse, Account, Bundle)}.
The default implementation returns null, indicating that cloning is not supported.
@param response to send the result back to the AccountManager, will never be null
@param account the account to clone, will never be null
@return a Bundle result or null if the result is to be returned via the response.
@throws NetworkErrorException
@see {@link #addAccountFromCredentials(AccountAuthenticatorResponse, Account, Bundle)}"
      end

      operation 1456567 "addAccountFromCredentials"
	public return_type class_ref 131511 // Bundle
	nparams 3
	  param in name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param inout name "account" type class_ref 307639 // Account
	  param inout name "accountCredentials" type class_ref 131511 // Bundle
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an account based on credentials provided by the authenticator instance of another
user on the device, who has chosen to share the account with this user.
@param response to send the result back to the AccountManager, will never be null
@param account the account to clone, will never be null
@param accountCredentials the Bundle containing the required credentials to create the
account. Contents of the Bundle are only meaningful to the authenticator. This Bundle is
provided by {@link #getAccountCredentialsForCloning(AccountAuthenticatorResponse, Account)}.
@return a Bundle result or null if the result is to be returned via the response.
@throws NetworkErrorException
@see {@link #getAccountCredentialsForCloning(AccountAuthenticatorResponse, Account)}"
      end

      operation 1456695 "startAddAccountSession"
	public return_type class_ref 131511 // Bundle
	nparams 5
	  param in name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param in name "accountType" type class_ref 129591 // String
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "requiredFeatures" type class_ref 129591 // String
	  param in name "options" type class_ref 131511 // Bundle
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3}[] ${p3}, final ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Starts the add account session to authenticate user to an account of the
specified accountType. No file I/O should be performed in this call.
Account should be added to device only when {@link #finishSession} is
called after this.
<p>
Note: when overriding this method, {@link #finishSession} should be
overridden too.
</p>

@param response to send the result back to the AccountManager, will never
           be null
@param accountType the type of account to authenticate with, will never
           be null
@param authTokenType the type of auth token to retrieve after
           authenticating with the account, may be null
@param requiredFeatures a String array of authenticator-specific features
           that the account authenticated with must support, may be null
@param options a Bundle of authenticator-specific options, may be null
@return a Bundle result or null if the result is to be returned via the
        response. The result will contain either:
        <ul>
        <li>{@link AccountManager#KEY_INTENT}, or
        <li>{@link AccountManager#KEY_ACCOUNT_SESSION_BUNDLE} for adding
        the account to device later, and if account is authenticated,
        optional {@link AccountManager#KEY_PASSWORD} and
        {@link AccountManager#KEY_ACCOUNT_STATUS_TOKEN} for checking the
        status of the account, or
        <li>{@link AccountManager#KEY_ERROR_CODE} and
        {@link AccountManager#KEY_ERROR_MESSAGE} to indicate an error
        </ul>
@throws NetworkErrorException if the authenticator could not honor the
            request due to a network error
@see #finishSession(AccountAuthenticatorResponse, String, Bundle)
@hide"
      end

      operation 1456823 "startUpdateCredentialsSession"
	public return_type class_ref 131511 // Bundle
	nparams 4
	  param in name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param in name "account" type class_ref 307639 // Account
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "options" type class_ref 131511 // Bundle
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Asks user to re-authenticate for an account but defers updating the
locally stored credentials. No file I/O should be performed in this call.
Local credentials should be updated only when {@link #finishSession} is
called after this.
<p>
Note: when overriding this method, {@link #finishSession} should be
overridden too.
</p>

@param response to send the result back to the AccountManager, will never
           be null
@param account the account whose credentials are to be updated, will
           never be null
@param authTokenType the type of auth token to retrieve after updating
           the credentials, may be null
@param options a Bundle of authenticator-specific options, may be null
@return a Bundle result or null if the result is to be returned via the
        response. The result will contain either:
        <ul>
        <li>{@link AccountManager#KEY_INTENT}, or
        <li>{@link AccountManager#KEY_ACCOUNT_SESSION_BUNDLE} for
        updating the locally stored credentials later, and if account is
        re-authenticated, optional {@link AccountManager#KEY_PASSWORD}
        and {@link AccountManager#KEY_ACCOUNT_STATUS_TOKEN} for checking
        the status of the account later, or
        <li>{@link AccountManager#KEY_ERROR_CODE} and
        {@link AccountManager#KEY_ERROR_MESSAGE} to indicate an error
        </ul>
@throws NetworkErrorException if the authenticator could not honor the
            request due to a network error
@see #finishSession(AccountAuthenticatorResponse, String, Bundle)
@hide"
      end

      operation 1456951 "finishSession"
	public return_type class_ref 131511 // Bundle
	nparams 3
	  param in name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param in name "accountType" type class_ref 129591 // String
	  param in name "sessionBundle" type class_ref 131511 // Bundle
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Finishes the session started by #startAddAccountSession or
#startUpdateCredentials by installing the account to device with
AccountManager, or updating the local credentials. File I/O may be
performed in this call.
<p>
Note: when overriding this method, {@link #startAddAccountSession} and
{@link #startUpdateCredentialsSession} should be overridden too.
</p>

@param response to send the result back to the AccountManager, will never
           be null
@param accountType the type of account to authenticate with, will never
           be null
@param sessionBundle a bundle of session data created by
           {@link #startAddAccountSession} used for adding account to
           device, or by {@link #startUpdateCredentialsSession} used for
           updating local credentials.
@return a Bundle result or null if the result is to be returned via the
        response. The result will contain either:
        <ul>
        <li>{@link AccountManager#KEY_INTENT}, or
        <li>{@link AccountManager#KEY_ACCOUNT_NAME} and
        {@link AccountManager#KEY_ACCOUNT_TYPE} of the account that was
        added or local credentials were updated, or
        <li>{@link AccountManager#KEY_ERROR_CODE} and
        {@link AccountManager#KEY_ERROR_MESSAGE} to indicate an error
        </ul>
@throws NetworkErrorException if the authenticator could not honor the request due to a
            network error
@see #startAddAccountSession and #startUpdateCredentialsSession
@hide"
      end

      operation 1457079 "isCredentialsUpdateSuggested"
	public return_type class_ref 131511 // Bundle
	nparams 3
	  param in name "response" type class_ref 307767 // AccountAuthenticatorResponse
	  param inout name "account" type class_ref 307639 // Account
	  param inout name "statusToken" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 307895 // NetworkErrorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Checks if update of the account credentials is suggested.

@param response to send the result back to the AccountManager, will never be null.
@param account the account to check, will never be null
@param statusToken a String of token to check if update of credentials is suggested.
@return a Bundle result or null if the result is to be returned via the response. The result
        will contain either:
        <ul>
        <li>{@link AccountManager#KEY_BOOLEAN_RESULT}, true if update of account's
        credentials is suggested, false otherwise
        <li>{@link AccountManager#KEY_ERROR_CODE} and
        {@link AccountManager#KEY_ERROR_MESSAGE} to indicate an error
        </ul>
@throws NetworkErrorException if the authenticator could not honor the request due to a
            network error
@hide"
      end
    end

    class 307639 "Account"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Value type that represents an Account in the {@link AccountManager}. This object is
{@link Parcelable} and also overrides {@link #equals} and {@link #hashCode}, making it
suitable for use as the key of a {@link java.util.Map}"
      classrelation 627383 // <realization>
	relation 627383 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 627383 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 627511 // name (<unidirectional association>)
	relation 627511 --->
	  a role_name "name" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 627511 // name (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 627639 // type (<unidirectional association>)
	relation 627639 --->
	  a role_name "type" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 627639 // type (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 1457207 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1457335 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1457463 "Account"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param inout name "type" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1457591 "Account"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1457719 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1457847 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 627767 // CREATOR (<unidirectional association>)
	relation 627767 --->
	  a role_name "CREATOR" init_value " new Creator<Account>() {
        public Account createFromParcel(Parcel source) {
            return new Account(source);
        }

        public Account[] newArray(int size) {
            return new Account[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Account> ${name}${value};
"
	    classrelation_ref 627767 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 1457975 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 307767 "AccountAuthenticatorResponse"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Object used to communicate responses back to the AccountManager"
      classrelation 628407 // <realization>
	relation 628407 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 628407 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 628535 // TAG (<unidirectional association>)
	relation 628535 --->
	  a role_name "TAG" init_value " \"AccountAuthenticator\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 628535 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 589367 "mAccountAuthenticatorResponse"
	private explicit_type "IAccountAuthenticatorResponse"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1458999 "AccountAuthenticatorResponse"
	public explicit_return_type ""
	nparams 1
	  param inout name "response" explicit_type "IAccountAuthenticatorResponse"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 1459127 "AccountAuthenticatorResponse"
	public explicit_return_type ""
	nparams 1
	  param inout name "parcel" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1459255 "onResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1459383 "onRequestContinued"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1459511 "onError"
	public explicit_return_type "void"
	nparams 2
	  param in name "errorCode" explicit_type "int"
	  param inout name "errorMessage" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1459639 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1459767 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 628663 // CREATOR (<unidirectional association>)
	relation 628663 --->
	  a role_name "CREATOR" init_value "
            new Creator<AccountAuthenticatorResponse>() {
        public AccountAuthenticatorResponse createFromParcel(Parcel source) {
            return new AccountAuthenticatorResponse(source);
        }

        public AccountAuthenticatorResponse[] newArray(int size) {
            return new AccountAuthenticatorResponse[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AccountAuthenticatorResponse> ${name}${value};
"
	    classrelation_ref 628663 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end

    class 307895 "NetworkErrorException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 647991 // <generalisation>
	relation 647991 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 647991 // <generalisation>
	  b parent class_ref 310327 // AccountsException
      end

      operation 1489207 "NetworkErrorException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1489335 "NetworkErrorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1489463 "NetworkErrorException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 129591 // String
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1489591 "NetworkErrorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 308023 "AccountAndUser"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Used to store the Account and the UserId this account is associated with.

@hide"
      classrelation 627895 // account (<unidirectional association>)
	relation 627895 --->
	  a role_name "account" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 627895 // account (<unidirectional association>)
	  b parent class_ref 307639 // Account
      end

      attribute 589239 "userId"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1458103 "AccountAndUser"
	public explicit_return_type ""
	nparams 2
	  param inout name "account" type class_ref 307639 // Account
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1458231 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1458359 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1458487 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 308151 "AccountAuthenticatorActivity"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for implementing an Activity that is used to help implement an
AbstractAccountAuthenticator. If the AbstractAccountAuthenticator needs to use an activity
to handle the request then it can have the activity extend AccountAuthenticatorActivity.
The AbstractAccountAuthenticator passes in the response to the intent using the following:
<pre>
     intent.putExtra({@link AccountManager#KEY_ACCOUNT_AUTHENTICATOR_RESPONSE}, response);
</pre>
The activity then sets the result that is to be handed to the response via
{@link #setAccountAuthenticatorResult(android.os.Bundle)}.
This result will be sent as the result of the request when the activity finishes. If this
is never set or if it is set to null then error {@link AccountManager#ERROR_CODE_CANCELED}
will be called on the response."
      classrelation 628023 // <generalisation>
	relation 628023 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 628023 // <generalisation>
	  b parent class_ref 128183 // Activity
      end

      classrelation 628151 // mAccountAuthenticatorResponse (<unidirectional association>)
	relation 628151 --->
	  a role_name "mAccountAuthenticatorResponse" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 628151 // mAccountAuthenticatorResponse (<unidirectional association>)
	  b parent class_ref 307767 // AccountAuthenticatorResponse
      end

      classrelation 628279 // mResultBundle (<unidirectional association>)
	relation 628279 --->
	  a role_name "mResultBundle" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 628279 // mResultBundle (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      operation 1458615 "setAccountAuthenticatorResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the result that is to be sent as the result of the request that caused this
Activity to be launched. If result is null or this method is never called then
the request will be canceled.
@param result this is returned as the result of the AbstractAccountAuthenticator request"
      end

      operation 1458743 "onCreate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "icicle" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retreives the AccountAuthenticatorResponse from either the intent of the icicle, if the
icicle is non-zero.
@param icicle the save instance data of this Activity, may be null"
      end

      operation 1458871 "finish"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the result or a Constants.ERROR_CODE_CANCELED error if a result isn't present."
      end
    end

    class 308279 "AccountManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides access to a centralized registry of the user's
online accounts.  The user enters credentials (username and password) once
per account, granting applications access to online resources with
\"one-click\" approval.

<p>Different online services have different ways of handling accounts and
authentication, so the account manager uses pluggable <em>authenticator</em>
modules for different <em>account types</em>.  Authenticators (which may be
written by third parties) handle the actual details of validating account
credentials and storing account information.  For example, Google, Facebook,
and Microsoft Exchange each have their own authenticator.

<p>Many servers support some notion of an <em>authentication token</em>,
which can be used to authenticate a request to the server without sending
the user's actual password.  (Auth tokens are normally created with a
separate request which does include the user's credentials.)  AccountManager
can generate auth tokens for applications, so the application doesn't need to
handle passwords directly.  Auth tokens are normally reusable and cached by
AccountManager, but must be refreshed periodically.  It's the responsibility
of applications to <em>invalidate</em> auth tokens when they stop working so
the AccountManager knows it needs to regenerate them.

<p>Applications accessing a server normally go through these steps:

<ul>
<li>Get an instance of AccountManager using {@link #get(Context)}.

<li>List the available accounts using {@link #getAccountsByType} or
{@link #getAccountsByTypeAndFeatures}.  Normally applications will only
be interested in accounts with one particular <em>type</em>, which
identifies the authenticator.  Account <em>features</em> are used to
identify particular account subtypes and capabilities.  Both the account
type and features are authenticator-specific strings, and must be known by
the application in coordination with its preferred authenticators.

<li>Select one or more of the available accounts, possibly by asking the
user for their preference.  If no suitable accounts are available,
{@link #addAccount} may be called to prompt the user to create an
account of the appropriate type.

<li><b>Important:</b> If the application is using a previously remembered
account selection, it must make sure the account is still in the list
of accounts returned by {@link #getAccountsByType}.  Requesting an auth token
for an account no longer on the device results in an undefined failure.

<li>Request an auth token for the selected account(s) using one of the
{@link #getAuthToken} methods or related helpers.  Refer to the description
of each method for exact usage and error handling details.

<li>Make the request using the auth token.  The form of the auth token,
the format of the request, and the protocol used are all specific to the
service you are accessing.  The application may use whatever network and
protocol libraries are useful.

<li><b>Important:</b> If the request fails with an authentication error,
it could be that a cached auth token is stale and no longer honored by
the server.  The application must call {@link #invalidateAuthToken} to remove
the token from the cache, otherwise requests will continue failing!  After
invalidating the auth token, immediately go back to the \"Request an auth
token\" step above.  If the process fails the second time, then it can be
treated as a \"genuine\" authentication failure and the user notified or other
appropriate actions taken.
</ul>

<p>Some AccountManager methods may need to interact with the user to
prompt for credentials, present options, or ask the user to add an account.
The caller may choose whether to allow AccountManager to directly launch the
necessary user interface and wait for the user, or to return an Intent which
the caller may use to launch the interface, or (in some cases) to install a
notification which the user can select at any time to launch the interface.
To have AccountManager launch the interface directly, the caller must supply
the current foreground {@link Activity} context.

<p>Many AccountManager methods take {@link AccountManagerCallback} and
{@link Handler} as parameters.  These methods return immediately and
run asynchronously. If a callback is provided then
{@link AccountManagerCallback#run} will be invoked on the Handler's
thread when the request completes, successfully or not.
The result is retrieved by calling {@link AccountManagerFuture#getResult()}
on the {@link AccountManagerFuture} returned by the method (and also passed
to the callback).  This method waits for the operation to complete (if
necessary) and either returns the result or throws an exception if an error
occurred during the operation.  To make the request synchronously, call
{@link AccountManagerFuture#getResult()} immediately on receiving the
future from the method; no callback need be supplied.

<p>Requests which may block, including
{@link AccountManagerFuture#getResult()}, must never be called on
the application's main event thread.  These operations throw
{@link IllegalStateException} if they are used on the main thread."
      classrelation 628791 // TAG (<unidirectional association>)
	relation 628791 --->
	  a role_name "TAG" init_value " \"AccountManager\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 628791 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 589495 "ERROR_CODE_REMOTE_EXCEPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 589623 "ERROR_CODE_NETWORK_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 589751 "ERROR_CODE_CANCELED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 589879 "ERROR_CODE_INVALID_RESPONSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 590007 "ERROR_CODE_UNSUPPORTED_OPERATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 590135 "ERROR_CODE_BAD_ARGUMENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 590263 "ERROR_CODE_BAD_REQUEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 590391 "ERROR_CODE_BAD_AUTHENTICATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 590519 "ERROR_CODE_USER_RESTRICTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 590647 "ERROR_CODE_MANAGEMENT_DISABLED_FOR_ACCOUNT_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 101"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      classrelation 628919 // KEY_ACCOUNT_NAME (<unidirectional association>)
	relation 628919 --->
	  a role_name "KEY_ACCOUNT_NAME" init_value " \"authAccount\"" class_relation const_relation public
	    comment "
Bundle key used for the {@link String} account name in results
from methods which return information about a particular account.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 628919 // KEY_ACCOUNT_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 629047 // KEY_ACCOUNT_TYPE (<unidirectional association>)
	relation 629047 --->
	  a role_name "KEY_ACCOUNT_TYPE" init_value " \"accountType\"" class_relation const_relation public
	    comment "
Bundle key used for the {@link String} account type in results
from methods which return information about a particular account.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 629047 // KEY_ACCOUNT_TYPE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 629175 // KEY_AUTHTOKEN (<unidirectional association>)
	relation 629175 --->
	  a role_name "KEY_AUTHTOKEN" init_value " \"authtoken\"" class_relation const_relation public
	    comment "
Bundle key used for the auth token value in results
from {@link #getAuthToken} and friends.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 629175 // KEY_AUTHTOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 629303 // KEY_INTENT (<unidirectional association>)
	relation 629303 --->
	  a role_name "KEY_INTENT" init_value " \"intent\"" class_relation const_relation public
	    comment "
Bundle key used for an {@link Intent} in results from methods that
may require the caller to interact with the user.  The Intent can
be used to start the corresponding user interface activity.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 629303 // KEY_INTENT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 629431 // KEY_PASSWORD (<unidirectional association>)
	relation 629431 --->
	  a role_name "KEY_PASSWORD" init_value " \"password\"" class_relation const_relation public
	    comment "
Bundle key used to supply the password directly in options to
{@link #confirmCredentials}, rather than prompting the user with
the standard password prompt.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 629431 // KEY_PASSWORD (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 629559 // KEY_ACCOUNTS (<unidirectional association>)
	relation 629559 --->
	  a role_name "KEY_ACCOUNTS" init_value " \"accounts\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 629559 // KEY_ACCOUNTS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 629687 // KEY_ACCOUNT_AUTHENTICATOR_RESPONSE (<unidirectional association>)
	relation 629687 --->
	  a role_name "KEY_ACCOUNT_AUTHENTICATOR_RESPONSE" init_value " \"accountAuthenticatorResponse\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 629687 // KEY_ACCOUNT_AUTHENTICATOR_RESPONSE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 629815 // KEY_ACCOUNT_MANAGER_RESPONSE (<unidirectional association>)
	relation 629815 --->
	  a role_name "KEY_ACCOUNT_MANAGER_RESPONSE" init_value " \"accountManagerResponse\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 629815 // KEY_ACCOUNT_MANAGER_RESPONSE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 629943 // KEY_AUTHENTICATOR_TYPES (<unidirectional association>)
	relation 629943 --->
	  a role_name "KEY_AUTHENTICATOR_TYPES" init_value " \"authenticator_types\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 629943 // KEY_AUTHENTICATOR_TYPES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 630071 // KEY_AUTH_FAILED_MESSAGE (<unidirectional association>)
	relation 630071 --->
	  a role_name "KEY_AUTH_FAILED_MESSAGE" init_value " \"authFailedMessage\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 630071 // KEY_AUTH_FAILED_MESSAGE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 630199 // KEY_AUTH_TOKEN_LABEL (<unidirectional association>)
	relation 630199 --->
	  a role_name "KEY_AUTH_TOKEN_LABEL" init_value " \"authTokenLabelKey\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 630199 // KEY_AUTH_TOKEN_LABEL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 630327 // KEY_BOOLEAN_RESULT (<unidirectional association>)
	relation 630327 --->
	  a role_name "KEY_BOOLEAN_RESULT" init_value " \"booleanResult\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 630327 // KEY_BOOLEAN_RESULT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 630455 // KEY_ERROR_CODE (<unidirectional association>)
	relation 630455 --->
	  a role_name "KEY_ERROR_CODE" init_value " \"errorCode\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 630455 // KEY_ERROR_CODE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 630583 // KEY_ERROR_MESSAGE (<unidirectional association>)
	relation 630583 --->
	  a role_name "KEY_ERROR_MESSAGE" init_value " \"errorMessage\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 630583 // KEY_ERROR_MESSAGE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 630711 // KEY_USERDATA (<unidirectional association>)
	relation 630711 --->
	  a role_name "KEY_USERDATA" init_value " \"userdata\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 630711 // KEY_USERDATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 630839 // KEY_LAST_AUTHENTICATED_TIME (<unidirectional association>)
	relation 630839 --->
	  a role_name "KEY_LAST_AUTHENTICATED_TIME" init_value " \"lastAuthenticatedTime\"" class_relation const_relation public
	    comment "
Bundle key used to supply the last time the credentials of the account
were authenticated successfully. Time is specified in milliseconds since
epoch. Associated time is updated on successful authentication of account
on adding account, confirming credentials, or updating credentials.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 630839 // KEY_LAST_AUTHENTICATED_TIME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 630967 // KEY_CALLER_UID (<unidirectional association>)
	relation 630967 --->
	  a role_name "KEY_CALLER_UID" init_value " \"callerUid\"" class_relation const_relation public
	    comment "
Authenticators using 'customTokens' option will also get the UID of the
caller

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 630967 // KEY_CALLER_UID (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 631095 // KEY_CALLER_PID (<unidirectional association>)
	relation 631095 --->
	  a role_name "KEY_CALLER_PID" init_value " \"callerPid\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 631095 // KEY_CALLER_PID (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 631223 // KEY_ANDROID_PACKAGE_NAME (<unidirectional association>)
	relation 631223 --->
	  a role_name "KEY_ANDROID_PACKAGE_NAME" init_value " \"androidPackageName\"" class_relation const_relation public
	    comment "
The Android package of the caller will be set in the options bundle by the
{@link AccountManager} and will be passed to the AccountManagerService and
to the AccountAuthenticators. The uid of the caller will be known by the
AccountManagerService as well as the AccountAuthenticators so they will be able to
verify that the package is consistent with the uid (a uid might be shared by many
packages).

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 631223 // KEY_ANDROID_PACKAGE_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 631351 // KEY_NOTIFY_ON_FAILURE (<unidirectional association>)
	relation 631351 --->
	  a role_name "KEY_NOTIFY_ON_FAILURE" init_value " \"notifyOnAuthFailure\"" class_relation const_relation public
	    comment "
Boolean, if set and 'customTokens' the authenticator is responsible for
notifications.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 631351 // KEY_NOTIFY_ON_FAILURE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 631479 // KEY_ACCOUNT_SESSION_BUNDLE (<unidirectional association>)
	relation 631479 --->
	  a role_name "KEY_ACCOUNT_SESSION_BUNDLE" init_value " \"accountSessionBundle\"" class_relation const_relation public
	    comment "
Bundle key used for a {@link Bundle} in result from
{@link #startAddAccountSession} and friends which returns session data
for installing an account later.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SystemApi
"
	    classrelation_ref 631479 // KEY_ACCOUNT_SESSION_BUNDLE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 631607 // KEY_ACCOUNT_STATUS_TOKEN (<unidirectional association>)
	relation 631607 --->
	  a role_name "KEY_ACCOUNT_STATUS_TOKEN" init_value " \"accountStatusToken\"" class_relation const_relation public
	    comment "
Bundle key used for the {@link String} account status token in result
from {@link #startAddAccountSession} and friends which returns
information about a particular account.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SystemApi
"
	    classrelation_ref 631607 // KEY_ACCOUNT_STATUS_TOKEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 631735 // ACTION_AUTHENTICATOR_INTENT (<unidirectional association>)
	relation 631735 --->
	  a role_name "ACTION_AUTHENTICATOR_INTENT" init_value "
            \"android.accounts.AccountAuthenticator\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 631735 // ACTION_AUTHENTICATOR_INTENT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 631863 // AUTHENTICATOR_META_DATA_NAME (<unidirectional association>)
	relation 631863 --->
	  a role_name "AUTHENTICATOR_META_DATA_NAME" init_value "
            \"android.accounts.AccountAuthenticator\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 631863 // AUTHENTICATOR_META_DATA_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 631991 // AUTHENTICATOR_ATTRIBUTES_NAME (<unidirectional association>)
	relation 631991 --->
	  a role_name "AUTHENTICATOR_ATTRIBUTES_NAME" init_value " \"account-authenticator\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 631991 // AUTHENTICATOR_ATTRIBUTES_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 632119 // mContext (<unidirectional association>)
	relation 632119 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 632119 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 590775 "mService"
	const_attribute private explicit_type "IAccountManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 632247 // mMainHandler (<unidirectional association>)
	relation 632247 --->
	  a role_name "mMainHandler" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 632247 // mMainHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      classrelation 632375 // LOGIN_ACCOUNTS_CHANGED_ACTION (<unidirectional association>)
	relation 632375 --->
	  a role_name "LOGIN_ACCOUNTS_CHANGED_ACTION" init_value "
        \"android.accounts.LOGIN_ACCOUNTS_CHANGED\"" class_relation const_relation public
	    comment "
Action sent as a broadcast Intent by the AccountsService
when accounts are added, accounts are removed, or an
account's credentials (saved password, etc) are changed.

@see #addOnAccountsUpdatedListener

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 632375 // LOGIN_ACCOUNTS_CHANGED_ACTION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 1459895 "AccountManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "service" explicit_type "IAccountManager"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 1460023 "AccountManager"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "service" explicit_type "IAccountManager"
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide used for testing only"
      end

      operation 1460151 "sanitizeResult"
	class_operation public return_type class_ref 131511 // Bundle
	nparams 1
	  param inout name "result" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide for internal use only"
      end

      operation 1460279 "get"
	class_operation public return_type class_ref 308279 // AccountManager
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an AccountManager instance associated with a Context.
The {@link Context} will be used as long as the AccountManager is
active, so make sure to use a {@link Context} whose lifetime is
commensurate with any listeners registered to
{@link #addOnAccountsUpdatedListener} or similar methods.

<p>It is safe to call this method from the main thread.

<p>No permission is required to call this method.

@param context The {@link Context} to use when necessary
@return An {@link AccountManager} instance"
      end

      operation 1460407 "getPassword"
	public return_type class_ref 129591 // String
	nparams 1
	  param in name "account" type class_ref 307639 // Account
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the saved password associated with the account.
This is intended for authenticators and related code; applications
should get an auth token instead.

<p>It is safe to call this method from the main thread.

<p>This method requires the caller to have a signature match with the
authenticator that owns the specified account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
AUTHENTICATE_ACCOUNTS permission is needed for those platforms. See docs for
this function in API level 22.

@param account The account to query for a password. Must not be {@code null}.
@return The account's password, null if none or if the account doesn't exist"
      end

      operation 1460535 "getUserData"
	public return_type class_ref 129591 // String
	nparams 2
	  param in name "account" type class_ref 307639 // Account
	  param in name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the user data named by \"key\" associated with the account.
This is intended for authenticators and related code to store
arbitrary metadata along with accounts.  The meaning of the keys
and values is up to the authenticator for the account.

<p>It is safe to call this method from the main thread.

<p>This method requires the caller to have a signature match with the
authenticator that owns the specified account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
AUTHENTICATE_ACCOUNTS permission is needed for those platforms. See docs
for this function in API level 22.

@param account The account to query for user data
@return The user data, null if the account or key doesn't exist"
      end

      operation 1460663 "getAuthenticatorTypes"
	public return_type class_ref 308407 // AuthenticatorDescription
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lists the currently registered authenticators.

<p>It is safe to call this method from the main thread.

<p>No permission is required to call this method.

@return An array of {@link AuthenticatorDescription} for every
    authenticator known to the AccountManager service.  Empty (never
    null) if no authenticators are known."
      end

      operation 1460791 "getAuthenticatorTypesAsUser"
	public return_type class_ref 308407 // AuthenticatorDescription
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Lists the currently registered authenticators for a given user id.

<p>It is safe to call this method from the main thread.

<p>The caller has to be in the same user or have the permission
{@link android.Manifest.permission#INTERACT_ACROSS_USERS_FULL}.

@return An array of {@link AuthenticatorDescription} for every
    authenticator known to the AccountManager service.  Empty (never
    null) if no authenticators are known."
      end

      operation 1460919 "getAccounts"
	public return_type class_ref 307639 // Account
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
@RequiresPermission(GET_ACCOUNTS)
"
	
	
	
	comment "Lists all accounts of any type registered on the device.
Equivalent to getAccountsByType(null).

<p>It is safe to call this method from the main thread.

<p>Clients of this method that have not been granted the
{@link android.Manifest.permission#GET_ACCOUNTS} permission,
will only see those accounts managed by AbstractAccountAuthenticators whose
signature matches the client.

@return An array of {@link Account}, one for each account.  Empty
    (never null) if no accounts have been added."
      end

      operation 1461047 "getAccountsAsUser"
	public return_type class_ref 307639 // Account
	nparams 1
	  param in name "userId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
@RequiresPermission(GET_ACCOUNTS)
"
	
	
	
	comment "@hide
Lists all accounts of any type registered on the device for a given
user id. Equivalent to getAccountsByType(null).

<p>It is safe to call this method from the main thread.

<p>Clients of this method that have not been granted the
{@link android.Manifest.permission#GET_ACCOUNTS} permission,
will only see those accounts managed by AbstractAccountAuthenticators whose
signature matches the client.

@return An array of {@link Account}, one for each account.  Empty
    (never null) if no accounts have been added."
      end

      operation 1461175 "getAccountsForPackage"
	public return_type class_ref 307639 // Account
	nparams 2
	  param inout name "packageName" type class_ref 129591 // String
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "@hide
For use by internal activities. Returns the list of accounts that the calling package
is authorized to use, particularly for shared accounts.
@param packageName package name of the calling app.
@param uid the uid of the calling app.
@return the accounts that are available to this package and user."
      end

      operation 1461303 "getAccountsByTypeForPackage"
	public return_type class_ref 307639 // Account
	nparams 2
	  param inout name "type" type class_ref 129591 // String
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Returns the accounts visible to the specified package, in an environment where some apps
are not authorized to view all accounts. This method can only be called by system apps.
@param type The type of accounts to return, null to retrieve all accounts
@param packageName The package name of the app for which the accounts are to be returned
@return An array of {@link Account}, one per matching account.  Empty
    (never null) if no accounts of the specified type have been added."
      end

      operation 1461431 "getAccountsByType"
	public return_type class_ref 307639 // Account
	nparams 1
	  param inout name "type" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
@RequiresPermission(GET_ACCOUNTS)
"
	
	
	
	comment "Lists all accounts of a particular type.  The account type is a
string token corresponding to the authenticator and useful domain
of the account.  For example, there are types corresponding to Google
and Facebook.  The exact string token to use will be published somewhere
associated with the authenticator in question.

<p>It is safe to call this method from the main thread.

<p>Clients of this method that have not been granted the
{@link android.Manifest.permission#GET_ACCOUNTS} permission,
will only see those accounts managed by AbstractAccountAuthenticators whose
signature matches the client.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
GET_ACCOUNTS permission is needed for those platforms, irrespective of uid
or signature match. See docs for this function in API level 22.

@param type The type of accounts to return, null to retrieve all accounts
@return An array of {@link Account}, one per matching account.  Empty
    (never null) if no accounts of the specified type have been added."
      end

      operation 1461559 "getAccountsByTypeAsUser"
	public return_type class_ref 307639 // Account
	nparams 2
	  param inout name "type" type class_ref 129591 // String
	  param inout name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment " @hide Same as {@link #getAccountsByType(String)} but for a specific user. "
      end

      operation 1461687 "updateAppPermission"
	public explicit_return_type "void"
	nparams 4
	  param inout name "account" type class_ref 307639 // Account
	  param inout name "authTokenType" type class_ref 129591 // String
	  param in name "uid" explicit_type "int"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change whether or not an app (identified by its uid) is allowed to retrieve an authToken
for an account.
<p>
This is only meant to be used by system activities and is not in the SDK.
@param account The account whose permissions are being modified
@param authTokenType The type of token whose permissions are being modified
@param uid The uid that identifies the app which is being granted or revoked permission.
@param value true is permission is being granted, false for revoked
@hide"
      end

      operation 1461815 "getAuthTokenLabel"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 4
	  param in name "accountType" type class_ref 129591 // String
	  param in name "authTokenType" type class_ref 129591 // String
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, ${t2}<String> ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the user-friendly label associated with an authenticator's auth token.
@param accountType the type of the authenticator. must not be null.
@param authTokenType the token type. must not be null.
@param callback callback to invoke when the result is available. may be null.
@param handler the handler on which to invoke the callback, or null for the main thread
@return a future containing the label string
@hide"
      end

      operation 1461943 "hasFeatures"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 4
	  param in name "account" type class_ref 307639 // Account
	  param in name "features" type class_ref 129591 // String
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Boolean> ${name}${(}final ${t0} ${p0}, final ${t1}[] ${p1}, ${t2}<Boolean> ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@RequiresPermission(GET_ACCOUNTS)
"
	
	
	
	comment "Finds out whether a particular account has all the specified features.
Account features are authenticator-specific string tokens identifying
boolean account properties.  For example, features are used to tell
whether Google accounts have a particular service (such as Google
Calendar or Google Talk) enabled.  The feature names and their meanings
are published somewhere associated with the authenticator in question.

<p>This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#GET_ACCOUNTS} or be a signature
match with the AbstractAccountAuthenticator that manages the account.

@param account The {@link Account} to test
@param features An array of the account features to check
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Boolean,
true if the account exists and has all of the specified features."
      end

      operation 1462071 "getAccountsByTypeAndFeatures"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 4
	  param in name "type" type class_ref 129591 // String
	  param in name "features" type class_ref 129591 // String
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Account[]> ${name}${(}final ${t0} ${p0}, final ${t1}[] ${p1}, ${t2}<Account[]> ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@RequiresPermission(GET_ACCOUNTS)
"
	
	
	
	comment "Lists all accounts of a type which have certain features.  The account
type identifies the authenticator (see {@link #getAccountsByType}).
Account features are authenticator-specific string tokens identifying
boolean account properties (see {@link #hasFeatures}).

<p>Unlike {@link #getAccountsByType}, this method calls the authenticator,
which may contact the server or do other work to check account features,
so the method returns an {@link AccountManagerFuture}.

<p>This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

<p>Clients of this method that have not been granted the
{@link android.Manifest.permission#GET_ACCOUNTS} permission,
will only see those accounts managed by AbstractAccountAuthenticators whose
signature matches the client.

@param type The type of accounts to return, must not be null
@param features An array of the account features to require,
    may be null or empty

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
GET_ACCOUNTS permission is needed for those platforms, irrespective of uid
or signature match. See docs for this function in API level 22.

@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to an array of
    {@link Account}, one per account of the specified type which
    matches the requested features."
      end

      operation 1462199 "addAccountExplicitly"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "account" type class_ref 307639 // Account
	  param inout name "password" type class_ref 129591 // String
	  param inout name "userdata" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an account directly to the AccountManager. Normally used by sign-up
wizards associated with authenticators, not directly by applications.
<p>Calling this method does not update the last authenticated timestamp,
referred by {@link #KEY_LAST_AUTHENTICATED_TIME}. To update it, call
{@link #notifyAccountAuthenticated(Account)} after getting success.
However, if this method is called when it is triggered by addAccount() or
addAccountAsUser() or similar functions, then there is no need to update
timestamp manually as it is updated automatically by framework on
successful completion of the mentioned functions.
<p>It is safe to call this method from the main thread.
<p>This method requires the caller to have a signature match with the
authenticator that owns the specified account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
AUTHENTICATE_ACCOUNTS permission is needed for those platforms. See docs
for this function in API level 22.

@param account The {@link Account} to add
@param password The password to associate with the account, null for none
@param userdata String values to use for the account's userdata, null for
           none
@return True if the account was successfully added, false if the account
        already exists, the account is null, or another error occurs."
      end

      operation 1462327 "notifyAccountAuthenticated"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "account" type class_ref 307639 // Account
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the system that the account has just been authenticated. This
information may be used by other applications to verify the account. This
should be called only when the user has entered correct credentials for
the account.
<p>
It is not safe to call this method from the main thread. As such, call it
from another thread.
<p>This method requires the caller to have a signature match with the
authenticator that owns the specified account.

@param account The {@link Account} to be updated.
@return boolean {@code true} if the authentication of the account has been successfully
        acknowledged. Otherwise {@code false}."
      end

      operation 1462455 "renameAccount"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 4
	  param in name "account" type class_ref 307639 // Account
	  param in name "newName" type class_ref 129591 // String
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Account> ${name}${(}final ${t0} ${p0}, @Size(min = 1) final ${t1} ${p1}, ${t2}<Account> ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rename the specified {@link Account}.  This is equivalent to removing
the existing account and adding a new renamed account with the old
account's user data.

<p>It is safe to call this method from the main thread.

<p>This method requires the caller to have a signature match with the
authenticator that manages the specified account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator
is needed for those platforms. See docs for this function in API level 22.

@param account The {@link Account} to rename
@param newName String name to be associated with the account.
@param callback Callback to invoke when the request completes, null for
    no callback
@param handler {@link Handler} identifying the callback thread, null for
    the main thread
@return An {@link AccountManagerFuture} which resolves to the Account
    after the name change. If successful the account's name will be the
    specified new name."
      end

      operation 1462583 "getPreviousName"
	public return_type class_ref 129591 // String
	nparams 1
	  param in name "account" type class_ref 307639 // Account
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the previous name associated with the account or {@code null}, if
none. This is intended so that clients of {@link
#LOGIN_ACCOUNTS_CHANGED_ACTION} broadcasts can determine if an
authenticator has renamed an account.

<p>It is safe to call this method from the main thread.

@param account The account to query for a previous name.
@return The account's previous name, null if the account has never been
        renamed."
      end

      operation 1462711 "removeAccount"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 3
	  param in name "account" type class_ref 307639 // Account
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Boolean> ${name}${(}final ${t0} ${p0}, ${t1}<Boolean> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Removes an account from the AccountManager.  Does nothing if the account
does not exist.  Does not delete the account from the server.
The authenticator may have its own policies preventing account
deletion, in which case the account will not be deleted.

<p>This method requires the caller to have a signature match with the
authenticator that manages the specified account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
MANAGE_ACCOUNTS permission is needed for those platforms. See docs for
this function in API level 22.

@param account The {@link Account} to remove
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Boolean,
    true if the account has been successfully removed
@deprecated use
    {@link #removeAccount(Account, Activity, AccountManagerCallback, Handler)}
    instead"
      end

      operation 1462839 "removeAccount"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 4
	  param in name "account" type class_ref 307639 // Account
	  param in name "activity" type class_ref 128183 // Activity
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, ${t2}<Bundle> ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an account from the AccountManager. Does nothing if the account
does not exist.  Does not delete the account from the server.
The authenticator may have its own policies preventing account
deletion, in which case the account will not be deleted.

<p>This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

<p>This method requires the caller to have a signature match with the
authenticator that manages the specified account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
MANAGE_ACCOUNTS permission is needed for those platforms. See docs for
this function in API level 22.

@param account The {@link Account} to remove
@param activity The {@link Activity} context to use for launching a new
    authenticator-defined sub-Activity to prompt the user to delete an
    account; used only to call startActivity(); if null, the prompt
    will not be launched directly, but the {@link Intent} may be
    returned to the caller instead
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle with
    {@link #KEY_BOOLEAN_RESULT} if activity was specified and an account
    was removed or if active. If no activity was specified, the returned
    Bundle contains only {@link #KEY_INTENT} with the {@link Intent}
    needed to launch the actual account removal process, if authenticator
    needs the activity launch. If an error occurred,
    {@link AccountManagerFuture#getResult()} throws:
<ul>
<li> {@link AuthenticatorException} if no authenticator was registered for
     this account type or the authenticator failed to respond
<li> {@link OperationCanceledException} if the operation was canceled for
     any reason, including the user canceling the creation process or
     adding accounts (of this type) has been disabled by policy
</ul>"
      end

      operation 1462967 "removeAccountAsUser"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 4
	  param in name "account" type class_ref 307639 // Account
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	  param in name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Boolean> ${name}${(}final ${t0} ${p0}, ${t1}<Boolean> ${p1}, ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@see #removeAccount(Account, AccountManagerCallback, Handler)
@hide
@deprecated use
    {@link #removeAccountAsUser(Account, Activity, AccountManagerCallback, Handler)}
    instead"
      end

      operation 1463095 "removeAccountAsUser"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 5
	  param in name "account" type class_ref 307639 // Account
	  param in name "activity" type class_ref 128183 // Activity
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	  param in name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, ${t2}<Bundle> ${p2}, ${t3} ${p3}, final ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #removeAccount(Account, Activity, AccountManagerCallback, Handler)
@hide"
      end

      operation 1463223 "removeAccountExplicitly"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "account" type class_ref 307639 // Account
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an account directly. Normally used by authenticators, not
directly by applications. Does not delete the account from the server.
The authenticator may have its own policies preventing account deletion,
in which case the account will not be deleted.
<p>
It is safe to call this method from the main thread.
<p>This method requires the caller to have a signature match with the
authenticator that manages the specified account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator
is needed for those platforms. See docs for this function in API level 22.

@param account The {@link Account} to delete.
@return True if the account was successfully deleted, false if the
        account did not exist, the account is null, or another error
        occurs."
      end

      operation 1463351 "invalidateAuthToken"
	public explicit_return_type "void"
	nparams 2
	  param in name "accountType" type class_ref 129591 // String
	  param in name "authToken" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an auth token from the AccountManager's cache.  Does nothing if
the auth token is not currently in the cache.  Applications must call this
method when the auth token is found to have expired or otherwise become
invalid for authenticating requests.  The AccountManager does not validate
or expire cached auth tokens otherwise.

<p>It is safe to call this method from the main thread.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
MANAGE_ACCOUNTS or USE_CREDENTIALS permission is needed for those
platforms. See docs for this function in API level 22.

@param accountType The account type of the auth token to invalidate, must not be null
@param authToken The auth token to invalidate, may be null"
      end

      operation 1463479 "peekAuthToken"
	public return_type class_ref 129591 // String
	nparams 2
	  param in name "account" type class_ref 307639 // Account
	  param in name "authTokenType" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an auth token from the AccountManager's cache.  If no auth
token is cached for this account, null will be returned -- a new
auth token will not be generated, and the server will not be contacted.
Intended for use by the authenticator, not directly by applications.

<p>It is safe to call this method from the main thread.

<p>This method requires the caller to have a signature match with the
authenticator that manages the specified account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator
is needed for those platforms. See docs for this function in API level 22.

@param account The account for which an auth token is to be fetched. Cannot be {@code null}.
@param authTokenType The type of auth token to fetch. Cannot be {@code null}.
@return The cached auth token for this account and type, or null if
    no auth token is cached or the account does not exist.
@see #getAuthToken"
      end

      operation 1463607 "setPassword"
	public explicit_return_type "void"
	nparams 2
	  param in name "account" type class_ref 307639 // Account
	  param in name "password" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets or forgets a saved password. This modifies the local copy of the
password used to automatically authenticate the user; it does not change
the user's account password on the server. Intended for use by the
authenticator, not directly by applications.
<p>Calling this method does not update the last authenticated timestamp,
referred by {@link #KEY_LAST_AUTHENTICATED_TIME}. To update it, call
{@link #notifyAccountAuthenticated(Account)} after getting success.
<p>It is safe to call this method from the main thread.
<p>This method requires the caller to have a signature match with the
authenticator that manages the specified account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator
is needed for those platforms. See docs for this function in API level 22.

@param account The account whose password is to be set. Cannot be
           {@code null}.
@param password The password to set, null to clear the password"
      end

      operation 1463735 "clearPassword"
	public explicit_return_type "void"
	nparams 1
	  param in name "account" type class_ref 307639 // Account
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forgets a saved password.  This erases the local copy of the password;
it does not change the user's account password on the server.
Has the same effect as setPassword(account, null) but requires fewer
permissions, and may be used by applications or management interfaces
to \"sign out\" from an account.

<p>This method only successfully clear the account's password when the
caller has the same signature as the authenticator that owns the
specified account. Otherwise, this method will silently fail.

<p>It is safe to call this method from the main thread.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
MANAGE_ACCOUNTS permission is needed for those platforms. See docs for
this function in API level 22.

@param account The account whose password to clear"
      end

      operation 1463863 "setUserData"
	public explicit_return_type "void"
	nparams 3
	  param in name "account" type class_ref 307639 // Account
	  param in name "key" type class_ref 129591 // String
	  param in name "value" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets one userdata key for an account.  Intended by use for the
authenticator to stash state for itself, not directly by applications.
The meaning of the keys and values is up to the authenticator.

<p>It is safe to call this method from the main thread.

<p>This method requires the caller to have a signature match with the
authenticator that manages the specified account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator
is needed for those platforms. See docs for this function in API level 22.

@param account Account whose user data is to be set. Must not be {@code null}.
@param key String user data key to set.  Must not be null
@param value String value to set, {@code null} to clear this user data key"
      end

      operation 1463991 "setAuthToken"
	public explicit_return_type "void"
	nparams 3
	  param inout name "account" type class_ref 307639 // Account
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "authToken" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an auth token to the AccountManager cache for an account.
If the account does not exist then this call has no effect.
Replaces any previous auth token for this account and auth token type.
Intended for use by the authenticator, not directly by applications.

<p>It is safe to call this method from the main thread.

<p>This method requires the caller to have a signature match with the
authenticator that manages the specified account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator
is needed for those platforms. See docs for this function in API level 22.

@param account The account to set an auth token for
@param authTokenType The type of the auth token, see {#getAuthToken}
@param authToken The auth token to add to the cache"
      end

      operation 1464119 "blockingGetAuthToken"
	public return_type class_ref 129591 // String
	nparams 3
	  param inout name "account" type class_ref 307639 // Account
	  param inout name "authTokenType" type class_ref 129591 // String
	  param inout name "notifyAuthFailure" explicit_type "boolean"
	nexceptions 3
	  exception class_ref 308791 // OperationCanceledException
	  explicit_exception "IOException"
	  exception class_ref 308919 // AuthenticatorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This convenience helper synchronously gets an auth token with
{@link #getAuthToken(Account, String, boolean, AccountManagerCallback, Handler)}.

<p>This method may block while a network request completes, and must
never be made from the main thread.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
USE_CREDENTIALS permission is needed for those platforms. See docs for
this function in API level 22.

@param account The account to fetch an auth token for
@param authTokenType The auth token type, see {@link #getAuthToken getAuthToken()}
@param notifyAuthFailure If true, display a notification and return null
    if authentication fails; if false, prompt and wait for the user to
    re-enter correct credentials before returning
@return An auth token of the specified type for this account, or null
    if authentication fails or none can be fetched.
@throws AuthenticatorException if the authenticator failed to respond
@throws OperationCanceledException if the request was canceled for any
    reason, including the user canceling a credential request
@throws java.io.IOException if the authenticator experienced an I/O problem
    creating a new auth token, usually because of network trouble"
      end

      operation 1464247 "getAuthToken"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 6
	  param in name "account" type class_ref 307639 // Account
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "options" type class_ref 131511 // Bundle
	  param in name "activity" type class_ref 128183 // Activity
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, ${t4}<Bundle> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an auth token of the specified type for a particular account,
prompting the user for credentials if necessary.  This method is
intended for applications running in the foreground where it makes
sense to ask the user directly for a password.

<p>If a previously generated auth token is cached for this account and
type, then it is returned.  Otherwise, if a saved password is
available, it is sent to the server to generate a new auth token.
Otherwise, the user is prompted to enter a password.

<p>Some authenticators have auth token <em>types</em>, whose value
is authenticator-dependent.  Some services use different token types to
access different functionality -- for example, Google uses different auth
tokens to access Gmail and Google Calendar for the same account.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
USE_CREDENTIALS permission is needed for those platforms. See docs for
this function in API level 22.

<p>This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

@param account The account to fetch an auth token for
@param authTokenType The auth token type, an authenticator-dependent
    string token, must not be null
@param options Authenticator-specific options for the request,
    may be null or empty
@param activity The {@link Activity} context to use for launching a new
    authenticator-defined sub-Activity to prompt the user for a password
    if necessary; used only to call startActivity(); must not be null.
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle with
    at least the following fields:
<ul>
<li> {@link #KEY_ACCOUNT_NAME} - the name of the account you supplied
<li> {@link #KEY_ACCOUNT_TYPE} - the type of the account
<li> {@link #KEY_AUTHTOKEN} - the auth token you wanted
</ul>

(Other authenticator-specific values may be returned.)  If an auth token
could not be fetched, {@link AccountManagerFuture#getResult()} throws:
<ul>
<li> {@link AuthenticatorException} if the authenticator failed to respond
<li> {@link OperationCanceledException} if the operation is canceled for
     any reason, incluidng the user canceling a credential request
<li> {@link IOException} if the authenticator experienced an I/O problem
     creating a new auth token, usually because of network trouble
</ul>
If the account is no longer present on the device, the return value is
authenticator-dependent.  The caller should verify the validity of the
account before requesting an auth token."
      end

      operation 1464375 "getAuthToken"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 5
	  param in name "account" type class_ref 307639 // Account
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "notifyAuthFailure" explicit_type "boolean"
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, ${t3}<Bundle> ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Gets an auth token of the specified type for a particular account,
optionally raising a notification if the user must enter credentials.
This method is intended for background tasks and services where the
user should not be immediately interrupted with a password prompt.

<p>If a previously generated auth token is cached for this account and
type, then it is returned.  Otherwise, if a saved password is
available, it is sent to the server to generate a new auth token.
Otherwise, an {@link Intent} is returned which, when started, will
prompt the user for a password.  If the notifyAuthFailure parameter is
set, a status bar notification is also created with the same Intent,
alerting the user that they need to enter a password at some point.

<p>In that case, you may need to wait until the user responds, which
could take hours or days or forever.  When the user does respond and
supply a new password, the account manager will broadcast the
{@link #LOGIN_ACCOUNTS_CHANGED_ACTION} Intent, which applications can
use to try again.

<p>If notifyAuthFailure is not set, it is the application's
responsibility to launch the returned Intent at some point.
Either way, the result from this call will not wait for user action.

<p>Some authenticators have auth token <em>types</em>, whose value
is authenticator-dependent.  Some services use different token types to
access different functionality -- for example, Google uses different auth
tokens to access Gmail and Google Calendar for the same account.

<p>This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

@param account The account to fetch an auth token for
@param authTokenType The auth token type, an authenticator-dependent
    string token, must not be null
@param notifyAuthFailure True to add a notification to prompt the
    user for a password if necessary, false to leave that to the caller
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle with
    at least the following fields on success:
<ul>
<li> {@link #KEY_ACCOUNT_NAME} - the name of the account you supplied
<li> {@link #KEY_ACCOUNT_TYPE} - the type of the account
<li> {@link #KEY_AUTHTOKEN} - the auth token you wanted
</ul>

(Other authenticator-specific values may be returned.)  If the user
must enter credentials, the returned Bundle contains only
{@link #KEY_INTENT} with the {@link Intent} needed to launch a prompt.

If an error occurred, {@link AccountManagerFuture#getResult()} throws:
<ul>
<li> {@link AuthenticatorException} if the authenticator failed to respond
<li> {@link OperationCanceledException} if the operation is canceled for
     any reason, incluidng the user canceling a credential request
<li> {@link IOException} if the authenticator experienced an I/O problem
     creating a new auth token, usually because of network trouble
</ul>
If the account is no longer present on the device, the return value is
authenticator-dependent.  The caller should verify the validity of the
account before requesting an auth token.
@deprecated use {@link #getAuthToken(Account, String, android.os.Bundle,
boolean, AccountManagerCallback, android.os.Handler)} instead"
      end

      operation 1464503 "getAuthToken"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 6
	  param in name "account" type class_ref 307639 // Account
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "options" type class_ref 131511 // Bundle
	  param in name "notifyAuthFailure" explicit_type "boolean"
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, ${t4}<Bundle> ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an auth token of the specified type for a particular account,
optionally raising a notification if the user must enter credentials.
This method is intended for background tasks and services where the
user should not be immediately interrupted with a password prompt.

<p>If a previously generated auth token is cached for this account and
type, then it is returned.  Otherwise, if a saved password is
available, it is sent to the server to generate a new auth token.
Otherwise, an {@link Intent} is returned which, when started, will
prompt the user for a password.  If the notifyAuthFailure parameter is
set, a status bar notification is also created with the same Intent,
alerting the user that they need to enter a password at some point.

<p>In that case, you may need to wait until the user responds, which
could take hours or days or forever.  When the user does respond and
supply a new password, the account manager will broadcast the
{@link #LOGIN_ACCOUNTS_CHANGED_ACTION} Intent, which applications can
use to try again.

<p>If notifyAuthFailure is not set, it is the application's
responsibility to launch the returned Intent at some point.
Either way, the result from this call will not wait for user action.

<p>Some authenticators have auth token <em>types</em>, whose value
is authenticator-dependent.  Some services use different token types to
access different functionality -- for example, Google uses different auth
tokens to access Gmail and Google Calendar for the same account.

<p>This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
USE_CREDENTIALS permission is needed for those platforms. See docs for
this function in API level 22.

@param account The account to fetch an auth token for
@param authTokenType The auth token type, an authenticator-dependent
    string token, must not be null
@param options Authenticator-specific options for the request,
    may be null or empty
@param notifyAuthFailure True to add a notification to prompt the
    user for a password if necessary, false to leave that to the caller
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle with
    at least the following fields on success:
<ul>
<li> {@link #KEY_ACCOUNT_NAME} - the name of the account you supplied
<li> {@link #KEY_ACCOUNT_TYPE} - the type of the account
<li> {@link #KEY_AUTHTOKEN} - the auth token you wanted
</ul>

(Other authenticator-specific values may be returned.)  If the user
must enter credentials, the returned Bundle contains only
{@link #KEY_INTENT} with the {@link Intent} needed to launch a prompt.

If an error occurred, {@link AccountManagerFuture#getResult()} throws:
<ul>
<li> {@link AuthenticatorException} if the authenticator failed to respond
<li> {@link OperationCanceledException} if the operation is canceled for
     any reason, incluidng the user canceling a credential request
<li> {@link IOException} if the authenticator experienced an I/O problem
     creating a new auth token, usually because of network trouble
</ul>
If the account is no longer present on the device, the return value is
authenticator-dependent.  The caller should verify the validity of the
account before requesting an auth token."
      end

      operation 1464631 "addAccount"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 7
	  param in name "accountType" type class_ref 129591 // String
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "requiredFeatures" type class_ref 129591 // String
	  param in name "addAccountOptions" type class_ref 131511 // Bundle
	  param in name "activity" type class_ref 128183 // Activity
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2}[] ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, ${t5}<Bundle> ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Asks the user to add an account of a specified type.  The authenticator
for this account type processes this request with the appropriate user
interface.  If the user does elect to create a new account, the account
name is returned.

<p>This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
MANAGE_ACCOUNTS permission is needed for those platforms. See docs for
this function in API level 22.

@param accountType The type of account to add; must not be null
@param authTokenType The type of auth token (see {@link #getAuthToken})
    this account will need to be able to generate, null for none
@param requiredFeatures The features (see {@link #hasFeatures}) this
    account must have, null for none
@param addAccountOptions Authenticator-specific options for the request,
    may be null or empty
@param activity The {@link Activity} context to use for launching a new
    authenticator-defined sub-Activity to prompt the user to create an
    account; used only to call startActivity(); if null, the prompt
    will not be launched directly, but the necessary {@link Intent}
    will be returned to the caller instead
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle with
    these fields if activity was specified and an account was created:
<ul>
<li> {@link #KEY_ACCOUNT_NAME} - the name of the account created
<li> {@link #KEY_ACCOUNT_TYPE} - the type of the account
</ul>

If no activity was specified, the returned Bundle contains only
{@link #KEY_INTENT} with the {@link Intent} needed to launch the
actual account creation process.  If an error occurred,
{@link AccountManagerFuture#getResult()} throws:
<ul>
<li> {@link AuthenticatorException} if no authenticator was registered for
     this account type or the authenticator failed to respond
<li> {@link OperationCanceledException} if the operation was canceled for
     any reason, including the user canceling the creation process or adding accounts
     (of this type) has been disabled by policy
<li> {@link IOException} if the authenticator experienced an I/O problem
     creating a new account, usually because of network trouble
</ul>"
      end

      operation 1464759 "addAccountAsUser"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 8
	  param in name "accountType" type class_ref 129591 // String
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "requiredFeatures" type class_ref 129591 // String
	  param in name "addAccountOptions" type class_ref 131511 // Bundle
	  param in name "activity" type class_ref 128183 // Activity
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	  param in name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2}[] ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, ${t5}<Bundle> ${p5}, ${t6} ${p6}, final ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@see #addAccount(String, String, String[], Bundle, Activity, AccountManagerCallback, Handler)
@hide"
      end

      operation 1464887 "addSharedAccountsFromParentUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parentUser" type class_ref 131383 // UserHandle
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds shared accounts from a parent user to a secondary user. Adding the shared account
doesn't take effect immediately. When the target user starts up, any pending shared accounts
are attempted to be copied to the target user from the primary via calls to the
authenticator.
@param parentUser parent user
@param user target user
@hide"
      end

      operation 1465015 "copyAccountToUser"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 5
	  param in name "account" type class_ref 307639 // Account
	  param in name "fromUser" type class_ref 131383 // UserHandle
	  param in name "toUser" type class_ref 131383 // UserHandle
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Boolean> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, ${t3}<Boolean> ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies an account from one user to another user.
@param account the account to copy
@param fromUser the user to copy the account from
@param toUser the target user
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Boolean indicated wether it
succeeded.
@hide"
      end

      operation 1465143 "removeSharedAccount"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "account" type class_ref 307639 // Account
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Removes the shared account.
@param account the account to remove
@param user the user to remove the account from
@return"
      end

      operation 1465271 "getSharedAccounts"
	public return_type class_ref 307639 // Account
	nparams 1
	  param inout name "user" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
@param user
@return"
      end

      operation 1465399 "confirmCredentials"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 5
	  param in name "account" type class_ref 307639 // Account
	  param in name "options" type class_ref 131511 // Bundle
	  param in name "activity" type class_ref 128183 // Activity
	  param in name "callback" type class_ref 308663 // AccountManagerCallback
	  param in name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3}<Bundle> ${p3}, final ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Confirms that the user knows the password for an account to make extra
sure they are the owner of the account.  The user-entered password can
be supplied directly, otherwise the authenticator for this account type
prompts the user with the appropriate interface.  This method is
intended for applications which want extra assurance; for example, the
phone lock screen uses this to let the user unlock the phone with an
account password if they forget the lock pattern.

<p>If the user-entered password matches a saved password for this
account, the request is considered valid; otherwise the authenticator
verifies the password (usually by contacting the server).

<p>This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
MANAGE_ACCOUNTS permission is needed for those platforms. See docs
for this function in API level 22.

@param account The account to confirm password knowledge for
@param options Authenticator-specific options for the request;
    if the {@link #KEY_PASSWORD} string field is present, the
    authenticator may use it directly rather than prompting the user;
    may be null or empty
@param activity The {@link Activity} context to use for launching a new
    authenticator-defined sub-Activity to prompt the user to enter a
    password; used only to call startActivity(); if null, the prompt
    will not be launched directly, but the necessary {@link Intent}
    will be returned to the caller instead
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle
    with these fields if activity or password was supplied and
    the account was successfully verified:
<ul>
<li> {@link #KEY_ACCOUNT_NAME} - the name of the account verified
<li> {@link #KEY_ACCOUNT_TYPE} - the type of the account
<li> {@link #KEY_BOOLEAN_RESULT} - true to indicate success
</ul>

If no activity or password was specified, the returned Bundle contains
{@link #KEY_INTENT} with the {@link Intent} needed to launch the
password prompt.

<p>Also the returning Bundle may contain {@link
#KEY_LAST_AUTHENTICATED_TIME} indicating the last time the
credential was validated/created.

If an error occurred,{@link AccountManagerFuture#getResult()} throws:
<ul>
<li> {@link AuthenticatorException} if the authenticator failed to respond
<li> {@link OperationCanceledException} if the operation was canceled for
     any reason, including the user canceling the password prompt
<li> {@link IOException} if the authenticator experienced an I/O problem
     verifying the password, usually because of network trouble
</ul>"
      end

      operation 1465527 "confirmCredentialsAsUser"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 6
	  param in name "account" type class_ref 307639 // Account
	  param in name "options" type class_ref 131511 // Bundle
	  param in name "activity" type class_ref 128183 // Activity
	  param in name "callback" type class_ref 308663 // AccountManagerCallback
	  param in name "handler" type class_ref 132023 // Handler
	  param inout name "userHandle" type class_ref 131383 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3}<Bundle> ${p3}, final ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Same as {@link #confirmCredentials(Account, Bundle, Activity, AccountManagerCallback, Handler)}
but for the specified user."
      end

      operation 1465655 "updateCredentials"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 6
	  param in name "account" type class_ref 307639 // Account
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "options" type class_ref 131511 // Bundle
	  param in name "activity" type class_ref 128183 // Activity
	  param in name "callback" type class_ref 308663 // AccountManagerCallback
	  param in name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4}<Bundle> ${p4}, final ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Asks the user to enter a new password for an account, updating the
saved credentials for the account.  Normally this happens automatically
when the server rejects credentials during an auth token fetch, but this
can be invoked directly to ensure we have the correct credentials stored.

<p>This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
MANAGE_ACCOUNTS permission is needed for those platforms. See docs for
this function in API level 22.

@param account The account to update credentials for
@param authTokenType The credentials entered must allow an auth token
    of this type to be created (but no actual auth token is returned);
    may be null
@param options Authenticator-specific options for the request;
    may be null or empty
@param activity The {@link Activity} context to use for launching a new
    authenticator-defined sub-Activity to prompt the user to enter a
    password; used only to call startActivity(); if null, the prompt
    will not be launched directly, but the necessary {@link Intent}
    will be returned to the caller instead
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle
    with these fields if an activity was supplied and the account
    credentials were successfully updated:
<ul>
<li> {@link #KEY_ACCOUNT_NAME} - the name of the account
<li> {@link #KEY_ACCOUNT_TYPE} - the type of the account
</ul>

If no activity was specified, the returned Bundle contains
{@link #KEY_INTENT} with the {@link Intent} needed to launch the
password prompt. If an error occurred,
{@link AccountManagerFuture#getResult()} throws:
<ul>
<li> {@link AuthenticatorException} if the authenticator failed to respond
<li> {@link OperationCanceledException} if the operation was canceled for
     any reason, including the user canceling the password prompt
<li> {@link IOException} if the authenticator experienced an I/O problem
     verifying the password, usually because of network trouble
</ul>"
      end

      operation 1465783 "editProperties"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 4
	  param in name "accountType" type class_ref 129591 // String
	  param in name "activity" type class_ref 128183 // Activity
	  param in name "callback" type class_ref 308663 // AccountManagerCallback
	  param in name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2}<Bundle> ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Offers the user an opportunity to change an authenticator's settings.
These properties are for the authenticator in general, not a particular
account.  Not all authenticators support this method.

<p>This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

<p>This method requires the caller to have the same signature as the
authenticator associated with the specified account type.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
MANAGE_ACCOUNTS permission is needed for those platforms. See docs
for this function in API level 22.

@param accountType The account type associated with the authenticator
    to adjust
@param activity The {@link Activity} context to use for launching a new
    authenticator-defined sub-Activity to adjust authenticator settings;
    used only to call startActivity(); if null, the settings dialog will
    not be launched directly, but the necessary {@link Intent} will be
    returned to the caller instead
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle
    which is empty if properties were edited successfully, or
    if no activity was specified, contains only {@link #KEY_INTENT}
    needed to launch the authenticator's settings dialog.
    If an error occurred, {@link AccountManagerFuture#getResult()}
    throws:
<ul>
<li> {@link AuthenticatorException} if no authenticator was registered for
     this account type or the authenticator failed to respond
<li> {@link OperationCanceledException} if the operation was canceled for
     any reason, including the user canceling the settings dialog
<li> {@link IOException} if the authenticator experienced an I/O problem
     updating settings, usually because of network trouble
</ul>"
      end

      operation 1465911 "someUserHasAccount"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "account" type class_ref 307639 // Account
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Checks if the given account exists on any of the users on the device.
Only the system process can call this method.

@param account The account to check for existence.
@return whether any user has this account"
      end

      operation 1466039 "ensureNotOnMainThread"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1466167 "postToHandler"
	private explicit_return_type "void"
	nparams 3
	  param inout name "handler" type class_ref 132023 // Handler
	  param in name "callback" type class_ref 308663 // AccountManagerCallback
	  param in name "future" type class_ref 308535 // AccountManagerFuture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1}<Bundle> ${p1}, final ${t2}<Bundle> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1466295 "postToHandler"
	private explicit_return_type "void"
	nparams 3
	  param inout name "handler" type class_ref 132023 // Handler
	  param in name "listener" type class_ref 309047 // OnAccountsUpdateListener
	  param in name "accounts" type class_ref 307639 // Account
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, final ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 309175 "AmsTask"
	abstract visibility private 
	nactuals 1
	actual class class_ref 308535 // AccountManagerFuture
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 632503 // <realization>
	  relation 632503 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}<Bundle>"
	      classrelation_ref 632503 // <realization>
	    b parent class_ref 309303 // FutureTask
	end

	classrelation 632631 // <realization>
	  relation 632631 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 632631 // <realization>
	    b parent class_ref 308535 // AccountManagerFuture
	end

	attribute 590903 "mResponse"
	  const_attribute package explicit_type "IAccountManagerResponse"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 632759 // mHandler (<unidirectional association>)
	  relation 632759 --->
	    a role_name "mHandler" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 632759 // mHandler (<unidirectional association>)
	    b parent class_ref 132023 // Handler
	end

	classrelation 632887 // mCallback (<unidirectional association>)
	  relation 632887 --->
	    a role_name "mCallback" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Bundle> ${name}${value};
"
	      classrelation_ref 632887 // mCallback (<unidirectional association>)
	    b parent class_ref 308663 // AccountManagerCallback
	end

	classrelation 633015 // mActivity (<unidirectional association>)
	  relation 633015 --->
	    a role_name "mActivity" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 633015 // mActivity (<unidirectional association>)
	    b parent class_ref 128183 // Activity
	end

	operation 1467063 "AmsTask"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "activity" type class_ref 128183 // Activity
	    param inout name "handler" type class_ref 132023 // Handler
	    param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<Bundle> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1467191 "start"
	  public return_type class_ref 308535 // AccountManagerFuture
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1467319 "set"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "bundle" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1467447 "doWork"
	  abstract public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1467575 "internalGetResult"
	  private return_type class_ref 131511 // Bundle
	  nparams 2
	    param inout name "timeout" explicit_type "Long"
	    param inout name "unit" explicit_type "TimeUnit"
	  nexceptions 3
	    exception class_ref 308791 // OperationCanceledException
	    explicit_exception "IOException"
	    exception class_ref 308919 // AuthenticatorException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1467703 "getResult"
	  public return_type class_ref 131511 // Bundle
	  nparams 0
	  nexceptions 3
	    exception class_ref 308791 // OperationCanceledException
	    explicit_exception "IOException"
	    exception class_ref 308919 // AuthenticatorException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1467831 "getResult"
	  public return_type class_ref 131511 // Bundle
	  nparams 2
	    param in name "timeout" explicit_type "long"
	    param inout name "unit" explicit_type "TimeUnit"
	  nexceptions 3
	    exception class_ref 308791 // OperationCanceledException
	    explicit_exception "IOException"
	    exception class_ref 308919 // AuthenticatorException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1467959 "done"
	  protected explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 309431 "Response"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 633143 // <generalisation>
	    relation 633143 ---|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 633143 // <generalisation>
	      b parent class_ref 309559 // Stub
	  end

	  operation 1468087 "onResult"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "bundle" type class_ref 131511 // Bundle
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1468215 "onError"
	    public explicit_return_type "void"
	    nparams 2
	      param in name "code" explicit_type "int"
	      param inout name "message" type class_ref 129591 // String
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end
      end

      class 309687 "BaseFutureTask"
	abstract visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 633271 // <realization>
	  relation 633271 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}<T>"
	      classrelation_ref 633271 // <realization>
	    b parent class_ref 309303 // FutureTask
	end

	attribute 591031 "mResponse"
	  const_attribute public explicit_type "IAccountManagerResponse"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 633399 // mHandler (<unidirectional association>)
	  relation 633399 --->
	    a role_name "mHandler" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 633399 // mHandler (<unidirectional association>)
	    b parent class_ref 132023 // Handler
	end

	operation 1468343 "BaseFutureTask"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "handler" type class_ref 132023 // Handler
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1468471 "doWork"
	  abstract public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1468599 "bundleToResult"
	  abstract public explicit_return_type "T"
	  nparams 1
	    param inout name "bundle" type class_ref 131511 // Bundle
	  nexceptions 1
	    exception class_ref 308919 // AuthenticatorException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1468727 "postRunnableToHandler"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "runnable" explicit_type "Runnable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1468855 "startTask"
	  protected explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	class 309815 "Response"
	  visibility protected 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 633527 // <generalisation>
	    relation 633527 ---|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 633527 // <generalisation>
	      b parent class_ref 309559 // Stub
	  end

	  operation 1468983 "onResult"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "bundle" type class_ref 131511 // Bundle
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 1469111 "onError"
	    public explicit_return_type "void"
	    nparams 2
	      param in name "code" explicit_type "int"
	      param inout name "message" type class_ref 129591 // String
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end
      end

      class 309943 "Future2Task"
	abstract visibility private 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	nactuals 2
	actual class class_ref 309687 // BaseFutureTask
	  rank 0 explicit_value ""
	actual class class_ref 308535 // AccountManagerFuture
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 633655 // <realization>
	  relation 633655 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 633655 // <realization>
	    b parent class_ref 309687 // BaseFutureTask
	end

	classrelation 633783 // <realization>
	  relation 633783 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 633783 // <realization>
	    b parent class_ref 308535 // AccountManagerFuture
	end

	classrelation 633911 // mCallback (<unidirectional association>)
	  relation 633911 --->
	    a role_name "mCallback" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<T> ${name}${value};
"
	      classrelation_ref 633911 // mCallback (<unidirectional association>)
	    b parent class_ref 308663 // AccountManagerCallback
	end

	operation 1469239 "Future2Task"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "handler" type class_ref 132023 // Handler
	    param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}<T> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1469367 "done"
	  protected explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1469495 "start"
	  public return_type class_ref 309943 // Future2Task
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1469623 "internalGetResult"
	  private explicit_return_type "T"
	  nparams 2
	    param inout name "timeout" explicit_type "Long"
	    param inout name "unit" explicit_type "TimeUnit"
	  nexceptions 3
	    exception class_ref 308791 // OperationCanceledException
	    explicit_exception "IOException"
	    exception class_ref 308919 // AuthenticatorException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1469751 "getResult"
	  public explicit_return_type "T"
	  nparams 0
	  nexceptions 3
	    exception class_ref 308791 // OperationCanceledException
	    explicit_exception "IOException"
	    exception class_ref 308919 // AuthenticatorException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1469879 "getResult"
	  public explicit_return_type "T"
	  nparams 2
	    param in name "timeout" explicit_type "long"
	    param inout name "unit" explicit_type "TimeUnit"
	  nexceptions 3
	    exception class_ref 308791 // OperationCanceledException
	    explicit_exception "IOException"
	    exception class_ref 308919 // AuthenticatorException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 1470007 "convertErrorToException"
	private explicit_return_type "Exception"
	nparams 2
	  param in name "code" explicit_type "int"
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 310071 "GetAuthTokenByTypeAndFeaturesTask"
	visibility private 
	nactuals 1
	actual class class_ref 308663 // AccountManagerCallback
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 634039 // <generalisation>
	  relation 634039 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 634039 // <generalisation>
	    b parent class_ref 309175 // AmsTask
	end

	classrelation 634167 // <realization>
	  relation 634167 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 634167 // <realization>
	    b parent class_ref 308663 // AccountManagerCallback
	end

	operation 1470263 "GetAuthTokenByTypeAndFeaturesTask"
	  package explicit_return_type ""
	  nparams 8
	    param in name "accountType" type class_ref 129591 // String
	    param in name "authTokenType" type class_ref 129591 // String
	    param in name "features" type class_ref 129591 // String
	    param inout name "activityForPrompting" type class_ref 128183 // Activity
	    param in name "addAccountOptions" type class_ref 131511 // Bundle
	    param in name "loginOptions" type class_ref 131511 // Bundle
	    param inout name "callback" type class_ref 308663 // AccountManagerCallback
	    param inout name "handler" type class_ref 132023 // Handler
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2}[] ${p2}, ${t3} ${p3}, final ${t4} ${p4}, final ${t5} ${p5}, ${t6}<Bundle> ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 634295 // mFuture (<unidirectional association>)
	  relation 634295 --->
	    a role_name "mFuture" init_value " null" volatile package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Bundle> ${name}${value};
"
	      classrelation_ref 634295 // mFuture (<unidirectional association>)
	    b parent class_ref 308535 // AccountManagerFuture
	end

	classrelation 634423 // mAccountType (<unidirectional association>)
	  relation 634423 --->
	    a role_name "mAccountType" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 634423 // mAccountType (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 634551 // mAuthTokenType (<unidirectional association>)
	  relation 634551 --->
	    a role_name "mAuthTokenType" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 634551 // mAuthTokenType (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 634679 // mFeatures (<unidirectional association>)
	  relation 634679 --->
	    a role_name "mFeatures" multiplicity "[]" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 634679 // mFeatures (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 634807 // mAddAccountOptions (<unidirectional association>)
	  relation 634807 --->
	    a role_name "mAddAccountOptions" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 634807 // mAddAccountOptions (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	classrelation 634935 // mLoginOptions (<unidirectional association>)
	  relation 634935 --->
	    a role_name "mLoginOptions" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 634935 // mLoginOptions (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	classrelation 635063 // mMyCallback (<unidirectional association>)
	  relation 635063 --->
	    a role_name "mMyCallback" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Bundle> ${name}${value};
"
	      classrelation_ref 635063 // mMyCallback (<unidirectional association>)
	    b parent class_ref 308663 // AccountManagerCallback
	end

	attribute 591159 "mNumAccounts"
	  volatile private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 1470391 "doWork"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 159031 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 1470519 "run"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "future" type class_ref 308535 // AccountManagerFuture
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Bundle> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 1470647 "getAuthTokenByFeatures"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 8
	  param in name "accountType" type class_ref 129591 // String
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "features" type class_ref 129591 // String
	  param in name "activity" type class_ref 128183 // Activity
	  param in name "addAccountOptions" type class_ref 131511 // Bundle
	  param in name "getAuthTokenOptions" type class_ref 131511 // Bundle
	  param in name "callback" type class_ref 308663 // AccountManagerCallback
	  param in name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2}[] ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, final ${t5} ${p5}, final ${t6}<Bundle> ${p6}, final ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This convenience helper combines the functionality of
{@link #getAccountsByTypeAndFeatures}, {@link #getAuthToken}, and
{@link #addAccount}.

<p>This method gets a list of the accounts matching the
specified type and feature set; if there is exactly one, it is
used; if there are more than one, the user is prompted to pick one;
if there are none, the user is prompted to add one.  Finally,
an auth token is acquired for the chosen account.

<p>This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

<p><b>NOTE:</b> If targeting your app to work on API level 22 and before,
MANAGE_ACCOUNTS permission is needed for those platforms. See docs for
this function in API level 22.

@param accountType The account type required
    (see {@link #getAccountsByType}), must not be null
@param authTokenType The desired auth token type
    (see {@link #getAuthToken}), must not be null
@param features Required features for the account
    (see {@link #getAccountsByTypeAndFeatures}), may be null or empty
@param activity The {@link Activity} context to use for launching new
    sub-Activities to prompt to add an account, select an account,
    and/or enter a password, as necessary; used only to call
    startActivity(); should not be null
@param addAccountOptions Authenticator-specific options to use for
    adding new accounts; may be null or empty
@param getAuthTokenOptions Authenticator-specific options to use for
    getting auth tokens; may be null or empty
@param callback Callback to invoke when the request completes,
    null for no callback
@param handler {@link Handler} identifying the callback thread,
    null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle with
    at least the following fields:
<ul>
<li> {@link #KEY_ACCOUNT_NAME} - the name of the account
<li> {@link #KEY_ACCOUNT_TYPE} - the type of the account
<li> {@link #KEY_AUTHTOKEN} - the auth token you wanted
</ul>

If an error occurred, {@link AccountManagerFuture#getResult()} throws:
<ul>
<li> {@link AuthenticatorException} if no authenticator was registered for
     this account type or the authenticator failed to respond
<li> {@link OperationCanceledException} if the operation was canceled for
     any reason, including the user canceling any operation
<li> {@link IOException} if the authenticator experienced an I/O problem
     updating settings, usually because of network trouble
</ul>"
      end

      operation 1470775 "newChooseAccountIntent"
	class_operation public return_type class_ref 131255 // Intent
	nparams 8
	  param inout name "selectedAccount" type class_ref 307639 // Account
	  param inout name "allowableAccounts" explicit_type "ArrayList<Account>"
	  param inout name "allowableAccountTypes" type class_ref 129591 // String
	  param inout name "alwaysPromptForAccount" explicit_type "boolean"
	  param inout name "descriptionOverrideText" type class_ref 129591 // String
	  param inout name "addAccountAuthTokenType" type class_ref 129591 // String
	  param inout name "addAccountRequiredFeatures" type class_ref 129591 // String
	  param inout name "addAccountOptions" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6}[] ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Deprecated in favor of {@link #newChooseAccountIntent(Account, List, String[], String,
String, String[], Bundle)}.

Returns an intent to an {@link Activity} that prompts the user to choose from a list of
accounts.
The caller will then typically start the activity by calling
<code>startActivityForResult(intent, ...);</code>.
<p>
On success the activity returns a Bundle with the account name and type specified using
keys {@link #KEY_ACCOUNT_NAME} and {@link #KEY_ACCOUNT_TYPE}.
<p>
The most common case is to call this with one account type, e.g.:
<p>
<pre>  newChooseAccountIntent(null, null, new String[]{\"com.google\"}, false, null,
null, null, null);</pre>
@param selectedAccount if specified, indicates that the {@link Account} is the currently
selected one, according to the caller's definition of selected.
@param allowableAccounts an optional {@link List} of accounts that are allowed to be
shown. If not specified then this field will not limit the displayed accounts.
@param allowableAccountTypes an optional string array of account types. These are used
both to filter the shown accounts and to filter the list of account types that are shown
when adding an account. If not specified then this field will not limit the displayed
account types when adding an account.
@param alwaysPromptForAccount boolean that is ignored.
@param descriptionOverrideText if non-null this string is used as the description in the
accounts chooser screen rather than the default
@param addAccountAuthTokenType this string is passed as the {@link #addAccount}
authTokenType parameter
@param addAccountRequiredFeatures this string array is passed as the {@link #addAccount}
requiredFeatures parameter
@param addAccountOptions This {@link Bundle} is passed as the {@link #addAccount} options
parameter
@return an {@link Intent} that can be used to launch the ChooseAccount activity flow."
      end

      operation 1470903 "newChooseAccountIntent"
	class_operation public return_type class_ref 131255 // Intent
	nparams 7
	  param inout name "selectedAccount" type class_ref 307639 // Account
	  param inout name "allowableAccounts" explicit_type "List<Account>"
	  param inout name "allowableAccountTypes" type class_ref 129591 // String
	  param inout name "descriptionOverrideText" type class_ref 129591 // String
	  param inout name "addAccountAuthTokenType" type class_ref 129591 // String
	  param inout name "addAccountRequiredFeatures" type class_ref 129591 // String
	  param inout name "addAccountOptions" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an intent to an {@link Activity} that prompts the user to choose from a list of
accounts.
The caller will then typically start the activity by calling
<code>startActivityForResult(intent, ...);</code>.
<p>
On success the activity returns a Bundle with the account name and type specified using
keys {@link #KEY_ACCOUNT_NAME} and {@link #KEY_ACCOUNT_TYPE}.
<p>
The most common case is to call this with one account type, e.g.:
<p>
<pre>  newChooseAccountIntent(null, null, new String[]{\"com.google\"}, null, null, null,
null);</pre>
@param selectedAccount if specified, indicates that the {@link Account} is the currently
selected one, according to the caller's definition of selected.
@param allowableAccounts an optional {@link List} of accounts that are allowed to be
shown. If not specified then this field will not limit the displayed accounts.
@param allowableAccountTypes an optional string array of account types. These are used
both to filter the shown accounts and to filter the list of account types that are shown
when adding an account. If not specified then this field will not limit the displayed
account types when adding an account.
@param descriptionOverrideText if non-null this string is used as the description in the
accounts chooser screen rather than the default
@param addAccountAuthTokenType this string is passed as the {@link #addAccount}
authTokenType parameter
@param addAccountRequiredFeatures this string array is passed as the {@link #addAccount}
requiredFeatures parameter
@param addAccountOptions This {@link Bundle} is passed as the {@link #addAccount} options
parameter
@return an {@link Intent} that can be used to launch the ChooseAccount activity flow."
      end

      classrelation 635191 // mAccountsUpdatedListeners (<unidirectional association>)
	relation 635191 --->
	  stereotype "HashMap"
	  a role_name "mAccountsUpdatedListeners" init_value "
            Maps.newHashMap()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Handler> ${name}${value};
"
	    classrelation_ref 635191 // mAccountsUpdatedListeners (<unidirectional association>)
	  b parent class_ref 309047 // OnAccountsUpdateListener
      end

      classrelation 635319 // mAccountsChangedBroadcastReceiver (<unidirectional association>)
	relation 635319 --->
	  a role_name "mAccountsChangedBroadcastReceiver" init_value " new BroadcastReceiver() {
        @Override
        public void onReceive(final Context context, final Intent intent) {
            final Account[] accounts = getAccounts();
            // send the result to the listeners
            synchronized (mAccountsUpdatedListeners) {
                for (Map.Entry<OnAccountsUpdateListener, Handler> entry :
                        mAccountsUpdatedListeners.entrySet()) {
                    postToHandler(entry.getValue(), entry.getKey(), accounts);
                }
            }
        }
    }" const_relation private
	    comment "
BroadcastReceiver that listens for the LOGIN_ACCOUNTS_CHANGED_ACTION intent
so that it can read the updated list of accounts and send them to the listener
in mAccountsUpdatedListeners.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 635319 // mAccountsChangedBroadcastReceiver (<unidirectional association>)
	  b parent class_ref 131895 // BroadcastReceiver
      end

      operation 1471031 "addOnAccountsUpdatedListener"
	public explicit_return_type "void"
	nparams 3
	  param in name "listener" type class_ref 309047 // OnAccountsUpdateListener
	  param inout name "handler" type class_ref 132023 // Handler
	  param inout name "updateImmediately" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@RequiresPermission(GET_ACCOUNTS)
"
	
	
	
	comment "Adds an {@link OnAccountsUpdateListener} to this instance of the
{@link AccountManager}.  This listener will be notified whenever the
list of accounts on the device changes.

<p>As long as this listener is present, the AccountManager instance
will not be garbage-collected, and neither will the {@link Context}
used to retrieve it, which may be a large Activity instance.  To avoid
memory leaks, you must remove this listener before then.  Normally
listeners are added in an Activity or Service's {@link Activity#onCreate}
and removed in {@link Activity#onDestroy}.

<p>The listener will only be informed of accounts that would be returned
to the caller via {@link #getAccounts()}. Typically this means that to
get any accounts, the caller will need to be grated the GET_ACCOUNTS
permission.

<p>It is safe to call this method from the main thread.

@param listener The listener to send notifications to
@param handler {@link Handler} identifying the thread to use
    for notifications, null for the main thread
@param updateImmediately If true, the listener will be invoked
    (on the handler thread) right away with the current account list
@throws IllegalArgumentException if listener is null
@throws IllegalStateException if listener was already added"
      end

      operation 1471159 "removeOnAccountsUpdatedListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 309047 // OnAccountsUpdateListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an {@link OnAccountsUpdateListener} previously registered with
{@link #addOnAccountsUpdatedListener}.  The listener will no longer
receive notifications of account changes.

<p>It is safe to call this method from the main thread.

<p>No permission is required to call this method.

@param listener The previously added listener to remove
@throws IllegalArgumentException if listener is null
@throws IllegalStateException if listener was not already added"
      end

      operation 1471287 "startAddAccountSession"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 7
	  param in name "accountType" type class_ref 129591 // String
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "requiredFeatures" type class_ref 129591 // String
	  param in name "options" type class_ref 131511 // Bundle
	  param in name "activity" type class_ref 128183 // Activity
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2}[] ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, ${t5}<Bundle> ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Asks the user to authenticate with an account of a specified type. The
authenticator for this account type processes this request with the
appropriate user interface. If the user does elect to authenticate with a
new account, a bundle of session data for installing the account later is
returned with optional account password and account status token.
<p>
This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.
<p>
<p>
<b>NOTE:</b> The account will not be installed to the device by calling
this api alone. #finishSession should be called after this to install the
account on device.

@param accountType The type of account to add; must not be null
@param authTokenType The type of auth token (see {@link #getAuthToken})
           this account will need to be able to generate, null for none
@param requiredFeatures The features (see {@link #hasFeatures}) this
           account must have, null for none
@param options Authenticator-specific options for the request, may be
           null or empty
@param activity The {@link Activity} context to use for launching a new
           authenticator-defined sub-Activity to prompt the user to
           create an account; used only to call startActivity(); if null,
           the prompt will not be launched directly, but the necessary
           {@link Intent} will be returned to the caller instead
@param callback Callback to invoke when the request completes, null for
           no callback
@param handler {@link Handler} identifying the callback thread, null for
           the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle with
        these fields if activity was specified and user was authenticated
        with an account:
        <ul>
        <li>{@link #KEY_ACCOUNT_SESSION_BUNDLE} - encrypted Bundle for
        adding the the to the device later.
        <li>{@link #KEY_PASSWORD} - optional, the password or password
        hash of the account.
        <li>{@link #KEY_ACCOUNT_STATUS_TOKEN} - optional, token to check
        status of the account
        </ul>
        If no activity was specified, the returned Bundle contains only
        {@link #KEY_INTENT} with the {@link Intent} needed to launch the
        actual account creation process. If authenticator doesn't support
        this method, the returned Bundle contains only
        {@link #KEY_ACCOUNT_SESSION_BUNDLE} with encrypted
        {@code options} needed to add account later. If an error
        occurred, {@link AccountManagerFuture#getResult()} throws:
        <ul>
        <li>{@link AuthenticatorException} if no authenticator was
        registered for this account type or the authenticator failed to
        respond
        <li>{@link OperationCanceledException} if the operation was
        canceled for any reason, including the user canceling the
        creation process or adding accounts (of this type) has been
        disabled by policy
        <li>{@link IOException} if the authenticator experienced an I/O
        problem creating a new account, usually because of network
        trouble
        </ul>
@see #finishSession
@hide"
      end

      operation 1471415 "startUpdateCredentialsSession"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 6
	  param in name "account" type class_ref 307639 // Account
	  param in name "authTokenType" type class_ref 129591 // String
	  param in name "options" type class_ref 131511 // Bundle
	  param in name "activity" type class_ref 128183 // Activity
	  param in name "callback" type class_ref 308663 // AccountManagerCallback
	  param in name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4}<Bundle> ${p4}, final ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Asks the user to enter a new password for an account but not updating the
saved credentials for the account until {@link #finishSession} is called.
<p>
This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.
<p>
<b>NOTE:</b> The saved credentials for the account alone will not be
updated by calling this API alone. #finishSession should be called after
this to update local credentials

@param account The account to update credentials for
@param authTokenType The credentials entered must allow an auth token of
           this type to be created (but no actual auth token is
           returned); may be null
@param options Authenticator-specific options for the request; may be
           null or empty
@param activity The {@link Activity} context to use for launching a new
           authenticator-defined sub-Activity to prompt the user to enter
           a password; used only to call startActivity(); if null, the
           prompt will not be launched directly, but the necessary
           {@link Intent} will be returned to the caller instead
@param callback Callback to invoke when the request completes, null for
           no callback
@param handler {@link Handler} identifying the callback thread, null for
           the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle with
        these fields if an activity was supplied and user was
        successfully re-authenticated to the account:
        <ul>
        <li>{@link #KEY_ACCOUNT_SESSION_BUNDLE} - encrypted Bundle for
        updating the local credentials on device later.
        <li>{@link #KEY_PASSWORD} - optional, the password or password
        hash of the account
        <li>{@link #KEY_ACCOUNT_STATUS_TOKEN} - optional, token to check
        status of the account
        </ul>
        If no activity was specified, the returned Bundle contains
        {@link #KEY_INTENT} with the {@link Intent} needed to launch the
        password prompt. If an error occurred,
        {@link AccountManagerFuture#getResult()} throws:
        <ul>
        <li>{@link AuthenticatorException} if the authenticator failed to
        respond
        <li>{@link OperationCanceledException} if the operation was
        canceled for any reason, including the user canceling the
        password prompt
        <li>{@link IOException} if the authenticator experienced an I/O
        problem verifying the password, usually because of network
        trouble
        </ul>
@see #finishSession
@hide"
      end

      operation 1471543 "finishSession"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 4
	  param in name "sessionBundle" type class_ref 131511 // Bundle
	  param in name "activity" type class_ref 128183 // Activity
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, ${t2}<Bundle> ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Finishes the session started by {@link #startAddAccountSession} or
{@link #startUpdateCredentialsSession}. This will either add the account
to AccountManager or update the local credentials stored.
<p>
This method may be called from any thread, but the returned
{@link AccountManagerFuture} must not be used on the main thread.

@param sessionBundle a {@link Bundle} created by {@link #startAddAccountSession} or
           {@link #startUpdateCredentialsSession}
@param activity The {@link Activity} context to use for launching a new
           authenticator-defined sub-Activity to prompt the user to
           create an account or reauthenticate existing account; used
           only to call startActivity(); if null, the prompt will not
           be launched directly, but the necessary {@link Intent} will
           be returned to the caller instead
@param callback Callback to invoke when the request completes, null for
           no callback
@param handler {@link Handler} identifying the callback thread, null for
           the main thread
@return An {@link AccountManagerFuture} which resolves to a Bundle with
        these fields if an activity was supplied and an account was added
        to device or local credentials were updated::
        <ul>
        <li>{@link #KEY_ACCOUNT_NAME} - the name of the account created
        <li>{@link #KEY_ACCOUNT_TYPE} - the type of the account
        </ul>
        If no activity was specified and additional information is needed
        from user, the returned Bundle may contains only
        {@link #KEY_INTENT} with the {@link Intent} needed to launch the
        actual account creation process. If an error occurred,
        {@link AccountManagerFuture#getResult()} throws:
        <ul>
        <li>{@link AuthenticatorException} if no authenticator was
        registered for this account type or the authenticator failed to
        respond
        <li>{@link OperationCanceledException} if the operation was
        canceled for any reason, including the user canceling the
        creation process or adding accounts (of this type) has been
        disabled by policy
        <li>{@link IOException} if the authenticator experienced an I/O
        problem creating a new account, usually because of network
        trouble
        </ul>
@see #startAddAccountSession and #startUpdateCredentialsSession
@hide"
      end

      operation 1471671 "finishSessionAsUser"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 5
	  param in name "sessionBundle" type class_ref 131511 // Bundle
	  param in name "activity" type class_ref 128183 // Activity
	  param in name "userHandle" type class_ref 131383 // UserHandle
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Bundle> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, ${t3}<Bundle> ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "@see #finishSession
@hide"
      end

      operation 1471799 "isCredentialsUpdateSuggested"
	public return_type class_ref 308535 // AccountManagerFuture
	nparams 4
	  param in name "account" type class_ref 307639 // Account
	  param in name "statusToken" type class_ref 129591 // String
	  param inout name "callback" type class_ref 308663 // AccountManagerCallback
	  param inout name "handler" type class_ref 132023 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Boolean> ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, ${t2}<Boolean> ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	
	comment "Checks whether {@link #updateCredentials} or {@link #startUpdateCredentialsSession} should be
called with respect to the specified account.
<p>
This method may be called from any thread, but the returned {@link AccountManagerFuture} must
not be used on the main thread.

@param account The {@link Account} to be checked whether {@link #updateCredentials} or
{@link #startUpdateCredentialsSession} should be called
@param statusToken a String of token to check account staus
@param callback Callback to invoke when the request completes, null for no callback
@param handler {@link Handler} identifying the callback thread, null for the main thread
@return An {@link AccountManagerFuture} which resolves to a Boolean, true if the credentials
        of the account should be updated.
@hide"
      end
    end

    class 308407 "AuthenticatorDescription"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@link Parcelable} value type that contains information about an account authenticator."
      classrelation 635831 // <realization>
	relation 635831 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 635831 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 635959 // type (<unidirectional association>)
	relation 635959 --->
	  a role_name "type" const_relation public
	    comment " The string that uniquely identifies an authenticator 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 635959 // type (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 591415 "labelId"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A resource id of a label for the authenticator that is suitable for displaying "
      end

      attribute 591543 "iconId"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A resource id of a icon for the authenticator "
      end

      attribute 591671 "smallIconId"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A resource id of a smaller icon for the authenticator "
      end

      attribute 591799 "accountPreferencesId"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A resource id for a hierarchy of PreferenceScreen to be added to the settings page for the
account. See {@link AbstractAccountAuthenticator} for an example.
"
      end

      classrelation 636087 // packageName (<unidirectional association>)
	relation 636087 --->
	  a role_name "packageName" const_relation public
	    comment " The package name that can be used to lookup the resources from above. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 636087 // packageName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 591927 "customTokens"
	const_attribute public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Authenticator handles its own token caching and permission screen "
      end

      operation 1473207 "AuthenticatorDescription"
	public explicit_return_type ""
	nparams 7
	  param inout name "type" type class_ref 129591 // String
	  param inout name "packageName" type class_ref 129591 // String
	  param in name "labelId" explicit_type "int"
	  param in name "iconId" explicit_type "int"
	  param in name "smallIconId" explicit_type "int"
	  param in name "prefId" explicit_type "int"
	  param inout name "customTokens" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A constructor for a full AuthenticatorDescription "
      end

      operation 1473335 "AuthenticatorDescription"
	public explicit_return_type ""
	nparams 6
	  param inout name "type" type class_ref 129591 // String
	  param inout name "packageName" type class_ref 129591 // String
	  param in name "labelId" explicit_type "int"
	  param in name "iconId" explicit_type "int"
	  param in name "smallIconId" explicit_type "int"
	  param in name "prefId" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1473463 "newKey"
	class_operation public return_type class_ref 308407 // AuthenticatorDescription
	nparams 1
	  param inout name "type" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A factory method for creating an AuthenticatorDescription that can be used as a key
to identify the authenticator by its type."
      end

      operation 1473591 "AuthenticatorDescription"
	private explicit_return_type ""
	nparams 1
	  param inout name "type" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1473719 "AuthenticatorDescription"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1473847 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 1473975 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the hashcode of the type only. "
      end

      operation 1474103 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Compares the type only, suitable for key comparisons. "
      end

      operation 1474231 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1474359 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      classrelation 636215 // CREATOR (<unidirectional association>)
	relation 636215 --->
	  a role_name "CREATOR" init_value "
            new Creator<AuthenticatorDescription>() {
        /** @inheritDoc */
        public AuthenticatorDescription createFromParcel(Parcel source) {
            return new AuthenticatorDescription(source);
        }

        /** @inheritDoc */
        public AuthenticatorDescription[] newArray(int size) {
            return new AuthenticatorDescription[size];
        }
    }" class_relation const_relation public
	    comment " Used to create the object from a parcel. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AuthenticatorDescription> ${name}${value};
"
	    classrelation_ref 636215 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end

    class 308535 "AccountManagerFuture"
      visibility public stereotype "interface"
      nformals 1
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A <tt>AccountManagerFuture</tt> represents the result of an asynchronous
{@link AccountManager} call.  Methods are provided to check if the computation is
complete, to wait for its completion, and to retrieve the result of
the computation.  The result can only be retrieved using method
<tt>get</tt> when the computation has completed, blocking if
necessary until it is ready.  Cancellation is performed by the
<tt>cancel</tt> method.  Additional methods are provided to
determine if the task completed normally or was cancelled. Once a
computation has completed, the computation cannot be cancelled.
If you would like to use a <tt>Future</tt> for the sake
of cancellability but not provide a usable result, you can
declare types of the form <tt>Future&lt;?&gt;</tt> and
return <tt>null</tt> as a result of the underlying task."
      operation 1466423 "cancel"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "mayInterruptIfRunning" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to cancel execution of this task.  This attempt will
fail if the task has already completed, has already been cancelled,
or could not be cancelled for some other reason. If successful,
and this task has not started when <tt>cancel</tt> is called,
this task should never run.  If the task has already started,
then the <tt>mayInterruptIfRunning</tt> parameter determines
whether the thread executing this task should be interrupted in
an attempt to stop the task.

<p>After this method returns, subsequent calls to {@link #isDone} will
always return <tt>true</tt>.  Subsequent calls to {@link #isCancelled}
will always return <tt>true</tt> if this method returned <tt>true</tt>.

@param mayInterruptIfRunning <tt>true</tt> if the thread executing this
task should be interrupted; otherwise, in-progress tasks are allowed
to complete
@return <tt>false</tt> if the task could not be cancelled,
typically because it has already completed normally;
<tt>true</tt> otherwise"
      end

      operation 1466551 "isCancelled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this task was cancelled before it completed
normally.

@return <tt>true</tt> if this task was cancelled before it completed"
      end

      operation 1466679 "isDone"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <tt>true</tt> if this task completed.

Completion may be due to normal termination, an exception, or
cancellation -- in all of these cases, this method will return
<tt>true</tt>.

@return <tt>true</tt> if this task completed"
      end

      operation 1466807 "getResult"
	public explicit_return_type "V"
	nparams 0
	nexceptions 3
	  exception class_ref 308791 // OperationCanceledException
	  explicit_exception "IOException"
	  exception class_ref 308919 // AuthenticatorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accessor for the future result the {@link AccountManagerFuture} represents. This
call will block until the result is available. In order to check if the result is
available without blocking, one may call {@link #isDone()} and  {@link #isCancelled()}.
If the request that generated this result fails or is canceled then an exception
will be thrown rather than the call returning normally.
@return the actual result
@throws android.accounts.OperationCanceledException if the request was canceled for any
reason (including if it is forbidden
by policy to modify an account (of that type))
@throws android.accounts.AuthenticatorException if there was an error communicating with
the authenticator or if the authenticator returned an invalid response
@throws java.io.IOException if the authenticator returned an error response that indicates
that it encountered an IOException while communicating with the authentication server"
      end

      operation 1466935 "getResult"
	public explicit_return_type "V"
	nparams 2
	  param in name "timeout" explicit_type "long"
	  param inout name "unit" explicit_type "TimeUnit"
	nexceptions 3
	  exception class_ref 308791 // OperationCanceledException
	  explicit_exception "IOException"
	  exception class_ref 308919 // AuthenticatorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accessor for the future result the {@link AccountManagerFuture} represents. This
call will block until the result is available. In order to check if the result is
available without blocking, one may call {@link #isDone()} and  {@link #isCancelled()}.
If the request that generated this result fails or is canceled then an exception
will be thrown rather than the call returning normally. If a timeout is specified then
the request will automatically be canceled if it does not complete in that amount of time.
@param timeout the maximum time to wait
@param unit the time unit of the timeout argument. This must not be null.
@return the actual result
@throws android.accounts.OperationCanceledException if the request was canceled for any
reason
@throws android.accounts.AuthenticatorException if there was an error communicating with
the authenticator or if the authenticator returned an invalid response
@throws java.io.IOException if the authenticator returned an error response that indicates
that it encountered an IOException while communicating with the authentication server"
      end
    end

    class 308663 "AccountManagerCallback"
      visibility public stereotype "interface"
      nformals 1
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1470135 "run"
	public explicit_return_type "void"
	nparams 1
	  param inout name "future" type class_ref 308535 // AccountManagerFuture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<V> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 308791 "OperationCanceledException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 648119 // <generalisation>
	relation 648119 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 648119 // <generalisation>
	  b parent class_ref 310327 // AccountsException
      end

      operation 1489847 "OperationCanceledException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1489975 "OperationCanceledException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1490103 "OperationCanceledException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 129591 // String
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1490231 "OperationCanceledException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 308919 "AuthenticatorException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 636343 // <generalisation>
	relation 636343 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 636343 // <generalisation>
	  b parent class_ref 310327 // AccountsException
      end

      operation 1474487 "AuthenticatorException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1474615 "AuthenticatorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1474743 "AuthenticatorException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 129591 // String
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1474871 "AuthenticatorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 309047 "OnAccountsUpdateListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An interface that contains the callback used by the AccountManager"
      operation 1489719 "onAccountsUpdated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "accounts" type class_ref 307639 // Account
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This invoked when the AccountManager starts up and whenever the account
set changes.
@param accounts the current accounts"
      end
    end

    class 310199 "AccountManagerResponse"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Used to return a response to the AccountManager.
@hide"
      classrelation 635447 // <realization>
	relation 635447 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 635447 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 591287 "mResponse"
	private explicit_type "IAccountManagerResponse"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1471927 "AccountManagerResponse"
	public explicit_return_type ""
	nparams 1
	  param inout name "response" explicit_type "IAccountManagerResponse"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 1472055 "AccountManagerResponse"
	public explicit_return_type ""
	nparams 1
	  param inout name "parcel" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 1472183 "onResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1472311 "onError"
	public explicit_return_type "void"
	nparams 2
	  param in name "errorCode" explicit_type "int"
	  param inout name "errorMessage" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1472439 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 1472567 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      classrelation 635575 // CREATOR (<unidirectional association>)
	relation 635575 --->
	  a role_name "CREATOR" init_value "
            new Creator<AccountManagerResponse>() {
        public AccountManagerResponse createFromParcel(Parcel source) {
            return new AccountManagerResponse(source);
        }

        public AccountManagerResponse[] newArray(int size) {
            return new AccountManagerResponse[size];
        }
    }" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AccountManagerResponse> ${name}${value};
"
	    classrelation_ref 635575 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end

    class 310327 "AccountsException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 635703 // <generalisation>
	relation 635703 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 635703 // <generalisation>
	  b parent class_ref 190647 // Exception
      end

      operation 1472695 "AccountsException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1472823 "AccountsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1472951 "AccountsException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 129591 // String
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1473079 "AccountsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 310455 "CantAddAccountActivity"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide
Just shows an error message about the account restrictions for the limited user."
      classrelation 636471 // <generalisation>
	relation 636471 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 636471 // <generalisation>
	  b parent class_ref 128183 // Activity
      end

      classrelation 636599 // EXTRA_ERROR_CODE (<unidirectional association>)
	relation 636599 --->
	  a role_name "EXTRA_ERROR_CODE" init_value " \"android.accounts.extra.ERROR_CODE\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 636599 // EXTRA_ERROR_CODE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 1474999 "onCreate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1475127 "onCancelButtonClicked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 310583 "ChooseAccountActivity"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      classrelation 636727 // <generalisation>
	relation 636727 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 636727 // <generalisation>
	  b parent class_ref 128183 // Activity
      end

      classrelation 636855 // TAG (<unidirectional association>)
	relation 636855 --->
	  a role_name "TAG" init_value " \"AccountManager\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 636855 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 636983 // mAccounts (<unidirectional association>)
	relation 636983 --->
	  a role_name "mAccounts" multiplicity "[]" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 636983 // mAccounts (<unidirectional association>)
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 637111 // mAccountManagerResponse (<unidirectional association>)
	relation 637111 --->
	  a role_name "mAccountManagerResponse" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 637111 // mAccountManagerResponse (<unidirectional association>)
	  b parent class_ref 310199 // AccountManagerResponse
      end

      classrelation 637239 // mResult (<unidirectional association>)
	relation 637239 --->
	  a role_name "mResult" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 637239 // mResult (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      classrelation 637367 // mTypeToAuthDescription (<unidirectional association>)
	relation 637367 --->
	  stereotype "HashMap"
	  a role_name "mTypeToAuthDescription" init_value " new HashMap<String, AuthenticatorDescription>()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, AuthenticatorDescription> ${name}${value};
"
	    classrelation_ref 637367 // mTypeToAuthDescription (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 1475255 "onCreate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1475383 "getAuthDescriptions"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1475511 "getDrawableForType"
	private return_type class_ref 129719 // Drawable
	nparams 1
	  param inout name "accountType" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1475639 "onListItemClick"
	protected explicit_return_type "void"
	nparams 4
	  param inout name "l" type class_ref 310711 // ListView
	  param inout name "v" type class_ref 134455 // View
	  param in name "position" explicit_type "int"
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1475767 "finish"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 310839 "AccountInfo"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 637495 // name (<unidirectional association>)
	  relation 637495 --->
	    a role_name "name" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 637495 // name (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 637623 // drawable (<unidirectional association>)
	  relation 637623 --->
	    a role_name "drawable" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 637623 // drawable (<unidirectional association>)
	    b parent class_ref 129719 // Drawable
	end

	operation 1475895 "AccountInfo"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "name" type class_ref 129591 // String
	    param inout name "drawable" type class_ref 129719 // Drawable
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 310967 "ViewHolder"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 637751 // icon (<unidirectional association>)
	  relation 637751 --->
	    a role_name "icon" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 637751 // icon (<unidirectional association>)
	    b parent class_ref 267703 // ImageView
	end

	classrelation 637879 // text (<unidirectional association>)
	  relation 637879 --->
	    a role_name "text" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 637879 // text (<unidirectional association>)
	    b parent class_ref 160439 // TextView
	end
      end

      class 311095 "AccountArrayAdapter"
	visibility private 
	nactuals 1
	actual class class_ref 311223 // ArrayAdapter
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 641335 // <realization>
	  relation 641335 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 641335 // <realization>
	    b parent class_ref 311223 // ArrayAdapter
	end

	classrelation 641463 // mLayoutInflater (<unidirectional association>)
	  relation 641463 --->
	    a role_name "mLayoutInflater" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 641463 // mLayoutInflater (<unidirectional association>)
	    b parent class_ref 133815 // LayoutInflater
	end

	classrelation 641591 // mInfos (<unidirectional association>)
	  relation 641591 --->
	    a role_name "mInfos" multiplicity "[]" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 641591 // mInfos (<unidirectional association>)
	    b parent class_ref 310839 // AccountInfo
	end

	operation 1484983 "AccountArrayAdapter"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "context" type class_ref 128567 // Context
	    param in name "textViewResourceId" explicit_type "int"
	    param inout name "infos" type class_ref 310839 // AccountInfo
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1485111 "getView"
	  public return_type class_ref 134455 // View
	  nparams 3
	    param in name "position" explicit_type "int"
	    param inout name "convertView" type class_ref 134455 // View
	    param inout name "parent" type class_ref 134711 // ViewGroup
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 313399 "ChooseAccountTypeActivity"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      classrelation 641719 // <generalisation>
	relation 641719 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 641719 // <generalisation>
	  b parent class_ref 128183 // Activity
      end

      classrelation 641847 // TAG (<unidirectional association>)
	relation 641847 --->
	  a role_name "TAG" init_value " \"AccountChooser\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 641847 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 641975 // mTypeToAuthenticatorInfo (<unidirectional association>)
	relation 641975 --->
	  stereotype "HashMap"
	  a role_name "mTypeToAuthenticatorInfo" init_value " new HashMap<String, AuthInfo>()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, AuthInfo> ${name}${value};
"
	    classrelation_ref 641975 // mTypeToAuthenticatorInfo (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      class 313527 "AuthInfo"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 642231 // desc (<unidirectional association>)
	  relation 642231 --->
	    a role_name "desc" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 642231 // desc (<unidirectional association>)
	    b parent class_ref 308407 // AuthenticatorDescription
	end

	classrelation 642359 // name (<unidirectional association>)
	  relation 642359 --->
	    a role_name "name" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 642359 // name (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 642487 // drawable (<unidirectional association>)
	  relation 642487 --->
	    a role_name "drawable" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 642487 // drawable (<unidirectional association>)
	    b parent class_ref 129719 // Drawable
	end

	operation 1485623 "AuthInfo"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "desc" type class_ref 308407 // AuthenticatorDescription
	    param inout name "name" type class_ref 129591 // String
	    param inout name "drawable" type class_ref 129719 // Drawable
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 642103 // mAuthenticatorInfosToDisplay (<unidirectional association>)
	relation 642103 --->
	  stereotype "ArrayList"
	  a role_name "mAuthenticatorInfosToDisplay" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 642103 // mAuthenticatorInfosToDisplay (<unidirectional association>)
	  b parent class_ref 313527 // AuthInfo
      end

      operation 1485239 "onCreate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1485367 "setResultAndFinish"
	private explicit_return_type "void"
	nparams 1
	  param in name "type" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1485495 "buildTypeToAuthDescriptionMap"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 313655 "ViewHolder"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 642615 // icon (<unidirectional association>)
	  relation 642615 --->
	    a role_name "icon" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 642615 // icon (<unidirectional association>)
	    b parent class_ref 267703 // ImageView
	end

	classrelation 642743 // text (<unidirectional association>)
	  relation 642743 --->
	    a role_name "text" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 642743 // text (<unidirectional association>)
	    b parent class_ref 160439 // TextView
	end
      end

      class 313783 "AccountArrayAdapter"
	visibility private 
	nactuals 1
	actual class class_ref 311223 // ArrayAdapter
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 642871 // <realization>
	  relation 642871 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 642871 // <realization>
	    b parent class_ref 311223 // ArrayAdapter
	end

	classrelation 642999 // mLayoutInflater (<unidirectional association>)
	  relation 642999 --->
	    a role_name "mLayoutInflater" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 642999 // mLayoutInflater (<unidirectional association>)
	    b parent class_ref 133815 // LayoutInflater
	end

	classrelation 643127 // mInfos (<unidirectional association>)
	  relation 643127 --->
	    stereotype "ArrayList"
	    a role_name "mInfos" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 643127 // mInfos (<unidirectional association>)
	    b parent class_ref 313527 // AuthInfo
	end

	operation 1485751 "AccountArrayAdapter"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "context" type class_ref 128567 // Context
	    param in name "textViewResourceId" explicit_type "int"
	    param inout name "infos" explicit_type "ArrayList<AuthInfo>"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 1485879 "getView"
	  public return_type class_ref 134455 // View
	  nparams 3
	    param in name "position" explicit_type "int"
	    param inout name "convertView" type class_ref 134455 // View
	    param inout name "parent" type class_ref 134711 // ViewGroup
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 313911 "ChooseTypeAndAccountActivity"
      visibility public 
      nactuals 1
      actual class class_ref 308663 // AccountManagerCallback
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      classrelation 643255 // <generalisation>
	relation 643255 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 643255 // <generalisation>
	  b parent class_ref 128183 // Activity
      end

      classrelation 643383 // <realization>
	relation 643383 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 643383 // <realization>
	  b parent class_ref 308663 // AccountManagerCallback
      end

      classrelation 643511 // TAG (<unidirectional association>)
	relation 643511 --->
	  a role_name "TAG" init_value " \"AccountChooser\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 643511 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 643639 // EXTRA_ALLOWABLE_ACCOUNTS_ARRAYLIST (<unidirectional association>)
	relation 643639 --->
	  a role_name "EXTRA_ALLOWABLE_ACCOUNTS_ARRAYLIST" init_value " \"allowableAccounts\"" class_relation const_relation public
	    comment "
A Parcelable ArrayList of Account objects that limits the choosable accounts to those
in this list, if this parameter is supplied.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 643639 // EXTRA_ALLOWABLE_ACCOUNTS_ARRAYLIST (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 643767 // EXTRA_ALLOWABLE_ACCOUNT_TYPES_STRING_ARRAY (<unidirectional association>)
	relation 643767 --->
	  a role_name "EXTRA_ALLOWABLE_ACCOUNT_TYPES_STRING_ARRAY" init_value " \"allowableAccountTypes\"" class_relation const_relation public
	    comment "
A Parcelable ArrayList of String objects that limits the accounts to choose to those
that match the types in this list, if this parameter is supplied. This list is also
used to filter the allowable account types if add account is selected.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 643767 // EXTRA_ALLOWABLE_ACCOUNT_TYPES_STRING_ARRAY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 643895 // EXTRA_ADD_ACCOUNT_OPTIONS_BUNDLE (<unidirectional association>)
	relation 643895 --->
	  a role_name "EXTRA_ADD_ACCOUNT_OPTIONS_BUNDLE" init_value " \"addAccountOptions\"" class_relation const_relation public
	    comment "
This is passed as the addAccountOptions parameter in AccountManager.addAccount()
if it is called.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 643895 // EXTRA_ADD_ACCOUNT_OPTIONS_BUNDLE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 644023 // EXTRA_ADD_ACCOUNT_REQUIRED_FEATURES_STRING_ARRAY (<unidirectional association>)
	relation 644023 --->
	  a role_name "EXTRA_ADD_ACCOUNT_REQUIRED_FEATURES_STRING_ARRAY" init_value "
            \"addAccountRequiredFeatures\"" class_relation const_relation public
	    comment "
This is passed as the requiredFeatures parameter in AccountManager.addAccount()
if it is called.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 644023 // EXTRA_ADD_ACCOUNT_REQUIRED_FEATURES_STRING_ARRAY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 644151 // EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING (<unidirectional association>)
	relation 644151 --->
	  a role_name "EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING" init_value " \"authTokenType\"" class_relation const_relation public
	    comment "
This is passed as the authTokenType string in AccountManager.addAccount()
if it is called.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 644151 // EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 644279 // EXTRA_SELECTED_ACCOUNT (<unidirectional association>)
	relation 644279 --->
	  a role_name "EXTRA_SELECTED_ACCOUNT" init_value " \"selectedAccount\"" class_relation const_relation public
	    comment "
If set then the specified account is already \"selected\".

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 644279 // EXTRA_SELECTED_ACCOUNT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 644407 // EXTRA_ALWAYS_PROMPT_FOR_ACCOUNT (<unidirectional association>)
	relation 644407 --->
	  a role_name "EXTRA_ALWAYS_PROMPT_FOR_ACCOUNT" init_value "
            \"alwaysPromptForAccount\"" class_relation const_relation public
	    comment "
Deprecated. Providing this extra to {@link ChooseTypeAndAccountActivity}
will have no effect.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 644407 // EXTRA_ALWAYS_PROMPT_FOR_ACCOUNT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 644535 // EXTRA_DESCRIPTION_TEXT_OVERRIDE (<unidirectional association>)
	relation 644535 --->
	  a role_name "EXTRA_DESCRIPTION_TEXT_OVERRIDE" init_value "
            \"descriptionTextOverride\"" class_relation const_relation public
	    comment "
If set then this string willb e used as the description rather than
the default.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 644535 // EXTRA_DESCRIPTION_TEXT_OVERRIDE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 593591 "REQUEST_NULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 593719 "REQUEST_CHOOSE_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 593847 "REQUEST_ADD_ACCOUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 644663 // KEY_INSTANCE_STATE_PENDING_REQUEST (<unidirectional association>)
	relation 644663 --->
	  a role_name "KEY_INSTANCE_STATE_PENDING_REQUEST" init_value " \"pendingRequest\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 644663 // KEY_INSTANCE_STATE_PENDING_REQUEST (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 644791 // KEY_INSTANCE_STATE_EXISTING_ACCOUNTS (<unidirectional association>)
	relation 644791 --->
	  a role_name "KEY_INSTANCE_STATE_EXISTING_ACCOUNTS" init_value " \"existingAccounts\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 644791 // KEY_INSTANCE_STATE_EXISTING_ACCOUNTS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 644919 // KEY_INSTANCE_STATE_SELECTED_ACCOUNT_NAME (<unidirectional association>)
	relation 644919 --->
	  a role_name "KEY_INSTANCE_STATE_SELECTED_ACCOUNT_NAME" init_value " \"selectedAccountName\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 644919 // KEY_INSTANCE_STATE_SELECTED_ACCOUNT_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 645047 // KEY_INSTANCE_STATE_SELECTED_ADD_ACCOUNT (<unidirectional association>)
	relation 645047 --->
	  a role_name "KEY_INSTANCE_STATE_SELECTED_ADD_ACCOUNT" init_value " \"selectedAddAccount\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 645047 // KEY_INSTANCE_STATE_SELECTED_ADD_ACCOUNT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 645175 // KEY_INSTANCE_STATE_ACCOUNT_LIST (<unidirectional association>)
	relation 645175 --->
	  a role_name "KEY_INSTANCE_STATE_ACCOUNT_LIST" init_value " \"accountList\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 645175 // KEY_INSTANCE_STATE_ACCOUNT_LIST (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 593975 "SELECTED_ITEM_NONE"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 645303 // mSetOfAllowableAccounts (<unidirectional association>)
	relation 645303 --->
	  stereotype "Set"
	  a role_name "mSetOfAllowableAccounts" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 645303 // mSetOfAllowableAccounts (<unidirectional association>)
	  b parent class_ref 307639 // Account
      end

      classrelation 645431 // mSetOfRelevantAccountTypes (<unidirectional association>)
	relation 645431 --->
	  stereotype "Set"
	  a role_name "mSetOfRelevantAccountTypes" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 645431 // mSetOfRelevantAccountTypes (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 645559 // mSelectedAccountName (<unidirectional association>)
	relation 645559 --->
	  a role_name "mSelectedAccountName" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 645559 // mSelectedAccountName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 594103 "mSelectedAddNewAccount"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 645687 // mDescriptionOverride (<unidirectional association>)
	relation 645687 --->
	  a role_name "mDescriptionOverride" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 645687 // mDescriptionOverride (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 645815 // mAccounts (<unidirectional association>)
	relation 645815 --->
	  stereotype "ArrayList"
	  a role_name "mAccounts" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 645815 // mAccounts (<unidirectional association>)
	  b parent class_ref 307639 // Account
      end

      attribute 594231 "mPendingRequest"
	private explicit_type "int"
	init_value " REQUEST_NULL"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 645943 // mExistingAccounts (<unidirectional association>)
	relation 645943 --->
	  a role_name "mExistingAccounts" multiplicity "[]" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 645943 // mExistingAccounts (<unidirectional association>)
	  b parent class_ref 137399 // Parcelable
      end

      attribute 594359 "mSelectedItemIndex"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 646071 // mOkButton (<unidirectional association>)
	relation 646071 --->
	  a role_name "mOkButton" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 646071 // mOkButton (<unidirectional association>)
	  b parent class_ref 268215 // Button
      end

      attribute 594487 "mCallingUid"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 646199 // mCallingPackage (<unidirectional association>)
	relation 646199 --->
	  a role_name "mCallingPackage" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 646199 // mCallingPackage (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 594615 "mDisallowAddAccounts"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 594743 "mDontShowPicker"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1486007 "onCreate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1486135 "onDestroy"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1486263 "onSaveInstanceState"
	protected explicit_return_type "void"
	nparams 1
	  param in name "outState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1486391 "onCancelButtonClicked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1486519 "onOkButtonClicked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1486647 "onActivityResult"
	protected explicit_return_type "void"
	nparams 3
	  param in name "requestCode" explicit_type "int"
	  param in name "resultCode" explicit_type "int"
	  param in name "data" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Called when the choose account type activity (for adding an account) returns.
 If it was a success read the account and set it in the result. In all cases
 return the result and finish this activity."
      end

      operation 1486775 "runAddAccountForAuthenticator"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1486903 "run"
	public explicit_return_type "void"
	nparams 1
	  param in name "accountManagerFuture" type class_ref 308535 // AccountManagerFuture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0}<Bundle> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1487031 "setNonLabelThemeAndCallSuperCreate"
	private explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The default activity theme shows label at the top. Set a theme which does
not show label, which effectively makes the activity invisible. Note that
no content is being set. If something gets set, using this theme may be
useless."
      end

      operation 1487159 "onAccountSelected"
	private explicit_return_type "void"
	nparams 1
	  param inout name "account" type class_ref 307639 // Account
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1487287 "setResultAndFinish"
	private explicit_return_type "void"
	nparams 2
	  param in name "accountName" type class_ref 129591 // String
	  param in name "accountType" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1487415 "startChooseAccountTypeActivity"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1487543 "getItemIndexToSelect"
	private explicit_return_type "int"
	nparams 3
	  param inout name "accounts" explicit_type "ArrayList<Account>"
	  param inout name "selectedAccountName" type class_ref 129591 // String
	  param inout name "selectedAddNewAccount" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return a value between 0 (inclusive) and accounts.size() (inclusive) or SELECTED_ITEM_NONE.
     An index value of accounts.size() indicates 'Add account' option."
      end

      operation 1487671 "getListOfDisplayableOptions"
	private return_type class_ref 129591 // String
	nparams 1
	  param inout name "accounts" explicit_type "ArrayList<Account>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1487799 "getAcceptableAccountChoices"
	private return_type class_ref 307639 // Account
	nparams 1
	  param inout name "accountManager" type class_ref 308279 // AccountManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a list of Account objects for each account that is acceptable. Filter out
accounts that don't match the allowable types, if provided, or that don't match the
allowable accounts, if provided."
      end

      operation 1487927 "getReleventAccountTypes"
	private return_type class_ref 129591 // String
	nparams 1
	  param in name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a set of account types specified by the intent as well as supported by the
AccountManager."
      end

      operation 1488055 "getAllowableAccountSet"
	private return_type class_ref 307639 // Account
	nparams 1
	  param in name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Set<${type}> ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of whitelisted accounts given by the intent or null if none specified by the
intent."
      end

      operation 1488183 "overrideDescriptionIfSupplied"
	private explicit_return_type "void"
	nparams 1
	  param inout name "descriptionOverride" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides the description text view for the picker activity if specified by the intent.
If not specified then makes the description invisible."
      end

      operation 1488311 "populateUIAccountList"
	private explicit_return_type "void"
	nparams 1
	  param inout name "listItems" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Populates the UI ListView with the given list of items and selects an item
based on {@code mSelectedItemIndex} member variable."
      end
    end

    class 314039 "GrantCredentialsPermissionActivity"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      classrelation 646327 // <generalisation>
	relation 646327 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 646327 // <generalisation>
	  b parent class_ref 128183 // Activity
      end

      classrelation 646455 // <realization>
	relation 646455 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 646455 // <realization>
	  b parent class_ref 142647 // OnClickListener
      end

      classrelation 646583 // EXTRAS_ACCOUNT (<unidirectional association>)
	relation 646583 --->
	  a role_name "EXTRAS_ACCOUNT" init_value " \"account\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 646583 // EXTRAS_ACCOUNT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 646711 // EXTRAS_AUTH_TOKEN_LABEL (<unidirectional association>)
	relation 646711 --->
	  a role_name "EXTRAS_AUTH_TOKEN_LABEL" init_value " \"authTokenLabel\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 646711 // EXTRAS_AUTH_TOKEN_LABEL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 646839 // EXTRAS_AUTH_TOKEN_TYPE (<unidirectional association>)
	relation 646839 --->
	  a role_name "EXTRAS_AUTH_TOKEN_TYPE" init_value " \"authTokenType\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 646839 // EXTRAS_AUTH_TOKEN_TYPE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 646967 // EXTRAS_RESPONSE (<unidirectional association>)
	relation 646967 --->
	  a role_name "EXTRAS_RESPONSE" init_value " \"response\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 646967 // EXTRAS_RESPONSE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 647095 // EXTRAS_ACCOUNT_TYPE_LABEL (<unidirectional association>)
	relation 647095 --->
	  a role_name "EXTRAS_ACCOUNT_TYPE_LABEL" init_value " \"accountTypeLabel\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 647095 // EXTRAS_ACCOUNT_TYPE_LABEL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 647223 // EXTRAS_PACKAGES (<unidirectional association>)
	relation 647223 --->
	  a role_name "EXTRAS_PACKAGES" init_value " \"application\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 647223 // EXTRAS_PACKAGES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 647351 // EXTRAS_REQUESTING_UID (<unidirectional association>)
	relation 647351 --->
	  a role_name "EXTRAS_REQUESTING_UID" init_value " \"uid\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 647351 // EXTRAS_REQUESTING_UID (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 647479 // mAccount (<unidirectional association>)
	relation 647479 --->
	  a role_name "mAccount" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 647479 // mAccount (<unidirectional association>)
	  b parent class_ref 307639 // Account
      end

      classrelation 647607 // mAuthTokenType (<unidirectional association>)
	relation 647607 --->
	  a role_name "mAuthTokenType" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 647607 // mAuthTokenType (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 594871 "mUid"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 647735 // mResultBundle (<unidirectional association>)
	relation 647735 --->
	  a role_name "mResultBundle" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 647735 // mResultBundle (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      classrelation 647863 // mInflater (<unidirectional association>)
	relation 647863 --->
	  a role_name "mInflater" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 647863 // mInflater (<unidirectional association>)
	  b parent class_ref 133815 // LayoutInflater
      end

      operation 1488439 "onCreate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1488567 "getAccountLabel"
	private return_type class_ref 129591 // String
	nparams 1
	  param inout name "account" type class_ref 307639 // Account
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1488695 "newPackageView"
	private return_type class_ref 134455 // View
	nparams 1
	  param inout name "packageLabel" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1488823 "onClick"
	public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1488951 "setAccountAuthenticatorResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1489079 "finish"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the result or a {@link AccountManager#ERROR_CODE_CANCELED} error if a
result isn't present."
      end
    end
  end

  deploymentview 147511 "accounts"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 232119 "AbstractAccountAuthenticator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.Manifest;
import android.annotation.SystemApi;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Binder;
import android.os.Bundle;
import android.os.IBinder;
import android.os.RemoteException;
import android.text.TextUtils;
import android.util.Log;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 307255 // AbstractAccountAuthenticator
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 232247 "Account"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcelable;
import android.os.Parcel;
import android.text.TextUtils;
${definition}"
      associated_classes
	class_ref 307639 // Account
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 232375 "AccountAndUser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 308023 // AccountAndUser
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 232503 "AccountAuthenticatorActivity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.os.Bundle;
${definition}"
      associated_classes
	class_ref 308151 // AccountAuthenticatorActivity
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 232631 "AccountAuthenticatorResponse"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Bundle;
import android.os.Parcelable;
import android.os.Parcel;
import android.os.RemoteException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 307767 // AccountAuthenticatorResponse
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 232759 "AccountManagerFuture"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.concurrent.TimeUnit;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 308535 // AccountManagerFuture
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 232887 "AccountManagerCallback"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 308663 // AccountManagerCallback
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 233015 "AccountManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.RequiresPermission;
import android.annotation.Size;
import android.annotation.SystemApi;
import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.res.Resources;
import android.database.SQLException;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.Parcelable;
import android.os.Process;
import android.os.RemoteException;
import android.os.UserHandle;
import android.text.TextUtils;
import android.util.Log;
import com.android.internal.R;
import com.google.android.collect.Maps;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Callable;
import java.util.concurrent.CancellationException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
${definition}"
      associated_classes
	class_ref 308279 // AccountManager
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 233143 "AccountManagerResponse"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.RemoteException;
${definition}"
      associated_classes
	class_ref 310199 // AccountManagerResponse
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 233271 "AccountsException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 310327 // AccountsException
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 233399 "AuthenticatorDescription"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcelable;
import android.os.Parcel;
${definition}"
      associated_classes
	class_ref 308407 // AuthenticatorDescription
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 233527 "AuthenticatorException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 308919 // AuthenticatorException
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 233655 "CantAddAccountActivity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import com.android.internal.R;
${definition}"
      associated_classes
	class_ref 310455 // CantAddAccountActivity
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 234807 "ChooseAccountActivity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.os.Parcelable;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import com.android.internal.R;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 310583 // ChooseAccountActivity
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 234935 "ChooseAccountTypeActivity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import com.android.internal.R;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 313399 // ChooseAccountTypeActivity
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 235063 "ChooseTypeAndAccountActivity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.google.android.collect.Sets;
import android.app.Activity;
import android.app.ActivityManagerNative;
import android.content.Intent;
import android.os.Bundle;
import android.os.IBinder;
import android.os.Parcelable;
import android.os.RemoteException;
import android.os.UserHandle;
import android.os.UserManager;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import com.android.internal.R;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 313911 // ChooseTypeAndAccountActivity
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 235191 "GrantCredentialsPermissionActivity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.content.res.Resources;
import android.os.Bundle;
import android.widget.TextView;
import android.widget.LinearLayout;
import android.view.View;
import android.view.LayoutInflater;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.text.TextUtils;
import com.android.internal.R;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 314039 // GrantCredentialsPermissionActivity
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 235319 "NetworkErrorException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 307895 // NetworkErrorException
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 235447 "OnAccountsUpdateListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 309047 // OnAccountsUpdateListener
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 235575 "OperationCanceledException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 308791 // OperationCanceledException
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
