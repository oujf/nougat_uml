class TvRemoteProviderProxy
!!!33612087.java!!!	TvRemoteProviderProxy(inout context : Context, inout componentName : ComponentName, in userId : int, in uid : int)
        mContext = context;
        mComponentName = componentName;
        mUserId = userId;
        mUid = uid;
        mHandler = new Handler();
!!!33612215.java!!!	dump(inout pw : PrintWriter, inout prefix : String) : void
        pw.println(prefix + "Proxy");
        pw.println(prefix + "  mUserId=" + mUserId);
        pw.println(prefix + "  mRunning=" + mRunning);
        pw.println(prefix + "  mBound=" + mBound);
        pw.println(prefix + "  mActiveConnection=" + mActiveConnection);
        pw.println(prefix + "  mConnectionReady=" + mConnectionReady);
!!!33612343.java!!!	setProviderSink(inout provider : TvRemoteProviderProxy::ProviderMethods) : void
        mProviderMethods = provider;
!!!33612471.java!!!	hasComponentName(inout packageName : String, inout className : String) : boolean
        return mComponentName.getPackageName().equals(packageName)
                && mComponentName.getClassName().equals(className);
!!!33612599.java!!!	start() : void
        if (!mRunning) {
            if (DEBUG) {
                Slog.d(TAG, this + ": Starting");
            }

            mRunning = true;
            updateBinding();
        }
!!!33612727.java!!!	stop() : void
        if (mRunning) {
            if (DEBUG) {
                Slog.d(TAG, this + ": Stopping");
            }

            mRunning = false;
            updateBinding();
        }
!!!33612855.java!!!	rebindIfDisconnected() : void
        synchronized (mLock) {
            if (mActiveConnection == null && shouldBind()) {
                unbind();
                bind();
            }
        }
!!!33612983.java!!!	updateBinding() : void
        if (shouldBind()) {
            bind();
        } else {
            unbind();
        }
!!!33613111.java!!!	shouldBind() : boolean
        return mRunning;
!!!33613239.java!!!	bind() : void
        if (!mBound) {
            if (DEBUG) {
                Slog.d(TAG, this + ": Binding");
            }

            Intent service = new Intent(SERVICE_INTERFACE);
            service.setComponent(mComponentName);
            try {
                mBound = mContext.bindServiceAsUser(service, this,
                        Context.BIND_AUTO_CREATE | Context.BIND_FOREGROUND_SERVICE,
                        new UserHandle(mUserId));
                if (!mBound && DEBUG) {
                    Slog.d(TAG, this + ": Bind failed");
                }
            } catch (SecurityException ex) {
                if (DEBUG) {
                    Slog.d(TAG, this + ": Bind failed", ex);
                }
            }
        }
!!!33613367.java!!!	unbind() : void
        if (mBound) {
            if (DEBUG) {
                Slog.d(TAG, this + ": Unbinding");
            }

            mBound = false;
            disconnect();
            mContext.unbindService(this);
        }
!!!33613495.java!!!	onServiceConnected(inout name : ComponentName, inout service : IBinder) : void
        if (DEBUG) {
            Slog.d(TAG, this + ": onServiceConnected()");
        }

        if (mBound) {
            disconnect();

            ITvRemoteProvider provider = ITvRemoteProvider.Stub.asInterface(service);
            if (provider != null) {
                Connection connection = new Connection(provider);
                if (connection.register()) {
                    synchronized (mLock) {
                        mActiveConnection = connection;
                    }
                    if (DEBUG) {
                        Slog.d(TAG, this + ": Connected successfully.");
                    }
                } else {
                    if (DEBUG) {
                        Slog.d(TAG, this + ": Registration failed");
                    }
                }
            } else {
                Slog.e(TAG, this + ": Service returned invalid remote-control provider binder");
            }
        }
!!!33613623.java!!!	onServiceDisconnected(inout name : ComponentName) : void
        if (DEBUG) Slog.d(TAG, this + ": Service disconnected");
        disconnect();
!!!33613751.java!!!	onConnectionReady(inout connection : TvRemoteProviderProxy::Connection) : void
        synchronized (mLock) {
            if (DEBUG) Slog.d(TAG, "onConnectionReady");
            if (mActiveConnection == connection) {
                if (DEBUG) Slog.d(TAG, "mConnectionReady = true");
                mConnectionReady = true;
            }
        }
!!!33613879.java!!!	onConnectionDied(inout connection : TvRemoteProviderProxy::Connection) : void
        if (mActiveConnection == connection) {
            if (DEBUG) Slog.d(TAG, this + ": Service connection died");
            disconnect();
        }
!!!33614007.java!!!	disconnect() : void
        synchronized (mLock) {
            if (mActiveConnection != null) {
                mConnectionReady = false;
                mActiveConnection.dispose();
                mActiveConnection = null;
            }
        }
!!!33614135.java!!!	inputBridgeConnected(inout token : IBinder) : void
        synchronized (mLock) {
            if (DEBUG) Slog.d(TAG, this + ": inputBridgeConnected token: " + token);
            if (mConnectionReady) {
                mActiveConnection.onInputBridgeConnected(token);
            }
        }
