class CatchHandlerList
!!!421047.java!!!	CatchHandlerList(in size : int)
        super(size);
!!!421175.java!!!	get(in n : int) : CatchHandlerList::Entry
        return (Entry) get0(n);
!!!421303.java!!!	toHuman() : String
        return toHuman("", "");
!!!421431.java!!!	toHuman(inout prefix : String, inout header : String) : String
        StringBuilder sb = new StringBuilder(100);
        int size = size();

        sb.append(prefix);
        sb.append(header);
        sb.append("catch ");

        for (int i = 0; i < size; i++) {
            Entry entry = get(i);

            if (i != 0) {
                sb.append(",\n");
                sb.append(prefix);
                sb.append("  ");
            }

            if ((i == (size - 1)) && catchesAll()) {
                sb.append("<any>");
            } else {
                sb.append(entry.getExceptionType().toHuman());
            }

            sb.append(" -> ");
            sb.append(Hex.u2or4(entry.getHandler()));
        }

        return sb.toString();
!!!421559.java!!!	catchesAll() : boolean
        int size = size();

        if (size == 0) {
            return false;
        }

        Entry last = get(size - 1);
        return last.getExceptionType().equals(CstType.OBJECT);
!!!421687.java!!!	set(in n : int, inout exceptionType : CstType, in handler : int) : void
        set0(n, new Entry(exceptionType, handler));
!!!421815.java!!!	set(in n : int, inout entry : CatchHandlerList::Entry) : void
        set0(n, entry);
!!!421943.java!!!	compareTo(inout other : CatchHandlerList) : int
        if (this == other) {
            // Easy out.
            return 0;
        }

        int thisSize = size();
        int otherSize = other.size();
        int checkSize = Math.min(thisSize, otherSize);

        for (int i = 0; i < checkSize; i++) {
            Entry thisEntry = get(i);
            Entry otherEntry = other.get(i);
            int compare = thisEntry.compareTo(otherEntry);
            if (compare != 0) {
                return compare;
            }
        }

        if (thisSize < otherSize) {
            return -1;
        } else if (thisSize > otherSize) {
            return 1;
        }

        return 0;
