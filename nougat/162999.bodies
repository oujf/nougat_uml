class FixedSizeList
!!!419255.java!!!	FixedSizeList(in size : int)
        super(size != 0);

        try {
            arr = new Object[size];
        } catch (NegativeArraySizeException ex) {
            // Translate the exception.
            throw new IllegalArgumentException("size < 0");
        }
!!!419383.java!!!	equals(inout other : Object) : boolean
        if (this == other) {
            // Easy out.
            return true;
        }

        if ((other == null) || (getClass() != other.getClass())) {
            // Another easy out.
            return false;
        }

        FixedSizeList list = (FixedSizeList) other;
        return Arrays.equals(arr, list.arr);
!!!419511.java!!!	hashCode() : int
        return Arrays.hashCode(arr);
!!!419639.java!!!	toString() : String
        String name = getClass().getName();

        return toString0(name.substring(name.lastIndexOf('.') + 1) + '{',
                         ", ",
                         "}",
                         false);
!!!419767.java!!!	toHuman() : String
        String name = getClass().getName();

        return toString0(name.substring(name.lastIndexOf('.') + 1) + '{',
                         ", ",
                         "}",
                         true);
!!!419895.java!!!	toString(inout prefix : String, inout separator : String, inout suffix : String) : String
        return toString0(prefix, separator, suffix, false);
!!!420023.java!!!	toHuman(inout prefix : String, inout separator : String, inout suffix : String) : String
        return toString0(prefix, separator, suffix, true);
!!!420151.java!!!	size() : int
        return arr.length;
!!!420279.java!!!	shrinkToFit() : void
        int sz = arr.length;
        int newSz = 0;

        for (int i = 0; i < sz; i++) {
            if (arr[i] != null) {
                newSz++;
            }
        }

        if (sz == newSz) {
            return;
        }

        throwIfImmutable();

        Object[] newa = new Object[newSz];
        int at = 0;

        for (int i = 0; i < sz; i++) {
            Object one = arr[i];
            if (one != null) {
                newa[at] = one;
                at++;
            }
        }

        arr = newa;
        if (newSz == 0) {
            setImmutable();
        }
!!!420407.java!!!	get0(in n : int) : Object
        try {
            Object result = arr[n];

            if (result == null) {
                throw new NullPointerException("unset: " + n);
            }

            return result;
        } catch (ArrayIndexOutOfBoundsException ex) {
            // Translate the exception.
            return throwIndex(n);
        }
!!!420535.java!!!	getOrNull0(in n : int) : Object
        return arr[n];
!!!420663.java!!!	set0(in n : int, inout obj : Object) : void
        throwIfImmutable();

        try {
            arr[n] = obj;
        } catch (ArrayIndexOutOfBoundsException ex) {
            // Translate the exception.
            throwIndex(n);
        }
!!!420791.java!!!	throwIndex(in n : int) : Object
        if (n < 0) {
            throw new IndexOutOfBoundsException("n < 0");
        }

        throw new IndexOutOfBoundsException("n >= size()");
!!!420919.java!!!	toString0(inout prefix : String, inout separator : String, inout suffix : String, inout human : boolean) : String
        int len = arr.length;
        StringBuffer sb = new StringBuffer(len * 10 + 10);

        if (prefix != null) {
            sb.append(prefix);
        }

        for (int i = 0; i < len; i++) {
            if ((i != 0) && (separator != null)) {
                sb.append(separator);
            }

            if (human) {
                sb.append(((ToHuman) arr[i]).toHuman());
            } else {
                sb.append(arr[i]);
            }
        }

        if (suffix != null) {
            sb.append(suffix);
        }

        return sb.toString();
