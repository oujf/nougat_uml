format 76
"usb" // nougat_src::frameworks::base::core::java::android::hardware::usb
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/core/java/android/hardware/usb/"
  java_package "android.hardware.usb"
  classview 160823 "usb"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 505783 "UsbAccessory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class representing a USB accessory, which is an external hardware component
that communicates with an android application over USB.
The accessory is the USB host and android the device side of the USB connection.

<p>When the accessory connects, it reports its manufacturer and model names,
the version of the accessory, and a user visible description of the accessory to the device.
The manufacturer, model and version strings are used by the USB Manager to choose
an appropriate application for the accessory.
The accessory may optionally provide a unique serial number
and a URL to for the accessory's website to the device as well.

<p>An instance of this class is sent to the application via the
{@link UsbManager#ACTION_USB_ACCESSORY_ATTACHED} Intent.
The application can then call {@link UsbManager#openAccessory} to open a file descriptor
for reading and writing data to and from the accessory.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about communicating with USB hardware, read the
<a href=\"{@docRoot}guide/topics/usb/index.html\">USB</a> developer guide.</p>
</div>"
      classrelation 1325367 // <realization>
	relation 1325367 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1325367 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 1325495 // TAG (<unidirectional association>)
	relation 1325495 --->
	  a role_name "TAG" init_value " \"UsbAccessory\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1325495 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1325623 // mManufacturer (<unidirectional association>)
	relation 1325623 --->
	  a role_name "mManufacturer" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1325623 // mManufacturer (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1325751 // mModel (<unidirectional association>)
	relation 1325751 --->
	  a role_name "mModel" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1325751 // mModel (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1325879 // mDescription (<unidirectional association>)
	relation 1325879 --->
	  a role_name "mDescription" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1325879 // mDescription (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1326007 // mVersion (<unidirectional association>)
	relation 1326007 --->
	  a role_name "mVersion" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1326007 // mVersion (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1326135 // mUri (<unidirectional association>)
	relation 1326135 --->
	  a role_name "mUri" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1326135 // mUri (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1326263 // mSerial (<unidirectional association>)
	relation 1326263 --->
	  a role_name "mSerial" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1326263 // mSerial (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1430199 "MANUFACTURER_STRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1430327 "MODEL_STRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1430455 "DESCRIPTION_STRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1430583 "VERSION_STRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1430711 "URI_STRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1430839 "SERIAL_STRING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      operation 3362231 "UsbAccessory"
	public explicit_return_type ""
	nparams 6
	  param inout name "manufacturer" type class_ref 129591 // String
	  param inout name "model" type class_ref 129591 // String
	  param inout name "description" type class_ref 129591 // String
	  param inout name "version" type class_ref 129591 // String
	  param inout name "uri" type class_ref 129591 // String
	  param inout name "serial" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "UsbAccessory should only be instantiated by UsbService implementation
@hide"
      end

      operation 3362359 "UsbAccessory"
	public explicit_return_type ""
	nparams 1
	  param inout name "strings" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "UsbAccessory should only be instantiated by UsbService implementation
@hide"
      end

      operation 3362487 "getManufacturer"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the manufacturer name of the accessory.

@return the accessory manufacturer"
      end

      operation 3362615 "getModel"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the model name of the accessory.

@return the accessory model"
      end

      operation 3362743 "getDescription"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a user visible description of the accessory.

@return the accessory description"
      end

      operation 3362871 "getVersion"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version of the accessory.

@return the accessory version"
      end

      operation 3362999 "getUri"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URI for the accessory.
This is an optional URI that might show information about the accessory
or provide the option to download an application for the accessory

@return the accessory URI"
      end

      operation 3363127 "getSerial"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unique serial number for the accessory.
This is an optional serial number that can be used to differentiate
between individual accessories of the same model and manufacturer

@return the unique serial number"
      end

      operation 3363255 "compare"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "s1" type class_ref 129591 // String
	  param inout name "s2" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3363383 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3363511 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3363639 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1326391 // CREATOR (<unidirectional association>)
	relation 1326391 --->
	  a role_name "CREATOR" init_value "
        new Parcelable.Creator<UsbAccessory>() {
        public UsbAccessory createFromParcel(Parcel in) {
            String manufacturer = in.readString();
            String model = in.readString();
            String description = in.readString();
            String version = in.readString();
            String uri = in.readString();
            String serial = in.readString();
            return new UsbAccessory(manufacturer, model, description, version, uri, serial);
        }

        public UsbAccessory[] newArray(int size) {
            return new UsbAccessory[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UsbAccessory> ${name}${value};
"
	    classrelation_ref 1326391 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3363767 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3363895 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 505911 "UsbConfiguration"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class representing a configuration on a {@link UsbDevice}.
A USB configuration can have one or more interfaces, each one providing a different
piece of functionality, separate from the other interfaces.
An interface will have one or more {@link UsbEndpoint}s, which are the
channels by which the host transfers data with the device.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about communicating with USB hardware, read the
<a href=\"{@docRoot}guide/topics/usb/index.html\">USB</a> developer guide.</p>
</div>"
      classrelation 1326519 // <realization>
	relation 1326519 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1326519 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1430967 "mId"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1326647 // mName (<unidirectional association>)
	relation 1326647 --->
	  a role_name "mName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1326647 // mName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1431095 "mAttributes"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1431223 "mMaxPower"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1326775 // mInterfaces (<unidirectional association>)
	relation 1326775 --->
	  a role_name "mInterfaces" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1326775 // mInterfaces (<unidirectional association>)
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1431351 "ATTR_SELF_POWERED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mask for \"self-powered\" bit in the configuration's attributes.
@see #getAttributes
"
      end

      attribute 1431479 "ATTR_REMOTE_WAKEUP"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1 << 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mask for \"remote wakeup\" bit in the configuration's attributes.
@see #getAttributes
"
      end

      operation 3364023 "UsbConfiguration"
	public explicit_return_type ""
	nparams 4
	  param in name "id" explicit_type "int"
	  param inout name "name" type class_ref 129591 // String
	  param in name "attributes" explicit_type "int"
	  param in name "maxPower" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "UsbConfiguration should only be instantiated by UsbService implementation
@hide"
      end

      operation 3364151 "getId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the configuration's ID field.
This is an integer that uniquely identifies the configuration on the device.

@return the configuration's ID"
      end

      operation 3364279 "getName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the configuration's name.

@return the configuration's name"
      end

      operation 3364407 "isSelfPowered"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the self-powered attribute value configuration's attributes field.
This attribute indicates that the device has a power source other than the USB connection.

@return the configuration's self-powered attribute"
      end

      operation 3364535 "isRemoteWakeup"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the remote-wakeup attribute value configuration's attributes field.
This attributes that the device may signal the host to wake from suspend.

@return the configuration's remote-wakeup attribute"
      end

      operation 3364663 "getMaxPower"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the configuration's max power consumption, in milliamps.

@return the configuration's max power"
      end

      operation 3364791 "getInterfaceCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of {@link UsbInterface}s this configuration contains.

@return the number of endpoints"
      end

      operation 3364919 "getInterface"
	public return_type class_ref 506039 // UsbInterface
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link UsbInterface} at the given index.

@return the interface"
      end

      operation 3365047 "setInterfaces"
	public explicit_return_type "void"
	nparams 1
	  param inout name "interfaces" type class_ref 137399 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only used by UsbService implementation
@hide"
      end

      operation 3365175 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1326903 // CREATOR (<unidirectional association>)
	relation 1326903 --->
	  a role_name "CREATOR" init_value "
        new Parcelable.Creator<UsbConfiguration>() {
        public UsbConfiguration createFromParcel(Parcel in) {
            int id = in.readInt();
            String name = in.readString();
            int attributes = in.readInt();
            int maxPower = in.readInt();
            Parcelable[] interfaces = in.readParcelableArray(UsbInterface.class.getClassLoader());
            UsbConfiguration configuration = new UsbConfiguration(id, name, attributes, maxPower);
            configuration.setInterfaces(interfaces);
            return configuration;
        }

        public UsbConfiguration[] newArray(int size) {
            return new UsbConfiguration[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UsbConfiguration> ${name}${value};
"
	    classrelation_ref 1326903 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3365303 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3365431 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 506039 "UsbInterface"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class representing an interface on a {@link UsbDevice}.
USB devices can have one or more interfaces, each one providing a different
piece of functionality, separate from the other interfaces.
An interface will have one or more {@link UsbEndpoint}s, which are the
channels by which the host transfers data with the device.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about communicating with USB hardware, read the
<a href=\"{@docRoot}guide/topics/usb/index.html\">USB</a> developer guide.</p>
</div>"
      classrelation 1328823 // <realization>
	relation 1328823 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1328823 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1437239 "mId"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1437367 "mAlternateSetting"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1328951 // mName (<unidirectional association>)
	relation 1328951 --->
	  a role_name "mName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1328951 // mName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1437495 "mClass"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1437623 "mSubclass"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1437751 "mProtocol"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1329079 // mEndpoints (<unidirectional association>)
	relation 1329079 --->
	  a role_name "mEndpoints" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1329079 // mEndpoints (<unidirectional association>)
	  b parent class_ref 137399 // Parcelable
      end

      operation 3374007 "UsbInterface"
	public explicit_return_type ""
	nparams 6
	  param in name "id" explicit_type "int"
	  param in name "alternateSetting" explicit_type "int"
	  param inout name "name" type class_ref 129591 // String
	  param in name "Class" explicit_type "int"
	  param in name "subClass" explicit_type "int"
	  param in name "protocol" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "UsbInterface should only be instantiated by UsbService implementation
@hide"
      end

      operation 3374135 "getId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the interface's bInterfaceNumber field.
This is an integer that along with the alternate setting uniquely identifies
the interface on the device.

@return the interface's ID"
      end

      operation 3374263 "getAlternateSetting"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the interface's bAlternateSetting field.
This is an integer that along with the ID uniquely identifies
the interface on the device.
{@link UsbDeviceConnection#setInterface} can be used to switch between
two interfaces with the same ID but different alternate setting.

@return the interface's alternate setting"
      end

      operation 3374391 "getName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the interface's name.

@return the interface's name"
      end

      operation 3374519 "getInterfaceClass"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the interface's class field.
Some useful constants for USB classes can be found in {@link UsbConstants}

@return the interface's class"
      end

      operation 3374647 "getInterfaceSubclass"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the interface's subclass field.

@return the interface's subclass"
      end

      operation 3374775 "getInterfaceProtocol"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the interface's protocol field.

@return the interface's protocol"
      end

      operation 3374903 "getEndpointCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of {@link android.hardware.usb.UsbEndpoint}s this interface contains.

@return the number of endpoints"
      end

      operation 3375031 "getEndpoint"
	public return_type class_ref 506551 // UsbEndpoint
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link android.hardware.usb.UsbEndpoint} at the given index.

@return the endpoint"
      end

      operation 3375159 "setEndpoints"
	public explicit_return_type "void"
	nparams 1
	  param inout name "endpoints" type class_ref 137399 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only used by UsbService implementation
@hide"
      end

      operation 3375287 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1329207 // CREATOR (<unidirectional association>)
	relation 1329207 --->
	  a role_name "CREATOR" init_value "
        new Parcelable.Creator<UsbInterface>() {
        public UsbInterface createFromParcel(Parcel in) {
            int id = in.readInt();
            int alternateSetting = in.readInt();
            String name = in.readString();
            int Class = in.readInt();
            int subClass = in.readInt();
            int protocol = in.readInt();
            Parcelable[] endpoints = in.readParcelableArray(UsbEndpoint.class.getClassLoader());
            UsbInterface intf = new UsbInterface(id, alternateSetting, name, Class, subClass, protocol);
            intf.setEndpoints(endpoints);
            return intf;
        }

        public UsbInterface[] newArray(int size) {
            return new UsbInterface[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UsbInterface> ${name}${value};
"
	    classrelation_ref 1329207 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3375415 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3375543 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 506167 "UsbConstants"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Contains constants for the USB protocol.
These constants correspond to definitions in linux/usb/ch9.h in the linux kernel."
      attribute 1431607 "USB_ENDPOINT_DIR_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bitmask used for extracting the {@link UsbEndpoint} direction from its address field.
@see UsbEndpoint#getAddress
@see UsbEndpoint#getDirection
@see #USB_DIR_OUT
@see #USB_DIR_IN

"
      end

      attribute 1431735 "USB_DIR_OUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to signify direction of data for a {@link UsbEndpoint} is OUT (host to device)
@see UsbEndpoint#getDirection
"
      end

      attribute 1431863 "USB_DIR_IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to signify direction of data for a {@link UsbEndpoint} is IN (device to host)
@see UsbEndpoint#getDirection
"
      end

      attribute 1431991 "USB_ENDPOINT_NUMBER_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bitmask used for extracting the {@link UsbEndpoint} number its address field.
@see UsbEndpoint#getAddress
@see UsbEndpoint#getEndpointNumber
"
      end

      attribute 1432119 "USB_ENDPOINT_XFERTYPE_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x03"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bitmask used for extracting the {@link UsbEndpoint} type from its address field.
@see UsbEndpoint#getAddress
@see UsbEndpoint#getType
@see #USB_ENDPOINT_XFER_CONTROL
@see #USB_ENDPOINT_XFER_ISOC
@see #USB_ENDPOINT_XFER_BULK
@see #USB_ENDPOINT_XFER_INT
"
      end

      attribute 1432247 "USB_ENDPOINT_XFER_CONTROL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Control endpoint type (endpoint zero)
@see UsbEndpoint#getType
"
      end

      attribute 1432375 "USB_ENDPOINT_XFER_ISOC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Isochronous endpoint type (currently not supported)
@see UsbEndpoint#getType
"
      end

      attribute 1432503 "USB_ENDPOINT_XFER_BULK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bulk endpoint type
@see UsbEndpoint#getType
"
      end

      attribute 1432631 "USB_ENDPOINT_XFER_INT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Interrupt endpoint type
@see UsbEndpoint#getType
"
      end

      attribute 1432759 "USB_TYPE_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x03 << 5)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bitmask used for encoding the request type for a control request on endpoint zero.
"
      end

      attribute 1432887 "USB_TYPE_STANDARD"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x00 << 5)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to specify that an endpoint zero control request is a standard request.
"
      end

      attribute 1433015 "USB_TYPE_CLASS"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x01 << 5)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to specify that an endpoint zero control request is a class specific request.
"
      end

      attribute 1433143 "USB_TYPE_VENDOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x02 << 5)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to specify that an endpoint zero control request is a vendor specific request.
"
      end

      attribute 1433271 "USB_TYPE_RESERVED"
	class_attribute const_attribute public explicit_type "int"
	init_value " (0x03 << 5)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reserved endpoint zero control request type (currently unused).
"
      end

      attribute 1433399 "USB_CLASS_PER_INTERFACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class indicating that the class is determined on a per-interface basis.
"
      end

      attribute 1433527 "USB_CLASS_AUDIO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for audio devices.
"
      end

      attribute 1433655 "USB_CLASS_COMM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for communication devices.
"
      end

      attribute 1433783 "USB_CLASS_HID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for human interface devices (for example, mice and keyboards).
"
      end

      attribute 1433911 "USB_CLASS_PHYSICA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for physical devices.
"
      end

      attribute 1434039 "USB_CLASS_STILL_IMAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for still image devices (digital cameras).
"
      end

      attribute 1434167 "USB_CLASS_PRINTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for printers.
"
      end

      attribute 1434295 "USB_CLASS_MASS_STORAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for mass storage devices.
"
      end

      attribute 1434423 "USB_CLASS_HUB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for USB hubs.
"
      end

      attribute 1434551 "USB_CLASS_CDC_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for CDC devices (communications device class).
"
      end

      attribute 1434679 "USB_CLASS_CSCID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0b"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for content smart card devices.
"
      end

      attribute 1434807 "USB_CLASS_CONTENT_SEC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0d"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for content security devices.
"
      end

      attribute 1434935 "USB_CLASS_VIDEO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0e"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for video devices.
"
      end

      attribute 1435063 "USB_CLASS_WIRELESS_CONTROLLER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xe0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for wireless controller devices.
"
      end

      attribute 1435191 "USB_CLASS_MISC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "USB class for wireless miscellaneous devices.
"
      end

      attribute 1435319 "USB_CLASS_APP_SPEC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xfe"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Application specific USB class.
"
      end

      attribute 1435447 "USB_CLASS_VENDOR_SPEC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xff"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Vendor specific USB class.
"
      end

      attribute 1435575 "USB_INTERFACE_SUBCLASS_BOOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Boot subclass for HID devices.
"
      end

      attribute 1435703 "USB_SUBCLASS_VENDOR_SPEC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xff"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Vendor specific USB subclass.
"
      end
    end

    class 506295 "UsbDevice"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a USB device attached to the android device with the android device
acting as the USB host.
Each device contains one or more {@link UsbInterface}s, each of which contains a number of
{@link UsbEndpoint}s (the channels via which data is transmitted over USB).

<p> This class contains information (along with {@link UsbInterface} and {@link UsbEndpoint})
that describes the capabilities of the USB device.
To communicate with the device, you open a {@link UsbDeviceConnection} for the device
and use {@link UsbRequest} to send and receive data on an endpoint.
{@link UsbDeviceConnection#controlTransfer} is used for control requests on endpoint zero.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about communicating with USB hardware, read the
<a href=\"{@docRoot}guide/topics/usb/index.html\">USB</a> developer guide.</p>
</div>"
      classrelation 1327031 // <realization>
	relation 1327031 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1327031 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 1327159 // TAG (<unidirectional association>)
	relation 1327159 --->
	  a role_name "TAG" init_value " \"UsbDevice\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1327159 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1435831 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1327287 // mName (<unidirectional association>)
	relation 1327287 --->
	  a role_name "mName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1327287 // mName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1327415 // mManufacturerName (<unidirectional association>)
	relation 1327415 --->
	  a role_name "mManufacturerName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1327415 // mManufacturerName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1327543 // mProductName (<unidirectional association>)
	relation 1327543 --->
	  a role_name "mProductName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1327543 // mProductName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1327671 // mVersion (<unidirectional association>)
	relation 1327671 --->
	  a role_name "mVersion" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1327671 // mVersion (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1327799 // mSerialNumber (<unidirectional association>)
	relation 1327799 --->
	  a role_name "mSerialNumber" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1327799 // mSerialNumber (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1435959 "mVendorId"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1436087 "mProductId"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1436215 "mClass"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1436343 "mSubclass"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1436471 "mProtocol"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1327927 // mConfigurations (<unidirectional association>)
	relation 1327927 --->
	  a role_name "mConfigurations" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1327927 // mConfigurations (<unidirectional association>)
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 1328055 // mInterfaces (<unidirectional association>)
	relation 1328055 --->
	  a role_name "mInterfaces" multiplicity "[]" private
	    comment " list of all interfaces on the device
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 1328055 // mInterfaces (<unidirectional association>)
	  b parent class_ref 506039 // UsbInterface
      end

      operation 3365559 "UsbDevice"
	public explicit_return_type ""
	nparams 10
	  param inout name "name" type class_ref 129591 // String
	  param in name "vendorId" explicit_type "int"
	  param in name "productId" explicit_type "int"
	  param in name "Class" explicit_type "int"
	  param in name "subClass" explicit_type "int"
	  param in name "protocol" explicit_type "int"
	  param inout name "manufacturerName" type class_ref 129591 // String
	  param inout name "productName" type class_ref 129591 // String
	  param inout name "version" type class_ref 129591 // String
	  param inout name "serialNumber" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "UsbDevice should only be instantiated by UsbService implementation
@hide"
      end

      operation 3365687 "getDeviceName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the device.
In the standard implementation, this is the path of the device file
for the device in the usbfs file system.

@return the device name"
      end

      operation 3365815 "getManufacturerName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the manufacturer name of the device.

@return the manufacturer name"
      end

      operation 3365943 "getProductName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the product name of the device.

@return the product name"
      end

      operation 3366071 "getVersion"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version number of the device.

@return the device version"
      end

      operation 3366199 "getSerialNumber"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the serial number of the device.

@return the serial number name"
      end

      operation 3366327 "getDeviceId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a unique integer ID for the device.
This is a convenience for clients that want to use an integer to represent
the device, rather than the device name.
IDs are not persistent across USB disconnects.

@return the device ID"
      end

      operation 3366455 "getVendorId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a vendor ID for the device.

@return the device vendor ID"
      end

      operation 3366583 "getProductId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a product ID for the device.

@return the device product ID"
      end

      operation 3366711 "getDeviceClass"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the devices's class field.
Some useful constants for USB device classes can be found in {@link UsbConstants}.

@return the devices's class"
      end

      operation 3366839 "getDeviceSubclass"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the device's subclass field.

@return the device's subclass"
      end

      operation 3366967 "getDeviceProtocol"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the device's protocol field.

@return the device's protocol"
      end

      operation 3367095 "getConfigurationCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of {@link UsbConfiguration}s this device contains.

@return the number of configurations"
      end

      operation 3367223 "getConfiguration"
	public return_type class_ref 505911 // UsbConfiguration
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link UsbConfiguration} at the given index.

@return the configuration"
      end

      operation 3367351 "getInterfaceList"
	private return_type class_ref 506039 // UsbInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3367479 "getInterfaceCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of {@link UsbInterface}s this device contains.
For devices with multiple configurations, you will probably want to use
{@link UsbConfiguration#getInterfaceCount} instead.

@return the number of interfaces"
      end

      operation 3367607 "getInterface"
	public return_type class_ref 506039 // UsbInterface
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link UsbInterface} at the given index.
For devices with multiple configurations, you will probably want to use
{@link UsbConfiguration#getInterface} instead.

@return the interface"
      end

      operation 3367735 "setConfigurations"
	public explicit_return_type "void"
	nparams 1
	  param inout name "configuration" type class_ref 137399 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only used by UsbService implementation
@hide"
      end

      operation 3367863 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3367991 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3368119 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1328183 // CREATOR (<unidirectional association>)
	relation 1328183 --->
	  a role_name "CREATOR" init_value "
        new Parcelable.Creator<UsbDevice>() {
        public UsbDevice createFromParcel(Parcel in) {
            String name = in.readString();
            int vendorId = in.readInt();
            int productId = in.readInt();
            int clasz = in.readInt();
            int subClass = in.readInt();
            int protocol = in.readInt();
            String manufacturerName = in.readString();
            String productName = in.readString();
            String version = in.readString();
            String serialNumber = in.readString();
            Parcelable[] configurations = in.readParcelableArray(UsbInterface.class.getClassLoader());
            UsbDevice device = new UsbDevice(name, vendorId, productId, clasz, subClass, protocol,
                                 manufacturerName, productName, version, serialNumber);
            device.setConfigurations(configurations);
            return device;
        }

        public UsbDevice[] newArray(int size) {
            return new UsbDevice[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UsbDevice> ${name}${value};
"
	    classrelation_ref 1328183 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3368247 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3368375 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3368503 "getDeviceId"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3368631 "getDeviceName"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3368759 "native_get_device_id"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3368887 "native_get_device_name"
	class_operation private return_type class_ref 129591 // String
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end
    end

    class 506423 "UsbDeviceConnection"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used for sending and receiving data and control messages to a USB device.
Instances of this class are created by {@link UsbManager#openDevice}."
      classrelation 1328311 // TAG (<unidirectional association>)
	relation 1328311 --->
	  a role_name "TAG" init_value " \"UsbDeviceConnection\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1328311 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1328439 // mDevice (<unidirectional association>)
	relation 1328439 --->
	  a role_name "mDevice" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1328439 // mDevice (<unidirectional association>)
	  b parent class_ref 506295 // UsbDevice
      end

      attribute 1436599 "mNativeContext"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " used by the JNI code"
      end

      operation 3369015 "UsbDeviceConnection"
	public explicit_return_type ""
	nparams 1
	  param inout name "device" type class_ref 506295 // UsbDevice
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "UsbDevice should only be instantiated by UsbService implementation
@hide"
      end

      operation 3369143 "open"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param inout name "pfd" type class_ref 264887 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package "
      end

      operation 3369271 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases all system resources related to the device.
Once the object is closed it cannot be used again.
The client must call {@link UsbManager#openDevice} again
to retrieve a new instance to reestablish communication with the device."
      end

      operation 3369399 "getFileDescriptor"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the native file descriptor for the device, or
-1 if the device is not opened.
This is intended for passing to native code to access the device.

@return the native file descriptor"
      end

      operation 3369527 "getRawDescriptors"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw USB descriptors for the device.
This can be used to access descriptors not supported directly
via the higher level APIs.

@return raw USB descriptors"
      end

      operation 3369655 "claimInterface"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "intf" type class_ref 506039 // UsbInterface
	  param inout name "force" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Claims exclusive access to a {@link android.hardware.usb.UsbInterface}.
This must be done before sending or receiving data on any
{@link android.hardware.usb.UsbEndpoint}s belonging to the interface.

@param intf the interface to claim
@param force true to disconnect kernel driver if necessary
@return true if the interface was successfully claimed"
      end

      operation 3369783 "releaseInterface"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "intf" type class_ref 506039 // UsbInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases exclusive access to a {@link android.hardware.usb.UsbInterface}.

@return true if the interface was successfully released"
      end

      operation 3369911 "setInterface"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "intf" type class_ref 506039 // UsbInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current {@link android.hardware.usb.UsbInterface}.
Used to select between two interfaces with the same ID but different alternate setting.

@return true if the interface was successfully selected"
      end

      operation 3370039 "setConfiguration"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "configuration" type class_ref 505911 // UsbConfiguration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the device's current {@link android.hardware.usb.UsbConfiguration}.

@return true if the configuration was successfully set"
      end

      operation 3370167 "controlTransfer"
	public explicit_return_type "int"
	nparams 7
	  param in name "requestType" explicit_type "int"
	  param in name "request" explicit_type "int"
	  param in name "value" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param inout name "buffer" explicit_type "byte"
	  param in name "length" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a control transaction on endpoint zero for this device.
The direction of the transfer is determined by the request type.
If requestType & {@link UsbConstants#USB_ENDPOINT_DIR_MASK} is
{@link UsbConstants#USB_DIR_OUT}, then the transfer is a write,
and if it is {@link UsbConstants#USB_DIR_IN}, then the transfer
is a read.
<p>
This method transfers data starting from index 0 in the buffer.
To specify a different offset, use
{@link #controlTransfer(int, int, int, int, byte[], int, int, int)}.
</p>

@param requestType request type for this transaction
@param request request ID for this transaction
@param value value field for this transaction
@param index index field for this transaction
@param buffer buffer for data portion of transaction,
or null if no data needs to be sent or received
@param length the length of the data to send or receive
@param timeout in milliseconds
@return length of data transferred (or zero) for success,
or negative value for failure"
      end

      operation 3370295 "controlTransfer"
	public explicit_return_type "int"
	nparams 8
	  param in name "requestType" explicit_type "int"
	  param in name "request" explicit_type "int"
	  param in name "value" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param inout name "buffer" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a control transaction on endpoint zero for this device.
The direction of the transfer is determined by the request type.
If requestType & {@link UsbConstants#USB_ENDPOINT_DIR_MASK} is
{@link UsbConstants#USB_DIR_OUT}, then the transfer is a write,
and if it is {@link UsbConstants#USB_DIR_IN}, then the transfer
is a read.

@param requestType request type for this transaction
@param request request ID for this transaction
@param value value field for this transaction
@param index index field for this transaction
@param buffer buffer for data portion of transaction,
or null if no data needs to be sent or received
@param offset the index of the first byte in the buffer to send or receive
@param length the length of the data to send or receive
@param timeout in milliseconds
@return length of data transferred (or zero) for success,
or negative value for failure"
      end

      operation 3370423 "bulkTransfer"
	public explicit_return_type "int"
	nparams 4
	  param inout name "endpoint" type class_ref 506551 // UsbEndpoint
	  param inout name "buffer" explicit_type "byte"
	  param in name "length" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a bulk transaction on the given endpoint.
The direction of the transfer is determined by the direction of the endpoint.
<p>
This method transfers data starting from index 0 in the buffer.
To specify a different offset, use
{@link #bulkTransfer(UsbEndpoint, byte[], int, int, int)}.
</p>

@param endpoint the endpoint for this transaction
@param buffer buffer for data to send or receive
@param length the length of the data to send or receive
@param timeout in milliseconds
@return length of data transferred (or zero) for success,
or negative value for failure"
      end

      operation 3370551 "bulkTransfer"
	public explicit_return_type "int"
	nparams 5
	  param inout name "endpoint" type class_ref 506551 // UsbEndpoint
	  param inout name "buffer" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a bulk transaction on the given endpoint.
The direction of the transfer is determined by the direction of the endpoint.

@param endpoint the endpoint for this transaction
@param buffer buffer for data to send or receive
@param offset the index of the first byte in the buffer to send or receive
@param length the length of the data to send or receive
@param timeout in milliseconds
@return length of data transferred (or zero) for success,
or negative value for failure"
      end

      operation 3370679 "requestWait"
	public return_type class_ref 506679 // UsbRequest
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits for the result of a {@link android.hardware.usb.UsbRequest#queue} operation
Note that this may return requests queued on multiple 
{@link android.hardware.usb.UsbEndpoint}s.
When multiple endpoints are in use, {@link android.hardware.usb.UsbRequest#getEndpoint} and
{@link android.hardware.usb.UsbRequest#getClientData} can be useful in determining
how to process the result of this function.

@return a completed USB request, or null if an error occurred"
      end

      operation 3370807 "getSerial"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the serial number for the device.
This will return null if the device has not been opened.

@return the device serial number"
      end

      operation 3370935 "checkBounds"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "buffer" explicit_type "byte"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3371063 "native_open"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "deviceName" type class_ref 129591 // String
	  param inout name "pfd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3371191 "native_close"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3371319 "native_get_fd"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3371447 "native_get_desc"
	private explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3371575 "native_claim_interface"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "interfaceID" explicit_type "int"
	  param inout name "force" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3371703 "native_release_interface"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "interfaceID" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3371831 "native_set_interface"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "interfaceID" explicit_type "int"
	  param in name "alternateSetting" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3371959 "native_set_configuration"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "configurationID" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3372087 "native_control_request"
	private explicit_return_type "int"
	nparams 8
	  param in name "requestType" explicit_type "int"
	  param in name "request" explicit_type "int"
	  param in name "value" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param inout name "buffer" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws};
"
	
	
	
      end

      operation 3372215 "native_bulk_request"
	private explicit_return_type "int"
	nparams 5
	  param in name "endpoint" explicit_type "int"
	  param inout name "buffer" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws};
"
	
	
	
      end

      operation 3372343 "native_request_wait"
	private return_type class_ref 506679 // UsbRequest
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3372471 "native_get_serial"
	private return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end
    end

    class 506551 "UsbEndpoint"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class representing an endpoint on a {@link UsbInterface}.
Endpoints are the channels for sending and receiving data over USB.
Typically bulk endpoints are used for sending non-trivial amounts of data.
Interrupt endpoints are used for sending small amounts of data, typically events,
separately from the main data streams.
The endpoint zero is a special endpoint for control messages sent from the host
to device.
Isochronous endpoints are currently unsupported."
      classrelation 1328567 // <realization>
	relation 1328567 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1328567 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1436727 "mAddress"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1436855 "mAttributes"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1436983 "mMaxPacketSize"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1437111 "mInterval"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3372599 "UsbEndpoint"
	public explicit_return_type ""
	nparams 4
	  param in name "address" explicit_type "int"
	  param in name "attributes" explicit_type "int"
	  param in name "maxPacketSize" explicit_type "int"
	  param in name "interval" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "UsbEndpoint should only be instantiated by UsbService implementation
@hide"
      end

      operation 3372727 "getAddress"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the endpoint's address field.
The address is a bitfield containing both the endpoint number
as well as the data direction of the endpoint.
the endpoint number and direction can also be accessed via
{@link #getEndpointNumber} and {@link #getDirection}.

@return the endpoint's address"
      end

      operation 3372855 "getEndpointNumber"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extracts the endpoint's endpoint number from its address

@return the endpoint's endpoint number"
      end

      operation 3372983 "getDirection"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the endpoint's direction.
Returns {@link UsbConstants#USB_DIR_OUT}
if the direction is host to device, and
{@link UsbConstants#USB_DIR_IN} if the
direction is device to host.
@see {@link UsbConstants#USB_DIR_IN}
@see {@link UsbConstants#USB_DIR_OUT}

@return the endpoint's direction"
      end

      operation 3373111 "getAttributes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the endpoint's attributes field.

@return the endpoint's attributes"
      end

      operation 3373239 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the endpoint's type.
Possible results are:
<ul>
<li>{@link UsbConstants#USB_ENDPOINT_XFER_CONTROL} (endpoint zero)
<li>{@link UsbConstants#USB_ENDPOINT_XFER_ISOC} (isochronous endpoint)
<li>{@link UsbConstants#USB_ENDPOINT_XFER_BULK} (bulk endpoint)
<li>{@link UsbConstants#USB_ENDPOINT_XFER_INT} (interrupt endpoint)
</ul>

@return the endpoint's type"
      end

      operation 3373367 "getMaxPacketSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the endpoint's maximum packet size.

@return the endpoint's maximum packet size"
      end

      operation 3373495 "getInterval"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the endpoint's interval field.

@return the endpoint's interval"
      end

      operation 3373623 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1328695 // CREATOR (<unidirectional association>)
	relation 1328695 --->
	  a role_name "CREATOR" init_value "
        new Parcelable.Creator<UsbEndpoint>() {
        public UsbEndpoint createFromParcel(Parcel in) {
            int address = in.readInt();
            int attributes = in.readInt();
            int maxPacketSize = in.readInt();
            int interval = in.readInt();
            return new UsbEndpoint(address, attributes, maxPacketSize, interval);
        }

        public UsbEndpoint[] newArray(int size) {
            return new UsbEndpoint[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UsbEndpoint> ${name}${value};
"
	    classrelation_ref 1328695 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3373751 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3373879 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 506679 "UsbRequest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class representing USB request packet.
This can be used for both reading and writing data to or from a
{@link android.hardware.usb.UsbDeviceConnection}.
UsbRequests can be used to transfer data on bulk and interrupt endpoints.
Requests on bulk endpoints can be sent synchronously via {@link UsbDeviceConnection#bulkTransfer}
or asynchronously via {@link #queue} and {@link UsbDeviceConnection#requestWait}.
Requests on interrupt endpoints are only send and received asynchronously.

<p>Requests on endpoint zero are not supported by this class;
use {@link UsbDeviceConnection#controlTransfer} for endpoint zero requests instead."
      classrelation 1333175 // TAG (<unidirectional association>)
	relation 1333175 --->
	  a role_name "TAG" init_value " \"UsbRequest\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1333175 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1439671 "mNativeContext"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " used by the JNI code"
      end

      classrelation 1333303 // mEndpoint (<unidirectional association>)
	relation 1333303 --->
	  a role_name "mEndpoint" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1333303 // mEndpoint (<unidirectional association>)
	  b parent class_ref 506551 // UsbEndpoint
      end

      attribute 1439799 "mBuffer"
	private explicit_type "ByteBuffer"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " for temporarily saving current buffer across queue and dequeue"
      end

      attribute 1439927 "mLength"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1333431 // mClientData (<unidirectional association>)
	relation 1333431 --->
	  a role_name "mClientData" private
	    comment " for client use
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1333431 // mClientData (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      operation 3380919 "UsbRequest"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3381047 "initialize"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "connection" type class_ref 506423 // UsbDeviceConnection
	  param inout name "endpoint" type class_ref 506551 // UsbEndpoint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the request so it can read or write data on the given endpoint.
Whether the request allows reading or writing depends on the direction of the endpoint.

@param endpoint the endpoint to be used for this request.
@return true if the request was successfully opened."
      end

      operation 3381175 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases all resources related to this request."
      end

      operation 3381303 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3381431 "getEndpoint"
	public return_type class_ref 506551 // UsbEndpoint
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the endpoint for the request, or null if the request is not opened.

@return the request's endpoint"
      end

      operation 3381559 "getClientData"
	public return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the client data for the request.
This can be used in conjunction with {@link #setClientData}
to associate another object with this request, which can be useful for
maintaining state between calls to {@link #queue} and
{@link android.hardware.usb.UsbDeviceConnection#requestWait}

@return the client data for the request"
      end

      operation 3381687 "setClientData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the client data for the request.
This can be used in conjunction with {@link #getClientData}
to associate another object with this request, which can be useful for
maintaining state between calls to {@link #queue} and
{@link android.hardware.usb.UsbDeviceConnection#requestWait}

@param data the client data for the request"
      end

      operation 3381815 "queue"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "buffer" explicit_type "ByteBuffer"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queues the request to send or receive data on its endpoint.
For OUT endpoints, the given buffer data will be sent on the endpoint.
For IN endpoints, the endpoint will attempt to read the given number of bytes
into the specified buffer.
If the queueing operation is successful, we return true and the result will be
returned via {@link android.hardware.usb.UsbDeviceConnection#requestWait}

@param buffer the buffer containing the bytes to write, or location to store
the results of a read
@param length number of bytes to read or write
@return true if the queueing operation succeeded"
      end

      operation 3381943 "dequeue"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package "
      end

      operation 3382071 "cancel"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancels a pending queue operation.

@return true if cancelling succeeded"
      end

      operation 3382199 "native_init"
	private explicit_return_type "boolean"
	nparams 5
	  param inout name "connection" type class_ref 506423 // UsbDeviceConnection
	  param in name "ep_address" explicit_type "int"
	  param in name "ep_attributes" explicit_type "int"
	  param in name "ep_max_packet_size" explicit_type "int"
	  param in name "ep_interval" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws};
"
	
	
	
      end

      operation 3382327 "native_close"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3382455 "native_queue_array"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "buffer" explicit_type "byte"
	  param in name "length" explicit_type "int"
	  param inout name "out" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 3382583 "native_dequeue_array"
	private explicit_return_type "int"
	nparams 3
	  param inout name "buffer" explicit_type "byte"
	  param in name "length" explicit_type "int"
	  param inout name "out" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 3382711 "native_queue_direct"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "buffer" explicit_type "ByteBuffer"
	  param in name "length" explicit_type "int"
	  param inout name "out" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 3382839 "native_dequeue_direct"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3382967 "native_cancel"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end
    end

    class 506807 "UsbManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class allows you to access the state of USB and communicate with USB devices.
Currently only host mode is supported in the public API.

<p>You can obtain an instance of this class by calling
{@link android.content.Context#getSystemService(java.lang.String) Context.getSystemService()}.

{@samplecode
UsbManager manager = (UsbManager) getSystemService(Context.USB_SERVICE);}

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about communicating with USB hardware, read the
<a href=\"{@docRoot}guide/topics/usb/index.html\">USB</a> developer guide.</p>
</div>"
      classrelation 1329335 // TAG (<unidirectional association>)
	relation 1329335 --->
	  a role_name "TAG" init_value " \"UsbManager\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1329335 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1329463 // ACTION_USB_STATE (<unidirectional association>)
	relation 1329463 --->
	  a role_name "ACTION_USB_STATE" init_value "
            \"android.hardware.usb.action.USB_STATE\"" class_relation const_relation public
	    comment "
Broadcast Action:  A sticky broadcast for USB state change events when in device mode.

This is a sticky broadcast for clients that includes USB connected/disconnected state,
<ul>
<li> {@link #USB_CONNECTED} boolean indicating whether USB is connected or disconnected.
<li> {@link #USB_HOST_CONNECTED} boolean indicating whether USB is connected or
    disconnected as host.
<li> {@link #USB_CONFIGURED} boolean indicating whether USB is configured.
currently zero if not configured, one for configured.
<li> {@link #USB_FUNCTION_ADB} boolean extra indicating whether the
adb function is enabled
<li> {@link #USB_FUNCTION_RNDIS} boolean extra indicating whether the
RNDIS ethernet function is enabled
<li> {@link #USB_FUNCTION_MTP} boolean extra indicating whether the
MTP function is enabled
<li> {@link #USB_FUNCTION_PTP} boolean extra indicating whether the
PTP function is enabled
<li> {@link #USB_FUNCTION_PTP} boolean extra indicating whether the
accessory function is enabled
<li> {@link #USB_FUNCTION_AUDIO_SOURCE} boolean extra indicating whether the
audio source function is enabled
<li> {@link #USB_FUNCTION_MIDI} boolean extra indicating whether the
MIDI function is enabled
</ul>
If the sticky intent has not been found, that indicates USB is disconnected,
USB is not configued, MTP function is enabled, and all the other functions are disabled.

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1329463 // ACTION_USB_STATE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1329591 // ACTION_USB_PORT_CHANGED (<unidirectional association>)
	relation 1329591 --->
	  a role_name "ACTION_USB_PORT_CHANGED" init_value "
            \"android.hardware.usb.action.USB_PORT_CHANGED\"" class_relation const_relation public
	    comment "
Broadcast Action: A broadcast for USB port changes.

This intent is sent when a USB port is added, removed, or changes state.
<ul>
<li> {@link #EXTRA_PORT} containing the {@link android.hardware.usb.UsbPort}
for the port.
<li> {@link #EXTRA_PORT_STATUS} containing the {@link android.hardware.usb.UsbPortStatus}
for the port, or null if the port has been removed
</ul>

@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1329591 // ACTION_USB_PORT_CHANGED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1329719 // ACTION_USB_DEVICE_ATTACHED (<unidirectional association>)
	relation 1329719 --->
	  a role_name "ACTION_USB_DEVICE_ATTACHED" init_value "
            \"android.hardware.usb.action.USB_DEVICE_ATTACHED\"" class_relation const_relation public
	    comment "
Broadcast Action:  A broadcast for USB device attached event.

This intent is sent when a USB device is attached to the USB bus when in host mode.
<ul>
<li> {@link #EXTRA_DEVICE} containing the {@link android.hardware.usb.UsbDevice}
for the attached device
</ul>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1329719 // ACTION_USB_DEVICE_ATTACHED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1329847 // ACTION_USB_DEVICE_DETACHED (<unidirectional association>)
	relation 1329847 --->
	  a role_name "ACTION_USB_DEVICE_DETACHED" init_value "
            \"android.hardware.usb.action.USB_DEVICE_DETACHED\"" class_relation const_relation public
	    comment "
Broadcast Action:  A broadcast for USB device detached event.

This intent is sent when a USB device is detached from the USB bus when in host mode.
<ul>
<li> {@link #EXTRA_DEVICE} containing the {@link android.hardware.usb.UsbDevice}
for the detached device
</ul>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1329847 // ACTION_USB_DEVICE_DETACHED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1329975 // ACTION_USB_ACCESSORY_ATTACHED (<unidirectional association>)
	relation 1329975 --->
	  a role_name "ACTION_USB_ACCESSORY_ATTACHED" init_value "
            \"android.hardware.usb.action.USB_ACCESSORY_ATTACHED\"" class_relation const_relation public
	    comment "
Broadcast Action:  A broadcast for USB accessory attached event.

This intent is sent when a USB accessory is attached.
<ul>
<li> {@link #EXTRA_ACCESSORY} containing the {@link android.hardware.usb.UsbAccessory}
for the attached accessory
</ul>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1329975 // ACTION_USB_ACCESSORY_ATTACHED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1330103 // ACTION_USB_ACCESSORY_DETACHED (<unidirectional association>)
	relation 1330103 --->
	  a role_name "ACTION_USB_ACCESSORY_DETACHED" init_value "
            \"android.hardware.usb.action.USB_ACCESSORY_DETACHED\"" class_relation const_relation public
	    comment "
Broadcast Action:  A broadcast for USB accessory detached event.

This intent is sent when a USB accessory is detached.
<ul>
<li> {@link #EXTRA_ACCESSORY} containing the {@link UsbAccessory}
for the attached accessory that was detached
</ul>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1330103 // ACTION_USB_ACCESSORY_DETACHED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1330231 // USB_CONNECTED (<unidirectional association>)
	relation 1330231 --->
	  a role_name "USB_CONNECTED" init_value " \"connected\"" class_relation const_relation public
	    comment "
Boolean extra indicating whether USB is connected or disconnected.
Used in extras for the {@link #ACTION_USB_STATE} broadcast.

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1330231 // USB_CONNECTED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1330359 // USB_HOST_CONNECTED (<unidirectional association>)
	relation 1330359 --->
	  a role_name "USB_HOST_CONNECTED" init_value " \"host_connected\"" class_relation const_relation public
	    comment "
Boolean extra indicating whether USB is connected or disconnected as host.
Used in extras for the {@link #ACTION_USB_STATE} broadcast.

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1330359 // USB_HOST_CONNECTED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1330487 // USB_CONFIGURED (<unidirectional association>)
	relation 1330487 --->
	  a role_name "USB_CONFIGURED" init_value " \"configured\"" class_relation const_relation public
	    comment "
Boolean extra indicating whether USB is configured.
Used in extras for the {@link #ACTION_USB_STATE} broadcast.

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1330487 // USB_CONFIGURED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1330615 // USB_DATA_UNLOCKED (<unidirectional association>)
	relation 1330615 --->
	  a role_name "USB_DATA_UNLOCKED" init_value " \"unlocked\"" class_relation const_relation public
	    comment "
Boolean extra indicating whether confidential user data, such as photos, should be
made available on the USB connection. This variable will only be set when the user
has explicitly asked for this data to be unlocked.
Used in extras for the {@link #ACTION_USB_STATE} broadcast.

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1330615 // USB_DATA_UNLOCKED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1330743 // USB_FUNCTION_NONE (<unidirectional association>)
	relation 1330743 --->
	  a role_name "USB_FUNCTION_NONE" init_value " \"none\"" class_relation const_relation public
	    comment "
A placeholder indicating that no USB function is being specified.
Used to distinguish between selecting no function vs. the default function in
{@link #setCurrentFunction(String)}.

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1330743 // USB_FUNCTION_NONE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1330871 // USB_FUNCTION_ADB (<unidirectional association>)
	relation 1330871 --->
	  a role_name "USB_FUNCTION_ADB" init_value " \"adb\"" class_relation const_relation public
	    comment "
Name of the adb USB function.
Used in extras for the {@link #ACTION_USB_STATE} broadcast

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1330871 // USB_FUNCTION_ADB (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1330999 // USB_FUNCTION_RNDIS (<unidirectional association>)
	relation 1330999 --->
	  a role_name "USB_FUNCTION_RNDIS" init_value " \"rndis\"" class_relation const_relation public
	    comment "
Name of the RNDIS ethernet USB function.
Used in extras for the {@link #ACTION_USB_STATE} broadcast

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1330999 // USB_FUNCTION_RNDIS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1331127 // USB_FUNCTION_MTP (<unidirectional association>)
	relation 1331127 --->
	  a role_name "USB_FUNCTION_MTP" init_value " \"mtp\"" class_relation const_relation public
	    comment "
Name of the MTP USB function.
Used in extras for the {@link #ACTION_USB_STATE} broadcast

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1331127 // USB_FUNCTION_MTP (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1331255 // USB_FUNCTION_PTP (<unidirectional association>)
	relation 1331255 --->
	  a role_name "USB_FUNCTION_PTP" init_value " \"ptp\"" class_relation const_relation public
	    comment "
Name of the PTP USB function.
Used in extras for the {@link #ACTION_USB_STATE} broadcast

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1331255 // USB_FUNCTION_PTP (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1331383 // USB_FUNCTION_AUDIO_SOURCE (<unidirectional association>)
	relation 1331383 --->
	  a role_name "USB_FUNCTION_AUDIO_SOURCE" init_value " \"audio_source\"" class_relation const_relation public
	    comment "
Name of the audio source USB function.
Used in extras for the {@link #ACTION_USB_STATE} broadcast

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1331383 // USB_FUNCTION_AUDIO_SOURCE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1331511 // USB_FUNCTION_MIDI (<unidirectional association>)
	relation 1331511 --->
	  a role_name "USB_FUNCTION_MIDI" init_value " \"midi\"" class_relation const_relation public
	    comment "
Name of the MIDI USB function.
Used in extras for the {@link #ACTION_USB_STATE} broadcast

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1331511 // USB_FUNCTION_MIDI (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1331639 // USB_FUNCTION_ACCESSORY (<unidirectional association>)
	relation 1331639 --->
	  a role_name "USB_FUNCTION_ACCESSORY" init_value " \"accessory\"" class_relation const_relation public
	    comment "
Name of the Accessory USB function.
Used in extras for the {@link #ACTION_USB_STATE} broadcast

{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1331639 // USB_FUNCTION_ACCESSORY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1331767 // EXTRA_PORT (<unidirectional association>)
	relation 1331767 --->
	  a role_name "EXTRA_PORT" init_value " \"port\"" class_relation const_relation public
	    comment "
Name of extra for {@link #ACTION_USB_PORT_CHANGED}
containing the {@link UsbPort} object for the port.

@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1331767 // EXTRA_PORT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1331895 // EXTRA_PORT_STATUS (<unidirectional association>)
	relation 1331895 --->
	  a role_name "EXTRA_PORT_STATUS" init_value " \"portStatus\"" class_relation const_relation public
	    comment "
Name of extra for {@link #ACTION_USB_PORT_CHANGED}
containing the {@link UsbPortStatus} object for the port, or null if the port
was removed.

@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1331895 // EXTRA_PORT_STATUS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1332023 // EXTRA_DEVICE (<unidirectional association>)
	relation 1332023 --->
	  a role_name "EXTRA_DEVICE" init_value " \"device\"" class_relation const_relation public
	    comment "
Name of extra for {@link #ACTION_USB_DEVICE_ATTACHED} and
{@link #ACTION_USB_DEVICE_DETACHED} broadcasts
containing the {@link UsbDevice} object for the device.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1332023 // EXTRA_DEVICE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1332151 // EXTRA_ACCESSORY (<unidirectional association>)
	relation 1332151 --->
	  a role_name "EXTRA_ACCESSORY" init_value " \"accessory\"" class_relation const_relation public
	    comment "
Name of extra for {@link #ACTION_USB_ACCESSORY_ATTACHED} and
{@link #ACTION_USB_ACCESSORY_DETACHED} broadcasts
containing the {@link UsbAccessory} object for the accessory.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1332151 // EXTRA_ACCESSORY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1332279 // EXTRA_PERMISSION_GRANTED (<unidirectional association>)
	relation 1332279 --->
	  a role_name "EXTRA_PERMISSION_GRANTED" init_value " \"permission\"" class_relation const_relation public
	    comment "
Name of extra added to the {@link android.app.PendingIntent}
passed into {@link #requestPermission(UsbDevice, PendingIntent)}
or {@link #requestPermission(UsbAccessory, PendingIntent)}
containing a boolean value indicating whether the user granted permission or not.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1332279 // EXTRA_PERMISSION_GRANTED (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1332407 // mContext (<unidirectional association>)
	relation 1332407 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1332407 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 1437879 "mService"
	const_attribute private explicit_type "IUsbManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3375671 "UsbManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "service" explicit_type "IUsbManager"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 3375799 "getDeviceList"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}HashMap<${type},UsbDevice> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a HashMap containing all USB devices currently attached.
USB device name is the key for the returned HashMap.
The result will be empty if no devices are attached, or if
USB host mode is inactive or unsupported.

@return HashMap containing all connected USB devices."
      end

      operation 3375927 "openDevice"
	public return_type class_ref 506423 // UsbDeviceConnection
	nparams 1
	  param inout name "device" type class_ref 506295 // UsbDevice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens the device so it can be used to send and receive
data using {@link android.hardware.usb.UsbRequest}.

@param device the device to open
@return a {@link UsbDeviceConnection}, or {@code null} if open failed"
      end

      operation 3376055 "getAccessoryList"
	public return_type class_ref 505783 // UsbAccessory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of currently attached USB accessories.
(in the current implementation there can be at most one)

@return list of USB accessories, or null if none are attached."
      end

      operation 3376183 "openAccessory"
	public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 1
	  param inout name "accessory" type class_ref 505783 // UsbAccessory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens a file descriptor for reading and writing data to the USB accessory.

@param accessory the USB accessory to open
@return file descriptor, or null if the accessor could not be opened."
      end

      operation 3376311 "hasPermission"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "device" type class_ref 506295 // UsbDevice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the caller has permission to access the device.
Permission might have been granted temporarily via
{@link #requestPermission(UsbDevice, PendingIntent)} or
by the user choosing the caller as the default application for the device.

@param device to check permissions for
@return true if caller has permission"
      end

      operation 3376439 "hasPermission"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "accessory" type class_ref 505783 // UsbAccessory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the caller has permission to access the accessory.
Permission might have been granted temporarily via
{@link #requestPermission(UsbAccessory, PendingIntent)} or
by the user choosing the caller as the default application for the accessory.

@param accessory to check permissions for
@return true if caller has permission"
      end

      operation 3376567 "requestPermission"
	public explicit_return_type "void"
	nparams 2
	  param inout name "device" type class_ref 506295 // UsbDevice
	  param inout name "pi" type class_ref 159287 // PendingIntent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests temporary permission for the given package to access the device.
This may result in a system dialog being displayed to the user
if permission had not already been granted.
Success or failure is returned via the {@link android.app.PendingIntent} pi.
If successful, this grants the caller permission to access the device only
until the device is disconnected.

The following extras will be added to pi:
<ul>
<li> {@link #EXTRA_DEVICE} containing the device passed into this call
<li> {@link #EXTRA_PERMISSION_GRANTED} containing boolean indicating whether
permission was granted by the user
</ul>

@param device to request permissions for
@param pi PendingIntent for returning result"
      end

      operation 3376695 "requestPermission"
	public explicit_return_type "void"
	nparams 2
	  param inout name "accessory" type class_ref 505783 // UsbAccessory
	  param inout name "pi" type class_ref 159287 // PendingIntent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests temporary permission for the given package to access the accessory.
This may result in a system dialog being displayed to the user
if permission had not already been granted.
Success or failure is returned via the {@link android.app.PendingIntent} pi.
If successful, this grants the caller permission to access the accessory only
until the device is disconnected.

The following extras will be added to pi:
<ul>
<li> {@link #EXTRA_ACCESSORY} containing the accessory passed into this call
<li> {@link #EXTRA_PERMISSION_GRANTED} containing boolean indicating whether
permission was granted by the user
</ul>

@param accessory to request permissions for
@param pi PendingIntent for returning result"
      end

      operation 3376823 "grantPermission"
	public explicit_return_type "void"
	nparams 1
	  param inout name "device" type class_ref 506295 // UsbDevice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Grants permission for USB device without showing system dialog.
Only system components can call this function.
@param device to request permissions for

{@hide}"
      end

      operation 3376951 "isFunctionEnabled"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "function" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified USB function is currently enabled when in device mode.
<p>
USB functions represent interfaces which are published to the host to access
services offered by the device.
</p>

@param function name of the USB function
@return true if the USB function is enabled

{@hide}"
      end

      operation 3377079 "setCurrentFunction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "function" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current USB function when in device mode.
<p>
USB functions represent interfaces which are published to the host to access
services offered by the device.
</p><p>
This method is intended to select among primary USB functions.  The system may
automatically activate additional functions such as {@link #USB_FUNCTION_ADB}
or {@link #USB_FUNCTION_ACCESSORY} based on other settings and states.
</p><p>
The allowed values are: {@link #USB_FUNCTION_NONE}, {@link #USB_FUNCTION_AUDIO_SOURCE},
{@link #USB_FUNCTION_MIDI}, {@link #USB_FUNCTION_MTP}, {@link #USB_FUNCTION_PTP},
or {@link #USB_FUNCTION_RNDIS}.
</p><p>
Note: This function is asynchronous and may fail silently without applying
the requested changes.
</p>

@param function name of the USB function, or null to restore the default function

{@hide}"
      end

      operation 3377207 "setUsbDataUnlocked"
	public explicit_return_type "void"
	nparams 1
	  param inout name "unlocked" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether USB data (for example, MTP exposed pictures) should be made available
on the USB connection when in device mode. Unlocking usb data should only be done with
user involvement, since exposing pictures or other data could leak sensitive
user information.

{@hide}"
      end

      operation 3377335 "getPorts"
	public return_type class_ref 506935 // UsbPort
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of physical USB ports on the device.
<p>
This list is guaranteed to contain all dual-role USB Type C ports but it might
be missing other ports depending on whether the kernel USB drivers have been
updated to publish all of the device's ports through the new \"dual_role_usb\"
device class (which supports all types of ports despite its name).
</p>

@return The list of USB ports, or null if none.

@hide"
      end

      operation 3377463 "getPortStatus"
	public return_type class_ref 507063 // UsbPortStatus
	nparams 1
	  param inout name "port" type class_ref 506935 // UsbPort
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the status of the specified USB port.

@param port The port to query.
@return The status of the specified USB port, or null if unknown.

@hide"
      end

      operation 3377591 "setPortRoles"
	public explicit_return_type "void"
	nparams 3
	  param inout name "port" type class_ref 506935 // UsbPort
	  param in name "powerRole" explicit_type "int"
	  param in name "dataRole" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the desired role combination of the port.
<p>
The supported role combinations depend on what is connected to the port and may be
determined by consulting
{@link UsbPortStatus#isRoleCombinationSupported UsbPortStatus.isRoleCombinationSupported}.
</p><p>
Note: This function is asynchronous and may fail silently without applying
the requested changes.  If this function does cause a status change to occur then
a {@link #ACTION_USB_PORT_CHANGED} broadcast will be sent.
</p>

@param powerRole The desired power role: {@link UsbPort#POWER_ROLE_SOURCE}
or {@link UsbPort#POWER_ROLE_SINK}, or 0 if no power role.
@param dataRole The desired data role: {@link UsbPort#DATA_ROLE_HOST}
or {@link UsbPort#DATA_ROLE_DEVICE}, or 0 if no data role.

@hide"
      end

      operation 3377719 "addFunction"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "functions" type class_ref 129591 // String
	  param inout name "function" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3377847 "removeFunction"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "functions" type class_ref 129591 // String
	  param inout name "function" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3377975 "containsFunction"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "functions" type class_ref 129591 // String
	  param inout name "function" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end
    end

    class 506935 "UsbPort"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents a physical USB port and describes its characteristics.
<p>
This object is immutable.
</p>

@hide"
      classrelation 1332535 // <realization>
	relation 1332535 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1332535 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 1332663 // mId (<unidirectional association>)
	relation 1332663 --->
	  a role_name "mId" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1332663 // mId (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1438007 "mSupportedModes"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1438135 "MODE_DFP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mode bit: This USB port can act as a downstream facing port (host).
<p>
Implies that the port supports the {@link #POWER_ROLE_SOURCE} and {@link #DATA_ROLE_HOST}
combination of roles (and possibly others as well).
</p>
"
      end

      attribute 1438263 "MODE_UFP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mode bit: This USB port can act as an upstream facing port (device).
<p>
Implies that the port supports the {@link #POWER_ROLE_SINK} and {@link #DATA_ROLE_DEVICE}
combination of roles (and possibly others as well).
</p>
"
      end

      attribute 1438391 "MODE_DUAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " MODE_DFP | MODE_UFP"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mode bit: This USB port can act either as an downstream facing port (host) or as
an upstream facing port (device).
<p>
Implies that the port supports the {@link #POWER_ROLE_SOURCE} and {@link #DATA_ROLE_HOST}
combination of roles and the {@link #POWER_ROLE_SINK} and {@link #DATA_ROLE_DEVICE}
combination of roles (and possibly others as well).
</p>
"
      end

      attribute 1438519 "POWER_ROLE_SOURCE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Power role: This USB port can act as a source (provide power).
"
      end

      attribute 1438647 "POWER_ROLE_SINK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Power role: This USB port can act as a sink (receive power).
"
      end

      attribute 1438775 "DATA_ROLE_HOST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Data role: This USB port can act as a host (access data services).
"
      end

      attribute 1438903 "DATA_ROLE_DEVICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Data role: This USB port can act as a device (offer data services).
"
      end

      attribute 1439031 "NUM_DATA_ROLES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3378103 "UsbPort"
	public explicit_return_type ""
	nparams 2
	  param inout name "id" type class_ref 129591 // String
	  param in name "supportedModes" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3378231 "getId"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the unique id of the port.

@return The unique id of the port; not intended for display."
      end

      operation 3378359 "getSupportedModes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the supported modes of the port.
<p>
The actual mode of the port may vary depending on what is plugged into it.
</p>

@return The supported modes: one of {@link #MODE_DFP}, {@link #MODE_UFP}, or
{@link #MODE_DUAL}."
      end

      operation 3378487 "combineRolesAsBit"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "powerRole" explicit_type "int"
	  param in name "dataRole" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Combines one power and one data role together into a unique value with
exactly one bit set.  This can be used to efficiently determine whether
a combination of roles is supported by testing whether that bit is present
in a bit-field.

@param powerRole The desired power role: {@link UsbPort#POWER_ROLE_SOURCE}
or {@link UsbPort#POWER_ROLE_SINK}, or 0 if no power role.
@param dataRole The desired data role: {@link UsbPort#DATA_ROLE_HOST}
or {@link UsbPort#DATA_ROLE_DEVICE}, or 0 if no data role.
@hide"
      end

      operation 3378615 "modeToString"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3378743 "powerRoleToString"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "role" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3378871 "dataRoleToString"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "role" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3378999 "roleCombinationsToString"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "combo" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3379127 "checkRoles"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "powerRole" explicit_type "int"
	  param in name "dataRole" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3379255 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3379383 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3379511 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1332791 // CREATOR (<unidirectional association>)
	relation 1332791 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<UsbPort>() {
        @Override
        public UsbPort createFromParcel(Parcel in) {
            String id = in.readString();
            int supportedModes = in.readInt();
            return new UsbPort(id, supportedModes);
        }

        @Override
        public UsbPort[] newArray(int size) {
            return new UsbPort[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UsbPort> ${name}${value};
"
	    classrelation_ref 1332791 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end

    class 507063 "UsbPortStatus"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Describes the status of a USB port.
<p>
This object is immutable.
</p>

@hide"
      classrelation 1332919 // <realization>
	relation 1332919 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1332919 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1439159 "mCurrentMode"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1439287 "mCurrentPowerRole"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1439415 "mCurrentDataRole"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1439543 "mSupportedRoleCombinations"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3379639 "UsbPortStatus"
	public explicit_return_type ""
	nparams 4
	  param in name "currentMode" explicit_type "int"
	  param in name "currentPowerRole" explicit_type "int"
	  param in name "currentDataRole" explicit_type "int"
	  param in name "supportedRoleCombinations" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3379767 "isConnected"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there is anything connected to the port.

@return True if there is anything connected to the port."
      end

      operation 3379895 "getCurrentMode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current mode of the port.

@return The current mode: {@link UsbPort#MODE_DFP}, {@link UsbPort#MODE_UFP},
or 0 if nothing is connected."
      end

      operation 3380023 "getCurrentPowerRole"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current power role of the port.

@return The current power role: {@link UsbPort#POWER_ROLE_SOURCE},
{@link UsbPort#POWER_ROLE_SINK}, or 0 if nothing is connected."
      end

      operation 3380151 "getCurrentDataRole"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current data role of the port.

@return The current data role: {@link UsbPort#DATA_ROLE_HOST},
{@link UsbPort#DATA_ROLE_DEVICE}, or 0 if nothing is connected."
      end

      operation 3380279 "isRoleCombinationSupported"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "powerRole" explicit_type "int"
	  param in name "dataRole" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the specified power and data role combination is supported
given what is currently connected to the port.

@param powerRole The power role to check: {@link UsbPort#POWER_ROLE_SOURCE}
or {@link UsbPort#POWER_ROLE_SINK}, or 0 if no power role.
@param dataRole The data role to check: either {@link UsbPort#DATA_ROLE_HOST}
or {@link UsbPort#DATA_ROLE_DEVICE}, or 0 if no data role."
      end

      operation 3380407 "getSupportedRoleCombinations"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3380535 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3380663 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3380791 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1333047 // CREATOR (<unidirectional association>)
	relation 1333047 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<UsbPortStatus>() {
        @Override
        public UsbPortStatus createFromParcel(Parcel in) {
            int currentMode = in.readInt();
            int currentPowerRole = in.readInt();
            int currentDataRole = in.readInt();
            int supportedRoleCombinations = in.readInt();
            return new UsbPortStatus(currentMode, currentPowerRole, currentDataRole,
                    supportedRoleCombinations);
        }

        @Override
        public UsbPortStatus[] newArray(int size) {
            return new UsbPortStatus[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UsbPortStatus> ${name}${value};
"
	    classrelation_ref 1333047 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end
  end

  deploymentview 152375 "usb"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 322743 "UsbAccessory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 505783 // UsbAccessory
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 322871 "UsbConfiguration"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 505911 // UsbConfiguration
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 322999 "UsbConstants"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 506167 // UsbConstants
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 323127 "UsbDevice"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 506295 // UsbDevice
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 323255 "UsbDeviceConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import java.io.FileDescriptor;
${definition}"
      associated_classes
	class_ref 506423 // UsbDeviceConnection
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 323383 "UsbEndpoint"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 506551 // UsbEndpoint
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 323511 "UsbInterface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 506039 // UsbInterface
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 323639 "UsbManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.util.Preconditions;
import android.app.PendingIntent;
import android.content.Context;
import android.os.Bundle;
import android.os.ParcelFileDescriptor;
import android.os.Process;
import android.os.RemoteException;
import android.util.Log;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 506807 // UsbManager
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 323767 "UsbPort"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.util.Preconditions;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 506935 // UsbPort
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 323895 "UsbPortStatus"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 507063 // UsbPortStatus
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 324023 "UsbRequest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import java.nio.ByteBuffer;
${definition}"
      associated_classes
	class_ref 506679 // UsbRequest
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
