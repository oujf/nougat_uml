class MockNetworkFactory
!!!34042295.java!!!	MockNetworkFactory(inout looper : Looper, inout context : Context, inout logTag : String, inout filter : NetworkCapabilities)
            super(looper, context, logTag, filter);
!!!34042423.java!!!	getMyRequestCount() : int
            return getRequestCount();
!!!34042551.java!!!	startNetwork() : void
            mNetworkStarted.set(true);
            mNetworkStartedCV.open();
!!!34042679.java!!!	stopNetwork() : void
            mNetworkStarted.set(false);
            mNetworkStoppedCV.open();
!!!34042807.java!!!	getMyStartRequested() : boolean
            return mNetworkStarted.get();
!!!34042935.java!!!	getNetworkStartedCV() : ConditionVariable
            mNetworkStartedCV.close();
            return mNetworkStartedCV;
!!!34043063.java!!!	getNetworkStoppedCV() : ConditionVariable
            mNetworkStoppedCV.close();
            return mNetworkStoppedCV;
!!!34043191.java!!!	handleAddRequest(inout request : NetworkRequest, in score : int) : void
            // If we're expecting anything, we must be expecting additions.
            if (mExpectations != null && !mExpectingAdditions) {
                fail("Can't add requests while expecting requests to be removed");
            }

            // Add the request.
            super.handleAddRequest(request, score);

            // Reduce the number of request additions we're waiting for.
            if (mExpectingAdditions) {
                assertTrue("Added more requests than expected", mExpectations.getCount() > 0);
                mExpectations.countDown();
            }
!!!34043319.java!!!	handleRemoveRequest(inout request : NetworkRequest) : void
            // If we're expecting anything, we must be expecting removals.
            if (mExpectations != null && mExpectingAdditions) {
                fail("Can't remove requests while expecting requests to be added");
            }

            // Remove the request.
            super.handleRemoveRequest(request);

            // Reduce the number of request removals we're waiting for.
            if (!mExpectingAdditions) {
                assertTrue("Removed more requests than expected", mExpectations.getCount() > 0);
                mExpectations.countDown();
            }
!!!34043447.java!!!	assertNoExpectations() : void
            if (mExpectations != null) {
                fail("Can't add expectation, " + mExpectations.getCount() + " already pending");
            }
!!!34043575.java!!!	expectAddRequests(in count : int) : void
            assertNoExpectations();
            mExpectingAdditions = true;
            mExpectations = new CountDownLatch(count);
!!!34043703.java!!!	expectRemoveRequests(in count : int) : void
            assertNoExpectations();
            mExpectingAdditions = false;
            mExpectations = new CountDownLatch(count);
!!!34043831.java!!!	waitForRequests() : void
            assertNotNull("Nothing to wait for", mExpectations);
            mExpectations.await(TIMEOUT_MS, TimeUnit.MILLISECONDS);
            final long count = mExpectations.getCount();
            final String msg = count + " requests still not " +
                    (mExpectingAdditions ? "added" : "removed") +
                    " after " + TIMEOUT_MS + " ms";
            assertEquals(msg, 0, count);
            mExpectations = null;
!!!34043959.java!!!	waitForNetworkRequests(in count : int) : void
            waitForRequests();
            assertEquals(count, getMyRequestCount());
