format 76
"format" // nougat_src::frameworks::base::core::java::android::text::format
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/core/java/android/text/format/"
  java_package "android.text.format"
  classview 161335 "format"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 520759 "Time"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An alternative to the {@link java.util.Calendar} and
{@link java.util.GregorianCalendar} classes. An instance of the Time class represents
a moment in time, specified with second precision. It is modelled after
struct tm. This class is not thread-safe and does not consider leap seconds.

<p>This class has a number of issues and it is recommended that
{@link java.util.GregorianCalendar} is used instead.

<p>Known issues:
<ul>
    <li>For historical reasons when performing time calculations all arithmetic currently takes
    place using 32-bit integers. This limits the reliable time range representable from 1902
    until 2037.See the wikipedia article on the
    <a href=\"http://en.wikipedia.org/wiki/Year_2038_problem\">Year 2038 problem</a> for details.
    Do not rely on this behavior; it may change in the future.
    </li>
    <li>Calling {@link #switchTimezone(String)} on a date that cannot exist, such as a wall time
    that was skipped due to a DST transition, will result in a date in 1969 (i.e. -1, or 1 second
    before 1st Jan 1970 UTC).</li>
    <li>Much of the formatting / parsing assumes ASCII text and is therefore not suitable for
    use with non-ASCII scripts.</li>
    <li>No support for pseudo-zones like \"GMT-07:00\".</li>
</ul>

@deprecated Use {@link java.util.GregorianCalendar} instead."
      classrelation 1934263 // Y_M_D_T_H_M_S_000 (<unidirectional association>)
	relation 1934263 --->
	  a role_name "Y_M_D_T_H_M_S_000" init_value " \"%Y-%m-%dT%H:%M:%S.000\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1934263 // Y_M_D_T_H_M_S_000 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1934391 // Y_M_D_T_H_M_S_000_Z (<unidirectional association>)
	relation 1934391 --->
	  a role_name "Y_M_D_T_H_M_S_000_Z" init_value " \"%Y-%m-%dT%H:%M:%S.000Z\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1934391 // Y_M_D_T_H_M_S_000_Z (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1934519 // Y_M_D (<unidirectional association>)
	relation 1934519 --->
	  a role_name "Y_M_D" init_value " \"%Y-%m-%d\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1934519 // Y_M_D (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1934647 // TIMEZONE_UTC (<unidirectional association>)
	relation 1934647 --->
	  a role_name "TIMEZONE_UTC" init_value " \"UTC\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1934647 // TIMEZONE_UTC (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1979319 "EPOCH_JULIAN_DAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2440588"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The Julian day of the epoch, that is, January 1, 1970 on the Gregorian
calendar.
"
      end

      attribute 1979447 "MONDAY_BEFORE_JULIAN_EPOCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " EPOCH_JULIAN_DAY - 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The Julian day of the Monday in the week of the epoch, December 29, 1969
on the Gregorian calendar.
"
      end

      attribute 1979575 "allDay"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "True if this is an allDay event. The hour, minute, second fields are
all zero, and the date is displayed the same in all time zones.
"
      end

      attribute 1979703 "second"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Seconds [0-61] (2 leap seconds allowed)
"
      end

      attribute 1979831 "minute"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Minute [0-59]
"
      end

      attribute 1979959 "hour"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Hour of day [0-23]
"
      end

      attribute 1980087 "monthDay"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Day of month [1-31]
"
      end

      attribute 1980215 "month"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Month [0-11]
"
      end

      attribute 1980343 "year"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Year. For example, 1970.
"
      end

      attribute 1980471 "weekDay"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Day of week [0-6]
"
      end

      attribute 1980599 "yearDay"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Day of year [0-365]
"
      end

      attribute 1980727 "isDst"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This time is in daylight savings time. One of:
<ul>
<li><b>positive</b> - in dst</li>
<li><b>0</b> - not in dst</li>
<li><b>negative</b> - unknown</li>
</ul>
"
      end

      attribute 1980855 "gmtoff"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Offset in seconds from UTC including any DST offset.
"
      end

      classrelation 1934775 // timezone (<unidirectional association>)
	relation 1934775 --->
	  a role_name "timezone" public
	    comment "
The timezone for this Time.  Should not be null.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1934775 // timezone (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1980983 "SECOND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Define symbolic constants for accessing the fields in this class. Used in
getActualMaximum().
"
      end

      attribute 1981111 "MINUTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1981239 "HOUR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1981367 "MONTH_DAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1981495 "MONTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1981623 "YEAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1981751 "WEEK_DAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1981879 "YEAR_DAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1982007 "WEEK_NUM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1982135 "SUNDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1982263 "MONDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1982391 "TUESDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1982519 "WEDNESDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1982647 "THURSDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1982775 "FRIDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1982903 "SATURDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 641591 "TimeCalculator"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1983287 "wallTime"
	  const_attribute public explicit_type "ZoneInfo.WallTime"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1935031 // timezone (<unidirectional association>)
	  relation 1935031 --->
	    a role_name "timezone" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1935031 // timezone (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1983415 "zoneInfo"
	  private explicit_type "ZoneInfo"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Information about the current timezone."
	end

	operation 4542647 "TimeCalculator"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "timezoneId" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4542775 "toMillis"
	  public explicit_return_type "long"
	  nparams 1
	    param inout name "ignoreDst" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4542903 "setTimeInMillis"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "millis" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4543031 "format"
	  public return_type class_ref 129591 // String
	  nparams 1
	    param inout name "format" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4543159 "updateZoneInfoFromTimeZone"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4543287 "lookupZoneInfo"
	  class_operation private explicit_return_type "ZoneInfo"
	  nparams 1
	    param inout name "timezoneId" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4543415 "switchTimeZone"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "timezone" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4543543 "format2445"
	  public return_type class_ref 129591 // String
	  nparams 1
	    param inout name "hasTime" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4543671 "toChar"
	  private explicit_return_type "char"
	  nparams 1
	    param in name "n" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4543799 "toStringInternal"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "A method that will return the state of this object in string form. Note: it has side
effects and so has deliberately not been made the default {@link #toString()}."
	end

	operation 4543927 "compare"
	  class_operation public explicit_return_type "int"
	  nparams 2
	    param inout name "aObject" type class_ref 641591 // TimeCalculator
	    param inout name "bObject" type class_ref 641591 // TimeCalculator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4544055 "copyFieldsToTime"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "time" type class_ref 520759 // Time
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4544183 "copyFieldsFromTime"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "time" type class_ref 520759 // Time
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1934903 // calculator (<unidirectional association>)
	relation 1934903 --->
	  a role_name "calculator" private
	    comment " An object that is reused for date calculations.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1934903 // calculator (<unidirectional association>)
	  b parent class_ref 641591 // TimeCalculator
      end

      operation 4538295 "Time"
	public explicit_return_type ""
	nparams 1
	  param inout name "timezoneId" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a Time object in the timezone named by the string
argument \"timezone\". The time is initialized to Jan 1, 1970.
@param timezoneId string containing the timezone to use.
@see TimeZone"
      end

      operation 4538423 "Time"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a Time object in the default timezone. The time is initialized to
Jan 1, 1970."
      end

      operation 4538551 "Time"
	public explicit_return_type ""
	nparams 1
	  param inout name "other" type class_ref 520759 // Time
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A copy constructor.  Construct a Time object by copying the given
Time object.  No normalization occurs.

@param other"
      end

      operation 4538679 "initialize"
	private explicit_return_type "void"
	nparams 1
	  param inout name "timezoneId" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Initialize the Time to 00:00:00 1/1/1970 in the specified timezone. "
      end

      operation 4538807 "normalize"
	public explicit_return_type "long"
	nparams 1
	  param inout name "ignoreDst" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures the values in each field are in range. For example if the
current value of this calendar is March 32, normalize() will convert it
to April 1. It also fills in weekDay, yearDay, isDst and gmtoff.

<p>
If \"ignoreDst\" is true, then this method sets the \"isDst\" field to -1
(the \"unknown\" value) before normalizing.  It then computes the
time in milliseconds and sets the correct value for \"isDst\" if the
fields resolve to a valid date / time.

<p>
See {@link #toMillis(boolean)} for more information about when to
use <tt>true</tt> or <tt>false</tt> for \"ignoreDst\" and when {@code -1}
might be returned.

@return the UTC milliseconds since the epoch, or {@code -1}"
      end

      operation 4538935 "switchTimezone"
	public explicit_return_type "void"
	nparams 1
	  param inout name "timezone" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert this time object so the time represented remains the same, but is
instead located in a different timezone. This method automatically calls
normalize() in some cases.

<p>This method can return incorrect results if the date / time cannot be normalized."
      end

      attribute 1983031 "DAYS_PER_MONTH"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " { 31, 28, 31, 30, 31, 30, 31,
            31, 30, 31, 30, 31 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 4539063 "getActualMaximum"
	public explicit_return_type "int"
	nparams 1
	  param in name "field" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the maximum possible value for the given field given the value of
the other fields. Requires that it be normalized for MONTH_DAY and
YEAR_DAY.
@param field one of the constants for HOUR, MINUTE, SECOND, etc.
@return the maximum value for the field."
      end

      operation 4539191 "clear"
	public explicit_return_type "void"
	nparams 1
	  param inout name "timezoneId" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears all values, setting the timezone to the given timezone. Sets isDst
to a negative value to mean \"unknown\".
@param timezoneId the timezone to use."
      end

      operation 4539319 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "a" type class_ref 520759 // Time
	  param inout name "b" type class_ref 520759 // Time
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compare two {@code Time} objects and return a negative number if {@code
a} is less than {@code b}, a positive number if {@code a} is greater than
{@code b}, or 0 if they are equal.

<p>
This method can return an incorrect answer when the date / time fields of
either {@code Time} have been set to a local time that contradicts the
available timezone information.

@param a first {@code Time} instance to compare
@param b second {@code Time} instance to compare
@throws NullPointerException if either argument is {@code null}
@throws IllegalArgumentException if {@link #allDay} is true but {@code
            hour}, {@code minute}, and {@code second} are not 0.
@return a negative result if {@code a} is earlier, a positive result if
        {@code b} is earlier, or 0 if they are equal."
      end

      operation 4539447 "format"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "format" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the current value given the format string provided. See man
strftime for what means what. The final string must be less than 256
characters.
@param format a string containing the desired format.
@return a String containing the current time expressed in the current locale."
      end

      operation 4539575 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Return the current time in YYYYMMDDTHHMMSS<tz> format"
      end

      operation 4539703 "parse"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a date-time string in either the RFC 2445 format or an abbreviated
format that does not include the \"time\" field.  For example, all of the
following strings are valid:

<ul>
  <li>\"20081013T160000Z\"</li>
  <li>\"20081013T160000\"</li>
  <li>\"20081013\"</li>
</ul>

Returns whether or not the time is in UTC (ends with Z).  If the string
ends with \"Z\" then the timezone is set to UTC.  If the date-time string
included only a date and no time field, then the <code>allDay</code>
field of this Time class is set to true and the <code>hour</code>,
<code>minute</code>, and <code>second</code> fields are set to zero;
otherwise (a time field was included in the date-time string)
<code>allDay</code> is set to false. The fields <code>weekDay</code>,
<code>yearDay</code>, and <code>gmtoff</code> are always set to zero,
and the field <code>isDst</code> is set to -1 (unknown).  To set those
fields, call {@link #normalize(boolean)} after parsing.

To parse a date-time string and convert it to UTC milliseconds, do
something like this:

<pre>
  Time time = new Time();
  String date = \"20081013T160000Z\";
  time.parse(date);
  long millis = time.normalize(false);
</pre>

@param s the string to parse
@return true if the resulting time value is in UTC time
@throws android.util.TimeFormatException if s cannot be parsed."
      end

      operation 4539831 "parseInternal"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a time in the current zone in YYYYMMDDTHHMMSS format."
      end

      operation 4539959 "checkChar"
	private explicit_return_type "void"
	nparams 3
	  param inout name "s" type class_ref 129591 // String
	  param in name "spos" explicit_type "int"
	  param in name "expected" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4540087 "getChar"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "s" type class_ref 129591 // String
	  param in name "spos" explicit_type "int"
	  param in name "mul" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4540215 "parse3339"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a time in RFC 3339 format.  This method also parses simple dates
(that is, strings that contain no time or time offset).  For example,
all of the following strings are valid:

<ul>
  <li>\"2008-10-13T16:00:00.000Z\"</li>
  <li>\"2008-10-13T16:00:00.000+07:00\"</li>
  <li>\"2008-10-13T16:00:00.000-07:00\"</li>
  <li>\"2008-10-13\"</li>
</ul>

<p>
If the string contains a time and time offset, then the time offset will
be used to convert the time value to UTC.
</p>

<p>
If the given string contains just a date (with no time field), then
the {@link #allDay} field is set to true and the {@link #hour},
{@link #minute}, and  {@link #second} fields are set to zero.
</p>

<p>
Returns true if the resulting time value is in UTC time.
</p>

@param s the string to parse
@return true if the resulting time value is in UTC time
@throws android.util.TimeFormatException if s cannot be parsed."
      end

      operation 4540343 "parse3339Internal"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4540471 "getCurrentTimezone"
	class_operation public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the timezone string that is currently set for the device."
      end

      operation 4540599 "setToNow"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time of the given Time object to the current time."
      end

      operation 4540727 "toMillis"
	public explicit_return_type "long"
	nparams 1
	  param inout name "ignoreDst" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this time to milliseconds. Suitable for interacting with the
standard java libraries. The time is in UTC milliseconds since the epoch.
This does an implicit normalization to compute the milliseconds but does
<em>not</em> change any of the fields in this Time object.  If you want
to normalize the fields in this Time object and also get the milliseconds
then use {@link #normalize(boolean)}.

<p>
If \"ignoreDst\" is false, then this method uses the current setting of the
\"isDst\" field and will adjust the returned time if the \"isDst\" field is
wrong for the given time.  See the sample code below for an example of
this.

<p>
If \"ignoreDst\" is true, then this method ignores the current setting of
the \"isDst\" field in this Time object and will instead figure out the
correct value of \"isDst\" (as best it can) from the fields in this
Time object.  The only case where this method cannot figure out the
correct value of the \"isDst\" field is when the time is inherently
ambiguous because it falls in the hour that is repeated when switching
from Daylight-Saving Time to Standard Time.

<p>
Here is an example where <tt>toMillis(true)</tt> adjusts the time,
assuming that DST changes at 2am on Sunday, Nov 4, 2007.

<pre>
Time time = new Time();
time.set(4, 10, 2007);  // set the date to Nov 4, 2007, 12am
time.normalize(false);       // this sets isDst = 1
time.monthDay += 1;     // changes the date to Nov 5, 2007, 12am
millis = time.toMillis(false);   // millis is Nov 4, 2007, 11pm
millis = time.toMillis(true);    // millis is Nov 5, 2007, 12am
</pre>

<p>
To avoid this problem, use <tt>toMillis(true)</tt>
after adding or subtracting days or explicitly setting the \"monthDay\"
field.  On the other hand, if you are adding
or subtracting hours or minutes, then you should use
<tt>toMillis(false)</tt>.

<p>
You should also use <tt>toMillis(false)</tt> if you want
to read back the same milliseconds that you set with {@link #set(long)}

<p>
This method can return {@code -1} when the date / time fields have been
set to a local time that conflicts with available timezone information.
For example, when daylight savings transitions cause an hour to be
skipped: times within that hour will return {@code -1} if isDst =
{@code -1}.

or {@link #set(Time)} or after parsing a date string."
      end

      operation 4540855 "set"
	public explicit_return_type "void"
	nparams 1
	  param in name "millis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the fields in this Time object given the UTC milliseconds.  After
this method returns, all the fields are normalized.
This also sets the \"isDst\" field to the correct value.

@param millis the time in UTC milliseconds since the epoch."
      end

      operation 4540983 "format2445"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Format according to RFC 2445 DATE-TIME type.

<p>The same as format(\"%Y%m%dT%H%M%S\"), or format(\"%Y%m%dT%H%M%SZ\") for a Time with a
timezone set to \"UTC\"."
      end

      operation 4541111 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "that" type class_ref 520759 // Time
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy the value of that to this Time object. No normalization happens."
      end

      operation 4541239 "set"
	public explicit_return_type "void"
	nparams 6
	  param in name "second" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "monthDay" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "year" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the fields. Sets weekDay, yearDay and gmtoff to 0, and isDst to -1.
Call {@link #normalize(boolean)} if you need those."
      end

      operation 4541367 "set"
	public explicit_return_type "void"
	nparams 3
	  param in name "monthDay" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "year" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the date from the given fields.  Also sets allDay to true.
Sets weekDay, yearDay and gmtoff to 0, and isDst to -1.
Call {@link #normalize(boolean)} if you need those.

@param monthDay the day of the month (in the range [1,31])
@param month the zero-based month number (in the range [0,11])
@param year the year"
      end

      operation 4541495 "before"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "that" type class_ref 520759 // Time
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the time represented by this Time object occurs before
the given time.

<p>
Equivalent to {@code Time.compare(this, that) < 0}. See
{@link #compare(Time, Time)} for details.

@param that a given Time object to compare against
@return true if this time is less than the given time"
      end

      operation 4541623 "after"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "that" type class_ref 520759 // Time
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the time represented by this Time object occurs after
the given time.

<p>
Equivalent to {@code Time.compare(this, that) > 0}. See
{@link #compare(Time, Time)} for details.

@param that a given Time object to compare against
@return true if this time is greater than the given time"
      end

      attribute 1983159 "sThursdayOffset"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " { -3, 3, 2, 1, 0, -1, -2 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This array is indexed by the weekDay field (SUNDAY=0, MONDAY=1, etc.)
and gives a number that can be added to the yearDay to give the
closest Thursday yearDay.
"
      end

      operation 4541751 "getWeekNumber"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the week number according to ISO 8601.  The current Time
object must already be normalized because this method uses the
yearDay and weekDay fields.

<p>
In IS0 8601, weeks start on Monday.
The first week of the year (week 1) is defined by ISO 8601 as the
first week with four or more of its days in the starting year.
Or equivalently, the week containing January 4.  Or equivalently,
the week with the year's first Thursday in it.
</p>

<p>
The week number can be calculated by counting Thursdays.  Week N
contains the Nth Thursday of the year.
</p>

@return the ISO week number."
      end

      operation 4541879 "format3339"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "allDay" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a string in the RFC 3339 format.
<p>
If allDay is true, expresses the time as Y-M-D</p>
<p>
Otherwise, if the timezone is UTC, expresses the time as Y-M-D-T-H-M-S UTC</p>
<p>
Otherwise the time is expressed the time as Y-M-D-T-H-M-S +- GMT</p>
@return string in the RFC 3339 format."
      end

      operation 4542007 "isEpoch"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "time" type class_ref 520759 // Time
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the day of the given time is the epoch on the Julian Calendar
(January 1, 1970 on the Gregorian calendar).

<p>
This method can return an incorrect answer when the date / time fields have
been set to a local time that contradicts the available timezone information.

@param time the time to test
@return true if epoch."
      end

      operation 4542135 "getJulianDay"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "millis" explicit_type "long"
	  param in name "gmtoff" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the Julian day number for a point in time in a particular
timezone. The Julian day for a given date is the same for every
timezone. For example, the Julian day for July 1, 2008 is 2454649.

<p>Callers must pass the time in UTC millisecond (as can be returned
by {@link #toMillis(boolean)} or {@link #normalize(boolean)})
and the offset from UTC of the timezone in seconds (as might be in
{@link #gmtoff}).

<p>The Julian day is useful for testing if two events occur on the
same calendar date and for determining the relative time of an event
from the present (\"yesterday\", \"3 days ago\", etc.).

@param millis the time in UTC milliseconds
@param gmtoff the offset from UTC in seconds
@return the Julian day"
      end

      operation 4542263 "setJulianDay"
	public explicit_return_type "long"
	nparams 1
	  param in name "julianDay" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the time from the given Julian day number, which must be based on
the same timezone that is set in this Time object.  The \"gmtoff\" field
need not be initialized because the given Julian day may have a different
GMT offset than whatever is currently stored in this Time object anyway.
After this method returns all the fields will be normalized and the time
will be set to 12am at the beginning of the given Julian day.
</p>

<p>
The only exception to this is if 12am does not exist for that day because
of daylight saving time.  For example, Cairo, Eqypt moves time ahead one
hour at 12am on April 25, 2008 and there are a few other places that
also change daylight saving time at 12am.  In those cases, the time
will be set to 1am.
</p>

@param julianDay the Julian day in the timezone for this Time object
@return the UTC milliseconds for the beginning of the Julian day"
      end

      operation 4542391 "getWeeksSinceEpochFromJulianDay"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "julianDay" explicit_type "int"
	  param in name "firstDayOfWeek" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the week since {@link #EPOCH_JULIAN_DAY} (Jan 1, 1970) adjusted
for first day of week. This takes a julian day and the week start day and
calculates which week since {@link #EPOCH_JULIAN_DAY} that day occurs in,
starting at 0. *Do not* use this to compute the ISO week number for the
year.

@param julianDay The julian day to calculate the week number for
@param firstDayOfWeek Which week day is the first day of the week, see
           {@link #SUNDAY}
@return Weeks since the epoch"
      end

      operation 4542519 "getJulianMondayFromWeeksSinceEpoch"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "week" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Takes a number of weeks since the epoch and calculates the Julian day of
the Monday for that week. This assumes that the week containing the
{@link #EPOCH_JULIAN_DAY} is considered week 0. It returns the Julian day
for the Monday week weeks after the Monday of the week containing the
epoch.

@param week Number of weeks since the epoch
@return The julian day for the Monday of the given week since the epoch"
      end
    end

    class 641079 "DateFormat"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility class for producing strings with formatted date/time.

<p>Most callers should avoid supplying their own format strings to this
class' {@code format} methods and rely on the correctly localized ones
supplied by the system. This class' factory methods return
appropriately-localized {@link java.text.DateFormat} instances, suitable
for both formatting and parsing dates. For the canonical documentation
of format strings, see {@link java.text.SimpleDateFormat}.

<p>In cases where the system does not provide a suitable pattern,
this class offers the {@link #getBestDateTimePattern} method.

<p>The {@code format} methods in this class implement a subset of Unicode
<a href=\"http://www.unicode.org/reports/tr35/#Date_Format_Patterns\">UTS #35</a> patterns.
The subset currently supported by this class includes the following format characters:
{@code acdEHhLKkLMmsyz}. Up to API level 17, only {@code adEhkMmszy} were supported.
Note that this class incorrectly implements {@code k} as if it were {@code H} for backwards
compatibility.

<p>See {@link java.text.SimpleDateFormat} for more documentation
about patterns, or if you need a more complete or correct implementation.
Note that the non-{@code format} methods in this class are implemented by
{@code SimpleDateFormat}."
      attribute 1972023 "QUOTE"
	class_attribute const_attribute public explicit_type "char"
	init_value "    '\\''"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code '} instead.
@removed
"
      end

      attribute 1972151 "AM_PM"
	class_attribute const_attribute public explicit_type "char"
	init_value "    'a'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 'a'} instead.
@removed
"
      end

      attribute 1972279 "CAPITAL_AM_PM"
	class_attribute const_attribute public explicit_type "char"
	init_value "    'A'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 'a'} instead; 'A' was always equivalent to 'a'.
@removed
"
      end

      attribute 1972407 "DATE"
	class_attribute const_attribute public explicit_type "char"
	init_value "    'd'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 'd'} instead.
@removed
"
      end

      attribute 1972535 "DAY"
	class_attribute const_attribute public explicit_type "char"
	init_value "    'E'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 'E'} instead.
@removed
"
      end

      attribute 1972663 "HOUR"
	class_attribute const_attribute public explicit_type "char"
	init_value "    'h'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 'h'} instead.
@removed
"
      end

      attribute 1972791 "HOUR_OF_DAY"
	class_attribute const_attribute public explicit_type "char"
	init_value "    'k'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 'H'} (for compatibility with {@link SimpleDateFormat}
and Unicode) or {@code 'k'} (for compatibility with Android releases up to and including
Jelly Bean MR-1) instead. Note that the two are incompatible.

@removed
"
      end

      attribute 1972919 "MINUTE"
	class_attribute const_attribute public explicit_type "char"
	init_value "    'm'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 'm'} instead.
@removed
"
      end

      attribute 1973047 "MONTH"
	class_attribute const_attribute public explicit_type "char"
	init_value "    'M'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 'M'} instead.
@removed
"
      end

      attribute 1973175 "STANDALONE_MONTH"
	class_attribute const_attribute public explicit_type "char"
	init_value "    'L'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 'L'} instead.
@removed
"
      end

      attribute 1973303 "SECONDS"
	class_attribute const_attribute public explicit_type "char"
	init_value "    's'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 's'} instead.
@removed
"
      end

      attribute 1973431 "TIME_ZONE"
	class_attribute const_attribute public explicit_type "char"
	init_value "    'z'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 'z'} instead.
@removed
"
      end

      attribute 1973559 "YEAR"
	class_attribute const_attribute public explicit_type "char"
	init_value "    'y'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use a literal {@code 'y'} instead.
@removed
"
      end

      classrelation 1931959 // sLocaleLock (<unidirectional association>)
	relation 1931959 --->
	  a role_name "sLocaleLock" init_value " new Object()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1931959 // sLocaleLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      attribute 1973687 "sIs24HourLocale"
	class_attribute private explicit_type "Locale"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1973815 "sIs24Hour"
	class_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 4531639 "is24HourFormat"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if user preference is set to 24-hour format.
@param context the context to use for the content resolver
@return true if 24 hour time format is selected, false otherwise."
      end

      operation 4531767 "is24HourFormat"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if user preference with the given user handle is set to 24-hour format.
@param context the context to use for the content resolver
@param userHandle the user handle of the user to query.
@return true if 24 hour time format is selected, false otherwise.

@hide"
      end

      operation 4531895 "getBestDateTimePattern"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "locale" explicit_type "Locale"
	  param inout name "skeleton" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the best possible localized form of the given skeleton for the given
locale. A skeleton is similar to, and uses the same format characters as, a Unicode
<a href=\"http://www.unicode.org/reports/tr35/#Date_Format_Patterns\">UTS #35</a>
pattern.

<p>One difference is that order is irrelevant. For example, \"MMMMd\" will return
\"MMMM d\" in the {@code en_US} locale, but \"d. MMMM\" in the {@code de_CH} locale.

<p>Note also in that second example that the necessary punctuation for German was
added. For the same input in {@code es_ES}, we'd have even more extra text:
\"d 'de' MMMM\".

<p>This method will automatically correct for grammatical necessity. Given the
same \"MMMMd\" input, this method will return \"d LLLL\" in the {@code fa_IR} locale,
where stand-alone months are necessary. Lengths are preserved where meaningful,
so \"Md\" would give a different result to \"MMMd\", say, except in a locale such as
{@code ja_JP} where there is only one length of month.

<p>This method will only return patterns that are in CLDR, and is useful whenever
you know what elements you want in your format string but don't want to make your
code specific to any one locale.

@param locale the locale into which the skeleton should be localized
@param skeleton a skeleton as described above
@return a string pattern suitable for use with {@link java.text.SimpleDateFormat}."
      end

      operation 4532023 "getTimeFormat"
	class_operation public explicit_return_type "java.text.DateFormat"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link java.text.DateFormat} object that can format the time according
to the current locale and the user's 12-/24-hour clock preference.
@param context the application context
@return the {@link java.text.DateFormat} object that properly formats the time."
      end

      operation 4532151 "getTimeFormatString"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a String pattern that can be used to format the time according
to the current locale and the user's 12-/24-hour clock preference.
@param context the application context
@hide"
      end

      operation 4532279 "getTimeFormatString"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a String pattern that can be used to format the time according
to the current locale and the user's 12-/24-hour clock preference.
@param context the application context
@param userHandle the user handle of the user to query the format for
@hide"
      end

      operation 4532407 "getDateFormat"
	class_operation public explicit_return_type "java.text.DateFormat"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link java.text.DateFormat} object that can format the date
in short form according to the current locale.

@param context the application context
@return the {@link java.text.DateFormat} object that properly formats the date."
      end

      operation 4532535 "getLongDateFormat"
	class_operation public explicit_return_type "java.text.DateFormat"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link java.text.DateFormat} object that can format the date
in long form (such as {@code Monday, January 3, 2000}) for the current locale.
@param context the application context
@return the {@link java.text.DateFormat} object that formats the date in long form."
      end

      operation 4532663 "getMediumDateFormat"
	class_operation public explicit_return_type "java.text.DateFormat"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link java.text.DateFormat} object that can format the date
in medium form (such as {@code Jan 3, 2000}) for the current locale.
@param context the application context
@return the {@link java.text.DateFormat} object that formats the date in long form."
      end

      operation 4532791 "getDateFormatOrder"
	class_operation public explicit_return_type "char"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current date format stored as a char array. Returns a 3 element
array containing the day ({@code 'd'}), month ({@code 'M'}), and year ({@code 'y'}))
in the order specified by the user's format preference.  Note that this order is
<i>only</i> appropriate for all-numeric dates; spelled-out (MEDIUM and LONG)
dates will generally contain other punctuation, spaces, or words,
not just the day, month, and year, and not necessarily in the same
order returned here."
      end

      operation 4532919 "getDateFormatString"
	class_operation private return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4533047 "format"
	class_operation public explicit_return_type "CharSequence"
	nparams 2
	  param inout name "inFormat" explicit_type "CharSequence"
	  param in name "inTimeInMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a format string and a time in milliseconds since Jan 1, 1970 GMT, returns a
CharSequence containing the requested date.
@param inFormat the format string, as described in {@link android.text.format.DateFormat}
@param inTimeInMillis in milliseconds since Jan 1, 1970 GMT
@return a {@link CharSequence} containing the requested text"
      end

      operation 4533175 "format"
	class_operation public explicit_return_type "CharSequence"
	nparams 2
	  param inout name "inFormat" explicit_type "CharSequence"
	  param inout name "inDate" explicit_type "Date"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a format string and a {@link java.util.Date} object, returns a CharSequence containing
the requested date.
@param inFormat the format string, as described in {@link android.text.format.DateFormat}
@param inDate the date to format
@return a {@link CharSequence} containing the requested text"
      end

      operation 4533303 "hasSeconds"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "inFormat" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified format string contains seconds.

Always returns false if the input format is null.

@param inFormat the format string, as described in {@link android.text.format.DateFormat}

@return true if the format string contains {@link #SECONDS}, false otherwise

@hide"
      end

      operation 4533431 "hasDesignator"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "inFormat" explicit_type "CharSequence"
	  param in name "designator" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test if a format string contains the given designator. Always returns
{@code false} if the input format is {@code null}.

@hide"
      end

      operation 4533559 "skipQuotedText"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "s" explicit_type "CharSequence"
	  param in name "i" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4533687 "format"
	class_operation public explicit_return_type "CharSequence"
	nparams 2
	  param inout name "inFormat" explicit_type "CharSequence"
	  param inout name "inDate" explicit_type "Calendar"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a format string and a {@link java.util.Calendar} object, returns a CharSequence
containing the requested date.
@param inFormat the format string, as described in {@link android.text.format.DateFormat}
@param inDate the date to format
@return a {@link CharSequence} containing the requested text"
      end

      operation 4533815 "getDayOfWeekString"
	class_operation private return_type class_ref 129591 // String
	nparams 4
	  param inout name "ld" explicit_type "LocaleData"
	  param in name "day" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "kind" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4533943 "getMonthString"
	class_operation private return_type class_ref 129591 // String
	nparams 4
	  param inout name "ld" explicit_type "LocaleData"
	  param in name "month" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "kind" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4534071 "getTimeZoneString"
	class_operation private return_type class_ref 129591 // String
	nparams 2
	  param inout name "inDate" explicit_type "Calendar"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4534199 "formatZoneOffset"
	class_operation private return_type class_ref 129591 // String
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4534327 "getYearString"
	class_operation private return_type class_ref 129591 // String
	nparams 2
	  param in name "year" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4534455 "appendQuotedText"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "s" type class_ref 157239 // SpannableStringBuilder
	  param in name "i" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4534583 "zeroPad"
	class_operation private return_type class_ref 129591 // String
	nparams 2
	  param in name "inValue" explicit_type "int"
	  param in name "inMinDigits" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 641207 "DateUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class contains various date-related utilities for creating text for things like
elapsed time and date ranges, strings for days of the week and months, and AM/PM text etc."
      classrelation 1932087 // sLock (<unidirectional association>)
	relation 1932087 --->
	  a role_name "sLock" init_value " new Object()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1932087 // sLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      classrelation 1932215 // sLastConfig (<unidirectional association>)
	relation 1932215 --->
	  a role_name "sLastConfig" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1932215 // sLastConfig (<unidirectional association>)
	  b parent class_ref 133431 // Configuration
      end

      classrelation 1932343 // sElapsedFormatMMSS (<unidirectional association>)
	relation 1932343 --->
	  a role_name "sElapsedFormatMMSS" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1932343 // sElapsedFormatMMSS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1932471 // sElapsedFormatHMMSS (<unidirectional association>)
	relation 1932471 --->
	  a role_name "sElapsedFormatHMMSS" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1932471 // sElapsedFormatHMMSS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1973943 "SECOND_IN_MILLIS"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1974071 "MINUTE_IN_MILLIS"
	class_attribute const_attribute public explicit_type "long"
	init_value " SECOND_IN_MILLIS * 60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1974199 "HOUR_IN_MILLIS"
	class_attribute const_attribute public explicit_type "long"
	init_value " MINUTE_IN_MILLIS * 60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1974327 "DAY_IN_MILLIS"
	class_attribute const_attribute public explicit_type "long"
	init_value " HOUR_IN_MILLIS * 24"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1974455 "WEEK_IN_MILLIS"
	class_attribute const_attribute public explicit_type "long"
	init_value " DAY_IN_MILLIS * 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1974583 "YEAR_IN_MILLIS"
	class_attribute const_attribute public explicit_type "long"
	init_value " WEEK_IN_MILLIS * 52"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This constant is actually the length of 364 days, not of a year!
"
      end

      attribute 1974711 "FORMAT_SHOW_TIME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The following FORMAT_* symbols are used for specifying the format of
 dates and times in the formatDateRange method."
      end

      attribute 1974839 "FORMAT_SHOW_WEEKDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1974967 "FORMAT_SHOW_YEAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1975095 "FORMAT_NO_YEAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1975223 "FORMAT_SHOW_DATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1975351 "FORMAT_NO_MONTH_DAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1975479 "FORMAT_12HOUR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1975607 "FORMAT_24HOUR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1975735 "FORMAT_CAP_AMPM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1975863 "FORMAT_NO_NOON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1975991 "FORMAT_CAP_NOON"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1976119 "FORMAT_NO_MIDNIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1976247 "FORMAT_CAP_MIDNIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1976375 "FORMAT_UTC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use
{@link #formatDateRange(Context, Formatter, long, long, int, String) formatDateRange}
and pass in {@link Time#TIMEZONE_UTC Time.TIMEZONE_UTC} for the timeZone instead.
"
      end

      attribute 1976503 "FORMAT_ABBREV_TIME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1976631 "FORMAT_ABBREV_WEEKDAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1976759 "FORMAT_ABBREV_MONTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1976887 "FORMAT_NUMERIC_DATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1977015 "FORMAT_ABBREV_RELATIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1977143 "FORMAT_ABBREV_ALL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1977271 "FORMAT_CAP_NOON_MIDNIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " (FORMAT_CAP_NOON | FORMAT_CAP_MIDNIGHT)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1977399 "FORMAT_NO_NOON_MIDNIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " (FORMAT_NO_NOON | FORMAT_NO_MIDNIGHT)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1932599 // HOUR_MINUTE_24 (<unidirectional association>)
	relation 1932599 --->
	  a role_name "HOUR_MINUTE_24" init_value " \"%H:%M\"" class_relation const_relation public
	    comment " Date and time format strings that are constant and don't need to be
 translated.

This is not actually the preferred 24-hour date format in all locales.
@deprecated Use {@link java.text.SimpleDateFormat} instead.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 1932599 // HOUR_MINUTE_24 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1932727 // MONTH_FORMAT (<unidirectional association>)
	relation 1932727 --->
	  a role_name "MONTH_FORMAT" init_value " \"%B\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1932727 // MONTH_FORMAT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1932855 // ABBREV_MONTH_FORMAT (<unidirectional association>)
	relation 1932855 --->
	  a role_name "ABBREV_MONTH_FORMAT" init_value " \"%b\"" class_relation const_relation public
	    comment "
This is not actually a useful month name in all locales.
@deprecated Use {@link java.text.SimpleDateFormat} instead.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Deprecated
"
	    classrelation_ref 1932855 // ABBREV_MONTH_FORMAT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1932983 // NUMERIC_MONTH_FORMAT (<unidirectional association>)
	relation 1932983 --->
	  a role_name "NUMERIC_MONTH_FORMAT" init_value " \"%m\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1932983 // NUMERIC_MONTH_FORMAT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1933111 // MONTH_DAY_FORMAT (<unidirectional association>)
	relation 1933111 --->
	  a role_name "MONTH_DAY_FORMAT" init_value " \"%-d\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1933111 // MONTH_DAY_FORMAT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1933239 // YEAR_FORMAT (<unidirectional association>)
	relation 1933239 --->
	  a role_name "YEAR_FORMAT" init_value " \"%Y\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1933239 // YEAR_FORMAT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1933367 // YEAR_FORMAT_TWO_DIGITS (<unidirectional association>)
	relation 1933367 --->
	  a role_name "YEAR_FORMAT_TWO_DIGITS" init_value " \"%g\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1933367 // YEAR_FORMAT_TWO_DIGITS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1933495 // WEEKDAY_FORMAT (<unidirectional association>)
	relation 1933495 --->
	  a role_name "WEEKDAY_FORMAT" init_value " \"%A\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1933495 // WEEKDAY_FORMAT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1933623 // ABBREV_WEEKDAY_FORMAT (<unidirectional association>)
	relation 1933623 --->
	  a role_name "ABBREV_WEEKDAY_FORMAT" init_value " \"%a\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1933623 // ABBREV_WEEKDAY_FORMAT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1977527 "sameYearTable"
	class_attribute const_attribute public explicit_type "int"
	multiplicity "[]"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @deprecated Do not use. "
      end

      attribute 1977655 "sameMonthTable"
	class_attribute const_attribute public explicit_type "int"
	multiplicity "[]"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @deprecated Do not use. "
      end

      attribute 1977783 "LENGTH_LONG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Request the full spelled-out name. For use with the 'abbrev' parameter of
{@link #getDayOfWeekString} and {@link #getMonthString}.

@more <p>
      e.g. \"Sunday\" or \"January\"
@deprecated Use {@link java.text.SimpleDateFormat} instead.
"
      end

      attribute 1977911 "LENGTH_MEDIUM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Request an abbreviated version of the name. For use with the 'abbrev'
parameter of {@link #getDayOfWeekString} and {@link #getMonthString}.

@more <p>
      e.g. \"Sun\" or \"Jan\"
@deprecated Use {@link java.text.SimpleDateFormat} instead.
"
      end

      attribute 1978039 "LENGTH_SHORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 30"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Request a shorter abbreviated version of the name.
For use with the 'abbrev' parameter of {@link #getDayOfWeekString} and {@link #getMonthString}.
@more
<p>e.g. \"Su\" or \"Jan\"
<p>In most languages, the results returned for LENGTH_SHORT will be the same as
the results returned for {@link #LENGTH_MEDIUM}.
@deprecated Use {@link java.text.SimpleDateFormat} instead.
"
      end

      attribute 1978167 "LENGTH_SHORTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 40"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Request an even shorter abbreviated version of the name.
Do not use this.  Currently this will always return the same result
as {@link #LENGTH_SHORT}.
@deprecated Use {@link java.text.SimpleDateFormat} instead.
"
      end

      attribute 1978295 "LENGTH_SHORTEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 50"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Request an even shorter abbreviated version of the name.
For use with the 'abbrev' parameter of {@link #getDayOfWeekString} and {@link #getMonthString}.
@more
<p>e.g. \"S\", \"T\", \"T\" or \"J\"
<p>In some languages, the results returned for LENGTH_SHORTEST will be the same as
the results returned for {@link #LENGTH_SHORT}.
@deprecated Use {@link java.text.SimpleDateFormat} instead.
"
      end

      operation 4534711 "getDayOfWeekString"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param in name "dayOfWeek" explicit_type "int"
	  param in name "abbrev" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Return a string for the day of the week.
@param dayOfWeek One of {@link Calendar#SUNDAY Calendar.SUNDAY},
              {@link Calendar#MONDAY Calendar.MONDAY}, etc.
@param abbrev One of {@link #LENGTH_LONG}, {@link #LENGTH_SHORT},
              {@link #LENGTH_MEDIUM}, or {@link #LENGTH_SHORTEST}.
              Note that in most languages, {@link #LENGTH_SHORT}
              will return the same as {@link #LENGTH_MEDIUM}.
              Undefined lengths will return {@link #LENGTH_MEDIUM}
              but may return something different in the future.
@throws IndexOutOfBoundsException if the dayOfWeek is out of bounds.
@deprecated Use {@link java.text.SimpleDateFormat} instead."
      end

      operation 4534839 "getAMPMString"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "ampm" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Return a localized string for AM or PM.
@param ampm Either {@link Calendar#AM Calendar.AM} or {@link Calendar#PM Calendar.PM}.
@throws IndexOutOfBoundsException if the ampm is out of bounds.
@return Localized version of \"AM\" or \"PM\".
@deprecated Use {@link java.text.SimpleDateFormat} instead."
      end

      operation 4534967 "getMonthString"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param in name "month" explicit_type "int"
	  param in name "abbrev" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Return a localized string for the month of the year.
@param month One of {@link Calendar#JANUARY Calendar.JANUARY},
              {@link Calendar#FEBRUARY Calendar.FEBRUARY}, etc.
@param abbrev One of {@link #LENGTH_LONG}, {@link #LENGTH_MEDIUM},
              or {@link #LENGTH_SHORTEST}.
              Undefined lengths will return {@link #LENGTH_MEDIUM}
              but may return something different in the future.
@return Localized month of the year.
@deprecated Use {@link java.text.SimpleDateFormat} instead."
      end

      operation 4535095 "getRelativeTimeSpanString"
	class_operation public explicit_return_type "CharSequence"
	nparams 1
	  param in name "startTime" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing the elapsed time since startTime.
<p>
The minimum timespan to report is set to {@link #MINUTE_IN_MILLIS}.
@param startTime some time in the past.
@return a String object containing the elapsed time.
@see #getRelativeTimeSpanString(long, long, long)"
      end

      operation 4535223 "getRelativeTimeSpanString"
	class_operation public explicit_return_type "CharSequence"
	nparams 3
	  param in name "time" explicit_type "long"
	  param in name "now" explicit_type "long"
	  param in name "minResolution" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing 'time' as a time relative to 'now'.
<p>
Time spans in the past are formatted like \"42 minutes ago\".
Time spans in the future are formatted like \"In 42 minutes\".

@param time the time to describe, in milliseconds
@param now the current time in milliseconds
@param minResolution the minimum timespan to report. For example, a time 3 seconds in the
    past will be reported as \"0 minutes ago\" if this is set to MINUTE_IN_MILLIS. Pass one of
    0, MINUTE_IN_MILLIS, HOUR_IN_MILLIS, DAY_IN_MILLIS, WEEK_IN_MILLIS"
      end

      operation 4535351 "getRelativeTimeSpanString"
	class_operation public explicit_return_type "CharSequence"
	nparams 4
	  param in name "time" explicit_type "long"
	  param in name "now" explicit_type "long"
	  param in name "minResolution" explicit_type "long"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string describing 'time' as a time relative to 'now'.
<p>
Time spans in the past are formatted like \"42 minutes ago\". Time spans in
the future are formatted like \"In 42 minutes\".
<p>
Can use {@link #FORMAT_ABBREV_RELATIVE} flag to use abbreviated relative
times, like \"42 mins ago\".

@param time the time to describe, in milliseconds
@param now the current time in milliseconds
@param minResolution the minimum timespan to report. For example, a time
           3 seconds in the past will be reported as \"0 minutes ago\" if
           this is set to MINUTE_IN_MILLIS. Pass one of 0,
           MINUTE_IN_MILLIS, HOUR_IN_MILLIS, DAY_IN_MILLIS,
           WEEK_IN_MILLIS
@param flags a bit mask of formatting options, such as
           {@link #FORMAT_NUMERIC_DATE} or
           {@link #FORMAT_ABBREV_RELATIVE}"
      end

      operation 4535479 "getRelativeDateTimeString"
	class_operation public explicit_return_type "CharSequence"
	nparams 5
	  param inout name "c" type class_ref 128567 // Context
	  param in name "time" explicit_type "long"
	  param in name "minResolution" explicit_type "long"
	  param in name "transitionResolution" explicit_type "long"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return string describing the elapsed time since startTime formatted like
\"[relative time/date], [time]\".
<p>
Example output strings for the US date format.
<ul>
<li>3 min. ago, 10:15 AM</li>
<li>Yesterday, 12:20 PM</li>
<li>Dec 12, 4:12 AM</li>
<li>11/14/2007, 8:20 AM</li>
</ul>

@param time some time in the past.
@param minResolution the minimum elapsed time (in milliseconds) to report
           when showing relative times. For example, a time 3 seconds in
           the past will be reported as \"0 minutes ago\" if this is set to
           {@link #MINUTE_IN_MILLIS}.
@param transitionResolution the elapsed time (in milliseconds) at which
           to stop reporting relative measurements. Elapsed times greater
           than this resolution will default to normal date formatting.
           For example, will transition from \"7 days ago\" to \"Dec 12\"
           when using {@link #WEEK_IN_MILLIS}."
      end

      operation 4535607 "initFormatStrings"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4535735 "initFormatStringsLocked"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4535863 "formatDuration"
	class_operation public explicit_return_type "CharSequence"
	nparams 1
	  param in name "millis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return given duration in a human-friendly format. For example, \"4
minutes\" or \"1 second\". Returns only largest meaningful unit of time,
from seconds up to hours.

@hide"
      end

      operation 4535991 "formatElapsedTime"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "elapsedSeconds" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats an elapsed time in the form \"MM:SS\" or \"H:MM:SS\"
for display on the call-in-progress screen.
@param elapsedSeconds the elapsed time in seconds."
      end

      operation 4536119 "formatElapsedTime"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "recycle" explicit_type "StringBuilder"
	  param in name "elapsedSeconds" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats an elapsed time in a format like \"MM:SS\" or \"H:MM:SS\" (using a form
suited to the current locale), similar to that used on the call-in-progress
screen.

@param recycle {@link StringBuilder} to recycle, or null to use a temporary one.
@param elapsedSeconds the elapsed time in seconds."
      end

      operation 4536247 "formatSameDayTime"
	class_operation public explicit_return_type "CharSequence"
	nparams 4
	  param in name "then" explicit_type "long"
	  param in name "now" explicit_type "long"
	  param in name "dateStyle" explicit_type "int"
	  param in name "timeStyle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Format a date / time such that if the then is on the same day as now, it shows
just the time and if it's a different day, it shows just the date.

<p>The parameters dateFormat and timeFormat should each be one of
{@link java.text.DateFormat#DEFAULT},
{@link java.text.DateFormat#FULL},
{@link java.text.DateFormat#LONG},
{@link java.text.DateFormat#MEDIUM}
or
{@link java.text.DateFormat#SHORT}

@param then the date to format
@param now the base time
@param dateStyle how to format the date portion.
@param timeStyle how to format the time portion."
      end

      operation 4536375 "isToday"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "when" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if the supplied when is today else false"
      end

      operation 4536503 "formatDateRange"
	class_operation public return_type class_ref 129591 // String
	nparams 4
	  param inout name "context" type class_ref 128567 // Context
	  param in name "startMillis" explicit_type "long"
	  param in name "endMillis" explicit_type "long"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats a date or a time range according to the local conventions.
<p>
Note that this is a convenience method. Using it involves creating an
internal {@link java.util.Formatter} instance on-the-fly, which is
somewhat costly in terms of memory and time. This is probably acceptable
if you use the method only rarely, but if you rely on it for formatting a
large number of dates, consider creating and reusing your own
{@link java.util.Formatter} instance and use the version of
{@link #formatDateRange(Context, long, long, int) formatDateRange}
that takes a {@link java.util.Formatter}.

@param context the context is required only if the time is shown
@param startMillis the start time in UTC milliseconds
@param endMillis the end time in UTC milliseconds
@param flags a bit mask of options See
{@link #formatDateRange(Context, Formatter, long, long, int, String) formatDateRange}
@return a string containing the formatted date/time range."
      end

      operation 4536631 "formatDateRange"
	class_operation public return_type class_ref 641335 // Formatter
	nparams 5
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "formatter" type class_ref 641335 // Formatter
	  param in name "startMillis" explicit_type "long"
	  param in name "endMillis" explicit_type "long"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats a date or a time range according to the local conventions.
<p>
Note that this is a convenience method for formatting the date or
time range in the local time zone. If you want to specify the time
zone please use
{@link #formatDateRange(Context, Formatter, long, long, int, String) formatDateRange}.

@param context the context is required only if the time is shown
@param formatter the Formatter used for formatting the date range.
Note: be sure to call setLength(0) on StringBuilder passed to
the Formatter constructor unless you want the results to accumulate.
@param startMillis the start time in UTC milliseconds
@param endMillis the end time in UTC milliseconds
@param flags a bit mask of options See
{@link #formatDateRange(Context, Formatter, long, long, int, String) formatDateRange}
@return a string containing the formatted date/time range."
      end

      operation 4536759 "formatDateRange"
	class_operation public return_type class_ref 641335 // Formatter
	nparams 6
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "formatter" type class_ref 641335 // Formatter
	  param in name "startMillis" explicit_type "long"
	  param in name "endMillis" explicit_type "long"
	  param in name "flags" explicit_type "int"
	  param inout name "timeZone" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats a date or a time range according to the local conventions.

<p>
Example output strings (date formats in these examples are shown using
the US date format convention but that may change depending on the
local settings):
<ul>
  <li>10:15am</li>
  <li>3:00pm - 4:00pm</li>
  <li>3pm - 4pm</li>
  <li>3PM - 4PM</li>
  <li>08:00 - 17:00</li>
  <li>Oct 9</li>
  <li>Tue, Oct 9</li>
  <li>October 9, 2007</li>
  <li>Oct 9 - 10</li>
  <li>Oct 9 - 10, 2007</li>
  <li>Oct 28 - Nov 3, 2007</li>
  <li>Dec 31, 2007 - Jan 1, 2008</li>
  <li>Oct 9, 8:00am - Oct 10, 5:00pm</li>
  <li>12/31/2007 - 01/01/2008</li>
</ul>

<p>
The flags argument is a bitmask of options from the following list:

<ul>
  <li>FORMAT_SHOW_TIME</li>
  <li>FORMAT_SHOW_WEEKDAY</li>
  <li>FORMAT_SHOW_YEAR</li>
  <li>FORMAT_SHOW_DATE</li>
  <li>FORMAT_NO_MONTH_DAY</li>
  <li>FORMAT_12HOUR</li>
  <li>FORMAT_24HOUR</li>
  <li>FORMAT_CAP_AMPM</li>
  <li>FORMAT_NO_NOON</li>
  <li>FORMAT_CAP_NOON</li>
  <li>FORMAT_NO_MIDNIGHT</li>
  <li>FORMAT_CAP_MIDNIGHT</li>
  <li>FORMAT_UTC</li>
  <li>FORMAT_ABBREV_TIME</li>
  <li>FORMAT_ABBREV_WEEKDAY</li>
  <li>FORMAT_ABBREV_MONTH</li>
  <li>FORMAT_ABBREV_ALL</li>
  <li>FORMAT_NUMERIC_DATE</li>
</ul>

<p>
If FORMAT_SHOW_TIME is set, the time is shown as part of the date range.
If the start and end time are the same, then just the start time is
shown.

<p>
If FORMAT_SHOW_WEEKDAY is set, then the weekday is shown.

<p>
If FORMAT_SHOW_YEAR is set, then the year is always shown.
If FORMAT_SHOW_YEAR is not set, then the year
is shown only if it is different from the current year, or if the start
and end dates fall on different years.

<p>
Normally the date is shown unless the start and end day are the same.
If FORMAT_SHOW_DATE is set, then the date is always shown, even for
same day ranges.

<p>
If FORMAT_NO_MONTH_DAY is set, then if the date is shown, just the
month name will be shown, not the day of the month.  For example,
\"January, 2008\" instead of \"January 6 - 12, 2008\".

<p>
If FORMAT_CAP_AMPM is set and 12-hour time is used, then the \"AM\"
and \"PM\" are capitalized.  You should not use this flag
because in some locales these terms cannot be capitalized, and in
many others it doesn't make sense to do so even though it is possible.

<p>
If FORMAT_NO_NOON is set and 12-hour time is used, then \"12pm\" is
shown instead of \"noon\".

<p>
If FORMAT_CAP_NOON is set and 12-hour time is used, then \"Noon\" is
shown instead of \"noon\".  You should probably not use this flag
because in many locales it will not make sense to capitalize
the term.

<p>
If FORMAT_NO_MIDNIGHT is set and 12-hour time is used, then \"12am\" is
shown instead of \"midnight\".

<p>
If FORMAT_CAP_MIDNIGHT is set and 12-hour time is used, then \"Midnight\"
is shown instead of \"midnight\".  You should probably not use this
flag because in many locales it will not make sense to capitalize
the term.

<p>
If FORMAT_12HOUR is set and the time is shown, then the time is
shown in the 12-hour time format. You should not normally set this.
Instead, let the time format be chosen automatically according to the
system settings. If both FORMAT_12HOUR and FORMAT_24HOUR are set, then
FORMAT_24HOUR takes precedence.

<p>
If FORMAT_24HOUR is set and the time is shown, then the time is
shown in the 24-hour time format. You should not normally set this.
Instead, let the time format be chosen automatically according to the
system settings. If both FORMAT_12HOUR and FORMAT_24HOUR are set, then
FORMAT_24HOUR takes precedence.

<p>
If FORMAT_UTC is set, then the UTC time zone is used for the start
and end milliseconds unless a time zone is specified. If a time zone
is specified it will be used regardless of the FORMAT_UTC flag.

<p>
If FORMAT_ABBREV_TIME is set and 12-hour time format is used, then the
start and end times (if shown) are abbreviated by not showing the minutes
if they are zero.  For example, instead of \"3:00pm\" the time would be
abbreviated to \"3pm\".

<p>
If FORMAT_ABBREV_WEEKDAY is set, then the weekday (if shown) is
abbreviated to a 3-letter string.

<p>
If FORMAT_ABBREV_MONTH is set, then the month (if shown) is abbreviated
to a 3-letter string.

<p>
If FORMAT_ABBREV_ALL is set, then the weekday and the month (if shown)
are abbreviated to 3-letter strings.

<p>
If FORMAT_NUMERIC_DATE is set, then the date is shown in numeric format
instead of using the name of the month.  For example, \"12/31/2008\"
instead of \"December 31, 2008\".

<p>
If the end date ends at 12:00am at the beginning of a day, it is
formatted as the end of the previous day in two scenarios:
<ul>
  <li>For single day events. This results in \"8pm - midnight\" instead of
      \"Nov 10, 8pm - Nov 11, 12am\".</li>
  <li>When the time is not displayed. This results in \"Nov 10 - 11\" for
      an event with a start date of Nov 10 and an end date of Nov 12 at
      00:00.</li>
</ul>

@param context the context is required only if the time is shown
@param formatter the Formatter used for formatting the date range.
Note: be sure to call setLength(0) on StringBuilder passed to
the Formatter constructor unless you want the results to accumulate.
@param startMillis the start time in UTC milliseconds
@param endMillis the end time in UTC milliseconds
@param flags a bit mask of options
@param timeZone the time zone to compute the string in. Use null for local
or if the FORMAT_UTC flag is being used.

@return the formatter with the formatted date/time range appended to the string buffer."
      end

      operation 4536887 "formatDateTime"
	class_operation public return_type class_ref 129591 // String
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param in name "millis" explicit_type "long"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats a date or a time according to the local conventions. There are
lots of options that allow the caller to control, for example, if the
time is shown, if the day of the week is shown, if the month name is
abbreviated, if noon is shown instead of 12pm, and so on. For the
complete list of options, see the documentation for
{@link #formatDateRange}.
<p>
Example output strings (date formats in these examples are shown using
the US date format convention but that may change depending on the
local settings):
<ul>
  <li>10:15am</li>
  <li>3:00pm</li>
  <li>3pm</li>
  <li>3PM</li>
  <li>08:00</li>
  <li>17:00</li>
  <li>noon</li>
  <li>Noon</li>
  <li>midnight</li>
  <li>Midnight</li>
  <li>Oct 31</li>
  <li>Oct 31, 2007</li>
  <li>October 31, 2007</li>
  <li>10am, Oct 31</li>
  <li>17:00, Oct 31</li>
  <li>Wed</li>
  <li>Wednesday</li>
  <li>10am, Wed, Oct 31</li>
  <li>Wed, Oct 31</li>
  <li>Wednesday, Oct 31</li>
  <li>Wed, Oct 31, 2007</li>
  <li>Wed, October 31</li>
  <li>10/31/2007</li>
</ul>

@param context the context is required only if the time is shown
@param millis a point in time in UTC milliseconds
@param flags a bit mask of formatting options
@return a string containing the formatted date/time."
      end

      operation 4537015 "getRelativeTimeSpanString"
	class_operation public explicit_return_type "CharSequence"
	nparams 3
	  param inout name "c" type class_ref 128567 // Context
	  param in name "millis" explicit_type "long"
	  param inout name "withPreposition" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return a relative time string to display the time expressed by millis.  Times
are counted starting at midnight, which means that assuming that the current
time is March 31st, 0:30:
<ul>
  <li>\"millis=0:10 today\" will be displayed as \"0:10\"</li>
  <li>\"millis=11:30pm the day before\" will be displayed as \"Mar 30\"</li>
</ul>
If the given millis is in a different year, then the full date is
returned in numeric format (e.g., \"10/12/2008\").

@param withPreposition If true, the string returned will include the correct
preposition (\"at 9:20am\", \"on 10/12/2008\" or \"on May 29\")."
      end

      operation 4537143 "getRelativeTimeSpanString"
	class_operation public explicit_return_type "CharSequence"
	nparams 2
	  param inout name "c" type class_ref 128567 // Context
	  param in name "millis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience function to return relative time string without preposition.
@param c context for resources
@param millis time in milliseconds
@return {@link CharSequence} containing relative time.
@see #getRelativeTimeSpanString(Context, long, boolean)"
      end

      classrelation 1933751 // sNowTime (<unidirectional association>)
	relation 1933751 --->
	  a role_name "sNowTime" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1933751 // sNowTime (<unidirectional association>)
	  b parent class_ref 520759 // Time
      end

      classrelation 1933879 // sThenTime (<unidirectional association>)
	relation 1933879 --->
	  a role_name "sThenTime" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1933879 // sThenTime (<unidirectional association>)
	  b parent class_ref 520759 // Time
      end
    end

    class 641335 "Formatter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility class to aid in formatting common values that are not covered
by the {@link java.util.Formatter} class in {@link java.util}"
      attribute 1978423 "FLAG_SHORTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      attribute 1978551 "FLAG_CALCULATE_ROUNDED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      class 641463 "BytesResult"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1934007 // value (<unidirectional association>)
	  relation 1934007 --->
	    a role_name "value" const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1934007 // value (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 1934135 // units (<unidirectional association>)
	  relation 1934135 --->
	    a role_name "units" const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1934135 // units (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 1978679 "roundedBytes"
	  const_attribute public explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 4537271 "BytesResult"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "value" type class_ref 129591 // String
	    param inout name "units" type class_ref 129591 // String
	    param in name "roundedBytes" explicit_type "long"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 4537399 "bidiWrap"
	class_operation private return_type class_ref 129591 // String
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "source" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Wraps the source string in bidi formatting characters in RTL locales "
      end

      operation 4537527 "formatFileSize"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param in name "sizeBytes" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats a content size to be in the form of bytes, kilobytes, megabytes, etc.

If the context has a right-to-left locale, the returned string is wrapped in bidi formatting
characters to make sure it's displayed correctly if inserted inside a right-to-left string.
(This is useful in cases where the unit strings, like \"MB\", are left-to-right, but the
locale is right-to-left.)

@param context Context to use to load the localized units
@param sizeBytes size value to be formatted, in bytes
@return formatted string with the number"
      end

      operation 4537655 "formatShortFileSize"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param in name "sizeBytes" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #formatFileSize}, but trying to generate shorter numbers
(showing fewer digits of precision)."
      end

      operation 4537783 "formatBytes"
	class_operation public return_type class_ref 641463 // BytesResult
	nparams 3
	  param inout name "res" type class_ref 128951 // Resources
	  param in name "sizeBytes" explicit_type "long"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 4537911 "formatIpAddress"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param in name "ipv4Address" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns a string in the canonical IPv4 format ###.###.###.### from a packed integer
containing the IP address. The IPv4 address is expected to be in little-endian
format (LSB first). That is, 0x01020304 will return \"4.3.2.1\".

@deprecated Use {@link java.net.InetAddress#getHostAddress()}, which supports both IPv4 and
    IPv6 addresses. This method does not support IPv6 addresses."
      end

      attribute 1978807 "SECONDS_PER_MINUTE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1978935 "SECONDS_PER_HOUR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60 * 60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1979063 "SECONDS_PER_DAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 24 * 60 * 60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1979191 "MILLIS_PER_MINUTE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1000 * 60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 4538039 "formatShortElapsedTime"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param in name "millis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns elapsed time for the given millis, in the following format:
1 day 5 hrs; will include at most two units, can go down to seconds precision.
@param context the application context
@param millis the elapsed time in milli seconds
@return the formatted elapsed time
@hide"
      end

      operation 4538167 "formatShortElapsedTimeRoundingUpToMinutes"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param in name "millis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns elapsed time for the given millis, in the following format:
1 day 5 hrs; will include at most two units, can go down to minutes precision.
@param context the application context
@param millis the elapsed time in milli seconds
@return the formatted elapsed time
@hide"
      end
    end

    class 641719 "TimeFormatter"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Formatting logic for {@link Time}. Contains a port of Bionic's broken strftime_tz to Java.

<p>This class is not thread safe."
      attribute 1983543 "FORCE_LOWER_CASE"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " An arbitrary value outside the range representable by a char."
      end

      attribute 1983671 "SECSPERMIN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1983799 "MINSPERHOUR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1983927 "DAYSPERWEEK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1984055 "MONSPERYEAR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1984183 "HOURSPERDAY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 24"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1984311 "DAYSPERLYEAR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 366"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1984439 "DAYSPERNYEAR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 365"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1984567 "sLocale"
	class_attribute private explicit_type "Locale"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The Locale for which the cached LocaleData and formats have been loaded.
"
      end

      attribute 1984695 "sLocaleData"
	class_attribute private explicit_type "LocaleData"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1935159 // sTimeOnlyFormat (<unidirectional association>)
	relation 1935159 --->
	  a role_name "sTimeOnlyFormat" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1935159 // sTimeOnlyFormat (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1935287 // sDateOnlyFormat (<unidirectional association>)
	relation 1935287 --->
	  a role_name "sDateOnlyFormat" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1935287 // sDateOnlyFormat (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1935415 // sDateTimeFormat (<unidirectional association>)
	relation 1935415 --->
	  a role_name "sDateTimeFormat" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1935415 // sDateTimeFormat (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1984823 "localeData"
	const_attribute private explicit_type "LocaleData"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1935543 // dateTimeFormat (<unidirectional association>)
	relation 1935543 --->
	  a role_name "dateTimeFormat" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1935543 // dateTimeFormat (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1935671 // timeOnlyFormat (<unidirectional association>)
	relation 1935671 --->
	  a role_name "timeOnlyFormat" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1935671 // timeOnlyFormat (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1935799 // dateOnlyFormat (<unidirectional association>)
	relation 1935799 --->
	  a role_name "dateOnlyFormat" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1935799 // dateOnlyFormat (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1984951 "outputBuilder"
	private explicit_type "StringBuilder"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1935927 // numberFormatter (<unidirectional association>)
	relation 1935927 --->
	  a role_name "numberFormatter" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1935927 // numberFormatter (<unidirectional association>)
	  b parent class_ref 641335 // Formatter
      end

      operation 4544311 "TimeFormatter"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4544439 "format"
	public return_type class_ref 129591 // String
	nparams 3
	  param inout name "pattern" type class_ref 129591 // String
	  param inout name "wallTime" explicit_type "ZoneInfo.WallTime"
	  param inout name "zoneInfo" explicit_type "ZoneInfo"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Format the specified {@code wallTime} using {@code pattern}. The output is returned."
      end

      operation 4544567 "localizeDigits"
	private return_type class_ref 129591 // String
	nparams 1
	  param inout name "s" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4544695 "formatInternal"
	private explicit_return_type "void"
	nparams 3
	  param inout name "pattern" type class_ref 129591 // String
	  param inout name "wallTime" explicit_type "ZoneInfo.WallTime"
	  param inout name "zoneInfo" explicit_type "ZoneInfo"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Format the specified {@code wallTime} using {@code pattern}. The output is written to
{@link #outputBuilder}."
      end

      operation 4544823 "handleToken"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "formatBuffer" explicit_type "CharBuffer"
	  param inout name "wallTime" explicit_type "ZoneInfo.WallTime"
	  param inout name "zoneInfo" explicit_type "ZoneInfo"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4544951 "modifyAndAppend"
	private explicit_return_type "void"
	nparams 2
	  param inout name "str" explicit_type "CharSequence"
	  param in name "modifier" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4545079 "outputYear"
	private explicit_return_type "void"
	nparams 4
	  param in name "value" explicit_type "int"
	  param inout name "outputTop" explicit_type "boolean"
	  param inout name "outputBottom" explicit_type "boolean"
	  param in name "modifier" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4545207 "getFormat"
	class_operation private return_type class_ref 129591 // String
	nparams 5
	  param in name "modifier" explicit_type "int"
	  param inout name "normal" type class_ref 129591 // String
	  param inout name "underscore" type class_ref 129591 // String
	  param inout name "dash" type class_ref 129591 // String
	  param inout name "zero" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4545335 "isLeap"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "year" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4545463 "brokenIsUpper"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "toCheck" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A broken implementation of {@link Character#isUpperCase(char)} that assumes ASCII codes in
order to be compatible with the old native implementation."
      end

      operation 4545591 "brokenIsLower"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "toCheck" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A broken implementation of {@link Character#isLowerCase(char)} that assumes ASCII codes in
order to be compatible with the old native implementation."
      end

      operation 4545719 "brokenToLower"
	class_operation private explicit_return_type "char"
	nparams 1
	  param in name "input" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A broken implementation of {@link Character#toLowerCase(char)} that assumes ASCII codes in
order to be compatible with the old native implementation."
      end

      operation 4545847 "brokenToUpper"
	class_operation private explicit_return_type "char"
	nparams 1
	  param in name "input" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A broken implementation of {@link Character#toUpperCase(char)} that assumes ASCII codes in
order to be compatible with the old native implementation."
      end
    end

    class 873527 "DateFormatTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2667703 // <generalisation>
	relation 2667703 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2667703 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      operation 6887991 "testHasDesignator"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6888119 "testHasDesignatorEscaped"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end
    end

    class 873655 "DateUtilsTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2667831 // <generalisation>
	relation 2667831 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2667831 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      operation 6888247 "test_formatDuration_seconds"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment " This test is not in CTS because formatDuration is @hidden."
      end

      operation 6888375 "test_formatDuration_Minutes"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment " This test is not in CTS because formatDuration is @hidden."
      end

      operation 6888503 "test_formatDuration_Hours"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
	comment " This test is not in CTS because formatDuration is @hidden."
      end
    end

    class 873783 "FormatterTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2667959 // <generalisation>
	relation 2667959 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2667959 // <generalisation>
	  b parent class_ref 627895 // AndroidTestCase
      end

      attribute 2871223 "mOriginalLocale"
	private explicit_type "Locale"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6888631 "setUp"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6888759 "tearDown"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6888887 "setLocale"
	private explicit_return_type "void"
	nparams 1
	  param inout name "locale" explicit_type "Locale"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6889015 "testFormatBytes"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6889143 "checkFormatBytes"
	private explicit_return_type "void"
	nparams 4
	  param in name "bytes" explicit_type "long"
	  param inout name "useShort" explicit_type "boolean"
	  param inout name "expectedString" type class_ref 129591 // String
	  param in name "expectedRounded" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 873911 "TimeTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 2668087 // <generalisation>
	relation 2668087 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2668087 // <generalisation>
	  b parent class_ref 192695 // TestCase
      end

      operation 6889271 "testNormalize0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      class 874039 "DateTest"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2871351 "year1"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2871479 "month1"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2871607 "day1"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2871735 "hour1"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2871863 "minute1"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2871991 "dst1"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2872119 "offset"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2872247 "year2"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2872375 "month2"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2872503 "day2"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2872631 "hour2"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2872759 "minute2"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2872887 "dst2"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 6889399 "DateTest"
	  public explicit_return_type ""
	  nparams 13
	    param in name "year1" explicit_type "int"
	    param in name "month1" explicit_type "int"
	    param in name "day1" explicit_type "int"
	    param in name "hour1" explicit_type "int"
	    param in name "minute1" explicit_type "int"
	    param in name "dst1" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "year2" explicit_type "int"
	    param in name "month2" explicit_type "int"
	    param in name "day2" explicit_type "int"
	    param in name "hour2" explicit_type "int"
	    param in name "minute2" explicit_type "int"
	    param in name "dst2" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6889527 "DateTest"
	  public explicit_return_type ""
	  nparams 11
	    param in name "year1" explicit_type "int"
	    param in name "month1" explicit_type "int"
	    param in name "day1" explicit_type "int"
	    param in name "hour1" explicit_type "int"
	    param in name "minute1" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "year2" explicit_type "int"
	    param in name "month2" explicit_type "int"
	    param in name "day2" explicit_type "int"
	    param in name "hour2" explicit_type "int"
	    param in name "minute2" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 2668215 // dayTests (<unidirectional association>)
	relation 2668215 --->
	  a role_name "dayTests" multiplicity "[]" init_value " {
            // The month numbers are 0-relative, so Jan=0, Feb=1,...Dec=11

            // Nov 4, 12am + 0 day = Nov 4, 12am
            // Nov 5, 12am + 0 day = Nov 5, 12am
            new DateTest(2007, 10, 4, 0, 0, 0, 2007, 10, 4, 0, 0),
            new DateTest(2007, 10, 5, 0, 0, 0, 2007, 10, 5, 0, 0),

            // Nov 3, 12am + 1 day = Nov 4, 12am
            // Nov 4, 12am + 1 day = Nov 5, 12am
            // Nov 5, 12am + 1 day = Nov 6, 12am
            new DateTest(2007, 10, 3, 0, 0, 1, 2007, 10, 4, 0, 0),
            new DateTest(2007, 10, 4, 0, 0, 1, 2007, 10, 5, 0, 0),
            new DateTest(2007, 10, 5, 0, 0, 1, 2007, 10, 6, 0, 0),

            // Nov 3, 1am + 1 day = Nov 4, 1am
            // Nov 4, 1am + 1 day = Nov 5, 1am
            // Nov 5, 1am + 1 day = Nov 6, 1am
            new DateTest(2007, 10, 3, 1, 0, 1, 2007, 10, 4, 1, 0),
            new DateTest(2007, 10, 4, 1, 0, 1, 2007, 10, 5, 1, 0),
            new DateTest(2007, 10, 5, 1, 0, 1, 2007, 10, 6, 1, 0),

            // Nov 3, 2am + 1 day = Nov 4, 2am
            // Nov 4, 2am + 1 day = Nov 5, 2am
            // Nov 5, 2am + 1 day = Nov 6, 2am
            new DateTest(2007, 10, 3, 2, 0, 1, 2007, 10, 4, 2, 0),
            new DateTest(2007, 10, 4, 2, 0, 1, 2007, 10, 5, 2, 0),
            new DateTest(2007, 10, 5, 2, 0, 1, 2007, 10, 6, 2, 0),
    }" private
	    comment " These tests assume that DST changes on Nov 4, 2007 at 2am (to 1am).
 The \"offset\" field in \"dayTests\" represents days.
 Use normalize(true) with these tests to change the date by 1 day.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2668215 // dayTests (<unidirectional association>)
	  b parent class_ref 874039 // DateTest
      end

      classrelation 2668343 // minuteTests (<unidirectional association>)
	relation 2668343 --->
	  a role_name "minuteTests" multiplicity "[]" init_value " {
            // The month numbers are 0-relative, so Jan=0, Feb=1,...Dec=11

            // Nov 4, 12am + 0 minutes = Nov 4, 12am
            // Nov 5, 12am + 0 minutes = Nov 5, 12am
            new DateTest(2007, 10, 4, 0, 0, 0, 2007, 10, 4, 0, 0),
            new DateTest(2007, 10, 5, 0, 0, 0, 2007, 10, 5, 0, 0),

            // Nov 3, 12am + 60 minutes = Nov 3, 1am
            // Nov 4, 12am + 60 minutes = Nov 4, 1am
            // Nov 5, 12am + 60 minutes = Nov 5, 1am
            new DateTest(2007, 10, 3, 0, 0, 60, 2007, 10, 3, 1, 0),
            new DateTest(2007, 10, 4, 0, 0, 60, 2007, 10, 4, 1, 0),
            new DateTest(2007, 10, 5, 0, 0, 60, 2007, 10, 5, 1, 0),

            // Nov 3, 1am + 60 minutes = Nov 3, 2am
            // Nov 4, 1am (PDT) + 30 minutes = Nov 4, 1:30am (PDT)
            // Nov 4, 1am (PDT) + 60 minutes = Nov 4, 1am (PST)
            new DateTest(2007, 10, 3, 1, 0, 60, 2007, 10, 3, 2, 0),
            new DateTest(2007, 10, 4, 1, 0, 1, 30, 2007, 10, 4, 1, 30, 1),
            new DateTest(2007, 10, 4, 1, 0, 1, 60, 2007, 10, 4, 1, 0, 0),

            // Nov 4, 1:30am (PDT) + 15 minutes = Nov 4, 1:45am (PDT)
            // Nov 4, 1:30am (PDT) + 30 minutes = Nov 4, 1:00am (PST)
            // Nov 4, 1:30am (PDT) + 60 minutes = Nov 4, 1:30am (PST)
            new DateTest(2007, 10, 4, 1, 30, 1, 15, 2007, 10, 4, 1, 45, 1),
            new DateTest(2007, 10, 4, 1, 30, 1, 30, 2007, 10, 4, 1, 0, 0),
            new DateTest(2007, 10, 4, 1, 30, 1, 60, 2007, 10, 4, 1, 30, 0),

            // Nov 4, 1:30am (PST) + 15 minutes = Nov 4, 1:45am (PST)
            // Nov 4, 1:30am (PST) + 30 minutes = Nov 4, 2:00am (PST)
            // Nov 5, 1am + 60 minutes = Nov 5, 2am
            new DateTest(2007, 10, 4, 1, 30, 0, 15, 2007, 10, 4, 1, 45, 0),
            new DateTest(2007, 10, 4, 1, 30, 0, 30, 2007, 10, 4, 2, 0, 0),
            new DateTest(2007, 10, 5, 1, 0, 60, 2007, 10, 5, 2, 0),

            // Nov 3, 2am + 60 minutes = Nov 3, 3am
            // Nov 4, 2am + 30 minutes = Nov 4, 2:30am
            // Nov 4, 2am + 60 minutes = Nov 4, 3am
            // Nov 5, 2am + 60 minutes = Nov 5, 3am
            new DateTest(2007, 10, 3, 2, 0, 60, 2007, 10, 3, 3, 0),
            new DateTest(2007, 10, 4, 2, 0, 30, 2007, 10, 4, 2, 30),
            new DateTest(2007, 10, 4, 2, 0, 60, 2007, 10, 4, 3, 0),
            new DateTest(2007, 10, 5, 2, 0, 60, 2007, 10, 5, 3, 0),
    }" private
	    comment " The \"offset\" field in \"minuteTests\" represents minutes.
 Use normalize(false) with these tests.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2668343 // minuteTests (<unidirectional association>)
	  b parent class_ref 874039 // DateTest
      end

      operation 6889655 "testNormalize1"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6889783 "testSwitchTimezone0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6889911 "testCtor0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6890039 "testGetActualMaximum0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6890167 "testClear0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6890295 "testCompare0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6890423 "testFormat0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6890551 "testToString0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6890679 "testGetCurrentTimezone0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6890807 "testSetToNow0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6890935 "testMillis0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6891063 "testMillis1"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6891191 "testParse0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6891319 "testParse33390"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6891447 "testSet0"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      operation 6891575 "testSet1"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SmallTest
"
	
	
	
      end

      classrelation 2668471 // mTimeZones (<unidirectional association>)
	relation 2668471 --->
	  a role_name "mTimeZones" multiplicity "[]" init_value " {
        \"Pacific/Kiritimati\",
        \"Pacific/Enderbury\",
        \"Pacific/Fiji\",
        \"Antarctica/South_Pole\",
        \"Pacific/Norfolk\",
        \"Pacific/Ponape\",
        \"Asia/Magadan\",
        \"Australia/Lord_Howe\",
        \"Australia/Sydney\",
        \"Australia/Adelaide\",
        \"Asia/Tokyo\",
        \"Asia/Seoul\",
        \"Asia/Taipei\",
        \"Asia/Singapore\",
        \"Asia/Hong_Kong\",
        \"Asia/Saigon\",
        \"Asia/Bangkok\",
        \"Indian/Cocos\",
        \"Asia/Rangoon\",
        \"Asia/Omsk\",
        \"Antarctica/Mawson\",
        \"Asia/Colombo\",
        \"Asia/Calcutta\",
        \"Asia/Oral\",
        \"Asia/Kabul\",
        \"Asia/Dubai\",
        \"Asia/Tehran\",
        \"Europe/Moscow\",
        \"Asia/Baghdad\",
        \"Africa/Mogadishu\",
        \"Europe/Athens\",
        \"Africa/Cairo\",
        \"Europe/Rome\",
        \"Europe/Berlin\",
        \"Europe/Amsterdam\",
        \"Africa/Tunis\",
        \"Europe/London\",
        \"Europe/Dublin\",
        \"Atlantic/St_Helena\",
        \"Africa/Monrovia\",
        \"Africa/Accra\",
        \"Atlantic/Azores\",
        \"Atlantic/South_Georgia\",
        \"America/Noronha\",
        \"America/Sao_Paulo\",
        \"America/Cayenne\",
        \"America/St_Johns\",
        \"America/Puerto_Rico\",
        \"America/Aruba\",
        \"America/New_York\",
        \"America/Chicago\",
        \"America/Denver\",
        \"America/Los_Angeles\",
        \"America/Anchorage\",
        \"Pacific/Marquesas\",
        \"America/Adak\",
        \"Pacific/Honolulu\",
        \"Pacific/Midway\",
    }" class_relation const_relation private
	    comment " Timezones that cover the world.  Some GMT offsets occur more than
 once in case some cities decide to change their GMT offset.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2668471 // mTimeZones (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 6891703 "disableTestGetJulianDay"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Suppress
"
	
	
	
      end

      operation 6891831 "disableTestSetJulianDay"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Suppress
"
	
	
	
      end
    end

    class 1851959 "DateFormat_Delegate"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Delegate used to provide new implementation for the native methods of {@link DateFormat}

Through the layoutlib_create tool, the original  methods of DateFormat have been replaced
by calls to methods of the same name in this delegate class.
"
      operation 35340855 "is24HourFormat"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "package"
      end

      operation 35340983 "is24HourFormat"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LayoutlibDelegate
"
	
	
	
	comment "package"
      end
    end
  end

  deploymentview 157751 "format"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 380727 "DateFormat"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.UserHandle;
import android.provider.Settings;
import android.text.SpannableStringBuilder;
import android.text.Spanned;
import android.text.SpannedString;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.TimeZone;
import java.text.SimpleDateFormat;
import libcore.icu.ICU;
import libcore.icu.LocaleData;
${definition}"
      associated_classes
	class_ref 641079 // DateFormat
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 380855 "DateUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.R;
import android.content.Context;
import android.content.res.Configuration;
import android.content.res.Resources;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.Formatter;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.TimeZone;
import libcore.icu.DateIntervalFormat;
import libcore.icu.LocaleData;
import libcore.icu.RelativeDateTimeFormatter;
${definition}"
      associated_classes
	class_ref 641207 // DateUtils
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 380983 "Formatter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.content.Context;
import android.content.res.Resources;
import android.text.BidiFormatter;
import android.text.TextUtils;
import android.view.View;
import android.net.NetworkUtils;
import android.net.TrafficStats;
import java.util.Locale;
${definition}"
      associated_classes
	class_ref 641335 // Formatter
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 381111 "Time"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.TimeFormatException;
import java.io.IOException;
import java.util.Locale;
import java.util.TimeZone;
import libcore.util.ZoneInfo;
import libcore.util.ZoneInfoDB;
${definition}"
      associated_classes
	class_ref 520759 // Time
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 381239 "TimeFormatter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.Resources;
import java.nio.CharBuffer;
import java.util.Formatter;
import java.util.Locale;
import java.util.TimeZone;
import libcore.icu.LocaleData;
import libcore.util.ZoneInfo;
${definition}"
      associated_classes
	class_ref 641719 // TimeFormatter
      end
      comment "Based on the UCB version of strftime.c with the copyright notice appearing below.


* Copyright (c) 1989 The Regents of the University of California.
* All rights reserved.
*
* Redistribution and use in source and binary forms are permitted
* provided that the above copyright notice and this paragraph are
* duplicated in all such forms and that any documentation,
* advertising materials, and other materials related to such
* distribution and use acknowledge that the software was developed
* by the University of California, Berkeley. The name of the
* University may not be used to endorse or promote products derived
* from this software without specific prior written permission.
* THIS SOFTWARE IS PROVIDED \"AS IS\" AND WITHOUT ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE."
    end

    artifact 507703 "DateFormatTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.test.suitebuilder.annotation.SmallTest;
import junit.framework.TestCase;
${definition}"
      associated_classes
	class_ref 873527 // DateFormatTest
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 507831 "DateUtilsTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.test.suitebuilder.annotation.SmallTest;
import junit.framework.TestCase;
${definition}"
      associated_classes
	class_ref 873655 // DateUtilsTest
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 507959 "FormatterTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.Configuration;
import android.content.res.Resources;
import android.test.AndroidTestCase;
import android.test.suitebuilder.annotation.SmallTest;
import android.text.format.Formatter.BytesResult;
import java.util.Locale;
${definition}"
      associated_classes
	class_ref 873783 // FormatterTest
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 508087 "TimeTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.test.suitebuilder.annotation.SmallTest;
import android.test.suitebuilder.annotation.Suppress;
import android.text.format.Time;
import android.util.Log;
import android.util.TimeFormatException;
import junit.framework.TestCase;
${definition}"
      associated_classes
	class_ref 873911 // TimeTest
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1031479 "DateFormat_Delegate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.tools.layoutlib.annotations.LayoutlibDelegate;
import android.content.Context;
${definition}"
      associated_classes
	class_ref 1851959 // DateFormat_Delegate
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
