class PrioritySchedulingTest
!!!34134327.java!!!	setUp() : void
        super.setUp();
        kTestEnvironment.setUp();
        kJobServiceComponent = new ComponentName(getContext(), MockPriorityJobService.class);
        mJobScheduler = (JobScheduler) getContext().getSystemService(Context.JOB_SCHEDULER_SERVICE);
        mJobScheduler.cancelAll();
!!!34134455.java!!!	tearDown() : void
        mJobScheduler.cancelAll();
        super.tearDown();
!!!34134583.java!!!	testLowerPriorityJobPreempted() : void
        JobInfo job1 = new JobInfo.Builder(111, kJobServiceComponent)
                .setPriority(1)
                .setOverrideDeadline(7000L)
                .build();
        JobInfo job2 = new JobInfo.Builder(222, kJobServiceComponent)
                .setPriority(1)
                .setOverrideDeadline(7000L)
                .build();
        JobInfo job3 = new JobInfo.Builder(333, kJobServiceComponent)
                .setPriority(1)
                .setOverrideDeadline(7000L)
                .build();
        JobInfo job4 = new JobInfo.Builder(444, kJobServiceComponent)
                .setPriority(2)
                .setMinimumLatency(2000L)
                .setOverrideDeadline(7000L)
                .build();
        mJobScheduler.schedule(job1);
        mJobScheduler.schedule(job2);
        mJobScheduler.schedule(job3);
        mJobScheduler.schedule(job4);
        Thread.sleep(10000);  // Wait for job 4 to preempt one of the lower priority jobs

        Event job4Execution = new Event(TestEnvironment.EVENT_START_JOB, 444);
        ArrayList<Event> executedEvents = kTestEnvironment.getExecutedEvents();
        boolean wasJob4Executed = executedEvents.contains(job4Execution);
        boolean wasSomeJobPreempted = false;
        for (Event event: executedEvents) {
            if (event.event == TestEnvironment.EVENT_PREEMPT_JOB) {
                wasSomeJobPreempted = true;
                break;
            }
        }
        assertTrue("No job was preempted.", wasSomeJobPreempted);
        assertTrue("Lower priority jobs were not preempted.",  wasJob4Executed);
!!!34134711.java!!!	testHigherPriorityJobNotPreempted() : void
        JobInfo job1 = new JobInfo.Builder(111, kJobServiceComponent)
                .setPriority(2)
                .setOverrideDeadline(7000L)
                .build();
        JobInfo job2 = new JobInfo.Builder(222, kJobServiceComponent)
                .setPriority(2)
                .setOverrideDeadline(7000L)
                .build();
        JobInfo job3 = new JobInfo.Builder(333, kJobServiceComponent)
                .setPriority(2)
                .setOverrideDeadline(7000L)
                .build();
        JobInfo job4 = new JobInfo.Builder(444, kJobServiceComponent)
                .setPriority(1)
                .setMinimumLatency(2000L)
                .setOverrideDeadline(7000L)
                .build();
        mJobScheduler.schedule(job1);
        mJobScheduler.schedule(job2);
        mJobScheduler.schedule(job3);
        mJobScheduler.schedule(job4);
        Thread.sleep(10000);  // Wait for job 4 to preempt one of the higher priority jobs

        Event job4Execution = new Event(TestEnvironment.EVENT_START_JOB, 444);
        boolean wasJob4Executed = kTestEnvironment.getExecutedEvents().contains(job4Execution);
        assertFalse("Higher priority job was preempted.", wasJob4Executed);
