format 76
"ssl" // nougat_src::frameworks::base::core::java::org::apache::http::conn::ssl
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/core/java/org/apache/http/conn/ssl/"
  java_package "org.apache.http.conn.ssl"
  classview 161463 "ssl"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 523447 "SSLSocketFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Layered socket factory for TLS/SSL connections, based on JSSE.
.
<p>
SSLSocketFactory can be used to validate the identity of the HTTPS 
server against a list of trusted certificates and to authenticate to
the HTTPS server using a private key. 
</p>

<p>
SSLSocketFactory will enable server authentication when supplied with
a {@link KeyStore truststore} file containg one or several trusted
certificates. The client secure socket will reject the connection during
the SSL session handshake if the target HTTPS server attempts to
authenticate itself with a non-trusted certificate.
</p>

<p>
Use JDK keytool utility to import a trusted certificate and generate a truststore file:    
   <pre>
    keytool -import -alias \"my server cert\" -file server.crt -keystore my.truststore
   </pre>
</p>

<p>
SSLSocketFactory will enable client authentication when supplied with
a {@link KeyStore keystore} file containg a private key/public certificate
pair. The client secure socket will use the private key to authenticate
itself to the target HTTPS server during the SSL session handshake if
requested to do so by the server.
The target HTTPS server will in its turn verify the certificate presented
by the client in order to establish client's authenticity
</p>

<p>
Use the following sequence of actions to generate a keystore file
</p>
  <ul>
    <li>
     <p>
     Use JDK keytool utility to generate a new key
     <pre>keytool -genkey -v -alias \"my client key\" -validity 365 -keystore my.keystore</pre>
     For simplicity use the same password for the key as that of the keystore
     </p>
    </li>
    <li>
     <p>
     Issue a certificate signing request (CSR)
     <pre>keytool -certreq -alias \"my client key\" -file mycertreq.csr -keystore my.keystore</pre>
    </p>
    </li>
    <li>
     <p>
     Send the certificate request to the trusted Certificate Authority for signature. 
     One may choose to act as her own CA and sign the certificate request using a PKI 
     tool, such as OpenSSL.
     </p>
    </li>
    <li>
     <p>
      Import the trusted CA root certificate
      <pre>keytool -import -alias \"my trusted ca\" -file caroot.crt -keystore my.keystore</pre> 
     </p>
    </li>
    <li>
     <p>
      Import the PKCS#7 file containg the complete certificate chain
      <pre>keytool -import -alias \"my client key\" -file mycert.p7 -keystore my.keystore</pre> 
     </p>
    </li>
    <li>
     <p>
      Verify the content the resultant keystore file
      <pre>keytool -list -v -keystore my.keystore</pre> 
     </p>
    </li>
  </ul>
@author <a href=\"mailto:oleg at ural.ru\">Oleg Kalnichevski</a>
@author Julius Davies

@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details."
      classrelation 2525367 // <realization>
	relation 2525367 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2525367 // <realization>
	  b parent class_ref 815799 // LayeredSocketFactory
      end

      classrelation 2525495 // TLS (<unidirectional association>)
	relation 2525495 --->
	  a role_name "TLS" init_value " \"TLS\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525495 // TLS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2525623 // SSL (<unidirectional association>)
	relation 2525623 --->
	  a role_name "SSL" init_value " \"SSL\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525623 // SSL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2525751 // SSLV2 (<unidirectional association>)
	relation 2525751 --->
	  a role_name "SSLV2" init_value " \"SSLv2\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525751 // SSLV2 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 2525879 // ALLOW_ALL_HOSTNAME_VERIFIER (<unidirectional association>)
	relation 2525879 --->
	  a role_name "ALLOW_ALL_HOSTNAME_VERIFIER" init_value " new AllowAllHostnameVerifier()" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525879 // ALLOW_ALL_HOSTNAME_VERIFIER (<unidirectional association>)
	  b parent class_ref 816311 // X509HostnameVerifier
      end

      classrelation 2526007 // BROWSER_COMPATIBLE_HOSTNAME_VERIFIER (<unidirectional association>)
	relation 2526007 --->
	  a role_name "BROWSER_COMPATIBLE_HOSTNAME_VERIFIER" init_value " new BrowserCompatHostnameVerifier()" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526007 // BROWSER_COMPATIBLE_HOSTNAME_VERIFIER (<unidirectional association>)
	  b parent class_ref 816311 // X509HostnameVerifier
      end

      classrelation 2526135 // STRICT_HOSTNAME_VERIFIER (<unidirectional association>)
	relation 2526135 --->
	  a role_name "STRICT_HOSTNAME_VERIFIER" init_value " new StrictHostnameVerifier()" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526135 // STRICT_HOSTNAME_VERIFIER (<unidirectional association>)
	  b parent class_ref 816311 // X509HostnameVerifier
      end

      class 816951 "NoPreloadHolder"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2526263 // DEFAULT_FACTORY (<unidirectional association>)
	  relation 2526263 --->
	    a role_name "DEFAULT_FACTORY" init_value " new SSLSocketFactory()" class_relation const_relation private
	      comment "
The factory using the default JVM settings for secure connections.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2526263 // DEFAULT_FACTORY (<unidirectional association>)
	    b parent class_ref 523447 // SSLSocketFactory
	end
      end

      operation 6529975 "getSocketFactory"
	class_operation public return_type class_ref 523447 // SSLSocketFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an singleton instance of the SSLProtocolSocketFactory.
@return a SSLProtocolSocketFactory"
      end

      attribute 2788791 "sslcontext"
	const_attribute private explicit_type "SSLContext"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2788919 "socketfactory"
	const_attribute private explicit_type "javax.net.ssl.SSLSocketFactory"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2526391 // nameResolver (<unidirectional association>)
	relation 2526391 --->
	  a role_name "nameResolver" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526391 // nameResolver (<unidirectional association>)
	  b parent class_ref 815671 // HostNameResolver
      end

      classrelation 2526519 // hostnameVerifier (<unidirectional association>)
	relation 2526519 --->
	  a role_name "hostnameVerifier" init_value " BROWSER_COMPATIBLE_HOSTNAME_VERIFIER" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2526519 // hostnameVerifier (<unidirectional association>)
	  b parent class_ref 816311 // X509HostnameVerifier
      end

      operation 6530103 "SSLSocketFactory"
	public explicit_return_type ""
	nparams 6
	  param inout name "algorithm" type class_ref 129591 // String
	  param in name "keystore" explicit_type "KeyStore"
	  param in name "keystorePassword" type class_ref 129591 // String
	  param in name "truststore" explicit_type "KeyStore"
	  param in name "random" explicit_type "SecureRandom"
	  param in name "nameResolver" type class_ref 815671 // HostNameResolver
	nexceptions 4
	  explicit_exception "NoSuchAlgorithmException"
	  explicit_exception "KeyManagementException"
	  explicit_exception "KeyStoreException"
	  explicit_exception "UnrecoverableKeyException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, final ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6530231 "SSLSocketFactory"
	public explicit_return_type ""
	nparams 3
	  param in name "keystore" explicit_type "KeyStore"
	  param in name "keystorePassword" type class_ref 129591 // String
	  param in name "truststore" explicit_type "KeyStore"
	nexceptions 4
	  explicit_exception "NoSuchAlgorithmException"
	  explicit_exception "KeyManagementException"
	  explicit_exception "KeyStoreException"
	  explicit_exception "UnrecoverableKeyException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6530359 "SSLSocketFactory"
	public explicit_return_type ""
	nparams 2
	  param in name "keystore" explicit_type "KeyStore"
	  param in name "keystorePassword" type class_ref 129591 // String
	nexceptions 4
	  explicit_exception "NoSuchAlgorithmException"
	  explicit_exception "KeyManagementException"
	  explicit_exception "KeyStoreException"
	  explicit_exception "UnrecoverableKeyException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6530487 "SSLSocketFactory"
	public explicit_return_type ""
	nparams 1
	  param in name "truststore" explicit_type "KeyStore"
	nexceptions 4
	  explicit_exception "NoSuchAlgorithmException"
	  explicit_exception "KeyManagementException"
	  explicit_exception "KeyStoreException"
	  explicit_exception "UnrecoverableKeyException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6530615 "SSLSocketFactory"
	public explicit_return_type ""
	nparams 1
	  param inout name "socketfactory" explicit_type "javax.net.ssl.SSLSocketFactory"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an HttpClient SSLSocketFactory backed by the given JSSE
SSLSocketFactory.

@hide"
      end

      operation 6530743 "SSLSocketFactory"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the default SSL socket factory.
This constructor is used exclusively to instantiate the factory for
{@link #getSocketFactory getSocketFactory}."
      end

      operation 6530871 "createKeyManagers"
	class_operation private explicit_return_type "KeyManager"
	nparams 2
	  param in name "keystore" explicit_type "KeyStore"
	  param in name "password" type class_ref 129591 // String
	nexceptions 3
	  explicit_exception "KeyStoreException"
	  explicit_exception "NoSuchAlgorithmException"
	  explicit_exception "UnrecoverableKeyException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6530999 "createTrustManagers"
	class_operation private explicit_return_type "TrustManager"
	nparams 1
	  param in name "keystore" explicit_type "KeyStore"
	nexceptions 2
	  explicit_exception "KeyStoreException"
	  explicit_exception "NoSuchAlgorithmException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6531127 "createSocket"
	public explicit_return_type "Socket"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " non-javadoc, see interface org.apache.http.conn.SocketFactory"
      end

      operation 6531255 "connectSocket"
	public explicit_return_type "Socket"
	nparams 6
	  param in name "sock" explicit_type "Socket"
	  param in name "host" type class_ref 129591 // String
	  param in name "port" explicit_type "int"
	  param in name "localAddress" explicit_type "InetAddress"
	  param in name "localPort" explicit_type "int"
	  param in name "params" type class_ref 816055 // HttpParams
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, ${t4} ${p4}, final ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " non-javadoc, see interface org.apache.http.conn.SocketFactory"
      end

      operation 6531383 "isSecure"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "sock" explicit_type "Socket"
	nexceptions 1
	  explicit_exception "IllegalArgumentException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether a socket connection is secure.
This factory creates TLS/SSL socket connections
which, by default, are considered secure.
<br/>
Derived classes may override this method to perform
runtime checks, for example based on the cypher suite.

@param sock      the connected socket

@return  <code>true</code>

@throws IllegalArgumentException if the argument is invalid"
      end

      operation 6531511 "createSocket"
	public explicit_return_type "Socket"
	nparams 4
	  param in name "socket" explicit_type "Socket"
	  param in name "host" type class_ref 129591 // String
	  param in name "port" explicit_type "int"
	  param in name "autoClose" explicit_type "boolean"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "UnknownHostException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " isSecure
 non-javadoc, see interface LayeredSocketFactory"
      end

      operation 6531639 "setHostnameVerifier"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hostnameVerifier" type class_ref 816311 // X509HostnameVerifier
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6531767 "getHostnameVerifier"
	public return_type class_ref 816311 // X509HostnameVerifier
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 816183 "AbstractVerifier"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract base class for all standard {@link X509HostnameVerifier} 
implementations.

@author Julius Davies

@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details."
      classrelation 2524727 // <realization>
	relation 2524727 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2524727 // <realization>
	  b parent class_ref 816311 // X509HostnameVerifier
      end

      attribute 2787895 "IPV4_PATTERN"
	class_attribute const_attribute private explicit_type "Pattern"
	init_value " Pattern.compile(
            \"^(25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}$\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2524855 // BAD_COUNTRY_2LDS (<unidirectional association>)
	relation 2524855 --->
	  a role_name "BAD_COUNTRY_2LDS" multiplicity "[]" init_value "
          { \"ac\", \"co\", \"com\", \"ed\", \"edu\", \"go\", \"gouv\", \"gov\", \"info\",
            \"lg\", \"ne\", \"net\", \"or\", \"org\" }" class_relation const_relation private
	    comment "
This contains a list of 2nd-level domains that aren't allowed to
have wildcards when combined with country-codes.
For example: [*.co.uk].
<p/>
The [*.co.uk] problem is an interesting one.  Should we just hope
that CA's would never foolishly allow such a certificate to happen?
Looks like we're the only implementation guarding against this.
Firefox, Curl, Sun Java 1.4, 5, 6 don't bother with this check.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 2524855 // BAD_COUNTRY_2LDS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      extra_member 138039 "initialization"
	
	cpp "" ""
	java "  static {
        // Just in case developer forgot to manually sort the array.  :-)
        Arrays.sort(BAD_COUNTRY_2LDS);
    }"
	php ""
	python ""
	idl ""
      end

      operation 6526903 "AbstractVerifier"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6527031 "verify"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 129591 // String
	  param inout name "ssl" explicit_type "SSLSocket"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6527159 "verify"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "host" type class_ref 129591 // String
	  param inout name "session" explicit_type "SSLSession"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6527287 "verify"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 129591 // String
	  param inout name "cert" explicit_type "X509Certificate"
	nexceptions 1
	  explicit_exception "SSLException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6527415 "verify"
	public explicit_return_type "void"
	nparams 4
	  param in name "host" type class_ref 129591 // String
	  param in name "cns" type class_ref 129591 // String
	  param in name "subjectAlts" type class_ref 129591 // String
	  param in name "strictWithSubDomains" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "SSLException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1}[] ${p1}, final ${t2}[] ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6527543 "acceptableCountryWildcard"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "cn" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6527671 "getCNs"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "cert" explicit_type "X509Certificate"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6527799 "getDNSSubjectAlts"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "cert" explicit_type "X509Certificate"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extracts the array of SubjectAlt DNS names from an X509Certificate.
Returns null if there aren't any.
<p/>
Note:  Java doesn't appear able to extract international characters
from the SubjectAlts.  It can only extract international characters
from the CN field.
<p/>
(Or maybe the version of OpenSSL I'm using to test isn't storing the
international characters correctly in the SubjectAlts?).

@param cert X509Certificate
@return Array of SubjectALT DNS names stored in the certificate."
      end

      operation 6527927 "countDots"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "s" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Counts the number of dots \".\" in a string.
@param s  string to count dots from
@return  number of dots"
      end

      operation 6528055 "isIPv4Address"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "input" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 816311 "X509HostnameVerifier"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface for checking if a hostname matches the names stored inside the
server's X.509 certificate.  Implements javax.net.ssl.HostnameVerifier, but
we don't actually use that interface.  Instead we added some methods that
take String parameters (instead of javax.net.ssl.HostnameVerifier's
SSLSession).  JUnit is a lot easier this way!  :-)
<p/>
We provide the HostnameVerifier.DEFAULT, HostnameVerifier.STRICT, and
HostnameVerifier.ALLOW_ALL implementations.  But feel free to define
your own implementation!
<p/>
Inspired by Sebastian Hauer's original StrictSSLProtocolSocketFactory in the
HttpClient \"contrib\" repository.

@author Julius Davies
@author <a href=\"mailto:hauer@psicode.com\">Sebastian Hauer</a>

@since 4.0 (8-Dec-2006)

@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details."
      classrelation 2524599 // <generalisation>
	relation 2524599 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2524599 // <generalisation>
	  b parent class_ref 816439 // HostnameVerifier
      end

      operation 6526391 "verify"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "host" type class_ref 129591 // String
	  param inout name "session" explicit_type "SSLSession"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6526519 "verify"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 129591 // String
	  param inout name "ssl" explicit_type "SSLSocket"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6526647 "verify"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 129591 // String
	  param inout name "cert" explicit_type "X509Certificate"
	nexceptions 1
	  explicit_exception "SSLException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6526775 "verify"
	public explicit_return_type "void"
	nparams 3
	  param inout name "host" type class_ref 129591 // String
	  param inout name "cns" type class_ref 129591 // String
	  param inout name "subjectAlts" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "SSLException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if the supplied hostname matches any of the supplied CNs
or \"DNS\" Subject-Alts.  Most implementations only look at the first CN,
and ignore any additional CNs.  Most implementations do look at all of
the \"DNS\" Subject-Alts. The CNs or Subject-Alts may contain wildcards
according to RFC 2818.

@param cns         CN fields, in order, as extracted from the X.509
                   certificate.
@param subjectAlts Subject-Alt fields of type 2 (\"DNS\"), as extracted
                   from the X.509 certificate.
@param host        The hostname to verify.
@throws SSLException If verification failed."
      end
    end

    class 816567 "AllowAllHostnameVerifier"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The ALLOW_ALL HostnameVerifier essentially turns hostname verification
off. This implementation is a no-op, and never throws the SSLException.

@author Julius Davies

@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details."
      classrelation 2524983 // <generalisation>
	relation 2524983 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2524983 // <generalisation>
	  b parent class_ref 816183 // AbstractVerifier
      end

      operation 6528183 "verify"
	public explicit_return_type "void"
	nparams 3
	  param in name "host" type class_ref 129591 // String
	  param in name "cns" type class_ref 129591 // String
	  param in name "subjectAlts" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1}[] ${p1}, final ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6528311 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 816695 "AndroidDistinguishedNameParser"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A distinguished name (DN) parser. This parser only supports extracting a
string value from a DN. It doesn't support values in the hex-string style.

@hide"
      classrelation 2525111 // dn (<unidirectional association>)
	relation 2525111 --->
	  a role_name "dn" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2525111 // dn (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 2788023 "length"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2788151 "pos"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2788279 "beg"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2788407 "end"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2788535 "cur"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " tmp vars to store positions of the currently parsed item "
      end

      attribute 2788663 "chars"
	private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " distinguished name chars "
      end

      operation 6528439 "AndroidDistinguishedNameParser"
	public explicit_return_type ""
	nparams 1
	  param inout name "principal" explicit_type "X500Principal"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6528567 "nextAT"
	private return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " gets next attribute type: (ALPHA 1*keychar) / oid"
      end

      operation 6528695 "quotedAV"
	private return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " gets quoted attribute value: QUOTATION *( quotechar / pair ) QUOTATION"
      end

      operation 6528823 "hexAV"
	private return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " gets hex string attribute value: \"#\" hexstring"
      end

      operation 6528951 "escapedAV"
	private return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " gets string attribute value: *( stringchar / pair )"
      end

      operation 6529079 "getEscaped"
	private explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " returns escaped char"
      end

      operation 6529207 "getUTF8"
	private explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " decodes UTF-8 char
 see http://www.unicode.org for UTF-8 bit distribution table"
      end

      operation 6529335 "getByte"
	private explicit_return_type "int"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns byte representation of a char pair
 The char pair is composed of DN char in
 specified 'position' and the next char
 According to BNF syntax:
 hexchar    = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"
                    / \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\""
      end

      operation 6529463 "findMostSpecific"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "attributeType" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the DN and returns the most significant attribute value
for an attribute type, or null if none found.

@param attributeType attribute type to look for (e.g. \"ca\")"
      end

      operation 6529591 "getAllMostSpecificFirst"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "attributeType" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the DN and returns all values for an attribute type, in
the order of decreasing significance (most significant first).

@param attributeType attribute type to look for (e.g. \"ca\")"
      end
    end

    class 816823 "BrowserCompatHostnameVerifier"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The HostnameVerifier that works the same way as Curl and Firefox.
<p/>
The hostname must match either the first CN, or any of the subject-alts.
A wildcard can occur in the CN, and in any of the subject-alts.
<p/>
The only difference between BROWSER_COMPATIBLE and STRICT is that a wildcard 
(such as \"*.foo.com\") with BROWSER_COMPATIBLE matches all subdomains, 
including \"a.b.foo.com\".

@author Julius Davies

@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details."
      classrelation 2525239 // <generalisation>
	relation 2525239 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2525239 // <generalisation>
	  b parent class_ref 816183 // AbstractVerifier
      end

      operation 6529719 "verify"
	public explicit_return_type "void"
	nparams 3
	  param in name "host" type class_ref 129591 // String
	  param in name "cns" type class_ref 129591 // String
	  param in name "subjectAlts" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "SSLException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1}[] ${p1}, final ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6529847 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 817079 "StrictHostnameVerifier"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The Strict HostnameVerifier works the same way as Sun Java 1.4, Sun
Java 5, Sun Java 6-rc.  It's also pretty close to IE6.  This
implementation appears to be compliant with RFC 2818 for dealing with
wildcards.
<p/>
The hostname must match either the first CN, or any of the subject-alts.
A wildcard can occur in the CN, and in any of the subject-alts.  The
one divergence from IE6 is how we only check the first CN.  IE6 allows
a match against any of the CNs present.  We decided to follow in
Sun Java 1.4's footsteps and only check the first CN.  (If you need
to check all the CN's, feel free to write your own implementation!).
<p/>
A wildcard such as \"*.foo.com\" matches only subdomains in the same
level, for example \"a.foo.com\".  It does not match deeper subdomains
such as \"a.b.foo.com\".

@author Julius Davies

@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details."
      classrelation 2526647 // <generalisation>
	relation 2526647 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2526647 // <generalisation>
	  b parent class_ref 816183 // AbstractVerifier
      end

      operation 6531895 "verify"
	public explicit_return_type "void"
	nparams 3
	  param in name "host" type class_ref 129591 // String
	  param in name "cns" type class_ref 129591 // String
	  param in name "subjectAlts" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "SSLException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1}[] ${p1}, final ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 6532023 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end
  end

  deploymentview 162231 "ssl"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 475703 "X509HostnameVerifier"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.SSLException;
import javax.net.ssl.SSLSession;
import javax.net.ssl.SSLSocket;
import java.io.IOException;
import java.security.cert.X509Certificate;
${definition}"
      associated_classes
	class_ref 816311 // X509HostnameVerifier
      end
      comment "$HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk/module-client/src/main/java/org/apache/http/conn/ssl/X509HostnameVerifier.java $
$Revision: 618365 $
$Date: 2008-02-04 10:20:08 -0800 (Mon, 04 Feb 2008) $

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 475831 "AbstractVerifier"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.regex.Pattern;
import java.io.IOException;
import java.security.cert.Certificate;
import java.security.cert.CertificateParsingException;
import java.security.cert.X509Certificate;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.logging.Logger;
import java.util.logging.Level;
import javax.net.ssl.SSLException;
import javax.net.ssl.SSLSession;
import javax.net.ssl.SSLSocket;
${definition}"
      associated_classes
	class_ref 816183 // AbstractVerifier
      end
      comment "$HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk/module-client/src/main/java/org/apache/http/conn/ssl/AbstractVerifier.java $
$Revision: 653041 $
$Date: 2008-05-03 03:39:28 -0700 (Sat, 03 May 2008) $

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 475959 "AllowAllHostnameVerifier"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 816567 // AllowAllHostnameVerifier
      end
      comment "$HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk/module-client/src/main/java/org/apache/http/conn/ssl/AllowAllHostnameVerifier.java $
$Revision: 617642 $
$Date: 2008-02-01 12:54:07 -0800 (Fri, 01 Feb 2008) $

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 476087 "AndroidDistinguishedNameParser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.security.auth.x500.X500Principal;
${definition}"
      associated_classes
	class_ref 816695 // AndroidDistinguishedNameParser
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 476215 "BrowserCompatHostnameVerifier"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.net.ssl.SSLException;
${definition}"
      associated_classes
	class_ref 816823 // BrowserCompatHostnameVerifier
      end
      comment "$HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk/module-client/src/main/java/org/apache/http/conn/ssl/BrowserCompatHostnameVerifier.java $
$Revision: 617642 $
$Date: 2008-02-01 12:54:07 -0800 (Fri, 01 Feb 2008) $

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 476343 "SSLSocketFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.apache.http.conn.scheme.HostNameResolver;
import org.apache.http.conn.scheme.LayeredSocketFactory;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.KeyManager;
import javax.net.ssl.KeyManagerFactory;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocket;
import javax.net.ssl.TrustManager;
import javax.net.ssl.TrustManagerFactory;
import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.security.KeyManagementException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.security.UnrecoverableKeyException;
${definition}"
      associated_classes
	class_ref 523447 // SSLSocketFactory
      end
      comment "$HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk/module-client/src/main/java/org/apache/http/conn/ssl/SSLSocketFactory.java $
$Revision: 659194 $
$Date: 2008-05-22 11:33:47 -0700 (Thu, 22 May 2008) $

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end

    artifact 476471 "StrictHostnameVerifier"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.net.ssl.SSLException;
${definition}"
      associated_classes
	class_ref 817079 // StrictHostnameVerifier
      end
      comment "$HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk/module-client/src/main/java/org/apache/http/conn/ssl/StrictHostnameVerifier.java $
$Revision: 617642 $
$Date: 2008-02-01 12:54:07 -0800 (Fri, 01 Feb 2008) $

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.
"
    end
  end
end
