format 76
"cardemulation" // nougat_src::frameworks::base::core::java::android::nfc::cardemulation
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/core/java/android/nfc/cardemulation/"
  java_package "android.nfc.cardemulation"
  classview 162487 "cardemulation"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 533175 "AidGroup"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The AidGroup class represents a group of Application Identifiers (AIDs).

<p>The format of AIDs is defined in the ISO/IEC 7816-4 specification. This class
requires the AIDs to be input as a hexadecimal string, with an even amount of
hexadecimal characters, e.g. \"F014811481\".

@hide"
      classrelation 1413431 // <realization>
	relation 1413431 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1413431 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 1566775 "MAX_NUM_AIDS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 256"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The maximum number of AIDs that can be present in any one group.
"
      end

      classrelation 1413559 // TAG (<unidirectional association>)
	relation 1413559 --->
	  a role_name "TAG" init_value " \"AidGroup\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1413559 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1413687 // aids (<unidirectional association>)
	relation 1413687 --->
	  stereotype "List"
	  a role_name "aids" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1413687 // aids (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1413815 // category (<unidirectional association>)
	relation 1413815 --->
	  a role_name "category" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1413815 // category (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1413943 // description (<unidirectional association>)
	relation 1413943 --->
	  a role_name "description" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1413943 // description (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3657143 "AidGroup"
	public explicit_return_type ""
	nparams 2
	  param inout name "aids" explicit_type "List<String>"
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AidGroup object.

@param aids The list of AIDs present in the group
@param category The category of this group, e.g. {@link CardEmulation#CATEGORY_PAYMENT}"
      end

      operation 3657271 "AidGroup"
	package explicit_return_type ""
	nparams 2
	  param inout name "category" type class_ref 129591 // String
	  param inout name "description" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3657399 "getCategory"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the category of this AID group"
      end

      operation 3657527 "getAids"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the list of AIDs in this group"
      end

      operation 3657655 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3657783 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3657911 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1414071 // CREATOR (<unidirectional association>)
	relation 1414071 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<AidGroup>() {

        @Override
        public AidGroup createFromParcel(Parcel source) {
            String category = source.readString();
            int listSize = source.readInt();
            ArrayList<String> aidList = new ArrayList<String>();
            if (listSize > 0) {
                source.readStringList(aidList);
            }
            return new AidGroup(aidList, category);
        }

        @Override
        public AidGroup[] newArray(int size) {
            return new AidGroup[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AidGroup> ${name}${value};
"
	    classrelation_ref 1414071 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3658039 "createFromXml"
	class_operation public return_type class_ref 533175 // AidGroup
	nparams 1
	  param inout name "parser" explicit_type "XmlPullParser"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3658167 "writeAsXml"
	public explicit_return_type "void"
	nparams 1
	  param inout name "out" explicit_type "XmlSerializer"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3658295 "isValidCategory"
	class_operation package explicit_return_type "boolean"
	nparams 1
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 533303 "ApduServiceInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      classrelation 1414199 // <realization>
	relation 1414199 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1414199 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 1414327 // TAG (<unidirectional association>)
	relation 1414327 --->
	  a role_name "TAG" init_value " \"ApduServiceInfo\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1414327 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1414455 // mService (<unidirectional association>)
	relation 1414455 --->
	  a role_name "mService" const_relation package
	    comment "
The service that implements this

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1414455 // mService (<unidirectional association>)
	  b parent class_ref 306231 // ResolveInfo
      end

      classrelation 1414583 // mDescription (<unidirectional association>)
	relation 1414583 --->
	  a role_name "mDescription" const_relation package
	    comment "
Description of the service

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1414583 // mDescription (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1566903 "mOnHost"
	const_attribute package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Whether this service represents AIDs running on the host CPU
"
      end

      classrelation 1414711 // mStaticAidGroups (<unidirectional association>)
	relation 1414711 --->
	  stereotype "HashMap"
	  a role_name "mStaticAidGroups" const_relation package
	    comment "Mapping from category to static AID group
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, AidGroup> ${name}${value};
"
	    classrelation_ref 1414711 // mStaticAidGroups (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1414839 // mDynamicAidGroups (<unidirectional association>)
	relation 1414839 --->
	  stereotype "HashMap"
	  a role_name "mDynamicAidGroups" const_relation package
	    comment "Mapping from category to dynamic AID group
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, AidGroup> ${name}${value};
"
	    classrelation_ref 1414839 // mDynamicAidGroups (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1567031 "mRequiresDeviceUnlock"
	const_attribute package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Whether this service should only be started when the device is unlocked.
"
      end

      attribute 1567159 "mBannerResourceId"
	const_attribute package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The id of the service banner specified in XML.
"
      end

      attribute 1567287 "mUid"
	const_attribute package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The uid of the package the service belongs to
"
      end

      classrelation 1414967 // mSettingsActivityName (<unidirectional association>)
	relation 1414967 --->
	  a role_name "mSettingsActivityName" const_relation package
	    comment "
Settings Activity for this service

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1414967 // mSettingsActivityName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3658423 "ApduServiceInfo"
	public explicit_return_type ""
	nparams 9
	  param inout name "info" type class_ref 306231 // ResolveInfo
	  param inout name "onHost" explicit_type "boolean"
	  param inout name "description" type class_ref 129591 // String
	  param inout name "staticAidGroups" explicit_type "ArrayList<AidGroup>"
	  param inout name "dynamicAidGroups" explicit_type "ArrayList<AidGroup>"
	  param inout name "requiresUnlock" explicit_type "boolean"
	  param in name "bannerResource" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param inout name "settingsActivityName" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3658551 "ApduServiceInfo"
	public explicit_return_type ""
	nparams 3
	  param inout name "pm" type class_ref 129079 // PackageManager
	  param inout name "info" type class_ref 306231 // ResolveInfo
	  param inout name "onHost" explicit_type "boolean"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3658679 "getComponent"
	public return_type class_ref 132279 // ComponentName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3658807 "getAids"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a consolidated list of AIDs from the AID groups
registered by this service. Note that if a service has both
a static (manifest-based) AID group for a category and a dynamic
AID group, only the dynamically registered AIDs will be returned
for that category.
@return List of AIDs registered by the service"
      end

      operation 3658935 "getPrefixAids"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3659063 "getDynamicAidGroupForCategory"
	public return_type class_ref 533175 // AidGroup
	nparams 1
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the registered AID group for this category."
      end

      operation 3659191 "removeDynamicAidGroupForCategory"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3659319 "getAidGroups"
	public return_type class_ref 533175 // AidGroup
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a consolidated list of AID groups
registered by this service. Note that if a service has both
a static (manifest-based) AID group for a category and a dynamic
AID group, only the dynamically registered AID group will be returned
for that category.
@return List of AIDs registered by the service"
      end

      operation 3659447 "getCategoryForAid"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "aid" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the category to which this service has attributed the AID that is passed in,
or null if we don't know this AID."
      end

      operation 3659575 "hasCategory"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3659703 "isOnHost"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3659831 "requiresUnlock"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3659959 "getDescription"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3660087 "getUid"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3660215 "setOrReplaceDynamicAidGroup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "aidGroup" type class_ref 533175 // AidGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3660343 "loadLabel"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "pm" type class_ref 129079 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3660471 "loadAppLabel"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "pm" type class_ref 129079 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3660599 "loadIcon"
	public return_type class_ref 129719 // Drawable
	nparams 1
	  param inout name "pm" type class_ref 129079 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3660727 "loadBanner"
	public return_type class_ref 129719 // Drawable
	nparams 1
	  param inout name "pm" type class_ref 129079 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3660855 "getSettingsActivityName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3660983 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3661111 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3661239 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3661367 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3661495 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1415095 // CREATOR (<unidirectional association>)
	relation 1415095 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<ApduServiceInfo>() {
        @Override
        public ApduServiceInfo createFromParcel(Parcel source) {
            ResolveInfo info = ResolveInfo.CREATOR.createFromParcel(source);
            String description = source.readString();
            boolean onHost = source.readInt() != 0;
            ArrayList<AidGroup> staticAidGroups = new ArrayList<AidGroup>();
            int numStaticGroups = source.readInt();
            if (numStaticGroups > 0) {
                source.readTypedList(staticAidGroups, AidGroup.CREATOR);
            }
            ArrayList<AidGroup> dynamicAidGroups = new ArrayList<AidGroup>();
            int numDynamicGroups = source.readInt();
            if (numDynamicGroups > 0) {
                source.readTypedList(dynamicAidGroups, AidGroup.CREATOR);
            }
            boolean requiresUnlock = source.readInt() != 0;
            int bannerResource = source.readInt();
            int uid = source.readInt();
            String settingsActivityName = source.readString();
            return new ApduServiceInfo(info, onHost, description, staticAidGroups,
                    dynamicAidGroups, requiresUnlock, bannerResource, uid,
                    settingsActivityName);
        }

        @Override
        public ApduServiceInfo[] newArray(int size) {
            return new ApduServiceInfo[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ApduServiceInfo> ${name}${value};
"
	    classrelation_ref 1415095 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3661623 "dump"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "args" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 533431 "CardEmulation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class can be used to query the state of
NFC card emulation services.

For a general introduction into NFC card emulation,
please read the <a href=\"{@docRoot}guide/topics/connectivity/nfc/hce.html\">
NFC card emulation developer guide</a>.</p>

<p class=\"note\">Use of this class requires the
{@link PackageManager#FEATURE_NFC_HOST_CARD_EMULATION} to be present
on the device."
      classrelation 1415223 // TAG (<unidirectional association>)
	relation 1415223 --->
	  a role_name "TAG" init_value " \"CardEmulation\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1415223 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1415351 // ACTION_CHANGE_DEFAULT (<unidirectional association>)
	relation 1415351 --->
	  a role_name "ACTION_CHANGE_DEFAULT" init_value "
            \"android.nfc.cardemulation.action.ACTION_CHANGE_DEFAULT\"" class_relation const_relation public
	    comment "
Activity action: ask the user to change the default
card emulation service for a certain category. This will
show a dialog that asks the user whether he wants to
replace the current default service with the service
identified with the ComponentName specified in
{@link #EXTRA_SERVICE_COMPONENT}, for the category
specified in {@link #EXTRA_CATEGORY}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	    classrelation_ref 1415351 // ACTION_CHANGE_DEFAULT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1415479 // EXTRA_CATEGORY (<unidirectional association>)
	relation 1415479 --->
	  a role_name "EXTRA_CATEGORY" init_value " \"category\"" class_relation const_relation public
	    comment "
The category extra for {@link #ACTION_CHANGE_DEFAULT}.

@see #ACTION_CHANGE_DEFAULT

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1415479 // EXTRA_CATEGORY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1415607 // EXTRA_SERVICE_COMPONENT (<unidirectional association>)
	relation 1415607 --->
	  a role_name "EXTRA_SERVICE_COMPONENT" init_value " \"component\"" class_relation const_relation public
	    comment "
The service {@link ComponentName} object passed in as an
extra for {@link #ACTION_CHANGE_DEFAULT}.

@see #ACTION_CHANGE_DEFAULT

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1415607 // EXTRA_SERVICE_COMPONENT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1415735 // CATEGORY_PAYMENT (<unidirectional association>)
	relation 1415735 --->
	  a role_name "CATEGORY_PAYMENT" init_value " \"payment\"" class_relation const_relation public
	    comment "
Category used for NFC payment services.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1415735 // CATEGORY_PAYMENT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1415863 // CATEGORY_OTHER (<unidirectional association>)
	relation 1415863 --->
	  a role_name "CATEGORY_OTHER" init_value " \"other\"" class_relation const_relation public
	    comment "
Category that can be used for all other card emulation
services.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1415863 // CATEGORY_OTHER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1567415 "SELECTION_MODE_PREFER_DEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Return value for {@link #getSelectionModeForCategory(String)}.

<p>In this mode, the user has set a default service for this
   category.

<p>When using ISO-DEP card emulation with {@link HostApduService}
   or {@link OffHostApduService}, if a remote NFC device selects
   any of the Application IDs (AIDs)
   that the default service has registered in this category,
   that service will automatically be bound to to handle
   the transaction.
"
      end

      attribute 1567543 "SELECTION_MODE_ALWAYS_ASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Return value for {@link #getSelectionModeForCategory(String)}.

<p>In this mode, when using ISO-DEP card emulation with {@link HostApduService}
   or {@link OffHostApduService}, whenever an Application ID (AID) of this category
   is selected, the user is asked which service he wants to use to handle
   the transaction, even if there is only one matching service.
"
      end

      attribute 1567671 "SELECTION_MODE_ASK_IF_CONFLICT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Return value for {@link #getSelectionModeForCategory(String)}.

<p>In this mode, when using ISO-DEP card emulation with {@link HostApduService}
   or {@link OffHostApduService}, the user will only be asked to select a service
   if the Application ID (AID) selected by the reader has been registered by multiple
   services. If there is only one service that has registered for the AID,
   that service will be invoked directly.
"
      end

      attribute 1567799 "sIsInitialized"
	class_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1415991 // sCardEmus (<unidirectional association>)
	relation 1415991 --->
	  stereotype "HashMap"
	  a role_name "sCardEmus" init_value " new HashMap<Context, CardEmulation>()" class_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, CardEmulation> ${name}${value};
"
	    classrelation_ref 1415991 // sCardEmus (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 1567927 "sService"
	class_attribute package explicit_type "INfcCardEmulation"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1416119 // mContext (<unidirectional association>)
	relation 1416119 --->
	  a role_name "mContext" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1416119 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      operation 3661751 "CardEmulation"
	private explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "service" explicit_type "INfcCardEmulation"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3661879 "getInstance"
	class_operation public return_type class_ref 533431 // CardEmulation
	nparams 1
	  param inout name "adapter" type class_ref 531255 // NfcAdapter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to get an instance of this class.

@param adapter A reference to an NfcAdapter object.
@return"
      end

      operation 3662007 "isDefaultServiceForCategory"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 132279 // ComponentName
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows an application to query whether a service is currently
the default service to handle a card emulation category.

<p>Note that if {@link #getSelectionModeForCategory(String)}
returns {@link #SELECTION_MODE_ALWAYS_ASK} or {@link #SELECTION_MODE_ASK_IF_CONFLICT},
this method will always return false. That is because in these
selection modes a default can't be set at the category level. For categories where
the selection mode is {@link #SELECTION_MODE_ALWAYS_ASK} or
{@link #SELECTION_MODE_ASK_IF_CONFLICT}, use
{@link #isDefaultServiceForAid(ComponentName, String)} to determine whether a service
is the default for a specific AID.

@param service The ComponentName of the service
@param category The category
@return whether service is currently the default service for the category.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission."
      end

      operation 3662135 "isDefaultServiceForAid"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 132279 // ComponentName
	  param inout name "aid" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Allows an application to query whether a service is currently
the default handler for a specified ISO7816-4 Application ID.

@param service The ComponentName of the service
@param aid The ISO7816-4 Application ID
@return whether the service is the default handler for the specified AID

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission."
      end

      operation 3662263 "categoryAllowsForegroundPreference"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the user has allowed AIDs registered in the
specified category to be handled by a service that is preferred
by the foreground application, instead of by a pre-configured default.

Foreground applications can set such preferences using the
{@link #setPreferredService(Activity, ComponentName)} method.

@param category The category, e.g. {@link #CATEGORY_PAYMENT}
@return whether AIDs in the category can be handled by a service
        specified by the foreground app."
      end

      operation 3662391 "getSelectionModeForCategory"
	public explicit_return_type "int"
	nparams 1
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the service selection mode for the passed in category.
Valid return values are:
<p>{@link #SELECTION_MODE_PREFER_DEFAULT} the user has requested a default
   service for this category, which will be preferred.
<p>{@link #SELECTION_MODE_ALWAYS_ASK} the user has requested to be asked
   every time what service he would like to use in this category.
<p>{@link #SELECTION_MODE_ASK_IF_CONFLICT} the user will only be asked
   to pick a service if there is a conflict.
@param category The category, for example {@link #CATEGORY_PAYMENT}
@return the selection mode for the passed in category"
      end

      operation 3662519 "registerAidsForService"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "service" type class_ref 132279 // ComponentName
	  param inout name "category" type class_ref 129591 // String
	  param inout name "aids" explicit_type "List<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a list of AIDs for a specific category for the
specified service.

<p>If a list of AIDs for that category was previously
registered for this service (either statically
through the manifest, or dynamically by using this API),
that list of AIDs will be replaced with this one.

<p>Note that you can only register AIDs for a service that
is running under the same UID as the caller of this API. Typically
this means you need to call this from the same
package as the service itself, though UIDs can also
be shared between packages using shared UIDs.

@param service The component name of the service
@param category The category of AIDs to be registered
@param aids A list containing the AIDs to be registered
@return whether the registration was successful."
      end

      operation 3662647 "getAidsForService"
	public return_type class_ref 129591 // String
	nparams 2
	  param inout name "service" type class_ref 132279 // ComponentName
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the currently registered AIDs for the specified
category for a service.

<p>Note that this will only return AIDs that were dynamically
registered using {@link #registerAidsForService(ComponentName, String, List)}
method. It will *not* return AIDs that were statically registered
in the manifest.

@param service The component name of the service
@param category The category for which the AIDs were registered,
                e.g. {@link #CATEGORY_PAYMENT}
@return The list of AIDs registered for this category, or null if it couldn't be found."
      end

      operation 3662775 "removeAidsForService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 132279 // ComponentName
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a previously registered list of AIDs for the specified category for the
service provided.

<p>Note that this will only remove AIDs that were dynamically
registered using the {@link #registerAidsForService(ComponentName, String, List)}
method. It will *not* remove AIDs that were statically registered in
the manifest. If dynamically registered AIDs are removed using
this method, and a statically registered AID group for the same category
exists in the manifest, the static AID group will become active again.

@param service The component name of the service
@param category The category of the AIDs to be removed, e.g. {@link #CATEGORY_PAYMENT}
@return whether the group was successfully removed."
      end

      operation 3662903 "setPreferredService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "service" type class_ref 132279 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows a foreground application to specify which card emulation service
should be preferred while a specific Activity is in the foreground.

<p>The specified Activity must currently be in resumed state. A good
paradigm is to call this method in your {@link Activity#onResume}, and to call
{@link #unsetPreferredService(Activity)} in your {@link Activity#onPause}.

<p>This method call will fail in two specific scenarios:
<ul>
<li> If the service registers one or more AIDs in the {@link #CATEGORY_PAYMENT}
category, but the user has indicated that foreground apps are not allowed
to override the default payment service.
<li> If the service registers one or more AIDs in the {@link #CATEGORY_OTHER}
category that are also handled by the default payment service, and the
user has indicated that foreground apps are not allowed to override the
default payment service.
</ul>

<p> Use {@link #categoryAllowsForegroundPreference(String)} to determine
whether foreground apps can override the default payment service.

<p>Note that this preference is not persisted by the OS, and hence must be
called every time the Activity is resumed.

@param activity The activity which prefers this service to be invoked
@param service The service to be preferred while this activity is in the foreground
@return whether the registration was successful"
      end

      operation 3663031 "unsetPreferredService"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unsets the preferred service for the specified Activity.

<p>Note that the specified Activity must still be in resumed
state at the time of this call. A good place to call this method
is in your {@link Activity#onPause} implementation.

@param activity The activity which the service was registered for
@return true when successful"
      end

      operation 3663159 "supportsAidPrefixRegistration"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Some devices may allow an application to register all
AIDs that starts with a certain prefix, e.g.
\"A000000004*\" to register all MasterCard AIDs.

Use this method to determine whether this device
supports registering AID prefixes.

@return whether AID prefix registering is supported on this device."
      end

      operation 3663287 "setDefaultServiceForCategory"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 132279 // ComponentName
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3663415 "setDefaultForNextTap"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "service" type class_ref 132279 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3663543 "getServices"
	public return_type class_ref 533303 // ApduServiceInfo
	nparams 1
	  param inout name "category" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3663671 "isValidAid"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "aid" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A valid AID according to ISO/IEC 7816-4:
<ul>
<li>Has >= 5 bytes and <=16 bytes (>=10 hex chars and <= 32 hex chars)
<li>Consist of only hex characters
<li>Additionally, we allow an asterisk at the end, to indicate
    a prefix
</ul>

@hide"
      end

      operation 3663799 "recoverService"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 533559 "HostApduService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>HostApduService is a convenience {@link Service} class that can be
extended to emulate an NFC card inside an Android
service component.

<div class=\"special reference\">
<h3>Developer Guide</h3>
For a general introduction to card emulation, see
<a href=\"{@docRoot}guide/topics/connectivity/nfc/hce.html\">
Host-based Card Emulation</a>.</p>
</div>

<h3>NFC Protocols</h3>
<p>Cards emulated by this class are based on the NFC-Forum ISO-DEP
protocol (based on ISO/IEC 14443-4) and support processing
command Application Protocol Data Units (APDUs) as
defined in the ISO/IEC 7816-4 specification.

<h3>Service selection</h3>
<p>When a remote NFC device wants to talk to your
service, it sends a so-called
\"SELECT AID\" APDU as defined in the ISO/IEC 7816-4 specification.
The AID is an application identifier defined in ISO/IEC 7816-4.

<p>The registration procedure for AIDs is defined in the
ISO/IEC 7816-5 specification. If you don't want to register an
AID, you are free to use AIDs in the proprietary range:
bits 8-5 of the first byte must each be set to '1'. For example,
\"0xF00102030405\" is a proprietary AID. If you do use proprietary
AIDs, it is recommended to choose an AID of at least 6 bytes,
to reduce the risk of collisions with other applications that
might be using proprietary AIDs as well.

<h3>AID groups</h3>
<p>In some cases, a service may need to register multiple AIDs
to implement a certain application, and it needs to be sure
that it is the default handler for all of these AIDs (as opposed
to some AIDs in the group going to another service).

<p>An AID group is a list of AIDs that should be considered as
belonging together by the OS. For all AIDs in an AID group, the
OS will guarantee one of the following:
<ul>
<li>All AIDs in the group are routed to this service
<li>No AIDs in the group are routed to this service
</ul>
In other words, there is no in-between state, where some AIDs
in the group can be routed to this service, and some to another.
<h3>AID groups and categories</h3>
<p>Each AID group can be associated with a category. This allows
the Android OS to classify services, and it allows the user to
set defaults at the category level instead of the AID level.

<p>You can use
{@link CardEmulation#isDefaultServiceForCategory(android.content.ComponentName, String)}
to determine if your service is the default handler for a category.

<p>In this version of the platform, the only known categories
are {@link CardEmulation#CATEGORY_PAYMENT} and {@link CardEmulation#CATEGORY_OTHER}.
AID groups without a category, or with a category that is not recognized
by the current platform version, will automatically be
grouped into the {@link CardEmulation#CATEGORY_OTHER} category.
<h3>Service AID registration</h3>
<p>To tell the platform which AIDs groups
are requested by this service, a {@link #SERVICE_META_DATA}
entry must be included in the declaration of the service. An
example of a HostApduService manifest declaration is shown below:
<pre> &lt;service android:name=\".MyHostApduService\" android:exported=\"true\" android:permission=\"android.permission.BIND_NFC_SERVICE\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.nfc.cardemulation.action.HOST_APDU_SERVICE\"/&gt;
    &lt;/intent-filter&gt;
    &lt;meta-data android:name=\"android.nfc.cardemulation.host_apdu_ervice\" android:resource=\"@xml/apduservice\"/&gt;
&lt;/service&gt;</pre>

This meta-data tag points to an apduservice.xml file.
An example of this file with a single AID group declaration is shown below:
<pre>
&lt;host-apdu-service xmlns:android=\"http://schemas.android.com/apk/res/android\"
          android:description=\"@string/servicedesc\" android:requireDeviceUnlock=\"false\"&gt;
      &lt;aid-group android:description=\"@string/aiddescription\" android:category=\"other\">
          &lt;aid-filter android:name=\"F0010203040506\"/&gt;
          &lt;aid-filter android:name=\"F0394148148100\"/&gt;
      &lt;/aid-group&gt;
&lt;/host-apdu-service&gt;
</pre>

<p>The {@link android.R.styleable#HostApduService &lt;host-apdu-service&gt;} is required
to contain a
{@link android.R.styleable#HostApduService_description &lt;android:description&gt;}
attribute that contains a user-friendly description of the service that may be shown in UI.
The
{@link android.R.styleable#HostApduService_requireDeviceUnlock &lt;requireDeviceUnlock&gt;}
attribute can be used to specify that the device must be unlocked before this service
can be invoked to handle APDUs.
<p>The {@link android.R.styleable#HostApduService &lt;host-apdu-service&gt;} must
contain one or more {@link android.R.styleable#AidGroup &lt;aid-group&gt;} tags.
Each {@link android.R.styleable#AidGroup &lt;aid-group&gt;} must contain one or
more {@link android.R.styleable#AidFilter &lt;aid-filter&gt;} tags, each of which
contains a single AID. The AID must be specified in hexadecimal format, and contain
an even number of characters.
<h3>AID conflict resolution</h3>
Multiple HostApduServices may be installed on a single device, and the same AID
can be registered by more than one service. The Android platform resolves AID
conflicts depending on which category an AID belongs to. Each category may
have a different conflict resolution policy. For example, for some categories
the user may be able to select a default service in the Android settings UI.
For other categories, to policy may be to always ask the user which service
is to be invoked in case of conflict.

To query the conflict resolution policy for a certain category, see
{@link CardEmulation#getSelectionModeForCategory(String)}.

<h3>Data exchange</h3>
<p>Once the platform has resolved a \"SELECT AID\" command APDU to a specific
service component, the \"SELECT AID\" command APDU and all subsequent
command APDUs will be sent to that service through
{@link #processCommandApdu(byte[], Bundle)}, until either:
<ul>
<li>The NFC link is broken</li>
<li>A \"SELECT AID\" APDU is received which resolves to another service</li>
</ul>
These two scenarios are indicated by a call to {@link #onDeactivated(int)}.

<p class=\"note\">Use of this class requires the
{@link PackageManager#FEATURE_NFC_HOST_CARD_EMULATION} to be present
on the device.
"
      classrelation 1416247 // <generalisation>
	relation 1416247 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1416247 // <generalisation>
	  b parent class_ref 300343 // Service
      end

      classrelation 1416375 // SERVICE_INTERFACE (<unidirectional association>)
	relation 1416375 --->
	  a role_name "SERVICE_INTERFACE" init_value "
            \"android.nfc.cardemulation.action.HOST_APDU_SERVICE\"" class_relation const_relation public
	    comment "
The {@link Intent} action that must be declared as handled by the service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstantType.SERVICE_ACTION)
"
	    classrelation_ref 1416375 // SERVICE_INTERFACE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1416503 // SERVICE_META_DATA (<unidirectional association>)
	relation 1416503 --->
	  a role_name "SERVICE_META_DATA" init_value "
            \"android.nfc.cardemulation.host_apdu_service\"" class_relation const_relation public
	    comment "
The name of the meta-data element that contains
more information about this service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1416503 // SERVICE_META_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1568055 "DEACTIVATION_LINK_LOSS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reason for {@link #onDeactivated(int)}.
Indicates deactivation was due to the NFC link
being lost.
"
      end

      attribute 1568183 "DEACTIVATION_DESELECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reason for {@link #onDeactivated(int)}.

<p>Indicates deactivation was due to a different AID
being selected (which implicitly deselects the AID
currently active on the logical channel).

<p>Note that this next AID may still be resolved to this
service, in which case {@link #processCommandApdu(byte[], Bundle)}
will be called again.
"
      end

      classrelation 1416631 // TAG (<unidirectional association>)
	relation 1416631 --->
	  a role_name "TAG" init_value " \"ApduService\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1416631 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1568311 "MSG_COMMAND_APDU"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "MSG_COMMAND_APDU is sent by NfcService when
a 7816-4 command APDU has been received.

@hide
"
      end

      attribute 1568439 "MSG_RESPONSE_APDU"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "MSG_RESPONSE_APDU is sent to NfcService to send
a response APDU back to the remote device.

@hide
"
      end

      attribute 1568567 "MSG_DEACTIVATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "MSG_DEACTIVATED is sent by NfcService when
the current session is finished; either because
another AID was selected that resolved to
another service, or because the NFC link
was deactivated.

@hide
"
      end

      attribute 1568695 "MSG_UNHANDLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "
@hide
"
      end

      classrelation 1416759 // KEY_DATA (<unidirectional association>)
	relation 1416759 --->
	  a role_name "KEY_DATA" init_value " \"data\"" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1416759 // KEY_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1416887 // mNfcService (<unidirectional association>)
	relation 1416887 --->
	  a role_name "mNfcService" init_value " null" package
	    comment "
Messenger interface to NfcService for sending responses.
Only accessed on main thread by the message handler.

@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1416887 // mNfcService (<unidirectional association>)
	  b parent class_ref 513719 // Messenger
      end

      classrelation 1417015 // mMessenger (<unidirectional association>)
	relation 1417015 --->
	  a role_name "mMessenger" init_value " new Messenger(new MsgHandler())" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1417015 // mMessenger (<unidirectional association>)
	  b parent class_ref 513719 // Messenger
      end

      class 533687 "MsgHandler"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1417143 // <generalisation>
	  relation 1417143 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1417143 // <generalisation>
	    b parent class_ref 132023 // Handler
	end

	operation 3663927 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 3664055 "onBind"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3664183 "sendResponseApdu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "responseApdu" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a response APDU back to the remote device.

<p>Note: this method may be called from any thread and will not block.
@param responseApdu A byte-array containing the reponse APDU."
      end

      operation 3664311 "notifyUnhandled"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calling this method allows the service to tell the OS
that it won't be able to complete this transaction -
for example, because it requires data connectivity
that is not present at that moment.

The OS may use this indication to give the user a list
of alternative applications that can handle the last
AID that was selected. If the user would select an
application from the list, that action by itself
will not cause the default to be changed; the selected
application will be invoked for the next tap only.

If there are no other applications that can handle
this transaction, the OS will show an error dialog
indicating your service could not complete the
transaction.

<p>Note: this method may be called anywhere between
   the first {@link #processCommandApdu(byte[], Bundle)}
   call and a {@link #onDeactivated(int)} call."
      end

      operation 3664439 "processCommandApdu"
	abstract public explicit_return_type "byte"
	nparams 2
	  param inout name "commandApdu" explicit_type "byte"
	  param inout name "extras" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>This method will be called when a command APDU has been received
from a remote device. A response APDU can be provided directly
by returning a byte-array in this method. Note that in general
response APDUs must be sent as quickly as possible, given the fact
that the user is likely holding his device over an NFC reader
when this method is called.

<p class=\"note\">If there are multiple services that have registered for the same
AIDs in their meta-data entry, you will only get called if the user has
explicitly selected your service, either as a default or just for the next tap.

<p class=\"note\">This method is running on the main thread of your application.
If you cannot return a response APDU immediately, return null
and use the {@link #sendResponseApdu(byte[])} method later.

@param commandApdu The APDU that was received from the remote device
@param extras A bundle containing extra data. May be null.
@return a byte-array containing the response APDU, or null if no
        response APDU can be sent at this point."
      end

      operation 3664567 "onDeactivated"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "reason" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will be called in two possible scenarios:
<li>The NFC link has been deactivated or lost
<li>A different AID has been selected and was resolved to a different
    service component
@param reason Either {@link #DEACTIVATION_LINK_LOSS} or {@link #DEACTIVATION_DESELECTED}"
      end
    end

    class 533815 "HostNfcFService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>HostNfcFService is a convenience {@link Service} class that can be
extended to emulate an NFC-F card inside an Android service component.

<h3>NFC Protocols</h3>
<p>Cards emulated by this class are based on the NFC-Forum NFC-F
protocol (based on the JIS-X 6319-4 specification.)</p>

<h3>System Code and NFCID2 registration</h3>
<p>A {@link HostNfcFService HostNfcFService service} can register
exactly one System Code and one NFCID2. For details about the use of
System Code and NFCID2, see the NFC Forum Digital specification.</p>
<p>To statically register a System Code and NFCID2 with the service, a {@link #SERVICE_META_DATA}
entry must be included in the declaration of the service.

<p>All {@link HostNfcFService HostNfcFService} declarations in the manifest must require the
{@link android.Manifest.permission#BIND_NFC_SERVICE} permission
in their &lt;service&gt; tag, to ensure that only the platform can bind to your service.</p>

<p>An example of a HostNfcFService manifest declaration is shown below:

<pre> &lt;service android:name=\".MyHostNfcFService\" android:exported=\"true\" android:permission=\"android.permission.BIND_NFC_SERVICE\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.nfc.cardemulation.action.HOST_NFCF_SERVICE\"/&gt;
    &lt;/intent-filter&gt;
    &lt;meta-data android:name=\"android.nfc.cardemulation.host_nfcf_service\" android:resource=\"@xml/nfcfservice\"/&gt;
&lt;/service&gt;</pre>

This meta-data tag points to an nfcfservice.xml file.
An example of this file with a System Code and NFCID2 declaration is shown below:
<pre>
&lt;host-nfcf-service xmlns:android=\"http://schemas.android.com/apk/res/android\"
          android:description=\"@string/servicedesc\"&gt;
      &lt;system-code-filter android:name=\"4000\"/&gt;
      &lt;nfcid2-filter android:name=\"02FE000000000000\"/&gt;
&lt;/host-nfcf-service&gt;
</pre>

<p>The {@link android.R.styleable#HostNfcFService &lt;host-nfcf-service&gt;} is required
to contain a
{@link android.R.styleable#HostApduService_description &lt;android:description&gt;}
attribute that contains a user-friendly description of the service that may be shown in UI.
<p>The {@link android.R.styleable#HostNfcFService &lt;host-nfcf-service&gt;} must
contain:
<ul>
<li>Exactly one {@link android.R.styleable#SystemCodeFilter &lt;system-code-filter&gt;} tag.</li>
<li>Exactly one {@link android.R.styleable#Nfcid2Filter &lt;nfcid2-filter&gt;} tag.</li>
</ul>
</p>

<p>Alternatively, the System Code and NFCID2 can be dynamically registererd for a service
by using the {@link NfcFCardEmulation#registerSystemCodeForService(ComponentName, String)} and
{@link NfcFCardEmulation#setNfcid2ForService(ComponentName, String)} methods.
</p>

<h3>Service selection</h3>
<p>When a remote NFC devices wants to communicate with your service, it
sends a SENSF_REQ command to the NFC controller, requesting a System Code.
If a {@link NfcFCardEmulation NfcFCardEmulation service} has registered
this system code and has been enabled by the foreground application, the
NFC controller will respond with the NFCID2 that is registered for this service.
The reader can then continue data exchange with this service by using the NFCID2.</p>

<h3>Data exchange</h3>
<p>After service selection, all frames addressed to the NFCID2 of this service will
be sent through {@link #processNfcFPacket(byte[], Bundle)}, until the NFC link is
broken.<p>

<p>When the NFC link is broken, {@link #onDeactivated(int)} will be called.</p>"
      classrelation 1417271 // <generalisation>
	relation 1417271 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1417271 // <generalisation>
	  b parent class_ref 300343 // Service
      end

      classrelation 1417399 // SERVICE_INTERFACE (<unidirectional association>)
	relation 1417399 --->
	  a role_name "SERVICE_INTERFACE" init_value "
            \"android.nfc.cardemulation.action.HOST_NFCF_SERVICE\"" class_relation const_relation public
	    comment "
The {@link Intent} action that must be declared as handled by the service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstantType.SERVICE_ACTION)
"
	    classrelation_ref 1417399 // SERVICE_INTERFACE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1417527 // SERVICE_META_DATA (<unidirectional association>)
	relation 1417527 --->
	  a role_name "SERVICE_META_DATA" init_value "
            \"android.nfc.cardemulation.host_nfcf_service\"" class_relation const_relation public
	    comment "
The name of the meta-data element that contains
more information about this service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1417527 // SERVICE_META_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1568823 "DEACTIVATION_LINK_LOSS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reason for {@link #onDeactivated(int)}.
Indicates deactivation was due to the NFC link
being lost.
"
      end

      classrelation 1417655 // TAG (<unidirectional association>)
	relation 1417655 --->
	  a role_name "TAG" init_value " \"NfcFService\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1417655 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1568951 "MSG_COMMAND_PACKET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "MSG_COMMAND_PACKET is sent by NfcService when
a NFC-F command packet has been received.

@hide
"
      end

      attribute 1569079 "MSG_RESPONSE_PACKET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "MSG_RESPONSE_PACKET is sent to NfcService to send
a response packet back to the remote device.

@hide
"
      end

      attribute 1569207 "MSG_DEACTIVATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "MSG_DEACTIVATED is sent by NfcService when
the current session is finished; because
the NFC link was deactivated.

@hide
"
      end

      classrelation 1417783 // KEY_DATA (<unidirectional association>)
	relation 1417783 --->
	  a role_name "KEY_DATA" init_value " \"data\"" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1417783 // KEY_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1417911 // KEY_MESSENGER (<unidirectional association>)
	relation 1417911 --->
	  a role_name "KEY_MESSENGER" init_value " \"messenger\"" class_relation const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1417911 // KEY_MESSENGER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1418039 // mNfcService (<unidirectional association>)
	relation 1418039 --->
	  a role_name "mNfcService" init_value " null" package
	    comment "
Messenger interface to NfcService for sending responses.
Only accessed on main thread by the message handler.

@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1418039 // mNfcService (<unidirectional association>)
	  b parent class_ref 513719 // Messenger
      end

      classrelation 1418167 // mMessenger (<unidirectional association>)
	relation 1418167 --->
	  a role_name "mMessenger" init_value " new Messenger(new MsgHandler())" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1418167 // mMessenger (<unidirectional association>)
	  b parent class_ref 513719 // Messenger
      end

      class 533943 "MsgHandler"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1418295 // <generalisation>
	  relation 1418295 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1418295 // <generalisation>
	    b parent class_ref 132023 // Handler
	end

	operation 3664695 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 3664823 "onBind"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3664951 "sendResponsePacket"
	public explicit_return_type "void"
	nparams 1
	  param inout name "responsePacket" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a response packet back to the remote device.

<p>Note: this method may be called from any thread and will not block.
@param responsePacket A byte-array containing the response packet."
      end

      operation 3665079 "processNfcFPacket"
	abstract public explicit_return_type "byte"
	nparams 2
	  param inout name "commandPacket" explicit_type "byte"
	  param inout name "extras" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>This method will be called when a NFC-F packet has been received
from a remote device. A response packet can be provided directly
by returning a byte-array in this method. Note that in general
response packets must be sent as quickly as possible, given the fact
that the user is likely holding his device over an NFC reader
when this method is called.

<p class=\"note\">This method is running on the main thread of your application.
If you cannot return a response packet immediately, return null
and use the {@link #sendResponsePacket(byte[])} method later.

@param commandPacket The NFC-F packet that was received from the remote device
@param extras A bundle containing extra data. May be null.
@return a byte-array containing the response packet, or null if no
        response packet can be sent at this point."
      end

      operation 3665207 "onDeactivated"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "reason" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will be called in following possible scenarios:
<li>The NFC link has been lost
@param reason {@link #DEACTIVATION_LINK_LOSS}"
      end
    end

    class 534071 "NfcFCardEmulation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class can be used to query the state of
NFC-F card emulation services.

For a general introduction into NFC card emulation,
please read the <a href=\"{@docRoot}guide/topics/connectivity/nfc/hce.html\">
NFC card emulation developer guide</a>.</p>

<p class=\"note\">Use of this class requires the
{@link PackageManager#FEATURE_NFC_HOST_CARD_EMULATION_NFCF}
to be present on the device."
      classrelation 1418423 // TAG (<unidirectional association>)
	relation 1418423 --->
	  a role_name "TAG" init_value " \"NfcFCardEmulation\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1418423 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1569335 "sIsInitialized"
	class_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1418551 // sCardEmus (<unidirectional association>)
	relation 1418551 --->
	  stereotype "HashMap"
	  a role_name "sCardEmus" init_value " new HashMap<Context, NfcFCardEmulation>()" class_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, NfcFCardEmulation> ${name}${value};
"
	    classrelation_ref 1418551 // sCardEmus (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 1569463 "sService"
	class_attribute package explicit_type "INfcFCardEmulation"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1418679 // mContext (<unidirectional association>)
	relation 1418679 --->
	  a role_name "mContext" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1418679 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      operation 3665335 "NfcFCardEmulation"
	private explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "service" explicit_type "INfcFCardEmulation"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3665463 "getInstance"
	class_operation public return_type class_ref 534071 // NfcFCardEmulation
	nparams 1
	  param inout name "adapter" type class_ref 531255 // NfcAdapter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to get an instance of this class.

@param adapter A reference to an NfcAdapter object.
@return"
      end

      operation 3665591 "getSystemCodeForService"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "service" type class_ref 132279 // ComponentName
	nexceptions 1
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the current System Code for the specified service.

<p>Before calling {@link #registerSystemCodeForService(ComponentName, String)},
the System Code contained in the Manifest file is returned. After calling
{@link #registerSystemCodeForService(ComponentName, String)}, the System Code
registered there is returned. After calling
{@link #unregisterSystemCodeForService(ComponentName)}, \"null\" is returned.

@param service The component name of the service
@return the current System Code"
      end

      operation 3665719 "registerSystemCodeForService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 132279 // ComponentName
	  param inout name "systemCode" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a System Code for the specified service.

<p>The System Code must be in range from \"4000\" to \"4FFF\" (excluding \"4*FF\").

<p>If a System Code was previously registered for this service
(either statically through the manifest, or dynamically by using this API),
it will be replaced with this one.

<p>Even if the same System Code is already registered for another service,
this method succeeds in registering the System Code.

<p>Note that you can only register a System Code for a service that
is running under the same UID as the caller of this API. Typically
this means you need to call this from the same
package as the service itself, though UIDs can also
be shared between packages using shared UIDs.

@param service The component name of the service
@param systemCode The System Code to be registered
@return whether the registration was successful."
      end

      operation 3665847 "unregisterSystemCodeForService"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "service" type class_ref 132279 // ComponentName
	nexceptions 1
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a registered System Code for the specified service.

@param service The component name of the service
@return whether the System Code was successfully removed."
      end

      operation 3665975 "getNfcid2ForService"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "service" type class_ref 132279 // ComponentName
	nexceptions 1
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the current NFCID2 for the specified service.

<p>Before calling {@link #setNfcid2ForService(ComponentName, String)},
the NFCID2 contained in the Manifest file is returned. If \"random\" is specified
in the Manifest file, a random number assigned by the system at installation time
is returned. After setting an NFCID2
with {@link #setNfcid2ForService(ComponentName, String)}, this NFCID2 is returned.

@param service The component name of the service
@return the current NFCID2"
      end

      operation 3666103 "setNfcid2ForService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 132279 // ComponentName
	  param inout name "nfcid2" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a NFCID2 for the specified service.

<p>The NFCID2 must be in range from \"02FE000000000000\" to \"02FEFFFFFFFFFFFF\".

<p>If a NFCID2 was previously set for this service
(either statically through the manifest, or dynamically by using this API),
it will be replaced.

<p>Note that you can only set the NFCID2 for a service that
is running under the same UID as the caller of this API. Typically
this means you need to call this from the same
package as the service itself, though UIDs can also
be shared between packages using shared UIDs.

@param service The component name of the service
@param nfcid2 The NFCID2 to be registered
@return whether the setting was successful."
      end

      operation 3666231 "enableService"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "service" type class_ref 132279 // ComponentName
	nexceptions 1
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows a foreground application to specify which card emulation service
should be enabled while a specific Activity is in the foreground.

<p>The specified HCE-F service is only enabled when the corresponding application is
in the foreground and this method has been called. When the application is moved to
the background, {@link #disableService(Activity)} is called, or
NFCID2 or System Code is replaced, the HCE-F service is disabled.

<p>The specified Activity must currently be in resumed state. A good
paradigm is to call this method in your {@link Activity#onResume}, and to call
{@link #disableService(Activity)} in your {@link Activity#onPause}.

<p>Note that this preference is not persisted by the OS, and hence must be
called every time the Activity is resumed.

@param activity The activity which prefers this service to be invoked
@param service The service to be preferred while this activity is in the foreground
@return whether the registration was successful"
      end

      operation 3666359 "disableService"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	nexceptions 1
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables the service for the specified Activity.

<p>Note that the specified Activity must still be in resumed
state at the time of this call. A good place to call this method
is in your {@link Activity#onPause} implementation.

@param activity The activity which the service was registered for
@return true when successful"
      end

      operation 3666487 "getNfcFServices"
	public return_type class_ref 534199 // NfcFServiceInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3666615 "getMaxNumOfRegisterableSystemCodes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3666743 "isValidSystemCode"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "systemCode" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3666871 "isValidNfcid2"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "nfcid2" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3666999 "recoverService"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 534199 "NfcFServiceInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      classrelation 1418807 // <realization>
	relation 1418807 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1418807 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 1418935 // TAG (<unidirectional association>)
	relation 1418935 --->
	  a role_name "TAG" init_value " \"NfcFServiceInfo\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1418935 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1419063 // mService (<unidirectional association>)
	relation 1419063 --->
	  a role_name "mService" const_relation package
	    comment "
The service that implements this

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1419063 // mService (<unidirectional association>)
	  b parent class_ref 306231 // ResolveInfo
      end

      classrelation 1419191 // mDescription (<unidirectional association>)
	relation 1419191 --->
	  a role_name "mDescription" const_relation package
	    comment "
Description of the service

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1419191 // mDescription (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1419319 // mSystemCode (<unidirectional association>)
	relation 1419319 --->
	  a role_name "mSystemCode" const_relation package
	    comment "
System Code of the service

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1419319 // mSystemCode (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1419447 // mDynamicSystemCode (<unidirectional association>)
	relation 1419447 --->
	  a role_name "mDynamicSystemCode" package
	    comment "
System Code of the service registered by API

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1419447 // mDynamicSystemCode (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1419575 // mNfcid2 (<unidirectional association>)
	relation 1419575 --->
	  a role_name "mNfcid2" const_relation package
	    comment "
NFCID2 of the service

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1419575 // mNfcid2 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1419703 // mDynamicNfcid2 (<unidirectional association>)
	relation 1419703 --->
	  a role_name "mDynamicNfcid2" package
	    comment "
NFCID2 of the service registered by API

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1419703 // mDynamicNfcid2 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1569591 "mUid"
	const_attribute package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The uid of the package the service belongs to
"
      end

      operation 3667127 "NfcFServiceInfo"
	public explicit_return_type ""
	nparams 7
	  param inout name "info" type class_ref 306231 // ResolveInfo
	  param inout name "description" type class_ref 129591 // String
	  param inout name "systemCode" type class_ref 129591 // String
	  param inout name "dynamicSystemCode" type class_ref 129591 // String
	  param inout name "nfcid2" type class_ref 129591 // String
	  param inout name "dynamicNfcid2" type class_ref 129591 // String
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 3667255 "NfcFServiceInfo"
	public explicit_return_type ""
	nparams 2
	  param inout name "pm" type class_ref 129079 // PackageManager
	  param inout name "info" type class_ref 306231 // ResolveInfo
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3667383 "getComponent"
	public return_type class_ref 132279 // ComponentName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3667511 "getSystemCode"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3667639 "setOrReplaceDynamicSystemCode"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemCode" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3667767 "getNfcid2"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3667895 "setOrReplaceDynamicNfcid2"
	public explicit_return_type "void"
	nparams 1
	  param inout name "nfcid2" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3668023 "getDescription"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3668151 "getUid"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3668279 "loadLabel"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "pm" type class_ref 129079 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3668407 "loadIcon"
	public return_type class_ref 129719 // Drawable
	nparams 1
	  param inout name "pm" type class_ref 129079 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3668535 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3668663 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3668791 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3668919 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3669047 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1419831 // CREATOR (<unidirectional association>)
	relation 1419831 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<NfcFServiceInfo>() {
        @Override
        public NfcFServiceInfo createFromParcel(Parcel source) {
            ResolveInfo info = ResolveInfo.CREATOR.createFromParcel(source);
            String description = source.readString();
            String systemCode = source.readString();
            String dynamicSystemCode = null;
            if (source.readInt() != 0) {
                dynamicSystemCode = source.readString();
            }
            String nfcid2 = source.readString();
            String dynamicNfcid2 = null;
            if (source.readInt() != 0) {
                dynamicNfcid2 = source.readString();
            }
            int uid = source.readInt();
            NfcFServiceInfo service = new NfcFServiceInfo(info, description,
                    systemCode, dynamicSystemCode, nfcid2, dynamicNfcid2, uid);
            return service;
        }

        @Override
        public NfcFServiceInfo[] newArray(int size) {
            return new NfcFServiceInfo[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<NfcFServiceInfo> ${name}${value};
"
	    classrelation_ref 1419831 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 3669175 "dump"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "pw" explicit_type "PrintWriter"
	  param inout name "args" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 534327 "OffHostApduService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>OffHostApduService is a convenience {@link Service} class that can be
extended to describe one or more NFC applications that are residing
off-host, for example on an embedded secure element or a UICC.

<div class=\"special reference\">
<h3>Developer Guide</h3>
For a general introduction into the topic of card emulation,
please read the <a href=\"{@docRoot}guide/topics/nfc/ce.html\">
NFC card emulation developer guide.</a></p>
</div>

<h3>NFC Protocols</h3>
<p>Off-host applications represented by this class are based on the NFC-Forum ISO-DEP
protocol (based on ISO/IEC 14443-4) and support processing
command Application Protocol Data Units (APDUs) as
defined in the ISO/IEC 7816-4 specification.

<h3>Service selection</h3>
<p>When a remote NFC device wants to talk to your
off-host NFC application, it sends a so-called
\"SELECT AID\" APDU as defined in the ISO/IEC 7816-4 specification.
The AID is an application identifier defined in ISO/IEC 7816-4.

<p>The registration procedure for AIDs is defined in the
ISO/IEC 7816-5 specification. If you don't want to register an
AID, you are free to use AIDs in the proprietary range:
bits 8-5 of the first byte must each be set to '1'. For example,
\"0xF00102030405\" is a proprietary AID. If you do use proprietary
AIDs, it is recommended to choose an AID of at least 6 bytes,
to reduce the risk of collisions with other applications that
might be using proprietary AIDs as well.

<h3>AID groups</h3>
<p>In some cases, an off-host environment may need to register multiple AIDs
to implement a certain application, and it needs to be sure
that it is the default handler for all of these AIDs (as opposed
to some AIDs in the group going to another service).

<p>An AID group is a list of AIDs that should be considered as
belonging together by the OS. For all AIDs in an AID group, the
OS will guarantee one of the following:
<ul>
<li>All AIDs in the group are routed to the off-host execution environment
<li>No AIDs in the group are routed to the off-host execution environment
</ul>
In other words, there is no in-between state, where some AIDs
in the group can be routed to this off-host execution environment,
and some to another or a host-based {@link HostApduService}.
<h3>AID groups and categories</h3>
<p>Each AID group can be associated with a category. This allows
the Android OS to classify services, and it allows the user to
set defaults at the category level instead of the AID level.

<p>You can use
{@link CardEmulation#isDefaultServiceForCategory(android.content.ComponentName, String)}
to determine if your off-host service is the default handler for a category.

<p>In this version of the platform, the only known categories
are {@link CardEmulation#CATEGORY_PAYMENT} and {@link CardEmulation#CATEGORY_OTHER}.
AID groups without a category, or with a category that is not recognized
by the current platform version, will automatically be
grouped into the {@link CardEmulation#CATEGORY_OTHER} category.

<h3>Service AID registration</h3>
<p>To tell the platform which AIDs
reside off-host and are managed by this service, a {@link #SERVICE_META_DATA}
entry must be included in the declaration of the service. An
example of a OffHostApduService manifest declaration is shown below:
<pre> &lt;service android:name=\".MyOffHostApduService\" android:exported=\"true\" android:permission=\"android.permission.BIND_NFC_SERVICE\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.nfc.cardemulation.action.OFF_HOST_APDU_SERVICE\"/&gt;
    &lt;/intent-filter&gt;
    &lt;meta-data android:name=\"android.nfc.cardemulation.off_host_apdu_ervice\" android:resource=\"@xml/apduservice\"/&gt;
&lt;/service&gt;</pre>

This meta-data tag points to an apduservice.xml file.
An example of this file with a single AID group declaration is shown below:
<pre>
&lt;offhost-apdu-service xmlns:android=\"http://schemas.android.com/apk/res/android\"
          android:description=\"@string/servicedesc\"&gt;
      &lt;aid-group android:description=\"@string/subscription\" android:category=\"other\">
          &lt;aid-filter android:name=\"F0010203040506\"/&gt;
          &lt;aid-filter android:name=\"F0394148148100\"/&gt;
      &lt;/aid-group&gt;
&lt;/offhost-apdu-service&gt;
</pre>

<p>The {@link android.R.styleable#OffHostApduService &lt;offhost-apdu-service&gt;} is required
to contain a
{@link android.R.styleable#OffHostApduService_description &lt;android:description&gt;}
attribute that contains a user-friendly description of the service that may be shown in UI.

<p>The {@link android.R.styleable#OffHostApduService &lt;offhost-apdu-service&gt;} must
contain one or more {@link android.R.styleable#AidGroup &lt;aid-group&gt;} tags.
Each {@link android.R.styleable#AidGroup &lt;aid-group&gt;} must contain one or
more {@link android.R.styleable#AidFilter &lt;aid-filter&gt;} tags, each of which
contains a single AID. The AID must be specified in hexadecimal format, and contain
an even number of characters.

<p>This registration will allow the service to be included
as an option for being the default handler for categories.
The Android OS will take care of correctly
routing the AIDs to the off-host execution environment,
based on which service the user has selected to be the handler for a certain category.

<p>The service may define additional actions outside of the
Android namespace that provide further interaction with
the off-host execution environment.

<p class=\"note\">Use of this class requires the
{@link PackageManager#FEATURE_NFC_HOST_CARD_EMULATION} to be present
on the device."
      classrelation 1419959 // <generalisation>
	relation 1419959 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1419959 // <generalisation>
	  b parent class_ref 300343 // Service
      end

      classrelation 1420087 // SERVICE_INTERFACE (<unidirectional association>)
	relation 1420087 --->
	  a role_name "SERVICE_INTERFACE" init_value "
            \"android.nfc.cardemulation.action.OFF_HOST_APDU_SERVICE\"" class_relation const_relation public
	    comment "
The {@link Intent} action that must be declared as handled by the service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstantType.SERVICE_ACTION)
"
	    classrelation_ref 1420087 // SERVICE_INTERFACE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1420215 // SERVICE_META_DATA (<unidirectional association>)
	relation 1420215 --->
	  a role_name "SERVICE_META_DATA" init_value "
            \"android.nfc.cardemulation.off_host_apdu_service\"" class_relation const_relation public
	    comment "
The name of the meta-data element that contains
more information about this service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1420215 // SERVICE_META_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3669303 "onBind"
	abstract public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The Android platform itself will not bind to this service,
but merely uses its declaration to keep track of what AIDs
the service is interested in. This information is then used
to present the user with a list of applications that can handle
an AID, as well as correctly route those AIDs either to the host (in case
the user preferred a {@link HostApduService}), or to an off-host
execution environment (in case the user preferred a {@link OffHostApduService}.

Implementers may define additional actions outside of the
Android namespace that allow further interactions with
the off-host execution environment. Such implementations
would need to override this method."
      end
    end
  end

  deploymentview 153527 "cardemulation"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 337975 "AidGroup"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlSerializer;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 533175 // AidGroup
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 338103 "ApduServiceInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.pm.ServiceInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.Resources;
import android.content.res.Resources.NotFoundException;
import android.content.res.TypedArray;
import android.content.res.XmlResourceParser;
import android.graphics.drawable.Drawable;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.ResultReceiver;
import android.util.AttributeSet;
import android.util.Log;
import android.util.Xml;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 533303 // ApduServiceInfo
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 338231 "CardEmulation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.app.Activity;
import android.app.ActivityThread;
import android.content.ComponentName;
import android.content.Context;
import android.content.pm.IPackageManager;
import android.content.pm.PackageManager;
import android.nfc.INfcCardEmulation;
import android.nfc.NfcAdapter;
import android.os.RemoteException;
import android.os.UserHandle;
import android.provider.Settings;
import android.provider.Settings.SettingNotFoundException;
import android.util.Log;
import java.util.HashMap;
import java.util.List;
${definition}"
      associated_classes
	class_ref 533431 // CardEmulation
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 338359 "HostApduService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.app.Service;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.Messenger;
import android.os.RemoteException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 533559 // HostApduService
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 338487 "HostNfcFService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.app.Service;
import android.content.ComponentName;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.Messenger;
import android.os.RemoteException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 533815 // HostNfcFService
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 338615 "NfcFCardEmulation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.app.ActivityThread;
import android.content.ComponentName;
import android.content.Context;
import android.content.pm.IPackageManager;
import android.content.pm.PackageManager;
import android.nfc.INfcFCardEmulation;
import android.nfc.NfcAdapter;
import android.os.RemoteException;
import android.os.UserHandle;
import android.util.Log;
import java.util.HashMap;
import java.util.List;
${definition}"
      associated_classes
	class_ref 534071 // NfcFCardEmulation
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 338743 "NfcFServiceInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.pm.ServiceInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.content.res.XmlResourceParser;
import android.graphics.drawable.Drawable;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.AttributeSet;
import android.util.Log;
import android.util.Xml;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PrintWriter;
${definition}"
      associated_classes
	class_ref 534199 // NfcFServiceInfo
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 338871 "OffHostApduService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.app.Service;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.IBinder;
${definition}"
      associated_classes
	class_ref 534327 // OffHostApduService
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
