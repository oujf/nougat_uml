format 76
"tech" // nougat_src::frameworks::base::core::java::android::nfc::tech
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/core/java/android/nfc/tech/"
  java_package "android.nfc.tech"
  classview 162615 "tech"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 534455 "BasicTagTechnology"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A base class for tag technologies that are built on top of transceive()."
      classrelation 1420471 // <realization>
	relation 1420471 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1420471 // <realization>
	  b parent class_ref 534583 // TagTechnology
      end

      classrelation 1420599 // TAG (<unidirectional association>)
	relation 1420599 --->
	  a role_name "TAG" init_value " \"NFC\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1420599 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1420727 // mTag (<unidirectional association>)
	relation 1420727 --->
	  a role_name "mTag" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1420727 // mTag (<unidirectional association>)
	  b parent class_ref 532151 // Tag
      end

      attribute 1570999 "mIsConnected"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1571127 "mSelectedTechnology"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3670071 "BasicTagTechnology"
	package explicit_return_type ""
	nparams 2
	  param inout name "tag" type class_ref 532151 // Tag
	  param in name "tech" explicit_type "int"
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3670199 "getTag"
	public return_type class_ref 532151 // Tag
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3670327 "checkConnected"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Internal helper to throw IllegalStateException if the technology isn't connected "
      end

      operation 3670455 "isConnected"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3670583 "connect"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3670711 "reconnect"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 3670839 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 3670967 "getMaxTransceiveLengthInternal"
	package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Internal getMaxTransceiveLength() "
      end

      operation 3671095 "transceive"
	package explicit_return_type "byte"
	nparams 2
	  param inout name "data" explicit_type "byte"
	  param inout name "raw" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Internal transceive "
      end
    end

    class 534583 "TagTechnology"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@link TagTechnology} is an interface to a technology in a {@link Tag}.
<p>
Obtain a {@link TagTechnology} implementation by calling the static method <code>get()</code>
on the implementation class.
<p>
NFC tags are based on a number of independently developed technologies and offer a
wide range of capabilities. The
{@link TagTechnology} implementations provide access to these different
technologies and capabilities. Some sub-classes map to technology
specification (for example {@link NfcA}, {@link IsoDep}, others map to
pseudo-technologies or capabilities (for example {@link Ndef}, {@link NdefFormatable}).
<p>
It is mandatory for all Android NFC devices to provide the following
{@link TagTechnology} implementations.
<ul>
<li>{@link NfcA} (also known as ISO 14443-3A)
<li>{@link NfcB} (also known as ISO 14443-3B)
<li>{@link NfcF} (also known as JIS 6319-4)
<li>{@link NfcV} (also known as ISO 15693)
<li>{@link IsoDep}
<li>{@link Ndef} on NFC Forum Type 1, Type 2, Type 3 or Type 4 compliant tags
</ul>
It is optional for Android NFC devices to provide the following
{@link TagTechnology} implementations. If it is not provided, the
Android device will never enumerate that class via {@link Tag#getTechList}.
<ul>
<li>{@link MifareClassic}
<li>{@link MifareUltralight}
<li>{@link NfcBarcode}
<li>{@link NdefFormatable} must only be enumerated on tags for which this Android device
is capable of formatting. Proprietary knowledge is often required to format a tag
to make it NDEF compatible.
</ul>
<p>
{@link TagTechnology} implementations provide methods that fall into two classes:
<em>cached getters</em> and <em>I/O operations</em>.
<h4>Cached getters</h4>
These methods (usually prefixed by <code>get</code> or <code>is</code>) return
properties of the tag, as determined at discovery time. These methods will never
block or cause RF activity, and do not require {@link #connect} to have been called.
They also never update, for example if a property is changed by an I/O operation with a tag
then the cached getter will still return the result from tag discovery time.
<h4>I/O operations</h4>
I/O operations may require RF activity, and may block. They have the following semantics.
<ul>
<li>{@link #connect} must be called before using any other I/O operation.
<li>{@link #close} must be called after completing I/O operations with a
{@link TagTechnology}, and it will cancel all other blocked I/O operations on other threads
(including {@link #connect} with {@link IOException}.
<li>Only one {@link TagTechnology} can be connected at a time. Other calls to
{@link #connect} will return {@link IOException}.
<li>I/O operations may block, and should never be called on the main application
thread.
</ul>

<p class=\"note\"><strong>Note:</strong> Methods that perform I/O operations
require the {@link android.Manifest.permission#NFC} permission."
      classrelation 1420343 // <generalisation>
	relation 1420343 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1420343 // <generalisation>
	  b parent class_ref 357687 // Closeable
      end

      attribute 1569719 "NFC_A"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This technology is an instance of {@link NfcA}.
<p>Support for this technology type is mandatory.
@hide
"
      end

      attribute 1569847 "NFC_B"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This technology is an instance of {@link NfcB}.
<p>Support for this technology type is mandatory.
@hide
"
      end

      attribute 1569975 "ISO_DEP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This technology is an instance of {@link IsoDep}.
<p>Support for this technology type is mandatory.
@hide
"
      end

      attribute 1570103 "NFC_F"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This technology is an instance of {@link NfcF}.
<p>Support for this technology type is mandatory.
@hide
"
      end

      attribute 1570231 "NFC_V"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This technology is an instance of {@link NfcV}.
<p>Support for this technology type is mandatory.
@hide
"
      end

      attribute 1570359 "NDEF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This technology is an instance of {@link Ndef}.
<p>Support for this technology type is mandatory.
@hide
"
      end

      attribute 1570487 "NDEF_FORMATABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This technology is an instance of {@link NdefFormatable}.
<p>Support for this technology type is mandatory.
@hide
"
      end

      attribute 1570615 "MIFARE_CLASSIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This technology is an instance of {@link MifareClassic}.
<p>Support for this technology type is optional. If a stack doesn't support this technology
type tags using it must still be discovered and present the lower level radio interface
technologies in use.
@hide
"
      end

      attribute 1570743 "MIFARE_ULTRALIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This technology is an instance of {@link MifareUltralight}.
<p>Support for this technology type is optional. If a stack doesn't support this technology
type tags using it must still be discovered and present the lower level radio interface
technologies in use.
@hide
"
      end

      attribute 1570871 "NFC_BARCODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This technology is an instance of {@link NfcBarcode}.
<p>Support for this technology type is optional. If a stack doesn't support this technology
type tags using it must still be discovered and present the lower level radio interface
technologies in use.
@hide
"
      end

      operation 3669431 "getTag"
	public return_type class_ref 532151 // Tag
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the {@link Tag} object backing this {@link TagTechnology} object.
@return the {@link Tag} backing this {@link TagTechnology} object."
      end

      operation 3669559 "connect"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable I/O operations to the tag from this {@link TagTechnology} object.
<p>May cause RF activity and may block. Must not be called
from the main application thread. A blocked call will be canceled with
{@link IOException} by calling {@link #close} from another thread.
<p>Only one {@link TagTechnology} object can be connected to a {@link Tag} at a time.
<p>Applications must call {@link #close} when I/O operations are complete.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@see #close()
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or connect is canceled"
      end

      operation 3669687 "reconnect"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Re-connect to the {@link Tag} associated with this connection. Reconnecting to a tag can be
used to reset the state of the tag itself.

<p>May cause RF activity and may block. Must not be called
from the main application thread. A blocked call will be canceled with
{@link IOException} by calling {@link #close} from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@see #connect()
@see #close()
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or connect is canceled
@hide"
      end

      operation 3669815 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disable I/O operations to the tag from this {@link TagTechnology} object, and release resources.
<p>Also causes all blocked I/O operations on other thread to be canceled and
return with {@link IOException}.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@see #connect()"
      end

      operation 3669943 "isConnected"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to indicate if I/O operations should be possible.

<p>Returns true if {@link #connect} has completed, and {@link #close} has not been
called, and the {@link Tag} is not known to be out of range.
<p>Does not cause RF activity, and does not block.

@return true if I/O operations should be possible"
      end
    end

    class 534711 "IsoDep"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides access to ISO-DEP (ISO 14443-4) properties and I/O operations on a {@link Tag}.

<p>Acquire an {@link IsoDep} object using {@link #get}.
<p>The primary ISO-DEP I/O operation is {@link #transceive}. Applications must
implement their own protocol stack on top of {@link #transceive}.
<p>Tags that enumerate the {@link IsoDep} technology in {@link Tag#getTechList}
will also enumerate
{@link NfcA} or {@link NfcB} (since IsoDep builds on top of either of these).

<p class=\"note\"><strong>Note:</strong> Methods that perform I/O operations
require the {@link android.Manifest.permission#NFC} permission."
      classrelation 1420855 // <generalisation>
	relation 1420855 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1420855 // <generalisation>
	  b parent class_ref 534455 // BasicTagTechnology
      end

      classrelation 1420983 // TAG (<unidirectional association>)
	relation 1420983 --->
	  a role_name "TAG" init_value " \"NFC\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1420983 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1421111 // EXTRA_HI_LAYER_RESP (<unidirectional association>)
	relation 1421111 --->
	  a role_name "EXTRA_HI_LAYER_RESP" init_value " \"hiresp\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1421111 // EXTRA_HI_LAYER_RESP (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1421239 // EXTRA_HIST_BYTES (<unidirectional association>)
	relation 1421239 --->
	  a role_name "EXTRA_HIST_BYTES" init_value " \"histbytes\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1421239 // EXTRA_HIST_BYTES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1571255 "mHiLayerResponse"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1571383 "mHistBytes"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3671223 "get"
	class_operation public return_type class_ref 534711 // IsoDep
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of {@link IsoDep} for the given tag.
<p>Does not cause any RF activity and does not block.
<p>Returns null if {@link IsoDep} was not enumerated in {@link Tag#getTechList}.
This indicates the tag does not support ISO-DEP.

@param tag an ISO-DEP compatible tag
@return ISO-DEP object"
      end

      operation 3671351 "IsoDep"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3671479 "setTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the timeout of {@link #transceive} in milliseconds.
<p>The timeout only applies to ISO-DEP {@link #transceive}, and is
reset to a default value when {@link #close} is called.
<p>Setting a longer timeout may be useful when performing
transactions that require a long processing time on the tag
such as key generation.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param timeout timeout value in milliseconds"
      end

      operation 3671607 "getTimeout"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current timeout for {@link #transceive} in milliseconds.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@return timeout value in milliseconds"
      end

      operation 3671735 "getHistoricalBytes"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the ISO-DEP historical bytes for {@link NfcA} tags.
<p>Does not cause any RF activity and does not block.
<p>The historical bytes can be used to help identify a tag. They are present
only on {@link IsoDep} tags that are based on {@link NfcA} RF technology.
If this tag is not {@link NfcA} then null is returned.
<p>In ISO 14443-4 terminology, the historical bytes are a subset of the RATS
response.

@return ISO-DEP historical bytes, or null if this is not a {@link NfcA} tag"
      end

      operation 3671863 "getHiLayerResponse"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the higher layer response bytes for {@link NfcB} tags.
<p>Does not cause any RF activity and does not block.
<p>The higher layer response bytes can be used to help identify a tag.
They are present only on {@link IsoDep} tags that are based on {@link NfcB}
RF technology. If this tag is not {@link NfcB} then null is returned.
<p>In ISO 14443-4 terminology, the higher layer bytes are a subset of the
ATTRIB response.

@return ISO-DEP historical bytes, or null if this is not a {@link NfcB} tag"
      end

      operation 3671991 "transceive"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "data" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send raw ISO-DEP data to the tag and receive the response.

<p>Applications must only send the INF payload, and not the start of frame and
end of frame indicators. Applications do not need to fragment the payload, it
will be automatically fragmented and defragmented by {@link #transceive} if
it exceeds FSD/FSC limits.

<p>Use {@link #getMaxTransceiveLength} to retrieve the maximum number of bytes
that can be sent with {@link #transceive}.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param data command bytes to send, must not be null
@return response bytes received, will not be null
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or this operation is canceled"
      end

      operation 3672119 "getMaxTransceiveLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the maximum number of bytes that can be sent with {@link #transceive}.
@return the maximum number of bytes that can be sent with {@link #transceive}."
      end

      operation 3672247 "isExtendedLengthApduSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Standard APDUs have a 1-byte length field, allowing a maximum of
255 payload bytes, which results in a maximum APDU length of 261 bytes.

<p>Extended length APDUs have a 3-byte length field, allowing 65535
payload bytes.

<p>Some NFC adapters, like the one used in the Nexus S and the Galaxy Nexus
do not support extended length APDUs. They are expected to be well-supported
in the future though. Use this method to check for extended length APDU
support.

@return whether the NFC adapter on this device supports extended length APDUs."
      end
    end

    class 534839 "MifareClassic"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides access to MIFARE Classic properties and I/O operations on a {@link Tag}.

<p>Acquire a {@link MifareClassic} object using {@link #get}.

<p>MIFARE Classic is also known as MIFARE Standard.
<p>MIFARE Classic tags are divided into sectors, and each sector is sub-divided into
blocks. Block size is always 16 bytes ({@link #BLOCK_SIZE}. Sector size varies.
<ul>
<li>MIFARE Classic Mini are 320 bytes ({@link #SIZE_MINI}), with 5 sectors each of 4 blocks.
<li>MIFARE Classic 1k are 1024 bytes ({@link #SIZE_1K}), with 16 sectors each of 4 blocks.
<li>MIFARE Classic 2k are 2048 bytes ({@link #SIZE_2K}), with 32 sectors each of 4 blocks.
<li>MIFARE Classic 4k} are 4096 bytes ({@link #SIZE_4K}). The first 32 sectors contain 4 blocks
and the last 8 sectors contain 16 blocks.
</ul>

<p>MIFARE Classic tags require authentication on a per-sector basis before any
other I/O operations on that sector can be performed. There are two keys per sector,
and ACL bits determine what I/O operations are allowed on that sector after
authenticating with a key. {@see #authenticateSectorWithKeyA} and
{@see #authenticateSectorWithKeyB}.

<p>Three well-known authentication keys are defined in this class:
{@link #KEY_DEFAULT}, {@link #KEY_MIFARE_APPLICATION_DIRECTORY},
{@link #KEY_NFC_FORUM}.
<ul>
<li>{@link #KEY_DEFAULT} is the default factory key for MIFARE Classic.
<li>{@link #KEY_MIFARE_APPLICATION_DIRECTORY} is the well-known key for
MIFARE Classic cards that have been formatted according to the
MIFARE Application Directory (MAD) specification.
<li>{@link #KEY_NFC_FORUM} is the well-known key for MIFARE Classic cards that
have been formatted according to the NXP specification for NDEF on MIFARE Classic.

<p>Implementation of this class on a Android NFC device is optional.
If it is not implemented, then
{@link MifareClassic} will never be enumerated in {@link Tag#getTechList}.
If it is enumerated, then all {@link MifareClassic} I/O operations will be supported,
and {@link Ndef#MIFARE_CLASSIC} NDEF tags will also be supported. In either case,
{@link NfcA} will also be enumerated on the tag, because all MIFARE Classic tags are also
{@link NfcA}.

<p class=\"note\"><strong>Note:</strong> Methods that perform I/O operations
require the {@link android.Manifest.permission#NFC} permission."
      classrelation 1421367 // <generalisation>
	relation 1421367 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1421367 // <generalisation>
	  b parent class_ref 534455 // BasicTagTechnology
      end

      classrelation 1421495 // TAG (<unidirectional association>)
	relation 1421495 --->
	  a role_name "TAG" init_value " \"NFC\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1421495 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1571511 "KEY_DEFAULT"
	class_attribute const_attribute public explicit_type "byte"
	multiplicity "[]"
	init_value "
            {(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF}"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The default factory key.
"
      end

      attribute 1571639 "KEY_MIFARE_APPLICATION_DIRECTORY"
	class_attribute const_attribute public explicit_type "byte"
	multiplicity "[]"
	init_value "
            {(byte)0xA0,(byte)0xA1,(byte)0xA2,(byte)0xA3,(byte)0xA4,(byte)0xA5}"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The well-known key for tags formatted according to the
MIFARE Application Directory (MAD) specification.
"
      end

      attribute 1571767 "KEY_NFC_FORUM"
	class_attribute const_attribute public explicit_type "byte"
	multiplicity "[]"
	init_value "
            {(byte)0xD3,(byte)0xF7,(byte)0xD3,(byte)0xF7,(byte)0xD3,(byte)0xF7}"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The well-known key for tags formatted according to the
NDEF on MIFARE Classic specification.
"
      end

      attribute 1571895 "TYPE_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A MIFARE Classic compatible card of unknown type "
      end

      attribute 1572023 "TYPE_CLASSIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A MIFARE Classic tag "
      end

      attribute 1572151 "TYPE_PLUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A MIFARE Plus tag "
      end

      attribute 1572279 "TYPE_PRO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A MIFARE Pro tag "
      end

      attribute 1572407 "SIZE_1K"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1024"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Tag contains 16 sectors, each with 4 blocks. "
      end

      attribute 1572535 "SIZE_2K"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2048"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Tag contains 32 sectors, each with 4 blocks. "
      end

      attribute 1572663 "SIZE_4K"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4096"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Tag contains 40 sectors. The first 32 sectors contain 4 blocks and the last 8 sectors
contain 16 blocks.
"
      end

      attribute 1572791 "SIZE_MINI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 320"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Tag contains 5 sectors, each with 4 blocks. "
      end

      attribute 1572919 "BLOCK_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Size of a MIFARE Classic block (in bytes) "
      end

      attribute 1573047 "MAX_BLOCK_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 256"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1573175 "MAX_SECTOR_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 40"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1573303 "mIsEmulated"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1573431 "mType"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1573559 "mSize"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3672375 "get"
	class_operation public return_type class_ref 534839 // MifareClassic
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of {@link MifareClassic} for the given tag.
<p>Does not cause any RF activity and does not block.
<p>Returns null if {@link MifareClassic} was not enumerated in {@link Tag#getTechList}.
This indicates the tag is not MIFARE Classic compatible, or this Android
device does not support MIFARE Classic.

@param tag an MIFARE Classic compatible tag
@return MIFARE Classic object"
      end

      operation 3672503 "MifareClassic"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3672631 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the type of this MIFARE Classic compatible tag.
<p>One of {@link #TYPE_UNKNOWN}, {@link #TYPE_CLASSIC}, {@link #TYPE_PLUS} or
{@link #TYPE_PRO}.
<p>Does not cause any RF activity and does not block.

@return type"
      end

      operation 3672759 "getSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the size of the tag in bytes
<p>One of {@link #SIZE_MINI}, {@link #SIZE_1K}, {@link #SIZE_2K}, {@link #SIZE_4K}.
These constants are equal to their respective size in bytes.
<p>Does not cause any RF activity and does not block.
@return size in bytes"
      end

      operation 3672887 "isEmulated"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the tag is emulated, determined at discovery time.
These are actually smart-cards that emulate a MIFARE Classic interface.
They can be treated identically to a MIFARE Classic tag.
@hide"
      end

      operation 3673015 "getSectorCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of MIFARE Classic sectors.
<p>Does not cause any RF activity and does not block.
@return number of sectors"
      end

      operation 3673143 "getBlockCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the total number of MIFARE Classic blocks.
<p>Does not cause any RF activity and does not block.
@return total number of blocks"
      end

      operation 3673271 "getBlockCountInSector"
	public explicit_return_type "int"
	nparams 1
	  param in name "sectorIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of blocks in the given sector.
<p>Does not cause any RF activity and does not block.

@param sectorIndex index of sector, starting from 0
@return number of blocks in the sector"
      end

      operation 3673399 "blockToSector"
	public explicit_return_type "int"
	nparams 1
	  param in name "blockIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the sector that contains a given block.
<p>Does not cause any RF activity and does not block.

@param blockIndex index of block to lookup, starting from 0
@return sector index that contains the block"
      end

      operation 3673527 "sectorToBlock"
	public explicit_return_type "int"
	nparams 1
	  param in name "sectorIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the first block of a given sector.
<p>Does not cause any RF activity and does not block.

@param sectorIndex index of sector to lookup, starting from 0
@return block index of first block in sector"
      end

      operation 3673655 "authenticateSectorWithKeyA"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "sectorIndex" explicit_type "int"
	  param inout name "key" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Authenticate a sector with key A.

<p>Successful authentication of a sector with key A enables other
I/O operations on that sector. The set of operations granted by key A
key depends on the ACL bits set in that sector. For more information
see the MIFARE Classic specification on {@see http://www.nxp.com}.

<p>A failed authentication attempt causes an implicit reconnection to the
tag, so authentication to other sectors will be lost.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param sectorIndex index of sector to authenticate, starting from 0
@param key 6-byte authentication key
@return true on success, false on authentication failure
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled"
      end

      operation 3673783 "authenticateSectorWithKeyB"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "sectorIndex" explicit_type "int"
	  param inout name "key" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Authenticate a sector with key B.

<p>Successful authentication of a sector with key B enables other
I/O operations on that sector. The set of operations granted by key B
depends on the ACL bits set in that sector. For more information
see the MIFARE Classic specification on {@see http://www.nxp.com}.

<p>A failed authentication attempt causes an implicit reconnection to the
tag, so authentication to other sectors will be lost.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param sectorIndex index of sector to authenticate, starting from 0
@param key 6-byte authentication key
@return true on success, false on authentication failure
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled"
      end

      operation 3673911 "authenticate"
	private explicit_return_type "boolean"
	nparams 3
	  param in name "sector" explicit_type "int"
	  param inout name "key" explicit_type "byte"
	  param inout name "keyA" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3674039 "readBlock"
	public explicit_return_type "byte"
	nparams 1
	  param in name "blockIndex" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read 16-byte block.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param blockIndex index of block to read, starting from 0
@return 16 byte block
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled"
      end

      operation 3674167 "writeBlock"
	public explicit_return_type "void"
	nparams 2
	  param in name "blockIndex" explicit_type "int"
	  param inout name "data" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write 16-byte block.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param blockIndex index of block to write, starting from 0
@param data 16 bytes of data to write
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled"
      end

      operation 3674295 "increment"
	public explicit_return_type "void"
	nparams 2
	  param in name "blockIndex" explicit_type "int"
	  param in name "value" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Increment a value block, storing the result in the temporary block on the tag.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param blockIndex index of block to increment, starting from 0
@param value non-negative to increment by
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled"
      end

      operation 3674423 "decrement"
	public explicit_return_type "void"
	nparams 2
	  param in name "blockIndex" explicit_type "int"
	  param in name "value" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decrement a value block, storing the result in the temporary block on the tag.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param blockIndex index of block to decrement, starting from 0
@param value non-negative to decrement by
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled"
      end

      operation 3674551 "transfer"
	public explicit_return_type "void"
	nparams 1
	  param in name "blockIndex" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy from the temporary block to a value block.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param blockIndex index of block to copy to
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled"
      end

      operation 3674679 "restore"
	public explicit_return_type "void"
	nparams 1
	  param in name "blockIndex" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy from a value block to the temporary block.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param blockIndex index of block to copy from
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled"
      end

      operation 3674807 "transceive"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "data" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send raw NfcA data to a tag and receive the response.

<p>This is equivalent to connecting to this tag via {@link NfcA}
and calling {@link NfcA#transceive}. Note that all MIFARE Classic
tags are based on {@link NfcA} technology.

<p>Use {@link #getMaxTransceiveLength} to retrieve the maximum number of bytes
that can be sent with {@link #transceive}.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@see NfcA#transceive"
      end

      operation 3674935 "getMaxTransceiveLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the maximum number of bytes that can be sent with {@link #transceive}.
@return the maximum number of bytes that can be sent with {@link #transceive}."
      end

      operation 3675063 "setTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the {@link #transceive} timeout in milliseconds.

<p>The timeout only applies to {@link #transceive} on this object,
and is reset to a default value when {@link #close} is called.

<p>Setting a longer timeout may be useful when performing
transactions that require a long processing time on the tag
such as key generation.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param timeout timeout value in milliseconds"
      end

      operation 3675191 "getTimeout"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current {@link #transceive} timeout in milliseconds.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@return timeout value in milliseconds"
      end

      operation 3675319 "validateSector"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "sector" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3675447 "validateBlock"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "block" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3675575 "validateValueOperand"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 534967 "MifareUltralight"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "TOOD: Ultralight C 3-DES authentication, one-way counter

Provides access to MIFARE Ultralight properties and I/O operations on a {@link Tag}.

<p>Acquire a {@link MifareUltralight} object using {@link #get}.

<p>MIFARE Ultralight compatible tags have 4 byte pages {@link #PAGE_SIZE}.
The primary operations on an Ultralight tag are {@link #readPages} and
{@link #writePage}.

<p>The original MIFARE Ultralight consists of a 64 byte EEPROM. The first
4 pages are for the OTP area, manufacturer data, and locking bits. They are
readable and some bits are writable. The final 12 pages are the user
read/write area. For more information see the NXP data sheet MF0ICU1.

<p>The MIFARE Ultralight C consists of a 192 byte EEPROM. The first 4 pages
are for OTP, manufacturer data, and locking bits. The next 36 pages are the
user read/write area. The next 4 pages are additional locking bits, counters
and authentication configuration and are readable. The final 4 pages are for
the authentication key and are not readable. For more information see the
NXP data sheet MF0ICU2.

<p>Implementation of this class on a Android NFC device is optional.
If it is not implemented, then
{@link MifareUltralight} will never be enumerated in {@link Tag#getTechList}.
If it is enumerated, then all {@link MifareUltralight} I/O operations will be supported.
In either case, {@link NfcA} will also be enumerated on the tag,
because all MIFARE Ultralight tags are also {@link NfcA} tags.

<p class=\"note\"><strong>Note:</strong> Methods that perform I/O operations
require the {@link android.Manifest.permission#NFC} permission."
      classrelation 1421623 // <generalisation>
	relation 1421623 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1421623 // <generalisation>
	  b parent class_ref 534455 // BasicTagTechnology
      end

      classrelation 1421751 // TAG (<unidirectional association>)
	relation 1421751 --->
	  a role_name "TAG" init_value " \"NFC\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1421751 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1573687 "TYPE_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A MIFARE Ultralight compatible tag of unknown type "
      end

      attribute 1573815 "TYPE_ULTRALIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A MIFARE Ultralight tag "
      end

      attribute 1573943 "TYPE_ULTRALIGHT_C"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A MIFARE Ultralight C tag "
      end

      attribute 1574071 "PAGE_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Size of a MIFARE Ultralight page in bytes "
      end

      attribute 1574199 "NXP_MANUFACTURER_ID"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x04"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1574327 "MAX_PAGE_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 256"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1421879 // EXTRA_IS_UL_C (<unidirectional association>)
	relation 1421879 --->
	  a role_name "EXTRA_IS_UL_C" init_value " \"isulc\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1421879 // EXTRA_IS_UL_C (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1574455 "mType"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3675703 "get"
	class_operation public return_type class_ref 534967 // MifareUltralight
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of {@link MifareUltralight} for the given tag.
<p>Returns null if {@link MifareUltralight} was not enumerated in
{@link Tag#getTechList} - this indicates the tag is not MIFARE
Ultralight compatible, or that this Android
device does not implement MIFARE Ultralight.
<p>Does not cause any RF activity and does not block.

@param tag an MIFARE Ultralight compatible tag
@return MIFARE Ultralight object"
      end

      operation 3675831 "MifareUltralight"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3675959 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the MIFARE Ultralight type of the tag.
<p>One of {@link #TYPE_ULTRALIGHT} or {@link #TYPE_ULTRALIGHT_C} or
{@link #TYPE_UNKNOWN}.
<p>Depending on how the tag has been formatted, it can be impossible
to accurately classify between original MIFARE Ultralight and
Ultralight C. So treat this method as a hint.
<p>Does not cause any RF activity and does not block.

@return the type"
      end

      operation 3676087 "readPages"
	public explicit_return_type "byte"
	nparams 1
	  param in name "pageOffset" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read 4 pages (16 bytes).

<p>The MIFARE Ultralight protocol always reads 4 pages at a time, to
reduce the number of commands required to read an entire tag.
<p>If a read spans past the last readable block, then the tag will
return pages that have been wrapped back to the first blocks. MIFARE
Ultralight tags have readable blocks 0x00 through 0x0F. So a read to
block offset 0x0E would return blocks 0x0E, 0x0F, 0x00, 0x01. MIFARE
Ultralight C tags have readable blocks 0x00 through 0x2B. So a read to
block 0x2A would return blocks 0x2A, 0x2B, 0x00, 0x01.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param pageOffset index of first page to read, starting from 0
@return 4 pages (16 bytes)
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled"
      end

      operation 3676215 "writePage"
	public explicit_return_type "void"
	nparams 2
	  param in name "pageOffset" explicit_type "int"
	  param inout name "data" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write 1 page (4 bytes).

<p>The MIFARE Ultralight protocol always writes 1 page at a time, to
minimize EEPROM write cycles.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param pageOffset index of page to write, starting from 0
@param data 4 bytes to write
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled"
      end

      operation 3676343 "transceive"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "data" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send raw NfcA data to a tag and receive the response.

<p>This is equivalent to connecting to this tag via {@link NfcA}
and calling {@link NfcA#transceive}. Note that all MIFARE Classic
tags are based on {@link NfcA} technology.

<p>Use {@link #getMaxTransceiveLength} to retrieve the maximum number of bytes
that can be sent with {@link #transceive}.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@see NfcA#transceive"
      end

      operation 3676471 "getMaxTransceiveLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the maximum number of bytes that can be sent with {@link #transceive}.
@return the maximum number of bytes that can be sent with {@link #transceive}."
      end

      operation 3676599 "setTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the {@link #transceive} timeout in milliseconds.

<p>The timeout only applies to {@link #transceive} on this object,
and is reset to a default value when {@link #close} is called.

<p>Setting a longer timeout may be useful when performing
transactions that require a long processing time on the tag
such as key generation.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param timeout timeout value in milliseconds"
      end

      operation 3676727 "getTimeout"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current {@link #transceive} timeout in milliseconds.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@return timeout value in milliseconds"
      end

      operation 3676855 "validatePageIndex"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "pageIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 535095 "Ndef"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides access to NDEF content and operations on a {@link Tag}.

<p>Acquire a {@link Ndef} object using {@link #get}.

<p>NDEF is an NFC Forum data format. The data formats are implemented in
{@link android.nfc.NdefMessage} and
{@link android.nfc.NdefRecord}. This class provides methods to
retrieve and modify the {@link android.nfc.NdefMessage}
on a tag.

<p>There are currently four NFC Forum standardized tag types that can be
formatted to contain NDEF data.
<ul>
<li>NFC Forum Type 1 Tag ({@link #NFC_FORUM_TYPE_1}), such as the Innovision Topaz
<li>NFC Forum Type 2 Tag ({@link #NFC_FORUM_TYPE_2}), such as the NXP MIFARE Ultralight
<li>NFC Forum Type 3 Tag ({@link #NFC_FORUM_TYPE_3}), such as Sony Felica
<li>NFC Forum Type 4 Tag ({@link #NFC_FORUM_TYPE_4}), such as NXP MIFARE Desfire
</ul>
It is mandatory for all Android devices with NFC to correctly enumerate
{@link Ndef} on NFC Forum Tag Types 1-4, and implement all NDEF operations
as defined in this class.

<p>Some vendors have their own well defined specifications for storing NDEF data
on tags that do not fall into the above categories. Android devices with NFC
should enumerate and implement {@link Ndef} under these vendor specifications
where possible, but it is not mandatory. {@link #getType} returns a String
describing this specification, for example {@link #MIFARE_CLASSIC} is
<code>com.nxp.ndef.mifareclassic</code>.

<p>Android devices that support MIFARE Classic must also correctly
implement {@link Ndef} on MIFARE Classic tags formatted to NDEF.

<p>For guaranteed compatibility across all Android devices with NFC, it is
recommended to use NFC Forum Types 1-4 in new deployments of NFC tags
with NDEF payload. Vendor NDEF formats will not work on all Android devices.

<p class=\"note\"><strong>Note:</strong> Methods that perform I/O operations
require the {@link android.Manifest.permission#NFC} permission."
      classrelation 1422007 // <generalisation>
	relation 1422007 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1422007 // <generalisation>
	  b parent class_ref 534455 // BasicTagTechnology
      end

      classrelation 1422135 // TAG (<unidirectional association>)
	relation 1422135 --->
	  a role_name "TAG" init_value " \"NFC\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1422135 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1574583 "NDEF_MODE_READ_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1574711 "NDEF_MODE_READ_WRITE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1574839 "NDEF_MODE_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      classrelation 1422263 // EXTRA_NDEF_MSG (<unidirectional association>)
	relation 1422263 --->
	  a role_name "EXTRA_NDEF_MSG" init_value " \"ndefmsg\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1422263 // EXTRA_NDEF_MSG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1422391 // EXTRA_NDEF_MAXLENGTH (<unidirectional association>)
	relation 1422391 --->
	  a role_name "EXTRA_NDEF_MAXLENGTH" init_value " \"ndefmaxlength\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1422391 // EXTRA_NDEF_MAXLENGTH (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1422519 // EXTRA_NDEF_CARDSTATE (<unidirectional association>)
	relation 1422519 --->
	  a role_name "EXTRA_NDEF_CARDSTATE" init_value " \"ndefcardstate\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1422519 // EXTRA_NDEF_CARDSTATE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1422647 // EXTRA_NDEF_TYPE (<unidirectional association>)
	relation 1422647 --->
	  a role_name "EXTRA_NDEF_TYPE" init_value " \"ndeftype\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1422647 // EXTRA_NDEF_TYPE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1574967 "TYPE_OTHER"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1575095 "TYPE_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1575223 "TYPE_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1575351 "TYPE_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1575479 "TYPE_4"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1575607 "TYPE_MIFARE_CLASSIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 101"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 1575735 "TYPE_ICODE_SLI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 102"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      classrelation 1422775 // UNKNOWN (<unidirectional association>)
	relation 1422775 --->
	  a role_name "UNKNOWN" init_value " \"android.ndef.unknown\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1422775 // UNKNOWN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1422903 // NFC_FORUM_TYPE_1 (<unidirectional association>)
	relation 1422903 --->
	  a role_name "NFC_FORUM_TYPE_1" init_value " \"org.nfcforum.ndef.type1\"" class_relation const_relation public
	    comment " NFC Forum Tag Type 1 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1422903 // NFC_FORUM_TYPE_1 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1423031 // NFC_FORUM_TYPE_2 (<unidirectional association>)
	relation 1423031 --->
	  a role_name "NFC_FORUM_TYPE_2" init_value " \"org.nfcforum.ndef.type2\"" class_relation const_relation public
	    comment " NFC Forum Tag Type 2 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1423031 // NFC_FORUM_TYPE_2 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1423159 // NFC_FORUM_TYPE_3 (<unidirectional association>)
	relation 1423159 --->
	  a role_name "NFC_FORUM_TYPE_3" init_value " \"org.nfcforum.ndef.type3\"" class_relation const_relation public
	    comment " NFC Forum Tag Type 4 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1423159 // NFC_FORUM_TYPE_3 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1423287 // NFC_FORUM_TYPE_4 (<unidirectional association>)
	relation 1423287 --->
	  a role_name "NFC_FORUM_TYPE_4" init_value " \"org.nfcforum.ndef.type4\"" class_relation const_relation public
	    comment " NFC Forum Tag Type 4 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1423287 // NFC_FORUM_TYPE_4 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1423415 // MIFARE_CLASSIC (<unidirectional association>)
	relation 1423415 --->
	  a role_name "MIFARE_CLASSIC" init_value " \"com.nxp.ndef.mifareclassic\"" class_relation const_relation public
	    comment " NDEF on MIFARE Classic 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1423415 // MIFARE_CLASSIC (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1423543 // ICODE_SLI (<unidirectional association>)
	relation 1423543 --->
	  a role_name "ICODE_SLI" init_value " \"com.nxp.ndef.icodesli\"" class_relation const_relation public
	    comment "
NDEF on iCODE SLI
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1423543 // ICODE_SLI (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1575863 "mMaxNdefSize"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1575991 "mCardState"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1423671 // mNdefMsg (<unidirectional association>)
	relation 1423671 --->
	  a role_name "mNdefMsg" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1423671 // mNdefMsg (<unidirectional association>)
	  b parent class_ref 530487 // NdefMessage
      end

      attribute 1576119 "mNdefType"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3676983 "get"
	class_operation public return_type class_ref 535095 // Ndef
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of {@link Ndef} for the given tag.

<p>Returns null if {@link Ndef} was not enumerated in {@link Tag#getTechList}.
This indicates the tag is not NDEF formatted, or that this tag
is NDEF formatted but under a vendor specification that this Android
device does not implement.

<p>Does not cause any RF activity and does not block.

@param tag an NDEF compatible tag
@return Ndef object"
      end

      operation 3677111 "Ndef"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal constructor, to be used by NfcAdapter
@hide"
      end

      operation 3677239 "getCachedNdefMessage"
	public return_type class_ref 530487 // NdefMessage
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the {@link NdefMessage} that was read from the tag at discovery time.

<p>If the NDEF Message is modified by an I/O operation then it
will not be updated here, this function only returns what was discovered
when the tag entered the field.
<p>Note that this method may return null if the tag was in the
INITIALIZED state as defined by NFC Forum, as in this state the
tag is formatted to support NDEF but does not contain a message yet.
<p>Does not cause any RF activity and does not block.
@return NDEF Message read from the tag at discovery time, can be null"
      end

      operation 3677367 "getType"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the NDEF tag type.

<p>Returns one of {@link #NFC_FORUM_TYPE_1}, {@link #NFC_FORUM_TYPE_2},
{@link #NFC_FORUM_TYPE_3}, {@link #NFC_FORUM_TYPE_4},
{@link #MIFARE_CLASSIC} or another NDEF tag type that has not yet been
formalized in this Android API.

<p>Does not cause any RF activity and does not block.

@return a string representing the NDEF tag type"
      end

      operation 3677495 "getMaxSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the maximum NDEF message size in bytes.

<p>Does not cause any RF activity and does not block.

@return size in bytes"
      end

      operation 3677623 "isWritable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if the tag is writable.

<p>NFC Forum tags can be in read-only or read-write states.

<p>Does not cause any RF activity and does not block.

<p>Requires {@link android.Manifest.permission#NFC} permission.

@return true if the tag is writable"
      end

      operation 3677751 "getNdefMessage"
	public return_type class_ref 530487 // NdefMessage
	nparams 0
	nexceptions 2
	  explicit_exception "IOException"
	  exception class_ref 530743 // FormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the current {@link android.nfc.NdefMessage} on this tag.

<p>This always reads the current NDEF Message stored on the tag.

<p>Note that this method may return null if the tag was in the
INITIALIZED state as defined by NFC Forum, as in that state the
tag is formatted to support NDEF but does not contain a message yet.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@return the NDEF Message, can be null
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled
@throws FormatException if the NDEF Message on the tag is malformed"
      end

      operation 3677879 "writeNdefMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 530487 // NdefMessage
	nexceptions 2
	  explicit_exception "IOException"
	  exception class_ref 530743 // FormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overwrite the {@link NdefMessage} on this tag.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param msg the NDEF Message to write, must not be null
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled
@throws FormatException if the NDEF Message to write is malformed"
      end

      operation 3678007 "canMakeReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether a tag can be made read-only with {@link #makeReadOnly()}.

<p>Does not cause any RF activity and does not block.

@return true if it is possible to make this tag read-only"
      end

      operation 3678135 "makeReadOnly"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make a tag read-only.

<p>This sets the CC field to indicate the tag is read-only,
and where possible permanently sets the lock bits to prevent
any further modification of the memory.
<p>This is a one-way process and cannot be reverted!

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@return true on success, false if it is not possible to make this tag read-only
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled"
      end
    end

    class 535223 "NdefFormatable"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provide access to NDEF format operations on a {@link Tag}.

<p>Acquire a {@link NdefFormatable} object using {@link #get}.

<p>Android devices with NFC must only enumerate and implement this
class for tags for which it can format to NDEF.

<p>Unfortunately the procedures to convert unformated tags to NDEF formatted
tags are not specified by NFC Forum, and are not generally well-known. So
there is no mandatory set of tags for which all Android devices with NFC
must support {@link NdefFormatable}.

<p class=\"note\"><strong>Note:</strong> Methods that perform I/O operations
require the {@link android.Manifest.permission#NFC} permission."
      classrelation 1423799 // <generalisation>
	relation 1423799 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1423799 // <generalisation>
	  b parent class_ref 534455 // BasicTagTechnology
      end

      classrelation 1423927 // TAG (<unidirectional association>)
	relation 1423927 --->
	  a role_name "TAG" init_value " \"NFC\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1423927 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 3678263 "get"
	class_operation public return_type class_ref 535223 // NdefFormatable
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of {@link NdefFormatable} for the given tag.
<p>Does not cause any RF activity and does not block.
<p>Returns null if {@link NdefFormatable} was not enumerated in {@link Tag#getTechList}.
This indicates the tag is not NDEF formatable by this Android device.

@param tag an NDEF formatable tag
@return NDEF formatable object"
      end

      operation 3678391 "NdefFormatable"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal constructor, to be used by NfcAdapter
@hide"
      end

      operation 3678519 "format"
	public explicit_return_type "void"
	nparams 1
	  param inout name "firstMessage" type class_ref 530487 // NdefMessage
	nexceptions 2
	  explicit_exception "IOException"
	  exception class_ref 530743 // FormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Format a tag as NDEF, and write a {@link NdefMessage}.

<p>This is a multi-step process, an IOException is thrown
if any one step fails.
<p>The card is left in a read-write state after this operation.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param firstMessage the NDEF message to write after formatting, can be null
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled
@throws FormatException if the NDEF Message to write is malformed"
      end

      operation 3678647 "formatReadOnly"
	public explicit_return_type "void"
	nparams 1
	  param inout name "firstMessage" type class_ref 530487 // NdefMessage
	nexceptions 2
	  explicit_exception "IOException"
	  exception class_ref 530743 // FormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Formats a tag as NDEF, write a {@link NdefMessage}, and make read-only.

<p>This is a multi-step process, an IOException is thrown
if any one step fails.
<p>The card is left in a read-only state if this method returns successfully.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param firstMessage the NDEF message to write after formatting
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or the operation is canceled
@throws FormatException if the NDEF Message to write is malformed"
      end

      operation 3678775 "format"
	package explicit_return_type "void"
	nparams 2
	  param inout name "firstMessage" type class_ref 530487 // NdefMessage
	  param inout name "makeReadOnly" explicit_type "boolean"
	nexceptions 2
	  explicit_exception "IOException"
	  exception class_ref 530743 // FormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "package"
      end
    end

    class 535351 "NfcA"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides access to NFC-A (ISO 14443-3A) properties and I/O operations on a {@link Tag}.

<p>Acquire a {@link NfcA} object using {@link #get}.
<p>The primary NFC-A I/O operation is {@link #transceive}. Applications must
implement their own protocol stack on top of {@link #transceive}.

<p class=\"note\"><strong>Note:</strong> Methods that perform I/O operations
require the {@link android.Manifest.permission#NFC} permission."
      classrelation 1424055 // <generalisation>
	relation 1424055 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1424055 // <generalisation>
	  b parent class_ref 534455 // BasicTagTechnology
      end

      classrelation 1424183 // TAG (<unidirectional association>)
	relation 1424183 --->
	  a role_name "TAG" init_value " \"NFC\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1424183 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1424311 // EXTRA_SAK (<unidirectional association>)
	relation 1424311 --->
	  a role_name "EXTRA_SAK" init_value " \"sak\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1424311 // EXTRA_SAK (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1424439 // EXTRA_ATQA (<unidirectional association>)
	relation 1424439 --->
	  a role_name "EXTRA_ATQA" init_value " \"atqa\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1424439 // EXTRA_ATQA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1576247 "mSak"
	private explicit_type "short"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1576375 "mAtqa"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3678903 "get"
	class_operation public return_type class_ref 535351 // NfcA
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of {@link NfcA} for the given tag.
<p>Returns null if {@link NfcA} was not enumerated in {@link Tag#getTechList}.
This indicates the tag does not support NFC-A.
<p>Does not cause any RF activity and does not block.

@param tag an NFC-A compatible tag
@return NFC-A object"
      end

      operation 3679031 "NfcA"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3679159 "getAtqa"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the ATQA/SENS_RES bytes from tag discovery.

<p>Does not cause any RF activity and does not block.

@return ATQA/SENS_RES bytes"
      end

      operation 3679287 "getSak"
	public explicit_return_type "short"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the SAK/SEL_RES bytes from tag discovery.

<p>Does not cause any RF activity and does not block.

@return SAK bytes"
      end

      operation 3679415 "transceive"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "data" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send raw NFC-A commands to the tag and receive the response.

<p>Applications must not append the EoD (CRC) to the payload,
it will be automatically calculated.
<p>Applications must only send commands that are complete bytes,
for example a SENS_REQ is not possible (these are used to
manage tag polling and initialization).

<p>Use {@link #getMaxTransceiveLength} to retrieve the maximum number of bytes
that can be sent with {@link #transceive}.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param data bytes to send
@return bytes received in response
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or this operation is canceled"
      end

      operation 3679543 "getMaxTransceiveLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the maximum number of bytes that can be sent with {@link #transceive}.
@return the maximum number of bytes that can be sent with {@link #transceive}."
      end

      operation 3679671 "setTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the {@link #transceive} timeout in milliseconds.

<p>The timeout only applies to {@link #transceive} on this object,
and is reset to a default value when {@link #close} is called.

<p>Setting a longer timeout may be useful when performing
transactions that require a long processing time on the tag
such as key generation.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param timeout timeout value in milliseconds"
      end

      operation 3679799 "getTimeout"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current {@link #transceive} timeout in milliseconds.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@return timeout value in milliseconds"
      end
    end

    class 535479 "NfcB"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides access to NFC-B (ISO 14443-3B) properties and I/O operations on a {@link Tag}.

<p>Acquire a {@link NfcB} object using {@link #get}.
<p>The primary NFC-B I/O operation is {@link #transceive}. Applications must
implement their own protocol stack on top of {@link #transceive}.

<p class=\"note\"><strong>Note:</strong> Methods that perform I/O operations
require the {@link android.Manifest.permission#NFC} permission."
      classrelation 1424567 // <generalisation>
	relation 1424567 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1424567 // <generalisation>
	  b parent class_ref 534455 // BasicTagTechnology
      end

      classrelation 1424695 // EXTRA_APPDATA (<unidirectional association>)
	relation 1424695 --->
	  a role_name "EXTRA_APPDATA" init_value " \"appdata\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1424695 // EXTRA_APPDATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1424823 // EXTRA_PROTINFO (<unidirectional association>)
	relation 1424823 --->
	  a role_name "EXTRA_PROTINFO" init_value " \"protinfo\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1424823 // EXTRA_PROTINFO (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1576503 "mAppData"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1576631 "mProtInfo"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3679927 "get"
	class_operation public return_type class_ref 535479 // NfcB
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of {@link NfcB} for the given tag.
<p>Returns null if {@link NfcB} was not enumerated in {@link Tag#getTechList}.
This indicates the tag does not support NFC-B.
<p>Does not cause any RF activity and does not block.

@param tag an NFC-B compatible tag
@return NFC-B object"
      end

      operation 3680055 "NfcB"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3680183 "getApplicationData"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Application Data bytes from ATQB/SENSB_RES at tag discovery.

<p>Does not cause any RF activity and does not block.

@return Application Data bytes from ATQB/SENSB_RES bytes"
      end

      operation 3680311 "getProtocolInfo"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Protocol Info bytes from ATQB/SENSB_RES at tag discovery.

<p>Does not cause any RF activity and does not block.

@return Protocol Info bytes from ATQB/SENSB_RES bytes"
      end

      operation 3680439 "transceive"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "data" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send raw NFC-B commands to the tag and receive the response.

<p>Applications must not append the EoD (CRC) to the payload,
it will be automatically calculated.
<p>Applications must not send commands that manage the polling
loop and initialization (SENSB_REQ, SLOT_MARKER etc).

<p>Use {@link #getMaxTransceiveLength} to retrieve the maximum number of bytes
that can be sent with {@link #transceive}.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param data bytes to send
@return bytes received in response
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or this operation is canceled"
      end

      operation 3680567 "getMaxTransceiveLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the maximum number of bytes that can be sent with {@link #transceive}.
@return the maximum number of bytes that can be sent with {@link #transceive}."
      end
    end

    class 535607 "NfcBarcode"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides access to tags containing just a barcode.

<p>Acquire an {@link NfcBarcode} object using {@link #get}.
"
      classrelation 1424951 // <generalisation>
	relation 1424951 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1424951 // <generalisation>
	  b parent class_ref 534455 // BasicTagTechnology
      end

      attribute 1576759 "TYPE_KOVIO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Kovio Tags "
      end

      attribute 1576887 "TYPE_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1425079 // EXTRA_BARCODE_TYPE (<unidirectional association>)
	relation 1425079 --->
	  a role_name "EXTRA_BARCODE_TYPE" init_value " \"barcodetype\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1425079 // EXTRA_BARCODE_TYPE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1577015 "mType"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3680695 "get"
	class_operation public return_type class_ref 535607 // NfcBarcode
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of {@link NfcBarcode} for the given tag.

<p>Returns null if {@link NfcBarcode} was not enumerated in {@link Tag#getTechList}.

<p>Does not cause any RF activity and does not block.

@param tag an NfcBarcode compatible tag
@return NfcBarcode object"
      end

      operation 3680823 "NfcBarcode"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal constructor, to be used by NfcAdapter
@hide"
      end

      operation 3680951 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the NFC Barcode tag type.

<p>Currently only one of {@link #TYPE_KOVIO} or {@link #TYPE_UNKNOWN}.

<p>Does not cause any RF activity and does not block.

@return the NFC Barcode tag type"
      end

      operation 3681079 "getBarcode"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the barcode of an NfcBarcode tag.

<p> Tags of {@link #TYPE_KOVIO} return 16 bytes:
    <ul>
    <p> The first byte is 0x80 ORd with a manufacturer ID, corresponding
      to ISO/IEC 7816-6.
    <p> The second byte describes the payload data format. Defined data
      format types include the following:<ul>
      <li>0x00: Reserved for manufacturer assignment</li>
      <li>0x01: 96-bit URL with \"http://www.\" prefix</li>
      <li>0x02: 96-bit URL with \"https://www.\" prefix</li>
      <li>0x03: 96-bit URL with \"http://\" prefix</li>
      <li>0x04: 96-bit URL with \"https://\" prefix</li>
      <li>0x05: 96-bit GS1 EPC</li>
      <li>0x06-0xFF: reserved</li>
      </ul>
    <p>The following 12 bytes are payload:<ul>
      <li> In case of a URL payload, the payload is encoded in US-ASCII,
           following the limitations defined in RFC3987.
           {@see <a href=\"http://www.ietf.org/rfc/rfc3987.txt\">RFC 3987</a>}</li>
      <li> In case of GS1 EPC data, see <a href=\"http://www.gs1.org/gsmp/kc/epcglobal/tds/\">
           GS1 Electronic Product Code (EPC) Tag Data Standard (TDS)</a> for more details.
      </li>
    </ul>
    <p>The last 2 bytes comprise the CRC.
    </ul>
<p>Does not cause any RF activity and does not block.

@return a byte array containing the barcode
@see <a href=\"http://www.thinfilm.no/docs/thinfilm-nfc-barcode-datasheet.pdf\">
     Thinfilm NFC Barcode tag specification (previously Kovio NFC Barcode)</a>
@see <a href=\"http://www.thinfilm.no/docs/thinfilm-nfc-barcode-data-format.pdf\">
     Thinfilm NFC Barcode data format (previously Kovio NFC Barcode)</a>"
      end
    end

    class 535735 "NfcF"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides access to NFC-F (JIS 6319-4) properties and I/O operations on a {@link Tag}.

<p>Acquire a {@link NfcF} object using {@link #get}.
<p>The primary NFC-F I/O operation is {@link #transceive}. Applications must
implement their own protocol stack on top of {@link #transceive}.

<p class=\"note\"><strong>Note:</strong> Methods that perform I/O operations
require the {@link android.Manifest.permission#NFC} permission."
      classrelation 1425207 // <generalisation>
	relation 1425207 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1425207 // <generalisation>
	  b parent class_ref 534455 // BasicTagTechnology
      end

      classrelation 1425335 // TAG (<unidirectional association>)
	relation 1425335 --->
	  a role_name "TAG" init_value " \"NFC\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1425335 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1425463 // EXTRA_SC (<unidirectional association>)
	relation 1425463 --->
	  a role_name "EXTRA_SC" init_value " \"systemcode\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1425463 // EXTRA_SC (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1425591 // EXTRA_PMM (<unidirectional association>)
	relation 1425591 --->
	  a role_name "EXTRA_PMM" init_value " \"pmm\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1425591 // EXTRA_PMM (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1577143 "mSystemCode"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1577271 "mManufacturer"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3681207 "get"
	class_operation public return_type class_ref 535735 // NfcF
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of {@link NfcF} for the given tag.
<p>Returns null if {@link NfcF} was not enumerated in {@link Tag#getTechList}.
This indicates the tag does not support NFC-F.
<p>Does not cause any RF activity and does not block.

@param tag an NFC-F compatible tag
@return NFC-F object"
      end

      operation 3681335 "NfcF"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3681463 "getSystemCode"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the System Code bytes from tag discovery.

<p>Does not cause any RF activity and does not block.

@return System Code bytes"
      end

      operation 3681591 "getManufacturer"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Manufacturer bytes from tag discovery.

<p>Does not cause any RF activity and does not block.

@return Manufacturer bytes"
      end

      operation 3681719 "transceive"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "data" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send raw NFC-F commands to the tag and receive the response.

<p>Applications must not prefix the SoD (preamble and sync code)
and/or append the EoD (CRC) to the payload, it will be automatically calculated.

<p>A typical NFC-F frame for this method looks like:
<pre>
LENGTH (1 byte) --- CMD (1 byte) -- IDm (8 bytes) -- PARAMS (LENGTH - 10 bytes)
</pre>

<p>Use {@link #getMaxTransceiveLength} to retrieve the maximum amount of bytes
that can be sent with {@link #transceive}.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param data bytes to send
@return bytes received in response
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or this operation is canceled"
      end

      operation 3681847 "getMaxTransceiveLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the maximum number of bytes that can be sent with {@link #transceive}.
@return the maximum number of bytes that can be sent with {@link #transceive}."
      end

      operation 3681975 "setTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the {@link #transceive} timeout in milliseconds.

<p>The timeout only applies to {@link #transceive} on this object,
and is reset to a default value when {@link #close} is called.

<p>Setting a longer timeout may be useful when performing
transactions that require a long processing time on the tag
such as key generation.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param timeout timeout value in milliseconds"
      end

      operation 3682103 "getTimeout"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current {@link #transceive} timeout in milliseconds.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@return timeout value in milliseconds"
      end
    end

    class 535863 "NfcV"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides access to NFC-V (ISO 15693) properties and I/O operations on a {@link Tag}.

<p>Acquire a {@link NfcV} object using {@link #get}.
<p>The primary NFC-V I/O operation is {@link #transceive}. Applications must
implement their own protocol stack on top of {@link #transceive}.

<p class=\"note\"><strong>Note:</strong> Methods that perform I/O operations
require the {@link android.Manifest.permission#NFC} permission."
      classrelation 1425719 // <generalisation>
	relation 1425719 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1425719 // <generalisation>
	  b parent class_ref 534455 // BasicTagTechnology
      end

      classrelation 1425847 // EXTRA_RESP_FLAGS (<unidirectional association>)
	relation 1425847 --->
	  a role_name "EXTRA_RESP_FLAGS" init_value " \"respflags\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1425847 // EXTRA_RESP_FLAGS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1425975 // EXTRA_DSFID (<unidirectional association>)
	relation 1425975 --->
	  a role_name "EXTRA_DSFID" init_value " \"dsfid\"" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1425975 // EXTRA_DSFID (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1577399 "mRespFlags"
	private explicit_type "byte"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1577527 "mDsfId"
	private explicit_type "byte"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3682231 "get"
	class_operation public return_type class_ref 535863 // NfcV
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an instance of {@link NfcV} for the given tag.
<p>Returns null if {@link NfcV} was not enumerated in {@link Tag#getTechList}.
This indicates the tag does not support NFC-V.
<p>Does not cause any RF activity and does not block.

@param tag an NFC-V compatible tag
@return NFC-V object"
      end

      operation 3682359 "NfcV"
	public explicit_return_type ""
	nparams 1
	  param inout name "tag" type class_ref 532151 // Tag
	nexceptions 1
	  exception class_ref 159031 // RemoteException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3682487 "getResponseFlags"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Response Flag bytes from tag discovery.

<p>Does not cause any RF activity and does not block.

@return Response Flag bytes"
      end

      operation 3682615 "getDsfId"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the DSF ID bytes from tag discovery.

<p>Does not cause any RF activity and does not block.

@return DSF ID bytes"
      end

      operation 3682743 "transceive"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "data" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send raw NFC-V commands to the tag and receive the response.

<p>Applications must not append the CRC to the payload,
it will be automatically calculated. The application does
provide FLAGS, CMD and PARAMETER bytes.

<p>Use {@link #getMaxTransceiveLength} to retrieve the maximum amount of bytes
that can be sent with {@link #transceive}.

<p>This is an I/O operation and will block until complete. It must
not be called from the main application thread. A blocked call will be canceled with
{@link IOException} if {@link #close} is called from another thread.

<p class=\"note\">Requires the {@link android.Manifest.permission#NFC} permission.

@param data bytes to send
@return bytes received in response
@throws TagLostException if the tag leaves the field
@throws IOException if there is an I/O failure, or this operation is canceled"
      end

      operation 3682871 "getMaxTransceiveLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the maximum number of bytes that can be sent with {@link #transceive}.
@return the maximum number of bytes that can be sent with {@link #transceive}."
      end
    end
  end

  deploymentview 153655 "tech"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 338999 "TagTechnology"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.Tag;
import java.io.Closeable;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 534583 // TagTechnology
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 339127 "BasicTagTechnology"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.ErrorCodes;
import android.nfc.Tag;
import android.nfc.TransceiveResult;
import android.os.RemoteException;
import android.util.Log;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 534455 // BasicTagTechnology
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 339255 "IsoDep"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.ErrorCodes;
import android.nfc.Tag;
import android.os.Bundle;
import android.os.RemoteException;
import android.util.Log;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 534711 // IsoDep
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 339383 "MifareClassic"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.ErrorCodes;
import android.nfc.Tag;
import android.nfc.TagLostException;
import android.os.RemoteException;
import android.util.Log;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
${definition}"
      associated_classes
	class_ref 534839 // MifareClassic
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 339511 "MifareUltralight"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.ErrorCodes;
import android.nfc.Tag;
import android.nfc.TagLostException;
import android.os.Bundle;
import android.os.RemoteException;
import android.util.Log;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 534967 // MifareUltralight
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 339639 "Ndef"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.ErrorCodes;
import android.nfc.FormatException;
import android.nfc.INfcTag;
import android.nfc.NdefMessage;
import android.nfc.Tag;
import android.nfc.TagLostException;
import android.os.Bundle;
import android.os.RemoteException;
import android.util.Log;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 535095 // Ndef
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 339767 "NdefFormatable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.ErrorCodes;
import android.nfc.FormatException;
import android.nfc.INfcTag;
import android.nfc.NdefMessage;
import android.nfc.Tag;
import android.nfc.TagLostException;
import android.os.RemoteException;
import android.util.Log;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 535223 // NdefFormatable
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 339895 "NfcA"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.ErrorCodes;
import android.nfc.Tag;
import android.os.Bundle;
import android.os.RemoteException;
import android.util.Log;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 535351 // NfcA
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 340023 "NfcB"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.Tag;
import android.os.Bundle;
import android.os.RemoteException;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 535479 // NfcB
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 340151 "NfcBarcode"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.Tag;
import android.os.Bundle;
import android.os.RemoteException;
${definition}"
      associated_classes
	class_ref 535607 // NfcBarcode
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 340279 "NfcF"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.ErrorCodes;
import android.nfc.Tag;
import android.os.Bundle;
import android.os.RemoteException;
import android.util.Log;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 535735 // NfcF
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 340407 "NfcV"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.nfc.Tag;
import android.os.Bundle;
import android.os.RemoteException;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 535863 // NfcV
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
