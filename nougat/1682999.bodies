class RemoteConnectionManager
!!!34394679.java!!!	RemoteConnectionManager(inout ourConnectionServiceImpl : ConnectionService)
        mOurConnectionServiceImpl = ourConnectionServiceImpl;
!!!34394807.java!!!	addConnectionService(inout componentName : ComponentName, inout outgoingConnectionServiceRpc : IConnectionService) : void
        if (!mRemoteConnectionServices.containsKey(componentName)) {
            try {
                RemoteConnectionService remoteConnectionService = new RemoteConnectionService(
                        outgoingConnectionServiceRpc,
                        mOurConnectionServiceImpl);
                mRemoteConnectionServices.put(componentName, remoteConnectionService);
            } catch (RemoteException ignored) {
            }
        }
!!!34394935.java!!!	createRemoteConnection(inout connectionManagerPhoneAccount : PhoneAccountHandle, inout request : ConnectionRequest, inout isIncoming : boolean) : RemoteConnection
        PhoneAccountHandle accountHandle = request.getAccountHandle();
        if (accountHandle == null) {
            throw new IllegalArgumentException("accountHandle must be specified.");
        }

        ComponentName componentName = request.getAccountHandle().getComponentName();
        if (!mRemoteConnectionServices.containsKey(componentName)) {
            throw new UnsupportedOperationException("accountHandle not supported: "
                    + componentName);
        }

        RemoteConnectionService remoteService = mRemoteConnectionServices.get(componentName);
        if (remoteService != null) {
            return remoteService.createRemoteConnection(
                    connectionManagerPhoneAccount, request, isIncoming);
        }
        return null;
!!!34395063.java!!!	conferenceRemoteConnections(inout a : RemoteConnection, inout b : RemoteConnection) : void
        if (a.getConnectionService() == b.getConnectionService()) {
            try {
                a.getConnectionService().conference(a.getId(), b.getId());
            } catch (RemoteException e) {
            }
        } else {
            Log.w(this, "Request to conference incompatible remote connections (%s,%s) (%s,%s)",
                    a.getConnectionService(), a.getId(),
                    b.getConnectionService(), b.getId());
        }
