class CarrierConfigManager
!!!34414903.java!!!	getConfigForSubId(in subId : int) : PersistableBundle
        try {
            ICarrierConfigLoader loader = getICarrierConfigLoader();
            if (loader == null) {
                Rlog.w(TAG, "Error getting config for subId " + subId
                        + " ICarrierConfigLoader is null");
                return null;
            }
            return loader.getConfigForSubId(subId);
        } catch (RemoteException ex) {
            Rlog.e(TAG, "Error getting config for subId " + subId + ": "
                    + ex.toString());
        }
        return null;
!!!34415031.java!!!	getConfig() : PersistableBundle
        return getConfigForSubId(SubscriptionManager.getDefaultSubscriptionId());
!!!34415159.java!!!	notifyConfigChangedForSubId(in subId : int) : void
        try {
            ICarrierConfigLoader loader = getICarrierConfigLoader();
            if (loader == null) {
                Rlog.w(TAG, "Error reloading config for subId=" + subId
                        + " ICarrierConfigLoader is null");
                return;
            }
            loader.notifyConfigChangedForSubId(subId);
        } catch (RemoteException ex) {
            Rlog.e(TAG, "Error reloading config for subId=" + subId + ": " + ex.toString());
        }
!!!34415287.java!!!	updateConfigForPhoneId(in phoneId : int, inout simState : String) : void
        try {
            ICarrierConfigLoader loader = getICarrierConfigLoader();
            if (loader == null) {
                Rlog.w(TAG, "Error updating config for phoneId=" + phoneId
                        + " ICarrierConfigLoader is null");
                return;
            }
            loader.updateConfigForPhoneId(phoneId, simState);
        } catch (RemoteException ex) {
            Rlog.e(TAG, "Error updating config for phoneId=" + phoneId + ": " + ex.toString());
        }
!!!34415415.java!!!	getDefaultConfig() : PersistableBundle
        return new PersistableBundle(sDefaults);
!!!34415543.java!!!	getICarrierConfigLoader() : ICarrierConfigLoader
        return ICarrierConfigLoader.Stub
                .asInterface(ServiceManager.getService(Context.CARRIER_CONFIG_SERVICE));
