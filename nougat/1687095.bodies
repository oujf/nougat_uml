class CellIdentityGsm
!!!34417719.java!!!	CellIdentityGsm()
        mMcc = Integer.MAX_VALUE;
        mMnc = Integer.MAX_VALUE;
        mLac = Integer.MAX_VALUE;
        mCid = Integer.MAX_VALUE;
        mArfcn = Integer.MAX_VALUE;
        mBsic = Integer.MAX_VALUE;
!!!34417847.java!!!	CellIdentityGsm(in mcc : int, in mnc : int, in lac : int, in cid : int)
        this(mcc, mnc, lac, cid, Integer.MAX_VALUE, Integer.MAX_VALUE);
!!!34417975.java!!!	CellIdentityGsm(in mcc : int, in mnc : int, in lac : int, in cid : int, in arfcn : int, in bsic : int)
        mMcc = mcc;
        mMnc = mnc;
        mLac = lac;
        mCid = cid;
        mArfcn = arfcn;
        mBsic = bsic;
!!!34418103.java!!!	CellIdentityGsm(inout cid : CellIdentityGsm)
        mMcc = cid.mMcc;
        mMnc = cid.mMnc;
        mLac = cid.mLac;
        mCid = cid.mCid;
        mArfcn = cid.mArfcn;
        mBsic = cid.mBsic;
!!!34418231.java!!!	copy() : CellIdentityGsm
       return new CellIdentityGsm(this);
!!!34418359.java!!!	getMcc() : int
        return mMcc;
!!!34418487.java!!!	getMnc() : int
        return mMnc;
!!!34418615.java!!!	getLac() : int
        return mLac;
!!!34418743.java!!!	getCid() : int
        return mCid;
!!!34418871.java!!!	getArfcn() : int
        return mArfcn;
!!!34418999.java!!!	getBsic() : int
        return mBsic;
!!!34419127.java!!!	getPsc() : int
        return Integer.MAX_VALUE;
!!!34419255.java!!!	hashCode() : int
        return Objects.hash(mMcc, mMnc, mLac, mCid);
!!!34419383.java!!!	equals(inout other : Object) : boolean
        if (this == other) {
            return true;
        }

        if (!(other instanceof CellIdentityGsm)) {
            return false;
        }

        CellIdentityGsm o = (CellIdentityGsm) other;
        return mMcc == o.mMcc &&
                mMnc == o.mMnc &&
                mLac == o.mLac &&
                mCid == o.mCid &&
                mArfcn == o.mArfcn &&
                mBsic == o.mBsic;
!!!34419511.java!!!	toString() : String
        StringBuilder sb = new StringBuilder("CellIdentityGsm:{");
        sb.append(" mMcc=").append(mMcc);
        sb.append(" mMnc=").append(mMnc);
        sb.append(" mLac=").append(mLac);
        sb.append(" mCid=").append(mCid);
        sb.append(" mArfcn=").append(mArfcn);
        sb.append(" mBsic=").append("0x").append(Integer.toHexString(mBsic));
        sb.append("}");

        return sb.toString();
!!!34419639.java!!!	describeContents() : int
        return 0;
!!!34419767.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        if (DBG) log("writeToParcel(Parcel, int): " + toString());
        dest.writeInt(mMcc);
        dest.writeInt(mMnc);
        dest.writeInt(mLac);
        dest.writeInt(mCid);
        dest.writeInt(mArfcn);
        dest.writeInt(mBsic);
!!!34419895.java!!!	CellIdentityGsm(inout in : Parcel)
        mMcc = in.readInt();
        mMnc = in.readInt();
        mLac = in.readInt();
        mCid = in.readInt();
        mArfcn = in.readInt();
        int bsic = in.readInt();
        // In RIL BSIC is a UINT8, so 0xFF is the 'INVALID' designator
        // for inbound parcels
        if (bsic == 0xFF) bsic = Integer.MAX_VALUE;
        mBsic = bsic;

        if (DBG) log("CellIdentityGsm(Parcel): " + toString());
!!!34420023.java!!!	log(inout s : String) : void
        Rlog.w(LOG_TAG, s);
