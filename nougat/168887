format 76
"printservice" // nougat_src::frameworks::base::core::java::android::printservice
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/core/java/android/printservice/"
  java_package "android.printservice"
  classview 163767 "printservice"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 570679 "PrintServiceInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class describes a {@link PrintService}. A print service knows
how to communicate with one or more printers over one or more protocols
and exposes printers for use by the applications via the platform print
APIs.

@see PrintService
@see android.print.PrintManager

@hide"
      classrelation 1563959 // <realization>
	relation 1563959 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1563959 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 1564087 // LOG_TAG (<unidirectional association>)
	relation 1564087 --->
	  a role_name "LOG_TAG" init_value " PrintServiceInfo.class.getSimpleName()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1564087 // LOG_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1564215 // TAG_PRINT_SERVICE (<unidirectional association>)
	relation 1564215 --->
	  a role_name "TAG_PRINT_SERVICE" init_value " \"print-service\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1564215 // TAG_PRINT_SERVICE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1564343 // mId (<unidirectional association>)
	relation 1564343 --->
	  a role_name "mId" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1564343 // mId (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1776695 "mIsEnabled"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1564471 // mResolveInfo (<unidirectional association>)
	relation 1564471 --->
	  a role_name "mResolveInfo" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1564471 // mResolveInfo (<unidirectional association>)
	  b parent class_ref 306231 // ResolveInfo
      end

      classrelation 1564599 // mSettingsActivityName (<unidirectional association>)
	relation 1564599 --->
	  a role_name "mSettingsActivityName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1564599 // mSettingsActivityName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1564727 // mAddPrintersActivityName (<unidirectional association>)
	relation 1564727 --->
	  a role_name "mAddPrintersActivityName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1564727 // mAddPrintersActivityName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1564855 // mAdvancedPrintOptionsActivityName (<unidirectional association>)
	relation 1564855 --->
	  a role_name "mAdvancedPrintOptionsActivityName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1564855 // mAdvancedPrintOptionsActivityName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 4168503 "PrintServiceInfo"
	public explicit_return_type ""
	nparams 1
	  param inout name "parcel" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance.

@hide"
      end

      operation 4168631 "PrintServiceInfo"
	public explicit_return_type ""
	nparams 4
	  param inout name "resolveInfo" type class_ref 306231 // ResolveInfo
	  param inout name "settingsActivityName" type class_ref 129591 // String
	  param inout name "addPrintersActivityName" type class_ref 129591 // String
	  param inout name "advancedPrintOptionsActivityName" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance.

@param resolveInfo The service resolve info.
@param settingsActivityName Optional settings activity name.
@param addPrintersActivityName Optional add printers activity name.
@param advancedPrintOptionsActivityName Optional advanced print options activity."
      end

      operation 4168759 "getComponentName"
	public return_type class_ref 132279 // ComponentName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Return the component name for this print service.

@return The component name for this print service."
      end

      operation 4168887 "create"
	class_operation public return_type class_ref 570679 // PrintServiceInfo
	nparams 2
	  param inout name "resolveInfo" type class_ref 306231 // ResolveInfo
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance.

@param resolveInfo The service resolve info.
@param context Context for accessing resources.
@return The created instance."
      end

      operation 4169015 "getId"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The accessibility service id.
<p>
<strong>Generated by the system.</strong>
</p>

@return The id."
      end

      operation 4169143 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the service was enabled when it was read from the system.

@return The id."
      end

      operation 4169271 "setIsEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isEnabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark a service as enabled or not

@param isEnabled If the service should be marked as enabled."
      end

      operation 4169399 "getResolveInfo"
	public return_type class_ref 306231 // ResolveInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The service {@link ResolveInfo}.

@return The info."
      end

      operation 4169527 "getSettingsActivityName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The settings activity name.
<p>
<strong>Statically set from
{@link PrintService#SERVICE_META_DATA meta-data}.</strong>
</p>

@return The settings activity name."
      end

      operation 4169655 "getAddPrintersActivityName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The add printers activity name.
<p>
<strong>Statically set from
{@link PrintService#SERVICE_META_DATA meta-data}.</strong>
</p>

@return The add printers activity name."
      end

      operation 4169783 "getAdvancedOptionsActivityName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The advanced print options activity name.
<p>
<strong>Statically set from
{@link PrintService#SERVICE_META_DATA meta-data}.</strong>
</p>

@return The advanced print options activity name."
      end

      operation 4169911 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 4170039 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 137527 // Parcel
	  param in name "flagz" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4170167 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4170295 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4170423 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 1564983 // CREATOR (<unidirectional association>)
	relation 1564983 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<PrintServiceInfo>() {
        @Override
        public PrintServiceInfo createFromParcel(Parcel parcel) {
            return new PrintServiceInfo(parcel);
        }

        @Override
        public PrintServiceInfo[] newArray(int size) {
            return new PrintServiceInfo[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PrintServiceInfo> ${name}${value};
"
	    classrelation_ref 1564983 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end

    class 574903 "CustomPrinterIconCallback"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Callback for {@link PrinterDiscoverySession#onRequestCustomPrinterIcon}."
      classrelation 1561015 // mPrinterId (<unidirectional association>)
	relation 1561015 --->
	  a role_name "mPrinterId" const_relation private
	    comment " The printer the call back is for 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@NonNull
"
	    classrelation_ref 1561015 // mPrinterId (<unidirectional association>)
	  b parent class_ref 568119 // PrinterId
      end

      attribute 1773879 "mObserver"
	const_attribute private explicit_type "IPrintServiceClient"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@NonNull
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1561143 // LOG_TAG (<unidirectional association>)
	relation 1561143 --->
	  a role_name "LOG_TAG" init_value " \"CustomPrinterIconCB\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1561143 // LOG_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 4159799 "CustomPrinterIconCallback"
	package explicit_return_type ""
	nparams 2
	  param inout name "printerId" type class_ref 568119 // PrinterId
	  param inout name "observer" explicit_type "IPrintServiceClient"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a callback class to be used once a icon is loaded

@param printerId The printer the icon should be loaded for
@param observer The observer that needs to be notified about the update."
      end

      operation 4159927 "onCustomPrinterIconLoaded"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "icon" type class_ref 367031 // Icon
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provide a new icon for a printer. Can be called more than once to update the icon.

@param icon The new icon for the printer or null to unset the current icon
@return true iff the icon could be updated"
      end
    end

    class 575031 "PrintDocument"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a printed document from the perspective of a print
service. It exposes APIs to query the document and obtain its data.
<p>
<strong>Note: </strong> All methods of this class must be executed on the
main application thread.
</p>"
      classrelation 1561271 // LOG_TAG (<unidirectional association>)
	relation 1561271 --->
	  a role_name "LOG_TAG" init_value " \"PrintDocument\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1561271 // LOG_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1561399 // mPrintJobId (<unidirectional association>)
	relation 1561399 --->
	  a role_name "mPrintJobId" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1561399 // mPrintJobId (<unidirectional association>)
	  b parent class_ref 569911 // PrintJobId
      end

      attribute 1774007 "mPrintServiceClient"
	const_attribute private explicit_type "IPrintServiceClient"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1561527 // mInfo (<unidirectional association>)
	relation 1561527 --->
	  a role_name "mInfo" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1561527 // mInfo (<unidirectional association>)
	  b parent class_ref 567479 // PrintDocumentInfo
      end

      operation 4160055 "PrintDocument"
	package explicit_return_type ""
	nparams 3
	  param inout name "printJobId" type class_ref 569911 // PrintJobId
	  param inout name "printServiceClient" explicit_type "IPrintServiceClient"
	  param inout name "info" type class_ref 567479 // PrintDocumentInfo
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4160183 "getInfo"
	public return_type class_ref 567479 // PrintDocumentInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Gets the {@link PrintDocumentInfo} that describes this document.

@return The document info."
      end

      operation 4160311 "getData"
	public return_type class_ref 264887 // ParcelFileDescriptor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Gets the data associated with this document.
<p>
<strong>Note: </strong> It is a responsibility of the client to open a
stream to the returned file descriptor, fully read the data, and close
the file descriptor.
</p>

@return A file descriptor for reading the data."
      end
    end

    class 575159 "PrinterDiscoverySession"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class encapsulates the interaction between a print service and the
system during printer discovery. During printer discovery you are responsible
for adding discovered printers, removing previously added printers that
disappeared, and updating already added printers.
<p>
During the lifetime of this session you may be asked to start and stop
performing printer discovery multiple times. You will receive a call to {@link
PrinterDiscoverySession#onStartPrinterDiscovery(List)} to start printer
discovery and a call to {@link PrinterDiscoverySession#onStopPrinterDiscovery()}
to stop printer discovery. When the system is no longer interested in printers
discovered by this session you will receive a call to {@link #onDestroy()} at
which point the system will no longer call into the session and all the session
methods will do nothing.
</p>
<p>
Discovered printers are added by invoking {@link
PrinterDiscoverySession#addPrinters(List)}. Added printers that disappeared are
removed by invoking {@link PrinterDiscoverySession#removePrinters(List)}. Added
printers whose properties or capabilities changed are updated through a call to
{@link PrinterDiscoverySession#addPrinters(List)}. The printers added in this
session can be acquired via {@link #getPrinters()} where the returned printers
will be an up-to-date snapshot of the printers that you reported during the
session. Printers are <strong>not</strong> persisted across sessions.
</p>
<p>
The system will make a call to {@link #onValidatePrinters(List)} if you
need to update some printers. It is possible that you add a printer without
specifying its capabilities. This enables you to avoid querying all discovered
printers for their capabilities, rather querying the capabilities of a printer
only if necessary. For example, the system will request that you update a printer
if it gets selected by the user. When validating printers you do not need to
provide the printers' capabilities but may do so.
</p>
<p>
If the system is interested in being constantly updated for the state of a
printer you will receive a call to {@link #onStartPrinterStateTracking(PrinterId)}
after which you will have to do a best effort to keep the system updated for
changes in the printer state and capabilities. You also <strong>must</strong>
update the printer capabilities if you did not provide them when adding it, or
the printer will be ignored. When the system is no longer interested in getting
updates for a printer you will receive a call to {@link #onStopPrinterStateTracking(
PrinterId)}.
</p>
<p>
<strong>Note: </strong> All callbacks in this class are executed on the main
application thread. You also have to invoke any method of this class on the main
application thread.
</p>"
      classrelation 1561655 // LOG_TAG (<unidirectional association>)
	relation 1561655 --->
	  a role_name "LOG_TAG" init_value " \"PrinterDiscoverySession\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1561655 // LOG_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1774135 "sIdCounter"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1774263 "mId"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1561783 // mPrinters (<unidirectional association>)
	relation 1561783 --->
	  a role_name "mPrinters" init_value "
            new ArrayMap<PrinterId, PrinterInfo>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PrinterId, PrinterInfo> ${name}${value};
"
	    classrelation_ref 1561783 // mPrinters (<unidirectional association>)
	  b parent class_ref 156343 // ArrayMap
      end

      classrelation 1561911 // mTrackedPrinters (<unidirectional association>)
	relation 1561911 --->
	  stereotype "List"
	  a role_name "mTrackedPrinters" init_value "
            new ArrayList<PrinterId>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1561911 // mTrackedPrinters (<unidirectional association>)
	  b parent class_ref 568119 // PrinterId
      end

      classrelation 1562039 // mLastSentPrinters (<unidirectional association>)
	relation 1562039 --->
	  a role_name "mLastSentPrinters" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PrinterId, PrinterInfo> ${name}${value};
"
	    classrelation_ref 1562039 // mLastSentPrinters (<unidirectional association>)
	  b parent class_ref 156343 // ArrayMap
      end

      attribute 1774391 "mObserver"
	private explicit_type "IPrintServiceClient"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1774519 "mIsDestroyed"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1774647 "mIsDiscoveryStarted"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 4160439 "PrinterDiscoverySession"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor."
      end

      operation 4160567 "setObserver"
	package explicit_return_type "void"
	nparams 1
	  param inout name "observer" explicit_type "IPrintServiceClient"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4160695 "getId"
	package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4160823 "getPrinters"
	public return_type class_ref 568503 // PrinterInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Gets the printers reported in this session. For example, if you add two
printers and remove one of them, the returned list will contain only
the printer that was added but not removed.
<p>
<strong>Note: </strong> Calls to this method after the session is
destroyed, that is after the {@link #onDestroy()} callback, will be ignored.
</p>

@return The printers.

@see #addPrinters(List)
@see #removePrinters(List)
@see #isDestroyed()"
      end

      operation 4160951 "addPrinters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "printers" explicit_type "List<PrinterInfo>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds discovered printers. Adding an already added printer updates it.
Removed printers can be added again. You can call this method multiple
times during the life of this session. Duplicates will be ignored.
<p>
<strong>Note: </strong> Calls to this method after the session is
destroyed, that is after the {@link #onDestroy()} callback, will be ignored.
</p>

@param printers The printers to add.

@see #removePrinters(List)
@see #getPrinters()
@see #isDestroyed()"
      end

      operation 4161079 "removePrinters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "printerIds" explicit_type "List<PrinterId>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes added printers. Removing an already removed or never added
printer has no effect. Removed printers can be added again. You can
call this method multiple times during the lifetime of this session.
<p>
<strong>Note: </strong> Calls to this method after the session is
destroyed, that is after the {@link #onDestroy()} callback, will be ignored.
</p>

@param printerIds The ids of the removed printers.

@see #addPrinters(List)
@see #getPrinters()
@see #isDestroyed()"
      end

      operation 4161207 "sendOutOfDiscoveryPeriodPrinterChanges"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4161335 "onStartPrinterDiscovery"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "priorityList" explicit_type "List<PrinterId>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback asking you to start printer discovery. Discovered printers should be
added via calling {@link #addPrinters(List)}. Added printers that disappeared
should be removed via calling {@link #removePrinters(List)}. Added printers
whose properties or capabilities changed should be updated via calling {@link
#addPrinters(List)}. You will receive a call to {@link #onStopPrinterDiscovery()}
when you should stop printer discovery.
<p>
During the lifetime of this session all printers that are known to your print
service have to be added. The system does not retain any printers across sessions.
However, if you were asked to start and then stop performing printer discovery
in this session, then a subsequent discovering should not re-discover already
discovered printers. You can get the printers reported during this session by
calling {@link #getPrinters()}.
</p>
<p>
<strong>Note: </strong>You are also given a list of printers whose availability
has to be checked first. For example, these printers could be the user's favorite
ones, therefore they have to be verified first. You do <strong>not need</strong>
to provide the capabilities of the printers, rather verify whether they exist
similarly to {@link #onValidatePrinters(List)}.
</p>

@param priorityList The list of printers to validate first. Never null.

@see #onStopPrinterDiscovery()
@see #addPrinters(List)
@see #removePrinters(List)
@see #isPrinterDiscoveryStarted()"
      end

      operation 4161463 "onStopPrinterDiscovery"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback notifying you that you should stop printer discovery.

@see #onStartPrinterDiscovery(List)
@see #isPrinterDiscoveryStarted()"
      end

      operation 4161591 "onValidatePrinters"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "printerIds" explicit_type "List<PrinterId>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback asking you to validate that the given printers are valid, that
is they exist. You are responsible for checking whether these printers
exist and for the ones that do exist notify the system via calling
{@link #addPrinters(List)}.
<p>
<strong>Note: </strong> You are <strong>not required</strong> to provide
the printer capabilities when updating the printers that do exist.
<p>

@param printerIds The printers to validate.

@see android.print.PrinterInfo.Builder#setCapabilities(PrinterCapabilitiesInfo)
     PrinterInfo.Builder.setCapabilities(PrinterCapabilitiesInfo)"
      end

      operation 4161719 "onStartPrinterStateTracking"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "printerId" type class_ref 568119 // PrinterId
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback asking you to start tracking the state of a printer. Tracking
the state means that you should do a best effort to observe the state
of this printer and notify the system if that state changes via calling
{@link #addPrinters(List)}.
<p>
<strong>Note: </strong> A printer can be initially added without its
capabilities to avoid polling printers that the user will not select.
However, after this method is called you are expected to update the
printer <strong>including</strong> its capabilities. Otherwise, the
printer will be ignored.
<p>
<p>
A scenario when you may be requested to track a printer's state is if
the user selects that printer and the system has to present print
options UI based on the printer's capabilities. In this case the user
should be promptly informed if, for example, the printer becomes
unavailable.
</p>

@param printerId The printer to start tracking.

@see #onStopPrinterStateTracking(PrinterId)
@see android.print.PrinterInfo.Builder#setCapabilities(PrinterCapabilitiesInfo)
     PrinterInfo.Builder.setCapabilities(PrinterCapabilitiesInfo)"
      end

      operation 4161847 "onRequestCustomPrinterIcon"
	public explicit_return_type "void"
	nparams 3
	  param inout name "printerId" type class_ref 568119 // PrinterId
	  param inout name "cancellationSignal" type class_ref 279095 // CancellationSignal
	  param inout name "callback" type class_ref 574903 // CustomPrinterIconCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @NonNull ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the system to request the custom icon for a printer. Once the icon is available the
print services uses {@link CustomPrinterIconCallback#onCustomPrinterIconLoaded} to send the
icon to the system.

@param printerId The printer to icon belongs to.
@param cancellationSignal Signal used to cancel the request.
@param callback Callback for returning the icon to the system.

@see android.print.PrinterInfo.Builder#setHasCustomPrinterIcon(boolean)"
      end

      operation 4161975 "onStopPrinterStateTracking"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "printerId" type class_ref 568119 // PrinterId
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback asking you to stop tracking the state of a printer. The passed
in printer id is the one for which you received a call to {@link
#onStartPrinterStateTracking(PrinterId)}.

@param printerId The printer to stop tracking.

@see #onStartPrinterStateTracking(PrinterId)"
      end

      operation 4162103 "getTrackedPrinters"
	public return_type class_ref 568119 // PrinterId
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Gets the printers that should be tracked. These are printers that are
important to the user and for which you received a call to {@link
#onStartPrinterStateTracking(PrinterId)} asking you to observer their
state and reporting it to the system via {@link #addPrinters(List)}.
You will receive a call to {@link #onStopPrinterStateTracking(PrinterId)}
if you should stop tracking a printer.
<p>
<strong>Note: </strong> Calls to this method after the session is
destroyed, that is after the {@link #onDestroy()} callback, will be ignored.
</p>

@return The printers.

@see #onStartPrinterStateTracking(PrinterId)
@see #onStopPrinterStateTracking(PrinterId)
@see #isDestroyed()"
      end

      operation 4162231 "onDestroy"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies you that the session is destroyed. After this callback is invoked
any calls to the methods of this class will be ignored, {@link #isDestroyed()}
will return true and you will also no longer receive callbacks.

@see #isDestroyed()"
      end

      operation 4162359 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether the session is destroyed.

@return Whether the session is destroyed.

@see #onDestroy()"
      end

      operation 4162487 "isPrinterDiscoveryStarted"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether printer discovery is started.

@return Whether printer discovery is destroyed.

@see #onStartPrinterDiscovery(List)
@see #onStopPrinterDiscovery()"
      end

      operation 4162615 "startPrinterDiscovery"
	package explicit_return_type "void"
	nparams 1
	  param inout name "priorityList" explicit_type "List<PrinterId>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4162743 "stopPrinterDiscovery"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4162871 "validatePrinters"
	package explicit_return_type "void"
	nparams 1
	  param inout name "printerIds" explicit_type "List<PrinterId>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4162999 "startPrinterStateTracking"
	package explicit_return_type "void"
	nparams 1
	  param inout name "printerId" type class_ref 568119 // PrinterId
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4163127 "requestCustomPrinterIcon"
	package explicit_return_type "void"
	nparams 1
	  param inout name "printerId" type class_ref 568119 // PrinterId
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request the custom icon for a printer.

@param printerId The printer to icon belongs to.
@see android.print.PrinterInfo.Builder#setHasCustomPrinterIcon()"
      end

      operation 4163255 "stopPrinterStateTracking"
	package explicit_return_type "void"
	nparams 1
	  param inout name "printerId" type class_ref 568119 // PrinterId
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4163383 "destroy"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 575287 "PrintJob"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a print job from the perspective of a print
service. It provides APIs for observing the print job state and
performing operations on the print job.
<p>
<strong>Note: </strong> All methods of this class must be invoked on
the main application thread.
</p>"
      classrelation 1562167 // LOG_TAG (<unidirectional association>)
	relation 1562167 --->
	  a role_name "LOG_TAG" init_value " \"PrintJob\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1562167 // LOG_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1774775 "mPrintServiceClient"
	const_attribute private explicit_type "IPrintServiceClient"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1562295 // mDocument (<unidirectional association>)
	relation 1562295 --->
	  a role_name "mDocument" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1562295 // mDocument (<unidirectional association>)
	  b parent class_ref 575031 // PrintDocument
      end

      classrelation 1562423 // mCachedInfo (<unidirectional association>)
	relation 1562423 --->
	  a role_name "mCachedInfo" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1562423 // mCachedInfo (<unidirectional association>)
	  b parent class_ref 569783 // PrintJobInfo
      end

      classrelation 1562551 // mContext (<unidirectional association>)
	relation 1562551 --->
	  a role_name "mContext" const_relation private
	    comment " Context that created the object 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1562551 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      operation 4163511 "PrintJob"
	package explicit_return_type ""
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "jobInfo" type class_ref 569783 // PrintJobInfo
	  param inout name "client" explicit_type "IPrintServiceClient"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @NonNull ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4163639 "getId"
	public return_type class_ref 569911 // PrintJobId
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Gets the unique print job id.

@return The id."
      end

      operation 4163767 "getInfo"
	public return_type class_ref 569783 // PrintJobInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
@NonNull
"
	
	
	
	comment "Gets the {@link PrintJobInfo} that describes this job.
<p>
<strong>Node:</strong>The returned info object is a snapshot of the
current print job state. Every call to this method returns a fresh
info object that reflects the current print job state.
</p>

@return The print job info."
      end

      operation 4163895 "getDocument"
	public return_type class_ref 575031 // PrintDocument
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
@NonNull
"
	
	
	
	comment "Gets the printed document.

@return The document."
      end

      operation 4164023 "isQueued"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Gets whether this print job is queued. Such a print job is
ready to be printed and can be started or cancelled.

@return Whether the print job is queued.

@see #start()
@see #cancel()"
      end

      operation 4164151 "isStarted"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Gets whether this print job is started. Such a print job is
being printed and can be completed or canceled or failed.

@return Whether the print job is started.

@see #complete()
@see #cancel()
@see #fail(String)"
      end

      operation 4164279 "isBlocked"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Gets whether this print job is blocked. Such a print job is halted
due to an abnormal condition and can be started or canceled or failed.

@return Whether the print job is blocked.

@see #start()
@see #cancel()
@see #fail(String)"
      end

      operation 4164407 "isCompleted"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Gets whether this print job is completed. Such a print job
is successfully printed. This is a final state.

@return Whether the print job is completed.

@see #complete()"
      end

      operation 4164535 "isFailed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Gets whether this print job is failed. Such a print job is
not successfully printed due to an error. This is a final state.

@return Whether the print job is failed.

@see #fail(String)"
      end

      operation 4164663 "isCancelled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Gets whether this print job is cancelled. Such a print job was
cancelled as a result of a user request. This is a final state.

@return Whether the print job is cancelled.

@see #cancel()"
      end

      operation 4164791 "start"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Starts the print job. You should call this method if {@link
#isQueued()} or {@link #isBlocked()} returns true and you started
resumed printing.
<p>
This resets the print status to null. Set the new status by using {@link #setStatus}.
</p>

@return Whether the job was started.

@see #isQueued()
@see #isBlocked()"
      end

      operation 4164919 "block"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "reason" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Blocks the print job. You should call this method if {@link #isStarted()} returns true and
you need to block the print job. For example, the user has to add some paper to continue
printing. To resume the print job call {@link #start()}. To change the reason call
{@link #setStatus(CharSequence)}.

@param reason The human readable, short, and translated reason why the print job is blocked.
@return Whether the job was blocked.

@see #isStarted()
@see #isBlocked()"
      end

      operation 4165047 "complete"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Completes the print job. You should call this method if {@link
#isStarted()} returns true and you are done printing.

@return Whether the job as completed.

@see #isStarted()"
      end

      operation 4165175 "fail"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "error" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Fails the print job. You should call this method if {@link
#isQueued()} or {@link #isStarted()} or {@link #isBlocked()}
returns true you failed while printing.

@param error The human readable, short, and translated reason
for the failure.
@return Whether the job was failed.

@see #isQueued()
@see #isStarted()
@see #isBlocked()"
      end

      operation 4165303 "cancel"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Cancels the print job. You should call this method if {@link
#isQueued()} or {@link #isStarted() or #isBlocked()} returns
true and you canceled the print job as a response to a call to
{@link PrintService#onRequestCancelPrintJob(PrintJob)}.

@return Whether the job is canceled.

@see #isStarted()
@see #isQueued()
@see #isBlocked()"
      end

      operation 4165431 "setProgress"
	public explicit_return_type "void"
	nparams 1
	  param in name "progress" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@FloatRange(from=0.0, to=1.0) ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Sets the progress of this print job as a fraction of 1.

@param progress The new progress"
      end

      operation 4165559 "setStatus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "status" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Sets the status of this print job. This should be a human readable, short, and translated
description of the current state of the print job.
<p />
This overrides any previously set status set via {@link #setStatus(CharSequence)},
{@link #setStatus(int)}, {@link #block(String)}, or {@link #fail(String)},

@param status The new status. If null the status will be empty."
      end

      operation 4165687 "setStatus"
	public explicit_return_type "void"
	nparams 1
	  param in name "statusResId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StringRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Sets the status of this print job as a string resource.
<p />
This overrides any previously set status set via {@link #setStatus(CharSequence)},
{@link #setStatus(int)}, {@link #block(String)}, or {@link #fail(String)},

@param statusResId The new status as a String resource. If 0 the status will be empty."
      end

      operation 4165815 "setTag"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "tag" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Sets a tag that is valid in the context of a {@link PrintService}
and is not interpreted by the system. For example, a print service
may set as a tag the key of the print job returned by a remote
print server, if the printing is off handed to a cloud based service.

@param tag The tag.
@return True if the tag was set, false otherwise."
      end

      operation 4165943 "getTag"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
@Nullable
"
	
	
	
	comment "Gets the print job tag.

@return The tag or null.

@see #setTag(String)"
      end

      operation 4166071 "getAdvancedStringOption"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Gets the value of an advanced (printer specific) print option.

@param key The option key.
@return The option value."
      end

      operation 4166199 "hasAdvancedOption"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Gets whether this job has a given advanced (printer specific) print
option.

@param key The option key.
@return Whether the option is present."
      end

      operation 4166327 "getAdvancedIntOption"
	public explicit_return_type "int"
	nparams 1
	  param inout name "key" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@MainThread
"
	
	
	
	comment "Gets the value of an advanced (printer specific) print option.

@param key The option key.
@return The option value."
      end

      operation 4166455 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4166583 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4166711 "isInImmutableState"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4166839 "setState"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "state" explicit_type "int"
	  param inout name "error" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 575415 "PrintService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This is the base class for implementing print services. A print service knows
how to discover and interact one or more printers via one or more protocols.
</p>
<h3>Printer discovery</h3>
<p>
A print service is responsible for discovering printers, adding discovered printers,
removing added printers, and updating added printers. When the system is interested
in printers managed by your service it will call {@link
#onCreatePrinterDiscoverySession()} from which you must return a new {@link
PrinterDiscoverySession} instance. The returned session encapsulates the interaction
between the system and your service during printer discovery. For description of this
interaction refer to the documentation for {@link PrinterDiscoverySession}.
</p>
<p>
For every printer discovery session all printers have to be added since system does
not retain printers across sessions. Hence, each printer known to this print service
should be added only once during a discovery session. Only an already added printer
can be removed or updated. Removed printers can be added again.
</p>
<h3>Print jobs</h3>
<p>
When a new print job targeted to a printer managed by this print service is is queued,
i.e. ready for processing by the print service, you will receive a call to {@link
#onPrintJobQueued(PrintJob)}. The print service may handle the print job immediately
or schedule that for an appropriate time in the future. The list of all active print
jobs for this service is obtained by calling {@link #getActivePrintJobs()}. Active
print jobs are ones that are queued or started.
</p>
<p>
A print service is responsible for setting a print job's state as appropriate
while processing it. Initially, a print job is queued, i.e. {@link PrintJob#isQueued()
PrintJob.isQueued()} returns true, which means that the document to be printed is
spooled by the system and the print service can begin processing it. You can obtain
the printed document by calling {@link PrintJob#getDocument() PrintJob.getDocument()}
whose data is accessed via {@link PrintDocument#getData() PrintDocument.getData()}.
After the print service starts printing the data it should set the print job's
state to started by calling {@link PrintJob#start()} after which
{@link PrintJob#isStarted() PrintJob.isStarted()} would return true. Upon successful
completion, the print job should be marked as completed by calling {@link
PrintJob#complete() PrintJob.complete()} after which {@link PrintJob#isCompleted()
PrintJob.isCompleted()} would return true. In case of a failure, the print job should
be marked as failed by calling {@link PrintJob#fail(String) PrintJob.fail(
String)} after which {@link PrintJob#isFailed() PrintJob.isFailed()} would
return true.
</p>
<p>
If a print job is queued or started and the user requests to cancel it, the print
service will receive a call to {@link #onRequestCancelPrintJob(PrintJob)} which
requests from the service to do best effort in canceling the job. In case the job
is successfully canceled, its state has to be marked as cancelled by calling {@link
PrintJob#cancel() PrintJob.cancel()} after which {@link PrintJob#isCancelled()
PrintJob.isCacnelled()} would return true.
</p>
<h3>Lifecycle</h3>
<p>
The lifecycle of a print service is managed exclusively by the system and follows
the established service lifecycle. Additionally, starting or stopping a print service
is triggered exclusively by an explicit user action through enabling or disabling it
in the device settings. After the system binds to a print service, it calls {@link
#onConnected()}. This method can be overriden by clients to perform post binding setup.
Also after the system unbinds from a print service, it calls {@link #onDisconnected()}.
This method can be overriden by clients to perform post unbinding cleanup. Your should
not do any work after the system disconnected from your print service since the
service can be killed at any time to reclaim memory. The system will not disconnect
from a print service if there are active print jobs for the printers managed by it.
</p>
<h3>Declaration</h3>
<p>
A print service is declared as any other service in an AndroidManifest.xml but it must
also specify that it handles the {@link android.content.Intent} with action {@link
#SERVICE_INTERFACE android.printservice.PrintService}. Failure to declare this intent
will cause the system to ignore the print service. Additionally, a print service must
request the {@link android.Manifest.permission#BIND_PRINT_SERVICE
android.permission.BIND_PRINT_SERVICE} permission to ensure that only the system can
bind to it. Failure to declare this intent will cause the system to ignore the print
service. Following is an example declaration:
</p>
<pre>
&lt;service android:name=\".MyPrintService\"
        android:permission=\"android.permission.BIND_PRINT_SERVICE\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.printservice.PrintService\" /&gt;
    &lt;/intent-filter&gt;
    . . .
&lt;/service&gt;
</pre>
<h3>Configuration</h3>
<p>
A print service can be configured by specifying an optional settings activity which
exposes service specific settings, an optional add printers activity which is used for
manual addition of printers, vendor name ,etc. It is a responsibility of the system
to launch the settings and add printers activities when appropriate.
</p>
<p>
A print service is configured by providing a {@link #SERVICE_META_DATA meta-data}
entry in the manifest when declaring the service. A service declaration with a meta-data
tag is presented below:
<pre> &lt;service android:name=\".MyPrintService\"
        android:permission=\"android.permission.BIND_PRINT_SERVICE\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.printservice.PrintService\" /&gt;
    &lt;/intent-filter&gt;
    &lt;meta-data android:name=\"android.printservice\" android:resource=\"@xml/printservice\" /&gt;
&lt;/service&gt;</pre>
</p>
<p>
For more details for how to configure your print service via the meta-data refer to
{@link #SERVICE_META_DATA} and <code>&lt;{@link android.R.styleable#PrintService
print-service}&gt;</code>.
</p>
<p>
<strong>Note: </strong> All callbacks in this class are executed on the main
application thread. You should also invoke any method of this class on the main
application thread.
</p>"
      classrelation 1562679 // <generalisation>
	relation 1562679 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1562679 // <generalisation>
	  b parent class_ref 300343 // Service
      end

      classrelation 1562807 // LOG_TAG (<unidirectional association>)
	relation 1562807 --->
	  a role_name "LOG_TAG" init_value " \"PrintService\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1562807 // LOG_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1774903 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1562935 // SERVICE_INTERFACE (<unidirectional association>)
	relation 1562935 --->
	  a role_name "SERVICE_INTERFACE" init_value " \"android.printservice.PrintService\"" class_relation const_relation public
	    comment "
The {@link Intent} action that must be declared as handled by a service
in its manifest for the system to recognize it as a print service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1562935 // SERVICE_INTERFACE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1563063 // SERVICE_META_DATA (<unidirectional association>)
	relation 1563063 --->
	  a role_name "SERVICE_META_DATA" init_value " \"android.printservice\"" class_relation const_relation public
	    comment "
Name under which a {@link PrintService} component publishes additional information
about itself. This meta-data must reference a XML resource containing a <code>
&lt;{@link android.R.styleable#PrintService print-service}&gt;</code> tag. This is
a sample XML file configuring a print service:
<pre> &lt;print-service
    android:vendor=\"SomeVendor\"
    android:settingsActivity=\"foo.bar.MySettingsActivity\"
    andorid:addPrintersActivity=\"foo.bar.MyAddPrintersActivity.\"
    . . .
/&gt;</pre>
<p>
For detailed configuration options that can be specified via the meta-data
refer to {@link android.R.styleable#PrintService android.R.styleable.PrintService}.
</p>
<p>
If you declare a settings or add a printers activity, they have to be exported,
by setting the {@link android.R.attr#exported} activity attribute to <code>true
</code>. Also in case you want only the system to be able to start any of these
activities you can specify that they request the android.permission
.START_PRINT_SERVICE_CONFIG_ACTIVITY permission by setting the
{@link android.R.attr#permission} activity attribute.
</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1563063 // SERVICE_META_DATA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1563191 // EXTRA_PRINT_JOB_INFO (<unidirectional association>)
	relation 1563191 --->
	  a role_name "EXTRA_PRINT_JOB_INFO" init_value " \"android.intent.extra.print.PRINT_JOB_INFO\"" class_relation const_relation public
	    comment "
If you declared an optional activity with advanced print options via the
{@link android.R.attr#advancedPrintOptionsActivity advancedPrintOptionsActivity} attribute,
this extra is used to pass in the currently constructed {@link PrintJobInfo} to your activity
allowing you to modify it. After you are done, you must return the modified
{@link PrintJobInfo} via the same extra.
<p>
You cannot modify the passed in {@link PrintJobInfo} directly, rather you should build
another one using the {@link android.print.PrintJobInfo.Builder PrintJobInfo.Builder} class.
You can specify any standard properties and add advanced, printer specific, ones via
{@link android.print.PrintJobInfo.Builder#putAdvancedOption(String, String)
PrintJobInfo.Builder.putAdvancedOption(String, String)} and
{@link android.print.PrintJobInfo.Builder#putAdvancedOption(String, int)
PrintJobInfo.Builder.putAdvancedOption(String, int)}. The advanced options are not
interpreted by the system, they will not be visible to applications, and can only be accessed
by your print service via {@link PrintJob#getAdvancedStringOption(String)
PrintJob.getAdvancedStringOption(String)} and {@link PrintJob#getAdvancedIntOption(String)
PrintJob.getAdvancedIntOption(String)}.
</p>
<p>
If the advanced print options activity offers changes to the standard print options, you can
get the current {@link android.print.PrinterInfo PrinterInfo} using the
{@link #EXTRA_PRINTER_INFO} extra which will allow you to present the user with UI options
supported by the current printer. For example, if the current printer does not support a
given media size, you should not offer it in the advanced print options UI.
</p>

@see #EXTRA_PRINTER_INFO

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1563191 // EXTRA_PRINT_JOB_INFO (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1563319 // EXTRA_PRINTER_INFO (<unidirectional association>)
	relation 1563319 --->
	  a role_name "EXTRA_PRINTER_INFO" init_value " \"android.intent.extra.print.EXTRA_PRINTER_INFO\"" class_relation const_relation public
	    comment "
If you declared an optional activity with advanced print options via the
{@link android.R.attr#advancedPrintOptionsActivity advancedPrintOptionsActivity}
attribute, this extra is used to pass in the currently selected printer's
{@link android.print.PrinterInfo} to your activity allowing you to inspect it.

@see #EXTRA_PRINT_JOB_INFO

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1563319 // EXTRA_PRINTER_INFO (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1563447 // EXTRA_PRINT_DOCUMENT_INFO (<unidirectional association>)
	relation 1563447 --->
	  a role_name "EXTRA_PRINT_DOCUMENT_INFO" init_value "
            \"android.printservice.extra.PRINT_DOCUMENT_INFO\"" class_relation const_relation public
	    comment "
If you declared an optional activity with advanced print options via the
{@link android.R.attr#advancedPrintOptionsActivity advancedPrintOptionsActivity}
attribute, this extra is used to pass in the meta-data for the currently printed
document as a {@link android.print.PrintDocumentInfo} to your activity allowing
you to inspect it.

@see #EXTRA_PRINT_JOB_INFO
@see #EXTRA_PRINTER_INFO

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1563447 // EXTRA_PRINT_DOCUMENT_INFO (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 1563575 // mHandler (<unidirectional association>)
	relation 1563575 --->
	  a role_name "mHandler" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1563575 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      attribute 1775031 "mClient"
	private explicit_type "IPrintServiceClient"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1775159 "mLastSessionId"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1563703 // mDiscoverySession (<unidirectional association>)
	relation 1563703 --->
	  a role_name "mDiscoverySession" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1563703 // mDiscoverySession (<unidirectional association>)
	  b parent class_ref 575159 // PrinterDiscoverySession
      end

      operation 4166967 "attachBaseContext"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "base" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4167095 "onConnected"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The system has connected to this service."
      end

      operation 4167223 "onDisconnected"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The system has disconnected from this service."
      end

      operation 4167351 "onCreatePrinterDiscoverySession"
	abstract protected return_type class_ref 575159 // PrinterDiscoverySession
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Callback asking you to create a new {@link PrinterDiscoverySession}.

@return The created session.
@see PrinterDiscoverySession"
      end

      operation 4167479 "onRequestCancelPrintJob"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "printJob" type class_ref 575287 // PrintJob
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when cancellation of a print job is requested. The service
should do best effort to fulfill the request. After the cancellation
is performed, the print job should be marked as cancelled state by
calling {@link PrintJob#cancel()}.

@param printJob The print job to cancel.

@see PrintJob#cancel() PrintJob.cancel()
@see PrintJob#isCancelled() PrintJob.isCancelled()"
      end

      operation 4167607 "onPrintJobQueued"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "printJob" type class_ref 575287 // PrintJob
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when there is a queued print job for one of the printers
managed by this print service.

@param printJob The new queued print job.

@see PrintJob#isQueued() PrintJob.isQueued()
@see #getActivePrintJobs()"
      end

      operation 4167735 "getActivePrintJobs"
	public return_type class_ref 575287 // PrintJob
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the active print jobs for the printers managed by this service.
Active print jobs are ones that are not in a final state, i.e. whose
state is queued or started.

@return The active print jobs.

@see PrintJob#isQueued() PrintJob.isQueued()
@see PrintJob#isStarted() PrintJob.isStarted()"
      end

      operation 4167863 "generatePrinterId"
	public return_type class_ref 568119 // PrinterId
	nparams 1
	  param inout name "localId" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Generates a global printer id given the printer's locally unique one.

@param localId A locally unique id in the context of your print service.
@return Global printer id."
      end

      operation 4167991 "throwIfNotCalledOnMainThread"
	class_operation package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 4168119 "onBind"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 575543 "ServiceHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1563831 // <generalisation>
	  relation 1563831 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1563831 // <generalisation>
	    b parent class_ref 132023 // Handler
	end

	attribute 1775287 "MSG_CREATE_PRINTER_DISCOVERY_SESSION"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1775415 "MSG_DESTROY_PRINTER_DISCOVERY_SESSION"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1775543 "MSG_START_PRINTER_DISCOVERY"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1775671 "MSG_STOP_PRINTER_DISCOVERY"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1775799 "MSG_VALIDATE_PRINTERS"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 5"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1775927 "MSG_START_PRINTER_STATE_TRACKING"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 6"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1776055 "MSG_REQUEST_CUSTOM_PRINTER_ICON"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 7"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1776183 "MSG_STOP_PRINTER_STATE_TRACKING"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 8"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1776311 "MSG_ON_PRINTJOB_QUEUED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 9"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1776439 "MSG_ON_REQUEST_CANCEL_PRINTJOB"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 10"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1776567 "MSG_SET_CLIENT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 11"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 4168247 "ServiceHandler"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "looper" type class_ref 129335 // Looper
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 4168375 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "message" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
@SuppressWarnings(\"unchecked\")
"
	  
	  
	  
	end
      end
    end
  end

  package_ref 169015 // recommendation

  deploymentview 154807 "printservice"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 358711 "CustomPrinterIconCallback"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.graphics.drawable.Icon;
import android.os.RemoteException;
import android.print.PrinterId;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 574903 // CustomPrinterIconCallback
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 358839 "PrintDocument"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import android.print.PrintDocumentInfo;
import android.print.PrintJobId;
import android.util.Log;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 575031 // PrintDocument
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 358967 "PrinterDiscoverySession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.content.pm.ParceledListSlice;
import android.os.CancellationSignal;
import android.os.RemoteException;
import android.print.PrinterCapabilitiesInfo;
import android.print.PrinterId;
import android.print.PrinterInfo;
import android.util.ArrayMap;
import android.util.Log;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
${definition}"
      associated_classes
	class_ref 575159 // PrinterDiscoverySession
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 359095 "PrintJob"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.FloatRange;
import android.annotation.MainThread;
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.annotation.StringRes;
import android.content.Context;
import android.os.RemoteException;
import android.print.PrintJobId;
import android.print.PrintJobInfo;
import android.text.TextUtils;
import android.util.Log;
import com.android.internal.util.Preconditions;
${definition}"
      associated_classes
	class_ref 575287 // PrintJob
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 359223 "PrintService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.app.Service;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.Message;
import android.os.RemoteException;
import android.print.PrintJobInfo;
import android.print.PrinterId;
import android.util.Log;
import com.android.internal.util.Preconditions;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
${definition}"
      associated_classes
	class_ref 575415 // PrintService
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 359351 "PrintServiceInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import android.content.ComponentName;
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.ResolveInfo;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.content.res.XmlResourceParser;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.AttributeSet;
import android.util.Log;
import android.util.Xml;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 570679 // PrintServiceInfo
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
