class NeighboringCellInfo
!!!34450871.java!!!	NeighboringCellInfo()
        mRssi = UNKNOWN_RSSI;
        mLac = UNKNOWN_CID;
        mCid = UNKNOWN_CID;
        mPsc = UNKNOWN_CID;
        mNetworkType = NETWORK_TYPE_UNKNOWN;
!!!34450999.java!!!	NeighboringCellInfo(in rssi : int, in cid : int)
        mRssi = rssi;
        mCid = cid;
!!!34451127.java!!!	NeighboringCellInfo(in rssi : int, inout location : String, in radioType : int)
        // set default value
        mRssi = rssi;
        mNetworkType = NETWORK_TYPE_UNKNOWN;
        mPsc = UNKNOWN_CID;
        mLac = UNKNOWN_CID;
        mCid = UNKNOWN_CID;


        // pad location string with leading "0"
        int l = location.length();
        if (l > 8) return;
        if (l < 8) {
            for (int i = 0; i < (8-l); i++) {
                location = "0" + location;
            }
        }
        // TODO - handle LTE and eHRPD (or find they can't be supported)
        try {// set LAC/CID or PSC based on radioType
            switch (radioType) {
            case NETWORK_TYPE_GPRS:
            case NETWORK_TYPE_EDGE:
                mNetworkType = radioType;
                // check if 0xFFFFFFFF for UNKNOWN_CID
                if (!location.equalsIgnoreCase("FFFFFFFF")) {
                    mCid = Integer.parseInt(location.substring(4), 16);
                    mLac = Integer.parseInt(location.substring(0, 4), 16);
                }
                break;
            case NETWORK_TYPE_UMTS:
            case NETWORK_TYPE_HSDPA:
            case NETWORK_TYPE_HSUPA:
            case NETWORK_TYPE_HSPA:
                mNetworkType = radioType;
                mPsc = Integer.parseInt(location, 16);
                break;
            }
        } catch (NumberFormatException e) {
            // parsing location error
            mPsc = UNKNOWN_CID;
            mLac = UNKNOWN_CID;
            mCid = UNKNOWN_CID;
            mNetworkType = NETWORK_TYPE_UNKNOWN;
        }
!!!34451255.java!!!	NeighboringCellInfo(inout in : Parcel)
        mRssi = in.readInt();
        mLac = in.readInt();
        mCid = in.readInt();
        mPsc = in.readInt();
        mNetworkType = in.readInt();
!!!34451383.java!!!	getRssi() : int
        return mRssi;
!!!34451511.java!!!	getLac() : int
        return mLac;
!!!34451639.java!!!	getCid() : int
        return mCid;
!!!34451767.java!!!	getPsc() : int
        return mPsc;
!!!34451895.java!!!	getNetworkType() : int
        return mNetworkType;
!!!34452023.java!!!	setCid(in cid : int) : void
        mCid = cid;
!!!34452151.java!!!	setRssi(in rssi : int) : void
        mRssi = rssi;
!!!34452279.java!!!	toString() : String
        StringBuilder sb = new StringBuilder();

        sb.append("[");
        if (mPsc != UNKNOWN_CID) {
            sb.append(Integer.toHexString(mPsc))
                    .append("@").append(((mRssi == UNKNOWN_RSSI)? "-" : mRssi));
        } else if(mLac != UNKNOWN_CID && mCid != UNKNOWN_CID) {
            sb.append(Integer.toHexString(mLac))
                    .append(Integer.toHexString(mCid))
                    .append("@").append(((mRssi == UNKNOWN_RSSI)? "-" : mRssi));
        }
        sb.append("]");

        return sb.toString();
!!!34452407.java!!!	describeContents() : int
        return 0;
!!!34452535.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeInt(mRssi);
        dest.writeInt(mLac);
        dest.writeInt(mCid);
        dest.writeInt(mPsc);
        dest.writeInt(mNetworkType);
