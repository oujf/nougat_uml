class OperatorInfo
!!!34591927.java!!!	getOperatorAlphaLong() : String
        return mOperatorAlphaLong;
!!!34592055.java!!!	getOperatorAlphaShort() : String
        return mOperatorAlphaShort;
!!!34592183.java!!!	getOperatorNumeric() : String
        return mOperatorNumeric;
!!!34592311.java!!!	getState() : OperatorInfo::State
        return mState;
!!!34592439.java!!!	OperatorInfo(inout operatorAlphaLong : String, inout operatorAlphaShort : String, inout operatorNumeric : String, inout state : OperatorInfo::State)

        mOperatorAlphaLong = operatorAlphaLong;
        mOperatorAlphaShort = operatorAlphaShort;
        mOperatorNumeric = operatorNumeric;

        mState = state;
!!!34592567.java!!!	OperatorInfo(inout operatorAlphaLong : String, inout operatorAlphaShort : String, inout operatorNumeric : String, inout stateString : String)
        this (operatorAlphaLong, operatorAlphaShort,
                operatorNumeric, rilStateToState(stateString));
!!!34592695.java!!!	OperatorInfo(inout operatorAlphaLong : String, inout operatorAlphaShort : String, inout operatorNumeric : String)
        this(operatorAlphaLong, operatorAlphaShort, operatorNumeric, State.UNKNOWN);
!!!34592823.java!!!	rilStateToState(inout s : String) : OperatorInfo::State
        if (s.equals("unknown")) {
            return State.UNKNOWN;
        } else if (s.equals("available")) {
            return State.AVAILABLE;
        } else if (s.equals("current")) {
            return State.CURRENT;
        } else if (s.equals("forbidden")) {
            return State.FORBIDDEN;
        } else {
            throw new RuntimeException(
                "RIL impl error: Invalid network state '" + s + "'");
        }
!!!34592951.java!!!	toString() : String
        return "OperatorInfo " + mOperatorAlphaLong
                + "/" + mOperatorAlphaShort
                + "/" + mOperatorNumeric
                + "/" + mState;
!!!34593079.java!!!	describeContents() : int
        return 0;
!!!34593207.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeString(mOperatorAlphaLong);
        dest.writeString(mOperatorAlphaShort);
        dest.writeString(mOperatorNumeric);
        dest.writeSerializable(mState);
