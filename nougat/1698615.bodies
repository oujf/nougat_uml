class ApplicationTestCase
!!!34597559.java!!!	ApplicationTestCase(inout applicationClass : Class)
        mApplicationClass = applicationClass;
!!!34597687.java!!!	getApplication() : T
        return mApplication;
!!!34597815.java!!!	setUp() : void
        super.setUp();

        // get the real context, before the individual tests have a chance to muck with it
        mSystemContext = getContext();
!!!34597943.java!!!	setupApplication() : void
        mApplication = null;
        try {
            mApplication = (T) Instrumentation.newApplication(mApplicationClass, getContext());
        } catch (Exception e) {
            assertNotNull(mApplication);
        }
        mAttached = true;
!!!34598071.java!!!	createApplication() : void
        assertFalse(mCreated);

        if (!mAttached) {
            setupApplication();
        }
        assertNotNull(mApplication);

        mApplication.onCreate();
        mCreated = true;
!!!34598199.java!!!	terminateApplication() : void
        if (mCreated) {
            mApplication.onTerminate();
        }
!!!34598327.java!!!	tearDown() : void
        terminateApplication();
        mApplication = null;

        // Scrub out members - protects against memory leaks in the case where someone
        // creates a non-static inner class (thus referencing the test case) and gives it to
        // someone else to hold onto
        scrubClass(ApplicationTestCase.class);

        super.tearDown();
!!!34598455.java!!!	getSystemContext() : Context
        return mSystemContext;
!!!34598583.java!!!	testApplicationTestCaseSetUpProperly() : void
        setupApplication();
        assertNotNull("Application class could not be instantiated successfully", mApplication);
