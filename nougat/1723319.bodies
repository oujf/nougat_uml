class BiDiTestBasic
!!!34712759.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
        currentView = inflater.inflate(R.layout.basic, container, false);
        return currentView;
!!!34712887.java!!!	onViewCreated(inout view : View, inout savedInstanceState : Bundle) : void
        super.onViewCreated(view, savedInstanceState);

        alertDialogButton = (Button) currentView.findViewById(R.id.button_alert_dialog);
        alertDialogButton.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                showDialog();
            }
        });

        useSpans();
!!!34713015.java!!!	showDialog() : void
        AlertDialog.Builder builder = new AlertDialog.Builder(currentView.getContext());
        builder.setSingleChoiceItems(items, 0, null);
        builder.show();
!!!34713143.java!!!	useSpans() : void
        EditText urlEdit = (EditText) currentView.findViewById(R.id.edittext_url);
        Editable url = urlEdit.getText();
        if (url.length() < 1) {
          return;
        }

        String urlString = url.toString();
        int urlLength = urlString.length();
        String domainAndRegistry = "amazon.co.uk";

        int startSchemeIndex = urlString.startsWith("https") ? 5 : 0;
        int startDomainIndex = urlString.indexOf(domainAndRegistry);
        if (startDomainIndex == -1) {
          assert false;
          return;
        }
        int stopIndex = startDomainIndex + domainAndRegistry.length();

        if (startDomainIndex != 0) {
          url.setSpan(new ForegroundColorSpan(0xfff00fff),
                  startSchemeIndex,
                  startDomainIndex,
                  Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }

        url.setSpan(new ForegroundColorSpan(0xff548aff),
                startDomainIndex,
                stopIndex,
                Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);

        if (stopIndex < urlString.length()) {
          url.setSpan(new ForegroundColorSpan(0xfff00fff),
                  stopIndex,
                  urlLength,
                  Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
