format 76
"media" // nougat_src::frameworks::base::core::java::android::service::media
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/core/java/android/service/media/"
  java_package "android.service.media"
  classview 166839 "media"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 609847 "CameraPrewarmService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Extend this class to implement a camera prewarm service. See
{@link android.provider.MediaStore#META_DATA_STILL_IMAGE_CAMERA_PREWARM_SERVICE}."
      classrelation 1842871 // <generalisation>
	relation 1842871 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1842871 // <generalisation>
	  b parent class_ref 300343 // Service
      end

      classrelation 1842999 // ACTION_PREWARM (<unidirectional association>)
	relation 1842999 --->
	  a role_name "ACTION_PREWARM" init_value "
            \"android.service.media.CameraPrewarmService.ACTION_PREWARM\"" class_relation const_relation public
	    comment "
Intent action to bind the service as a prewarm service.
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1842999 // ACTION_PREWARM (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 1856567 "MSG_CAMERA_FIRED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Message sent by the client indicating that the camera intent has been fired.
@hide
"
      end

      classrelation 1843127 // mHandler (<unidirectional association>)
	relation 1843127 --->
	  a role_name "mHandler" init_value " new Handler() {

        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case MSG_CAMERA_FIRED:
                    mCameraIntentFired = true;
                    break;
                default:
                    super.handleMessage(msg);
            }
        }
    }" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1843127 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      attribute 1856695 "mCameraIntentFired"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 4285367 "onBind"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4285495 "onUnbind"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 4285623 "onPrewarm"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the camera should be prewarmed."
      end

      operation 4285751 "onCooldown"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "cameraIntentFired" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when prewarm phase is done, either because the camera launch intent has been fired
at this point or prewarm is no longer needed. A client should close the camera
immediately in the latter case.
<p>
In case the camera launch intent has been fired, there is no guarantee about the ordering
of these two events. Cooldown might happen either before or after the activity has been
created that handles the camera intent.

@param cameraIntentFired Indicates whether the intent to launch the camera has been
                         fired."
      end
    end

    class 1094071 "MediaBrowserService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for media browse services.
<p>
Media browse services enable applications to browse media content provided by an application
and ask the application to start playing it. They may also be used to control content that
is already playing by way of a {@link MediaSession}.
</p>

To extend this class, you must declare the service in your manifest file with
an intent filter with the {@link #SERVICE_INTERFACE} action.

For example:
</p><pre>
&lt;service android:name=\".MyMediaBrowserService\"
         android:label=\"&#64;string/service_name\" >
    &lt;intent-filter>
        &lt;action android:name=\"android.media.browse.MediaBrowserService\" />
    &lt;/intent-filter>
&lt;/service>
</pre>
"
      classrelation 3178167 // <generalisation>
	relation 3178167 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3178167 // <generalisation>
	  b parent class_ref 300343 // Service
      end

      classrelation 3178295 // TAG (<unidirectional association>)
	relation 3178295 --->
	  a role_name "TAG" init_value " \"MediaBrowserService\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3178295 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3521719 "DBG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3178423 // SERVICE_INTERFACE (<unidirectional association>)
	relation 3178423 --->
	  a role_name "SERVICE_INTERFACE" init_value " \"android.media.browse.MediaBrowserService\"" class_relation const_relation public
	    comment "
The {@link Intent} that must be declared as handled by the service.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstantType.SERVICE_ACTION)
"
	    classrelation_ref 3178423 // SERVICE_INTERFACE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3178551 // KEY_MEDIA_ITEM (<unidirectional association>)
	relation 3178551 --->
	  a role_name "KEY_MEDIA_ITEM" init_value " \"media_item\"" class_relation const_relation public
	    comment "
A key for passing the MediaItem to the ResultReceiver in getItem.

@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3178551 // KEY_MEDIA_ITEM (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3521847 "RESULT_FLAG_OPTION_NOT_HANDLED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 1094199 "ResultFlags"
	visibility private stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef(flag=true, value = { RESULT_FLAG_OPTION_NOT_HANDLED })
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 3178679 // mConnections (<unidirectional association>)
	relation 3178679 --->
	  a role_name "mConnections" init_value " new ArrayMap<>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<IBinder, ConnectionRecord> ${name}${value};
"
	    classrelation_ref 3178679 // mConnections (<unidirectional association>)
	  b parent class_ref 156343 // ArrayMap
      end

      class 1094327 "ConnectionRecord"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3179319 // pkg (<unidirectional association>)
	  relation 3179319 --->
	    a role_name "pkg" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3179319 // pkg (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 3179447 // rootHints (<unidirectional association>)
	  relation 3179447 --->
	    a role_name "rootHints" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3179447 // rootHints (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	attribute 3521975 "callbacks"
	  package explicit_type "IMediaBrowserServiceCallbacks"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 3179575 // root (<unidirectional association>)
	  relation 3179575 --->
	    a role_name "root" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3179575 // root (<unidirectional association>)
	    b parent class_ref 1094583 // BrowserRoot
	end

	classrelation 3179703 // subscriptions (<unidirectional association>)
	  relation 3179703 --->
	    stereotype "HashMap"
	    a role_name "subscriptions" init_value " new HashMap<>()" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, List<Pair<IBinder, Bundle>>> ${name}${value};
"
	      classrelation_ref 3179703 // subscriptions (<unidirectional association>)
	    b parent class_ref 129591 // String
	end
      end

      classrelation 3178807 // mCurConnection (<unidirectional association>)
	relation 3178807 --->
	  a role_name "mCurConnection" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3178807 // mCurConnection (<unidirectional association>)
	  b parent class_ref 1094327 // ConnectionRecord
      end

      classrelation 3178935 // mHandler (<unidirectional association>)
	relation 3178935 --->
	  a role_name "mHandler" init_value " new Handler()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3178935 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      class 1094455 "ServiceBinder"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3179959 // <generalisation>
	  relation 3179959 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 3179959 // <generalisation>
	    b parent class_ref 1094839 // Stub
	end

	operation 28775351 "connect"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "pkg" type class_ref 129591 // String
	    param in name "rootHints" type class_ref 131511 // Bundle
	    param in name "callbacks" explicit_type "IMediaBrowserServiceCallbacks"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28775479 "disconnect"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "callbacks" explicit_type "IMediaBrowserServiceCallbacks"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28775607 "addSubscriptionDeprecated"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "id" type class_ref 129591 // String
	    param inout name "callbacks" explicit_type "IMediaBrowserServiceCallbacks"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28775735 "addSubscription"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "id" type class_ref 129591 // String
	    param in name "token" type class_ref 132919 // IBinder
	    param in name "options" type class_ref 131511 // Bundle
	    param in name "callbacks" explicit_type "IMediaBrowserServiceCallbacks"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28775863 "removeSubscriptionDeprecated"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "id" type class_ref 129591 // String
	    param inout name "callbacks" explicit_type "IMediaBrowserServiceCallbacks"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28775991 "removeSubscription"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "id" type class_ref 129591 // String
	    param in name "token" type class_ref 132919 // IBinder
	    param in name "callbacks" explicit_type "IMediaBrowserServiceCallbacks"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 28776119 "getMediaItem"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "mediaId" type class_ref 129591 // String
	    param in name "receiver" type class_ref 277815 // ResultReceiver
	    param in name "callbacks" explicit_type "IMediaBrowserServiceCallbacks"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 3179063 // mBinder (<unidirectional association>)
	relation 3179063 --->
	  a role_name "mBinder" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3179063 // mBinder (<unidirectional association>)
	  b parent class_ref 1094455 // ServiceBinder
      end

      classrelation 3179191 // mSession (<unidirectional association>)
	relation 3179191 --->
	  a role_name "mSession" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3179191 // mSession (<unidirectional association>)
	  b parent class_ref 387767 // Token
      end

      class 1094583 "BrowserRoot"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3180087 // EXTRA_RECENT (<unidirectional association>)
	  relation 3180087 --->
	    a role_name "EXTRA_RECENT" init_value " \"android.service.media.extra.RECENT\"" class_relation const_relation public
	      comment "
The lookup key for a boolean that indicates whether the browser service should return a
browser root for recently played media items.

<p>When creating a media browser for a given media browser service, this key can be
supplied as a root hint for retrieving media items that are recently played.
If the media browser service can provide such media items, the implementation must return
the key in the root hint when {@link #onGetRoot(String, int, Bundle)} is called back.

<p>The root hint may contain multiple keys.

@see #EXTRA_OFFLINE
@see #EXTRA_SUGGESTED

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3180087 // EXTRA_RECENT (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 3180215 // EXTRA_OFFLINE (<unidirectional association>)
	  relation 3180215 --->
	    a role_name "EXTRA_OFFLINE" init_value " \"android.service.media.extra.OFFLINE\"" class_relation const_relation public
	      comment "
The lookup key for a boolean that indicates whether the browser service should return a
browser root for offline media items.

<p>When creating a media browser for a given media browser service, this key can be
supplied as a root hint for retrieving media items that are can be played without an
internet connection.
If the media browser service can provide such media items, the implementation must return
the key in the root hint when {@link #onGetRoot(String, int, Bundle)} is called back.

<p>The root hint may contain multiple keys.

@see #EXTRA_RECENT
@see #EXTRA_SUGGESTED

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3180215 // EXTRA_OFFLINE (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 3180343 // EXTRA_SUGGESTED (<unidirectional association>)
	  relation 3180343 --->
	    a role_name "EXTRA_SUGGESTED" init_value " \"android.service.media.extra.SUGGESTED\"" class_relation const_relation public
	      comment "
The lookup key for a boolean that indicates whether the browser service should return a
browser root for suggested media items.

<p>When creating a media browser for a given media browser service, this key can be
supplied as a root hint for retrieving the media items suggested by the media browser
service. The list of media items passed in {@link android.media.browse.MediaBrowser.SubscriptionCallback#onChildrenLoaded(String, List)}
is considered ordered by relevance, first being the top suggestion.
If the media browser service can provide such media items, the implementation must return
the key in the root hint when {@link #onGetRoot(String, int, Bundle)} is called back.

<p>The root hint may contain multiple keys.

@see #EXTRA_RECENT
@see #EXTRA_OFFLINE

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3180343 // EXTRA_SUGGESTED (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 3180471 // mRootId (<unidirectional association>)
	  relation 3180471 --->
	    a role_name "mRootId" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3180471 // mRootId (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 3180599 // mExtras (<unidirectional association>)
	  relation 3180599 --->
	    a role_name "mExtras" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3180599 // mExtras (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	operation 28778679 "BrowserRoot"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "rootId" type class_ref 129591 // String
	    param inout name "extras" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a browser root.
@param rootId The root id for browsing.
@param extras Any extras about the browser service."
	end

	operation 28778807 "getRootId"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the root id for browsing."
	end

	operation 28778935 "getExtras"
	  public return_type class_ref 131511 // Bundle
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets any extras about the browser service."
	end
      end

      class 1094711 "Result"
	visibility public 
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3179831 // mDebug (<unidirectional association>)
	  relation 3179831 --->
	    a role_name "mDebug" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3179831 // mDebug (<unidirectional association>)
	    b parent class_ref 132663 // Object
	end

	attribute 3522103 "mDetachCalled"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3522231 "mSendResultCalled"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3522359 "mFlags"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 28774583 "Result"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "debug" type class_ref 132663 // Object
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28774711 "sendResult"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "result" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Send the result back to the caller."
	end

	operation 28774839 "detach"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Detach this message from the current thread and allow the {@link #sendResult}
call to happen later."
	end

	operation 28774967 "isDone"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28775095 "setFlags"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ResultFlags ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28775223 "onResultSent"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "result" explicit_type "T"
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @ResultFlags ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the result is sent, after assertions about not being called twice
have happened."
	end
      end

      operation 28776247 "onCreate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28776375 "onBind"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28776503 "dump"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28776631 "onGetRoot"
	abstract public return_type class_ref 1094583 // BrowserRoot
	nparams 3
	  param inout name "clientPackageName" type class_ref 129591 // String
	  param in name "clientUid" explicit_type "int"
	  param inout name "rootHints" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Called to get the root information for browsing by a particular client.
<p>
The implementation should verify that the client package has permission
to access browse media information before returning the root id; it
should return null if the client is not allowed to access this
information.
</p>

@param clientPackageName The package name of the application which is
           requesting access to browse media.
@param clientUid The uid of the application which is requesting access to
           browse media.
@param rootHints An optional bundle of service-specific arguments to send
           to the media browse service when connecting and retrieving the
           root id for browsing, or null if none. The contents of this
           bundle may affect the information returned when browsing.
@return The {@link BrowserRoot} for accessing this app's content or null.
@see BrowserRoot#EXTRA_RECENT
@see BrowserRoot#EXTRA_OFFLINE
@see BrowserRoot#EXTRA_SUGGESTED"
      end

      operation 28776759 "onLoadChildren"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "parentId" type class_ref 129591 // String
	  param inout name "result" type class_ref 1094711 // Result
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1}<List<MediaBrowser.MediaItem>> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to get information about the children of a media item.
<p>
Implementations must call {@link Result#sendResult result.sendResult}
with the list of children. If loading the children will be an expensive
operation that should be performed on another thread,
{@link Result#detach result.detach} may be called before returning from
this function, and then {@link Result#sendResult result.sendResult}
called when the loading is complete.
</p><p>
In case the media item does not have any children, call {@link Result#sendResult}
with an empty list. When the given {@code parentId} is invalid, implementations must
call {@link Result#sendResult result.sendResult} with {@code null}, which will invoke
{@link MediaBrowser.SubscriptionCallback#onError}.
</p>

@param parentId The id of the parent media item whose children are to be
           queried.
@param result The Result to send the list of children to."
      end

      operation 28776887 "onLoadChildren"
	public explicit_return_type "void"
	nparams 3
	  param inout name "parentId" type class_ref 129591 // String
	  param inout name "result" type class_ref 1094711 // Result
	  param inout name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1}<List<MediaBrowser.MediaItem>> ${p1}, @NonNull ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to get information about the children of a media item.
<p>
Implementations must call {@link Result#sendResult result.sendResult}
with the list of children. If loading the children will be an expensive
operation that should be performed on another thread,
{@link Result#detach result.detach} may be called before returning from
this function, and then {@link Result#sendResult result.sendResult}
called when the loading is complete.
</p><p>
In case the media item does not have any children, call {@link Result#sendResult}
with an empty list. When the given {@code parentId} is invalid, implementations must
call {@link Result#sendResult result.sendResult} with {@code null}, which will invoke
{@link MediaBrowser.SubscriptionCallback#onError}.
</p>

@param parentId The id of the parent media item whose children are to be
           queried.
@param result The Result to send the list of children to.
@param options A bundle of service-specific arguments sent from the media
           browse. The information returned through the result should be
           affected by the contents of this bundle."
      end

      operation 28777015 "onLoadItem"
	public explicit_return_type "void"
	nparams 2
	  param inout name "itemId" type class_ref 129591 // String
	  param inout name "result" type class_ref 1094711 // Result
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<MediaBrowser.MediaItem> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to get information about a specific media item.
<p>
Implementations must call {@link Result#sendResult result.sendResult}. If
loading the item will be an expensive operation {@link Result#detach
result.detach} may be called before returning from this function, and
then {@link Result#sendResult result.sendResult} called when the item has
been loaded.
</p><p>
When the given {@code itemId} is invalid, implementations must call
{@link Result#sendResult result.sendResult} with {@code null}, which will
invoke {@link MediaBrowser.ItemCallback#onError}.
</p><p>
The default implementation calls {@link Result#sendResult result.sendResult}
with {@code null}.
</p>

@param itemId The id for the specific
           {@link android.media.browse.MediaBrowser.MediaItem}.
@param result The Result to send the item to."
      end

      operation 28777143 "setSessionToken"
	public explicit_return_type "void"
	nparams 1
	  param in name "token" type class_ref 387767 // Token
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call to set the media session.
<p>
This should be called as soon as possible during the service's startup.
It may only be called once.

@param token The token for the service's {@link MediaSession}."
      end

      operation 28777271 "getSessionToken"
	public return_type class_ref 387767 // Token
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Gets the session token, or null if it has not yet been created
or if it has been destroyed."
      end

      operation 28777399 "getBrowserRootHints"
	public return_type class_ref 131511 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the root hints sent from the currently connected {@link MediaBrowser}.
The root hints are service-specific arguments included in an optional bundle sent to the
media browser service when connecting and retrieving the root id for browsing, or null if
none. The contents of this bundle may affect the information returned when browsing.

@throws IllegalStateException If this method is called outside of {@link #onLoadChildren}
            or {@link #onLoadItem}
@see MediaBrowserService.BrowserRoot#EXTRA_RECENT
@see MediaBrowserService.BrowserRoot#EXTRA_OFFLINE
@see MediaBrowserService.BrowserRoot#EXTRA_SUGGESTED"
      end

      operation 28777527 "notifyChildrenChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parentId" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all connected media browsers that the children of
the specified parent id have changed in some way.
This will cause browsers to fetch subscribed content again.

@param parentId The id of the parent media item whose
children changed."
      end

      operation 28777655 "notifyChildrenChanged"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parentId" type class_ref 129591 // String
	  param inout name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies all connected media browsers that the children of
the specified parent id have changed in some way.
This will cause browsers to fetch subscribed content again.

@param parentId The id of the parent media item whose
           children changed.
@param options A bundle of service-specific arguments to send
           to the media browse. The contents of this bundle may
           contain the information about the change."
      end

      operation 28777783 "notifyChildrenChangedInternal"
	private explicit_return_type "void"
	nparams 2
	  param in name "parentId" type class_ref 129591 // String
	  param in name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28777911 "isValidPackage"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "pkg" type class_ref 129591 // String
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether the given package is one of the ones that is owned by the uid."
      end

      operation 28778039 "addSubscription"
	private explicit_return_type "void"
	nparams 4
	  param inout name "id" type class_ref 129591 // String
	  param inout name "connection" type class_ref 1094327 // ConnectionRecord
	  param inout name "token" type class_ref 132919 // IBinder
	  param inout name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save the subscription and if it is a new subscription send the results."
      end

      operation 28778167 "removeSubscription"
	private explicit_return_type "boolean"
	nparams 3
	  param inout name "id" type class_ref 129591 // String
	  param inout name "connection" type class_ref 1094327 // ConnectionRecord
	  param inout name "token" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the subscription."
      end

      operation 28778295 "performLoadChildren"
	private explicit_return_type "void"
	nparams 3
	  param in name "parentId" type class_ref 129591 // String
	  param in name "connection" type class_ref 1094327 // ConnectionRecord
	  param in name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call onLoadChildren and then send the results back to the connection.
<p>
Callers must make sure that this connection is still connected."
      end

      operation 28778423 "applyOptions"
	private return_type class_ref 1078327 // MediaItem
	nparams 2
	  param inout name "list" explicit_type "List<MediaBrowser.MediaItem>"
	  param in name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28778551 "performLoadItem"
	private explicit_return_type "void"
	nparams 3
	  param inout name "itemId" type class_ref 129591 // String
	  param in name "connection" type class_ref 1094327 // ConnectionRecord
	  param in name "receiver" type class_ref 277815 // ResultReceiver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 156087 "media"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 369079 "CameraPrewarmService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Service;
import android.content.Intent;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.Messenger;
${definition}"
      associated_classes
	class_ref 609847 // CameraPrewarmService
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License"
    end

    artifact 638903 "MediaBrowserService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.IntDef;
import android.annotation.NonNull;
import android.annotation.Nullable;
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.app.Service;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.ParceledListSlice;
import android.media.browse.MediaBrowser;
import android.media.browse.MediaBrowserUtils;
import android.media.session.MediaSession;
import android.os.Binder;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.RemoteException;
import android.os.ResultReceiver;
import android.service.media.IMediaBrowserService;
import android.service.media.IMediaBrowserServiceCallbacks;
import android.text.TextUtils;
import android.util.ArrayMap;
import android.util.Log;
import android.util.Pair;
import java.io.FileDescriptor;
import java.io.PrintWriter;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
${definition}"
      associated_classes
	class_ref 1094071 // MediaBrowserService
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
