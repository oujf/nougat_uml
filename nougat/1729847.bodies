class FrameManager
!!!34787255.java!!!	current() : FrameManager
        GraphRunner runner = GraphRunner.current();
        return runner != null ? runner.getFrameManager() : null;
!!!34787383.java!!!	getContext() : MffContext
        return mRunner.getContext();
!!!34787511.java!!!	getRunner() : GraphRunner
        return mRunner;
!!!34787639.java!!!	setCacheSize(in bytes : int) : void
        mCache.setSize(bytes);
!!!34787767.java!!!	getCacheSize() : int
        return mCache.getSize();
!!!34787895.java!!!	importFrame(inout frame : Frame) : Frame
        if (!frame.isReadOnly()) {
            throw new IllegalArgumentException("Frame " + frame + " must be read-only to import "
                    + "into another FrameManager!");
        }
        return frame.makeCpuCopy(this);
!!!34788023.java!!!	addFrameSlot(inout name : String, inout type : FrameType, in flags : int) : void
        assertNotRunning();
        FrameSlot oldSlot = mFrameSlots.get(name);
        if (oldSlot != null) {
            removeFrameSlot(name);
        }
        FrameSlot slot = new FrameSlot(type, flags);
        mFrameSlots.put(name, slot);
!!!34788151.java!!!	removeFrameSlot(inout name : String) : void
        assertNotRunning();
        FrameSlot slot = getSlot(name);
        slot.releaseFrame();
        mFrameSlots.remove(slot);
!!!34788279.java!!!	storeFrame(inout frame : Frame, inout slotName : String) : void
        assertInGraphRun();
        getSlot(slotName).assignFrame(frame);
!!!34788407.java!!!	fetchFrame(inout slotName : String) : Frame
        assertInGraphRun();
        return getSlot(slotName).getFrame();
!!!34788535.java!!!	clearCache() : void
        mCache.clear();
!!!34788663.java!!!	FrameManager(inout runner : GraphRunner, in cacheType : int)
        mRunner = runner;
        switch (cacheType) {
            case FRAME_CACHE_NONE:
                mCache = new BackingCacheNone();
                break;
            case FRAME_CACHE_LRU:
                mCache = new BackingCacheLru();
                break;
            case FRAME_CACHE_LFU:
                mCache = new BackingCacheLfu();
                break;
            default:
                throw new IllegalArgumentException("Unknown cache-type " + cacheType + "!");
        }
!!!34788791.java!!!	fetchBacking(in mode : int, in access : int, inout dimensions : int, in elemSize : int) : BackingStore::Backing
        return mCache.fetchBacking(mode, access, dimensions, elemSize);
!!!34788919.java!!!	onBackingCreated(inout backing : BackingStore::Backing) : void
        if (backing != null) {
            mBackings.add(backing);
            // Log.i("FrameManager", "RM: Now have " + mBackings.size() + " backings");
        }
!!!34789047.java!!!	onBackingAvailable(inout backing : BackingStore::Backing) : void
        if (!backing.shouldCache() || !mCache.cacheBacking(backing)) {
            backing.destroy();
            mBackings.remove(backing);
            //Log.i("FrameManager", "RM: Now have " + mBackings.size() + " backings (" + mCache.getSizeLeft() + ")");
        }
!!!34789175.java!!!	destroyBackings() : void
        for (Backing backing : mBackings) {
            backing.destroy();
        }
        mBackings.clear();
        mCache.clear();
!!!34789303.java!!!	getSlot(inout name : String) : FrameManager::FrameSlot
        FrameSlot slot = mFrameSlots.get(name);
        if (slot == null) {
            throw new IllegalArgumentException("Unknown frame slot '" + name + "'!");
        }
        return slot;
!!!34789431.java!!!	onBeginRun() : void
        for (FrameSlot slot : mFrameSlots.values()) {
            slot.markWritable();
        }
!!!34789559.java!!!	dimensionsCompatible(inout dimA : int, inout dimB : int) : boolean
        return dimA == null || dimB == null || Arrays.equals(dimA, dimB);
!!!34789687.java!!!	assertNotRunning() : void
        if (mRunner.isRunning()) {
            throw new IllegalStateException("Attempting to modify FrameManager while graph is "
                + "running!");
        }
!!!34789815.java!!!	assertInGraphRun() : void
        if (!mRunner.isRunning() || GraphRunner.current() != mRunner) {
            throw new IllegalStateException("Attempting to access FrameManager Frame data "
                + "outside of graph run-loop!");
        }
