class TextureSource
!!!34859447.java!!!	fromTexture(in texId : int, in target : int) : TextureSource
        return new TextureSource(texId, target, false);
!!!34859575.java!!!	fromTexture(in texId : int) : TextureSource
        return new TextureSource(texId, GLES20.GL_TEXTURE_2D, false);
!!!34859703.java!!!	newTexture() : TextureSource
        return new TextureSource(GLToolbox.generateTexture(), GLES20.GL_TEXTURE_2D, true);
!!!34859831.java!!!	newExternalTexture() : TextureSource
        return new TextureSource(GLToolbox.generateTexture(),
                                 GLES11Ext.GL_TEXTURE_EXTERNAL_OES,
                                 true);
!!!34859959.java!!!	getTextureId() : int
        return mTexId;
!!!34860087.java!!!	getTarget() : int
        return mTarget;
!!!34860215.java!!!	bind() : void
        GLES20.glBindTexture(mTarget, mTexId);
        GLToolbox.checkGlError("glBindTexture");
!!!34860343.java!!!	allocate(in width : int, in height : int) : void
        //Log.i("TextureSource", "Allocating empty texture " + mTexId + ": " + width + "x" + height + ".");
        GLToolbox.allocateTexturePixels(mTexId, mTarget, width, height);
        mIsAllocated = true;
!!!34860471.java!!!	allocateWithPixels(inout pixels : ByteBuffer, in width : int, in height : int) : void
        //Log.i("TextureSource", "Uploading pixels to texture " + mTexId + ": " + width + "x" + height + ".");
        GLToolbox.setTexturePixels(mTexId, mTarget, pixels, width, height);
        mIsAllocated = true;
!!!34860599.java!!!	allocateWithBitmapPixels(inout bitmap : Bitmap) : void
        //Log.i("TextureSource", "Uploading pixels to texture " + mTexId + "!");
        GLToolbox.setTexturePixels(mTexId, mTarget, bitmap);
        mIsAllocated = true;
!!!34860727.java!!!	generateMipmaps() : void
        GLES20.glBindTexture(mTarget, mTexId);
        GLES20.glTexParameteri(mTarget,
                               GLES20.GL_TEXTURE_MIN_FILTER,
                               GLES20.GL_LINEAR_MIPMAP_LINEAR);
        GLES20.glGenerateMipmap(mTarget);
        GLES20.glBindTexture(mTarget, 0);
!!!34860855.java!!!	setParameter(in parameter : int, in value : int) : void
        GLES20.glBindTexture(mTarget, mTexId);
        GLES20.glTexParameteri(mTarget, parameter, value);
        GLES20.glBindTexture(mTarget, 0);
!!!34860983.java!!!	release() : void
        if (GLToolbox.isTexture(mTexId) && mIsOwner) {
            GLToolbox.deleteTexture(mTexId);
        }
        mTexId = GLToolbox.textureNone();
!!!34861111.java!!!	toString() : String
        return "TextureSource(id=" + mTexId + ", target=" + mTarget + ")";
!!!34861239.java!!!	isAllocated() : boolean
        return mIsAllocated;
!!!34861367.java!!!	TextureSource(in texId : int, in target : int, inout isOwner : boolean)
        mTexId = texId;
        mTarget = target;
        mIsOwner = isOwner;
