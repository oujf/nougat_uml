class CameraStreamer
!!!34763831.java!!!	updateDisplayRotation(in rotation : int) : void
        mCameraRunner.updateDisplayRotation(rotation);
!!!34763959.java!!!	bindToDisplay(inout display : Display) : void
        mCameraRunner.bindToDisplay(display);
!!!34764087.java!!!	setDesiredPreviewSize(in width : int, in height : int) : void
        mCameraRunner.setDesiredPreviewSize(width, height);
!!!34764215.java!!!	setDesiredPictureSize(in width : int, in height : int) : void
        mCameraRunner.setDesiredPictureSize(width, height);
!!!34764343.java!!!	setDesiredFrameRate(in fps : int) : void
        mCameraRunner.setDesiredFrameRate(fps);
!!!34764471.java!!!	setFacing(in facing : int) : void
        mCameraRunner.setFacing(facing);
!!!34764599.java!!!	setFlipFrontCamera(inout flipFront : boolean) : void
        mCameraRunner.setFlipFrontCamera(flipFront);
!!!34764727.java!!!	setFlashMode(inout flashMode : String) : void
        mCameraRunner.setFlashMode(flashMode);
!!!34764855.java!!!	getFlashMode() : String
        return mCameraRunner.getFlashMode();
!!!34764983.java!!!	getCameraFacing() : int
        return mCameraRunner.getCameraFacing();
!!!34765111.java!!!	getCameraRotation() : int
        return mCameraRunner.getCameraRotation();
!!!34765239.java!!!	supportsHardwareFaceDetection() : boolean
        return mCameraRunner.supportsHardwareFaceDetection();
!!!34765367.java!!!	getDefaultFacing() : int
        int camCount = Camera.getNumberOfCameras();
        if (camCount == 0) {
            return 0;
        } else {
            CameraInfo cameraInfo = new CameraInfo();
            Camera.getCameraInfo(0, cameraInfo);
            return (cameraInfo.facing == CameraInfo.CAMERA_FACING_FRONT)
                ? FACING_FRONT
                : FACING_BACK;
        }
!!!34765495.java!!!	getCameraWidth() : int
        return mCameraRunner.getCameraWidth();
!!!34765623.java!!!	getCameraHeight() : int
        return mCameraRunner.getCameraHeight();
!!!34765751.java!!!	getCameraFrameRate() : int
        return mCameraRunner.getCameraFrameRate();
!!!34765879.java!!!	canStart() : boolean
        return mCameraRunner.canStart();
!!!34766007.java!!!	isRunning() : boolean
        return mCameraRunner.isRunning();
!!!34766135.java!!!	start() : void
        mCameraRunner.pushEvent(Event.START, true);
!!!34766263.java!!!	stop() : void
        mCameraRunner.pushEvent(Event.STOP, true);
!!!34766391.java!!!	stopAndWait() : void
        mCameraRunner.pushEvent(Event.STOP, true);
        try {
            if (!mCameraLock.tryLock(MAX_CAMERA_WAIT_TIME, TimeUnit.SECONDS)) {
                Log.w("CameraStreamer", "Time-out waiting for camera to close!");
            }
        } catch (InterruptedException e) {
            Log.w("CameraStreamer", "Interrupted while waiting for camera to close!");
        }
        mCameraLock.unlock();
!!!34766519.java!!!	addListener(inout listener : CameraStreamer::CameraListener) : void
        mCameraRunner.addListener(listener);
!!!34766647.java!!!	removeListener(inout listener : CameraStreamer::CameraListener) : void
        mCameraRunner.removeListener(listener);
!!!34766775.java!!!	registerClient(inout client : CameraStreamer::FrameClient) : void
        mCameraRunner.getCamFrameHandler().registerClient(client);
!!!34766903.java!!!	unregisterClient(inout client : CameraStreamer::FrameClient) : void
        mCameraRunner.getCamFrameHandler().unregisterClient(client);
!!!34767031.java!!!	getLatestFrame(inout targetFrame : FrameImage2D) : boolean
        return mCameraRunner.grabFrame(targetFrame);
!!!34767159.java!!!	getCamera() : Camera
        return mCameraRunner.getCamera();
!!!34767287.java!!!	lockCamera(inout context : Object) : Camera
        return mCameraRunner.lockCamera(context);
!!!34767415.java!!!	unlockCamera(inout context : Object) : void
        mCameraRunner.unlockCamera(context);
!!!34767543.java!!!	createRecorder(inout path : String, inout profile : CamcorderProfile) : void
        mCameraRunner.createRecorder(path, profile);
!!!34767671.java!!!	releaseRecorder() : void
        mCameraRunner.releaseRecorder();
!!!34767799.java!!!	startRecording() : void
        mCameraRunner.startRecording();
!!!34767927.java!!!	stopRecording() : void
        mCameraRunner.stopRecording();
!!!34768055.java!!!	getCameraId() : int
        return mCameraRunner.getCurrentCameraId();
!!!34768183.java!!!	getNumberOfCameras() : int
        // Currently, this is just the number of cameras that are available on the device.
        return Camera.getNumberOfCameras();
!!!34768311.java!!!	CameraStreamer(inout context : MffContext)
        mCameraRunner = new CameraRunnable(context);
!!!34768439.java!!!	halt() : void
        mCameraRunner.pushEvent(Event.HALT, true);
!!!34768567.java!!!	restart() : void
        mCameraRunner.pushEvent(Event.RESTART, true);
!!!34768695.java!!!	requireDummySurfaceView() : boolean
        return VERSION.SDK_INT < 15;
!!!34768823.java!!!	tearDown() : void
        mCameraRunner.pushEvent(Event.TEARDOWN, true);
