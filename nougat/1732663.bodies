class CamFrameHandler
!!!34748087.java!!!	initWithRunner(inout camRunner : CameraStreamer::CameraRunnable) : void
            mRunner = camRunner;
!!!34748215.java!!!	setCameraSize(in width : int, in height : int) : void
            mCameraWidth = width;
            mCameraHeight = height;
!!!34748343.java!!!	registerClient(inout client : CameraStreamer::FrameClient) : void
            EGLContext context = RenderTarget.currentContext();
            Set<FrameClient> clientTargets = clientsForContext(context);
            clientTargets.add(client);
            mClients.add(client);
            onRegisterClient(client, context);
!!!34748471.java!!!	unregisterClient(inout client : CameraStreamer::FrameClient) : void
            EGLContext context = RenderTarget.currentContext();
            Set<FrameClient> clientTargets = clientsForContext(context);
            clientTargets.remove(client);
            if (clientTargets.isEmpty()) {
                onCleanupContext(context);
            }
            mClients.remove(client);
!!!34749111.java!!!	onUpdateCameraOrientation(in orientation : int) : void
            if (orientation % 180 != 0) {
                mOutWidth = mCameraHeight;
                mOutHeight = mCameraWidth;
            } else {
                mOutWidth = mCameraWidth;
                mOutHeight = mCameraHeight;
            }
!!!34749239.java!!!	clientsForContext(inout context : EGLContext) : CameraStreamer::FrameClient
            Set<FrameClient> clients = mContextClients.get(context);
            if (clients == null) {
                clients = new HashSet<FrameClient>();
                mContextClients.put(context, clients);
            }
            return clients;
!!!34749495.java!!!	onCleanupContext(inout context : EGLContext) : void
            TextureSource texture = mTargetTextures.get(context);
            ImageShader shader = mTargetShaders.get(context);
            if (texture != null) {
                texture.release();
                mTargetTextures.remove(context);
            }
            if (shader != null) {
                mTargetShaders.remove(context);
            }
!!!34749623.java!!!	textureForContext(inout context : EGLContext) : TextureSource
            TextureSource texture = mTargetTextures.get(context);
            if (texture == null) {
                texture = createClientTexture();
                mTargetTextures.put(context, texture);
            }
            return texture;
!!!34749751.java!!!	shaderForContext(inout context : EGLContext) : ImageShader
            ImageShader shader = mTargetShaders.get(context);
            if (shader == null) {
                shader = createClientShader();
                mTargetShaders.put(context, shader);
            }
            return shader;
!!!34749879.java!!!	createClientShader() : ImageShader
            return null;
!!!34750007.java!!!	createClientTexture() : TextureSource
            return null;
!!!34750135.java!!!	isFrontMirrored() : boolean
            return true;
