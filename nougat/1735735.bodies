class FrameBuffer1D
!!!34780087.java!!!	lockBytes(in mode : int) : ByteBuffer
        assertAccessible(mode);
        return (ByteBuffer)mBackingStore.lockData(mode, BackingStore.ACCESS_BYTES);
!!!34780215.java!!!	lockAllocation(in mode : int) : Allocation
        assertAccessible(mode);
        return (Allocation) mBackingStore.lockData(mode, BackingStore.ACCESS_ALLOCATION);
!!!34780343.java!!!	getLength() : int
        return mLength;
!!!34780471.java!!!	getDimensions() : int
        return super.getDimensions();
!!!34780599.java!!!	resize(inout newDimensions : int) : void
        super.resize(newDimensions);
!!!34780727.java!!!	create(inout backingStore : BackingStore) : FrameBuffer1D
        assertCanCreate(backingStore);
        return new FrameBuffer1D(backingStore);
!!!34780855.java!!!	FrameBuffer1D(inout backingStore : BackingStore)
        super(backingStore);
        updateLength(backingStore.getDimensions());
!!!34780983.java!!!	assertCanCreate(inout backingStore : BackingStore) : void
        FrameType type = backingStore.getFrameType();
        if (type.getElementSize() == 0) {
            throw new RuntimeException("Cannot access Frame of type " + type + " as a FrameBuffer "
                + "instance!");
        }
        int[] dims = backingStore.getDimensions();
        if (dims == null || dims.length == 0) {
            throw new RuntimeException("Cannot access Frame with no dimensions as a FrameBuffer "
                + "instance!");
        }
!!!34781111.java!!!	updateLength(inout dimensions : int) : void
        mLength = 1;
        for (int dim : dimensions) {
            mLength *= dim;
        }
