class MotionSensor
!!!34841783.java!!!	MotionSensor(inout context : MffContext, inout name : String)
        super(context, name);
!!!34841911.java!!!	getSignature() : Signature
        return new Signature()
            .addOutputPort("values", Signature.PORT_REQUIRED, FrameType.array(float.class))
            .disallowOtherPorts();
!!!34842039.java!!!	onPrepare() : void
        mSensorManager = (SensorManager)getContext().getApplicationContext()
                            .getSystemService(Context.SENSOR_SERVICE);
        mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_LINEAR_ACCELERATION);
        // TODO: currently, the type of sensor is hardcoded. Should be able to set the sensor
        //  type as filter input!
        mSensorManager.registerListener(this, mSensor, SensorManager.SENSOR_DELAY_UI);
!!!34842167.java!!!	onTearDown() : void
        mSensorManager.unregisterListener(this);
!!!34842295.java!!!	onAccuracyChanged(inout sensor : Sensor, in accuracy : int) : void
        // (Do we need to do something when sensor accuracy changes?)
!!!34842423.java!!!	onSensorChanged(inout event : SensorEvent) : void
        synchronized(mValues) {
            mValues[0] = event.values[0];
            mValues[1] = event.values[1];
            mValues[2] = event.values[2];
        }
!!!34842551.java!!!	onProcess() : void
        OutputPort outPort = getConnectedOutputPort("values");
        FrameValues outFrame = outPort.fetchAvailableFrame(null).asFrameValues();
        synchronized(mValues) {
            outFrame.setValues(mValues);
        }
        outFrame.setTimestamp(System.currentTimeMillis() * 1000000L);
        outPort.pushFrame(outFrame);
