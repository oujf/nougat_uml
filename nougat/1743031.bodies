class StatsFilter
!!!34855991.java!!!	StatsFilter(inout context : MffContext, inout name : String)
        super(context, name);
!!!34856119.java!!!	getSignature() : Signature
        FrameType inputFrame = FrameType.buffer2D(FrameType.ELEMENT_INT8);
        FrameType floatT = FrameType.single(float.class);
        return new Signature()
                .addInputPort("buffer", Signature.PORT_REQUIRED, inputFrame)
                .addInputPort("cropRect", Signature.PORT_OPTIONAL, FrameType.single(Quad.class))
                .addOutputPort("mean", Signature.PORT_REQUIRED, floatT)
                .addOutputPort("stdev", Signature.PORT_REQUIRED, floatT)
                .disallowOtherPorts();
!!!34856247.java!!!	onInputPortOpen(inout port : InputPort) : void
        if (port.getName().equals("cropRect")) {
            port.bindToFieldNamed("mCropRect");
            port.setAutoPullEnabled(true);
        }
!!!34856375.java!!!	calcMeanAndStd(inout pixelBuffer : ByteBuffer, in width : int, in height : int, inout quad : Quad) : void
        // Native
        pixelBuffer.rewind();
        regionscore(pixelBuffer, width, height, quad.topLeft().x, quad.topLeft().y,
                quad.bottomRight().x, quad.bottomRight().y, mStats);
        if (mLogVerbose) {
            Log.v(TAG, "Native calc stats: Mean = " + mStats[MEAN_INDEX] + ", Stdev = "
                    + mStats[STDEV_INDEX]);
        }
!!!34856503.java!!!	onProcess() : void
        FrameBuffer2D inputFrame = getConnectedInputPort("buffer").pullFrame().asFrameImage2D();
        ByteBuffer pixelBuffer = inputFrame.lockBytes(Frame.MODE_READ);

        calcMeanAndStd(pixelBuffer, inputFrame.getWidth(), inputFrame.getHeight(), mCropRect);
        inputFrame.unlock();

        OutputPort outPort = getConnectedOutputPort("mean");
        FrameValue outFrame = outPort.fetchAvailableFrame(null).asFrameValue();
        outFrame.setValue(mStats[MEAN_INDEX]);
        outPort.pushFrame(outFrame);

        OutputPort outPortStdev = getConnectedOutputPort("stdev");
        FrameValue outFrameStdev = outPortStdev.fetchAvailableFrame(null).asFrameValue();
        outFrameStdev.setValue(mStats[STDEV_INDEX]);
        outPortStdev.pushFrame(outFrameStdev);
