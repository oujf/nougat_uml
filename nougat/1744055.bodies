class TransformUtils
!!!34864439.java!!!	powOf2(in x : int) : int
        --x;
        // Fill with 1s
        x |= x >> 1;
        x |= x >> 2;
        x |= x >> 4;
        x |= x >> 8;
        x |= x >> 16;
        // Next int is now pow-of-2
        return x + 1;
!!!34864567.java!!!	makeMipMappedFrame(inout current : FrameImage2D, inout dimensions : int) : FrameImage2D
        // Note: Future versions of GLES will support NPOT mipmapping. When these become more
        // widely used, we can add a check here to disable frame expansion on such devices.
        int[] pow2Dims = new int[] { powOf2(dimensions[0]), powOf2(dimensions[1]) };
        if (current == null) {
            FrameType imageType = FrameType.image2D(FrameType.ELEMENT_RGBA8888,
                                                    FrameType.READ_GPU | FrameType.WRITE_GPU);
            current = Frame.create(imageType, pow2Dims).asFrameImage2D();
        } else if (!Arrays.equals(dimensions, current.getDimensions())) {
            current.resize(pow2Dims);
        }
        return current;
!!!34864695.java!!!	makeTempFrame(inout current : FrameImage2D, inout dimensions : int) : FrameImage2D
        if (current == null) {
            FrameType imageType = FrameType.image2D(FrameType.ELEMENT_RGBA8888,
                                                    FrameType.READ_GPU | FrameType.WRITE_GPU);
            current = Frame.create(imageType, dimensions).asFrameImage2D();
        } else if (!Arrays.equals(dimensions, current.getDimensions())) {
            current.resize(dimensions);
        }
        return current;
!!!34864823.java!!!	generateMipMaps(inout frame : FrameImage2D) : void
        TextureSource texture = frame.lockTextureSource();
        texture.generateMipmaps();
        frame.unlock();
!!!34864951.java!!!	setTextureParameter(inout frame : FrameImage2D, in param : int, in value : int) : void
        TextureSource texture = frame.lockTextureSource();
        texture.setParameter(param, value);
        frame.unlock();
