class AudioTrackDecoder
!!!34868407.java!!!	AudioTrackDecoder(in trackIndex : int, inout format : MediaFormat, inout listener : TrackDecoder::Listener)
        super(trackIndex, format, listener);

        if (!DecoderUtil.isAudioFormat(format)) {
            throw new IllegalArgumentException(
                    "AudioTrackDecoder can only be used with audio formats");
        }

        mAudioByteStream = new ByteArrayOutputStream();
        mAudioByteStreamLock = new Object();

        mAudioSampleRate = format.getInteger(MediaFormat.KEY_SAMPLE_RATE);
        mAudioChannelCount = format.getInteger(MediaFormat.KEY_CHANNEL_COUNT);
!!!34868535.java!!!	initMediaCodec(inout format : MediaFormat) : MediaCodec
        MediaCodec mediaCodec;
        try {
            mediaCodec = MediaCodec.createDecoderByType(
                    format.getString(MediaFormat.KEY_MIME));
        } catch (IOException e) {
            throw new RuntimeException(
                    "failed to create decoder for "
                    + format.getString(MediaFormat.KEY_MIME), e);
        }
        mediaCodec.configure(format, null, null, 0);
        return mediaCodec;
!!!34868663.java!!!	onDataAvailable(inout codec : MediaCodec, inout buffers : ByteBuffer, in bufferIndex : int, inout info : MediaCodec::BufferInfo) : boolean
        ByteBuffer buffer = buffers[bufferIndex];
        byte[] data = new byte[info.size];
        buffer.position(info.offset);
        buffer.get(data, 0, info.size);

        synchronized (mAudioByteStreamLock) {
            try {
                if (mAudioByteStream.size() == 0 && data.length > 0) {
                    mAudioPresentationTimeUs = info.presentationTimeUs;
                }

                mAudioByteStream.write(data);
            } catch (IOException e) {
                // Just drop the audio sample.
            }
        }

        buffer.clear();
        codec.releaseOutputBuffer(bufferIndex, false);
        notifyListener();
        return true;
!!!34868791.java!!!	grabSample(inout audioFrame : FrameValue) : void
        synchronized (mAudioByteStreamLock) {
            if (audioFrame != null) {
                AudioSample sample = new AudioSample(
                        mAudioSampleRate, mAudioChannelCount, mAudioByteStream.toByteArray());
                audioFrame.setValue(sample);
                audioFrame.setTimestamp(mAudioPresentationTimeUs * 1000);
            }
            clearBuffer();
        }
!!!34868919.java!!!	clearBuffer() : void
        synchronized (mAudioByteStreamLock) {
            mAudioByteStream.reset();
        }
