class EncodedArrayItem
!!!516919.java!!!	EncodedArrayItem(inout array : CstArray)
        /*
         * The write size isn't known up-front because (the variable-lengthed)
         * leb128 type is used to represent some things.
         */
        super(ALIGNMENT, -1);

        if (array == null) {
            throw new NullPointerException("array == null");
        }

        this.array = array;
        this.encodedForm = null;
!!!517047.java!!!	itemType() : ItemType
        return ItemType.TYPE_ENCODED_ARRAY_ITEM;
!!!517175.java!!!	hashCode() : int
        return array.hashCode();
!!!517303.java!!!	compareTo0(inout other : OffsettedItem) : int
        EncodedArrayItem otherArray = (EncodedArrayItem) other;

        return array.compareTo(otherArray.array);
!!!517431.java!!!	toHuman() : String
        return array.toHuman();
!!!517559.java!!!	addContents(inout file : DexFile) : void
        ValueEncoder.addContents(file, array);
!!!517687.java!!!	place0(inout addedTo : Section, in offset : int) : void
        // Encode the data and note the size.

        ByteArrayAnnotatedOutput out = new ByteArrayAnnotatedOutput();
        ValueEncoder encoder = new ValueEncoder(addedTo.getFile(), out);

        encoder.writeArray(array, false);
        encodedForm = out.toByteArray();
        setWriteSize(encodedForm.length);
!!!517815.java!!!	writeTo0(inout file : DexFile, inout out : AnnotatedOutput) : void
        boolean annotates = out.annotates();

        if (annotates) {
            out.annotate(0, offsetString() + " encoded array");

            /*
             * The output is to be annotated, so redo the work previously
             * done by place0(), except this time annotations will actually
             * get emitted.
             */
            ValueEncoder encoder = new ValueEncoder(file, out);
            encoder.writeArray(array, true);
        } else {
            out.write(encodedForm);
        }
