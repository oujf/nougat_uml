class FieldIdsSection
!!!524855.java!!!	FieldIdsSection(inout file : DexFile)
        super("field_ids", file);

        fieldIds = new TreeMap<CstFieldRef, FieldIdItem>();
!!!524983.java!!!	items() : Collection<? extends Item>
        return fieldIds.values();
!!!525111.java!!!	get(inout cst : Constant) : IndexedItem
        if (cst == null) {
            throw new NullPointerException("cst == null");
        }

        throwIfNotPrepared();

        IndexedItem result = fieldIds.get((CstFieldRef) cst);

        if (result == null) {
            throw new IllegalArgumentException("not found");
        }

        return result;
!!!525239.java!!!	writeHeaderPart(inout out : AnnotatedOutput) : void
        throwIfNotPrepared();

        int sz = fieldIds.size();
        int offset = (sz == 0) ? 0 : getFileOffset();

        if (out.annotates()) {
            out.annotate(4, "field_ids_size:  " + Hex.u4(sz));
            out.annotate(4, "field_ids_off:   " + Hex.u4(offset));
        }

        out.writeInt(sz);
        out.writeInt(offset);
!!!525367.java!!!	intern(inout field : CstFieldRef) : FieldIdItem
        if (field == null) {
            throw new NullPointerException("field == null");
        }

        throwIfPrepared();

        FieldIdItem result = fieldIds.get(field);

        if (result == null) {
            result = new FieldIdItem(field);
            fieldIds.put(field, result);
        }

        return result;
!!!525495.java!!!	indexOf(inout ref : CstFieldRef) : int
        if (ref == null) {
            throw new NullPointerException("ref == null");
        }

        throwIfNotPrepared();

        FieldIdItem item = fieldIds.get(ref);

        if (item == null) {
            throw new IllegalArgumentException("not found");
        }

        return item.getIndex();
