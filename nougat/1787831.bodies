class Transform3dView
!!!35012791.java!!!	Transform3dView(inout c : Context)
            super(c);

            mBitmap1 = BitmapFactory.decodeResource(c.getResources(), R.drawable.sunset1);
            mCamera = new Camera();
            mMatrix = new Matrix();
!!!35012919.java!!!	onDraw(inout canvas : Canvas) : void
            super.onDraw(canvas);

            canvas.drawARGB(255, 255, 255, 255);

            final float centerX = getWidth() / 2.0f - mBitmap1.getWidth() / 2.0f;
            final float centerY = getHeight() / 2.0f - mBitmap1.getHeight() / 2.0f;
            final Camera camera = mCamera;
            
            final Matrix matrix = mMatrix;

            rotate(centerX, centerY, camera, matrix, 32.0f);
            drawBitmap(canvas, centerX, centerY, 0.0f, matrix);

            rotate(centerX, centerY, camera, matrix, 12.0f);
            drawBitmap(canvas, centerX, centerY, -mBitmap1.getWidth(), matrix);
            
            rotate(centerX, centerY, camera, matrix, 52.0f);
            drawBitmap(canvas, centerX, centerY, mBitmap1.getWidth(), matrix);
            
            rotate(centerX, centerY, camera, matrix, 122.0f);
            drawBitmap(canvas, centerX, centerY, mBitmap1.getWidth() * 2.0f, matrix);
            
!!!35013047.java!!!	drawBitmap(inout canvas : Canvas, in centerX : float, in centerY : float, in offset : float, inout matrix : Matrix) : void
            canvas.save();
            canvas.translate(offset, 0.0f);
            canvas.concat(matrix);
            canvas.drawBitmap(mBitmap1, centerX, centerY, null);
            canvas.restore();
!!!35013175.java!!!	rotate(in centerX : float, in centerY : float, inout camera : Camera, inout matrix : Matrix, in angle : float) : void
            camera.save();
            camera.rotateY(angle);
            camera.getMatrix(matrix);
            camera.restore();

            matrix.preTranslate(-centerX, -centerY);
            matrix.postTranslate(centerX, centerY);
