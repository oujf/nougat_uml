class TrackerActivity
!!!35033399.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);

        mDataHelper = new TrackerListHelper(this);
        mDataHelper.bindListUI(R.layout.entrylist_item);
!!!35033527.java!!!	onCreateOptionsMenu(inout menu : Menu) : boolean
        MenuInflater menuInflater = getMenuInflater();
        menuInflater.inflate(R.menu.menu, menu);
        return true;
!!!35033655.java!!!	onOptionsItemSelected(inout item : MenuItem) : boolean
        switch (item.getItemId()) {
            case R.id.start_service_menu: {
                startService(new Intent(TrackerActivity.this,
                        TrackerService.class));
                break;
            }
            case R.id.stop_service_menu: {
                stopService(new Intent(TrackerActivity.this,
                        TrackerService.class));
                break;
            }
            case R.id.settings_menu: {
                launchSettings();
                break;
            }
            case R.id.export_kml: {
                exportKML();
                break;
            }
            case R.id.export_csv: {
                exportCSV();
                break;
            }
            case R.id.clear_data_menu: {
                clearData();
                break;
            }
        }
        return super.onOptionsItemSelected(item);
!!!35033783.java!!!	clearData() : void
        Runnable clearAction = new Runnable() {
            public void run() {
                TrackerDataHelper helper =
                    new TrackerDataHelper(TrackerActivity.this);
                helper.deleteAll();
            }
        };
        showConfirm(R.string.delete_confirm, clearAction);
!!!35033911.java!!!	showConfirm(in textId : int, in onConfirmAction : Runnable) : void
        AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(this);
        dialogBuilder.setTitle(R.string.confirm_title);
        dialogBuilder.setMessage(textId);
        dialogBuilder.setPositiveButton(android.R.string.ok,
                new OnClickListener() {
            public void onClick(DialogInterface dialog, int which) {
                onConfirmAction.run();
            }
        });
        dialogBuilder.setNegativeButton(android.R.string.cancel,
                new OnClickListener() {
            public void onClick(DialogInterface dialog, int which) {
                // do nothing
            }
        });
        dialogBuilder.show();
!!!35034039.java!!!	exportCSV() : void
        String exportFileName = getUniqueFileName("csv");
        exportFile(null, exportFileName, new TrackerDataHelper(this,
                TrackerDataHelper.CSV_FORMATTER));
!!!35034167.java!!!	exportKML() : void
        String exportFileName = getUniqueFileName(
                LocationManager.NETWORK_PROVIDER + ".kml");
        exportFile(LocationManager.NETWORK_PROVIDER, exportFileName,
                new TrackerDataHelper(this, TrackerDataHelper.KML_FORMATTER));
        exportFileName = getUniqueFileName(
                LocationManager.GPS_PROVIDER + ".kml");
        exportFile(LocationManager.GPS_PROVIDER, exportFileName,
                new TrackerDataHelper(this, TrackerDataHelper.KML_FORMATTER));
!!!35034295.java!!!	exportFile(inout tagFilter : String, inout exportFileName : String, inout trackerData : TrackerDataHelper) : void
        BufferedWriter exportWriter = null;
        Cursor cursor = trackerData.query(tagFilter);
        try {
            exportWriter = new BufferedWriter(new FileWriter(exportFileName));
            exportWriter.write(trackerData.getOutputHeader());

            String line = null;

            while ((line = trackerData.getNextOutput(cursor)) != null) {
                exportWriter.write(line);
            }
            exportWriter.write(trackerData.getOutputFooter());
            Toast.makeText(this, "Successfully exported data to " +
                    exportFileName, Toast.LENGTH_SHORT).show();

        } catch (IOException e) {
            Toast.makeText(this, "Error exporting file: " +
                    e.getLocalizedMessage(), Toast.LENGTH_SHORT).show();

            Log.e(LOG_TAG, "Error exporting file", e);
        } finally {
            closeWriter(exportWriter);
            if (cursor != null) {
                cursor.close();
            }
        }
!!!35034423.java!!!	closeWriter(inout exportWriter : Writer) : void
        if (exportWriter != null) {
            try {
                exportWriter.close();
            } catch (IOException e) {
                Log.e(LOG_TAG, "error closing file", e);
            }
        }
!!!35034551.java!!!	getUniqueFileName(inout ext : String) : String
        File dir = new File(Environment.getExternalStorageDirectory() + "/locationtracker");
        if (!dir.exists()) {
            dir.mkdir();
        }
        return dir + "/tracking-" + DateUtils.getCurrentTimestamp() + "." + ext;
!!!35034679.java!!!	launchSettings() : void
        Intent settingsIntent = new Intent();
        settingsIntent.setClass(this, SettingsActivity.class);
        startActivity(settingsIntent);
