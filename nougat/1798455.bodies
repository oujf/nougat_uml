class MainActivity
!!!35045943.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mBackgroundPolling = new Runnable() {
            // Poll lock task state and set background pink if locked, otherwise white.
            @Override
            public void run() {
                if (!mRunning) {
                    return;
                }
                ActivityManager activityManager =
                        (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
                final int color = activityManager.getLockTaskModeState() !=
                        ActivityManager.LOCK_TASK_MODE_NONE ? 0xFFFFC0C0 : 0xFFFFFFFF;
                findViewById(R.id.root_launch).setBackgroundColor(color);
                mHandler.postDelayed(this, 500);
            }
        };
        mHandler = new Handler(Looper.getMainLooper());
!!!35046071.java!!!	onResume() : void
        super.onResume();
        mRunning = true;
        mBackgroundPolling.run();
!!!35046199.java!!!	onPause() : void
        super.onPause();
        mRunning = false;
!!!35046327.java!!!	onButtonPressed(inout v : View) : void
        Class activity = null;
        switch (v.getId()) {
            case R.id.button_default:
                activity = LockDefaultActivity.class;
                break;
            case R.id.button_never:
                activity = LockTaskNeverActivity.class;
                break;
            case R.id.button_whitelist:
                activity = LockWhitelistedActivity.class;
                break;
            case R.id.button_always:
                activity = LockAtLaunchActivity.class;
                break;
        }
        Intent intent = new Intent(this, activity);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(intent);
!!!35046455.java!!!	onToast(inout v : View) : void
        showLockTaskEscapeMessage();
