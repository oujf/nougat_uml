class ActivityCompat
!!!35076535.java!!!	invalidateOptionsMenu(inout activity : Activity) : boolean
        if (Build.VERSION.SDK_INT >= 11) {
            ActivityCompatHoneycomb.invalidateOptionsMenu(activity);
            return true;
        }
        return false;
!!!35076663.java!!!	startActivity(inout activity : Activity, inout intent : Intent, inout options : Bundle) : void
        if (Build.VERSION.SDK_INT >= 16) {
            ActivityCompatJB.startActivity(activity, intent, options);
        } else {
            activity.startActivity(intent);
        }
!!!35076791.java!!!	startActivityForResult(inout activity : Activity, inout intent : Intent, in requestCode : int, inout options : Bundle) : void
        if (Build.VERSION.SDK_INT >= 16) {
            ActivityCompatJB.startActivityForResult(activity, intent, requestCode, options);
        } else {
            activity.startActivityForResult(intent, requestCode);
        }
!!!35076919.java!!!	startIntentSenderForResult(inout activity : Activity, inout intent : IntentSender, in requestCode : int, inout fillInIntent : Intent, in flagsMask : int, in flagsValues : int, in extraFlags : int, inout options : Bundle) : void
        if (Build.VERSION.SDK_INT >= 16) {
            ActivityCompatJB.startIntentSenderForResult(activity, intent, requestCode, fillInIntent,
                    flagsMask, flagsValues, extraFlags, options);
        } else if (Build.VERSION.SDK_INT >= 5) {
            ActivityCompatEclair.startIntentSenderForResult(activity, intent, requestCode,
                    fillInIntent, flagsMask, flagsValues, extraFlags);
        }
!!!35077047.java!!!	finishAffinity(inout activity : Activity) : void
        if (Build.VERSION.SDK_INT >= 16) {
            ActivityCompatJB.finishAffinity(activity);
        } else {
            activity.finish();
        }
!!!35077175.java!!!	finishAfterTransition(inout activity : Activity) : void
        if (Build.VERSION.SDK_INT >= 21) {
            ActivityCompat21.finishAfterTransition(activity);
        } else {
            activity.finish();
        }
!!!35077303.java!!!	getReferrer(inout activity : Activity) : Uri
        if (Build.VERSION.SDK_INT >= 22) {
            return ActivityCompat22.getReferrer(activity);
        }
        Intent intent = activity.getIntent();
        Uri referrer = intent.getParcelableExtra("android.intent.extra.REFERRER");
        if (referrer != null) {
            return referrer;
        }
        String referrerName = intent.getStringExtra("android.intent.extra.REFERRER_NAME");
        if (referrerName != null) {
            return Uri.parse(referrerName);
        }
        return null;
!!!35077431.java!!!	setEnterSharedElementCallback(inout activity : Activity, inout callback : SharedElementCallback) : void
        if (Build.VERSION.SDK_INT >= 21) {
            ActivityCompat21.setEnterSharedElementCallback(activity, createCallback(callback));
        }
!!!35077559.java!!!	setExitSharedElementCallback(inout activity : Activity, inout callback : SharedElementCallback) : void
        if (Build.VERSION.SDK_INT >= 21) {
            ActivityCompat21.setExitSharedElementCallback(activity, createCallback(callback));
        }
!!!35077687.java!!!	postponeEnterTransition(inout activity : Activity) : void
        if (Build.VERSION.SDK_INT >= 21) {
            ActivityCompat21.postponeEnterTransition(activity);
        }
!!!35077815.java!!!	startPostponedEnterTransition(inout activity : Activity) : void
        if (Build.VERSION.SDK_INT >= 21) {
            ActivityCompat21.startPostponedEnterTransition(activity);
        }
!!!35077943.java!!!	requestPermissions(in activity : Activity, in permissions : String, in requestCode : int) : void
        if (Build.VERSION.SDK_INT >= 23) {
            ActivityCompatApi23.requestPermissions(activity, permissions, requestCode);
        } else if (activity instanceof OnRequestPermissionsResultCallback) {
            Handler handler = new Handler(Looper.getMainLooper());
            handler.post(new Runnable() {
                @Override
                public void run() {
                    final int[] grantResults = new int[permissions.length];

                    PackageManager packageManager = activity.getPackageManager();
                    String packageName = activity.getPackageName();

                    final int permissionCount = permissions.length;
                    for (int i = 0; i < permissionCount; i++) {
                        grantResults[i] = packageManager.checkPermission(
                                permissions[i], packageName);
                    }

                    ((OnRequestPermissionsResultCallback) activity).onRequestPermissionsResult(
                            requestCode, permissions, grantResults);
                }
            });
        }
!!!35078071.java!!!	shouldShowRequestPermissionRationale(inout activity : Activity, inout permission : String) : boolean
        if (Build.VERSION.SDK_INT >= 23) {
            return ActivityCompatApi23.shouldShowRequestPermissionRationale(activity, permission);
        }
        return false;
!!!35078199.java!!!	createCallback(inout callback : SharedElementCallback) : ActivityCompat21::SharedElementCallback21
        ActivityCompat21.SharedElementCallback21 newCallback = null;
        if (callback != null) {
            newCallback = new ActivityCompat.SharedElementCallback21Impl(callback);
        }
        return newCallback;
