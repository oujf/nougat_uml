class AppCompatActivity
!!!35097527.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        final AppCompatDelegate delegate = getDelegate();
        delegate.installViewFactory();
        delegate.onCreate(savedInstanceState);
        if (delegate.applyDayNight() && mThemeId != 0) {
            // If DayNight has been applied, we need to re-apply the theme for
            // the changes to take effect. On API 23+, we should bypass
            // setTheme(), which will no-op if the theme ID is identical to the
            // current theme ID.
            if (Build.VERSION.SDK_INT >= 23) {
                onApplyThemeResource(getTheme(), mThemeId, false);
            } else {
                setTheme(mThemeId);
            }
        }
        super.onCreate(savedInstanceState);
!!!35097655.java!!!	setTheme(in resid : int) : void
        super.setTheme(resid);
        // Keep hold of the theme id so that we can re-set it later if needed
        mThemeId = resid;
!!!35097783.java!!!	onPostCreate(inout savedInstanceState : Bundle) : void
        super.onPostCreate(savedInstanceState);
        getDelegate().onPostCreate(savedInstanceState);
!!!35097911.java!!!	getSupportActionBar() : ActionBar
        return getDelegate().getSupportActionBar();
!!!35098039.java!!!	setSupportActionBar(inout toolbar : Toolbar) : void
        getDelegate().setSupportActionBar(toolbar);
!!!35098167.java!!!	getMenuInflater() : MenuInflater
        return getDelegate().getMenuInflater();
!!!35098295.java!!!	setContentView(in layoutResID : int) : void
        getDelegate().setContentView(layoutResID);
!!!35098423.java!!!	setContentView(inout view : View) : void
        getDelegate().setContentView(view);
!!!35098551.java!!!	setContentView(inout view : View, inout params : ViewGroup::LayoutParams) : void
        getDelegate().setContentView(view, params);
!!!35098679.java!!!	addContentView(inout view : View, inout params : ViewGroup::LayoutParams) : void
        getDelegate().addContentView(view, params);
!!!35098807.java!!!	onConfigurationChanged(inout newConfig : Configuration) : void
        super.onConfigurationChanged(newConfig);
        getDelegate().onConfigurationChanged(newConfig);
        if (mResources != null) {
            // The real (and thus managed) resources object was already updated
            // by ResourcesManager, so pull the current metrics from there.
            final DisplayMetrics newMetrics = super.getResources().getDisplayMetrics();
            mResources.updateConfiguration(newConfig, newMetrics);
        }
!!!35098935.java!!!	onStop() : void
        super.onStop();
        getDelegate().onStop();
!!!35099063.java!!!	onPostResume() : void
        super.onPostResume();
        getDelegate().onPostResume();
!!!35099191.java!!!	findViewById(in id : int) : View
        return getDelegate().findViewById(id);
!!!35099319.java!!!	onMenuItemSelected(in featureId : int, inout item : MenuItem) : boolean
        if (super.onMenuItemSelected(featureId, item)) {
            return true;
        }

        final ActionBar ab = getSupportActionBar();
        if (item.getItemId() == android.R.id.home && ab != null &&
                (ab.getDisplayOptions() & ActionBar.DISPLAY_HOME_AS_UP) != 0) {
            return onSupportNavigateUp();
        }
        return false;
!!!35099447.java!!!	onDestroy() : void
        super.onDestroy();
        getDelegate().onDestroy();
!!!35099575.java!!!	onTitleChanged(inout title : CharSequence, in color : int) : void
        super.onTitleChanged(title, color);
        getDelegate().setTitle(title);
!!!35099703.java!!!	supportRequestWindowFeature(in featureId : int) : boolean
        return getDelegate().requestWindowFeature(featureId);
!!!35099831.java!!!	supportInvalidateOptionsMenu() : void
        getDelegate().invalidateOptionsMenu();
!!!35099959.java!!!	invalidateOptionsMenu() : void
        getDelegate().invalidateOptionsMenu();
!!!35100343.java!!!	onWindowStartingSupportActionMode(inout callback : ActionMode::Callback) : ActionMode
        return null;
!!!35100471.java!!!	startSupportActionMode(inout callback : ActionMode::Callback) : ActionMode
        return getDelegate().startSupportActionMode(callback);
!!!35101111.java!!!	onCreateSupportNavigateUpTaskStack(inout builder : TaskStackBuilder) : void
        builder.addParentStack(this);
!!!35101367.java!!!	onSupportNavigateUp() : boolean
        Intent upIntent = getSupportParentActivityIntent();

        if (upIntent != null) {
            if (supportShouldUpRecreateTask(upIntent)) {
                TaskStackBuilder b = TaskStackBuilder.create(this);
                onCreateSupportNavigateUpTaskStack(b);
                onPrepareSupportNavigateUpTaskStack(b);
                b.startActivities();

                try {
                    ActivityCompat.finishAffinity(this);
                } catch (IllegalStateException e) {
                    // This can only happen on 4.1+, when we don't have a parent or a result set.
                    // In that case we should just finish().
                    finish();
                }
            } else {
                // This activity is part of the application's task, so simply
                // navigate up to the hierarchical parent activity.
                supportNavigateUpTo(upIntent);
            }
            return true;
        }
        return false;
!!!35101495.java!!!	getSupportParentActivityIntent() : Intent
        return NavUtils.getParentActivityIntent(this);
!!!35101623.java!!!	supportShouldUpRecreateTask(inout targetIntent : Intent) : boolean
        return NavUtils.shouldUpRecreateTask(this, targetIntent);
!!!35101751.java!!!	supportNavigateUpTo(inout upIntent : Intent) : void
        NavUtils.navigateUpTo(this, upIntent);
!!!35101879.java!!!	onContentChanged() : void
        // Call onSupportContentChanged() for legacy reasons
        onSupportContentChanged();
!!!35102135.java!!!	getDrawerToggleDelegate() : ActionBarDrawerToggle::Delegate
        return getDelegate().getDrawerToggleDelegate();
!!!35102263.java!!!	onMenuOpened(in featureId : int, inout menu : Menu) : boolean
        return super.onMenuOpened(featureId, menu);
!!!35102391.java!!!	onPanelClosed(in featureId : int, inout menu : Menu) : void
        super.onPanelClosed(featureId, menu);
!!!35102519.java!!!	onSaveInstanceState(inout outState : Bundle) : void
        super.onSaveInstanceState(outState);
        getDelegate().onSaveInstanceState(outState);
!!!35102647.java!!!	getDelegate() : AppCompatDelegate
        if (mDelegate == null) {
            mDelegate = AppCompatDelegate.create(this, this);
        }
        return mDelegate;
!!!35102775.java!!!	dispatchKeyEvent(inout event : KeyEvent) : boolean
        if (KeyEventCompat.isCtrlPressed(event) &&
                event.getUnicodeChar(event.getMetaState() & ~KeyEvent.META_CTRL_MASK) == '<') {
            // Capture the Control-< and send focus to the ActionBar
            final int action = event.getAction();
            if (action == KeyEvent.ACTION_DOWN) {
                final ActionBar actionBar = getSupportActionBar();
                if (actionBar != null && actionBar.isShowing() && actionBar.requestFocus()) {
                    mEatKeyUpEvent = true;
                    return true;
                }
            } else if (action == KeyEvent.ACTION_UP && mEatKeyUpEvent) {
                mEatKeyUpEvent = false;
                return true;
            }
        }
        return super.dispatchKeyEvent(event);
!!!35102903.java!!!	getResources() : Resources
        if (mResources == null && VectorEnabledTintResources.shouldBeUsed()) {
            mResources = new VectorEnabledTintResources(this, super.getResources());
        }
        return mResources == null ? super.getResources() : mResources;
