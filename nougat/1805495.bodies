class ActionBarDrawerToggle
!!!35087671.java!!!	ActionBarDrawerToggle(inout activity : Activity, inout drawerLayout : DrawerLayout, in openDrawerContentDescRes : int, in closeDrawerContentDescRes : int)
        this(activity, null, drawerLayout, null, openDrawerContentDescRes,
                closeDrawerContentDescRes);
!!!35087799.java!!!	ActionBarDrawerToggle(inout activity : Activity, inout drawerLayout : DrawerLayout, inout toolbar : Toolbar, in openDrawerContentDescRes : int, in closeDrawerContentDescRes : int)
        this(activity, toolbar, drawerLayout, null, openDrawerContentDescRes,
                closeDrawerContentDescRes);
!!!35087927.java!!!	ActionBarDrawerToggle(inout activity : Activity, inout toolbar : Toolbar, inout drawerLayout : DrawerLayout, inout slider : T, in openDrawerContentDescRes : int, in closeDrawerContentDescRes : int)
        if (toolbar != null) {
            mActivityImpl = new ToolbarCompatDelegate(toolbar);
            toolbar.setNavigationOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    if (mDrawerIndicatorEnabled) {
                        toggle();
                    } else if (mToolbarNavigationClickListener != null) {
                        mToolbarNavigationClickListener.onClick(v);
                    }
                }
            });
        } else if (activity instanceof DelegateProvider) { // Allow the Activity to provide an impl
            mActivityImpl = ((DelegateProvider) activity).getDrawerToggleDelegate();
        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
            mActivityImpl = new JellybeanMr2Delegate(activity);
        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            mActivityImpl = new HoneycombDelegate(activity);
        } else {
            mActivityImpl = new DummyDelegate(activity);
        }

        mDrawerLayout = drawerLayout;
        mOpenDrawerContentDescRes = openDrawerContentDescRes;
        mCloseDrawerContentDescRes = closeDrawerContentDescRes;
        if (slider == null) {
            mSlider = new DrawerArrowDrawableToggle(activity,
                    mActivityImpl.getActionBarThemedContext());
        } else {
            mSlider = slider;
        }

        mHomeAsUpIndicator = getThemeUpIndicator();
!!!35088055.java!!!	syncState() : void
        if (mDrawerLayout.isDrawerOpen(GravityCompat.START)) {
            mSlider.setPosition(1);
        } else {
            mSlider.setPosition(0);
        }
        if (mDrawerIndicatorEnabled) {
            setActionBarUpIndicator((Drawable) mSlider,
                    mDrawerLayout.isDrawerOpen(GravityCompat.START) ?
                            mCloseDrawerContentDescRes : mOpenDrawerContentDescRes);
        }
!!!35088183.java!!!	onConfigurationChanged(inout newConfig : Configuration) : void
        // Reload drawables that can change with configuration
        if (!mHasCustomUpIndicator) {
            mHomeAsUpIndicator = getThemeUpIndicator();
        }
        syncState();
!!!35088311.java!!!	onOptionsItemSelected(inout item : MenuItem) : boolean
        if (item != null && item.getItemId() == android.R.id.home && mDrawerIndicatorEnabled) {
            toggle();
            return true;
        }
        return false;
!!!35088439.java!!!	toggle() : void
        int drawerLockMode = mDrawerLayout.getDrawerLockMode(GravityCompat.START);
        if (mDrawerLayout.isDrawerVisible(GravityCompat.START)
                && (drawerLockMode != DrawerLayout.LOCK_MODE_LOCKED_OPEN)) {
            mDrawerLayout.closeDrawer(GravityCompat.START);
        } else if (drawerLockMode != DrawerLayout.LOCK_MODE_LOCKED_CLOSED) {
            mDrawerLayout.openDrawer(GravityCompat.START);
        }
!!!35088567.java!!!	setHomeAsUpIndicator(inout indicator : Drawable) : void
        if (indicator == null) {
            mHomeAsUpIndicator = getThemeUpIndicator();
            mHasCustomUpIndicator = false;
        } else {
            mHomeAsUpIndicator = indicator;
            mHasCustomUpIndicator = true;
        }

        if (!mDrawerIndicatorEnabled) {
            setActionBarUpIndicator(mHomeAsUpIndicator, 0);
        }
!!!35088695.java!!!	setHomeAsUpIndicator(in resId : int) : void
        Drawable indicator = null;
        if (resId != 0) {
            indicator = mDrawerLayout.getResources().getDrawable(resId);
        }
        setHomeAsUpIndicator(indicator);
!!!35088823.java!!!	isDrawerIndicatorEnabled() : boolean
        return mDrawerIndicatorEnabled;
!!!35088951.java!!!	setDrawerIndicatorEnabled(inout enable : boolean) : void
        if (enable != mDrawerIndicatorEnabled) {
            if (enable) {
                setActionBarUpIndicator((Drawable) mSlider,
                        mDrawerLayout.isDrawerOpen(GravityCompat.START) ?
                                mCloseDrawerContentDescRes : mOpenDrawerContentDescRes);
            } else {
                setActionBarUpIndicator(mHomeAsUpIndicator, 0);
            }
            mDrawerIndicatorEnabled = enable;
        }
!!!35089079.java!!!	onDrawerSlide(inout drawerView : View, in slideOffset : float) : void
        mSlider.setPosition(Math.min(1f, Math.max(0, slideOffset)));
!!!35089207.java!!!	onDrawerOpened(inout drawerView : View) : void
        mSlider.setPosition(1);
        if (mDrawerIndicatorEnabled) {
            setActionBarDescription(mCloseDrawerContentDescRes);
        }
!!!35089335.java!!!	onDrawerClosed(inout drawerView : View) : void
        mSlider.setPosition(0);
        if (mDrawerIndicatorEnabled) {
            setActionBarDescription(mOpenDrawerContentDescRes);
        }
!!!35089591.java!!!	getToolbarNavigationClickListener() : View::OnClickListener
        return mToolbarNavigationClickListener;
!!!35089719.java!!!	setToolbarNavigationClickListener(inout onToolbarNavigationClickListener : View::OnClickListener) : void
        mToolbarNavigationClickListener = onToolbarNavigationClickListener;
!!!35089847.java!!!	setActionBarUpIndicator(inout upDrawable : Drawable, in contentDescRes : int) : void
        if (!mWarnedForDisplayHomeAsUp && !mActivityImpl.isNavigationVisible()) {
            Log.w("ActionBarDrawerToggle", "DrawerToggle may not show up because NavigationIcon"
                    + " is not visible. You may need to call "
                    + "actionbar.setDisplayHomeAsUpEnabled(true);");
            mWarnedForDisplayHomeAsUp = true;
        }
        mActivityImpl.setActionBarUpIndicator(upDrawable, contentDescRes);
!!!35089975.java!!!	setActionBarDescription(in contentDescRes : int) : void
        mActivityImpl.setActionBarDescription(contentDescRes);
!!!35090103.java!!!	getThemeUpIndicator() : Drawable
        return mActivityImpl.getThemeUpIndicator();
