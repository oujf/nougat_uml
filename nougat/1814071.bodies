class SharedLibraryMain
!!!35143351.java!!!	getVersion(inout context : Context) : int
        PackageInfo pi = null;
        try {
            pi = context.getPackageManager().getPackageInfo(LIBRARY_PACKAGE, 0);
            return pi.versionCode;
        } catch (PackageManager.NameNotFoundException e) {
            throw new IllegalStateException("Can't find my package!", e);
        }
!!!35143479.java!!!	ensureVersion(in activity : Activity, in minVersion : int) : boolean
        final FragmentManager fm = activity.getFragmentManager();
        final String dialogTag = LIBRARY_PACKAGE + ":version";
        Fragment curDialog = fm.findFragmentByTag(dialogTag);

        if (getVersion(activity) >= minVersion) {
            // Library version is sufficient.  Make sure any version dialog
            // we had shown is removed before returning.
            if (curDialog != null) {
                fm.beginTransaction().remove(curDialog).commitAllowingStateLoss();
            }
            return true;
        }

        // The current version of the library does not meet the required version.
        // If we don't already have a version dialog displayed, display it now.
        if (curDialog == null) {
            curDialog = new VersionDialog();
            fm.beginTransaction().add(curDialog, dialogTag).commitAllowingStateLoss();
        }

        // Tell the caller that the current version is not sufficient.
        return false;
