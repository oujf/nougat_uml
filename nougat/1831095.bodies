class WakeLoopService
!!!35201335.java!!!	onBind(inout intent : Intent) : IBinder
        // no binding, just start via intent
        return null;
!!!35201463.java!!!	onStartCommand(inout intent : Intent, in flags : int, in startId : int) : int
        // get wakeup interval from intent
        long wakeupInterval = intent.getLongExtra(WAKEUP_INTERNAL, 0);
        long maxLoop = intent.getLongExtra(MAX_LOOP, 0);

        if (wakeupInterval == 0) {
            // stop and error
            Log.e(LOG_TAG, "No wakeup interval specified, not starting the service");
            stopSelf();
            return START_NOT_STICKY;
        }
        FileUtil.get().writeDateToFile(new File(Environment.getExternalStorageDirectory(),
                "wakeup-loop-start.txt"));
        Log.d(LOG_TAG, String.format("WakeLoop: STARTED interval = %d, total loop = %d",
                wakeupInterval, maxLoop));
        // calculate when device should be waken up
        long atTime = SystemClock.elapsedRealtime() + wakeupInterval;
        AlarmManager am = (AlarmManager)getSystemService(Context.ALARM_SERVICE);
        Intent wakupIntent = new Intent(WakeUpCall.WAKEUP_CALL)
            .putExtra(WAKEUP_INTERNAL, wakeupInterval)
            .putExtra(MAX_LOOP, maxLoop)
            .putExtra(THIS_LOOP, 0L)
            .putExtra(STOP_CALLBACK, new Messenger(mHandler));
        PendingIntent pi = PendingIntent.getBroadcast(this, 0, wakupIntent,
                PendingIntent.FLAG_UPDATE_CURRENT);
        // set alarm, which will be delivered in form of the wakeupIntent
        am.set(AlarmManager.ELAPSED_REALTIME_WAKEUP, atTime, pi);
        return START_NOT_STICKY;
!!!35201591.java!!!	onDestroy() : void
        Log.d(LOG_TAG, "WakeLoop: STOPPED");
        // cancel alarms first
        Intent intent = new Intent(WakeUpCall.WAKEUP_CALL)
            .putExtra(WakeUpCall.CANCEL, "true");
        sendBroadcast(intent);
