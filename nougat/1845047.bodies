class LinearGradientPaintContext
!!!35274167.java!!!	LinearGradientPaintContext(inout canvasMatrix : java.awt.geom.AffineTransform, inout localMatrix : java.awt.geom.AffineTransform, inout colorModel : java.awt.image.ColorModel)
                mCanvasMatrix = canvasMatrix;
                mLocalMatrix = localMatrix;
                mColorModel = colorModel.hasAlpha() ? colorModel : ColorModel.getRGBdefault();
!!!35274423.java!!!	getColorModel() : java.awt.image.ColorModel
                return mColorModel;
!!!35274551.java!!!	getRaster(in x : int, in y : int, in w : int, in h : int) : java.awt.image.Raster
                java.awt.image.BufferedImage image = new java.awt.image.BufferedImage(
                    mColorModel, mColorModel.createCompatibleWritableRaster(w, h),
                    mColorModel.isAlphaPremultiplied(), null);

                int[] data = new int[w*h];

                int index = 0;
                float[] pt1 = new float[2];
                float[] pt2 = new float[2];
                for (int iy = 0 ; iy < h ; iy++) {
                    for (int ix = 0 ; ix < w ; ix++) {
                        // handle the canvas transform
                        pt1[0] = x + ix;
                        pt1[1] = y + iy;
                        mCanvasMatrix.transform(pt1, 0, pt2, 0, 1);

                        // handle the local matrix.
                        pt1[0] = pt2[0];
                        pt1[1] = pt2[1];
                        mLocalMatrix.transform(pt1, 0, pt2, 0, 1);

                        data[index++] = getColor(pt2[0], pt2[1]);
                    }
                }

                image.setRGB(0 /*startX*/, 0 /*startY*/, w, h, data, 0 /*offset*/, w /*scansize*/);

                return image.getRaster();
