class RadialGradientPaint
!!!35312183.java!!!	RadialGradientPaint(in x : float, in y : float, in radius : float, inout colors : int, inout positions : float, inout mode : Shader::TileMode)
            super(colors, positions, mode);
            mX = x;
            mY = y;
            mRadius = radius;
!!!35312311.java!!!	createContext(inout colorModel : java.awt.image.ColorModel, inout deviceBounds : java.awt.Rectangle, inout userBounds : java.awt.geom.Rectangle2D, inout xform : java.awt.geom.AffineTransform, inout hints : java.awt.RenderingHints) : java.awt.PaintContext
            precomputeGradientColors();

            java.awt.geom.AffineTransform canvasMatrix;
            try {
                canvasMatrix = xform.createInverse();
            } catch (java.awt.geom.NoninvertibleTransformException e) {
                Bridge.getLog().fidelityWarning(LayoutLog.TAG_MATRIX_INVERSE,
                        "Unable to inverse matrix in RadialGradient", e, null /*data*/);
                canvasMatrix = new java.awt.geom.AffineTransform();
            }

            java.awt.geom.AffineTransform localMatrix = getLocalMatrix();
            try {
                localMatrix = localMatrix.createInverse();
            } catch (java.awt.geom.NoninvertibleTransformException e) {
                Bridge.getLog().fidelityWarning(LayoutLog.TAG_MATRIX_INVERSE,
                        "Unable to inverse matrix in RadialGradient", e, null /*data*/);
                localMatrix = new java.awt.geom.AffineTransform();
            }

            return new RadialGradientPaintContext(canvasMatrix, localMatrix, colorModel);
