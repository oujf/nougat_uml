class VectorDrawable_Delegate
!!!35325623.java!!!	obtainAttributes(inout res : Resources, inout theme : Resources::Theme, inout set : AttributeSet, inout attrs : int) : TypedArray
        if (theme == null) {
            return res.obtainAttributes(set, attrs);
        }
        return theme.obtainStyledAttributes(set, attrs, 0, 0);
!!!35325751.java!!!	applyAlpha(in color : int, in alpha : float) : int
        int alphaBytes = Color.alpha(color);
        color &= 0x00FFFFFF;
        color |= ((int) (alphaBytes * alpha)) << 24;
        return color;
!!!35325879.java!!!	nCreateTree(in rootGroupPtr : long) : long
        VGroup_Delegate rootGroup = VNativeObject.getDelegate(rootGroupPtr);
        return sPathManager.addNewDelegate(new VPathRenderer_Delegate(rootGroup));
!!!35326007.java!!!	nSetRendererViewportSize(in rendererPtr : long, in viewportWidth : float, in viewportHeight : float) : void
        VPathRenderer_Delegate nativePathRenderer = VNativeObject.getDelegate(rendererPtr);
        nativePathRenderer.mViewportWidth = viewportWidth;
        nativePathRenderer.mViewportHeight = viewportHeight;
!!!35326135.java!!!	nSetRootAlpha(in rendererPtr : long, in alpha : float) : boolean
        VPathRenderer_Delegate nativePathRenderer = VNativeObject.getDelegate(rendererPtr);
        nativePathRenderer.setRootAlpha(alpha);

        return true;
!!!35326263.java!!!	nGetRootAlpha(in rendererPtr : long) : float
        VPathRenderer_Delegate nativePathRenderer = VNativeObject.getDelegate(rendererPtr);

        return nativePathRenderer.getRootAlpha();
!!!35326391.java!!!	nSetAllowCaching(in rendererPtr : long, inout allowCaching : boolean) : void
        // ignored
!!!35326519.java!!!	nDraw(in rendererPtr : long, in canvasWrapperPtr : long, in colorFilterPtr : long, inout bounds : Rect, inout needsMirroring : boolean, inout canReuseCache : boolean) : int
        VPathRenderer_Delegate nativePathRenderer = VNativeObject.getDelegate(rendererPtr);

        Canvas_Delegate.native_save(canvasWrapperPtr, MATRIX_SAVE_FLAG | CLIP_SAVE_FLAG);
        Canvas_Delegate.native_translate(canvasWrapperPtr, bounds.left, bounds.top);

        if (needsMirroring) {
            Canvas_Delegate.native_translate(canvasWrapperPtr, bounds.width(), 0);
            Canvas_Delegate.native_scale(canvasWrapperPtr, -1.0f, 1.0f);
        }

        // At this point, canvas has been translated to the right position.
        // And we use this bound for the destination rect for the drawBitmap, so
        // we offset to (0, 0);
        bounds.offsetTo(0, 0);
        nativePathRenderer.draw(canvasWrapperPtr, colorFilterPtr, bounds.width(), bounds.height());

        Canvas_Delegate.native_restore(canvasWrapperPtr, true);

        return bounds.width() * bounds.height();
!!!35326647.java!!!	nCreateFullPath() : long
        return sPathManager.addNewDelegate(new VFullPath_Delegate());
!!!35326775.java!!!	nCreateFullPath(in nativeFullPathPtr : long) : long
        VFullPath_Delegate original = VNativeObject.getDelegate(nativeFullPathPtr);

        return sPathManager.addNewDelegate(new VFullPath_Delegate(original));
!!!35326903.java!!!	nGetFullPathProperties(in pathPtr : long, inout propertiesData : byte, in length : int) : boolean
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);

        ByteBuffer properties = ByteBuffer.wrap(propertiesData);
        properties.order(ByteOrder.nativeOrder());

        properties.putFloat(VFullPath_Delegate.STROKE_WIDTH_INDEX * 4, path.getStrokeWidth());
        properties.putInt(VFullPath_Delegate.STROKE_COLOR_INDEX * 4, path.getStrokeColor());
        properties.putFloat(VFullPath_Delegate.STROKE_ALPHA_INDEX * 4, path.getStrokeAlpha());
        properties.putInt(VFullPath_Delegate.FILL_COLOR_INDEX * 4, path.getFillColor());
        properties.putFloat(VFullPath_Delegate.FILL_ALPHA_INDEX * 4, path.getStrokeAlpha());
        properties.putFloat(VFullPath_Delegate.TRIM_PATH_START_INDEX * 4, path.getTrimPathStart());
        properties.putFloat(VFullPath_Delegate.TRIM_PATH_END_INDEX * 4, path.getTrimPathEnd());
        properties.putFloat(VFullPath_Delegate.TRIM_PATH_OFFSET_INDEX * 4,
                path.getTrimPathOffset());
        properties.putInt(VFullPath_Delegate.STROKE_LINE_CAP_INDEX * 4, path.getStrokeLineCap());
        properties.putInt(VFullPath_Delegate.STROKE_LINE_JOIN_INDEX * 4, path.getStrokeLineJoin());
        properties.putFloat(VFullPath_Delegate.STROKE_MITER_LIMIT_INDEX * 4,
                path.getStrokeMiterlimit());
        properties.putInt(VFullPath_Delegate.FILL_TYPE_INDEX * 4, path.getFillType());

        return true;
!!!35327031.java!!!	nUpdateFullPathProperties(in pathPtr : long, in strokeWidth : float, in strokeColor : int, in strokeAlpha : float, in fillColor : int, in fillAlpha : float, in trimPathStart : float, in trimPathEnd : float, in trimPathOffset : float, in strokeMiterLimit : float, in strokeLineCap : int, in strokeLineJoin : int, in fillType : int) : void
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);

        path.setStrokeWidth(strokeWidth);
        path.setStrokeColor(strokeColor);
        path.setStrokeAlpha(strokeAlpha);
        path.setFillColor(fillColor);
        path.setFillAlpha(fillAlpha);
        path.setTrimPathStart(trimPathStart);
        path.setTrimPathEnd(trimPathEnd);
        path.setTrimPathOffset(trimPathOffset);
        path.setStrokeMiterlimit(strokeMiterLimit);
        path.setStrokeLineCap(strokeLineCap);
        path.setStrokeLineJoin(strokeLineJoin);
        path.setFillType(fillType);
!!!35327159.java!!!	nUpdateFullPathFillGradient(in pathPtr : long, in fillGradientPtr : long) : void
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);

        path.setFillGradient(fillGradientPtr);
!!!35327287.java!!!	nUpdateFullPathStrokeGradient(in pathPtr : long, in strokeGradientPtr : long) : void
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);

        path.setStrokeGradient(strokeGradientPtr);
!!!35327415.java!!!	nCreateClipPath() : long
        return sPathManager.addNewDelegate(new VClipPath_Delegate());
!!!35327543.java!!!	nCreateClipPath(in clipPathPtr : long) : long
        VClipPath_Delegate original = VNativeObject.getDelegate(clipPathPtr);
        return sPathManager.addNewDelegate(new VClipPath_Delegate(original));
!!!35327671.java!!!	nCreateGroup() : long
        return sPathManager.addNewDelegate(new VGroup_Delegate());
!!!35327799.java!!!	nCreateGroup(in groupPtr : long) : long
        VGroup_Delegate original = VNativeObject.getDelegate(groupPtr);
        return sPathManager.addNewDelegate(
                new VGroup_Delegate(original, new ArrayMap<String, Object>()));
!!!35327927.java!!!	nSetName(in nodePtr : long, inout name : String) : void
        VNativeObject group = VNativeObject.getDelegate(nodePtr);
        group.setName(name);
!!!35328055.java!!!	nGetGroupProperties(in groupPtr : long, inout propertiesData : float, in length : int) : boolean
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);

        FloatBuffer properties = FloatBuffer.wrap(propertiesData);

        properties.put(VGroup_Delegate.ROTATE_INDEX, group.getRotation());
        properties.put(VGroup_Delegate.PIVOT_X_INDEX, group.getPivotX());
        properties.put(VGroup_Delegate.PIVOT_Y_INDEX, group.getPivotY());
        properties.put(VGroup_Delegate.SCALE_X_INDEX, group.getScaleX());
        properties.put(VGroup_Delegate.SCALE_Y_INDEX, group.getScaleY());
        properties.put(VGroup_Delegate.TRANSLATE_X_INDEX, group.getTranslateX());
        properties.put(VGroup_Delegate.TRANSLATE_Y_INDEX, group.getTranslateY());

        return true;
!!!35328183.java!!!	nUpdateGroupProperties(in groupPtr : long, in rotate : float, in pivotX : float, in pivotY : float, in scaleX : float, in scaleY : float, in translateX : float, in translateY : float) : void
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);

        group.setRotation(rotate);
        group.setPivotX(pivotX);
        group.setPivotY(pivotY);
        group.setScaleX(scaleX);
        group.setScaleY(scaleY);
        group.setTranslateX(translateX);
        group.setTranslateY(translateY);
!!!35328311.java!!!	nAddChild(in groupPtr : long, in nodePtr : long) : void
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        group.mChildren.add(VNativeObject.getDelegate(nodePtr));
!!!35328439.java!!!	nSetPathString(in pathPtr : long, inout pathString : String, in length : int) : void
        VPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        path.setPathData(PathParser_Delegate.createNodesFromPathData(pathString));
!!!35328567.java!!!	nGetRotation(in groupPtr : long) : float
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        return group.getRotation();
!!!35328695.java!!!	nSetRotation(in groupPtr : long, in rotation : float) : void
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        group.setRotation(rotation);
!!!35328823.java!!!	nGetPivotX(in groupPtr : long) : float
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        return group.getPivotX();
!!!35328951.java!!!	nSetPivotX(in groupPtr : long, in pivotX : float) : void
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        group.setPivotX(pivotX);
!!!35329079.java!!!	nGetPivotY(in groupPtr : long) : float
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        return group.getPivotY();
!!!35329207.java!!!	nSetPivotY(in groupPtr : long, in pivotY : float) : void
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        group.setPivotY(pivotY);
!!!35329335.java!!!	nGetScaleX(in groupPtr : long) : float
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        return group.getScaleX();
!!!35329463.java!!!	nSetScaleX(in groupPtr : long, in scaleX : float) : void
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        group.setScaleX(scaleX);
!!!35329591.java!!!	nGetScaleY(in groupPtr : long) : float
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        return group.getScaleY();
!!!35329719.java!!!	nSetScaleY(in groupPtr : long, in scaleY : float) : void
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        group.setScaleY(scaleY);
!!!35329847.java!!!	nGetTranslateX(in groupPtr : long) : float
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        return group.getTranslateX();
!!!35329975.java!!!	nSetTranslateX(in groupPtr : long, in translateX : float) : void
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        group.setTranslateX(translateX);
!!!35330103.java!!!	nGetTranslateY(in groupPtr : long) : float
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        return group.getTranslateY();
!!!35330231.java!!!	nSetTranslateY(in groupPtr : long, in translateY : float) : void
        VGroup_Delegate group = VNativeObject.getDelegate(groupPtr);
        group.setTranslateY(translateY);
!!!35330359.java!!!	nSetPathData(in pathPtr : long, in pathDataPtr : long) : void
        VPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        path.setPathData(PathParser_Delegate.getDelegate(pathDataPtr).getPathDataNodes());
!!!35330487.java!!!	nGetStrokeWidth(in pathPtr : long) : float
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        return path.getStrokeWidth();
!!!35330615.java!!!	nSetStrokeWidth(in pathPtr : long, in width : float) : void
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        path.setStrokeWidth(width);
!!!35330743.java!!!	nGetStrokeColor(in pathPtr : long) : int
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        return path.getStrokeColor();
!!!35330871.java!!!	nSetStrokeColor(in pathPtr : long, in strokeColor : int) : void
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        path.setStrokeColor(strokeColor);
!!!35330999.java!!!	nGetStrokeAlpha(in pathPtr : long) : float
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        return path.getStrokeAlpha();
!!!35331127.java!!!	nSetStrokeAlpha(in pathPtr : long, in alpha : float) : void
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        path.setStrokeAlpha(alpha);
!!!35331255.java!!!	nGetFillColor(in pathPtr : long) : int
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        return path.getFillColor();
!!!35331383.java!!!	nSetFillColor(in pathPtr : long, in fillColor : int) : void
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        path.setFillColor(fillColor);
!!!35331511.java!!!	nGetFillAlpha(in pathPtr : long) : float
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        return path.getFillAlpha();
!!!35331639.java!!!	nSetFillAlpha(in pathPtr : long, in fillAlpha : float) : void
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        path.setFillAlpha(fillAlpha);
!!!35331767.java!!!	nGetTrimPathStart(in pathPtr : long) : float
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        return path.getTrimPathStart();
!!!35331895.java!!!	nSetTrimPathStart(in pathPtr : long, in trimPathStart : float) : void
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        path.setTrimPathStart(trimPathStart);
!!!35332023.java!!!	nGetTrimPathEnd(in pathPtr : long) : float
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        return path.getTrimPathEnd();
!!!35332151.java!!!	nSetTrimPathEnd(in pathPtr : long, in trimPathEnd : float) : void
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        path.setTrimPathEnd(trimPathEnd);
!!!35332279.java!!!	nGetTrimPathOffset(in pathPtr : long) : float
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        return path.getTrimPathOffset();
!!!35332407.java!!!	nSetTrimPathOffset(in pathPtr : long, in trimPathOffset : float) : void
        VFullPath_Delegate path = VNativeObject.getDelegate(pathPtr);
        path.setTrimPathOffset(trimPathOffset);
