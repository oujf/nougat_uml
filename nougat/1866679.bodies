class ICU_Delegate
!!!35525815.java!!!	toLowerCase(inout s : String, inout localeName : String) : String
        return s.toLowerCase();
!!!35525943.java!!!	toUpperCase(inout s : String, inout localeName : String) : String
        return s.toUpperCase();
!!!35526071.java!!!	getBestDateTimePatternNative(inout skeleton : String, inout localeName : String) : String
        return DateTimePatternGenerator.getInstance(new ULocale(localeName))
                .getBestPattern(skeleton);
!!!35526199.java!!!	getCldrVersion() : String
        return VersionInfo.ICU_DATA_VERSION.toString();
!!!35526327.java!!!	getIcuVersion() : String
        return VersionInfo.ICU_VERSION.toString();
!!!35526455.java!!!	getUnicodeVersion() : String
        return VersionInfo.UNICODE_7_0.toString();
!!!35526583.java!!!	getAvailableBreakIteratorLocalesNative() : String
        return new String[0];
!!!35526711.java!!!	getAvailableCalendarLocalesNative() : String
        return new String[0];
!!!35526839.java!!!	getAvailableCollatorLocalesNative() : String
        return new String[0];
!!!35526967.java!!!	getAvailableDateFormatLocalesNative() : String
        return new String[0];
!!!35527095.java!!!	getAvailableLocalesNative() : String
        return new String[0];
!!!35527223.java!!!	getAvailableNumberFormatLocalesNative() : String
        return new String[0];
!!!35527351.java!!!	getAvailableCurrencyCodes() : String
        return new String[0];
!!!35527479.java!!!	getCurrencyCode(inout locale : String) : String
        return "";
!!!35527607.java!!!	getCurrencyDisplayName(inout locale : String, inout currencyCode : String) : String
        return "";
!!!35527735.java!!!	getCurrencyFractionDigits(inout currencyCode : String) : int
        return 0;
!!!35527863.java!!!	getCurrencyNumericCode(inout currencyCode : String) : int
        return Currency.getInstance(currencyCode).getNumericCode();
!!!35527991.java!!!	getCurrencySymbol(inout locale : String, inout currencyCode : String) : String
        return "";
!!!35528119.java!!!	getDisplayCountryNative(inout countryCode : String, inout locale : String) : String
        return "";
!!!35528247.java!!!	getDisplayLanguageNative(inout languageCode : String, inout locale : String) : String
        return "";
!!!35528375.java!!!	getDisplayVariantNative(inout variantCode : String, inout locale : String) : String
        return "";
!!!35528503.java!!!	getDisplayScriptNative(inout variantCode : String, inout locale : String) : String
        return "";
!!!35528631.java!!!	getISO3Country(inout locale : String) : String
        return "";
!!!35528759.java!!!	getISO3Language(inout locale : String) : String
        return "";
!!!35528887.java!!!	addLikelySubtags(inout locale : String) : String
        return "";
!!!35529015.java!!!	getScript(inout locale : String) : String
        return "";
!!!35529143.java!!!	getISOLanguagesNative() : String
        return Locale.getISOLanguages();
!!!35529271.java!!!	getISOCountriesNative() : String
        return Locale.getISOCountries();
!!!35529399.java!!!	initLocaleDataNative(inout locale : String, inout result : LocaleData) : boolean

        // Used by Calendar.
        result.firstDayOfWeek = 1;
        result.minimalDaysInFirstWeek = 1;

        // Used by DateFormatSymbols.
        result.amPm = new String[] { "AM", "PM" };
        result.eras = new String[] { "BC", "AD" };

        result.longMonthNames = new String[] { "January", "February", "March", "April", "May",
                "June", "July", "August", "September", "October", "November", "December" };
        result.shortMonthNames = new String[] { "Jan", "Feb", "Mar", "Apr", "May",
                "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };
        result.longStandAloneMonthNames = result.longMonthNames;
        result.shortStandAloneMonthNames = result.shortMonthNames;

        // The platform code expects this to begin at index 1, rather than 0. It maps it directly to
        // the constants from java.util.Calendar.<weekday>
        result.longWeekdayNames = new String[] {
                "", "Sunday", "Monday" ,"Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" };
        result.shortWeekdayNames = new String[] {
                "", "Sun", "Mon" ,"Tue", "Wed", "Thu", "Fri", "Sat" };
        result.tinyWeekdayNames = new String[] {
                "", "S", "M", "T", "W", "T", "F", "S" };

        result.longStandAloneWeekdayNames = result.longWeekdayNames;
        result.shortStandAloneWeekdayNames = result.shortWeekdayNames;
        result.tinyStandAloneWeekdayNames = result.tinyWeekdayNames;

        result.fullTimeFormat = "";
        result.longTimeFormat = "";
        result.mediumTimeFormat = "";
        result.shortTimeFormat = "";

        result.fullDateFormat = "";
        result.longDateFormat = "";
        result.mediumDateFormat = "";
        result.shortDateFormat = "";

        // Used by DecimalFormatSymbols.
        result.zeroDigit = '0';
        result.decimalSeparator = '.';
        result.groupingSeparator = ',';
        result.patternSeparator = ' ';
        result.percent = "%";
        result.perMill = '\u2030';
        result.monetarySeparator = ' ';
        result.minusSign = "-";
        result.exponentSeparator = "e";
        result.infinity = "\u221E";
        result.NaN = "NaN";
        // Also used by Currency.
        result.currencySymbol = "$";
        result.internationalCurrencySymbol = "USD";

        // Used by DecimalFormat and NumberFormat.
        result.numberPattern = "%f";
        result.integerPattern = "%d";
        result.currencyPattern = "%s";
        result.percentPattern = "%f";

        return true;
!!!35529527.java!!!	setDefaultLocale(inout locale : String) : void
        ICU.setDefaultLocale(locale);
!!!35529655.java!!!	getDefaultLocale() : String
        return ICU.getDefaultLocale();
!!!35529783.java!!!	getTZDataVersion() : String
        return ICU.getTZDataVersion();
