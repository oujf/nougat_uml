class LayoutLibTestCallback
!!!35542839.java!!!	LayoutLibTestCallback(inout logger : ILogger)
        mLog = logger;
!!!35542967.java!!!	initResources() : void
        Class<?> rClass = mModuleClassLoader.loadClass(PACKAGE_NAME + ".R");
        Class<?>[] nestedClasses = rClass.getDeclaredClasses();
        for (Class<?> resClass : nestedClasses) {
            final ResourceType resType = ResourceType.getEnum(resClass.getSimpleName());

            if (resType != null) {
                final Map<String, Integer> resName2Id = Maps.newHashMap();
                mResources.put(resType, resName2Id);

                for (Field field : resClass.getDeclaredFields()) {
                    final int modifiers = field.getModifiers();
                    if (Modifier.isStatic(modifiers)) { // May not be final in library projects
                        final Class<?> type = field.getType();
                        try {
                            if (type.isArray() && type.getComponentType() == int.class) {
                                mStyleableValueToNameMap.put(
                                        new IntArrayWrapper((int[]) field.get(null)),
                                        field.getName());
                            } else if (type == int.class) {
                                final Integer value = (Integer) field.get(null);
                                mProjectResources.put(value, Pair.of(resType, field.getName()));
                                resName2Id.put(field.getName(), value);
                            } else {
                                mLog.error(null, "Unknown field type in R class: %1$s", type);
                            }
                        } catch (IllegalAccessException ignored) {
                            mLog.error(ignored, "Malformed R class: %1$s", PACKAGE_NAME + ".R");
                        }
                    }
                }
            }
        }
!!!35543095.java!!!	loadView(inout name : String, inout constructorSignature : Class, inout constructorArgs : Object) : Object
        Class<?> viewClass = mModuleClassLoader.loadClass(name);
        Constructor<?> viewConstructor = viewClass.getConstructor(constructorSignature);
        viewConstructor.setAccessible(true);
        return viewConstructor.newInstance(constructorArgs);
!!!35543223.java!!!	getNamespace() : String
        return String.format(SdkConstants.NS_CUSTOM_RESOURCES_S,
                PACKAGE_NAME);
!!!35543351.java!!!	resolveResourceId(in id : int) : String
        return mProjectResources.get(id);
!!!35543479.java!!!	resolveResourceId(inout id : int) : String
        return mStyleableValueToNameMap.get(new IntArrayWrapper(id));
!!!35543607.java!!!	getResourceId(inout type : ResourceType, inout name : String) : Integer
        return mResources.get(type).get(name);
!!!35543735.java!!!	getParser(inout layoutName : String) : ILayoutPullParser
        fail("This method shouldn't be called by this version of LayoutLib.");
        return null;
!!!35543863.java!!!	getParser(inout layoutResource : ResourceValue) : ILayoutPullParser
        return new LayoutPullParser(new File(layoutResource.getValue()));
!!!35543991.java!!!	getAdapterItemValue(inout adapterView : ResourceReference, inout adapterCookie : Object, inout itemRef : ResourceReference, in fullPosition : int, in positionPerType : int, in fullParentPosition : int, in parentPositionPerType : int, inout viewRef : ResourceReference, inout viewAttribute : ViewAttribute, inout defaultValue : Object) : Object
        return null;
!!!35544119.java!!!	getAdapterBinding(inout adapterViewRef : ResourceReference, inout adapterCookie : Object, inout viewObject : Object) : AdapterBinding
        return null;
!!!35544247.java!!!	getActionBarCallback() : ActionBarCallback
        return mActionBarCallback;
!!!35544375.java!!!	supports(in ideFeature : int) : boolean
        return false;
!!!35544503.java!!!	getParserFactory() : ParserFactory
        return new ParserFactory() {
            @NonNull
            @Override
            public XmlPullParser createParser(@Nullable String debugName)
                    throws XmlPullParserException {
                return new KXmlParser();
            }
        };
!!!35544631.java!!!	getFlag(inout key : Key<T>) : T
        if (key.equals(RenderParamsFlags.FLAG_KEY_APPLICATION_PACKAGE)) {
            return (T) PACKAGE_NAME;
        }
        return null;
