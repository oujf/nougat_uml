class Root
!!!35619383.java!!!	indexClassOperation(inout record : Record) : void
        Proc process = processes.get(record.pid);

        // Ignore dexopt output. It loads applications classes through the
        // system class loader and messes us up.
        if (record.processName.equals("dexopt")) {
            return;
        }

        String name = record.className;
        LoadedClass loadedClass = loadedClasses.get(name);
        Operation o = null;

        switch (record.type) {
            case START_LOAD:
            case START_INIT:
                if (loadedClass == null) {
                    loadedClass = new LoadedClass(
                            name, record.classLoader == 0);
                    if (loadedClass.systemClass) {
                        // Only measure memory for classes in the boot
                        // classpath.
                        loadedClass.measureMemoryUsage();
                    }
                    loadedClasses.put(name, loadedClass);
                }
                break;

            case END_LOAD:
            case END_INIT:
                o = process.endOperation(record.tid, record.className,
                        loadedClass, record.time);
                if (o == null) {
                    return;
                }
        }

        switch (record.type) {
            case START_LOAD:
                process.startOperation(record.tid, loadedClass, record.time,
                        Operation.Type.LOAD);
                break;

            case START_INIT:
                process.startOperation(record.tid, loadedClass, record.time,
                        Operation.Type.INIT);
                break;

            case END_LOAD:
                loadedClass.loads.add(o);
                break;

            case END_INIT:
                loadedClass.initializations.add(o);
                break;
        }
!!!35619511.java!!!	indexProcess(inout record : Record) : void
        Proc proc = processes.get(record.pid);

        if (proc == null) {
            // Create a new process object.
            Proc parent = processes.get(record.ppid);
            proc = new Proc(parent, record.pid);
            processes.put(proc.id, proc);
            if (parent != null) {
                parent.children.add(proc);
            }
        }

        proc.setName(record.processName);
!!!35619639.java!!!	toFile(inout fileName : String) : void
        FileOutputStream out = new FileOutputStream(fileName);
        ObjectOutputStream oout = new ObjectOutputStream(
                new BufferedOutputStream(out));

        System.err.println("Writing object model...");

        oout.writeObject(this);

        oout.close();

        System.err.println("Done!");
!!!35619767.java!!!	fromFile(inout fileName : String) : Root
        FileInputStream fin = new FileInputStream(fileName);
        ObjectInputStream oin = new ObjectInputStream(
                new BufferedInputStream(fin));

        Root root = (Root) oin.readObject();

        oin.close();

        return root;
