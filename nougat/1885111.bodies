class WaitForClients
!!!35621943.java!!!	WaitForClients(inout device : IDevice, in timeout : long)
            this.device = device;
            this.timeout = timeout;
!!!35622071.java!!!	get() : Client
            synchronized (this) {
                AndroidDebugBridge.addClientChangeListener(this);

                if (device.hasClients()) {
                    return device.getClients();
                }

                try {
                    wait(timeout); // Note: doesn't guard for spurious wakeup.
                } catch (InterruptedException exc) {
                }

                // We will be woken up when the first client data arrives. Sleep a little longer
                // to give (hopefully all of) the rest of the clients a chance to become available.
                // Note: a loop with timeout is brittle as well and complicated, just accept this
                //       for now.
                try {
                    Thread.sleep(500);
                } catch (InterruptedException exc) {
                }
            }

            AndroidDebugBridge.removeClientChangeListener(this);

            return device.getClients();
!!!35622199.java!!!	clientChanged(inout arg0 : Client, in arg1 : int) : void
            synchronized (this) {
                if ((arg1 & Client.CHANGE_INFO) != 0 && (arg0.getDevice() == device)) {
                    notifyAll();
                }
            }
