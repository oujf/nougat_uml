class NetworkSelectionStatus
!!!35656759.java!!!	setSeenInLastQualifiedNetworkSelection(inout seen : boolean) : void
            mSeenInLastQualifiedNetworkSelection =  seen;
!!!35656887.java!!!	getSeenInLastQualifiedNetworkSelection() : boolean
            return mSeenInLastQualifiedNetworkSelection;
!!!35657015.java!!!	setCandidate(inout scanCandidate : ScanResult) : void
            mCandidate = scanCandidate;
!!!35657143.java!!!	getCandidate() : ScanResult
            return mCandidate;
!!!35657271.java!!!	setCandidateScore(in score : int) : void
            mCandidateScore = score;
!!!35657399.java!!!	getCandidateScore() : int
            return mCandidateScore;
!!!35657527.java!!!	getConnectChoice() : String
            return mConnectChoice;
!!!35657655.java!!!	setConnectChoice(inout newConnectChoice : String) : void
            mConnectChoice = newConnectChoice;
!!!35657783.java!!!	getConnectChoiceTimestamp() : long
            return mConnectChoiceTimestamp;
!!!35657911.java!!!	setConnectChoiceTimestamp(in timeStamp : long) : void
            mConnectChoiceTimestamp = timeStamp;
!!!35658039.java!!!	getNetworkStatusString() : String
            return QUALITY_NETWORK_SELECTION_STATUS[mStatus];
!!!35658167.java!!!	setHasEverConnected(inout value : boolean) : void
            mHasEverConnected = value;
!!!35658295.java!!!	getHasEverConnected() : boolean
            return mHasEverConnected;
!!!35658423.java!!!	NetworkSelectionStatus()
            // previously stored configs will not have this parameter, so we default to false.
            mHasEverConnected = false;
!!!35658551.java!!!	getNetworkDisableReasonString(in reason : int) : String
            if (reason >= NETWORK_SELECTION_ENABLE && reason < NETWORK_SELECTION_DISABLED_MAX) {
                return QUALITY_NETWORK_SELECTION_DISABLE_REASON[reason];
            } else {
                return null;
            }
!!!35658679.java!!!	getNetworkDisableReasonString() : String
            return QUALITY_NETWORK_SELECTION_DISABLE_REASON[mNetworkSelectionDisableReason];
!!!35658807.java!!!	getNetworkSelectionStatus() : int
            return mStatus;
!!!35658935.java!!!	isNetworkEnabled() : boolean
            return mStatus == NETWORK_SELECTION_ENABLED;
!!!35659063.java!!!	isNetworkTemporaryDisabled() : boolean
            return mStatus == NETWORK_SELECTION_TEMPORARY_DISABLED;
!!!35659191.java!!!	isNetworkPermanentlyDisabled() : boolean
            return mStatus == NETWORK_SELECTION_PERMANENTLY_DISABLED;
!!!35659319.java!!!	setNetworkSelectionStatus(in status : int) : void
            if (status >= 0 && status < NETWORK_SELECTION_STATUS_MAX) {
                mStatus = status;
            }
!!!35659447.java!!!	getNetworkSelectionDisableReason() : int
            return mNetworkSelectionDisableReason;
!!!35659575.java!!!	setNetworkSelectionDisableReason(in reason : int) : void
            if (reason >= 0 && reason < NETWORK_SELECTION_DISABLED_MAX) {
                mNetworkSelectionDisableReason = reason;
            } else {
                throw new IllegalArgumentException("Illegal reason value: " + reason);
            }
!!!35659703.java!!!	isDisabledByReason(in reason : int) : boolean
            return mNetworkSelectionDisableReason == reason;
!!!35659831.java!!!	setDisableTime(in timeStamp : long) : void
            mTemporarilyDisabledTimestamp = timeStamp;
!!!35659959.java!!!	getDisableTime() : long
            return mTemporarilyDisabledTimestamp;
!!!35660087.java!!!	getDisableReasonCounter(in reason : int) : int
            if (reason >= NETWORK_SELECTION_ENABLE && reason < NETWORK_SELECTION_DISABLED_MAX) {
                return mNetworkSeclectionDisableCounter[reason];
            } else {
                throw new IllegalArgumentException("Illegal reason value: " + reason);
            }
!!!35660215.java!!!	setDisableReasonCounter(in reason : int, in value : int) : void
            if (reason >= NETWORK_SELECTION_ENABLE && reason < NETWORK_SELECTION_DISABLED_MAX) {
                mNetworkSeclectionDisableCounter[reason] = value;
            } else {
                throw new IllegalArgumentException("Illegal reason value: " + reason);
            }
!!!35660343.java!!!	incrementDisableReasonCounter(in reason : int) : void
            if (reason >= NETWORK_SELECTION_ENABLE  && reason < NETWORK_SELECTION_DISABLED_MAX) {
                mNetworkSeclectionDisableCounter[reason]++;
            } else {
                throw new IllegalArgumentException("Illegal reason value: " + reason);
            }
!!!35660471.java!!!	clearDisableReasonCounter(in reason : int) : void
            if (reason >= NETWORK_SELECTION_ENABLE && reason < NETWORK_SELECTION_DISABLED_MAX) {
                mNetworkSeclectionDisableCounter[reason] = NETWORK_SELECTION_ENABLE;
            } else {
                throw new IllegalArgumentException("Illegal reason value: " + reason);
            }
!!!35660599.java!!!	clearDisableReasonCounter() : void
            Arrays.fill(mNetworkSeclectionDisableCounter, NETWORK_SELECTION_ENABLE);
!!!35660727.java!!!	getNetworkSelectionBSSID() : String
            return mNetworkSelectionBSSID;
!!!35660855.java!!!	setNetworkSelectionBSSID(inout bssid : String) : void
            mNetworkSelectionBSSID = bssid;
!!!35660983.java!!!	copy(inout source : WifiConfiguration::NetworkSelectionStatus) : void
            mStatus = source.mStatus;
            mNetworkSelectionDisableReason = source.mNetworkSelectionDisableReason;
            for (int index = NETWORK_SELECTION_ENABLE; index < NETWORK_SELECTION_DISABLED_MAX;
                    index++) {
                mNetworkSeclectionDisableCounter[index] =
                        source.mNetworkSeclectionDisableCounter[index];
            }
            mTemporarilyDisabledTimestamp = source.mTemporarilyDisabledTimestamp;
            mNetworkSelectionBSSID = source.mNetworkSelectionBSSID;
            setConnectChoice(source.getConnectChoice());
            setConnectChoiceTimestamp(source.getConnectChoiceTimestamp());
            setHasEverConnected(source.getHasEverConnected());
!!!35661111.java!!!	writeToParcel(inout dest : Parcel) : void
            dest.writeInt(getNetworkSelectionStatus());
            dest.writeInt(getNetworkSelectionDisableReason());
            for (int index = NETWORK_SELECTION_ENABLE; index < NETWORK_SELECTION_DISABLED_MAX;
                    index++) {
                dest.writeInt(getDisableReasonCounter(index));
            }
            dest.writeLong(getDisableTime());
            dest.writeString(getNetworkSelectionBSSID());
            if (getConnectChoice() != null) {
                dest.writeInt(CONNECT_CHOICE_EXISTS);
                dest.writeString(getConnectChoice());
                dest.writeLong(getConnectChoiceTimestamp());
            } else {
                dest.writeInt(CONNECT_CHOICE_NOT_EXISTS);
            }
            dest.writeInt(getHasEverConnected() ? 1 : 0);
!!!35661239.java!!!	readFromParcel(inout in : Parcel) : void
            setNetworkSelectionStatus(in.readInt());
            setNetworkSelectionDisableReason(in.readInt());
            for (int index = NETWORK_SELECTION_ENABLE; index < NETWORK_SELECTION_DISABLED_MAX;
                    index++) {
                setDisableReasonCounter(index, in.readInt());
            }
            setDisableTime(in.readLong());
            setNetworkSelectionBSSID(in.readString());
            if (in.readInt() == CONNECT_CHOICE_EXISTS) {
                setConnectChoice(in.readString());
                setConnectChoiceTimestamp(in.readLong());
            } else {
                setConnectChoice(null);
                setConnectChoiceTimestamp(INVALID_NETWORK_SELECTION_DISABLE_TIMESTAMP);
            }
            setHasEverConnected(in.readInt() != 0);
