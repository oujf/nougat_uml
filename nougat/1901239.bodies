class WifiNanSessionListener
!!!35721783.java!!!	WifiNanSessionListener()
        this(Looper.myLooper());
!!!35721911.java!!!	WifiNanSessionListener(inout looper : Looper)
        if (VDBG) Log.v(TAG, "ctor: looper=" + looper);
        mHandler = new Handler(looper) {
            @Override
            public void handleMessage(Message msg) {
                if (DBG) Log.d(TAG, "What=" + msg.what + ", msg=" + msg);
                switch (msg.what) {
                    case LISTEN_PUBLISH_FAIL:
                        WifiNanSessionListener.this.onPublishFail(msg.arg1);
                        break;
                    case LISTEN_PUBLISH_TERMINATED:
                        WifiNanSessionListener.this.onPublishTerminated(msg.arg1);
                        break;
                    case LISTEN_SUBSCRIBE_FAIL:
                        WifiNanSessionListener.this.onSubscribeFail(msg.arg1);
                        break;
                    case LISTEN_SUBSCRIBE_TERMINATED:
                        WifiNanSessionListener.this.onSubscribeTerminated(msg.arg1);
                        break;
                    case LISTEN_MATCH:
                        WifiNanSessionListener.this.onMatch(
                                msg.getData().getInt(MESSAGE_BUNDLE_KEY_PEER_ID),
                                msg.getData().getByteArray(MESSAGE_BUNDLE_KEY_MESSAGE), msg.arg1,
                                msg.getData().getByteArray(MESSAGE_BUNDLE_KEY_MESSAGE2), msg.arg2);
                        break;
                    case LISTEN_MESSAGE_SEND_SUCCESS:
                        WifiNanSessionListener.this.onMessageSendSuccess(msg.arg1);
                        break;
                    case LISTEN_MESSAGE_SEND_FAIL:
                        WifiNanSessionListener.this.onMessageSendFail(msg.arg1, msg.arg2);
                        break;
                    case LISTEN_MESSAGE_RECEIVED:
                        WifiNanSessionListener.this.onMessageReceived(msg.arg2,
                                msg.getData().getByteArray(MESSAGE_BUNDLE_KEY_MESSAGE), msg.arg1);
                        break;
                }
            }
        };
!!!35722039.java!!!	onPublishFail(in reason : int) : void
        if (VDBG) Log.v(TAG, "onPublishFail: called in stub - override if interested");
!!!35722167.java!!!	onPublishTerminated(in reason : int) : void
        Log.w(TAG, "onPublishTerminated: called in stub - override if interested or disable");
!!!35722295.java!!!	onSubscribeFail(in reason : int) : void
        if (VDBG) Log.v(TAG, "onSubscribeFail: called in stub - override if interested");
!!!35722423.java!!!	onSubscribeTerminated(in reason : int) : void
        Log.w(TAG, "onSubscribeTerminated: called in stub - override if interested or disable");
!!!35722551.java!!!	onMatch(in peerId : int, inout serviceSpecificInfo : byte, in serviceSpecificInfoLength : int, inout matchFilter : byte, in matchFilterLength : int) : void
        if (VDBG) Log.v(TAG, "onMatch: called in stub - override if interested");
!!!35722679.java!!!	onMessageSendSuccess(in messageId : int) : void
        if (VDBG) Log.v(TAG, "onMessageSendSuccess: called in stub - override if interested");
!!!35722807.java!!!	onMessageSendFail(in messageId : int, in reason : int) : void
        if (VDBG) Log.v(TAG, "onMessageSendFail: called in stub - override if interested");
!!!35722935.java!!!	onMessageReceived(in peerId : int, inout message : byte, in messageLength : int) : void
        if (VDBG) Log.v(TAG, "onMessageReceived: called in stub - override if interested");
