class AnnotationTypeUtil
!!!35891127.java!!!	AnnotationTypeUtil(inout annotationAnalyzer : AnnotationAnalyzer)
        mTypes = annotationAnalyzer.getTypeUtils();
!!!35891255.java!!!	getDescription(inout modelClass : ModelClass) : String
        // TODO use interface
        return modelClass.getCanonicalName().replace('.', '/');
!!!35891383.java!!!	getDescription(inout modelMethod : ModelMethod) : String
        // TODO use interface
        return modelMethod.getName() + getDescription(
                ((AnnotationMethod) modelMethod).mExecutableElement.asType());
!!!35891511.java!!!	getDescription(inout typeMirror : TypeMirror) : String
        if (typeMirror == null) {
            throw new UnsupportedOperationException();
        }
        switch (typeMirror.getKind()) {
            case BOOLEAN:
                return BOOLEAN;
            case BYTE:
                return BYTE;
            case SHORT:
                return SHORT;
            case INT:
                return INT;
            case LONG:
                return LONG;
            case CHAR:
                return CHAR;
            case FLOAT:
                return FLOAT;
            case DOUBLE:
                return DOUBLE;
            case DECLARED:
                return CLASS_PREFIX + mTypes.erasure(typeMirror).toString().replace('.', '/') + CLASS_SUFFIX;
            case VOID:
                return VOID;
            case ARRAY:
                final ArrayType arrayType = (ArrayType) typeMirror;
                final String componentType = getDescription(arrayType.getComponentType());
                return ARRAY + componentType;
            case TYPEVAR:
                final TypeVariable typeVariable = (TypeVariable) typeMirror;
                final String name = typeVariable.toString();
                return CLASS_PREFIX + name.replace('.', '/') + CLASS_SUFFIX;
            case EXECUTABLE:
                final ExecutableType executableType = (ExecutableType) typeMirror;
                final int argStart = mTypes.erasure(executableType).toString().indexOf('(');
                final String methodName = executableType.toString().substring(0, argStart);
                final String args = joinArgs(executableType.getParameterTypes());
                // TODO detect constructor?
                return methodName + "(" + args + ")" + getDescription(
                        executableType.getReturnType());
            default:
                throw new UnsupportedOperationException("cannot understand type "
                        + typeMirror.toString() + ", kind:" + typeMirror.getKind().name());
        }
!!!35891639.java!!!	joinArgs(inout mirrorList : List<? extends TypeMirror>) : String
        StringBuilder result = new StringBuilder();
        for (TypeMirror mirror : mirrorList) {
            result.append(getDescription(mirror));
        }
        return result.toString();
