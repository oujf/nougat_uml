class LayoutBinderTest
!!!35904695.java!!!	setUp() : void
        mLayoutBinder = new MockLayoutBinder();
        mExprModel = mLayoutBinder.getModel();
        JavaAnalyzer.initForTests();
!!!35904823.java!!!	testRegisterId() : void
        int originalSize = mExprModel.size();
        mLayoutBinder.addVariable("test", "java.lang.String", null);
        assertEquals(originalSize + 1, mExprModel.size());
        final Map.Entry<String, Expr> entry = findIdentifier("test");
        final Expr value = entry.getValue();
        assertEquals(value.getClass(), IdentifierExpr.class);
        final IdentifierExpr id = (IdentifierExpr) value;
        assertEquals("test", id.getName());
        assertEquals(new JavaClass(String.class), id.getResolvedType());
        assertTrue(id.isDynamic());
!!!35904951.java!!!	testRegisterImport() : void
        int originalSize = mExprModel.size();
        mExprModel.addImport("test", "java.lang.String", null);
        assertEquals(originalSize + 1, mExprModel.size());
        final Map.Entry<String, Expr> entry = findIdentifier("test");
        final Expr value = entry.getValue();
        assertEquals(value.getClass(), StaticIdentifierExpr.class);
        final IdentifierExpr id = (IdentifierExpr) value;
        assertEquals("test", id.getName());
        assertEquals(new JavaClass(String.class), id.getResolvedType());
        assertFalse(id.isDynamic());
!!!35905079.java!!!	testParse() : void
        int originalSize = mExprModel.size();
        mLayoutBinder.addVariable("user", "android.databinding.tool2.LayoutBinderTest.TestUser",
                null);
        mLayoutBinder.parse("user.name", false, null);
        mLayoutBinder.parse("user.lastName", false, null);
        assertEquals(originalSize + 3, mExprModel.size());
        final List<Expr> bindingExprs = mExprModel.getBindingExpressions();
        assertEquals(2, bindingExprs.size());
        IdentifierExpr id = mExprModel.identifier("user");
        assertTrue(bindingExprs.get(0) instanceof FieldAccessExpr);
        assertTrue(bindingExprs.get(1) instanceof FieldAccessExpr);
        assertEquals(2, id.getParents().size());
        assertTrue(bindingExprs.get(0).getChildren().contains(id));
        assertTrue(bindingExprs.get(1).getChildren().contains(id));
!!!35905207.java!!!	testParseWithMethods() : void
        mLayoutBinder.addVariable("user", "android.databinding.tool.LayoutBinderTest.TestUser",
                null);
        mLayoutBinder.parse("user.fullName", false, null);
        Expr item = mExprModel.getBindingExpressions().get(0);
        assertTrue(item instanceof FieldAccessExpr);
        IdentifierExpr id = mExprModel.identifier("user");
        FieldAccessExpr fa = (FieldAccessExpr) item;
        fa.getResolvedType();
        final Callable getter = fa.getGetter();
        assertTrue(getter.type == Callable.Type.METHOD);
        assertSame(id, fa.getChild());
        assertTrue(fa.isDynamic());
!!!35905335.java!!!	findIdentifier(inout name : String) : String
        for (Map.Entry<String, Expr> entry : mExprModel.getExprMap().entrySet()) {
            if (entry.getValue() instanceof IdentifierExpr) {
                IdentifierExpr expr = (IdentifierExpr) entry.getValue();
                if (name.equals(expr.getName())) {
                    return entry;
                }
            }
        }
        return null;
