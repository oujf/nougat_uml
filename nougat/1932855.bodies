class L
!!!36001975.java!!!	setClient(inout systemClient : L::Client) : void
        sClient = systemClient;
!!!36002103.java!!!	setDebugLog(inout enabled : boolean) : void
        sEnableDebug = enabled;
!!!36002231.java!!!	d(inout msg : String, inout  : Object...args) : void
        if (sEnableDebug) {
            printMessage(null, Diagnostic.Kind.NOTE, String.format(msg, args));
        }
!!!36002359.java!!!	d(inout element : Element, inout msg : String, inout  : Object...args) : void
        if (sEnableDebug) {
            printMessage(element, Diagnostic.Kind.NOTE, String.format(msg, args));
        }
!!!36002487.java!!!	d(inout t : Throwable, inout msg : String, inout  : Object...args) : void
        if (sEnableDebug) {
            printMessage(null, Diagnostic.Kind.NOTE,
                    String.format(msg, args) + " " + getStackTrace(t));
        }
!!!36002615.java!!!	w(inout msg : String, inout  : Object...args) : void
        printMessage(null, Kind.WARNING, String.format(msg, args));
!!!36002743.java!!!	w(inout element : Element, inout msg : String, inout  : Object...args) : void
        printMessage(element, Kind.WARNING, String.format(msg, args));
!!!36002871.java!!!	w(inout t : Throwable, inout msg : String, inout  : Object...args) : void
        printMessage(null, Kind.WARNING,
                String.format(msg, args) + " " + getStackTrace(t));
!!!36002999.java!!!	tryToThrowScoped(inout t : Throwable, inout fullMessage : String) : void
        if (t instanceof ScopedException) {
            ScopedException ex = (ScopedException) t;
            if (ex.isValid()) {
                throw ex;
            }
        }
        ScopedException ex = new ScopedException(fullMessage);
        if (ex.isValid()) {
            throw ex;
        }
!!!36003127.java!!!	e(inout msg : String, inout  : Object...args) : void
        String fullMsg = String.format(msg, args);
        tryToThrowScoped(null, fullMsg);
        printMessage(null, Diagnostic.Kind.ERROR, fullMsg);
!!!36003255.java!!!	e(inout element : Element, inout msg : String, inout  : Object...args) : void
        String fullMsg = String.format(msg, args);
        tryToThrowScoped(null, fullMsg);
        printMessage(element, Diagnostic.Kind.ERROR, fullMsg);
!!!36003383.java!!!	e(inout t : Throwable, inout msg : String, inout  : Object...args) : void
        String fullMsg = String.format(msg, args);
        tryToThrowScoped(t, fullMsg);
        printMessage(null, Diagnostic.Kind.ERROR,
                fullMsg + " " + getStackTrace(t));
!!!36003511.java!!!	printMessage(inout element : Element, inout kind : Diagnostic.Kind, inout message : String) : void
        sClient.printMessage(kind, message, element);
        if (kind == Diagnostic.Kind.ERROR) {
            throw new RuntimeException("failure, see logs for details.\n" + message);
        }
!!!36003639.java!!!	isDebugEnabled() : boolean
        return sEnableDebug;
!!!36003895.java!!!	getStackTrace(inout t : Throwable) : String
        StringWriter sw = new StringWriter();
        PrintWriter pw = new PrintWriter(sw);
        try {
            t.printStackTrace(pw);
        } finally {
            pw.close();
        }
        return sw.toString();
