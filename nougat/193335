format 76
"audiofx" // nougat_src::frameworks::base::core::java::android::media::audiofx
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/media/java/android/media/audiofx/"
  java_package "android.media.audiofx"
  classview 186423 "audiofx"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1072439 "AcousticEchoCanceler"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Acoustic Echo Canceler (AEC).
<p>Acoustic Echo Canceler (AEC) is an audio pre-processing which removes the contribution of the
signal received from the remote party from the captured audio signal.
<p>AEC is used by voice communication applications (voice chat, video conferencing, SIP calls)
where the presence of echo with significant delay in the signal received from the remote party
is highly disturbing. AEC is often used in conjunction with noise suppression (NS).
<p>An application creates an AcousticEchoCanceler object to instantiate and control an AEC
engine in the audio capture path.
<p>To attach the AcousticEchoCanceler to a particular {@link android.media.AudioRecord},
specify the audio session ID of this AudioRecord when creating the AcousticEchoCanceler.
The audio session is retrieved by calling
{@link android.media.AudioRecord#getAudioSessionId()} on the AudioRecord instance.
<p>On some devices, an AEC can be inserted by default in the capture path by the platform
according to the {@link android.media.MediaRecorder.AudioSource} used. The application should
call AcousticEchoCanceler.getEnable() after creating the AEC to check the default AEC activation
state on a particular AudioRecord session.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on
controlling audio effects."
      classrelation 3092535 // <generalisation>
	relation 3092535 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3092535 // <generalisation>
	  b parent class_ref 1072567 // AudioEffect
      end

      classrelation 3092663 // TAG (<unidirectional association>)
	relation 3092663 --->
	  a role_name "TAG" init_value " \"AcousticEchoCanceler\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3092663 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 28601015 "isAvailable"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the device implements acoustic echo cancellation.
@return true if the device implements acoustic echo cancellation, false otherwise."
      end

      operation 28601143 "create"
	class_operation public return_type class_ref 1072439 // AcousticEchoCanceler
	nparams 1
	  param in name "audioSession" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an AcousticEchoCanceler and attaches it to the AudioRecord on the audio
session specified.
@param audioSession system wide unique audio session identifier. The AcousticEchoCanceler
will be applied to the AudioRecord with the same audio session.
@return AcousticEchoCanceler created or null if the device does not implement AEC."
      end

      operation 28601271 "AcousticEchoCanceler"
	private explicit_return_type ""
	nparams 1
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
<p> The constructor is not guarantied to succeed and throws the following exceptions:
<ul>
 <li>IllegalArgumentException is thrown if the device does not implement an AEC</li>
 <li>UnsupportedOperationException is thrown is the resources allocated to audio
 pre-procesing are currently exceeded.</li>
 <li>RuntimeException is thrown if a memory allocation error occurs.</li>
</ul>

@param audioSession system wide unique audio session identifier. The AcousticEchoCanceler
will be applied to the AudioRecord with the same audio session.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end
    end

    class 1072567 "AudioEffect"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "AudioEffect is the base class for controlling audio effects provided by the android audio
framework.
<p>Applications should not use the AudioEffect class directly but one of its derived classes to
control specific effects:
<ul>
  <li> {@link android.media.audiofx.Equalizer}</li>
  <li> {@link android.media.audiofx.Virtualizer}</li>
  <li> {@link android.media.audiofx.BassBoost}</li>
  <li> {@link android.media.audiofx.PresetReverb}</li>
  <li> {@link android.media.audiofx.EnvironmentalReverb}</li>
</ul>
<p>To apply the audio effect to a specific AudioTrack or MediaPlayer instance,
the application must specify the audio session ID of that instance when creating the AudioEffect.
(see {@link android.media.MediaPlayer#getAudioSessionId()} for details on audio sessions).
<p>NOTE: attaching insert effects (equalizer, bass boost, virtualizer) to the global audio output
mix by use of session 0 is deprecated.
<p>Creating an AudioEffect object will create the corresponding effect engine in the audio
framework if no instance of the same effect type exists in the specified audio session.
If one exists, this instance will be used.
<p>The application creating the AudioEffect object (or a derived class) will either receive
control of the effect engine or not depending on the priority parameter. If priority is higher
than the priority used by the current effect engine owner, the control will be transfered to the
new object. Otherwise control will remain with the previous object. In this case, the new
application will be notified of changes in effect engine state or control ownership by the
appropiate listener."
      extra_member 143799 "initialization"
	
	cpp "" ""
	java "  static {
        System.loadLibrary(\"audioeffect_jni\");
        native_init();
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 3089719 // TAG (<unidirectional association>)
	relation 3089719 --->
	  a role_name "TAG" init_value " \"AudioEffect-JAVA\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3089719 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3408567 "EFFECT_TYPE_ENV_REVERB"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"c2e5d5f0-94bd-4763-9cac-4e234d06839e\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " effect type UUIDs are taken from hardware/libhardware/include/hardware/audio_effect.h

The following UUIDs define effect types corresponding to standard audio
effects whose implementation and interface conform to the OpenSL ES
specification. The definitions match the corresponding interface IDs in
OpenSLES_IID.h


UUID for environmental reverberation effect
"
      end

      attribute 3408695 "EFFECT_TYPE_PRESET_REVERB"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"47382d60-ddd8-11db-bf3a-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for preset reverberation effect
"
      end

      attribute 3408823 "EFFECT_TYPE_EQUALIZER"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"0bed4300-ddd6-11db-8f34-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for equalizer effect
"
      end

      attribute 3408951 "EFFECT_TYPE_BASS_BOOST"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"0634f220-ddd4-11db-a0fc-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for bass boost effect
"
      end

      attribute 3409079 "EFFECT_TYPE_VIRTUALIZER"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"37cc2c00-dddd-11db-8577-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for virtualizer effect
"
      end

      attribute 3409207 "EFFECT_TYPE_AGC"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"0a8abfe0-654c-11e0-ba26-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUIDs for effect types not covered by OpenSL ES.


UUID for Automatic Gain Control (AGC)
"
      end

      attribute 3409335 "EFFECT_TYPE_AEC"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"7b491460-8d4d-11e0-bd61-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for Acoustic Echo Canceler (AEC)
"
      end

      attribute 3409463 "EFFECT_TYPE_NS"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"58b4b260-8e06-11e0-aa8e-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for Noise Suppressor (NS)
"
      end

      attribute 3409591 "EFFECT_TYPE_LOUDNESS_ENHANCER"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
              .fromString(\"fe3199be-aed0-413f-87bb-11260eb63cf1\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for Loudness Enhancer
"
      end

      attribute 3409719 "EFFECT_TYPE_NULL"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"ec7178ec-e5e1-4432-a3f4-4657e6795210\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Null effect UUID. Used when the UUID for effect type of
@hide
"
      end

      attribute 3409847 "STATE_UNINITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "State of an AudioEffect object that was not successfully initialized upon
creation
@hide
"
      end

      attribute 3409975 "STATE_INITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "State of an AudioEffect object that is ready to be used.
@hide
"
      end

      attribute 3410103 "NATIVE_EVENT_CONTROL_STATUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " to keep in sync with
 frameworks/base/include/media/AudioEffect.h

Event id for engine control ownership change notification.
@hide
"
      end

      attribute 3410231 "NATIVE_EVENT_ENABLED_STATUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Event id for engine state change notification.
@hide
"
      end

      attribute 3410359 "NATIVE_EVENT_PARAMETER_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Event id for engine parameter change notification.
@hide
"
      end

      attribute 3410487 "SUCCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Successful operation.
"
      end

      attribute 3410615 "ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unspecified error.
"
      end

      attribute 3410743 "ALREADY_EXISTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Internal operation status. Not returned by any method.
"
      end

      attribute 3410871 "ERROR_NO_INIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to bad object initialization.
"
      end

      attribute 3410999 "ERROR_BAD_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to bad parameter value.
"
      end

      attribute 3411127 "ERROR_INVALID_OPERATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed because it was requested in wrong state.
"
      end

      attribute 3411255 "ERROR_NO_MEMORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to lack of memory.
"
      end

      attribute 3411383 "ERROR_DEAD_OBJECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to dead remote object.
"
      end

      class 1072695 "Descriptor"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 28593335 "Descriptor"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28593463 "Descriptor"
	  public explicit_return_type ""
	  nparams 5
	    param inout name "type" type class_ref 129591 // String
	    param inout name "uuid" type class_ref 129591 // String
	    param inout name "connectMode" type class_ref 129591 // String
	    param inout name "name" type class_ref 129591 // String
	    param inout name "implementor" type class_ref 129591 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@param type          UUID identifying the effect type. May be one of:
{@link AudioEffect#EFFECT_TYPE_AEC}, {@link AudioEffect#EFFECT_TYPE_AGC},
{@link AudioEffect#EFFECT_TYPE_BASS_BOOST}, {@link AudioEffect#EFFECT_TYPE_ENV_REVERB},
{@link AudioEffect#EFFECT_TYPE_EQUALIZER}, {@link AudioEffect#EFFECT_TYPE_NS},
{@link AudioEffect#EFFECT_TYPE_PRESET_REVERB},
{@link AudioEffect#EFFECT_TYPE_VIRTUALIZER}.
@param uuid         UUID for this particular implementation
@param connectMode  {@link #EFFECT_INSERT} or {@link #EFFECT_AUXILIARY}
@param name         human readable effect name
@param implementor  human readable effect implementor name
"
	end

	attribute 3411511 "type"
	  public explicit_type "UUID"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Indicates the generic type of the effect (Equalizer, Bass boost ...).
 One of {@link AudioEffect#EFFECT_TYPE_AEC},
 {@link AudioEffect#EFFECT_TYPE_AGC}, {@link AudioEffect#EFFECT_TYPE_BASS_BOOST},
 {@link AudioEffect#EFFECT_TYPE_ENV_REVERB}, {@link AudioEffect#EFFECT_TYPE_EQUALIZER},
 {@link AudioEffect#EFFECT_TYPE_NS}, {@link AudioEffect#EFFECT_TYPE_PRESET_REVERB}
  or {@link AudioEffect#EFFECT_TYPE_VIRTUALIZER}.<br>
 For reverberation, bass boost, EQ and virtualizer, the UUID
 corresponds to the OpenSL ES Interface ID.
"
	end

	attribute 3411639 "uuid"
	  public explicit_type "UUID"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Indicates the particular implementation of the effect in that type. Several effects
 can have the same type but this uuid is unique to a given implementation.
"
	end

	classrelation 3089847 // connectMode (<unidirectional association>)
	  relation 3089847 --->
	    a role_name "connectMode" public
	      comment "
 Indicates if the effect is of insert category {@link #EFFECT_INSERT} or auxiliary
 category {@link #EFFECT_AUXILIARY}.
 Insert effects (typically an {@link Equalizer}) are applied
 to the entire audio source and usually not shared by several sources. Auxiliary effects
 (typically a reverberator) are applied to part of the signal (wet) and the effect output
 is added to the original signal (dry).
 Audio pre processing are applied to audio captured on a particular
{@link android.media.AudioRecord}.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3089847 // connectMode (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 3089975 // name (<unidirectional association>)
	  relation 3089975 --->
	    a role_name "name" public
	      comment "
Human readable effect name

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3089975 // name (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	classrelation 3090103 // implementor (<unidirectional association>)
	  relation 3090103 --->
	    a role_name "implementor" public
	      comment "
Human readable effect implementor name

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3090103 // implementor (<unidirectional association>)
	    b parent class_ref 129591 // String
	end
      end

      classrelation 3090231 // EFFECT_INSERT (<unidirectional association>)
	relation 3090231 --->
	  a role_name "EFFECT_INSERT" init_value " \"Insert\"" class_relation const_relation public
	    comment "
Effect connection mode is insert. Specifying an audio session ID when creating the effect
will insert this effect after all players in the same audio session.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090231 // EFFECT_INSERT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3090359 // EFFECT_AUXILIARY (<unidirectional association>)
	relation 3090359 --->
	  a role_name "EFFECT_AUXILIARY" init_value " \"Auxiliary\"" class_relation const_relation public
	    comment "
Effect connection mode is auxiliary.
<p>Auxiliary effects must be created on session 0 (global output mix). In order for a
MediaPlayer or AudioTrack to be fed into this effect, they must be explicitely attached to
this effect and a send level must be specified.
<p>Use the effect ID returned by {@link #getId()} to designate this particular effect when
attaching it to the MediaPlayer or AudioTrack.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090359 // EFFECT_AUXILIARY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3090487 // EFFECT_PRE_PROCESSING (<unidirectional association>)
	relation 3090487 --->
	  a role_name "EFFECT_PRE_PROCESSING" init_value " \"Pre Processing\"" class_relation const_relation public
	    comment "
Effect connection mode is pre processing.
The audio pre processing effects are attached to an audio input (AudioRecord).
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090487 // EFFECT_PRE_PROCESSING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3411767 "mState"
	private explicit_type "int"
	init_value " STATE_UNINITIALIZED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " --------------------------------------------------------------------------
 Member variables
 --------------------

Indicates the state of the AudioEffect instance
"
      end

      classrelation 3090615 // mStateLock (<unidirectional association>)
	relation 3090615 --->
	  a role_name "mStateLock" init_value " new Object()" const_relation private
	    comment "
Lock to synchronize access to mState

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090615 // mStateLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      attribute 3411895 "mId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "System wide unique effect ID
"
      end

      attribute 3412023 "mNativeAudioEffect"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " accessed by native methods"
      end

      attribute 3412151 "mJniData"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3090743 // mDescriptor (<unidirectional association>)
	relation 3090743 --->
	  a role_name "mDescriptor" private
	    comment "
Effect descriptor

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090743 // mDescriptor (<unidirectional association>)
	  b parent class_ref 1072695 // Descriptor
      end

      class 1072823 "OnEnableStatusChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 28597431 "onEnableStatusChange"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "effect" type class_ref 1072567 // AudioEffect
	    param inout name "enabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called on the listener to notify it that the effect engine has been
enabled or disabled.
@param effect the effect on which the interface is registered.
@param enabled new effect state."
	end
      end

      classrelation 3090871 // mEnableStatusChangeListener (<unidirectional association>)
	relation 3090871 --->
	  a role_name "mEnableStatusChangeListener" init_value " null" private
	    comment "
Listener for effect engine state change notifications.

@see #setEnableStatusListener(OnEnableStatusChangeListener)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090871 // mEnableStatusChangeListener (<unidirectional association>)
	  b parent class_ref 1072823 // OnEnableStatusChangeListener
      end

      class 1072951 "OnControlStatusChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 28597559 "onControlStatusChange"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "effect" type class_ref 1072567 // AudioEffect
	    param inout name "controlGranted" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called on the listener to notify it that the effect engine control
has been taken or returned.
@param effect the effect on which the interface is registered.
@param controlGranted true if the application has been granted control of the effect
engine, false otherwise."
	end
      end

      classrelation 3090999 // mControlChangeStatusListener (<unidirectional association>)
	relation 3090999 --->
	  a role_name "mControlChangeStatusListener" init_value " null" private
	    comment "
Listener for effect engine control ownership change notifications.

@see #setControlStatusListener(OnControlStatusChangeListener)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3090999 // mControlChangeStatusListener (<unidirectional association>)
	  b parent class_ref 1072951 // OnControlStatusChangeListener
      end

      class 1073079 "OnParameterChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 28597687 "onParameterChange"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "effect" type class_ref 1072567 // AudioEffect
	    param in name "status" explicit_type "int"
	    param inout name "param" explicit_type "byte"
	    param inout name "value" explicit_type "byte"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called on the listener to notify it that a parameter value has changed.
@param effect the effect on which the interface is registered.
@param status status of the set parameter operation.
@param param ID of the modified parameter.
@param value the new parameter value."
	end
      end

      classrelation 3091127 // mParameterChangeListener (<unidirectional association>)
	relation 3091127 --->
	  a role_name "mParameterChangeListener" init_value " null" private
	    comment "
Listener for effect engine control ownership change notifications.

@see #setParameterListener(OnParameterChangeListener)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3091127 // mParameterChangeListener (<unidirectional association>)
	  b parent class_ref 1073079 // OnParameterChangeListener
      end

      classrelation 3091255 // mListenerLock (<unidirectional association>)
	relation 3091255 --->
	  a role_name "mListenerLock" init_value " new Object()" const_relation public
	    comment "
Lock to protect listeners updates against event notifications
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3091255 // mListenerLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      class 1073207 "NativeEventHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3092279 // <generalisation>
	  relation 3092279 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 3092279 // <generalisation>
	    b parent class_ref 132023 // Handler
	end

	classrelation 3092407 // mAudioEffect (<unidirectional association>)
	  relation 3092407 --->
	    a role_name "mAudioEffect" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3092407 // mAudioEffect (<unidirectional association>)
	    b parent class_ref 1072567 // AudioEffect
	end

	operation 28597815 "NativeEventHandler"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "ae" type class_ref 1072567 // AudioEffect
	    param inout name "looper" type class_ref 129335 // Looper
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28597943 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 3091383 // mNativeEventHandler (<unidirectional association>)
	relation 3091383 --->
	  a role_name "mNativeEventHandler" init_value " null" public
	    comment "
Handler for events coming from the native code
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3091383 // mNativeEventHandler (<unidirectional association>)
	  b parent class_ref 1073207 // NativeEventHandler
      end

      operation 28593591 "AudioEffect"
	public explicit_return_type ""
	nparams 4
	  param inout name "type" explicit_type "UUID"
	  param inout name "uuid" explicit_type "UUID"
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------------
 Constructor, Finalize
 --------------------

Class constructor.

@param type type of effect engine created. See {@link #EFFECT_TYPE_ENV_REVERB},
           {@link #EFFECT_TYPE_EQUALIZER} ... Types corresponding to
           built-in effects are defined by AudioEffect class. Other types
           can be specified provided they correspond an existing OpenSL
           ES interface ID and the corresponsing effect is available on
           the platform. If an unspecified effect type is requested, the
           constructor with throw the IllegalArgumentException. This
           parameter can be set to {@link #EFFECT_TYPE_NULL} in which
           case only the uuid will be used to select the effect.
@param uuid unique identifier of a particular effect implementation.
           Must be specified if the caller wants to use a particular
           implementation of an effect type. This parameter can be set to
           {@link #EFFECT_TYPE_NULL} in which case only the type will
           be used to select the effect.
@param priority the priority level requested by the application for
           controlling the effect engine. As the same effect engine can
           be shared by several applications, this parameter indicates
           how much the requesting application needs control of effect
           parameters. The normal priority is 0, above normal is a
           positive number, below normal a negative number.
@param audioSession system wide unique audio session identifier.
           The effect will be attached to the MediaPlayer or AudioTrack in
           the same audio session.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException
@hide"
      end

      operation 28593719 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases the native AudioEffect resources. It is a good practice to
release the effect engine when not in use as control can be returned to
other applications or the native resources released."
      end

      operation 28593847 "finalize"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28593975 "getDescriptor"
	public return_type class_ref 1072695 // Descriptor
	nparams 0
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the effect descriptor.

@see android.media.audiofx.AudioEffect.Descriptor
@throws IllegalStateException"
      end

      operation 28594103 "queryEffects"
	class_operation public return_type class_ref 1072695 // Descriptor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------------
 Effects Enumeration
 --------------------

Query all effects available on the platform. Returns an array of
{@link android.media.audiofx.AudioEffect.Descriptor} objects

@throws IllegalStateException"
      end

      operation 28594231 "queryPreProcessings"
	class_operation public return_type class_ref 1072695 // Descriptor
	nparams 1
	  param in name "audioSession" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Query all audio pre-processing effects applied to the AudioRecord with the supplied
audio session ID. Returns an array of {@link android.media.audiofx.AudioEffect.Descriptor}
objects.
@param audioSession system wide unique audio session identifier.
@throws IllegalStateException
@hide"
      end

      operation 28594359 "isEffectTypeAvailable"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "type" explicit_type "UUID"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the device implements the specified effect type.
@param type the requested effect type.
@return true if the device implements the specified effect type, false otherwise.
@hide"
      end

      operation 28594487 "setEnabled"
	public explicit_return_type "int"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------------
 Control methods
 --------------------

Enable or disable the effect.
Creating an audio effect does not automatically apply this effect on the audio source. It
creates the resources necessary to process this effect but the audio signal is still bypassed
through the effect engine. Calling this method will make that the effect is actually applied
or not to the audio content being played in the corresponding audio session.

@param enabled the requested enable state
@return {@link #SUCCESS} in case of success, {@link #ERROR_INVALID_OPERATION}
        or {@link #ERROR_DEAD_OBJECT} in case of failure.
@throws IllegalStateException"
      end

      operation 28594615 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "byte"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The setParameter method is provided in several
forms addressing most common parameter formats. This form is the most
generic one where the parameter and its value are both specified as an
array of bytes. The parameter and value type and length are therefore
totally free. For standard effect defined by OpenSL ES, the parameter
format and values must match the definitions in the corresponding OpenSL
ES interface.

@param param the identifier of the parameter to set
@param value the new value for the specified parameter
@return {@link #SUCCESS} in case of success, {@link #ERROR_BAD_VALUE},
        {@link #ERROR_NO_MEMORY}, {@link #ERROR_INVALID_OPERATION} or
        {@link #ERROR_DEAD_OBJECT} in case of failure
@throws IllegalStateException
@hide"
      end

      operation 28594743 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param in name "value" explicit_type "int"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter and its value are integers.

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 28594871 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param in name "value" explicit_type "short"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter is an integer and the value is a
short integer.

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 28594999 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter is an integer and the value is an
array of bytes.

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 28595127 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "int"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter is an array of 1 or 2 integers and
the value is also an array of 1 or 2 integers

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 28595255 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "short"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter is an array of 1 or 2 integers and
the value is an array of 1 or 2 short integers

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 28595383 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter is an array of 1 or 2 integers and
the value is an array of bytes

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 28595511 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "byte"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The getParameter method is provided in several
forms addressing most common parameter formats. This form is the most
generic one where the parameter and its value are both specified as an
array of bytes. The parameter and value type and length are therefore
totally free.

@param param the identifier of the parameter to set
@param value the new value for the specified parameter
@return the number of meaningful bytes in value array in case of success or
 {@link #ERROR_BAD_VALUE}, {@link #ERROR_NO_MEMORY}, {@link #ERROR_INVALID_OPERATION}
 or {@link #ERROR_DEAD_OBJECT} in case of failure.
@throws IllegalStateException
@hide"
      end

      operation 28595639 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an integer and the value is an
array of bytes.

@see #getParameter(byte[], byte[])
@hide"
      end

      operation 28595767 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param inout name "value" explicit_type "int"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an integer and the value is an
array of 1 or 2 integers

@see #getParameter(byte[], byte[])
In case of success, returns the number of meaningful integers in value array.
@hide"
      end

      operation 28595895 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param inout name "value" explicit_type "short"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an integer and the value is an
array of 1 or 2 short integers

@see #getParameter(byte[], byte[])
In case of success, returns the number of meaningful short integers in value array.
@hide"
      end

      operation 28596023 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "int"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an array of 1 or 2 integers and
the value is also an array of 1 or 2 integers

@see #getParameter(byte[], byte[])
In case of success, the returns the number of meaningful integers in value array.
@hide"
      end

      operation 28596151 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "short"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an array of 1 or 2 integers and
the value is an array of 1 or 2 short integers

@see #getParameter(byte[], byte[])
In case of success, returns the number of meaningful short integers in value array.
@hide"
      end

      operation 28596279 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an array of 1 or 2 integers and
the value is an array of bytes

@see #getParameter(byte[], byte[])
@hide"
      end

      operation 28596407 "command"
	public explicit_return_type "int"
	nparams 3
	  param in name "cmdCode" explicit_type "int"
	  param inout name "command" explicit_type "byte"
	  param inout name "reply" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a command to the effect engine. This method is intended to send
proprietary commands to a particular effect implementation.
In case of success, returns the number of meaningful bytes in reply array.
In case of failure, the returned value is negative and implementation specific.
@hide"
      end

      operation 28596535 "getId"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------------
 Getters
 --------------------

Returns effect unique identifier. This system wide unique identifier can
be used to attach this effect to a MediaPlayer or an AudioTrack when the
effect is an auxiliary effect (Reverb)

@return the effect identifier.
@throws IllegalStateException"
      end

      operation 28596663 "getEnabled"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns effect enabled state

@return true if the effect is enabled, false otherwise.
@throws IllegalStateException"
      end

      operation 28596791 "hasControl"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this AudioEffect object is controlling the effect engine.

@return true if this instance has control of effect engine, false
        otherwise.
@throws IllegalStateException"
      end

      operation 28596919 "setEnableStatusListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1072823 // OnEnableStatusChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------------
 Initialization / configuration
 --------------------

Sets the listener AudioEffect notifies when the effect engine is enabled
or disabled.

@param listener"
      end

      operation 28597047 "setControlStatusListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1072951 // OnControlStatusChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the listener AudioEffect notifies when the effect engine control is
taken or returned.

@param listener"
      end

      operation 28597175 "setParameterListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1073079 // OnParameterChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the listener AudioEffect notifies when a parameter is changed.

@param listener
@hide"
      end

      operation 28597303 "createNativeEventHandler"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convenience method for the creation of the native event handler
 It is called only when a non-null event listener is set.
 precondition:
 mNativeEventHandler is null"
      end

      classrelation 3091511 // ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL (<unidirectional association>)
	relation 3091511 --->
	  a role_name "ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL" init_value "
        \"android.media.action.DISPLAY_AUDIO_EFFECT_CONTROL_PANEL\"" class_relation const_relation public
	    comment " -------------------------------------------------------------------------
 Audio Effect Control panel intents
 -------------------------------------------------------------------------

 Intent to launch an audio effect control panel UI.
 <p>The goal of this intent is to enable separate implementations of music/media player
 applications and audio effect control application or services.
 This will allow platform vendors to offer more advanced control options for standard effects
 or control for platform specific effects.
 <p>The intent carries a number of extras used by the player application to communicate
 necessary pieces of information to the control panel application.
 <p>The calling application must use the
 {@link android.app.Activity#startActivityForResult(Intent, int)} method to launch the
 control panel so that its package name is indicated and used by the control panel
 application to keep track of changes for this particular application.
 <p>The {@link #EXTRA_AUDIO_SESSION} extra will indicate an audio session to which the
 audio effects should be applied. If no audio session is specified, either one of the
 follownig will happen:
 <p>- If an audio session was previously opened by the calling application with
 {@link #ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION} intent, the effect changes will
 be applied to that session.
 <p>- If no audio session is opened, the changes will be stored in the package specific
 storage area and applied whenever a new audio session is opened by this application.
 <p>The {@link #EXTRA_CONTENT_TYPE} extra will help the control panel application
 customize both the UI layout and the default audio effect settings if none are already
 stored for the calling application.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	    classrelation_ref 3091511 // ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3091639 // ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION (<unidirectional association>)
	relation 3091639 --->
	  a role_name "ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION" init_value "
        \"android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION\"" class_relation const_relation public
	    comment "
 Intent to signal to the effect control application or service that a new audio session
 is opened and requires audio effects to be applied.
 <p>This is different from {@link #ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL} in that no
 UI should be displayed in this case. Music player applications can broadcast this intent
 before starting playback to make sure that any audio effect settings previously selected
 by the user are applied.
 <p>The effect control application receiving this intent will look for previously stored
 settings for the calling application, create all required audio effects and apply the
 effect settings to the specified audio session.
 <p>The calling package name is indicated by the {@link #EXTRA_PACKAGE_NAME} extra and the
 audio session ID by the {@link #EXTRA_AUDIO_SESSION} extra. Both extras are mandatory.
 <p>If no stored settings are found for the calling application, default settings for the
 content type indicated by {@link #EXTRA_CONTENT_TYPE} will be applied. The default settings
 for a given content type are platform specific.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	    classrelation_ref 3091639 // ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3091767 // ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION (<unidirectional association>)
	relation 3091767 --->
	  a role_name "ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION" init_value "
        \"android.media.action.CLOSE_AUDIO_EFFECT_CONTROL_SESSION\"" class_relation const_relation public
	    comment "
 Intent to signal to the effect control application or service that an audio session
 is closed and that effects should not be applied anymore.
 <p>The effect control application receiving this intent will delete all effects on
 this session and store current settings in package specific storage.
 <p>The calling package name is indicated by the {@link #EXTRA_PACKAGE_NAME} extra and the
 audio session ID by the {@link #EXTRA_AUDIO_SESSION} extra. Both extras are mandatory.
 <p>It is good practice for applications to broadcast this intent when music playback stops
 and/or when exiting to free system resources consumed by audio effect engines.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	    classrelation_ref 3091767 // ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3091895 // EXTRA_AUDIO_SESSION (<unidirectional association>)
	relation 3091895 --->
	  a role_name "EXTRA_AUDIO_SESSION" init_value " \"android.media.extra.AUDIO_SESSION\"" class_relation const_relation public
	    comment "
Contains the ID of the audio session the effects should be applied to.
<p>This extra is for use with {@link #ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL},
{@link #ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION} and
{@link #ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION} intents.
<p>The extra value is of type int and is the audio session ID.
 @see android.media.MediaPlayer#getAudioSessionId() for details on audio sessions.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3091895 // EXTRA_AUDIO_SESSION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3092023 // EXTRA_PACKAGE_NAME (<unidirectional association>)
	relation 3092023 --->
	  a role_name "EXTRA_PACKAGE_NAME" init_value " \"android.media.extra.PACKAGE_NAME\"" class_relation const_relation public
	    comment "
Contains the package name of the calling application.
<p>This extra is for use with {@link #ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION} and
{@link #ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION} intents.
<p>The extra value is a string containing the full package name.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3092023 // EXTRA_PACKAGE_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3092151 // EXTRA_CONTENT_TYPE (<unidirectional association>)
	relation 3092151 --->
	  a role_name "EXTRA_CONTENT_TYPE" init_value " \"android.media.extra.CONTENT_TYPE\"" class_relation const_relation public
	    comment "
Indicates which type of content is played by the application.
<p>This extra is for use with {@link #ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL} and
{@link #ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION} intents.
<p>This information is used by the effect control application to customize UI and select
appropriate default effect settings. The content type is one of the following:
<ul>
  <li>{@link #CONTENT_TYPE_MUSIC}</li>
  <li>{@link #CONTENT_TYPE_MOVIE}</li>
  <li>{@link #CONTENT_TYPE_GAME}</li>
  <li>{@link #CONTENT_TYPE_VOICE}</li>
</ul>
If omitted, the content type defaults to {@link #CONTENT_TYPE_MUSIC}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3092151 // EXTRA_CONTENT_TYPE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3412279 "CONTENT_TYPE_MUSIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for {@link #EXTRA_CONTENT_TYPE} when the type of content played is music
"
      end

      attribute 3412407 "CONTENT_TYPE_MOVIE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for {@link #EXTRA_CONTENT_TYPE} when the type of content played is video or movie
"
      end

      attribute 3412535 "CONTENT_TYPE_GAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for {@link #EXTRA_CONTENT_TYPE} when the type of content played is game audio
"
      end

      attribute 3412663 "CONTENT_TYPE_VOICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for {@link #EXTRA_CONTENT_TYPE} when the type of content played is voice audio
"
      end

      operation 28598071 "postEventFromNative"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "effect_ref" type class_ref 132663 // Object
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	
	
	
	comment " ---------------------------------------------------------
 Java methods called from the native side
 --------------------"
      end

      operation 28598199 "native_init"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment " ---------------------------------------------------------
 Native methods called from the Java side
 --------------------"
      end

      operation 28598327 "native_setup"
	private explicit_return_type "int"
	nparams 8
	  param inout name "audioeffect_this" type class_ref 132663 // Object
	  param inout name "type" type class_ref 129591 // String
	  param inout name "uuid" type class_ref 129591 // String
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	  param inout name "id" explicit_type "int"
	  param inout name "desc" type class_ref 132663 // Object
	  param inout name "opPackageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6}[] ${p6}, ${t7} ${p7}${)}${throws};
"
	
	
	
      end

      operation 28598455 "native_finalize"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28598583 "native_release"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28598711 "native_setEnabled"
	private explicit_return_type "int"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 28598839 "native_getEnabled"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28598967 "native_hasControl"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28599095 "native_setParameter"
	private explicit_return_type "int"
	nparams 4
	  param in name "psize" explicit_type "int"
	  param inout name "param" explicit_type "byte"
	  param in name "vsize" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws};
"
	
	
	
      end

      operation 28599223 "native_getParameter"
	private explicit_return_type "int"
	nparams 4
	  param in name "psize" explicit_type "int"
	  param inout name "param" explicit_type "byte"
	  param in name "vsize" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws};
"
	
	
	
      end

      operation 28599351 "native_command"
	private explicit_return_type "int"
	nparams 5
	  param in name "cmdCode" explicit_type "int"
	  param in name "cmdSize" explicit_type "int"
	  param inout name "cmdData" explicit_type "byte"
	  param in name "repSize" explicit_type "int"
	  param inout name "repData" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws};
"
	
	
	
      end

      operation 28599479 "native_query_effects"
	class_operation private return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28599607 "native_query_pre_processing"
	class_operation private return_type class_ref 132663 // Object
	nparams 1
	  param in name "audioSession" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 28599735 "checkState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "methodName" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------------------------
 Utility methods
 ------------------

@hide"
      end

      operation 28599863 "checkStatus"
	public explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 28599991 "isError"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "status" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 28600119 "byteArrayToInt"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "valueBuf" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 28600247 "byteArrayToInt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "valueBuf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 28600375 "intToByteArray"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 28600503 "byteArrayToShort"
	class_operation public explicit_return_type "short"
	nparams 1
	  param inout name "valueBuf" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 28600631 "byteArrayToShort"
	class_operation public explicit_return_type "short"
	nparams 2
	  param inout name "valueBuf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 28600759 "shortToByteArray"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 28600887 "concatArrays"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param inout name "arrays" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ... ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end
    end

    class 1073335 "AutomaticGainControl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Automatic Gain Control (AGC).
<p>Automatic Gain Control (AGC) is an audio pre-processing which automatically normalizes the
output of the captured signal by boosting or lowering input from the microphone to match a preset
level so that the output signal level is virtually constant.
AGC can be used by applications where the input signal dynamic range is not important but where
a constant strong capture level is desired.
<p>An application creates a AutomaticGainControl object to instantiate and control an AGC
engine in the audio framework.
<p>To attach the AutomaticGainControl to a particular {@link android.media.AudioRecord},
specify the audio session ID of this AudioRecord when creating the AutomaticGainControl.
The audio session is retrieved by calling
{@link android.media.AudioRecord#getAudioSessionId()} on the AudioRecord instance.
<p>On some devices, an AGC can be inserted by default in the capture path by the platform
according to the {@link android.media.MediaRecorder.AudioSource} used. The application should
call AutomaticGainControl.getEnable() after creating the AGC to check the default AGC activation
state on a particular AudioRecord session.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on
controlling audio effects."
      classrelation 3092791 // <generalisation>
	relation 3092791 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3092791 // <generalisation>
	  b parent class_ref 1072567 // AudioEffect
      end

      classrelation 3092919 // TAG (<unidirectional association>)
	relation 3092919 --->
	  a role_name "TAG" init_value " \"AutomaticGainControl\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3092919 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 28601399 "isAvailable"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the device implements automatic gain control.
@return true if the device implements automatic gain control, false otherwise."
      end

      operation 28601527 "create"
	class_operation public return_type class_ref 1073335 // AutomaticGainControl
	nparams 1
	  param in name "audioSession" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an AutomaticGainControl and attaches it to the AudioRecord on the audio
session specified.
@param audioSession system wide unique audio session identifier. The AutomaticGainControl
will be applied to the AudioRecord with the same audio session.
@return AutomaticGainControl created or null if the device does not implement AGC."
      end

      operation 28601655 "AutomaticGainControl"
	private explicit_return_type ""
	nparams 1
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
<p> The constructor is not guarantied to succeed and throws the following exceptions:
<ul>
 <li>IllegalArgumentException is thrown if the device does not implement an AGC</li>
 <li>UnsupportedOperationException is thrown is the resources allocated to audio
 pre-procesing are currently exceeded.</li>
 <li>RuntimeException is thrown if a memory allocation error occurs.</li>
</ul>

@param audioSession system wide unique audio session identifier. The AutomaticGainControl
will be applied to the AudioRecord with the same audio session.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end
    end

    class 1073463 "BassBoost"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Bass boost is an audio effect to boost or amplify low frequencies of the sound. It is comparable
to a simple equalizer but limited to one band amplification in the low frequency range.
<p>An application creates a BassBoost object to instantiate and control a bass boost engine in
the audio framework.
<p>The methods, parameter types and units exposed by the BassBoost implementation are directly
mapping those defined by the OpenSL ES 1.0.1 Specification (http://www.khronos.org/opensles/)
for the SLBassBoostItf interface. Please refer to this specification for more details.
<p>To attach the BassBoost to a particular AudioTrack or MediaPlayer, specify the audio session
ID of this AudioTrack or MediaPlayer when constructing the BassBoost.
<p>NOTE: attaching a BassBoost to the global audio output mix by use of session 0 is deprecated.
<p>See {@link android.media.MediaPlayer#getAudioSessionId()} for details on audio sessions.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on
controlling audio effects."
      classrelation 3093047 // <generalisation>
	relation 3093047 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3093047 // <generalisation>
	  b parent class_ref 1072567 // AudioEffect
      end

      classrelation 3093175 // TAG (<unidirectional association>)
	relation 3093175 --->
	  a role_name "TAG" init_value " \"BassBoost\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3093175 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3412791 "PARAM_STRENGTH_SUPPORTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These constants must be synchronized with those in
 frameworks/base/include/media/EffectBassBoostApi.h

Is strength parameter supported by bass boost engine. Parameter ID for getParameter().
"
      end

      attribute 3412919 "PARAM_STRENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bass boost effect strength. Parameter ID for
{@link android.media.audiofx.BassBoost.OnParameterChangeListener}
"
      end

      attribute 3413047 "mStrengthSupported"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates if strength parameter is supported by the bass boost engine
"
      end

      classrelation 3093303 // mParamListener (<unidirectional association>)
	relation 3093303 --->
	  a role_name "mParamListener" init_value " null" private
	    comment "
Registered listener for parameter changes.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3093303 // mParamListener (<unidirectional association>)
	  b parent class_ref 1073079 // OnParameterChangeListener
      end

      class 1073591 "BaseParameterListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 3093431 // mBaseParamListener (<unidirectional association>)
	relation 3093431 --->
	  a role_name "mBaseParamListener" init_value " null" private
	    comment "
Listener used internally to to receive raw parameter change event from AudioEffect super class

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3093431 // mBaseParamListener (<unidirectional association>)
	  b parent class_ref 1073591 // BaseParameterListener
      end

      classrelation 3093559 // mParamListenerLock (<unidirectional association>)
	relation 3093559 --->
	  a role_name "mParamListenerLock" init_value " new Object()" const_relation private
	    comment "
Lock for access to mParamListener

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3093559 // mParamListenerLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      operation 28601783 "BassBoost"
	public explicit_return_type ""
	nparams 2
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 4
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@param priority the priority level requested by the application for controlling the BassBoost
engine. As the same engine can be shared by several applications, this parameter indicates
how much the requesting application needs control of effect parameters. The normal priority
is 0, above normal is a positive number, below normal a negative number.
@param audioSession system wide unique audio session identifier. The BassBoost will be
attached to the MediaPlayer or AudioTrack in the same audio session.

@throws java.lang.IllegalStateException
@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 28601911 "getStrengthSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether setting strength is supported. If this method returns false, only one
strength is supported and the setStrength() method always rounds to that value.
@return true is strength parameter is supported, false otherwise"
      end

      operation 28602039 "setStrength"
	public explicit_return_type "void"
	nparams 1
	  param in name "strength" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the strength of the bass boost effect. If the implementation does not support per mille
accuracy for setting the strength, it is allowed to round the given strength to the nearest
supported value. You can use the {@link #getRoundedStrength()} method to query the
(possibly rounded) value that was actually set.
@param strength strength of the effect. The valid range for strength strength is [0, 1000],
where 0 per mille designates the mildest effect and 1000 per mille designates the strongest.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28602167 "getRoundedStrength"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current strength of the effect.
@return the strength of the effect. The valid range for strength is [0, 1000], where 0 per
mille designates the mildest effect and 1000 per mille the strongest
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end
    end

    class 1073719 "EnvironmentalReverb"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A sound generated within a room travels in many directions. The listener first hears the direct
sound from the source itself. Later, he or she hears discrete echoes caused by sound bouncing off
nearby walls, the ceiling and the floor. As sound waves arrive after undergoing more and more
reflections, individual reflections become indistinguishable and the listener hears continuous
reverberation that decays over time.
Reverb is vital for modeling a listener's environment. It can be used in music applications
to simulate music being played back in various environments, or in games to immerse the
listener within the game's environment.
The EnvironmentalReverb class allows an application to control each reverb engine property in a
global reverb environment and is more suitable for games. For basic control, more suitable for
music applications, it is recommended to use the
{@link android.media.audiofx.PresetReverb} class.
<p>An application creates a EnvironmentalReverb object to instantiate and control a reverb engine
in the audio framework.
<p>The methods, parameter types and units exposed by the EnvironmentalReverb implementation are
directly mapping those defined by the OpenSL ES 1.0.1 Specification
(http://www.khronos.org/opensles/) for the SLEnvironmentalReverbItf interface.
Please refer to this specification for more details.
<p>The EnvironmentalReverb is an output mix auxiliary effect and should be created on
Audio session 0. In order for a MediaPlayer or AudioTrack to be fed into this effect,
they must be explicitely attached to it and a send level must be specified. Use the effect ID
returned by getId() method to designate this particular effect when attaching it to the
MediaPlayer or AudioTrack.
<p>Creating a reverb on the output mix (audio session 0) requires permission
{@link android.Manifest.permission#MODIFY_AUDIO_SETTINGS}
<p>See {@link android.media.audiofx.AudioEffect} class for more details on controlling
audio effects."
      classrelation 3093687 // <generalisation>
	relation 3093687 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3093687 // <generalisation>
	  b parent class_ref 1072567 // AudioEffect
      end

      classrelation 3093815 // TAG (<unidirectional association>)
	relation 3093815 --->
	  a role_name "TAG" init_value " \"EnvironmentalReverb\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3093815 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3413175 "PARAM_ROOM_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These constants must be synchronized with those in
 frameworks/base/include/media/EffectEnvironmentalReverbApi.h

Room level. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3413303 "PARAM_ROOM_HF_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Room HF level. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3413431 "PARAM_DECAY_TIME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Decay time. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3413559 "PARAM_DECAY_HF_RATIO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Decay HF ratio. Parameter ID for
{@link android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener}
"
      end

      attribute 3413687 "PARAM_REFLECTIONS_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Early reflections level. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3413815 "PARAM_REFLECTIONS_DELAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Early reflections delay. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3413943 "PARAM_REVERB_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb level. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3414071 "PARAM_REVERB_DELAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb delay. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3414199 "PARAM_DIFFUSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Diffusion. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3414327 "PARAM_DENSITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Density. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3414455 "PARAM_PROPERTIES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " used by setProperties()/getProperties"
      end

      classrelation 3093943 // mParamListener (<unidirectional association>)
	relation 3093943 --->
	  a role_name "mParamListener" init_value " null" private
	    comment "
Registered listener for parameter changes

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3093943 // mParamListener (<unidirectional association>)
	  b parent class_ref 1073079 // OnParameterChangeListener
      end

      class 1073847 "BaseParameterListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 3094071 // mBaseParamListener (<unidirectional association>)
	relation 3094071 --->
	  a role_name "mBaseParamListener" init_value " null" private
	    comment "
Listener used internally to to receive raw parameter change event from AudioEffect super
class

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3094071 // mBaseParamListener (<unidirectional association>)
	  b parent class_ref 1073847 // BaseParameterListener
      end

      classrelation 3094199 // mParamListenerLock (<unidirectional association>)
	relation 3094199 --->
	  a role_name "mParamListenerLock" init_value " new Object()" const_relation private
	    comment "
Lock for access to mParamListener

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3094199 // mParamListenerLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      operation 28602295 "EnvironmentalReverb"
	public explicit_return_type ""
	nparams 2
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@param priority the priority level requested by the application for controlling the
EnvironmentalReverb engine. As the same engine can be shared by several applications, this
parameter indicates how much the requesting application needs control of effect parameters.
The normal priority is 0, above normal is a positive number, below normal a negative number.
@param audioSession  system wide unique audio session identifier. If audioSession
 is not 0, the EnvironmentalReverb will be attached to the MediaPlayer or AudioTrack in the
 same audio session. Otherwise, the EnvironmentalReverb will apply to the output mix.
 As the EnvironmentalReverb is an auxiliary effect it is recommended to instantiate it on
 audio session 0 and to attach it to the MediaPLayer auxiliary output.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 28602423 "setRoomLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "room" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the master volume level of the environmental reverb effect.
@param room room level in millibels. The valid range is [-9000, 0].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28602551 "getRoomLevel"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the master volume level of the environmental reverb effect.
@return the room level in millibels.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28602679 "setRoomHFLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "roomHF" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the volume level at 5 kHz relative to the volume level at low frequencies of the
overall reverb effect.
<p>This controls a low-pass filter that will reduce the level of the high-frequency.
@param roomHF high frequency attenuation level in millibels. The valid range is [-9000, 0].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28602807 "getRoomHFLevel"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the room HF level.
@return the room HF level in millibels.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28602935 "setDecayTime"
	public explicit_return_type "void"
	nparams 1
	  param in name "decayTime" explicit_type "int"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time taken for the level of reverberation to decay by 60 dB.
@param decayTime decay time in milliseconds. The valid range is [100, 20000].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28603063 "getDecayTime"
	public explicit_return_type "int"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the decay time.
@return the decay time in milliseconds.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28603191 "setDecayHFRatio"
	public explicit_return_type "void"
	nparams 1
	  param in name "decayHFRatio" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the ratio of high frequency decay time (at 5 kHz) relative to the decay time at low
frequencies.
@param decayHFRatio high frequency decay ratio using a permille scale. The valid range is
[100, 2000]. A ratio of 1000 indicates that all frequencies decay at the same rate.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28603319 "getDecayHFRatio"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ratio of high frequency decay time (at 5 kHz) relative to low frequencies.
@return the decay HF ration. See {@link #setDecayHFRatio(short)} for units.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28603447 "setReflectionsLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "reflectionsLevel" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the volume level of the early reflections.
<p>This level is combined with the overall room level
(set using {@link #setRoomLevel(short)}).
@param reflectionsLevel reflection level in millibels. The valid range is [-9000, 1000].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28603575 "getReflectionsLevel"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the volume level of the early reflections.
@return the early reflections level in millibels.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28603703 "setReflectionsDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "reflectionsDelay" explicit_type "int"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the delay time for the early reflections.
<p>This method sets the time between when the direct path is heard and when the first
reflection is heard.
@param reflectionsDelay reflections delay in milliseconds. The valid range is [0, 300].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28603831 "getReflectionsDelay"
	public explicit_return_type "int"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the reflections delay.
@return the early reflections delay in milliseconds.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28603959 "setReverbLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "reverbLevel" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the volume level of the late reverberation.
<p>This level is combined with the overall room level (set using {@link #setRoomLevel(short)}).
@param reverbLevel reverb level in millibels. The valid range is [-9000, 2000].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28604087 "getReverbLevel"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the reverb level.
@return the reverb level in millibels.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28604215 "setReverbDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "reverbDelay" explicit_type "int"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time between the first reflection and the reverberation.
@param reverbDelay reverb delay in milliseconds. The valid range is [0, 100].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28604343 "getReverbDelay"
	public explicit_return_type "int"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the reverb delay.
@return the reverb delay in milliseconds.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28604471 "setDiffusion"
	public explicit_return_type "void"
	nparams 1
	  param in name "diffusion" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the echo density in the late reverberation decay.
<p>The scale should approximately map linearly to the perceived change in reverberation.
@param diffusion diffusion specified using a permille scale. The diffusion valid range is
[0, 1000]. A value of 1000 o/oo indicates a smooth reverberation decay.
Values below this level give a more <i>grainy</i> character.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28604599 "getDiffusion"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets diffusion level.
@return the diffusion level. See {@link #setDiffusion(short)} for units.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28604727 "setDensity"
	public explicit_return_type "void"
	nparams 1
	  param in name "density" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Controls the modal density of the late reverberation decay.
<p> The scale should approximately map linearly to the perceived change in reverberation.
A lower density creates a hollow sound that is useful for simulating small reverberation
spaces such as bathrooms.
@param density density specified using a permille scale. The valid range is [0, 1000].
A value of 1000 o/oo indicates a natural sounding reverberation. Values below this level
produce a more colored effect.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28604855 "getDensity"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the density level.
@return the density level. See {@link #setDiffusion(short)} for units.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end
    end

    class 1073975 "Equalizer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An Equalizer is used to alter the frequency response of a particular music source or of the main
output mix.
<p>An application creates an Equalizer object to instantiate and control an Equalizer engine
in the audio framework. The application can either simply use predefined presets or have a more
precise control of the gain in each frequency band controlled by the equalizer.
<p>The methods, parameter types and units exposed by the Equalizer implementation are directly
mapping those defined by the OpenSL ES 1.0.1 Specification (http://www.khronos.org/opensles/)
for the SLEqualizerItf interface. Please refer to this specification for more details.
<p>To attach the Equalizer to a particular AudioTrack or MediaPlayer, specify the audio session
ID of this AudioTrack or MediaPlayer when constructing the Equalizer.
<p>NOTE: attaching an Equalizer to the global audio output mix by use of session 0 is deprecated.
<p>See {@link android.media.MediaPlayer#getAudioSessionId()} for details on audio sessions.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on controlling audio
effects."
      classrelation 3094327 // <generalisation>
	relation 3094327 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3094327 // <generalisation>
	  b parent class_ref 1072567 // AudioEffect
      end

      classrelation 3094455 // TAG (<unidirectional association>)
	relation 3094455 --->
	  a role_name "TAG" init_value " \"Equalizer\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3094455 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3414583 "PARAM_NUM_BANDS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These constants must be synchronized with those in
 frameworks/base/include/media/EffectEqualizerApi.h

Number of bands. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3414711 "PARAM_LEVEL_RANGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Band level range. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3414839 "PARAM_BAND_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Band level. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3414967 "PARAM_CENTER_FREQ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Band center frequency. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3415095 "PARAM_BAND_FREQ_RANGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Band frequency range. Parameter ID for
{@link android.media.audiofx.Equalizer.OnParameterChangeListener}
"
      end

      attribute 3415223 "PARAM_GET_BAND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Band for a given frequency. Parameter ID for OnParameterChangeListener

"
      end

      attribute 3415351 "PARAM_CURRENT_PRESET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Current preset. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3415479 "PARAM_GET_NUM_OF_PRESETS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Request number of presets. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3415607 "PARAM_GET_PRESET_NAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Request preset name. Parameter ID for OnParameterChangeListener
"
      end

      attribute 3415735 "PARAM_PROPERTIES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " used by setProperties()/getProperties"
      end

      attribute 3415863 "PARAM_STRING_SIZE_MAX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Maximum size for preset name
"
      end

      attribute 3415991 "mNumBands"
	private explicit_type "short"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Number of bands implemented by Equalizer engine
"
      end

      attribute 3416119 "mNumPresets"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Number of presets implemented by Equalizer engine
"
      end

      classrelation 3094583 // mPresetNames (<unidirectional association>)
	relation 3094583 --->
	  a role_name "mPresetNames" multiplicity "[]" private
	    comment "
Names of presets implemented by Equalizer engine

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3094583 // mPresetNames (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3094711 // mParamListener (<unidirectional association>)
	relation 3094711 --->
	  a role_name "mParamListener" init_value " null" private
	    comment "
Registered listener for parameter changes.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3094711 // mParamListener (<unidirectional association>)
	  b parent class_ref 1073079 // OnParameterChangeListener
      end

      class 1074103 "BaseParameterListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 3094839 // mBaseParamListener (<unidirectional association>)
	relation 3094839 --->
	  a role_name "mBaseParamListener" init_value " null" private
	    comment "
Listener used internally to to receive raw parameter change event from AudioEffect super class

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3094839 // mBaseParamListener (<unidirectional association>)
	  b parent class_ref 1074103 // BaseParameterListener
      end

      classrelation 3094967 // mParamListenerLock (<unidirectional association>)
	relation 3094967 --->
	  a role_name "mParamListenerLock" init_value " new Object()" const_relation private
	    comment "
Lock for access to mParamListener

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3094967 // mParamListenerLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      operation 28604983 "Equalizer"
	public explicit_return_type ""
	nparams 2
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 4
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@param priority the priority level requested by the application for controlling the Equalizer
engine. As the same engine can be shared by several applications, this parameter indicates
how much the requesting application needs control of effect parameters. The normal priority
is 0, above normal is a positive number, below normal a negative number.
@param audioSession  system wide unique audio session identifier. The Equalizer will be
attached to the MediaPlayer or AudioTrack in the same audio session.

@throws java.lang.IllegalStateException
@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 28605111 "getNumberOfBands"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of frequency bands supported by the Equalizer engine.
@return the number of bands
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28605239 "getBandLevelRange"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the level range for use by {@link #setBandLevel(short,short)}. The level is expressed in
milliBel.
@return the band level range in an array of short integers. The first element is the lower
limit of the range, the second element the upper limit.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28605367 "setBandLevel"
	public explicit_return_type "void"
	nparams 2
	  param in name "band" explicit_type "short"
	  param in name "level" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the given equalizer band to the given gain value.
@param band frequency band that will have the new gain. The numbering of the bands starts
from 0 and ends at (number of bands - 1).
@param level new gain in millibels that will be set to the given band. getBandLevelRange()
will define the maximum and minimum values.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException
@see #getNumberOfBands()"
      end

      operation 28605495 "getBandLevel"
	public explicit_return_type "short"
	nparams 1
	  param in name "band" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the gain set for the given equalizer band.
@param band frequency band whose gain is requested. The numbering of the bands starts
from 0 and ends at (number of bands - 1).
@return the gain in millibels of the given band.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28605623 "getCenterFreq"
	public explicit_return_type "int"
	nparams 1
	  param in name "band" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the center frequency of the given band.
@param band frequency band whose center frequency is requested. The numbering of the bands
starts from 0 and ends at (number of bands - 1).
@return the center frequency in milliHertz
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28605751 "getBandFreqRange"
	public explicit_return_type "int"
	nparams 1
	  param in name "band" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the frequency range of the given frequency band.
@param band frequency band whose frequency range is requested. The numbering of the bands
starts from 0 and ends at (number of bands - 1).
@return the frequency range in millHertz in an array of integers. The first element is the
lower limit of the range, the second element the upper limit.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28605879 "getBand"
	public explicit_return_type "short"
	nparams 1
	  param in name "frequency" explicit_type "int"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the band that has the most effect on the given frequency.
@param frequency frequency in milliHertz which is to be equalized via the returned band.
@return the frequency band that has most effect on the given frequency.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28606007 "getCurrentPreset"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets current preset.
@return the preset that is set at the moment.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28606135 "usePreset"
	public explicit_return_type "void"
	nparams 1
	  param in name "preset" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the equalizer according to the given preset.
@param preset new preset that will be taken into use. The valid range is [0,
number of presets-1].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException
@see #getNumberOfPresets()"
      end

      operation 28606263 "getNumberOfPresets"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the total number of presets the equalizer supports. The presets will have indices
[0, number of presets-1].
@return the number of presets the equalizer supports.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28606391 "getPresetName"
	public return_type class_ref 129591 // String
	nparams 1
	  param in name "preset" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the preset name based on the index.
@param preset index of the preset. The valid range is [0, number of presets-1].
@return a string containing the name of the given preset.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      class 1126327 "OnParameterChangeListener"
	visibility package stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end
    end

    class 1074231 "LoudnessEnhancer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "LoudnessEnhancer is an audio effect for increasing audio loudness.
The processing is parametrized by a target gain value, which determines the maximum amount
by which an audio signal will be amplified; signals amplified outside of the sample
range supported by the platform are compressed.
An application creates a LoudnessEnhancer object to instantiate and control a
this audio effect in the audio framework.
To attach the LoudnessEnhancer to a particular AudioTrack or MediaPlayer,
specify the audio session ID of this AudioTrack or MediaPlayer when constructing the effect
(see {@link AudioTrack#getAudioSessionId()} and {@link MediaPlayer#getAudioSessionId()})."
      classrelation 3095095 // <generalisation>
	relation 3095095 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3095095 // <generalisation>
	  b parent class_ref 1072567 // AudioEffect
      end

      classrelation 3095223 // TAG (<unidirectional association>)
	relation 3095223 --->
	  a role_name "TAG" init_value " \"LoudnessEnhancer\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3095223 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3416247 "PARAM_TARGET_GAIN_MB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These parameter constants must be synchronized with those in
 /system/media/audio_effects/include/audio_effects/effect_loudnessenhancer.h

The maximum gain applied applied to the signal to process.
It is expressed in millibels (100mB = 1dB) where 0mB corresponds to no amplification.
"
      end

      classrelation 3095351 // mParamListener (<unidirectional association>)
	relation 3095351 --->
	  a role_name "mParamListener" init_value " null" private
	    comment "
Registered listener for parameter changes.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3095351 // mParamListener (<unidirectional association>)
	  b parent class_ref 1073079 // OnParameterChangeListener
      end

      class 1074359 "BaseParameterListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 3095479 // mBaseParamListener (<unidirectional association>)
	relation 3095479 --->
	  a role_name "mBaseParamListener" init_value " null" private
	    comment "
Listener used internally to to receive raw parameter change events
from AudioEffect super class

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3095479 // mBaseParamListener (<unidirectional association>)
	  b parent class_ref 1074359 // BaseParameterListener
      end

      classrelation 3095607 // mParamListenerLock (<unidirectional association>)
	relation 3095607 --->
	  a role_name "mParamListenerLock" init_value " new Object()" const_relation private
	    comment "
Lock for access to mParamListener

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3095607 // mParamListenerLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      operation 28606519 "LoudnessEnhancer"
	public explicit_return_type ""
	nparams 1
	  param in name "audioSession" explicit_type "int"
	nexceptions 4
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@param audioSession system-wide unique audio session identifier. The LoudnessEnhancer
will be attached to the MediaPlayer or AudioTrack in the same audio session.

@throws java.lang.IllegalStateException
@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 28606647 "LoudnessEnhancer"
	public explicit_return_type ""
	nparams 2
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 4
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Class constructor for the LoudnessEnhancer audio effect.
@param priority the priority level requested by the application for controlling the
LoudnessEnhancer engine. As the same engine can be shared by several applications,
this parameter indicates how much the requesting application needs control of effect
parameters. The normal priority is 0, above normal is a positive number, below normal a
negative number.
@param audioSession system-wide unique audio session identifier. The LoudnessEnhancer
will be attached to the MediaPlayer or AudioTrack in the same audio session.

@throws java.lang.IllegalStateException
@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 28606775 "setTargetGain"
	public explicit_return_type "void"
	nparams 1
	  param in name "gainmB" explicit_type "int"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the target gain for the audio effect.
The target gain is the maximum value by which a sample value will be amplified when the
effect is enabled.
@param gainmB the effect target gain expressed in mB. 0mB corresponds to no amplification.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28606903 "getTargetGain"
	public explicit_return_type "float"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the target gain.
@return the effect target gain expressed in mB.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end
    end

    class 1074487 "NoiseSuppressor"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Noise Suppressor (NS).
<p>Noise suppression (NS) is an audio pre-processing which removes background noise from the
captured signal. The component of the signal considered as noise can be either stationary
(car/airplane engine, AC system) or non-stationary (other peoples conversations, car horn) for
more advanced implementations.
<p>NS is mostly used by voice communication applications (voice chat, video conferencing,
SIP calls).
<p>An application creates a NoiseSuppressor object to instantiate and control an NS
engine in the audio framework.
<p>To attach the NoiseSuppressor to a particular {@link android.media.AudioRecord},
specify the audio session ID of this AudioRecord when creating the NoiseSuppressor.
The audio session is retrieved by calling
{@link android.media.AudioRecord#getAudioSessionId()} on the AudioRecord instance.
<p>On some devices, NS can be inserted by default in the capture path by the platform
according to the {@link android.media.MediaRecorder.AudioSource} used. The application should
call NoiseSuppressor.getEnable() after creating the NS to check the default NS activation
state on a particular AudioRecord session.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on
controlling audio effects."
      classrelation 3095735 // <generalisation>
	relation 3095735 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3095735 // <generalisation>
	  b parent class_ref 1072567 // AudioEffect
      end

      classrelation 3095863 // TAG (<unidirectional association>)
	relation 3095863 --->
	  a role_name "TAG" init_value " \"NoiseSuppressor\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3095863 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 28607031 "isAvailable"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the device implements noise suppression.
@return true if the device implements noise suppression, false otherwise."
      end

      operation 28607159 "create"
	class_operation public return_type class_ref 1074487 // NoiseSuppressor
	nparams 1
	  param in name "audioSession" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a NoiseSuppressor and attaches it to the AudioRecord on the audio
session specified.
@param audioSession system wide unique audio session identifier. The NoiseSuppressor
will be applied to the AudioRecord with the same audio session.
@return NoiseSuppressor created or null if the device does not implement noise
suppression."
      end

      operation 28607287 "NoiseSuppressor"
	private explicit_return_type ""
	nparams 1
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
<p> The constructor is not guarantied to succeed and throws the following exceptions:
<ul>
 <li>IllegalArgumentException is thrown if the device does not implement an NS</li>
 <li>UnsupportedOperationException is thrown is the resources allocated to audio
 pre-procesing are currently exceeded.</li>
 <li>RuntimeException is thrown if a memory allocation error occurs.</li>
</ul>

@param audioSession system wide unique audio session identifier. The NoiseSuppressor
will be applied to the AudioRecord with the same audio session.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end
    end

    class 1074615 "PresetReverb"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A sound generated within a room travels in many directions. The listener first hears the
direct sound from the source itself. Later, he or she hears discrete echoes caused by sound
bouncing off nearby walls, the ceiling and the floor. As sound waves arrive after
undergoing more and more reflections, individual reflections become indistinguishable and
the listener hears continuous reverberation that decays over time.
Reverb is vital for modeling a listener's environment. It can be used in music applications
to simulate music being played back in various environments, or in games to immerse the
listener within the game's environment.
The PresetReverb class allows an application to configure the global reverb using a reverb preset.
This is primarily used for adding some reverb in a music playback context. Applications
requiring control over a more advanced environmental reverb are advised to use the
{@link android.media.audiofx.EnvironmentalReverb} class.
<p>An application creates a PresetReverb object to instantiate and control a reverb engine in the
audio framework.
<p>The methods, parameter types and units exposed by the PresetReverb implementation are
directly mapping those defined by the OpenSL ES 1.0.1 Specification
(http://www.khronos.org/opensles/) for the SLPresetReverbItf interface.
Please refer to this specification for more details.
<p>The PresetReverb is an output mix auxiliary effect and should be created on
Audio session 0. In order for a MediaPlayer or AudioTrack to be fed into this effect,
they must be explicitely attached to it and a send level must be specified. Use the effect ID
returned by getId() method to designate this particular effect when attaching it to the
MediaPlayer or AudioTrack.
<p>Creating a reverb on the output mix (audio session 0) requires permission
{@link android.Manifest.permission#MODIFY_AUDIO_SETTINGS}
<p>See {@link android.media.audiofx.AudioEffect} class for more details on controlling
audio effects."
      classrelation 3095991 // <generalisation>
	relation 3095991 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3095991 // <generalisation>
	  b parent class_ref 1072567 // AudioEffect
      end

      classrelation 3096119 // TAG (<unidirectional association>)
	relation 3096119 --->
	  a role_name "TAG" init_value " \"PresetReverb\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3096119 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3416375 "PARAM_PRESET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These constants must be synchronized with those in
 frameworks/base/include/media/EffectPresetReverbApi.h

Preset. Parameter ID for
{@link android.media.audiofx.PresetReverb.OnParameterChangeListener}
"
      end

      attribute 3416503 "PRESET_NONE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "No reverb or reflections
"
      end

      attribute 3416631 "PRESET_SMALLROOM"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a small room less than five meters in length
"
      end

      attribute 3416759 "PRESET_MEDIUMROOM"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a medium room with a length of ten meters or less
"
      end

      attribute 3416887 "PRESET_LARGEROOM"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a large-sized room suitable for live performances
"
      end

      attribute 3417015 "PRESET_MEDIUMHALL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a medium-sized hall
"
      end

      attribute 3417143 "PRESET_LARGEHALL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a large-sized hall suitable for a full orchestra
"
      end

      attribute 3417271 "PRESET_PLATE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a synthesis of the traditional plate reverb
"
      end

      classrelation 3096247 // mParamListener (<unidirectional association>)
	relation 3096247 --->
	  a role_name "mParamListener" init_value " null" private
	    comment "
Registered listener for parameter changes.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3096247 // mParamListener (<unidirectional association>)
	  b parent class_ref 1073079 // OnParameterChangeListener
      end

      class 1074743 "BaseParameterListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 3096375 // mBaseParamListener (<unidirectional association>)
	relation 3096375 --->
	  a role_name "mBaseParamListener" init_value " null" private
	    comment "
Listener used internally to to receive raw parameter change event from AudioEffect super class

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3096375 // mBaseParamListener (<unidirectional association>)
	  b parent class_ref 1074743 // BaseParameterListener
      end

      classrelation 3096503 // mParamListenerLock (<unidirectional association>)
	relation 3096503 --->
	  a role_name "mParamListenerLock" init_value " new Object()" const_relation private
	    comment "
Lock for access to mParamListener

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3096503 // mParamListenerLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      operation 28607415 "PresetReverb"
	public explicit_return_type ""
	nparams 2
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@param priority the priority level requested by the application for controlling the
PresetReverb engine. As the same engine can be shared by several applications, this
parameter indicates how much the requesting application needs control of effect parameters.
The normal priority is 0, above normal is a positive number, below normal a negative number.
@param audioSession  system wide unique audio session identifier. If audioSession
 is not 0, the PresetReverb will be attached to the MediaPlayer or AudioTrack in the
 same audio session. Otherwise, the PresetReverb will apply to the output mix.
 As the PresetReverb is an auxiliary effect it is recommended to instantiate it on
 audio session 0 and to attach it to the MediaPLayer auxiliary output.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 28607543 "setPreset"
	public explicit_return_type "void"
	nparams 1
	  param in name "preset" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enables a preset on the reverb.
 <p>The reverb PRESET_NONE disables any reverb from the current output but does not free the
 resources associated with the reverb. For an application to signal to the implementation
 to free the resources, it must call the release() method.
@param preset this must be one of the the preset constants defined in this class.
e.g. {@link #PRESET_SMALLROOM}
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28607671 "getPreset"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets current reverb preset.
@return the preset that is set at the moment.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      class 1126839 "OnParameterChangeListener"
	visibility package stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end
    end

    class 1074871 "Virtualizer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An audio virtualizer is a general name for an effect to spatialize audio channels. The exact
behavior of this effect is dependent on the number of audio input channels and the types and
number of audio output channels of the device. For example, in the case of a stereo input and
stereo headphone output, a stereo widening effect is used when this effect is turned on.
<p>An application creates a Virtualizer object to instantiate and control a virtualizer engine
in the audio framework.
<p>The methods, parameter types and units exposed by the Virtualizer implementation are directly
mapping those defined by the OpenSL ES 1.0.1 Specification (http://www.khronos.org/opensles/)
for the SLVirtualizerItf interface. Please refer to this specification for more details.
<p>To attach the Virtualizer to a particular AudioTrack or MediaPlayer, specify the audio session
ID of this AudioTrack or MediaPlayer when constructing the Virtualizer.
<p>NOTE: attaching a Virtualizer to the global audio output mix by use of session 0 is
deprecated.
<p>See {@link android.media.MediaPlayer#getAudioSessionId()} for details on audio sessions.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on controlling
audio effects."
      classrelation 3096631 // <generalisation>
	relation 3096631 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3096631 // <generalisation>
	  b parent class_ref 1072567 // AudioEffect
      end

      classrelation 3096759 // TAG (<unidirectional association>)
	relation 3096759 --->
	  a role_name "TAG" init_value " \"Virtualizer\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3096759 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3417399 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3417527 "PARAM_STRENGTH_SUPPORTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These constants must be synchronized with those in
        system/media/audio_effects/include/audio_effects/effect_virtualizer.h

Is strength parameter supported by virtualizer engine. Parameter ID for getParameter().
"
      end

      attribute 3417655 "PARAM_STRENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Virtualizer effect strength. Parameter ID for
{@link android.media.audiofx.Virtualizer.OnParameterChangeListener}
"
      end

      attribute 3417783 "PARAM_VIRTUAL_SPEAKER_ANGLES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
Parameter ID to query the virtual speaker angles for a channel mask / device configuration.
"
      end

      attribute 3417911 "PARAM_FORCE_VIRTUALIZATION_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
Parameter ID to force the virtualization mode to be that of a specific device
"
      end

      attribute 3418039 "PARAM_VIRTUALIZATION_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
Parameter ID to query the current virtualization mode.
"
      end

      attribute 3418167 "mStrengthSupported"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates if strength parameter is supported by the virtualizer engine
"
      end

      classrelation 3096887 // mParamListener (<unidirectional association>)
	relation 3096887 --->
	  a role_name "mParamListener" init_value " null" private
	    comment "
Registered listener for parameter changes.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3096887 // mParamListener (<unidirectional association>)
	  b parent class_ref 1073079 // OnParameterChangeListener
      end

      class 1074999 "BaseParameterListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 3097015 // mBaseParamListener (<unidirectional association>)
	relation 3097015 --->
	  a role_name "mBaseParamListener" init_value " null" private
	    comment "
Listener used internally to to receive raw parameter change event from AudioEffect super class

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3097015 // mBaseParamListener (<unidirectional association>)
	  b parent class_ref 1074999 // BaseParameterListener
      end

      classrelation 3097143 // mParamListenerLock (<unidirectional association>)
	relation 3097143 --->
	  a role_name "mParamListenerLock" init_value " new Object()" const_relation private
	    comment "
Lock for access to mParamListener

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3097143 // mParamListenerLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      operation 28607799 "Virtualizer"
	public explicit_return_type ""
	nparams 2
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 4
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@param priority the priority level requested by the application for controlling the Virtualizer
engine. As the same engine can be shared by several applications, this parameter indicates
how much the requesting application needs control of effect parameters. The normal priority
is 0, above normal is a positive number, below normal a negative number.
@param audioSession  system wide unique audio session identifier. The Virtualizer will
be attached to the MediaPlayer or AudioTrack in the same audio session.

@throws java.lang.IllegalStateException
@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 28607927 "getStrengthSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether setting strength is supported. If this method returns false, only one
strength is supported and the setStrength() method always rounds to that value.
@return true is strength parameter is supported, false otherwise"
      end

      operation 28608055 "setStrength"
	public explicit_return_type "void"
	nparams 1
	  param in name "strength" explicit_type "short"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the strength of the virtualizer effect. If the implementation does not support per mille
accuracy for setting the strength, it is allowed to round the given strength to the nearest
supported value. You can use the {@link #getRoundedStrength()} method to query the
(possibly rounded) value that was actually set.
@param strength strength of the effect. The valid range for strength strength is [0, 1000],
where 0 per mille designates the mildest effect and 1000 per mille designates the strongest.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28608183 "getRoundedStrength"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current strength of the effect.
@return the strength of the effect. The valid range for strength is [0, 1000], where 0 per
mille designates the mildest effect and 1000 per mille the strongest
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28608311 "getAnglesInt"
	private explicit_return_type "boolean"
	nparams 3
	  param in name "inputChannelMask" explicit_type "int"
	  param in name "deviceType" explicit_type "int"
	  param inout name "angles" explicit_type "int"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if a configuration is supported, and query the virtual speaker angles.
@param inputChannelMask
@param deviceType
@param angles if non-null: array in which the angles will be written. If null, no angles
   are returned
@return true if the combination of channel mask and output device type is supported, false
   otherwise
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      attribute 3418295 "VIRTUALIZATION_MODE_OFF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A virtualization mode indicating virtualization processing is not active.
See {@link #getVirtualizationMode()} as one of the possible return value.
"
      end

      attribute 3418423 "VIRTUALIZATION_MODE_AUTO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A virtualization mode used to indicate the virtualizer effect must stop forcing the
processing to a particular mode in {@link #forceVirtualizationMode(int)}.
"
      end

      attribute 3418551 "VIRTUALIZATION_MODE_BINAURAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A virtualization mode typically used over headphones.
Binaural virtualization describes an audio processing configuration for virtualization
where the left and right channels are respectively reaching the left and right ear of the
user, without also feeding the opposite ear (as is the case when listening over speakers).
<p>Such a mode is therefore meant to be used when audio is playing over stereo wired
headphones or headsets, but also stereo headphones through a wireless A2DP Bluetooth link.
<p>See {@link #canVirtualize(int, int)} to verify this mode is supported by this Virtualizer.
"
      end

      attribute 3418679 "VIRTUALIZATION_MODE_TRANSAURAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A virtualization mode typically used over speakers.
Transaural virtualization describes an audio processing configuration that differs from
binaural (as described in {@link #VIRTUALIZATION_MODE_BINAURAL} in that cross-talk is
present, i.e. audio played from the left channel also reaches the right ear of the user,
and vice-versa.
<p>When supported, such a mode is therefore meant to be used when audio is playing over the
built-in stereo speakers of a device, if they are featured.
<p>See {@link #canVirtualize(int, int)} to verify this mode is supported by this Virtualizer.
"
      end

      class 1075127 "VirtualizationMode"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef( {
        VIRTUALIZATION_MODE_BINAURAL,
        VIRTUALIZATION_MODE_TRANSAURAL
    })
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 1075255 "ForceVirtualizationMode"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef( {
        VIRTUALIZATION_MODE_AUTO,
        VIRTUALIZATION_MODE_BINAURAL,
        VIRTUALIZATION_MODE_TRANSAURAL
    })
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 28608439 "getDeviceForModeQuery"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "virtualizationMode" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalArgumentException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@VirtualizationMode ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28608567 "getDeviceForModeForce"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "virtualizationMode" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalArgumentException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ForceVirtualizationMode ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28608695 "deviceToMode"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "deviceType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28608823 "canVirtualize"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "inputChannelMask" explicit_type "int"
	  param in name "virtualizationMode" explicit_type "int"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @VirtualizationMode ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the combination of a channel mask and virtualization mode is supported by this
virtualizer.
Some virtualizer implementations may only support binaural processing (i.e. only support
headphone output, see {@link #VIRTUALIZATION_MODE_BINAURAL}), some may support transaural
processing (i.e. for speaker output, see {@link #VIRTUALIZATION_MODE_TRANSAURAL}) for the
built-in speakers. Use this method to query the virtualizer implementation capabilities.
@param inputChannelMask the channel mask of the content to virtualize.
@param virtualizationMode the mode for which virtualization processing is to be performed,
   one of {@link #VIRTUALIZATION_MODE_BINAURAL}, {@link #VIRTUALIZATION_MODE_TRANSAURAL}.
@return true if the combination of channel mask and virtualization mode is supported, false
   otherwise.
   <br>An indication that a certain channel mask is not supported doesn't necessarily mean
   you cannot play content with that channel mask, it more likely implies the content will
   be downmixed before being virtualized. For instance a virtualizer that only supports a
   mask such as {@link AudioFormat#CHANNEL_OUT_STEREO}
   will still be able to process content with a mask of
   {@link AudioFormat#CHANNEL_OUT_5POINT1}, but will downmix the content to stereo first, and
   then will virtualize, as opposed to virtualizing each channel individually.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28608951 "getSpeakerAngles"
	public explicit_return_type "boolean"
	nparams 3
	  param in name "inputChannelMask" explicit_type "int"
	  param in name "virtualizationMode" explicit_type "int"
	  param inout name "angles" explicit_type "int"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @VirtualizationMode ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Queries the virtual speaker angles (azimuth and elevation) for a combination of a channel
mask and virtualization mode.
If the virtualization configuration (mask and mode) is supported (see
{@link #canVirtualize(int, int)}, the array angles will contain upon return the
definition of each virtual speaker and its azimuth and elevation angles relative to the
listener.
<br>Note that in some virtualizer implementations, the angles may be strength-dependent.
@param inputChannelMask the channel mask of the content to virtualize.
@param virtualizationMode the mode for which virtualization processing is to be performed,
   one of {@link #VIRTUALIZATION_MODE_BINAURAL}, {@link #VIRTUALIZATION_MODE_TRANSAURAL}.
@param angles a non-null array whose length is 3 times the number of channels in the channel
   mask.
   If the method indicates the configuration is supported, the array will contain upon return
   triplets of values: for each channel <code>i</code> among the channels of the mask:
   <ul>
     <li>the element at index <code>3*i</code> in the array contains the speaker
         identification (e.g. {@link AudioFormat#CHANNEL_OUT_FRONT_LEFT}),</li>
     <li>the element at index <code>3*i+1</code> contains its corresponding azimuth angle
         expressed in degrees, where 0 is the direction the listener faces, 180 is behind
         the listener, and -90 is to her/his left,</li>
     <li>the element at index <code>3*i+2</code> contains its corresponding elevation angle
         where +90 is directly above the listener, 0 is the horizontal plane, and -90 is
         directly below the listener.</li>
@return true if the combination of channel mask and virtualization mode is supported, false
   otherwise.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28609079 "forceVirtualizationMode"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "virtualizationMode" explicit_type "int"
	nexceptions 3
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ForceVirtualizationMode ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces the virtualizer effect to use the given processing mode.
The effect must be enabled for the forced mode to be applied.
@param virtualizationMode one of {@link #VIRTUALIZATION_MODE_BINAURAL},
    {@link #VIRTUALIZATION_MODE_TRANSAURAL} to force a particular processing mode, or
    {@value #VIRTUALIZATION_MODE_AUTO} to stop forcing a mode.
@return true if the processing mode is supported, and it is successfully set, or
    forcing was successfully disabled, false otherwise.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 28609207 "getVirtualizationMode"
	public explicit_return_type "int"
	nparams 0
	nexceptions 2
	  exception class_ref 1052215 // IllegalStateException
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the virtualization mode being used, if any.
@return the virtualization mode being used.
    If virtualization is not active, the virtualization mode will be
    {@link #VIRTUALIZATION_MODE_OFF}. Otherwise the value will be
    {@link #VIRTUALIZATION_MODE_BINAURAL} or {@link #VIRTUALIZATION_MODE_TRANSAURAL}.
    Virtualization may not be active either because the effect is not enabled or
    because the current output device is not compatible with this virtualization
    implementation.
@throws IllegalStateException
@throws UnsupportedOperationException"
      end
    end

    class 1075383 "Visualizer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The Visualizer class enables application to retrieve part of the currently playing audio for
visualization purpose. It is not an audio recording interface and only returns partial and low
quality audio content. However, to protect privacy of certain audio data (e.g voice mail) the use
of the visualizer requires the permission android.permission.RECORD_AUDIO.
<p>The audio session ID passed to the constructor indicates which audio content should be
visualized:<br>
<ul>
  <li>If the session is 0, the audio output mix is visualized</li>
  <li>If the session is not 0, the audio from a particular {@link android.media.MediaPlayer} or
  {@link android.media.AudioTrack}
  using this audio session is visualized </li>
</ul>
<p>Two types of representation of audio content can be captured: <br>
<ul>
  <li>Waveform data: consecutive 8-bit (unsigned) mono samples by using the
  {@link #getWaveForm(byte[])} method</li>
  <li>Frequency data: 8-bit magnitude FFT by using the {@link #getFft(byte[])} method</li>
</ul>
<p>The length of the capture can be retrieved or specified by calling respectively
{@link #getCaptureSize()} and {@link #setCaptureSize(int)} methods. The capture size must be a
power of 2 in the range returned by {@link #getCaptureSizeRange()}.
<p>In addition to the polling capture mode described above with {@link #getWaveForm(byte[])} and
 {@link #getFft(byte[])} methods, a callback mode is also available by installing a listener by
 use of the {@link #setDataCaptureListener(OnDataCaptureListener, int, boolean, boolean)} method.
 The rate at which the listener capture method is called as well as the type of data returned is
 specified.
<p>Before capturing data, the Visualizer must be enabled by calling the
{@link #setEnabled(boolean)} method.
When data capture is not needed any more, the Visualizer should be disabled.
<p>It is good practice to call the {@link #release()} method when the Visualizer is not used
anymore to free up native resources associated to the Visualizer instance.
<p>Creating a Visualizer on the output mix (audio session 0) requires permission
{@link android.Manifest.permission#MODIFY_AUDIO_SETTINGS}
<p>The Visualizer class can also be used to perform measurements on the audio being played back.
The measurements to perform are defined by setting a mask of the requested measurement modes with
{@link #setMeasurementMode(int)}. Supported values are {@link #MEASUREMENT_MODE_NONE} to cancel
any measurement, and {@link #MEASUREMENT_MODE_PEAK_RMS} for peak and RMS monitoring.
Measurements can be retrieved through {@link #getMeasurementPeakRms(MeasurementPeakRms)}."
      extra_member 143927 "initialization"
	
	cpp "" ""
	java "  static {
        System.loadLibrary(\"audioeffect_jni\");
        native_init();
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 3097271 // TAG (<unidirectional association>)
	relation 3097271 --->
	  a role_name "TAG" init_value " \"Visualizer-JAVA\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3097271 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3418807 "STATE_UNINITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "State of a Visualizer object that was not successfully initialized upon creation
"
      end

      attribute 3418935 "STATE_INITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "State of a Visualizer object that is ready to be used.
"
      end

      attribute 3419063 "STATE_ENABLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "State of a Visualizer object that is active.
"
      end

      attribute 3419191 "SCALING_MODE_NORMALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " to keep in sync with system/media/audio_effects/include/audio_effects/effect_visualizer.h

Defines a capture mode where amplification is applied based on the content of the captured
data. This is the default Visualizer mode, and is suitable for music visualization.
"
      end

      attribute 3419319 "SCALING_MODE_AS_PLAYED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines a capture mode where the playback volume will affect (scale) the range of the
captured data. A low playback volume will lead to low sample and fft values, and vice-versa.
"
      end

      attribute 3419447 "MEASUREMENT_MODE_NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines a measurement mode in which no measurements are performed.
"
      end

      attribute 3419575 "MEASUREMENT_MODE_PEAK_RMS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines a measurement mode which computes the peak and RMS value in mB, where 0mB is the
maximum sample value, and -9600mB is the minimum value.
Values for peak and RMS can be retrieved with
{@link #getMeasurementPeakRms(MeasurementPeakRms)}.
"
      end

      attribute 3419703 "NATIVE_EVENT_PCM_CAPTURE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " to keep in sync with frameworks/base/media/jni/audioeffect/android_media_Visualizer.cpp"
      end

      attribute 3419831 "NATIVE_EVENT_FFT_CAPTURE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3419959 "NATIVE_EVENT_SERVER_DIED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3420087 "SUCCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Error codes:

Successful operation.
"
      end

      attribute 3420215 "ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unspecified error.
"
      end

      attribute 3420343 "ALREADY_EXISTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Internal operation status. Not returned by any method.
"
      end

      attribute 3420471 "ERROR_NO_INIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to bad object initialization.
"
      end

      attribute 3420599 "ERROR_BAD_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to bad parameter value.
"
      end

      attribute 3420727 "ERROR_INVALID_OPERATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed because it was requested in wrong state.
"
      end

      attribute 3420855 "ERROR_NO_MEMORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to lack of memory.
"
      end

      attribute 3420983 "ERROR_DEAD_OBJECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to dead remote object.
"
      end

      attribute 3421111 "mState"
	private explicit_type "int"
	init_value " STATE_UNINITIALIZED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "--------------------------------------------------------------------------
 Member variables
--------------------

Indicates the state of the Visualizer instance
"
      end

      classrelation 3097399 // mStateLock (<unidirectional association>)
	relation 3097399 --->
	  a role_name "mStateLock" init_value " new Object()" const_relation private
	    comment "
Lock to synchronize access to mState

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3097399 // mStateLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      attribute 3421239 "mId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "System wide unique Identifier of the visualizer engine used by this Visualizer instance
"
      end

      classrelation 3097527 // mListenerLock (<unidirectional association>)
	relation 3097527 --->
	  a role_name "mListenerLock" init_value " new Object()" const_relation private
	    comment "
Lock to protect listeners updates against event notifications

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3097527 // mListenerLock (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      class 1075511 "NativeEventHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3098039 // <generalisation>
	  relation 3098039 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 3098039 // <generalisation>
	    b parent class_ref 132023 // Handler
	end

	classrelation 3098167 // mVisualizer (<unidirectional association>)
	  relation 3098167 --->
	    a role_name "mVisualizer" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3098167 // mVisualizer (<unidirectional association>)
	    b parent class_ref 1075383 // Visualizer
	end

	operation 28612151 "NativeEventHandler"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "v" type class_ref 1075383 // Visualizer
	    param inout name "looper" type class_ref 129335 // Looper
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28612279 "handleCaptureMessage"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28612407 "handleServerDiedMessage"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 28612535 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 287287 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 3097655 // mNativeEventHandler (<unidirectional association>)
	relation 3097655 --->
	  a role_name "mNativeEventHandler" init_value " null" private
	    comment "
Handler for events coming from the native code

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3097655 // mNativeEventHandler (<unidirectional association>)
	  b parent class_ref 1075511 // NativeEventHandler
      end

      class 1075639 "OnDataCaptureListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 28611511 "onWaveFormDataCapture"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "visualizer" type class_ref 1075383 // Visualizer
	    param inout name "waveform" explicit_type "byte"
	    param in name "samplingRate" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Method called when a new waveform capture is available.
<p>Data in the waveform buffer is valid only within the scope of the callback.
Applications which needs access to the waveform data after returning from the callback
should make a copy of the data instead of holding a reference.
@param visualizer Visualizer object on which the listener is registered.
@param waveform array of bytes containing the waveform representation.
@param samplingRate sampling rate of the audio visualized."
	end

	operation 28611639 "onFftDataCapture"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "visualizer" type class_ref 1075383 // Visualizer
	    param inout name "fft" explicit_type "byte"
	    param in name "samplingRate" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Method called when a new frequency capture is available.
<p>Data in the fft buffer is valid only within the scope of the callback.
Applications which needs access to the fft data after returning from the callback
should make a copy of the data instead of holding a reference.
@param visualizer Visualizer object on which the listener is registered.
@param fft array of bytes containing the frequency representation.
@param samplingRate sampling rate of the audio visualized."
	end
      end

      classrelation 3097783 // mCaptureListener (<unidirectional association>)
	relation 3097783 --->
	  a role_name "mCaptureListener" init_value " null" private
	    comment "
 PCM and FFT capture listener registered by client

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3097783 // mCaptureListener (<unidirectional association>)
	  b parent class_ref 1075639 // OnDataCaptureListener
      end

      class 1075767 "OnServerDiedListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 28611895 "onServerDied"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@hide

Method called when the native media server has died.
<p>If the native media server encounters a fatal error and needs to restart, the binder
connection from the {@link #Visualizer} to the media server will be broken.  Data capture
callbacks will stop happening, and client initiated calls to the {@link #Visualizer}
instance will fail with the error code {@link #DEAD_OBJECT}.  To restore functionality,
clients should {@link #release()} their old visualizer and create a new instance."
	end
      end

      classrelation 3097911 // mServerDiedListener (<unidirectional association>)
	relation 3097911 --->
	  a role_name "mServerDiedListener" init_value " null" private
	    comment "
 Server Died listener registered by client

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3097911 // mServerDiedListener (<unidirectional association>)
	  b parent class_ref 1075767 // OnServerDiedListener
      end

      attribute 3421367 "mNativeVisualizer"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " accessed by native methods"
      end

      attribute 3421495 "mJniData"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 28609335 "Visualizer"
	public explicit_return_type ""
	nparams 1
	  param in name "audioSession" explicit_type "int"
	nexceptions 2
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 446775 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------------------------------------
 Constructor, Finalize
--------------------

Class constructor.
@param audioSession system wide unique audio session identifier. If audioSession
 is not 0, the visualizer will be attached to the MediaPlayer or AudioTrack in the
 same audio session. Otherwise, the Visualizer will apply to the output mix.

@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 28609463 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases the native Visualizer resources. It is a good practice to release the
visualization engine when not in use."
      end

      operation 28609591 "finalize"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28609719 "setEnabled"
	public explicit_return_type "int"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable or disable the visualization engine.
@param enabled requested enable state
@return {@link #SUCCESS} in case of success,
{@link #ERROR_INVALID_OPERATION} or {@link #ERROR_DEAD_OBJECT} in case of failure.
@throws IllegalStateException"
      end

      operation 28609847 "getEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get current activation state of the visualizer.
@return true if the visualizer is active, false otherwise"
      end

      operation 28609975 "getCaptureSizeRange"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the capture size range.
@return the mininum capture size is returned in first array element and the maximum in second
array element."
      end

      operation 28610103 "getMaxCaptureRate"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the maximum capture rate for the callback capture method. This is the maximum value
for the rate parameter of the
{@link #setDataCaptureListener(OnDataCaptureListener, int, boolean, boolean)} method.
@return the maximum capture rate expressed in milliHertz"
      end

      operation 28610231 "setCaptureSize"
	public explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the capture size, i.e. the number of bytes returned by {@link #getWaveForm(byte[])} and
{@link #getFft(byte[])} methods. The capture size must be a power of 2 in the range returned
by {@link #getCaptureSizeRange()}.
This method must not be called when the Visualizer is enabled.
@param size requested capture size
@return {@link #SUCCESS} in case of success,
{@link #ERROR_BAD_VALUE} in case of failure.
@throws IllegalStateException"
      end

      operation 28610359 "getCaptureSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns current capture size.
@return the capture size in bytes."
      end

      operation 28610487 "setScalingMode"
	public explicit_return_type "int"
	nparams 1
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the type of scaling applied on the captured visualization data.
@param mode see {@link #SCALING_MODE_NORMALIZED}
    and {@link #SCALING_MODE_AS_PLAYED}
@return {@link #SUCCESS} in case of success,
    {@link #ERROR_BAD_VALUE} in case of failure.
@throws IllegalStateException"
      end

      operation 28610615 "getScalingMode"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current scaling mode on the captured visualization data.
@return the scaling mode, see {@link #SCALING_MODE_NORMALIZED}
    and {@link #SCALING_MODE_AS_PLAYED}.
@throws IllegalStateException"
      end

      operation 28610743 "setMeasurementMode"
	public explicit_return_type "int"
	nparams 1
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the combination of measurement modes to be performed by this audio effect.
@param mode a mask of the measurements to perform. The valid values are
    {@link #MEASUREMENT_MODE_NONE} (to cancel any measurement)
    or {@link #MEASUREMENT_MODE_PEAK_RMS}.
@return {@link #SUCCESS} in case of success, {@link #ERROR_BAD_VALUE} in case of failure.
@throws IllegalStateException"
      end

      operation 28610871 "getMeasurementMode"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current measurement modes performed by this audio effect
@return the mask of the measurements,
    {@link #MEASUREMENT_MODE_NONE} (when no measurements are performed)
    or {@link #MEASUREMENT_MODE_PEAK_RMS}.
@throws IllegalStateException"
      end

      operation 28610999 "getSamplingRate"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sampling rate of the captured audio.
@return the sampling rate in milliHertz."
      end

      operation 28611127 "getWaveForm"
	public explicit_return_type "int"
	nparams 1
	  param inout name "waveform" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a waveform capture of currently playing audio content. The capture consists in
a number of consecutive 8-bit (unsigned) mono PCM samples equal to the capture size returned
by {@link #getCaptureSize()}.
<p>This method must be called when the Visualizer is enabled.
@param waveform array of bytes where the waveform should be returned
@return {@link #SUCCESS} in case of success,
{@link #ERROR_NO_MEMORY}, {@link #ERROR_INVALID_OPERATION} or {@link #ERROR_DEAD_OBJECT}
in case of failure.
@throws IllegalStateException"
      end

      operation 28611255 "getFft"
	public explicit_return_type "int"
	nparams 1
	  param inout name "fft" explicit_type "byte"
	nexceptions 1
	  exception class_ref 1052215 // IllegalStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a frequency capture of currently playing audio content.
<p>This method must be called when the Visualizer is enabled.
<p>The capture is an 8-bit magnitude FFT, the frequency range covered being 0 (DC) to half of
the sampling rate returned by {@link #getSamplingRate()}. The capture returns the real and
imaginary parts of a number of frequency points equal to half of the capture size plus one.
<p>Note: only the real part is returned for the first point (DC) and the last point
(sampling frequency / 2).
<p>The layout in the returned byte array is as follows:
<ul>
  <li> n is the capture size returned by getCaptureSize()</li>
  <li> Rfk, Ifk are respectively  the real and imaginary parts of the kth frequency
  component</li>
  <li> If Fs is the sampling frequency retuned by getSamplingRate() the kth frequency is:
  (k*Fs)/(n/2) </li>
</ul>
<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">
<tr><td>Index </p></td>
    <td>0 </p></td>
    <td>1 </p></td>
    <td>2 </p></td>
    <td>3 </p></td>
    <td>4 </p></td>
    <td>5 </p></td>
    <td>... </p></td>
    <td>n - 2 </p></td>
    <td>n - 1 </p></td></tr>
<tr><td>Data </p></td>
    <td>Rf0 </p></td>
    <td>Rf(n/2) </p></td>
    <td>Rf1 </p></td>
    <td>If1 </p></td>
    <td>Rf2 </p></td>
    <td>If2 </p></td>
    <td>... </p></td>
    <td>Rf(n-1)/2 </p></td>
    <td>If(n-1)/2 </p></td></tr>
</table>
@param fft array of bytes where the FFT should be returned
@return {@link #SUCCESS} in case of success,
{@link #ERROR_NO_MEMORY}, {@link #ERROR_INVALID_OPERATION} or {@link #ERROR_DEAD_OBJECT}
in case of failure.
@throws IllegalStateException"
      end

      class 1075895 "MeasurementPeakRms"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 3421623 "mPeak"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The peak value in mB.
"
	end

	attribute 3421751 "mRms"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The RMS value in mB.
"
	end
      end

      operation 28611383 "getMeasurementPeakRms"
	public explicit_return_type "int"
	nparams 1
	  param inout name "measurement" type class_ref 1075895 // MeasurementPeakRms
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the latest peak and RMS measurement.
Sets the peak and RMS fields of the supplied {@link Visualizer.MeasurementPeakRms} to the
latest measured values.
@param measurement a non-null {@link Visualizer.MeasurementPeakRms} instance to store
   the measurement values.
@return {@link #SUCCESS} in case of success, {@link #ERROR_BAD_VALUE},
   {@link #ERROR_NO_MEMORY}, {@link #ERROR_INVALID_OPERATION} or {@link #ERROR_DEAD_OBJECT}
   in case of failure."
      end

      operation 28611767 "setDataCaptureListener"
	public explicit_return_type "int"
	nparams 4
	  param inout name "listener" type class_ref 1075639 // OnDataCaptureListener
	  param in name "rate" explicit_type "int"
	  param inout name "waveform" explicit_type "boolean"
	  param inout name "fft" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers an OnDataCaptureListener interface and specifies the rate at which the capture
should be updated as well as the type of capture requested.
<p>Call this method with a null listener to stop receiving the capture updates.
@param listener OnDataCaptureListener registered
@param rate rate in milliHertz at which the capture should be updated
@param waveform true if a waveform capture is requested: the onWaveFormDataCapture()
method will be called on the OnDataCaptureListener interface.
@param fft true if a frequency capture is requested: the onFftDataCapture() method will be
called on the OnDataCaptureListener interface.
@return {@link #SUCCESS} in case of success,
{@link #ERROR_NO_INIT} or {@link #ERROR_BAD_VALUE} in case of failure."
      end

      operation 28612023 "setServerDiedListener"
	public explicit_return_type "int"
	nparams 1
	  param inout name "listener" type class_ref 1075767 // OnServerDiedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide

Registers an OnServerDiedListener interface.
<p>Call this method with a null listener to stop receiving server death notifications.
@return {@link #SUCCESS} in case of success,"
      end

      operation 28612663 "native_init"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "---------------------------------------------------------
 Interface definitions
--------------------"
      end

      operation 28612791 "native_setup"
	private explicit_return_type "int"
	nparams 4
	  param inout name "audioeffect_this" type class_ref 132663 // Object
	  param in name "audioSession" explicit_type "int"
	  param inout name "id" explicit_type "int"
	  param inout name "opPackageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 28612919 "native_finalize"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28613047 "native_release"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28613175 "native_setEnabled"
	private explicit_return_type "int"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 28613303 "native_getEnabled"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28613431 "native_setCaptureSize"
	private explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 28613559 "native_getCaptureSize"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28613687 "native_setScalingMode"
	private explicit_return_type "int"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 28613815 "native_getScalingMode"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28613943 "native_setMeasurementMode"
	private explicit_return_type "int"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 28614071 "native_getMeasurementMode"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28614199 "native_getSamplingRate"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 28614327 "native_getWaveForm"
	private explicit_return_type "int"
	nparams 1
	  param inout name "waveform" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}${)}${throws};
"
	
	
	
      end

      operation 28614455 "native_getFft"
	private explicit_return_type "int"
	nparams 1
	  param inout name "fft" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}${)}${throws};
"
	
	
	
      end

      operation 28614583 "native_getPeakRms"
	private explicit_return_type "int"
	nparams 1
	  param inout name "measurement" type class_ref 1075895 // MeasurementPeakRms
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 28614711 "native_setPeriodicCapture"
	private explicit_return_type "int"
	nparams 3
	  param in name "rate" explicit_type "int"
	  param inout name "waveForm" explicit_type "boolean"
	  param inout name "fft" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 28614839 "postEventFromNative"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "effect_ref" type class_ref 132663 // Object
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	
	
	
	comment "---------------------------------------------------------
 Java methods called from the native side
--------------------"
      end
    end
  end

  deploymentview 171831 "audiofx"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 631991 "AudioEffect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.app.ActivityThread;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.util.Log;
import java.lang.ref.WeakReference;
import java.nio.ByteOrder;
import java.nio.ByteBuffer;
import java.util.UUID;
${definition}"
      associated_classes
	class_ref 1072567 // AudioEffect
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 632119 "AcousticEchoCanceler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1072439 // AcousticEchoCanceler
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 632247 "AutomaticGainControl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1073335 // AutomaticGainControl
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 632375 "NoiseSuppressor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1074487 // NoiseSuppressor
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 632503 "Visualizer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.ActivityThread;
import android.util.Log;
import java.lang.ref.WeakReference;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
${definition}"
      associated_classes
	class_ref 1075383 // Visualizer
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
