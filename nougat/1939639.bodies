class ObservableListAdapter
!!!36033975.java!!!	ObservableListAdapter(inout context : Context, inout list : List<T>, in resourceId : int, in dropDownResourceId : int, in textViewResourceId : int)
        mContext = context;
        mResourceId = resourceId;
        mDropDownResourceId = dropDownResourceId;
        mTextViewResourceId = textViewResourceId;
        mLayoutInflater = (resourceId == 0) ? null :
                (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        setList(list);
!!!36034103.java!!!	setList(inout list : List<T>) : void
        if (mList == list) {
            return;
        }
        if (mList instanceof ObservableList) {
            ((ObservableList) mList).removeOnListChangedCallback(mListChangedCallback);
        }
        mList = list;
        if (mList instanceof ObservableList) {
            if (mListChangedCallback == null) {
                mListChangedCallback = new OnListChangedCallback() {
                    @Override
                    public void onChanged(ObservableList observableList) {
                        notifyDataSetChanged();
                    }

                    @Override
                    public void onItemRangeChanged(ObservableList observableList, int i,
                            int i1) {
                        notifyDataSetChanged();
                    }

                    @Override
                    public void onItemRangeInserted(ObservableList observableList, int i,
                            int i1) {
                        notifyDataSetChanged();
                    }

                    @Override
                    public void onItemRangeMoved(ObservableList observableList, int i, int i1,
                            int i2) {
                        notifyDataSetChanged();
                    }

                    @Override
                    public void onItemRangeRemoved(ObservableList observableList, int i,
                            int i1) {
                        notifyDataSetChanged();
                    }
                };
            }
            ((ObservableList) mList).addOnListChangedCallback(mListChangedCallback);
        }
        notifyDataSetChanged();
!!!36034231.java!!!	getCount() : int
        return mList.size();
!!!36034359.java!!!	getItem(in position : int) : Object
        return mList.get(position);
!!!36034487.java!!!	getItemId(in position : int) : long
        return position;
!!!36034615.java!!!	getView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
        return getViewForResource(mResourceId, position, convertView, parent);
!!!36034743.java!!!	getDropDownView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
        return getViewForResource(mDropDownResourceId, position, convertView, parent);
!!!36034871.java!!!	getViewForResource(in resourceId : int, in position : int, inout convertView : View, inout parent : ViewGroup) : View
        if (convertView == null) {
            if (resourceId == 0) {
                convertView = new TextView(mContext);
            } else {
                convertView = mLayoutInflater.inflate(resourceId, parent, false);
            }
        }
        TextView text = (TextView) (mTextViewResourceId == 0 ? convertView :
                convertView.findViewById(mTextViewResourceId));
        T item = mList.get(position);
        CharSequence value;
        if (item instanceof CharSequence) {
            value = (CharSequence) item;
        } else {
            value = String.valueOf(item);
        }
        text.setText(value);
        return convertView;
