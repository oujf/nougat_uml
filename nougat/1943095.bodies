class ViewBindingAdapter
!!!36043063.java!!!	setPadding(inout view : View, in paddingFloat : float) : void
        final int padding = pixelsToDimensionPixelSize(paddingFloat);
        view.setPadding(padding, padding, padding, padding);
!!!36043191.java!!!	setPaddingBottom(inout view : View, in paddingFloat : float) : void
        final int padding = pixelsToDimensionPixelSize(paddingFloat);
        view.setPadding(view.getPaddingLeft(), view.getPaddingTop(), view.getPaddingRight(),
                padding);
!!!36043319.java!!!	setPaddingEnd(inout view : View, in paddingFloat : float) : void
        final int padding = pixelsToDimensionPixelSize(paddingFloat);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
            view.setPaddingRelative(view.getPaddingStart(), view.getPaddingTop(), padding,
                    view.getPaddingBottom());
        } else {
            view.setPadding(view.getPaddingLeft(), view.getPaddingTop(), padding,
                    view.getPaddingBottom());
        }
!!!36043447.java!!!	setPaddingLeft(inout view : View, in paddingFloat : float) : void
        final int padding = pixelsToDimensionPixelSize(paddingFloat);
        view.setPadding(padding, view.getPaddingTop(), view.getPaddingRight(),
                view.getPaddingBottom());
!!!36043575.java!!!	setPaddingRight(inout view : View, in paddingFloat : float) : void
        final int padding = pixelsToDimensionPixelSize(paddingFloat);
        view.setPadding(view.getPaddingLeft(), view.getPaddingTop(), padding,
                view.getPaddingBottom());
!!!36043703.java!!!	setPaddingStart(inout view : View, in paddingFloat : float) : void
        final int padding = pixelsToDimensionPixelSize(paddingFloat);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
            view.setPaddingRelative(padding, view.getPaddingTop(), view.getPaddingEnd(),
                    view.getPaddingBottom());
        } else {
            view.setPadding(padding, view.getPaddingTop(), view.getPaddingRight(),
                    view.getPaddingBottom());
        }
!!!36043831.java!!!	setPaddingTop(inout view : View, in paddingFloat : float) : void
        final int padding = pixelsToDimensionPixelSize(paddingFloat);
        view.setPadding(view.getPaddingLeft(), padding, view.getPaddingRight(),
                view.getPaddingBottom());
!!!36043959.java!!!	setRequiresFadingEdge(inout view : View, in value : int) : void
        final boolean vertical = (value & FADING_EDGE_VERTICAL) != 0;
        final boolean horizontal = (value & FADING_EDGE_HORIZONTAL) != 0;
        view.setVerticalFadingEdgeEnabled(vertical);
        view.setHorizontalFadingEdgeEnabled(horizontal);
!!!36044087.java!!!	setClickListener(inout view : View, inout clickListener : View::OnClickListener, inout clickable : boolean) : void
        view.setOnClickListener(clickListener);
        view.setClickable(clickable);
!!!36044215.java!!!	setOnClick(inout view : View, inout clickListener : View::OnClickListener, inout clickable : boolean) : void
        view.setOnClickListener(clickListener);
        view.setClickable(clickable);
!!!36044343.java!!!	setOnLongClickListener(inout view : View, inout clickListener : View::OnLongClickListener, inout clickable : boolean) : void
        view.setOnLongClickListener(clickListener);
        view.setLongClickable(clickable);
!!!36044471.java!!!	setOnLongClick(inout view : View, inout clickListener : View::OnLongClickListener, inout clickable : boolean) : void
        view.setOnLongClickListener(clickListener);
        view.setLongClickable(clickable);
!!!36044599.java!!!	setOnAttachStateChangeListener(inout view : View, in detach : ViewBindingAdapter::OnViewDetachedFromWindow, in attach : ViewBindingAdapter::OnViewAttachedToWindow) : void
        if (VERSION.SDK_INT >= VERSION_CODES.HONEYCOMB_MR1) {
            final OnAttachStateChangeListener newListener;
            if (detach == null && attach == null) {
                newListener = null;
            } else {
                newListener = new OnAttachStateChangeListener() {
                    @Override
                    public void onViewAttachedToWindow(View v) {
                        if (attach != null) {
                            attach.onViewAttachedToWindow(v);
                        }
                    }

                    @Override
                    public void onViewDetachedFromWindow(View v) {
                        if (detach != null) {
                            detach.onViewDetachedFromWindow(v);
                        }
                    }
                };
            }
            final OnAttachStateChangeListener oldListener = ListenerUtil.trackListener(view,
                    newListener, R.id.onAttachStateChangeListener);
            if (oldListener != null) {
                view.removeOnAttachStateChangeListener(oldListener);
            }
            if (newListener != null) {
                view.addOnAttachStateChangeListener(newListener);
            }
        }
!!!36044727.java!!!	setOnLayoutChangeListener(inout view : View, inout oldValue : View::OnLayoutChangeListener, inout newValue : View::OnLayoutChangeListener) : void
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            if (oldValue != null) {
                view.removeOnLayoutChangeListener(oldValue);
            }
            if (newValue != null) {
                view.addOnLayoutChangeListener(newValue);
            }
        }
!!!36044855.java!!!	setBackground(inout view : View, inout drawable : Drawable) : void
        if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
            view.setBackground(drawable);
        } else {
            view.setBackgroundDrawable(drawable);
        }
!!!36044983.java!!!	pixelsToDimensionPixelSize(in pixels : float) : int
        final int result = (int) (pixels + 0.5f);
        if (result != 0) {
            return result;
        } else if (pixels == 0) {
            return 0;
        } else if (pixels > 0) {
            return 1;
        } else {
            return -1;
        }
