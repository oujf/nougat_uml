class DataBindingUtil
!!!36051383.java!!!	setDefaultComponent(inout bindingComponent : DataBindingComponent) : void
        sDefaultComponent = bindingComponent;
!!!36051511.java!!!	getDefaultComponent() : DataBindingComponent
        return sDefaultComponent;
!!!36051639.java!!!	inflate(inout inflater : LayoutInflater, in layoutId : int, inout parent : ViewGroup, inout attachToParent : boolean) : T
        return inflate(inflater, layoutId, parent, attachToParent, sDefaultComponent);
!!!36051767.java!!!	inflate(inout inflater : LayoutInflater, in layoutId : int, inout parent : ViewGroup, inout attachToParent : boolean, inout bindingComponent : DataBindingComponent) : T
        final boolean useChildren = parent != null && attachToParent;
        final int startChildren = useChildren ? parent.getChildCount() : 0;
        final View view = inflater.inflate(layoutId, parent, attachToParent);
        if (useChildren) {
            return bindToAddedViews(bindingComponent, parent, startChildren, layoutId);
        } else {
            return bind(bindingComponent, view, layoutId);
        }
!!!36051895.java!!!	bind(inout root : View) : T
        return bind(root, sDefaultComponent);
!!!36052023.java!!!	bind(inout root : View, inout bindingComponent : DataBindingComponent) : T
        T binding = getBinding(root);
        if (binding != null) {
            return binding;
        }
        Object tagObj = root.getTag();
        if (!(tagObj instanceof String)) {
            throw new IllegalArgumentException("View is not a binding layout");
        } else {
            String tag = (String) tagObj;
            int layoutId = sMapper.getLayoutId(tag);
            if (layoutId == 0) {
                throw new IllegalArgumentException("View is not a binding layout");
            }
            return (T) sMapper.getDataBinder(bindingComponent, root, layoutId);
        }
!!!36052151.java!!!	bind(inout bindingComponent : DataBindingComponent, inout roots : View, in layoutId : int) : T
        return (T) sMapper.getDataBinder(bindingComponent, roots, layoutId);
!!!36052279.java!!!	bind(inout bindingComponent : DataBindingComponent, inout root : View, in layoutId : int) : T
        return (T) sMapper.getDataBinder(bindingComponent, root, layoutId);
!!!36052407.java!!!	findBinding(inout view : View) : T
        while (view != null) {
            ViewDataBinding binding = ViewDataBinding.getBinding(view);
            if (binding != null) {
                return (T) binding;
            }
            Object tag = view.getTag();
            if (tag instanceof String) {
                String tagString = (String) tag;
                if (tagString.startsWith("layout") && tagString.endsWith("_0")) {
                    final char nextChar = tagString.charAt(6);
                    final int slashIndex = tagString.indexOf('/', 7);
                    boolean isUnboundRoot = false;
                    if (nextChar == '/') {
                        // only one slash should exist
                        isUnboundRoot = slashIndex == -1;
                    } else if (nextChar == '-' && slashIndex != -1) {
                        int nextSlashIndex = tagString.indexOf('/', slashIndex + 1);
                        // only one slash should exist
                        isUnboundRoot = nextSlashIndex == -1;
                    }
                    if (isUnboundRoot) {
                        // An inflated, but unbound layout
                        return null;
                    }
                }
            }
            ViewParent viewParent = view.getParent();
            if (viewParent instanceof View) {
                view = (View) viewParent;
            } else {
                view = null;
            }
        }
        return null;
!!!36052535.java!!!	getBinding(inout view : View) : T
        return (T) ViewDataBinding.getBinding(view);
!!!36052663.java!!!	setContentView(inout activity : Activity, in layoutId : int) : T
        return setContentView(activity, layoutId, sDefaultComponent);
!!!36052791.java!!!	setContentView(inout activity : Activity, in layoutId : int, inout bindingComponent : DataBindingComponent) : T
        activity.setContentView(layoutId);
        View decorView = activity.getWindow().getDecorView();
        ViewGroup contentView = (ViewGroup) decorView.findViewById(android.R.id.content);
        return bindToAddedViews(bindingComponent, contentView, 0, layoutId);
!!!36052919.java!!!	convertBrIdToString(in id : int) : String
        return sMapper.convertBrIdToString(id);
!!!36053047.java!!!	bindToAddedViews(inout component : DataBindingComponent, inout parent : ViewGroup, in startChildren : int, in layoutId : int) : T
        final int endChildren = parent.getChildCount();
        final int childrenAdded = endChildren - startChildren;
        if (childrenAdded == 1) {
            final View childView = parent.getChildAt(endChildren - 1);
            return bind(component, childView, layoutId);
        } else {
            final View[] children = new View[childrenAdded];
            for (int i = 0; i < childrenAdded; i++) {
                children[i] = parent.getChildAt(i + startChildren);
            }
            return bind(component, children, layoutId);
        }
