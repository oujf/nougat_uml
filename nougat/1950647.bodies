class EventIdsTest
!!!36087095.java!!!	testLibraryObservable() : void
        ObservableInLibrary observableInLibrary = new ObservableInLibrary();
        EventCounter ec = new EventCounter();
        observableInLibrary.addOnPropertyChangedCallback(ec);
        ec.assertProperty(BR.libField1, 0);
        ec.assertProperty(BR.libField2, 0);
        ec.assertProperty(BR.sharedField, 0);

        observableInLibrary.setLibField1("a");
        ec.assertProperty(BR.libField1, 1);
        ec.assertProperty(BR.libField2, 0);
        ec.assertProperty(BR.sharedField, 0);

        observableInLibrary.setLibField2("b");
        ec.assertProperty(BR.libField1, 1);
        ec.assertProperty(BR.libField2, 1);
        ec.assertProperty(BR.sharedField, 0);

        observableInLibrary.setSharedField(3);
        ec.assertProperty(BR.libField1, 1);
        ec.assertProperty(BR.libField2, 1);
        ec.assertProperty(BR.sharedField, 1);
!!!36087223.java!!!	testAppObservable() : void
        ObservableInMainApp observableInMainApp = new ObservableInMainApp();
        EventCounter ec = new EventCounter();
        observableInMainApp.addOnPropertyChangedCallback(ec);
        ec.assertProperty(BR.appField1, 0);
        ec.assertProperty(BR.appField2, 0);
        ec.assertProperty(BR.sharedField, 0);

        observableInMainApp.setAppField2(3);
        ec.assertProperty(BR.appField1, 0);
        ec.assertProperty(BR.appField2, 1);
        ec.assertProperty(BR.sharedField, 0);

        observableInMainApp.setAppField1("b");
        ec.assertProperty(BR.appField1, 1);
        ec.assertProperty(BR.appField2, 1);
        ec.assertProperty(BR.sharedField, 0);

        observableInMainApp.setSharedField(5);
        ec.assertProperty(BR.appField1, 1);
        ec.assertProperty(BR.appField2, 1);
        ec.assertProperty(BR.sharedField, 1);
!!!36087351.java!!!	testExtendingObservable() : void
        ObservableExtendingLib observable = new ObservableExtendingLib();
        EventCounter ec = new EventCounter();
        observable.addOnPropertyChangedCallback(ec);

        ec.assertProperty(BR.childClassField, 0);
        ec.assertProperty(BR.libField1, 0);
        ec.assertProperty(BR.libField2, 0);
        ec.assertProperty(BR.sharedField, 0);

        observable.setChildClassField("a");
        ec.assertProperty(BR.childClassField, 1);
        ec.assertProperty(BR.libField1, 0);
        ec.assertProperty(BR.libField2, 0);
        ec.assertProperty(BR.sharedField, 0);

        observable.setLibField1("b");
        ec.assertProperty(BR.childClassField, 1);
        ec.assertProperty(BR.libField1, 1);
        ec.assertProperty(BR.libField2, 0);
        ec.assertProperty(BR.sharedField, 0);

        observable.setLibField2("c");
        ec.assertProperty(BR.childClassField, 1);
        ec.assertProperty(BR.libField1, 1);
        ec.assertProperty(BR.libField2, 1);
        ec.assertProperty(BR.sharedField, 0);

        observable.setSharedField(2);
        ec.assertProperty(BR.childClassField, 1);
        ec.assertProperty(BR.libField1, 1);
        ec.assertProperty(BR.libField2, 1);
        ec.assertProperty(BR.sharedField, 1);
