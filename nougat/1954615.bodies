class BaseObservableTest
!!!36098871.java!!!	BaseObservableTest()
        super(BasicBindingBinding.class);
!!!36098999.java!!!	setUp() : void
        mNotifications.clear();
        mObservable = new BaseObservable();
        initBinder(null);
!!!36099127.java!!!	testAddCallback() : void
        mObservable.notifyChange();
        assertTrue(mNotifications.isEmpty());
        mObservable.addOnPropertyChangedCallback(mCallback);
        mObservable.notifyChange();
        assertFalse(mNotifications.isEmpty());
!!!36099255.java!!!	testRemoveCallback() : void
        // test there is no exception when the Callback isn't there
        mObservable.removeOnPropertyChangedCallback(mCallback);

        mObservable.addOnPropertyChangedCallback(mCallback);
        mObservable.notifyChange();
        mNotifications.clear();
        mObservable.removeOnPropertyChangedCallback(mCallback);
        mObservable.notifyChange();
        assertTrue(mNotifications.isEmpty());

        // test there is no exception when the Callback isn't there
        mObservable.removeOnPropertyChangedCallback(mCallback);
!!!36099383.java!!!	testNotifyChange() : void
        mObservable.addOnPropertyChangedCallback(mCallback);
        mObservable.notifyChange();
        assertEquals(1, mNotifications.size());
        assertEquals(0, (int) mNotifications.get(0));
!!!36099511.java!!!	testNotifyPropertyChanged() : void
        final int expectedId = 100;
        mObservable.addOnPropertyChangedCallback(mCallback);
        mObservable.notifyPropertyChanged(expectedId);
        assertEquals(1, mNotifications.size());
        assertEquals(expectedId, (int) mNotifications.get(0));
