format 76
"effect" // nougat_src::frameworks::base::core::java::android::media::effect
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/media/mca/effect/java/android/media/effect/"
  java_package "android.media.effect"
  classview 188599 "effect"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1096503 "Effect"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Effects are high-performance transformations that can be applied to image frames. These are
passed in the form of OpenGL ES 2.0 texture names. Typical frames could be images loaded from
disk, or frames from the camera or other video streams.</p>

<p>To create an Effect you must first create an EffectContext. You can obtain an instance of the
context's EffectFactory by calling
{@link android.media.effect.EffectContext#getFactory() getFactory()}. The EffectFactory allows
you to instantiate specific Effects.</p>

<p>The application is responsible for creating an EGL context, and making it current before
applying an effect. An effect is bound to a single EffectContext, which in turn is bound to a
single EGL context. If your EGL context is destroyed, the EffectContext becomes invalid and any
effects bound to this context can no longer be used.</p>
"
      operation 28788279 "getName"
	abstract public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the effect name.

Returns the unique name of the effect, which matches the name used for instantiating this
effect by the EffectFactory.

@return The name of the effect."
      end

      operation 28788407 "apply"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "inputTexId" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "outputTexId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Apply an effect to GL textures.

<p>Apply the Effect on the specified input GL texture, and write the result into the
output GL texture. The texture names passed must be valid in the current GL context.</p>

<p>The input texture must be a valid texture name with the given width and height and must be
bound to a GL_TEXTURE_2D texture image (usually done by calling the glTexImage2D() function).
Multiple mipmap levels may be provided.</p>

<p>If the output texture has not been bound to a texture image, it will be automatically
bound by the effect as a GL_TEXTURE_2D. It will contain one mipmap level (0), which will have
the same size as the input. No other mipmap levels are defined. If the output texture was
bound already, and its size does not match the input texture size, the result may be clipped
or only partially fill the texture.</p>

<p>Note, that regardless of whether a texture image was originally provided or not, both the
input and output textures are owned by the caller. That is, the caller is responsible for
calling glDeleteTextures() to deallocate the input and output textures.</p>

@param inputTexId The GL texture name of a valid and bound input texture.
@param width The width of the input texture in pixels.
@param height The height of the input texture in pixels.
@param outputTexId The GL texture name of the output texture."
      end

      operation 28788535 "setParameter"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "parameterKey" type class_ref 129591 // String
	  param inout name "value" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a filter parameter.

Consult the effect documentation for a list of supported parameter keys for each effect.

@param parameterKey The name of the parameter to adjust.
@param value The new value to set the parameter to.
@throws InvalidArgumentException if parameterName is not a recognized name, or the value is
        not a valid value for this parameter."
      end

      operation 28788663 "setUpdateListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1096631 // EffectUpdateListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set an effect listener.

Some effects may report state changes back to the host, if a listener is set. Consult the
individual effect documentation for more details.

@param listener The listener to receive update callbacks on."
      end

      operation 28788791 "release"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Release an effect.

<p>Releases the effect and any resources associated with it. You may call this if you need to
make sure acquired resources are no longer held by the effect. Releasing an effect makes it
invalid for reuse.</p>

<p>Note that this method must be called with the EffectContext and EGL context current, as
the effect may release internal GL resources.</p>"
      end
    end

    class 1096631 "EffectUpdateListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Some effects may issue callbacks to inform the host of changes to the effect state. This is the
listener interface for receiving those callbacks."
      operation 28790583 "onEffectUpdated"
	public explicit_return_type "void"
	nparams 2
	  param inout name "effect" type class_ref 1096503 // Effect
	  param inout name "info" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the effect state is updated.

@param effect The effect that has been updated.
@param info A value that gives more information about the update. See the effect's
            documentation for more details on what this object is."
      end
    end

    class 1096759 "EffectContext"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>An EffectContext keeps all necessary state information to run Effects within a Open GL ES 2.0
context.</p>

<p>Every EffectContext is bound to one GL context. The application is responsible for creating
this EGL context, and making it current before applying any effect. If your EGL context is
destroyed, the EffectContext becomes invalid and any effects bound to this context can no longer
be used. If you switch to another EGL context, you must create a new EffectContext. Each Effect
is bound to a single EffectContext, and can only be executed in that context.</p>"
      attribute 3525431 "GL_STATE_FBO"
	const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3525559 "GL_STATE_PROGRAM"
	const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3525687 "GL_STATE_ARRAYBUFFER"
	const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3525815 "GL_STATE_COUNT"
	const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3183159 // mFilterContext (<unidirectional association>)
	relation 3183159 --->
	  a role_name "mFilterContext" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3183159 // mFilterContext (<unidirectional association>)
	  b parent class_ref 1096887 // FilterContext
      end

      classrelation 3183287 // mFactory (<unidirectional association>)
	relation 3183287 --->
	  a role_name "mFactory" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3183287 // mFactory (<unidirectional association>)
	  b parent class_ref 1097015 // EffectFactory
      end

      attribute 3525943 "mOldState"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[GL_STATE_COUNT]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 28788919 "createWithCurrentGlContext"
	class_operation public return_type class_ref 1096759 // EffectContext
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a context within the current GL context.

<p>Binds the EffectContext to the current OpenGL context. All subsequent calls to the
EffectContext must be made in the GL context that was active during creation.
When you have finished using a context, you must call {@link #release()}. to dispose of all
resources associated with this context.</p>"
      end

      operation 28789047 "getFactory"
	public return_type class_ref 1097015 // EffectFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the EffectFactory for this context.

<p>The EffectFactory returned from this method allows instantiating new effects within this
context.</p>

@return The EffectFactory instance for this context."
      end

      operation 28789175 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases the context.

<p>Releases all the resources and effects associated with the EffectContext. This renders the
context and all the effects bound to this context invalid. You must no longer use the context
or any of its bound effects after calling release().</p>

<p>Note that this method must be called with the proper EGL context made current, as the
EffectContext and its effects may release internal GL resources.</p>"
      end

      operation 28789303 "EffectContext"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28789431 "initInCurrentGlContext"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28789559 "assertValidGLState"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28789687 "saveGLState"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28789815 "restoreGLState"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1097015 "EffectFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>The EffectFactory class defines the list of available Effects, and provides functionality to
inspect and instantiate them. Some effects may not be available on all platforms, so before
creating a certain effect, the application should confirm that the effect is supported on this
platform by calling {@link #isEffectSupported(String)}.</p>"
      classrelation 3183415 // mEffectContext (<unidirectional association>)
	relation 3183415 --->
	  a role_name "mEffectContext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3183415 // mEffectContext (<unidirectional association>)
	  b parent class_ref 1096759 // EffectContext
      end

      classrelation 3183543 // EFFECT_PACKAGES (<unidirectional association>)
	relation 3183543 --->
	  a role_name "EFFECT_PACKAGES" multiplicity "[]" init_value " {
        \"android.media.effect.effects.\",  // Default effect package
        \"\"                                // Allows specifying full class path
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3183543 // EFFECT_PACKAGES (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3183671 // EFFECT_IDENTITY (<unidirectional association>)
	relation 3183671 --->
	  a role_name "EFFECT_IDENTITY" init_value " \"IdentityEffect\"" class_relation const_relation public
	    comment " List of Effects 

<p>Copies the input texture to the output.</p>
<p>Available parameters: None</p>
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3183671 // EFFECT_IDENTITY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3183799 // EFFECT_BRIGHTNESS (<unidirectional association>)
	relation 3183799 --->
	  a role_name "EFFECT_BRIGHTNESS" init_value "
            \"android.media.effect.effects.BrightnessEffect\"" class_relation const_relation public
	    comment "
<p>Adjusts the brightness of the image.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>brightness</code></td>
    <td>The brightness multiplier.</td>
    <td>Positive float. 1.0 means no change;
larger values will increase brightness.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3183799 // EFFECT_BRIGHTNESS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3183927 // EFFECT_CONTRAST (<unidirectional association>)
	relation 3183927 --->
	  a role_name "EFFECT_CONTRAST" init_value "
            \"android.media.effect.effects.ContrastEffect\"" class_relation const_relation public
	    comment "
<p>Adjusts the contrast of the image.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>contrast</code></td>
    <td>The contrast multiplier.</td>
    <td>Float. 1.0 means no change;
larger values will increase contrast.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3183927 // EFFECT_CONTRAST (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3184055 // EFFECT_FISHEYE (<unidirectional association>)
	relation 3184055 --->
	  a role_name "EFFECT_FISHEYE" init_value "
            \"android.media.effect.effects.FisheyeEffect\"" class_relation const_relation public
	    comment "
<p>Applies a fisheye lens distortion to the image.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>scale</code></td>
    <td>The scale of the distortion.</td>
    <td>Float, between 0 and 1. Zero means no distortion.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3184055 // EFFECT_FISHEYE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3184183 // EFFECT_BACKDROPPER (<unidirectional association>)
	relation 3184183 --->
	  a role_name "EFFECT_BACKDROPPER" init_value "
            \"android.media.effect.effects.BackDropperEffect\"" class_relation const_relation public
	    comment "
<p>Replaces the background of the input frames with frames from a
selected video.  Requires an initial learning period with only the
background visible before the effect becomes active. The effect will wait
until it does not see any motion in the scene before learning the
background and starting the effect.</p>

<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>source</code></td>
    <td>A URI for the background video to use. This parameter must be
        supplied before calling apply() for the first time.</td>
    <td>String, such as from
        {@link android.net.Uri#toString Uri.toString()}</td>
</tr>
</table>

<p>If the update listener is set for this effect using
{@link Effect#setUpdateListener}, it will be called when the effect has
finished learning the background, with a null value for the info
parameter.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3184183 // EFFECT_BACKDROPPER (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3184311 // EFFECT_AUTOFIX (<unidirectional association>)
	relation 3184311 --->
	  a role_name "EFFECT_AUTOFIX" init_value "
            \"android.media.effect.effects.AutoFixEffect\"" class_relation const_relation public
	    comment "
<p>Attempts to auto-fix the image based on histogram equalization.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>scale</code></td>
    <td>The scale of the adjustment.</td>
    <td>Float, between 0 and 1. Zero means no adjustment, while 1 indicates the maximum
    amount of adjustment.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3184311 // EFFECT_AUTOFIX (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3184439 // EFFECT_BLACKWHITE (<unidirectional association>)
	relation 3184439 --->
	  a role_name "EFFECT_BLACKWHITE" init_value "
            \"android.media.effect.effects.BlackWhiteEffect\"" class_relation const_relation public
	    comment "
<p>Adjusts the range of minimal and maximal color pixel intensities.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>black</code></td>
    <td>The value of the minimal pixel.</td>
    <td>Float, between 0 and 1.</td>
</tr>
<tr><td><code>white</code></td>
    <td>The value of the maximal pixel.</td>
    <td>Float, between 0 and 1.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3184439 // EFFECT_BLACKWHITE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3184567 // EFFECT_CROP (<unidirectional association>)
	relation 3184567 --->
	  a role_name "EFFECT_CROP" init_value "
            \"android.media.effect.effects.CropEffect\"" class_relation const_relation public
	    comment "
<p>Crops an upright rectangular area from the image. If the crop region falls outside of
the image bounds, the results are undefined.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>xorigin</code></td>
    <td>The origin's x-value.</td>
    <td>Integer, between 0 and width of the image.</td>
</tr>
<tr><td><code>yorigin</code></td>
    <td>The origin's y-value.</td>
    <td>Integer, between 0 and height of the image.</td>
</tr>
<tr><td><code>width</code></td>
    <td>The width of the cropped image.</td>
    <td>Integer, between 1 and the width of the image minus xorigin.</td>
</tr>
<tr><td><code>height</code></td>
    <td>The height of the cropped image.</td>
    <td>Integer, between 1 and the height of the image minus yorigin.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3184567 // EFFECT_CROP (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3184695 // EFFECT_CROSSPROCESS (<unidirectional association>)
	relation 3184695 --->
	  a role_name "EFFECT_CROSSPROCESS" init_value "
            \"android.media.effect.effects.CrossProcessEffect\"" class_relation const_relation public
	    comment "
<p>Applies a cross process effect on image, in which the red and green channels are
enhanced while the blue channel is restricted.</p>
<p>Available parameters: None</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3184695 // EFFECT_CROSSPROCESS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3184823 // EFFECT_DOCUMENTARY (<unidirectional association>)
	relation 3184823 --->
	  a role_name "EFFECT_DOCUMENTARY" init_value "
            \"android.media.effect.effects.DocumentaryEffect\"" class_relation const_relation public
	    comment "
<p>Applies black and white documentary style effect on image..</p>
<p>Available parameters: None</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3184823 // EFFECT_DOCUMENTARY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3184951 // EFFECT_BITMAPOVERLAY (<unidirectional association>)
	relation 3184951 --->
	  a role_name "EFFECT_BITMAPOVERLAY" init_value "
            \"android.media.effect.effects.BitmapOverlayEffect\"" class_relation const_relation public
	    comment "
<p>Overlays a bitmap (with premultiplied alpha channel) onto the input image. The bitmap
is stretched to fit the input image.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>bitmap</code></td>
    <td>The overlay bitmap.</td>
    <td>A non-null Bitmap instance.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3184951 // EFFECT_BITMAPOVERLAY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3185079 // EFFECT_DUOTONE (<unidirectional association>)
	relation 3185079 --->
	  a role_name "EFFECT_DUOTONE" init_value "
            \"android.media.effect.effects.DuotoneEffect\"" class_relation const_relation public
	    comment "
<p>Representation of photo using only two color tones.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>first_color</code></td>
    <td>The first color tone.</td>
    <td>Integer, representing an ARGB color with 8 bits per channel. May be created using
    {@link android.graphics.Color Color} class.</td>
</tr>
<tr><td><code>second_color</code></td>
    <td>The second color tone.</td>
    <td>Integer, representing an ARGB color with 8 bits per channel. May be created using
    {@link android.graphics.Color Color} class.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3185079 // EFFECT_DUOTONE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3185207 // EFFECT_FILLLIGHT (<unidirectional association>)
	relation 3185207 --->
	  a role_name "EFFECT_FILLLIGHT" init_value "
            \"android.media.effect.effects.FillLightEffect\"" class_relation const_relation public
	    comment "
<p>Applies back-light filling to the image.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>strength</code></td>
    <td>The strength of the backlight.</td>
    <td>Float, between 0 and 1. Zero means no change.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3185207 // EFFECT_FILLLIGHT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3185335 // EFFECT_FLIP (<unidirectional association>)
	relation 3185335 --->
	  a role_name "EFFECT_FLIP" init_value "
            \"android.media.effect.effects.FlipEffect\"" class_relation const_relation public
	    comment "
<p>Flips image vertically and/or horizontally.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>vertical</code></td>
    <td>Whether to flip image vertically.</td>
    <td>Boolean</td>
</tr>
<tr><td><code>horizontal</code></td>
    <td>Whether to flip image horizontally.</td>
    <td>Boolean</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3185335 // EFFECT_FLIP (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3185463 // EFFECT_GRAIN (<unidirectional association>)
	relation 3185463 --->
	  a role_name "EFFECT_GRAIN" init_value "
            \"android.media.effect.effects.GrainEffect\"" class_relation const_relation public
	    comment "
<p>Applies film grain effect to image.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>strength</code></td>
    <td>The strength of the grain effect.</td>
    <td>Float, between 0 and 1. Zero means no change.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3185463 // EFFECT_GRAIN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3185591 // EFFECT_GRAYSCALE (<unidirectional association>)
	relation 3185591 --->
	  a role_name "EFFECT_GRAYSCALE" init_value "
            \"android.media.effect.effects.GrayscaleEffect\"" class_relation const_relation public
	    comment "
<p>Converts image to grayscale.</p>
<p>Available parameters: None</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3185591 // EFFECT_GRAYSCALE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3185719 // EFFECT_LOMOISH (<unidirectional association>)
	relation 3185719 --->
	  a role_name "EFFECT_LOMOISH" init_value "
            \"android.media.effect.effects.LomoishEffect\"" class_relation const_relation public
	    comment "
<p>Applies lomo-camera style effect to image.</p>
<p>Available parameters: None</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3185719 // EFFECT_LOMOISH (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3185847 // EFFECT_NEGATIVE (<unidirectional association>)
	relation 3185847 --->
	  a role_name "EFFECT_NEGATIVE" init_value "
            \"android.media.effect.effects.NegativeEffect\"" class_relation const_relation public
	    comment "
<p>Inverts the image colors.</p>
<p>Available parameters: None</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3185847 // EFFECT_NEGATIVE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3185975 // EFFECT_POSTERIZE (<unidirectional association>)
	relation 3185975 --->
	  a role_name "EFFECT_POSTERIZE" init_value "
            \"android.media.effect.effects.PosterizeEffect\"" class_relation const_relation public
	    comment "
<p>Applies posterization effect to image.</p>
<p>Available parameters: None</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3185975 // EFFECT_POSTERIZE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3186103 // EFFECT_REDEYE (<unidirectional association>)
	relation 3186103 --->
	  a role_name "EFFECT_REDEYE" init_value "
            \"android.media.effect.effects.RedEyeEffect\"" class_relation const_relation public
	    comment "
<p>Removes red eyes on specified region.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>centers</code></td>
    <td>Multiple center points (x, y) of the red eye regions.</td>
    <td>An array of floats, where (f[2*i], f[2*i+1]) specifies the center of the i'th eye.
    Coordinate values are expected to be normalized between 0 and 1.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3186103 // EFFECT_REDEYE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3186231 // EFFECT_ROTATE (<unidirectional association>)
	relation 3186231 --->
	  a role_name "EFFECT_ROTATE" init_value "
            \"android.media.effect.effects.RotateEffect\"" class_relation const_relation public
	    comment "
<p>Rotates the image. The output frame size must be able to fit the rotated version of
the input image. Note that the rotation snaps to a the closest multiple of 90 degrees.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>angle</code></td>
    <td>The angle of rotation in degrees.</td>
    <td>Integer value. This will be rounded to the nearest multiple of 90.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3186231 // EFFECT_ROTATE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3186359 // EFFECT_SATURATE (<unidirectional association>)
	relation 3186359 --->
	  a role_name "EFFECT_SATURATE" init_value "
            \"android.media.effect.effects.SaturateEffect\"" class_relation const_relation public
	    comment "
<p>Adjusts color saturation of image.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>scale</code></td>
    <td>The scale of color saturation.</td>
    <td>Float, between -1 and 1. 0 means no change, while -1 indicates full desaturation,
    i.e. grayscale.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3186359 // EFFECT_SATURATE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3186487 // EFFECT_SEPIA (<unidirectional association>)
	relation 3186487 --->
	  a role_name "EFFECT_SEPIA" init_value "
            \"android.media.effect.effects.SepiaEffect\"" class_relation const_relation public
	    comment "
<p>Converts image to sepia tone.</p>
<p>Available parameters: None</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3186487 // EFFECT_SEPIA (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3186615 // EFFECT_SHARPEN (<unidirectional association>)
	relation 3186615 --->
	  a role_name "EFFECT_SHARPEN" init_value "
            \"android.media.effect.effects.SharpenEffect\"" class_relation const_relation public
	    comment "
<p>Sharpens the image.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>scale</code></td>
    <td>The degree of sharpening.</td>
    <td>Float, between 0 and 1. 0 means no change.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3186615 // EFFECT_SHARPEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3186743 // EFFECT_STRAIGHTEN (<unidirectional association>)
	relation 3186743 --->
	  a role_name "EFFECT_STRAIGHTEN" init_value "
            \"android.media.effect.effects.StraightenEffect\"" class_relation const_relation public
	    comment "
<p>Rotates the image according to the specified angle, and crops the image so that no
non-image portions are visible.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>angle</code></td>
    <td>The angle of rotation.</td>
    <td>Float, between -45 and +45.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3186743 // EFFECT_STRAIGHTEN (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3186871 // EFFECT_TEMPERATURE (<unidirectional association>)
	relation 3186871 --->
	  a role_name "EFFECT_TEMPERATURE" init_value "
            \"android.media.effect.effects.ColorTemperatureEffect\"" class_relation const_relation public
	    comment "
<p>Adjusts color temperature of the image.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>scale</code></td>
    <td>The value of color temperature.</td>
    <td>Float, between 0 and 1, with 0 indicating cool, and 1 indicating warm. A value of
    of 0.5 indicates no change.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3186871 // EFFECT_TEMPERATURE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3186999 // EFFECT_TINT (<unidirectional association>)
	relation 3186999 --->
	  a role_name "EFFECT_TINT" init_value "
            \"android.media.effect.effects.TintEffect\"" class_relation const_relation public
	    comment "
<p>Tints the photo with specified color.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>tint</code></td>
    <td>The color of the tint.</td>
    <td>Integer, representing an ARGB color with 8 bits per channel. May be created using
    {@link android.graphics.Color Color} class.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3186999 // EFFECT_TINT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3187127 // EFFECT_VIGNETTE (<unidirectional association>)
	relation 3187127 --->
	  a role_name "EFFECT_VIGNETTE" init_value "
            \"android.media.effect.effects.VignetteEffect\"" class_relation const_relation public
	    comment "
<p>Adds a vignette effect to image, i.e. fades away the outer image edges.</p>
<p>Available parameters:</p>
<table>
<tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>
<tr><td><code>scale</code></td>
    <td>The scale of vignetting.</td>
    <td>Float, between 0 and 1. 0 means no change.</td>
</tr>
</table>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3187127 // EFFECT_VIGNETTE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 28789943 "EffectFactory"
	package explicit_return_type ""
	nparams 1
	  param inout name "effectContext" type class_ref 1096759 // EffectContext
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28790071 "createEffect"
	public return_type class_ref 1096503 // Effect
	nparams 1
	  param inout name "effectName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new effect with the given effect name.

<p>The effect's parameters will be set to their default values.</p>

<p>Note that the EGL context associated with the current EffectContext need not be made
current when creating an effect. This allows the host application to instantiate effects
before any EGL context has become current.</p>

@param effectName The name of the effect to create.
@return A new Effect instance.
@throws IllegalArgumentException if the effect with the specified name is not supported or
        not known."
      end

      operation 28790199 "isEffectSupported"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "effectName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if an effect is supported on this platform.

<p>Some effects may only be available on certain platforms. Use this method before
instantiating an effect to make sure it is supported.</p>

@param effectName The name of the effect.
@return true, if the effect is supported on this platform.
@throws IllegalArgumentException if the effect name is not known."
      end

      operation 28790327 "getEffectClassByName"
	class_operation private return_type class_ref 132791 // Class
	nparams 1
	  param inout name "className" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28790455 "instantiateEffect"
	private return_type class_ref 1096503 // Effect
	nparams 2
	  param inout name "effectClass" type class_ref 132791 // Class
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1097143 "FilterEffect"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The FilterEffect class is the base class for all Effects based on Filters from the Mobile
Filter Framework (MFF).
@hide"
      classrelation 3187255 // <generalisation>
	relation 3187255 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3187255 // <generalisation>
	  b parent class_ref 1096503 // Effect
      end

      classrelation 3187383 // mEffectContext (<unidirectional association>)
	relation 3187383 --->
	  a role_name "mEffectContext" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3187383 // mEffectContext (<unidirectional association>)
	  b parent class_ref 1096759 // EffectContext
      end

      classrelation 3187511 // mName (<unidirectional association>)
	relation 3187511 --->
	  a role_name "mName" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3187511 // mName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 28790711 "FilterEffect"
	protected explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 1096759 // EffectContext
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Protected constructor as FilterEffects should be created by Factory."
      end

      operation 28790839 "getName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Get the effect name.

Returns the unique name of the effect, which matches the name used for instantiating this
effect by the EffectFactory.

@return The name of the effect."
      end

      operation 28790967 "beginGLEffect"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper Methods for subclasses ///////////////////////////////////////////////////////////////

Call this before manipulating the GL context. Will assert that the GL environment is in a
valid state, and save it."
      end

      operation 28791095 "endGLEffect"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call this after manipulating the GL context. Restores the previous GL state."
      end

      operation 28791223 "getFilterContext"
	protected return_type class_ref 1096887 // FilterContext
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the active filter context for this effect."
      end

      operation 28791351 "frameFromTexture"
	protected return_type class_ref 1097271 // Frame
	nparams 3
	  param in name "texId" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a texture into a Frame."
      end
    end

    class 1097399 "FilterGraphEffect"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Effect subclass for effects based on a single Filter. Subclasses need only invoke the
constructor with the correct arguments to obtain an Effect implementation.

@hide"
      classrelation 3187639 // <generalisation>
	relation 3187639 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3187639 // <generalisation>
	  b parent class_ref 1097143 // FilterEffect
      end

      classrelation 3187767 // TAG (<unidirectional association>)
	relation 3187767 --->
	  a role_name "TAG" init_value " \"FilterGraphEffect\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3187767 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3187895 // mInputName (<unidirectional association>)
	relation 3187895 --->
	  a role_name "mInputName" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3187895 // mInputName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3188023 // mOutputName (<unidirectional association>)
	relation 3188023 --->
	  a role_name "mOutputName" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3188023 // mOutputName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3188151 // mRunner (<unidirectional association>)
	relation 3188151 --->
	  a role_name "mRunner" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3188151 // mRunner (<unidirectional association>)
	  b parent class_ref 1097527 // GraphRunner
      end

      classrelation 3188279 // mGraph (<unidirectional association>)
	relation 3188279 --->
	  a role_name "mGraph" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3188279 // mGraph (<unidirectional association>)
	  b parent class_ref 1097655 // FilterGraph
      end

      classrelation 3188407 // mSchedulerClass (<unidirectional association>)
	relation 3188407 --->
	  a role_name "mSchedulerClass" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3188407 // mSchedulerClass (<unidirectional association>)
	  b parent class_ref 132791 // Class
      end

      operation 28791479 "FilterGraphEffect"
	public explicit_return_type ""
	nparams 6
	  param inout name "context" type class_ref 1096759 // EffectContext
	  param inout name "name" type class_ref 129591 // String
	  param inout name "graphString" type class_ref 129591 // String
	  param inout name "inputName" type class_ref 129591 // String
	  param inout name "outputName" type class_ref 129591 // String
	  param inout name "scheduler" type class_ref 132791 // Class
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new FilterGraphEffect.

@param name The name of this effect (used to create it in the EffectFactory).
@param graphString The graph string to create the graph.
@param inputName The name of the input GLTextureSource filter.
@param outputName The name of the output GLTextureSource filter."
      end

      operation 28791607 "createGraph"
	private explicit_return_type "void"
	nparams 1
	  param inout name "graphString" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28791735 "apply"
	public explicit_return_type "void"
	nparams 4
	  param in name "inputTexId" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "outputTexId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28791863 "setParameter"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parameterKey" type class_ref 129591 // String
	  param inout name "value" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28791991 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 1097783 "SingleFilterEffect"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Effect subclass for effects based on a single Filter. Subclasses need only invoke the
constructor with the correct arguments to obtain an Effect implementation.

@hide"
      classrelation 3188535 // <generalisation>
	relation 3188535 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3188535 // <generalisation>
	  b parent class_ref 1097143 // FilterEffect
      end

      classrelation 3188663 // mFunction (<unidirectional association>)
	relation 3188663 --->
	  a role_name "mFunction" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3188663 // mFunction (<unidirectional association>)
	  b parent class_ref 1097911 // FilterFunction
      end

      classrelation 3188791 // mInputName (<unidirectional association>)
	relation 3188791 --->
	  a role_name "mInputName" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3188791 // mInputName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3188919 // mOutputName (<unidirectional association>)
	relation 3188919 --->
	  a role_name "mOutputName" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3188919 // mOutputName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 28792119 "SingleFilterEffect"
	public explicit_return_type ""
	nparams 6
	  param inout name "context" type class_ref 1096759 // EffectContext
	  param inout name "name" type class_ref 129591 // String
	  param inout name "filterClass" type class_ref 132791 // Class
	  param inout name "inputName" type class_ref 129591 // String
	  param inout name "outputName" type class_ref 129591 // String
	  param inout name "" explicit_type "Object...finalParameters"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new FilterFunctionEffect.

@param name The name of this effect (used to create it in the EffectFactory).
@param filterClass The class of the filter to wrap.
@param inputName The name of the input image port.
@param outputName The name of the output image port.
@param finalParameters Key-value pairs of final input port assignments."
      end

      operation 28792247 "apply"
	public explicit_return_type "void"
	nparams 4
	  param in name "inputTexId" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "outputTexId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28792375 "setParameter"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parameterKey" type class_ref 129591 // String
	  param inout name "value" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28792503 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 1098039 "SizeChangeEffect"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Effect subclass for effects based on a single Filter with output size differnet
from input.  Subclasses need only invoke the constructor with the correct arguments
to obtain an Effect implementation.

@hide"
      classrelation 3189047 // <generalisation>
	relation 3189047 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3189047 // <generalisation>
	  b parent class_ref 1097783 // SingleFilterEffect
      end

      operation 28792631 "SizeChangeEffect"
	public explicit_return_type ""
	nparams 6
	  param inout name "context" type class_ref 1096759 // EffectContext
	  param inout name "name" type class_ref 129591 // String
	  param inout name "filterClass" type class_ref 132791 // Class
	  param inout name "inputName" type class_ref 129591 // String
	  param inout name "outputName" type class_ref 129591 // String
	  param inout name "" explicit_type "Object...finalParameters"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28792759 "apply"
	public explicit_return_type "void"
	nparams 4
	  param in name "inputTexId" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "outputTexId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end
  end

  deploymentview 173111 "effect"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 639543 "Effect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1096503 // Effect
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 639671 "EffectContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.CachedFrameManager;
import android.filterfw.core.FilterContext;
import android.filterfw.core.GLEnvironment;
import android.opengl.GLES20;
${definition}"
      associated_classes
	class_ref 1096759 // EffectContext
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 639799 "EffectFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Constructor;
${definition}"
      associated_classes
	class_ref 1097015 // EffectFactory
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 639927 "EffectUpdateListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1096631 // EffectUpdateListener
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 640055 "FilterEffect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.FilterContext;
import android.filterfw.core.GLFrame;
import android.filterfw.core.Frame;
import android.filterfw.core.FrameFormat;
import android.filterfw.core.FrameManager;
import android.filterfw.format.ImageFormat;
${definition}"
      associated_classes
	class_ref 1097143 // FilterEffect
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 640183 "FilterGraphEffect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.Filter;
import android.filterfw.core.FilterGraph;
import android.filterfw.core.GraphRunner;
import android.filterfw.core.SyncRunner;
import android.media.effect.FilterEffect;
import android.media.effect.EffectContext;
import android.filterfw.io.GraphIOException;
import android.filterfw.io.GraphReader;
import android.filterfw.io.TextGraphReader;
${definition}"
      associated_classes
	class_ref 1097399 // FilterGraphEffect
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 640311 "SingleFilterEffect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.Filter;
import android.filterfw.core.FilterFactory;
import android.filterfw.core.FilterFunction;
import android.filterfw.core.Frame;
import android.media.effect.EffectContext;
${definition}"
      associated_classes
	class_ref 1097783 // SingleFilterEffect
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 640439 "SizeChangeEffect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.Frame;
import android.media.effect.EffectContext;
${definition}"
      associated_classes
	class_ref 1098039 // SizeChangeEffect
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end

  package_ref 196279 // effects
end
