class NameMappingTest
!!!36122039.java!!!	NameMappingTest()
        super(NameMappingTestBinding.class);
!!!36122167.java!!!	testChanges() : void
        initBinder();
        final AtomicBoolean f1 = new AtomicBoolean(false);
        final AtomicBoolean f2 = new AtomicBoolean(false);
        BasicObject object = new BasicObject() {
            @Override
            public boolean isThisNameDoesNotMatchAnythingElse1() {
                return f1.get();
            }

            @Override
            public boolean getThisNameDoesNotMatchAnythingElse2() {
                return f2.get();
            }
        };
        mBinder.setObj(object);
        mBinder.executePendingBindings();
        for (int i = 0; i < 5; i ++) {
            boolean f1New = (i & 1) != 0;
            boolean f2New = (i & 1 << 1) != 0;
            if (f1New != f1.get()) {
                f1.set(f1New);
                object.notifyPropertyChanged(BR.thisNameDoesNotMatchAnythingElse1);
            }
            if (f2New != f2.get()) {
                f1.set(f2New);
                object.notifyPropertyChanged(BR.thisNameDoesNotMatchAnythingElse2);
            }
            mBinder.executePendingBindings();
            assertEquals(f2.get(), mBinder.textView.isEnabled());
            assertEquals(f2.get(), mBinder.textView2.isEnabled());
            assertEquals(false, mBinder.textView3.isEnabled());

            assertEquals(f1.get(), mBinder.textView.isFocusable());
            assertEquals(f1.get(), mBinder.textView2.isFocusable());
            assertEquals(false, mBinder.textView3.isFocusable());
        }
