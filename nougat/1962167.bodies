class ObservableFieldTest
!!!36128311.java!!!	ObservableFieldTest()
        super(ObservableFieldTestBinding.class);
!!!36128439.java!!!	setUp() : void
        super.setUp();
        initBinder(new Runnable() {
            @Override
            public void run() {
                mObj = new ObservableFieldBindingObject();
                mBinder.setObj(mObj);
                mBinder.executePendingBindings();
            }
        });
!!!36128567.java!!!	testBoolean() : void
        TextView view = mBinder.bField;
        assertEquals("false", view.getText());

        mObj.bField.set(true);
        mBinder.executePendingBindings();

        assertEquals("true", view.getText());
!!!36128695.java!!!	testByte() : void
        TextView view = mBinder.tField;
        assertEquals("0", view.getText());

        mObj.tField.set((byte) 1);
        mBinder.executePendingBindings();

        assertEquals("1", view.getText());
!!!36128823.java!!!	testShort() : void
        TextView view = mBinder.sField;
        assertEquals("0", view.getText());

        mObj.sField.set((short) 1);
        mBinder.executePendingBindings();

        assertEquals("1", view.getText());
!!!36128951.java!!!	testChar() : void
        TextView view = mBinder.cField;
        assertEquals("\u0000", view.getText());

        mObj.cField.set('A');
        mBinder.executePendingBindings();

        assertEquals("A", view.getText());
!!!36129079.java!!!	testInt() : void
        TextView view = mBinder.iField;
        assertEquals("0", view.getText());

        mObj.iField.set(1);
        mBinder.executePendingBindings();

        assertEquals("1", view.getText());
!!!36129207.java!!!	testLong() : void
        TextView view = mBinder.lField;
        assertEquals("0", view.getText());

        mObj.lField.set(1);
        mBinder.executePendingBindings();

        assertEquals("1", view.getText());
!!!36129335.java!!!	testFloat() : void
        TextView view = mBinder.fField;
        assertEquals("0.0", view.getText());

        mObj.fField.set(1);
        mBinder.executePendingBindings();

        assertEquals("1.0", view.getText());
!!!36129463.java!!!	testDouble() : void
        TextView view = mBinder.dField;
        assertEquals("0.0", view.getText());

        mObj.dField.set(1);
        mBinder.executePendingBindings();

        assertEquals("1.0", view.getText());
!!!36129591.java!!!	testObject() : void
        TextView view = mBinder.oField;
        assertEquals("Hello", view.getText());

        mObj.oField.set("World");
        mBinder.executePendingBindings();

        assertEquals("World", view.getText());
!!!36129719.java!!!	testParcelable() : void
        TextView x = mBinder.pFieldx;
        TextView y = mBinder.pFieldy;
        assertEquals(x.getText().toString(), String.valueOf(mObj.pField.get().getX()));
        assertEquals(y.getText().toString(), mObj.pField.get().getY());
        ObservableFieldBindingObject.MyParcelable p2 =
                new ObservableFieldBindingObject.MyParcelable(7, "updated");
        mObj.pField.set(p2);
        mBinder.executePendingBindings();

        assertEquals(x.getText().toString(), String.valueOf(mObj.pField.get().getX()));
        assertEquals(y.getText().toString(), mObj.pField.get().getY());
