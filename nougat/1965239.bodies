class ViewBindingAdapterTest
!!!36138167.java!!!	ViewBindingAdapterTest()
        super(ViewAdapterTestBinding.class, ViewBindingObject.class, R.layout.view_adapter_test);
!!!36138295.java!!!	setUp() : void
        super.setUp();
!!!36138423.java!!!	testPadding() : void
        View view = mBinder.padding;
        assertEquals(mBindingObject.getPadding(), view.getPaddingBottom());
        assertEquals(mBindingObject.getPadding(), view.getPaddingTop());
        assertEquals(mBindingObject.getPadding(), view.getPaddingRight());
        assertEquals(mBindingObject.getPadding(), view.getPaddingLeft());

        changeValues();

        assertEquals(mBindingObject.getPadding(), view.getPaddingBottom());
        assertEquals(mBindingObject.getPadding(), view.getPaddingTop());
        assertEquals(mBindingObject.getPadding(), view.getPaddingRight());
        assertEquals(mBindingObject.getPadding(), view.getPaddingLeft());
!!!36138551.java!!!	testPaddingLeftRight() : void
        View view = mBinder.paddingLeftRight;
        assertEquals(mBindingObject.getPaddingLeft(), view.getPaddingLeft());
        assertEquals(mBindingObject.getPaddingRight(), view.getPaddingRight());

        changeValues();

        assertEquals(mBindingObject.getPaddingLeft(), view.getPaddingLeft());
        assertEquals(mBindingObject.getPaddingRight(), view.getPaddingRight());
!!!36138679.java!!!	testPaddingStartEnd() : void
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
            View view = mBinder.paddingStartEnd;
            assertEquals(mBindingObject.getPaddingStart(), view.getPaddingStart());
            assertEquals(mBindingObject.getPaddingEnd(), view.getPaddingEnd());

            changeValues();

            assertEquals(mBindingObject.getPaddingStart(), view.getPaddingStart());
            assertEquals(mBindingObject.getPaddingEnd(), view.getPaddingEnd());
        }
!!!36138807.java!!!	testPaddingTopBottom() : void
        View view = mBinder.paddingTopBottom;
        assertEquals(mBindingObject.getPaddingTop(), view.getPaddingTop());
        assertEquals(mBindingObject.getPaddingBottom(), view.getPaddingBottom());

        changeValues();

        assertEquals(mBindingObject.getPaddingTop(), view.getPaddingTop());
        assertEquals(mBindingObject.getPaddingBottom(), view.getPaddingBottom());
!!!36138935.java!!!	testBackgroundTint() : void
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            View view = mBinder.backgroundTint;
            assertNotNull(view.getBackgroundTintList());
            ColorStateList colorStateList = view.getBackgroundTintList();
            assertEquals(mBindingObject.getBackgroundTint(), colorStateList.getDefaultColor());

            changeValues();

            assertNotNull(view.getBackgroundTintList());
            colorStateList = view.getBackgroundTintList();
            assertEquals(mBindingObject.getBackgroundTint(), colorStateList.getDefaultColor());
        }
!!!36139063.java!!!	testFadeScrollbars() : void
        View view = mBinder.fadeScrollbars;
        assertEquals(mBindingObject.getFadeScrollbars(), view.isScrollbarFadingEnabled());

        changeValues();

        assertEquals(mBindingObject.getFadeScrollbars(), view.isScrollbarFadingEnabled());
!!!36139191.java!!!	testNextFocus() : void
        View view = mBinder.nextFocus;

        assertEquals(mBindingObject.getNextFocusDown(), view.getNextFocusDownId());
        assertEquals(mBindingObject.getNextFocusUp(), view.getNextFocusUpId());
        assertEquals(mBindingObject.getNextFocusLeft(), view.getNextFocusLeftId());
        assertEquals(mBindingObject.getNextFocusRight(), view.getNextFocusRightId());
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            assertEquals(mBindingObject.getNextFocusForward(), view.getNextFocusForwardId());
        }

        changeValues();

        assertEquals(mBindingObject.getNextFocusDown(), view.getNextFocusDownId());
        assertEquals(mBindingObject.getNextFocusUp(), view.getNextFocusUpId());
        assertEquals(mBindingObject.getNextFocusLeft(), view.getNextFocusLeftId());
        assertEquals(mBindingObject.getNextFocusRight(), view.getNextFocusRightId());
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            assertEquals(mBindingObject.getNextFocusForward(), view.getNextFocusForwardId());
        }
!!!36139319.java!!!	testRequiresFadingEdge() : void
        View view = mBinder.requiresFadingEdge;

        assertTrue(view.isVerticalFadingEdgeEnabled());
        assertFalse(view.isHorizontalFadingEdgeEnabled());

        changeValues();

        assertFalse(view.isVerticalFadingEdgeEnabled());
        assertTrue(view.isHorizontalFadingEdgeEnabled());
!!!36139447.java!!!	testScrollbar() : void
        View view = mBinder.scrollbar;

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
            assertEquals(mBindingObject.getScrollbarDefaultDelayBeforeFade(),
                    view.getScrollBarDefaultDelayBeforeFade());
            assertEquals(mBindingObject.getScrollbarFadeDuration(), view.getScrollBarFadeDuration());
            assertEquals(mBindingObject.getScrollbarSize(), view.getScrollBarSize());
        }
        assertEquals(mBindingObject.getScrollbarStyle(), view.getScrollBarStyle());

        changeValues();

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
            assertEquals(mBindingObject.getScrollbarDefaultDelayBeforeFade(),
                    view.getScrollBarDefaultDelayBeforeFade());
            assertEquals(mBindingObject.getScrollbarFadeDuration(), view.getScrollBarFadeDuration());
            assertEquals(mBindingObject.getScrollbarSize(), view.getScrollBarSize());
        }
        assertEquals(mBindingObject.getScrollbarStyle(), view.getScrollBarStyle());
!!!36139575.java!!!	testTransformPivot() : void
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
            View view = mBinder.transformPivot;

            assertEquals(mBindingObject.getTransformPivotX(), view.getPivotX());
            assertEquals(mBindingObject.getTransformPivotY(), view.getPivotY());

            changeValues();

            assertEquals(mBindingObject.getTransformPivotX(), view.getPivotX());
            assertEquals(mBindingObject.getTransformPivotY(), view.getPivotY());
        }
!!!36139703.java!!!	testBackgroundDrawableDrawable() : void
        View view = mBinder.backgroundDrawable;
        Drawable drawable = view.getBackground();
        assertNotNull(drawable);
!!!36139831.java!!!	testBackgroundDrawableWithTheme() : void
        View view = mBinder.backgroundWithTheme;
        assertNotNull(view.getBackground());
