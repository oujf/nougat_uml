format 76
"videoproc" // nougat_src::frameworks::base::core::java::android::filterpacks::videoproc
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/media/mca/filterpacks/java/android/filterpacks/videoproc/"
  java_package "android.filterpacks.videoproc"
  classview 188983 "videoproc"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1098423 "BackDropperFilter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      class 1098551 "LearningDoneListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 28947255 "onLearningDone"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "filter" type class_ref 1098423 // BackDropperFilter
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3235127 // <generalisation>
	relation 3235127 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3235127 // <generalisation>
	  b parent class_ref 1104311 // Filter
      end

      attribute 3569591 "BACKGROUND_STRETCH"
	const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " User-visible parameters "
      end

      attribute 3569719 "BACKGROUND_FIT"
	const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3569847 "BACKGROUND_FILL_CROP"
	const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3569975 "mBackgroundFitMode"
	private explicit_type "int"
	init_value " BACKGROUND_FILL_CROP"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"backgroundFitMode\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3570103 "mLearningDuration"
	private explicit_type "int"
	init_value " DEFAULT_LEARNING_DURATION"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"learningDuration\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3570231 "mLearningVerifyDuration"
	private explicit_type "int"
	init_value " DEFAULT_LEARNING_VERIFY_DURATION"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"learningVerifyDuration\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3570359 "mAcceptStddev"
	private explicit_type "float"
	init_value " DEFAULT_ACCEPT_STDDEV"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"acceptStddev\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3570487 "mHierarchyLrgScale"
	private explicit_type "float"
	init_value " DEFAULT_HIER_LRG_SCALE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"hierLrgScale\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3570615 "mHierarchyMidScale"
	private explicit_type "float"
	init_value " DEFAULT_HIER_MID_SCALE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"hierMidScale\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3570743 "mHierarchySmlScale"
	private explicit_type "float"
	init_value " DEFAULT_HIER_SML_SCALE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"hierSmlScale\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3570871 "mMaskWidthExp"
	private explicit_type "int"
	init_value " DEFAULT_MASK_WIDTH_EXPONENT"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"maskWidthExp\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Dimensions of foreground / background mask. Optimum value should take into account only
 image contents, NOT dimensions of input video stream."
      end

      attribute 3570999 "mMaskHeightExp"
	private explicit_type "int"
	init_value " DEFAULT_MASK_HEIGHT_EXPONENT"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"maskHeightExp\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3571127 "mHierarchyLrgExp"
	private explicit_type "int"
	init_value " DEFAULT_HIER_LRG_EXPONENT"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"hierLrgExp\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Levels at which to compute foreground / background decision. Think of them as are deltas
 SUBTRACTED from maskWidthExp and maskHeightExp."
      end

      attribute 3571255 "mHierarchyMidExp"
	private explicit_type "int"
	init_value " DEFAULT_HIER_MID_EXPONENT"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"hierMidExp\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3571383 "mHierarchySmlExp"
	private explicit_type "int"
	init_value " DEFAULT_HIER_SML_EXPONENT"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"hierSmlExp\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3571511 "mLumScale"
	private explicit_type "float"
	init_value " DEFAULT_Y_SCALE_FACTOR"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"lumScale\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3571639 "mChromaScale"
	private explicit_type "float"
	init_value " DEFAULT_UV_SCALE_FACTOR"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"chromaScale\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3571767 "mMaskBg"
	private explicit_type "float"
	init_value " DEFAULT_MASK_BLEND_BG"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"maskBg\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3571895 "mMaskFg"
	private explicit_type "float"
	init_value " DEFAULT_MASK_BLEND_FG"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"maskFg\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3572023 "mExposureChange"
	private explicit_type "float"
	init_value " DEFAULT_EXPOSURE_CHANGE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"exposureChange\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3572151 "mWhiteBalanceRedChange"
	private explicit_type "float"
	init_value " DEFAULT_WHITE_BALANCE_RED_CHANGE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"whitebalanceredChange\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3572279 "mWhiteBalanceBlueChange"
	private explicit_type "float"
	init_value " DEFAULT_WHITE_BALANCE_BLUE_CHANGE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"whitebalanceblueChange\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3572407 "mAutoWBToggle"
	private explicit_type "int"
	init_value " DEFAULT_WHITE_BALANCE_TOGGLE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"autowbToggle\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3572535 "mAdaptRateLearning"
	private explicit_type "float"
	init_value " DEFAULT_LEARNING_ADAPT_RATE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"learningAdaptRate\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " TODO: These are not updatable:"
      end

      attribute 3572663 "mAdaptRateBg"
	private explicit_type "float"
	init_value " DEFAULT_ADAPT_RATE_BG"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"adaptRateBg\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3572791 "mAdaptRateFg"
	private explicit_type "float"
	init_value " DEFAULT_ADAPT_RATE_FG"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"adaptRateFg\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3572919 "mVerifyRate"
	private explicit_type "float"
	init_value " DEFAULT_MASK_VERIFY_RATE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"maskVerifyRate\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3235255 // mLearningDoneListener (<unidirectional association>)
	relation 3235255 --->
	  a role_name "mLearningDoneListener" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GenerateFieldPort(name = \"learningDoneListener\", hasDefault = true)
"
	    classrelation_ref 3235255 // mLearningDoneListener (<unidirectional association>)
	  b parent class_ref 1098551 // LearningDoneListener
      end

      attribute 3573047 "mUseTheForce"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"useTheForce\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3573175 "mProvideDebugOutputs"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFinalPort(name = \"provideDebugOutputs\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3573303 "mMirrorBg"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"mirrorBg\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether to mirror the background or not. For ex, the Camera app
 would mirror the preview for the front camera"
      end

      attribute 3573431 "mOrientation"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"orientation\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The orientation of the display. This will change the flipping
 coordinates, if we were to mirror the background"
      end

      attribute 3573559 "DEFAULT_LEARNING_DURATION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 40"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default algorithm parameter values, for non-shader use 
 Frame count for learning bg model"
      end

      attribute 3573687 "DEFAULT_LEARNING_VERIFY_DURATION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Frame count for learning verification"
      end

      attribute 3573815 "DEFAULT_ACCEPT_STDDEV"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.85f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Maximum distance (in standard deviations) for considering a pixel as background"
      end

      attribute 3573943 "DEFAULT_HIER_LRG_SCALE"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.7f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Variance threshold scale factor for large scale of hierarchy"
      end

      attribute 3574071 "DEFAULT_HIER_MID_SCALE"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.6f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Variance threshold scale factor for medium scale of hierarchy"
      end

      attribute 3574199 "DEFAULT_HIER_SML_SCALE"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.5f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Variance threshold scale factor for small scale of hierarchy"
      end

      attribute 3574327 "DEFAULT_MASK_WIDTH_EXPONENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Width of foreground / background mask."
      end

      attribute 3574455 "DEFAULT_MASK_HEIGHT_EXPONENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Height of foreground / background mask."
      end

      attribute 3574583 "DEFAULT_HIER_LRG_EXPONENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Area over which to average for large scale (length in pixels = 2^HIERARCHY_*_EXPONENT)"
      end

      attribute 3574711 "DEFAULT_HIER_MID_EXPONENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Area over which to average for medium scale"
      end

      attribute 3574839 "DEFAULT_HIER_SML_EXPONENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Area over which to average for small scale"
      end

      attribute 3574967 "DEFAULT_Y_SCALE_FACTOR"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.40f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Scale factor for luminance channel in distance calculations (larger = more significant)"
      end

      attribute 3575095 "DEFAULT_UV_SCALE_FACTOR"
	class_attribute const_attribute private explicit_type "float"
	init_value " 1.35f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Scale factor for chroma channels in distance calculations"
      end

      attribute 3575223 "DEFAULT_MASK_BLEND_BG"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.65f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Mask value to start blending away from background"
      end

      attribute 3575351 "DEFAULT_MASK_BLEND_FG"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.95f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Mask value to start blending away from foreground"
      end

      attribute 3575479 "DEFAULT_EXPOSURE_CHANGE"
	class_attribute const_attribute private explicit_type "float"
	init_value " 1.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Exposure stop number to change the brightness of foreground"
      end

      attribute 3575607 "DEFAULT_WHITE_BALANCE_RED_CHANGE"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " White balance change in Red channel for foreground"
      end

      attribute 3575735 "DEFAULT_WHITE_BALANCE_BLUE_CHANGE"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " White balance change in Blue channel for foreground"
      end

      attribute 3575863 "DEFAULT_WHITE_BALANCE_TOGGLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Variable to control automatic white balance effect
 0.f -> Auto WB is off; 1.f-> Auto WB is on"
      end

      attribute 3575991 "DEFAULT_LEARNING_ADAPT_RATE"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.2f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default rate at which to learn bg model during learning period"
      end

      attribute 3576119 "DEFAULT_ADAPT_RATE_BG"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default rate at which to learn bg model from new background pixels"
      end

      attribute 3576247 "DEFAULT_ADAPT_RATE_FG"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default rate at which to learn bg model from new foreground pixels"
      end

      attribute 3576375 "DEFAULT_MASK_VERIFY_RATE"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0.25f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default rate at which to verify whether background is stable"
      end

      attribute 3576503 "DEFAULT_LEARNING_DONE_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default rate at which to verify whether background is stable"
      end

      attribute 3576631 "DEFAULT_BG_FIT_TRANSFORM"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " new float[] {
        1.0f, 0.0f, 0.0f,
        0.0f, 1.0f, 0.0f,
        0.0f, 0.0f, 1.0f
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default 3x3 matrix, column major, for fitting background 1:1"
      end

      classrelation 3235383 // MASK_SMOOTH_EXPONENT (<unidirectional association>)
	relation 3235383 --->
	  a role_name "MASK_SMOOTH_EXPONENT" init_value " \"2.0\"" class_relation const_relation private
	    comment " Default algorithm parameter values, for shader use 
 Area over which to blur binary mask values (length in pixels = 2^MASK_SMOOTH_EXPONENT)
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3235383 // MASK_SMOOTH_EXPONENT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3235511 // DISTANCE_STORAGE_SCALE (<unidirectional association>)
	relation 3235511 --->
	  a role_name "DISTANCE_STORAGE_SCALE" init_value " \"0.6\"" class_relation const_relation private
	    comment " Scale value for mapping variance distance to fit nicely to 0-1, 8-bit
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3235511 // DISTANCE_STORAGE_SCALE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3235639 // VARIANCE_STORAGE_SCALE (<unidirectional association>)
	relation 3235639 --->
	  a role_name "VARIANCE_STORAGE_SCALE" init_value " \"5.0\"" class_relation const_relation private
	    comment " Scale value for mapping variance to fit nicely to 0-1, 8-bit
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3235639 // VARIANCE_STORAGE_SCALE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3235767 // DEFAULT_AUTO_WB_SCALE (<unidirectional association>)
	relation 3235767 --->
	  a role_name "DEFAULT_AUTO_WB_SCALE" init_value " \"0.25\"" class_relation const_relation private
	    comment " Default scale of auto white balance parameters
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3235767 // DEFAULT_AUTO_WB_SCALE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3235895 // MIN_VARIANCE (<unidirectional association>)
	relation 3235895 --->
	  a role_name "MIN_VARIANCE" init_value " \"3.0\"" class_relation const_relation private
	    comment " Minimum variance (0-255 scale)
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3235895 // MIN_VARIANCE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3236023 // RGB_TO_YUV_MATRIX (<unidirectional association>)
	relation 3236023 --->
	  a role_name "RGB_TO_YUV_MATRIX" init_value " \"0.299, -0.168736,  0.5,      0.000, \" +
                                                    \"0.587, -0.331264, -0.418688, 0.000, \" +
                                                    \"0.114,  0.5,      -0.081312, 0.000, \" +
                                                    \"0.000,  0.5,       0.5,      1.000 \"" class_relation const_relation private
	    comment " Column-major array for 4x4 matrix converting RGB to YCbCr, JPEG definition (no pedestal)
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3236023 // RGB_TO_YUV_MATRIX (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3236151 // mInputNames (<unidirectional association>)
	relation 3236151 --->
	  a role_name "mInputNames" multiplicity "[]" init_value " {\"video\",
                                                 \"background\"}" class_relation const_relation private
	    comment " Stream names 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3236151 // mInputNames (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3236279 // mOutputNames (<unidirectional association>)
	relation 3236279 --->
	  a role_name "mOutputNames" multiplicity "[]" init_value " {\"video\"}" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3236279 // mOutputNames (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3236407 // mDebugOutputNames (<unidirectional association>)
	relation 3236407 --->
	  a role_name "mDebugOutputNames" multiplicity "[]" init_value " {\"debug1\",
                                                       \"debug2\"}" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3236407 // mDebugOutputNames (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3236535 // mOutputFormat (<unidirectional association>)
	relation 3236535 --->
	  a role_name "mOutputFormat" private
	    comment " Other private variables 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3236535 // mOutputFormat (<unidirectional association>)
	  b parent class_ref 1103799 // FrameFormat
      end

      classrelation 3236663 // mMemoryFormat (<unidirectional association>)
	relation 3236663 --->
	  a role_name "mMemoryFormat" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3236663 // mMemoryFormat (<unidirectional association>)
	  b parent class_ref 1105975 // MutableFrameFormat
      end

      classrelation 3236791 // mMaskFormat (<unidirectional association>)
	relation 3236791 --->
	  a role_name "mMaskFormat" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3236791 // mMaskFormat (<unidirectional association>)
	  b parent class_ref 1105975 // MutableFrameFormat
      end

      classrelation 3236919 // mAverageFormat (<unidirectional association>)
	relation 3236919 --->
	  a role_name "mAverageFormat" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3236919 // mAverageFormat (<unidirectional association>)
	  b parent class_ref 1105975 // MutableFrameFormat
      end

      attribute 3576759 "mLogVerbose"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3237047 // TAG (<unidirectional association>)
	relation 3237047 --->
	  a role_name "TAG" init_value " \"BackDropperFilter\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3237047 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3237175 // mSharedUtilShader (<unidirectional association>)
	relation 3237175 --->
	  a role_name "mSharedUtilShader" init_value "
            \"precision mediump float;\\n\" +
            \"uniform float fg_adapt_rate;\\n\" +
            \"uniform float bg_adapt_rate;\\n\" +
            \"const mat4 coeff_yuv = mat4(\" + RGB_TO_YUV_MATRIX + \");\\n\" +
            \"const float dist_scale = \" + DISTANCE_STORAGE_SCALE + \";\\n\" +
            \"const float inv_dist_scale = 1. / dist_scale;\\n\" +
            \"const float var_scale=\" + VARIANCE_STORAGE_SCALE + \";\\n\" +
            \"const float inv_var_scale = 1. / var_scale;\\n\" +
            \"const float min_variance = inv_var_scale *\" + MIN_VARIANCE + \"/ 256.;\\n\" +
            \"const float auto_wb_scale = \" + DEFAULT_AUTO_WB_SCALE + \";\\n\" +
            \"\\n\" +
            // Variance distance in luminance between current pixel and background model
            \"float gauss_dist_y(float y, float mean, float variance) {\\n\" +
            \"  float dist = (y - mean) * (y - mean) / variance;\\n\" +
            \"  return dist;\\n\" +
            \"}\\n\" +
            // Sum of variance distances in chroma between current pixel and background
            // model
            \"float gauss_dist_uv(vec2 uv, vec2 mean, vec2 variance) {\\n\" +
            \"  vec2 dist = (uv - mean) * (uv - mean) / variance;\\n\" +
            \"  return dist.r + dist.g;\\n\" +
            \"}\\n\" +
            // Select learning rate for pixel based on smoothed decision mask alpha
            \"float local_adapt_rate(float alpha) {\\n\" +
            \"  return mix(bg_adapt_rate, fg_adapt_rate, alpha);\\n\" +
            \"}\\n\" +
            \"\\n\"" class_relation private
	    comment " Shader source code 
 Shared uniforms and utility functions
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3237175 // mSharedUtilShader (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3237303 // mBgDistanceShader (<unidirectional association>)
	relation 3237303 --->
	  a role_name "mBgDistanceShader" init_value "
            \"uniform sampler2D tex_sampler_0;\\n\" +
            \"uniform sampler2D tex_sampler_1;\\n\" +
            \"uniform sampler2D tex_sampler_2;\\n\" +
            \"uniform float subsample_level;\\n\" +
            \"varying vec2 v_texcoord;\\n\" +
            \"void main() {\\n\" +
            \"  vec4 fg_rgb = texture2D(tex_sampler_0, v_texcoord, subsample_level);\\n\" +
            \"  vec4 fg = coeff_yuv * vec4(fg_rgb.rgb, 1.);\\n\" +
            \"  vec4 mean = texture2D(tex_sampler_1, v_texcoord);\\n\" +
            \"  vec4 variance = inv_var_scale * texture2D(tex_sampler_2, v_texcoord);\\n\" +
            \"\\n\" +
            \"  float dist_y = gauss_dist_y(fg.r, mean.r, variance.r);\\n\" +
            \"  float dist_uv = gauss_dist_uv(fg.gb, mean.gb, variance.gb);\\n\" +
            \"  gl_FragColor = vec4(0.5*fg.rg, dist_scale*dist_y, dist_scale*dist_uv);\\n\" +
            \"}\\n\"" class_relation const_relation private
	    comment " Distance calculation shader. Calculates a distance metric between the foreground and the
   current background model, in both luminance and in chroma (yuv space).  Distance is
   measured in variances from the mean background value. For chroma, the distance is the sum
   of the two individual color channel distances. The distances are output on the b and alpha
   channels, r and g are for debug information.
 Inputs:
   tex_sampler_0: Mip-map for foreground (live) video frame.
   tex_sampler_1: Background mean mask.
   tex_sampler_2: Background variance mask.
   subsample_level: Level on foreground frame's mip-map.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3237303 // mBgDistanceShader (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3237431 // mBgMaskShader (<unidirectional association>)
	relation 3237431 --->
	  a role_name "mBgMaskShader" init_value "
            \"uniform sampler2D tex_sampler_0;\\n\" +
            \"uniform float accept_variance;\\n\" +
            \"uniform vec2 yuv_weights;\\n\" +
            \"uniform float scale_lrg;\\n\" +
            \"uniform float scale_mid;\\n\" +
            \"uniform float scale_sml;\\n\" +
            \"uniform float exp_lrg;\\n\" +
            \"uniform float exp_mid;\\n\" +
            \"uniform float exp_sml;\\n\" +
            \"varying vec2 v_texcoord;\\n\" +
            // Decide whether pixel is foreground or background based on Y and UV
            //   distance and maximum acceptable variance.
            // yuv_weights.x is smaller than yuv_weights.y to discount the influence of shadow
            \"bool is_fg(vec2 dist_yc, float accept_variance) {\\n\" +
            \"  return ( dot(yuv_weights, dist_yc) >= accept_variance );\\n\" +
            \"}\\n\" +
            \"void main() {\\n\" +
            \"  vec4 dist_lrg_sc = texture2D(tex_sampler_0, v_texcoord, exp_lrg);\\n\" +
            \"  vec4 dist_mid_sc = texture2D(tex_sampler_0, v_texcoord, exp_mid);\\n\" +
            \"  vec4 dist_sml_sc = texture2D(tex_sampler_0, v_texcoord, exp_sml);\\n\" +
            \"  vec2 dist_lrg = inv_dist_scale * dist_lrg_sc.ba;\\n\" +
            \"  vec2 dist_mid = inv_dist_scale * dist_mid_sc.ba;\\n\" +
            \"  vec2 dist_sml = inv_dist_scale * dist_sml_sc.ba;\\n\" +
            \"  vec2 norm_dist = 0.75 * dist_sml / accept_variance;\\n\" + // For debug viz
            \"  bool is_fg_lrg = is_fg(dist_lrg, accept_variance * scale_lrg);\\n\" +
            \"  bool is_fg_mid = is_fg_lrg || is_fg(dist_mid, accept_variance * scale_mid);\\n\" +
            \"  float is_fg_sml =\\n\" +
            \"      float(is_fg_mid || is_fg(dist_sml, accept_variance * scale_sml));\\n\" +
            \"  float alpha = 0.5 * is_fg_sml + 0.3 * float(is_fg_mid) + 0.2 * float(is_fg_lrg);\\n\" +
            \"  gl_FragColor = vec4(alpha, norm_dist, is_fg_sml);\\n\" +
            \"}\\n\"" class_relation const_relation private
	    comment " Foreground/background mask decision shader. Decides whether a frame is in the foreground or
   the background using a hierarchical threshold on the distance. Binary foreground/background
   mask is placed in the alpha channel. The RGB channels contain debug information.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3237431 // mBgMaskShader (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3237559 // mAutomaticWhiteBalance (<unidirectional association>)
	relation 3237559 --->
	  a role_name "mAutomaticWhiteBalance" init_value "
            \"uniform sampler2D tex_sampler_0;\\n\" +
            \"uniform sampler2D tex_sampler_1;\\n\" +
            \"uniform float pyramid_depth;\\n\" +
            \"uniform bool autowb_toggle;\\n\" +
            \"varying vec2 v_texcoord;\\n\" +
            \"void main() {\\n\" +
            \"   vec4 mean_video = texture2D(tex_sampler_0, v_texcoord, pyramid_depth);\\n\"+
            \"   vec4 mean_bg = texture2D(tex_sampler_1, v_texcoord, pyramid_depth);\\n\" +
            // If Auto WB is toggled off, the return texture will be a unicolor texture of value 1
            // If Auto WB is toggled on, the return texture will be a unicolor texture with
            //   adjustment parameters for R and B channels stored in the corresponding channel
            \"   float green_normalizer = mean_video.g / mean_bg.g;\\n\"+
            \"   vec4 adjusted_value = vec4(mean_bg.r / mean_video.r * green_normalizer, 1., \\n\" +
            \"                         mean_bg.b / mean_video.b * green_normalizer, 1.) * auto_wb_scale; \\n\" +
            \"   gl_FragColor = autowb_toggle ? adjusted_value : vec4(auto_wb_scale);\\n\" +
            \"}\\n\"" class_relation const_relation private
	    comment " Automatic White Balance parameter decision shader
 Use the Gray World assumption that in a white balance corrected image, the average of R, G, B
   channel will be a common gray value.
 To match the white balance of foreground and background, the average of R, G, B channel of
   two videos should match.
 Inputs:
   tex_sampler_0: Mip-map for foreground (live) video frame.
   tex_sampler_1: Mip-map for background (playback) video frame.
   pyramid_depth: Depth of input frames' mip-maps.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3237559 // mAutomaticWhiteBalance (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3237687 // mBgSubtractShader (<unidirectional association>)
	relation 3237687 --->
	  a role_name "mBgSubtractShader" init_value "
            \"uniform mat3 bg_fit_transform;\\n\" +
            \"uniform float mask_blend_bg;\\n\" +
            \"uniform float mask_blend_fg;\\n\" +
            \"uniform float exposure_change;\\n\" +
            \"uniform float whitebalancered_change;\\n\" +
            \"uniform float whitebalanceblue_change;\\n\" +
            \"uniform sampler2D tex_sampler_0;\\n\" +
            \"uniform sampler2D tex_sampler_1;\\n\" +
            \"uniform sampler2D tex_sampler_2;\\n\" +
            \"uniform sampler2D tex_sampler_3;\\n\" +
            \"varying vec2 v_texcoord;\\n\" +
            \"void main() {\\n\" +
            \"  vec2 bg_texcoord = (bg_fit_transform * vec3(v_texcoord, 1.)).xy;\\n\" +
            \"  vec4 bg_rgb = texture2D(tex_sampler_1, bg_texcoord);\\n\" +
            // The foreground texture is modified by multiplying both manual and auto white balance changes in R and B
            //   channel and multiplying exposure change in all R, G, B channels.
            \"  vec4 wb_auto_scale = texture2D(tex_sampler_3, v_texcoord) * exposure_change / auto_wb_scale;\\n\" +
            \"  vec4 wb_manual_scale = vec4(1. + whitebalancered_change, 1., 1. + whitebalanceblue_change, 1.);\\n\" +
            \"  vec4 fg_rgb = texture2D(tex_sampler_0, v_texcoord);\\n\" +
            \"  vec4 fg_adjusted = fg_rgb * wb_manual_scale * wb_auto_scale;\\n\"+
            \"  vec4 mask = texture2D(tex_sampler_2, v_texcoord, \\n\" +
            \"                      \" + MASK_SMOOTH_EXPONENT + \");\\n\" +
            \"  float alpha = smoothstep(mask_blend_bg, mask_blend_fg, mask.a);\\n\" +
            \"  gl_FragColor = mix(bg_rgb, fg_adjusted, alpha);\\n\"" class_relation const_relation private
	    comment " Background subtraction shader. Uses a mipmap of the binary mask map to blend smoothly between
   foreground and background
 Inputs:
   tex_sampler_0: Foreground (live) video frame.
   tex_sampler_1: Background (playback) video frame.
   tex_sampler_2: Foreground/background mask.
   tex_sampler_3: Auto white-balance factors.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3237687 // mBgSubtractShader (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3237815 // mBgSubtractForceShader (<unidirectional association>)
	relation 3237815 --->
	  a role_name "mBgSubtractForceShader" init_value "
            \"  vec4 ghost_rgb = (fg_adjusted * 0.7 + vec4(0.3,0.3,0.4,0.))*0.65 + \\n\" +
            \"                   0.35*bg_rgb;\\n\" +
            \"  float glow_start = 0.75 * mask_blend_bg; \\n\"+
            \"  float glow_max   = mask_blend_bg; \\n\"+
            \"  gl_FragColor = mask.a < glow_start ? bg_rgb : \\n\" +
            \"                 mask.a < glow_max ? mix(bg_rgb, vec4(0.9,0.9,1.0,1.0), \\n\" +
            \"                                     (mask.a - glow_start) / (glow_max - glow_start) ) : \\n\" +
            \"                 mask.a < mask_blend_fg ? mix(vec4(0.9,0.9,1.0,1.0), ghost_rgb, \\n\" +
            \"                                    (mask.a - glow_max) / (mask_blend_fg - glow_max) ) : \\n\" +
            \"                 ghost_rgb;\\n\" +
            \"}\\n\"" class_relation const_relation private
	    comment " May the Force... Makes the foreground object translucent blue, with a bright
 blue-white outline
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3237815 // mBgSubtractForceShader (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3237943 // mUpdateBgModelMeanShader (<unidirectional association>)
	relation 3237943 --->
	  a role_name "mUpdateBgModelMeanShader" init_value "
            \"uniform sampler2D tex_sampler_0;\\n\" +
            \"uniform sampler2D tex_sampler_1;\\n\" +
            \"uniform sampler2D tex_sampler_2;\\n\" +
            \"uniform float subsample_level;\\n\" +
            \"varying vec2 v_texcoord;\\n\" +
            \"void main() {\\n\" +
            \"  vec4 fg_rgb = texture2D(tex_sampler_0, v_texcoord, subsample_level);\\n\" +
            \"  vec4 fg = coeff_yuv * vec4(fg_rgb.rgb, 1.);\\n\" +
            \"  vec4 mean = texture2D(tex_sampler_1, v_texcoord);\\n\" +
            \"  vec4 mask = texture2D(tex_sampler_2, v_texcoord, \\n\" +
            \"                      \" + MASK_SMOOTH_EXPONENT + \");\\n\" +
            \"\\n\" +
            \"  float alpha = local_adapt_rate(mask.a);\\n\" +
            \"  vec4 new_mean = mix(mean, fg, alpha);\\n\" +
            \"  gl_FragColor = new_mean;\\n\" +
            \"}\\n\"" class_relation const_relation private
	    comment " Background model mean update shader. Skews the current model mean toward the most recent pixel
   value for a pixel, weighted by the learning rate and by whether the pixel is classified as
   foreground or background.
 Inputs:
   tex_sampler_0: Mip-map for foreground (live) video frame.
   tex_sampler_1: Background mean mask.
   tex_sampler_2: Foreground/background mask.
   subsample_level: Level on foreground frame's mip-map.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3237943 // mUpdateBgModelMeanShader (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3238071 // mUpdateBgModelVarianceShader (<unidirectional association>)
	relation 3238071 --->
	  a role_name "mUpdateBgModelVarianceShader" init_value "
            \"uniform sampler2D tex_sampler_0;\\n\" +
            \"uniform sampler2D tex_sampler_1;\\n\" +
            \"uniform sampler2D tex_sampler_2;\\n\" +
            \"uniform sampler2D tex_sampler_3;\\n\" +
            \"uniform float subsample_level;\\n\" +
            \"varying vec2 v_texcoord;\\n\" +
            \"void main() {\\n\" +
            \"  vec4 fg_rgb = texture2D(tex_sampler_0, v_texcoord, subsample_level);\\n\" +
            \"  vec4 fg = coeff_yuv * vec4(fg_rgb.rgb, 1.);\\n\" +
            \"  vec4 mean = texture2D(tex_sampler_1, v_texcoord);\\n\" +
            \"  vec4 variance = inv_var_scale * texture2D(tex_sampler_2, v_texcoord);\\n\" +
            \"  vec4 mask = texture2D(tex_sampler_3, v_texcoord, \\n\" +
            \"                      \" + MASK_SMOOTH_EXPONENT + \");\\n\" +
            \"\\n\" +
            \"  float alpha = local_adapt_rate(mask.a);\\n\" +
            \"  vec4 cur_variance = (fg-mean)*(fg-mean);\\n\" +
            \"  vec4 new_variance = mix(variance, cur_variance, alpha);\\n\" +
            \"  new_variance = max(new_variance, vec4(min_variance));\\n\" +
            \"  gl_FragColor = var_scale * new_variance;\\n\" +
            \"}\\n\"" class_relation const_relation private
	    comment " Background model variance update shader. Skews the current model variance toward the most
   recent variance for the pixel, weighted by the learning rate and by whether the pixel is
   classified as foreground or background.
 Inputs:
   tex_sampler_0: Mip-map for foreground (live) video frame.
   tex_sampler_1: Background mean mask.
   tex_sampler_2: Background variance mask.
   tex_sampler_3: Foreground/background mask.
   subsample_level: Level on foreground frame's mip-map.
 TODO: to improve efficiency, use single mark for mean + variance, then merge this into
 mUpdateBgModelMeanShader.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3238071 // mUpdateBgModelVarianceShader (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3238199 // mMaskVerifyShader (<unidirectional association>)
	relation 3238199 --->
	  a role_name "mMaskVerifyShader" init_value "
            \"uniform sampler2D tex_sampler_0;\\n\" +
            \"uniform sampler2D tex_sampler_1;\\n\" +
            \"uniform float verify_rate;\\n\" +
            \"varying vec2 v_texcoord;\\n\" +
            \"void main() {\\n\" +
            \"  vec4 lastmask = texture2D(tex_sampler_0, v_texcoord);\\n\" +
            \"  vec4 mask = texture2D(tex_sampler_1, v_texcoord);\\n\" +
            \"  float newmask = mix(lastmask.a, mask.a, verify_rate);\\n\" +
            \"  gl_FragColor = vec4(0., 0., 0., newmask);\\n\" +
            \"}\\n\"" class_relation const_relation private
	    comment " Background verification shader. Skews the current background verification mask towards the
   most recent frame, weighted by the learning rate.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3238199 // mMaskVerifyShader (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3238327 // mBgDistProgram (<unidirectional association>)
	relation 3238327 --->
	  a role_name "mBgDistProgram" private
	    comment " Shader program objects 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3238327 // mBgDistProgram (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3238455 // mBgMaskProgram (<unidirectional association>)
	relation 3238455 --->
	  a role_name "mBgMaskProgram" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3238455 // mBgMaskProgram (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3238583 // mBgSubtractProgram (<unidirectional association>)
	relation 3238583 --->
	  a role_name "mBgSubtractProgram" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3238583 // mBgSubtractProgram (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3238711 // mBgUpdateMeanProgram (<unidirectional association>)
	relation 3238711 --->
	  a role_name "mBgUpdateMeanProgram" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3238711 // mBgUpdateMeanProgram (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3238839 // mBgUpdateVarianceProgram (<unidirectional association>)
	relation 3238839 --->
	  a role_name "mBgUpdateVarianceProgram" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3238839 // mBgUpdateVarianceProgram (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3238967 // mCopyOutProgram (<unidirectional association>)
	relation 3238967 --->
	  a role_name "mCopyOutProgram" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3238967 // mCopyOutProgram (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3239095 // mAutomaticWhiteBalanceProgram (<unidirectional association>)
	relation 3239095 --->
	  a role_name "mAutomaticWhiteBalanceProgram" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3239095 // mAutomaticWhiteBalanceProgram (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3239223 // mMaskVerifyProgram (<unidirectional association>)
	relation 3239223 --->
	  a role_name "mMaskVerifyProgram" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3239223 // mMaskVerifyProgram (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3239351 // copyShaderProgram (<unidirectional association>)
	relation 3239351 --->
	  a role_name "copyShaderProgram" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3239351 // copyShaderProgram (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      attribute 3576887 "mPingPong"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Background model storage "
      end

      classrelation 3239479 // mBgMean (<unidirectional association>)
	relation 3239479 --->
	  a role_name "mBgMean" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3239479 // mBgMean (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      classrelation 3239607 // mBgVariance (<unidirectional association>)
	relation 3239607 --->
	  a role_name "mBgVariance" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3239607 // mBgVariance (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      classrelation 3239735 // mMaskVerify (<unidirectional association>)
	relation 3239735 --->
	  a role_name "mMaskVerify" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3239735 // mMaskVerify (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      classrelation 3239863 // mDistance (<unidirectional association>)
	relation 3239863 --->
	  a role_name "mDistance" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3239863 // mDistance (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      classrelation 3239991 // mAutoWB (<unidirectional association>)
	relation 3239991 --->
	  a role_name "mAutoWB" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3239991 // mAutoWB (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      classrelation 3240119 // mMask (<unidirectional association>)
	relation 3240119 --->
	  a role_name "mMask" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3240119 // mMask (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      classrelation 3240247 // mVideoInput (<unidirectional association>)
	relation 3240247 --->
	  a role_name "mVideoInput" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3240247 // mVideoInput (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      classrelation 3240375 // mBgInput (<unidirectional association>)
	relation 3240375 --->
	  a role_name "mBgInput" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3240375 // mBgInput (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      classrelation 3240503 // mMaskAverage (<unidirectional association>)
	relation 3240503 --->
	  a role_name "mMaskAverage" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3240503 // mMaskAverage (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      attribute 3577015 "isOpen"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Overall filter state "
      end

      attribute 3577143 "mFrameCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3577271 "mStartLearning"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3577399 "mBackgroundFitModeChanged"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3577527 "mRelativeAspect"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3577655 "mPyramidDepth"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3577783 "mSubsampleLevel"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 28947383 "BackDropperFilter"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Public Filter methods "
      end

      operation 28947511 "setupPorts"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28947639 "getOutputFormat"
	public return_type class_ref 1103799 // FrameFormat
	nparams 2
	  param inout name "portName" type class_ref 129591 // String
	  param inout name "inputFormat" type class_ref 1103799 // FrameFormat
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28947767 "createMemoryFormat"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "inputFormat" type class_ref 1103799 // FrameFormat
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28947895 "prepare"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28948023 "allocateFrames"
	private explicit_return_type "void"
	nparams 2
	  param inout name "inputFormat" type class_ref 1103799 // FrameFormat
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28948151 "process"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 3577911 "startTime"
	private explicit_type "long"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 28948279 "close"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28948407 "relearn"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Relearn background model"
      end

      operation 28948535 "fieldPortValueUpdated"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28948663 "updateBgScaling"
	private explicit_return_type "void"
	nparams 3
	  param inout name "video" type class_ref 1097271 // Frame
	  param inout name "background" type class_ref 1097271 // Frame
	  param inout name "fitModeChanged" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28948791 "pyramidLevel"
	private explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 174775 "videoproc"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 659767 "BackDropperFilter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.Filter;
import android.filterfw.core.FilterContext;
import android.filterfw.core.GenerateFieldPort;
import android.filterfw.core.GenerateFinalPort;
import android.filterfw.core.Frame;
import android.filterfw.core.GLFrame;
import android.filterfw.core.FrameFormat;
import android.filterfw.core.MutableFrameFormat;
import android.filterfw.core.ShaderProgram;
import android.filterfw.format.ImageFormat;
import android.opengl.GLES20;
import android.os.SystemClock;
import android.os.SystemProperties;
import android.util.Log;
import java.lang.Math;
import java.util.Arrays;
import java.nio.ByteBuffer;
${definition}"
      associated_classes
	class_ref 1098423 // BackDropperFilter
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
