class CameraOpenCallbackForward
!!!36188983.java!!!	getNewInstance(inout handler : Handler, inout cb : CameraAgent::CameraOpenCallback) : CameraAgent::CameraOpenCallbackForward
            if (handler == null || cb == null) {
                return null;
            }
            return new CameraOpenCallbackForward(handler, cb);
!!!36189111.java!!!	CameraOpenCallbackForward(inout h : Handler, inout cb : CameraAgent::CameraOpenCallback)
            // Given that we are using the main thread handler, we can create it
            // here instead of holding onto the PhotoModule objects. In this
            // way, we can avoid memory leak.
            mHandler = new Handler(Looper.getMainLooper());
            mCallback = cb;
!!!36189239.java!!!	onCameraOpened(in camera : CameraAgent::CameraProxy) : void
            mHandler.post(new Runnable() {
                @Override
                public void run() {
                    mCallback.onCameraOpened(camera);
                }});
!!!36189367.java!!!	onCameraDisabled(in cameraId : int) : void
            mHandler.post(new Runnable() {
                @Override
                public void run() {
                    mCallback.onCameraDisabled(cameraId);
                }});
!!!36189495.java!!!	onDeviceOpenFailure(in cameraId : int, in info : String) : void
            mHandler.post(new Runnable() {
                @Override
                public void run() {
                    mCallback.onDeviceOpenFailure(cameraId, info);
                }});
!!!36189623.java!!!	onDeviceOpenedAlready(in cameraId : int, in info : String) : void
            mHandler.post(new Runnable() {
                @Override
                public void run() {
                    mCallback.onDeviceOpenedAlready(cameraId, info);
                }});
!!!36189751.java!!!	onReconnectionFailure(in mgr : CameraAgent, in info : String) : void
            mHandler.post(new Runnable() {
                @Override
                public void run() {
                    mCallback.onReconnectionFailure(mgr, info);
                }});
