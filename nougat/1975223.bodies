class CameraStateHolder
!!!36204599.java!!!	CameraStateHolder(in state : int)
        setState(state);
        mInvalid = false;
!!!36204727.java!!!	setState(in state : int) : void
        if (mState != state) {
            Log.v(TAG, "setState - state = " + Integer.toBinaryString(state));
        }
        mState = state;
        this.notifyAll();
!!!36204855.java!!!	getState() : int
        return mState;
!!!36204983.java!!!	invalidate() : void
        mInvalid = true;
!!!36205111.java!!!	isInvalid() : boolean
        return mInvalid;
!!!36205367.java!!!	waitForCondition(inout stateChecker : CameraStateHolder::ConditionChecker, in timeoutMs : long) : boolean
        long timeBound = SystemClock.uptimeMillis() + timeoutMs;
        synchronized (this) {
            while (!stateChecker.success()) {
                try {
                    this.wait(timeoutMs);
                } catch (InterruptedException ex) {
                    if (SystemClock.uptimeMillis() > timeBound) {
                        // Timeout.
                        Log.w(TAG, "Timeout waiting.");
                    }
                    return false;
                }
            }
        }
        return true;
!!!36205495.java!!!	waitForStates(in states : int) : boolean
        Log.v(TAG, "waitForStates - states = " + Integer.toBinaryString(states));
        return waitForCondition(new ConditionChecker() {
            @Override
            public boolean success() {
                return (states | getState()) == states;
            }
        }, CameraAgent.CAMERA_OPERATION_TIMEOUT_MS);
!!!36205623.java!!!	waitToAvoidStates(in states : int) : boolean
        Log.v(TAG, "waitToAvoidStates - states = " + Integer.toBinaryString(states));
        return waitForCondition(new ConditionChecker() {
            @Override
            public boolean success() {
                return (states & getState()) == 0;
            }
        }, CameraAgent.CAMERA_OPERATION_TIMEOUT_MS);
