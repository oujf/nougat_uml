class Characteristics
!!!36206903.java!!!	getPreviewOrientation(in currentDisplayOrientation : int) : int
            // Drivers tend to mirror the image during front camera preview.
            return getRelativeImageOrientation(currentDisplayOrientation, true);
!!!36207031.java!!!	getJpegOrientation(in currentDisplayOrientation : int) : int
            // Don't mirror during capture!
            return getRelativeImageOrientation(currentDisplayOrientation, false);
!!!36207159.java!!!	getRelativeImageOrientation(in currentDisplayOrientation : int, inout compensateForMirroring : boolean) : int
            if (!orientationIsValid(currentDisplayOrientation)) {
                return 0;
            }

            int result = 0;
            if (isFacingFront()) {
                result = (getSensorOrientation() + currentDisplayOrientation) % 360;
                if (compensateForMirroring) {
                    result = (360 - result) % 360;
                }
            } else if (isFacingBack()) {
                result = (getSensorOrientation() - currentDisplayOrientation + 360) % 360;
            } else {
                Log.e(TAG, "Camera is facing unhandled direction");
            }
            return result;
!!!36207287.java!!!	getPreviewTransform(in currentDisplayOrientation : int, inout surfaceDimensions : RectF) : Matrix
            return getPreviewTransform(currentDisplayOrientation, surfaceDimensions,
                    new RectF(surfaceDimensions));
!!!36207415.java!!!	getPreviewTransform(in currentDisplayOrientation : int, inout surfaceDimensions : RectF, inout desiredBounds : RectF) : Matrix
            if (!orientationIsValid(currentDisplayOrientation) ||
                    surfaceDimensions.equals(desiredBounds)) {
                return new Matrix();
            }

            Matrix transform = new Matrix();
            transform.setRectToRect(surfaceDimensions, desiredBounds, Matrix.ScaleToFit.FILL);
            return transform;
!!!36207671.java!!!	orientationIsValid(in angle : int) : boolean
            if (angle % 90 != 0) {
                Log.e(TAG, "Provided display orientation is not divisible by 90");
                return false;
            }
            if (angle < 0 || angle > 270) {
                Log.e(TAG, "Provided display orientation is outside expected range");
                return false;
            }
            return true;
