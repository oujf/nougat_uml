format 76
"videosrc" // nougat_src::frameworks::base::core::java::android::filterpacks::videosrc
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/media/mca/filterpacks/java/android/filterpacks/videosrc/"
  java_package "android.filterpacks.videosrc"
  classview 190519 "videosrc"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1119543 "CameraSource"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      classrelation 3242295 // <generalisation>
	relation 3242295 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3242295 // <generalisation>
	  b parent class_ref 1104311 // Filter
      end

      attribute 3580599 "mCameraId"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"id\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " User-visible parameters 
 Camera ID to use for input. Defaults to 0. "
      end

      attribute 3580727 "mWidth"
	private explicit_type "int"
	init_value " 320"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"width\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Frame width to request from camera. Actual size may not match requested. "
      end

      attribute 3580855 "mHeight"
	private explicit_type "int"
	init_value " 240"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"height\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Frame height to request from camera. Actual size may not match requested. "
      end

      attribute 3580983 "mFps"
	private explicit_type "int"
	init_value " 30"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"framerate\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Stream framerate to request from camera. Actual frame rate may not match requested. "
      end

      attribute 3581111 "mWaitForNewFrame"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFinalPort(name = \"waitForNewFrame\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether the filter should always wait for a new frame from the camera
before providing output.  If set to false, the filter will keep
outputting the last frame it received from the camera if multiple process
calls are received before the next update from the Camera. Defaults to true.
"
      end

      classrelation 3242423 // mCamera (<unidirectional association>)
	relation 3242423 --->
	  a role_name "mCamera" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3242423 // mCamera (<unidirectional association>)
	  b parent class_ref 456503 // Camera
      end

      classrelation 3242551 // mCameraFrame (<unidirectional association>)
	relation 3242551 --->
	  a role_name "mCameraFrame" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3242551 // mCameraFrame (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      classrelation 3242679 // mSurfaceTexture (<unidirectional association>)
	relation 3242679 --->
	  a role_name "mSurfaceTexture" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3242679 // mSurfaceTexture (<unidirectional association>)
	  b parent class_ref 344375 // SurfaceTexture
      end

      classrelation 3242807 // mFrameExtractor (<unidirectional association>)
	relation 3242807 --->
	  a role_name "mFrameExtractor" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3242807 // mFrameExtractor (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3242935 // mOutputFormat (<unidirectional association>)
	relation 3242935 --->
	  a role_name "mOutputFormat" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3242935 // mOutputFormat (<unidirectional association>)
	  b parent class_ref 1105975 // MutableFrameFormat
      end

      attribute 3581239 "mCameraTransform"
	private explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3581367 "mMappedCoords"
	private explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3581495 "mSourceCoords"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " { 0, 1, 0, 1,
                                                   1, 1, 0, 1,
                                                   0, 0, 0, 1,
                                                   1, 0, 0, 1 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These default source coordinates perform the necessary flip
 for converting from OpenGL origin to MFF/Bitmap origin."
      end

      attribute 3581623 "NEWFRAME_TIMEOUT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "ms"
      end

      attribute 3581751 "NEWFRAME_TIMEOUT_REPEAT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3581879 "mNewFrameAvailable"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3243063 // mCameraParameters (<unidirectional association>)
	relation 3243063 --->
	  a role_name "mCameraParameters" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3243063 // mCameraParameters (<unidirectional association>)
	  b parent class_ref 458423 // Parameters
      end

      classrelation 3243191 // mFrameShader (<unidirectional association>)
	relation 3243191 --->
	  a role_name "mFrameShader" init_value "
            \"#extension GL_OES_EGL_image_external : require\\n\" +
            \"precision mediump float;\\n\" +
            \"uniform samplerExternalOES tex_sampler_0;\\n\" +
            \"varying vec2 v_texcoord;\\n\" +
            \"void main() {\\n\" +
            \"  gl_FragColor = texture2D(tex_sampler_0, v_texcoord);\\n\" +
            \"}\\n\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3243191 // mFrameShader (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3582007 "mLogVerbose"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3243319 // TAG (<unidirectional association>)
	relation 3243319 --->
	  a role_name "TAG" init_value " \"CameraSource\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3243319 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 28951223 "CameraSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28951351 "setupPorts"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28951479 "createFormats"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28951607 "prepare"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28951735 "open"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28951863 "process"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28951991 "close"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28952119 "tearDown"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28952247 "fieldPortValueUpdated"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28952375 "getCameraParameters"
	public return_type class_ref 458423 // Parameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28952503 "setCameraParameters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "params" type class_ref 458423 // Parameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Update camera parameters. Image resolution cannot be changed. "
      end

      operation 28952631 "findClosestSize"
	private explicit_return_type "int"
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "parameters" type class_ref 458423 // Parameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28952759 "findClosestFpsRange"
	private explicit_return_type "int"
	nparams 2
	  param in name "fps" explicit_type "int"
	  param inout name "params" type class_ref 458423 // Parameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3243447 // onCameraFrameAvailableListener (<unidirectional association>)
	relation 3243447 --->
	  a role_name "onCameraFrameAvailableListener" init_value "
            new SurfaceTexture.OnFrameAvailableListener() {
        @Override
        public void onFrameAvailable(SurfaceTexture surfaceTexture) {
            if (mLogVerbose) Log.v(TAG, \"New frame from camera\");
            synchronized(CameraSource.this) {
                mNewFrameAvailable = true;
                CameraSource.this.notify();
            }
        }
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3243447 // onCameraFrameAvailableListener (<unidirectional association>)
	  b parent class_ref 344503 // OnFrameAvailableListener
      end
    end

    class 1119671 "MediaSource"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      classrelation 3243575 // <generalisation>
	relation 3243575 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3243575 // <generalisation>
	  b parent class_ref 1104311 // Filter
      end

      classrelation 3243703 // mSourceUrl (<unidirectional association>)
	relation 3243703 --->
	  a role_name "mSourceUrl" init_value " \"\"" private
	    comment " User-visible parameters 
 The source URL for the media source. Can be an http: link to a remote
resource, or a file: link to a local media file

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GenerateFieldPort(name = \"sourceUrl\", hasDefault = true)
"
	    classrelation_ref 3243703 // mSourceUrl (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3243831 // mSourceAsset (<unidirectional association>)
	relation 3243831 --->
	  a role_name "mSourceAsset" init_value " null" private
	    comment " An open asset file descriptor to a local media source. Default is null 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GenerateFieldPort(name = \"sourceAsset\", hasDefault = true)
"
	    classrelation_ref 3243831 // mSourceAsset (<unidirectional association>)
	  b parent class_ref 278455 // AssetFileDescriptor
      end

      classrelation 3243959 // mContext (<unidirectional association>)
	relation 3243959 --->
	  a role_name "mContext" init_value " null" private
	    comment " The context for the MediaPlayer to resolve the sourceUrl.
Make sure this is set before the sourceUrl to avoid unexpected result.
If the sourceUrl is not a content URI, it is OK to keep this as null. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GenerateFieldPort(name = \"context\", hasDefault = true)
"
	    classrelation_ref 3243959 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      attribute 3582135 "mSelectedIsUrl"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"sourceIsUrl\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether the media source is a URL or an asset file descriptor. Defaults
to false.
"
      end

      attribute 3582263 "mWaitForNewFrame"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFinalPort(name = \"waitForNewFrame\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether the filter will always wait for a new video frame, or whether it
will output an old frame again if a new frame isn't available. Defaults
to true.
"
      end

      attribute 3582391 "mLooping"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"loop\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether the media source should loop automatically or not. Defaults to
true.
"
      end

      attribute 3582519 "mVolume"
	private explicit_type "float"
	init_value " 0.f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"volume\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Volume control. Currently sound is piped directly to the speakers, so
this defaults to mute.
"
      end

      attribute 3582647 "mOrientation"
	private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"orientation\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Orientation. This controls the output orientation of the video. Valid
values are 0, 90, 180, 270
"
      end

      classrelation 3244087 // mMediaPlayer (<unidirectional association>)
	relation 3244087 --->
	  a role_name "mMediaPlayer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3244087 // mMediaPlayer (<unidirectional association>)
	  b parent class_ref 623415 // MediaPlayer
      end

      classrelation 3244215 // mMediaFrame (<unidirectional association>)
	relation 3244215 --->
	  a role_name "mMediaFrame" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3244215 // mMediaFrame (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      classrelation 3244343 // mSurfaceTexture (<unidirectional association>)
	relation 3244343 --->
	  a role_name "mSurfaceTexture" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3244343 // mSurfaceTexture (<unidirectional association>)
	  b parent class_ref 344375 // SurfaceTexture
      end

      classrelation 3244471 // mFrameExtractor (<unidirectional association>)
	relation 3244471 --->
	  a role_name "mFrameExtractor" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3244471 // mFrameExtractor (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3244599 // mOutputFormat (<unidirectional association>)
	relation 3244599 --->
	  a role_name "mOutputFormat" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3244599 // mOutputFormat (<unidirectional association>)
	  b parent class_ref 1105975 // MutableFrameFormat
      end

      attribute 3582775 "mWidth"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3582903 "mHeight"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3583031 "PREP_TIMEOUT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Total timeouts will be PREP_TIMEOUT*PREP_TIMEOUT_REPEAT
 ms"
      end

      attribute 3583159 "PREP_TIMEOUT_REPEAT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3583287 "NEWFRAME_TIMEOUT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "ms"
      end

      attribute 3583415 "NEWFRAME_TIMEOUT_REPEAT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3244727 // mFrameShader (<unidirectional association>)
	relation 3244727 --->
	  a role_name "mFrameShader" init_value "
            \"#extension GL_OES_EGL_image_external : require\\n\" +
            \"precision mediump float;\\n\" +
            \"uniform samplerExternalOES tex_sampler_0;\\n\" +
            \"varying vec2 v_texcoord;\\n\" +
            \"void main() {\\n\" +
            \"  gl_FragColor = texture2D(tex_sampler_0, v_texcoord);\\n\" +
            \"}\\n\"" const_relation private
	    comment " This is an identity shader; not using the default identity
 shader because reading from a SurfaceTexture requires the
 GL_OES_EGL_image_external extension.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3244727 // mFrameShader (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3583543 "mSourceCoords_0"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " { 1, 1, 0, 1,
                                                     0, 1, 0, 1,
                                                     1, 0, 0, 1,
                                                     0, 0, 0, 1 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The following transforms enable rotation of the decoded source.
 These are multiplied with the transform obtained from the
 SurfaceTexture to get the final transform to be set on the media source.
 Currently, given a device orientation, the MediaSource rotates in such a way
 that the source is displayed upright. A particular use case
 is \"Background Replacement\" feature in the Camera app
 where the MediaSource rotates the source to align with the camera feed and pass it
 on to the backdropper filter. The backdropper only does the blending
 and does not have to do any rotation
 (except for mirroring in case of front camera).
 TODO: Currently the rotations are spread over a bunch of stages in the
 pipeline. A cleaner design
 could be to cast away all the rotation in a separate filter or attach a transform
 to the frame so that MediaSource itself need not know about any rotation."
      end

      attribute 3583671 "mSourceCoords_270"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " { 0, 1, 0, 1,
                                                      0, 0, 0, 1,
                                                      1, 1, 0, 1,
                                                      1, 0, 0, 1 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3583799 "mSourceCoords_180"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " { 0, 0, 0, 1,
                                                       1, 0, 0, 1,
                                                       0, 1, 0, 1,
                                                       1, 1, 0, 1 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3583927 "mSourceCoords_90"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " { 1, 0, 0, 1,
                                                       1, 1, 0, 1,
                                                       0, 0, 0, 1,
                                                       0, 1, 0, 1 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3584055 "mGotSize"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3584183 "mPrepared"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3584311 "mPlaying"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3584439 "mNewFrameAvailable"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3584567 "mOrientationUpdated"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3584695 "mPaused"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3584823 "mCompleted"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3584951 "mLogVerbose"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3244855 // TAG (<unidirectional association>)
	relation 3244855 --->
	  a role_name "TAG" init_value " \"MediaSource\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3244855 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 28952887 "MediaSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28953015 "setupPorts"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28953143 "createFormats"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28953271 "prepare"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28953399 "open"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28953527 "process"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28953655 "close"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28953783 "tearDown"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28953911 "fieldPortValueUpdated"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " When updating the port values of the filter, users can update sourceIsUrl to switch
   between using URL objects or Assets.
 If updating only sourceUrl/sourceAsset, MediaPlayer gets reset if the current player
   uses Url objects/Asset.
 Otherwise the new sourceUrl/sourceAsset is stored and will be used when users switch
   sourceIsUrl next time."
      end

      operation 28954039 "pauseVideo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pauseState" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28954167 "setupMediaPlayer"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "useUrl" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Creates a media player, sets it up, and calls prepare "
      end

      classrelation 3244983 // onVideoSizeChangedListener (<unidirectional association>)
	relation 3244983 --->
	  a role_name "onVideoSizeChangedListener" init_value "
            new MediaPlayer.OnVideoSizeChangedListener() {
        public void onVideoSizeChanged(MediaPlayer mp, int width, int height) {
            if (mLogVerbose) Log.v(TAG, \"MediaPlayer sent dimensions: \" + width + \" x \" + height);
            if (!mGotSize) {
                if (mOrientation == 0 || mOrientation == 180) {
                    mOutputFormat.setDimensions(width, height);
                } else {
                    mOutputFormat.setDimensions(height, width);
                }
                mWidth = width;
                mHeight = height;
            } else {
                if (mOutputFormat.getWidth() != width ||
                    mOutputFormat.getHeight() != height) {
                    Log.e(TAG, \"Multiple video size change events received!\");
                }
            }
            synchronized(MediaSource.this) {
                mGotSize = true;
                MediaSource.this.notify();
            }
        }
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3244983 // onVideoSizeChangedListener (<unidirectional association>)
	  b parent class_ref 754615 // OnVideoSizeChangedListener
      end

      classrelation 3245111 // onPreparedListener (<unidirectional association>)
	relation 3245111 --->
	  a role_name "onPreparedListener" init_value "
            new MediaPlayer.OnPreparedListener() {
        public void onPrepared(MediaPlayer mp) {
            if (mLogVerbose) Log.v(TAG, \"MediaPlayer is prepared\");
            synchronized(MediaSource.this) {
                mPrepared = true;
                MediaSource.this.notify();
            }
        }
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3245111 // onPreparedListener (<unidirectional association>)
	  b parent class_ref 754103 // OnPreparedListener
      end

      classrelation 3245239 // onCompletionListener (<unidirectional association>)
	relation 3245239 --->
	  a role_name "onCompletionListener" init_value "
            new MediaPlayer.OnCompletionListener() {
        public void onCompletion(MediaPlayer mp) {
            if (mLogVerbose) Log.v(TAG, \"MediaPlayer has completed playback\");
            synchronized(MediaSource.this) {
                mCompleted = true;
            }
        }
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3245239 // onCompletionListener (<unidirectional association>)
	  b parent class_ref 753975 // OnCompletionListener
      end

      classrelation 3245367 // onMediaFrameAvailableListener (<unidirectional association>)
	relation 3245367 --->
	  a role_name "onMediaFrameAvailableListener" init_value "
            new SurfaceTexture.OnFrameAvailableListener() {
        public void onFrameAvailable(SurfaceTexture surfaceTexture) {
            if (mLogVerbose) Log.v(TAG, \"New frame from media player\");
            synchronized(MediaSource.this) {
                if (mLogVerbose) Log.v(TAG, \"New frame: notify\");
                mNewFrameAvailable = true;
                MediaSource.this.notify();
                if (mLogVerbose) Log.v(TAG, \"New frame: notify done\");
            }
        }
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3245367 // onMediaFrameAvailableListener (<unidirectional association>)
	  b parent class_ref 344503 // OnFrameAvailableListener
      end
    end

    class 1119799 "SurfaceTextureSource"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " <p>A filter that converts textures from a SurfaceTexture object into frames for
processing in the filter framework.</p>

<p>To use, connect up the sourceListener callback, and then when executing
the graph, use the SurfaceTexture object passed to the callback to feed
frames into the filter graph. For example, pass the SurfaceTexture into
{#link
android.hardware.Camera.setPreviewTexture(android.graphics.SurfaceTexture)}.
This filter is intended for applications that need for flexibility than the
CameraSource and MediaSource provide. Note that the application needs to
provide width and height information for the SurfaceTextureSource, which it
should obtain from wherever the SurfaceTexture data is coming from to avoid
unnecessary resampling.</p>

@hide"
      classrelation 3245495 // <generalisation>
	relation 3245495 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3245495 // <generalisation>
	  b parent class_ref 1104311 // Filter
      end

      class 1119927 "SurfaceTextureSourceListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 28954295 "onSurfaceTextureSourceReady"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "source" type class_ref 344375 // SurfaceTexture
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3245623 // mSourceListener (<unidirectional association>)
	relation 3245623 --->
	  a role_name "mSourceListener" private
	    comment " A callback to send the internal SurfaceTexture object to, once it is
created. This callback will be called when the the filter graph is
preparing to execute, but before any processing has actually taken
place. The SurfaceTexture object passed to this callback is the only way
to feed this filter. When the filter graph is shutting down, this
callback will be called again with null as the source.

This callback may be called from an arbitrary thread, so it should not
assume it is running in the UI thread in particular.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GenerateFinalPort(name = \"sourceListener\")
"
	    classrelation_ref 3245623 // mSourceListener (<unidirectional association>)
	  b parent class_ref 1119927 // SurfaceTextureSourceListener
      end

      attribute 3585079 "mWidth"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"width\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The width of the output image frame. If the texture width for the
SurfaceTexture source is known, use it here to minimize resampling. "
      end

      attribute 3585207 "mHeight"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"height\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The height of the output image frame. If the texture height for the
SurfaceTexture source is known, use it here to minimize resampling. "
      end

      attribute 3585335 "mWaitForNewFrame"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"waitForNewFrame\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether the filter will always wait for a new frame from its
SurfaceTexture, or whether it will output an old frame again if a new
frame isn't available. The filter will always wait for the first frame,
to avoid outputting a blank frame. Defaults to true.
"
      end

      attribute 3585463 "mWaitTimeout"
	private explicit_type "int"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"waitTimeout\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Maximum timeout before signaling error when waiting for a new frame. Set
this to zero to disable the timeout and wait indefinitely. In milliseconds.
"
      end

      attribute 3585591 "mCloseOnTimeout"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFieldPort(name = \"closeOnTimeout\", hasDefault = true)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether a timeout is an exception-causing failure, or just causes the
filter to close.
"
      end

      classrelation 3245751 // mMediaFrame (<unidirectional association>)
	relation 3245751 --->
	  a role_name "mMediaFrame" private
	    comment " Variables for input->output conversion
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3245751 // mMediaFrame (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      classrelation 3245879 // mFrameExtractor (<unidirectional association>)
	relation 3245879 --->
	  a role_name "mFrameExtractor" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3245879 // mFrameExtractor (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3246007 // mSurfaceTexture (<unidirectional association>)
	relation 3246007 --->
	  a role_name "mSurfaceTexture" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3246007 // mSurfaceTexture (<unidirectional association>)
	  b parent class_ref 344375 // SurfaceTexture
      end

      classrelation 3246135 // mOutputFormat (<unidirectional association>)
	relation 3246135 --->
	  a role_name "mOutputFormat" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3246135 // mOutputFormat (<unidirectional association>)
	  b parent class_ref 1105975 // MutableFrameFormat
      end

      classrelation 3246263 // mNewFrameAvailable (<unidirectional association>)
	relation 3246263 --->
	  a role_name "mNewFrameAvailable" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3246263 // mNewFrameAvailable (<unidirectional association>)
	  b parent class_ref 475191 // ConditionVariable
      end

      attribute 3585719 "mFirstFrame"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3585847 "mFrameTransform"
	private explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3585975 "mMappedCoords"
	private explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3586103 "mSourceCoords"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " { 0, 1, 0, 1,
                                                   1, 1, 0, 1,
                                                   0, 0, 0, 1,
                                                   1, 0, 0, 1 }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These default source coordinates perform the necessary flip
 for converting from MFF/Bitmap origin to OpenGL origin."
      end

      classrelation 3246391 // mRenderShader (<unidirectional association>)
	relation 3246391 --->
	  a role_name "mRenderShader" init_value "
            \"#extension GL_OES_EGL_image_external : require\\n\" +
            \"precision mediump float;\\n\" +
            \"uniform samplerExternalOES tex_sampler_0;\\n\" +
            \"varying vec2 v_texcoord;\\n\" +
            \"void main() {\\n\" +
            \"  gl_FragColor = texture2D(tex_sampler_0, v_texcoord);\\n\" +
            \"}\\n\"" const_relation private
	    comment " Shader for output
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3246391 // mRenderShader (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3246519 // TAG (<unidirectional association>)
	relation 3246519 --->
	  a role_name "TAG" init_value " \"SurfaceTextureSource\"" class_relation const_relation private
	    comment " Variables for logging
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3246519 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3586231 "mLogVerbose"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " Log.isLoggable(TAG, Log.VERBOSE)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 28954423 "SurfaceTextureSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28954551 "setupPorts"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28954679 "createFormats"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28954807 "prepare"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28954935 "open"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28955063 "process"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28955191 "close"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28955319 "tearDown"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28955447 "fieldPortValueUpdated"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 3246647 // onFrameAvailableListener (<unidirectional association>)
	relation 3246647 --->
	  a role_name "onFrameAvailableListener" init_value "
            new SurfaceTexture.OnFrameAvailableListener() {
        public void onFrameAvailable(SurfaceTexture surfaceTexture) {
            if (mLogVerbose) Log.v(TAG, \"New frame from SurfaceTexture\");
            mNewFrameAvailable.open();
        }
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3246647 // onFrameAvailableListener (<unidirectional association>)
	  b parent class_ref 344503 // OnFrameAvailableListener
      end
    end

    class 1120055 "SurfaceTextureTarget"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      classrelation 3246775 // <generalisation>
	relation 3246775 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3246775 // <generalisation>
	  b parent class_ref 1104311 // Filter
      end

      attribute 3586359 "RENDERMODE_STRETCH"
	const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3586487 "RENDERMODE_FIT"
	const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3586615 "RENDERMODE_FILL_CROP"
	const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3586743 "RENDERMODE_CUSTOMIZE"
	const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3246903 // mSurfaceTexture (<unidirectional association>)
	relation 3246903 --->
	  a role_name "mSurfaceTexture" private
	    comment " Required. Sets the destination surfaceTexture.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GenerateFinalPort(name = \"surfaceTexture\")
"
	    classrelation_ref 3246903 // mSurfaceTexture (<unidirectional association>)
	  b parent class_ref 344375 // SurfaceTexture
      end

      attribute 3586871 "mScreenWidth"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFinalPort(name = \"width\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Required. Sets the width of the output surfaceTexture images "
      end

      attribute 3586999 "mScreenHeight"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GenerateFinalPort(name = \"height\")
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Required. Sets the height of the output surfaceTexture images "
      end

      classrelation 3247031 // mRenderModeString (<unidirectional association>)
	relation 3247031 --->
	  a role_name "mRenderModeString" private
	    comment " Optional. Control how the incoming frames are rendered onto the
output. Default is FIT.
RENDERMODE_STRETCH: Just fill the output surfaceView.
RENDERMODE_FIT: Keep aspect ratio and fit without cropping. May
have black bars.
RENDERMODE_FILL_CROP: Keep aspect ratio and fit without black
bars. May crop.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GenerateFieldPort(name = \"renderMode\", hasDefault = true)
"
	    classrelation_ref 3247031 // mRenderModeString (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3247159 // mSourceQuad (<unidirectional association>)
	relation 3247159 --->
	  a role_name "mSourceQuad" init_value " new Quad(new Point(0.0f, 1.0f),
                                        new Point(1.0f, 1.0f),
                                        new Point(0.0f, 0.0f),
                                        new Point(1.0f, 0.0f))" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GenerateFieldPort(name = \"sourceQuad\", hasDefault = true)
"
	    classrelation_ref 3247159 // mSourceQuad (<unidirectional association>)
	  b parent class_ref 1108663 // Quad
      end

      classrelation 3247287 // mTargetQuad (<unidirectional association>)
	relation 3247287 --->
	  a role_name "mTargetQuad" init_value " new Quad(new Point(0.0f, 0.0f),
                                        new Point(1.0f, 0.0f),
                                        new Point(0.0f, 1.0f),
                                        new Point(1.0f, 1.0f))" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GenerateFieldPort(name = \"targetQuad\", hasDefault = true)
"
	    classrelation_ref 3247287 // mTargetQuad (<unidirectional association>)
	  b parent class_ref 1108663 // Quad
      end

      attribute 3587127 "mSurfaceId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3247415 // mProgram (<unidirectional association>)
	relation 3247415 --->
	  a role_name "mProgram" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3247415 // mProgram (<unidirectional association>)
	  b parent class_ref 1108407 // ShaderProgram
      end

      classrelation 3247543 // mScreen (<unidirectional association>)
	relation 3247543 --->
	  a role_name "mScreen" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3247543 // mScreen (<unidirectional association>)
	  b parent class_ref 1106743 // GLFrame
      end

      attribute 3587255 "mRenderMode"
	private explicit_type "int"
	init_value " RENDERMODE_FIT"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3587383 "mAspectRatio"
	private explicit_type "float"
	init_value " 1.f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3587511 "mLogVerbose"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3247671 // TAG (<unidirectional association>)
	relation 3247671 --->
	  a role_name "TAG" init_value " \"SurfaceTextureTarget\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3247671 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 28955575 "SurfaceTextureTarget"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28955703 "setupPorts"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28955831 "updateRenderMode"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 28955959 "prepare"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28956087 "open"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28956215 "close"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Once the surface is unregistered, we still need the surfacetexture reference.
 That is because when the the filter graph stops and starts again, the app
 may not set the mSurfaceTexture again on the filter. In some cases, the app
 may not even know that the graph has re-started. So it is difficult to enforce
 that condition on an app using this filter. The only case where we need
 to let go of the mSurfaceTexure reference is when the app wants to shut
 down the graph on purpose, such as in the disconnect call."
      end

      operation 28956343 "disconnect"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " This should be called from the client side when the surfacetexture is no longer
 valid. e.g. from onPause() in the application using the filter graph.
 In this case, we need to let go of our surfacetexture reference."
      end

      operation 28956471 "process"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28956599 "fieldPortValueUpdated"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 129591 // String
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28956727 "tearDown"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 1096887 // FilterContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 28956855 "updateTargetRect"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 175031 "videosrc"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 660151 "CameraSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.Filter;
import android.filterfw.core.FilterContext;
import android.filterfw.core.Frame;
import android.filterfw.core.FrameFormat;
import android.filterfw.core.GenerateFieldPort;
import android.filterfw.core.GenerateFinalPort;
import android.filterfw.core.GLFrame;
import android.filterfw.core.MutableFrameFormat;
import android.filterfw.core.ShaderProgram;
import android.filterfw.format.ImageFormat;
import android.graphics.SurfaceTexture;
import android.hardware.Camera;
import android.opengl.Matrix;
import java.io.IOException;
import java.util.List;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1119543 // CameraSource
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 660279 "MediaSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.content.res.AssetFileDescriptor;
import android.filterfw.core.Filter;
import android.filterfw.core.FilterContext;
import android.filterfw.core.Frame;
import android.filterfw.core.FrameFormat;
import android.filterfw.core.GenerateFieldPort;
import android.filterfw.core.GenerateFinalPort;
import android.filterfw.core.GLFrame;
import android.filterfw.core.MutableFrameFormat;
import android.filterfw.core.ShaderProgram;
import android.filterfw.format.ImageFormat;
import android.graphics.SurfaceTexture;
import android.media.MediaPlayer;
import android.net.Uri;
import android.opengl.Matrix;
import android.view.Surface;
import java.io.IOException;
import java.lang.IllegalArgumentException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1119671 // MediaSource
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 660407 "SurfaceTextureSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.Filter;
import android.filterfw.core.FilterContext;
import android.filterfw.core.Frame;
import android.filterfw.core.FrameFormat;
import android.filterfw.core.GenerateFieldPort;
import android.filterfw.core.GenerateFinalPort;
import android.filterfw.core.GLFrame;
import android.filterfw.core.MutableFrameFormat;
import android.filterfw.core.ShaderProgram;
import android.filterfw.format.ImageFormat;
import android.graphics.SurfaceTexture;
import android.os.ConditionVariable;
import android.opengl.Matrix;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1119799 // SurfaceTextureSource
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 660535 "SurfaceTextureTarget"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.filterfw.core.Filter;
import android.filterfw.core.FilterContext;
import android.filterfw.core.Frame;
import android.filterfw.core.FrameFormat;
import android.filterfw.core.GenerateFieldPort;
import android.filterfw.core.GenerateFinalPort;
import android.filterfw.core.GLEnvironment;
import android.filterfw.core.GLFrame;
import android.filterfw.core.MutableFrameFormat;
import android.filterfw.core.ShaderProgram;
import android.filterfw.format.ImageFormat;
import android.filterfw.geometry.Quad;
import android.filterfw.geometry.Point;
import android.graphics.SurfaceTexture;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1120055 // SurfaceTextureTarget
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
