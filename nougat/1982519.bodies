class SessionFuture
!!!36249655.java!!!	setSession(inout session : CameraCaptureSession) : void
            mSession = session;
            mCondVar.open();
!!!36249783.java!!!	cancel(inout mayInterruptIfRunning : boolean) : boolean
            return false; // don't allow canceling this task
!!!36249911.java!!!	isCancelled() : boolean
            return false; // can never cancel this task
!!!36250039.java!!!	isDone() : boolean
            return mSession != null;
!!!36250167.java!!!	get() : CameraCaptureSession
            mCondVar.block();
            return mSession;
!!!36250295.java!!!	get(in timeout : long, inout unit : TimeUnit) : CameraCaptureSession
            long timeoutMs = unit.convert(timeout, TimeUnit.MILLISECONDS);
            if (!mCondVar.block(timeoutMs)) {
                throw new TimeoutException(
                        "Failed to receive session after " + timeout + " " + unit);
            }

            if (mSession == null) {
                throw new AssertionError();
            }
            return mSession;
