class EditModeActions
!!!36319415.java!!!	EditModeActions(inout est : EditStyledText, inout manager : EditStyledText::EditorManager, inout dialog : EditStyledText::StyledTextDialog)
            mEST = est;
            mManager = manager;
            mDialog = dialog;
            mActionMap.put(EditStyledText.MODE_NOTHING, mNothingAction);
            mActionMap.put(EditStyledText.MODE_COPY, mCopyAction);
            mActionMap.put(EditStyledText.MODE_PASTE, mPasteAction);
            mActionMap.put(EditStyledText.MODE_SELECT, mSelectAction);
            mActionMap.put(EditStyledText.MODE_CUT, mCutAction);
            mActionMap.put(EditStyledText.MODE_SELECTALL, mSelectAllAction);
            mActionMap.put(EditStyledText.MODE_HORIZONTALLINE, mHorizontalLineAction);
            mActionMap.put(EditStyledText.MODE_STOP_SELECT, mStopSelectionAction);
            mActionMap.put(EditStyledText.MODE_CLEARSTYLES, mClearStylesAction);
            mActionMap.put(EditStyledText.MODE_IMAGE, mImageAction);
            mActionMap.put(EditStyledText.MODE_BGCOLOR, mBackgroundColorAction);
            mActionMap.put(EditStyledText.MODE_PREVIEW, mPreviewAction);
            mActionMap.put(EditStyledText.MODE_CANCEL, mCancelEditAction);
            mActionMap.put(EditStyledText.MODE_TEXTVIEWFUNCTION, mTextViewAction);
            mActionMap.put(EditStyledText.MODE_START_EDIT, mStartEditAction);
            mActionMap.put(EditStyledText.MODE_END_EDIT, mEndEditAction);
            mActionMap.put(EditStyledText.MODE_RESET, mResetAction);
            mActionMap.put(EditStyledText.MODE_SHOW_MENU, mShowMenuAction);
            mActionMap.put(EditStyledText.MODE_ALIGN, mAlignAction);
            mActionMap.put(EditStyledText.MODE_TELOP, mTelopAction);
            mActionMap.put(EditStyledText.MODE_SWING, mSwingAction);
            mActionMap.put(EditStyledText.MODE_MARQUEE, mMarqueeDialogAction);
            mActionMap.put(EditStyledText.MODE_COLOR, mColorAction);
            mActionMap.put(EditStyledText.MODE_SIZE, mSizeAction);
!!!36319543.java!!!	addAction(in modeId : int, inout action : EditStyledText::EditModeActions::EditModeActionBase) : void
            mActionMap.put(modeId, action);
!!!36319671.java!!!	onAction(in newMode : int, inout params : Object) : void
            getAction(newMode).addParams(params);
            mMode = newMode;
            doNext(newMode);
!!!36319799.java!!!	onAction(in newMode : int, inout param : Object) : void
            onAction(newMode, new Object[] { param });
!!!36319927.java!!!	onAction(in newMode : int) : void
            onAction(newMode, null);
!!!36320055.java!!!	onSelectAction() : void
            doNext(EditStyledText.MODE_SELECT);
!!!36320183.java!!!	getAction(in mode : int) : EditStyledText::EditModeActions::EditModeActionBase
            if (mActionMap.containsKey(mode)) {
                return mActionMap.get(mode);
            }
            return null;
!!!36320311.java!!!	doNext() : boolean
            return doNext(mMode);
!!!36320439.java!!!	doNext(in mode : int) : boolean
            if (DBG) {
                Log.d(TAG, "--- do the next action: " + mode + "," + mManager.getSelectState());
            }
            EditModeActionBase action = getAction(mode);
            if (action == null) {
                Log.e(TAG, "--- invalid action error.");
                return false;
            }
            switch (mManager.getSelectState()) {
                case EditStyledText.STATE_SELECT_OFF:
                    return action.doNotSelected();
                case EditStyledText.STATE_SELECT_ON:
                    return action.doStartPosIsSelected();
                case EditStyledText.STATE_SELECTED:
                    return action.doEndPosIsSelected();
                case EditStyledText.STATE_SELECT_FIX:
                    if (mManager.isWaitInput()) {
                        return action.doSelectionIsFixedAndWaitingInput();
                    } else {
                        return action.doSelectionIsFixed();
                    }
                default:
                    return false;
            }
