class RescalableImageSpan
!!!36317623.java!!!	RescalableImageSpan(inout context : Context, inout uri : Uri, in maxwidth : int)
                super(context, uri);
                mContext = context;
                mContentUri = uri;
                MAXWIDTH = maxwidth;
!!!36317751.java!!!	RescalableImageSpan(inout context : Context, in resourceId : int, in maxwidth : int)
                super(context, resourceId);
                mContext = context;
                MAXWIDTH = maxwidth;
!!!36317879.java!!!	getDrawable() : Drawable
                if (mDrawable != null) {
                    return mDrawable;
                } else if (mContentUri != null) {
                    Bitmap bitmap = null;
                    System.gc();
                    try {
                        InputStream is =
                                mContext.getContentResolver().openInputStream(mContentUri);
                        BitmapFactory.Options opt = new BitmapFactory.Options();
                        opt.inJustDecodeBounds = true;
                        BitmapFactory.decodeStream(is, null, opt);
                        is.close();
                        is = mContext.getContentResolver().openInputStream(mContentUri);
                        int width, height;
                        width = opt.outWidth;
                        height = opt.outHeight;
                        mIntrinsicWidth = width;
                        mIntrinsicHeight = height;
                        if (opt.outWidth > MAXWIDTH) {
                            width = MAXWIDTH;
                            height = height * MAXWIDTH / opt.outWidth;
                            Rect padding = new Rect(0, 0, width, height);
                            bitmap = BitmapFactory.decodeStream(is, padding, null);
                        } else {
                            bitmap = BitmapFactory.decodeStream(is);
                        }
                        mDrawable = new BitmapDrawable(mContext.getResources(), bitmap);
                        mDrawable.setBounds(0, 0, width, height);
                        is.close();
                    } catch (Exception e) {
                        Log.e(LOG_TAG, "Failed to loaded content " + mContentUri, e);
                        return null;
                    } catch (OutOfMemoryError e) {
                        Log.e(LOG_TAG, "OutOfMemoryError");
                        return null;
                    }
                } else {
                    mDrawable = super.getDrawable();
                    rescaleBigImage(mDrawable);
                    mIntrinsicWidth = mDrawable.getIntrinsicWidth();
                    mIntrinsicHeight = mDrawable.getIntrinsicHeight();
                }
                return mDrawable;
!!!36318007.java!!!	isOverSize() : boolean
                return (getDrawable().getIntrinsicWidth() > MAXWIDTH);
!!!36318135.java!!!	getContentUri() : Uri
                return mContentUri;
!!!36318263.java!!!	rescaleBigImage(inout image : Drawable) : void
                if (DBG) {
                    Log.d(LOG_TAG, "--- rescaleBigImage:");
                }
                if (MAXWIDTH < 0) {
                    return;
                }
                int image_width = image.getIntrinsicWidth();
                int image_height = image.getIntrinsicHeight();
                if (DBG) {
                    Log.d(LOG_TAG, "--- rescaleBigImage:" + image_width + "," + image_height
                            + "," + MAXWIDTH);
                }
                if (image_width > MAXWIDTH) {
                    image_width = MAXWIDTH;
                    image_height = image_height * MAXWIDTH / image_width;
                }
                image.setBounds(0, 0, image_width, image_height);
