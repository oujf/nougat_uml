class CompositeCursorAdapterTest
!!!36328631.java!!!	testGetCountNoEmptySections() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(false, false);
        adapter.addPartition(false, false);

        adapter.changeCursor(0, makeCursor("a", 2));
        adapter.changeCursor(1, makeCursor("b", 3));

        assertEquals(5, adapter.getCount());
!!!36328759.java!!!	testGetViewNoEmptySections() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(false, false);
        adapter.addPartition(false, false);

        adapter.changeCursor(0, makeCursor("a", 1));
        adapter.changeCursor(1, makeCursor("b", 2));

        for (int i = 0; i < adapter.getCount(); i++) {
            adapter.getView(i, null, null);
        }

        assertEquals("0a[0] 1b[0] 1b[1]", adapter.toString());
!!!36328887.java!!!	testGetCountWithHeadersAndNoEmptySections() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(false, true);
        adapter.addPartition(false, true);

        adapter.changeCursor(0, makeCursor("a", 2));
        adapter.changeCursor(1, makeCursor("b", 3));

        assertEquals(7, adapter.getCount());
!!!36329015.java!!!	testGetViewWithHeadersNoEmptySections() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(false, true);
        adapter.addPartition(false, true);

        adapter.changeCursor(0, makeCursor("a", 1));
        adapter.changeCursor(1, makeCursor("b", 2));

        for (int i = 0; i < adapter.getCount(); i++) {
            adapter.getView(i, null, null);
        }

        assertEquals("0a[H] 0a[0] 1b[H] 1b[0] 1b[1]", adapter.toString());
!!!36329143.java!!!	testGetCountWithHiddenEmptySection() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(false, true);
        adapter.addPartition(false, true);

        adapter.changeCursor(1, makeCursor("a", 2));

        assertEquals(3, adapter.getCount());
!!!36329271.java!!!	testGetPartitionForPosition() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(true, false);
        adapter.addPartition(true, true);

        adapter.changeCursor(0, makeCursor("a", 1));
        adapter.changeCursor(1, makeCursor("b", 2));

        assertEquals(0, adapter.getPartitionForPosition(0));
        assertEquals(1, adapter.getPartitionForPosition(1));
        assertEquals(1, adapter.getPartitionForPosition(2));
        assertEquals(1, adapter.getPartitionForPosition(3));
!!!36329399.java!!!	testGetOffsetForPosition() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(true, false);
        adapter.addPartition(true, true);

        adapter.changeCursor(0, makeCursor("a", 1));
        adapter.changeCursor(1, makeCursor("b", 2));

        assertEquals(0, adapter.getOffsetInPartition(0));
        assertEquals(-1, adapter.getOffsetInPartition(1));
        assertEquals(0, adapter.getOffsetInPartition(2));
        assertEquals(1, adapter.getOffsetInPartition(3));
!!!36329527.java!!!	testGetPositionForPartition() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(true, true);
        adapter.addPartition(true, true);

        adapter.changeCursor(0, makeCursor("a", 1));
        adapter.changeCursor(1, makeCursor("b", 2));

        assertEquals(0, adapter.getPositionForPartition(0));
        assertEquals(2, adapter.getPositionForPartition(1));
!!!36329655.java!!!	testGetViewWithHiddenEmptySections() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(false, false);
        adapter.addPartition(false, false);

        adapter.changeCursor(1, makeCursor("b", 2));

        for (int i = 0; i < adapter.getCount(); i++) {
            adapter.getView(i, null, null);
        }

        assertEquals("1b[0] 1b[1]", adapter.toString());
!!!36329783.java!!!	testGetCountWithShownEmptySection() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(true, true);
        adapter.addPartition(true, true);

        adapter.changeCursor(1, makeCursor("a", 2));

        assertEquals(4, adapter.getCount());
!!!36329911.java!!!	testGetViewWithShownEmptySections() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(true, true);
        adapter.addPartition(true, true);

        adapter.changeCursor(1, makeCursor("b", 2));

        for (int i = 0; i < adapter.getCount(); i++) {
            adapter.getView(i, null, null);
        }

        assertEquals("0[H] 1b[H] 1b[0] 1b[1]", adapter.toString());
!!!36330039.java!!!	testAreAllItemsEnabledFalse() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(true, false);
        adapter.addPartition(true, true);

        assertFalse(adapter.areAllItemsEnabled());
!!!36330167.java!!!	testAreAllItemsEnabledTrue() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(true, false);
        adapter.addPartition(true, false);

        assertTrue(adapter.areAllItemsEnabled());
!!!36330295.java!!!	testIsEnabled() : void
        TestCompositeCursorAdapter adapter = new TestCompositeCursorAdapter();
        adapter.addPartition(true, false);
        adapter.addPartition(true, true);

        adapter.changeCursor(0, makeCursor("a", 1));
        adapter.changeCursor(1, makeCursor("b", 2));

        assertTrue(adapter.isEnabled(0));
        assertFalse(adapter.isEnabled(1));
        assertTrue(adapter.isEnabled(2));
        assertTrue(adapter.isEnabled(3));
!!!36330423.java!!!	makeCursor(inout name : String, in count : int) : Cursor
        MatrixCursor cursor = new MatrixCursor(new String[]{name});
        for (int i = 0; i < count; i++) {
            cursor.addRow(new Object[]{i});
        }
        return cursor;
