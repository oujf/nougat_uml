class BordeauxAggregatorManager
!!!36357815.java!!!	retrieveAggregatorManager() : boolean
        if (mAggregatorManager == null) {
            mAggregatorManager = BordeauxManagerService.getAggregatorManager(mContext);
            if (mAggregatorManager == null) {
                Log.e(TAG, AggregatorManager_NOTAVAILABLE);
                return false;
            }
        }
        return true;
!!!36357943.java!!!	BordeauxAggregatorManager(inout context : Context)
        mContext = context;
        mAggregatorManager = BordeauxManagerService.getAggregatorManager(mContext);
!!!36358071.java!!!	GetData(in dataName : String) : String
        if (!retrieveAggregatorManager())
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        try {
            return getMap(mAggregatorManager.getData(dataName));
        } catch (RemoteException e) {
            Log.e(TAG,"Exception in Getting " + dataName);
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        }
!!!36358199.java!!!	getLocationClusters() : String
        if (!retrieveAggregatorManager())
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        try {
            return mAggregatorManager.getLocationClusters();
        } catch (RemoteException e) {
            Log.e(TAG,"Error getting location clusters");
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        }
!!!36358327.java!!!	getTimeOfDayValues() : String
        if (!retrieveAggregatorManager())
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        try {
            return mAggregatorManager.getTimeOfDayValues();
        } catch (RemoteException e) {
            Log.e(TAG,"Error getting time of day values");
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        }
!!!36358455.java!!!	getDayOfWeekValues() : String
        if (!retrieveAggregatorManager())
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        try {
            return mAggregatorManager.getDayOfWeekValues();
        } catch (RemoteException e) {
            Log.e(TAG,"Error getting day of week values");
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        }
!!!36358583.java!!!	setFakeLocation(in name : String) : boolean
        if (!retrieveAggregatorManager())
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        try {
            return mAggregatorManager.setFakeLocation(name);
        } catch (RemoteException e) {
            Log.e(TAG,"Error setting fake location:" + name);
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        }
!!!36358711.java!!!	setFakeTimeOfDay(in time_of_day : String) : boolean
        if (!retrieveAggregatorManager())
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        try {
            return mAggregatorManager.setFakeTimeOfDay(time_of_day);
        } catch (RemoteException e) {
            Log.e(TAG,"Error setting fake time of day:" + time_of_day);
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        }
!!!36358839.java!!!	setFakeDayOfWeek(in day_of_week : String) : boolean
        if (!retrieveAggregatorManager())
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        try {
            return mAggregatorManager.setFakeDayOfWeek(day_of_week);
        } catch (RemoteException e) {
            Log.e(TAG,"Error setting fake day of week:" + day_of_week);
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        }
!!!36358967.java!!!	getFakeMode() : boolean
        if (!retrieveAggregatorManager())
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        try {
            return mAggregatorManager.getFakeMode();
        } catch (RemoteException e) {
            Log.e(TAG,"Error getting fake mode");
            throw new RuntimeException(AggregatorManager_NOTAVAILABLE);
        }
!!!36359095.java!!!	getMap(in sample : List<StringString>) : String
        HashMap<String, String> map = new HashMap<String, String>();
        for (int i =0; i < sample.size(); i++) {
            map.put(sample.get(i).key, sample.get(i).value);
        }
        return (Map) map;
