class BordeauxClassifier
!!!36359223.java!!!	getArrayList(in sample : HashMap<Integer, Float>) : IntFloat
        ArrayList<IntFloat> intfloat_sample = new ArrayList<IntFloat>();
        for (Map.Entry<Integer, Float> x : sample.entrySet()) {
           IntFloat v = new IntFloat();
           v.index = x.getKey();
           v.value = x.getValue();
           intfloat_sample.add(v);
        }
        return intfloat_sample;
!!!36359351.java!!!	retrieveClassifier() : boolean
        if (mClassifier == null)
            mClassifier = BordeauxManagerService.getClassifier(mContext, mName);
        // if classifier is not available, return false
        if (mClassifier == null) {
            Log.i(TAG,"Classifier not available.");
            return false;
        }
        return true;
!!!36359479.java!!!	BordeauxClassifier(inout context : Context)
        mContext = context;
        mName = "defaultClassifier";
        mClassifier = BordeauxManagerService.getClassifier(context, mName);
!!!36359607.java!!!	BordeauxClassifier(inout context : Context, inout name : String)
        mContext = context;
        mName = name;
        mClassifier = BordeauxManagerService.getClassifier(context, mName);
!!!36359735.java!!!	update(in sample : HashMap<Integer, Float>, in target : int) : boolean
        if (!retrieveClassifier())
            return false;
        try {
            mClassifier.TrainOneSample(getArrayList(sample), target);
        } catch (RemoteException e) {
            Log.e(TAG,"Exception: training one sample.");
            return false;
        }
        return true;
!!!36359863.java!!!	classify(in sample : HashMap<Integer, Float>) : int
        // if classifier is not available return -1 as an indication of fail.
        if (!retrieveClassifier())
            return -1;
        try {
            return mClassifier.Classify(getArrayList(sample));
        } catch (RemoteException e) {
            Log.e(TAG,"Exception: classify the sample.");
            // return an invalid number.
            // TODO: throw exception.
            return -1;
        }
