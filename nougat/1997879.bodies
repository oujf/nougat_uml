class BordeauxManagerService
!!!36360119.java!!!	bindServices(inout context : Context) : void
        if (mStarted) return;
        context.bindService(new Intent(IBordeauxService.class.getName()),
               mConnection, Context.BIND_AUTO_CREATE);
        mStarted = true;
!!!36360247.java!!!	release(inout context : Context) : void
        if (mStarted && mConnection != null) {
            context.unbindService(mConnection);
            mService = null;
            mStarted = false;
        }
!!!36360375.java!!!	getService(inout context : Context) : IBordeauxService
        if (mService == null) bindServices(context);
        return mService;
!!!36360503.java!!!	getAggregatorManager(inout context : Context) : IAggregatorManager
        if (mService == null) {
            bindServices(context);
            return null;
        }
        try {
            mAggregatorManager = IAggregatorManager.Stub.asInterface(
                    mService.getAggregatorManager());
        } catch (RemoteException e) {
            mAggregatorManager = null;
        }
        return mAggregatorManager;
!!!36360631.java!!!	getPredictor(inout context : Context, inout name : String) : IPredictor
        if (mService == null) {
            bindServices(context);
            return null;
        }
        try {
            mPredictor = IPredictor.Stub.asInterface(mService.getPredictor(name));
        } catch (RemoteException e) {
            mPredictor = null;
        }
        return mPredictor;
!!!36360759.java!!!	getRanker(inout context : Context, inout name : String) : ILearning_StochasticLinearRanker
        if (mService == null) {
            bindServices(context);
            return null;
        }
        try {
            mRanker =
                    ILearning_StochasticLinearRanker.Stub.asInterface(
                            mService.getRanker(name));
        } catch (RemoteException e) {
            mRanker = null;
        }
        return mRanker;
!!!36360887.java!!!	getClassifier(inout context : Context, inout name : String) : ILearning_MulticlassPA
        if (mService == null) {
            bindServices(context);
            return null;
        }
        try {
            mClassifier =
                    ILearning_MulticlassPA.Stub.asInterface(mService.getClassifier(name));
        } catch (RemoteException e) {
            mClassifier = null;
        }
        return mClassifier;
