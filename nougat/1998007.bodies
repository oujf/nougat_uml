class BordeauxPredictor
!!!36361015.java!!!	BordeauxPredictor(inout context : Context)
        mContext = context;
        mName = "defaultPredictor";
        mPredictor = BordeauxManagerService.getPredictor(context, mName);
!!!36361143.java!!!	BordeauxPredictor(inout context : Context, inout name : String)
        mContext = context;
        mName = name;
        mPredictor = BordeauxManagerService.getPredictor(context, mName);
!!!36361271.java!!!	reset() : boolean
        if (!retrievePredictor()){
            Log.e(TAG, "reset: " + PREDICTOR_NOTAVAILABLE);
            return false;
        }
        try {
            mPredictor.resetPredictor();
            return true;
        } catch (RemoteException e) {
        }
        return false;
!!!36361399.java!!!	retrievePredictor() : boolean
        if (mPredictor == null) {
            mPredictor = BordeauxManagerService.getPredictor(mContext, mName);
        }
        if (mPredictor == null) {
            Log.e(TAG, "retrievePredictor: " + PREDICTOR_NOTAVAILABLE);
            return false;
        }
        return true;
!!!36361527.java!!!	addSample(inout sampleName : String) : void
        if (!retrievePredictor())
            throw new RuntimeException(PREDICTOR_NOTAVAILABLE);
        try {
            mPredictor.pushNewSample(sampleName);
        } catch (RemoteException e) {
            Log.e(TAG,"Exception: pushing a new example");
            throw new RuntimeException(PREDICTOR_NOTAVAILABLE);
        }
!!!36361655.java!!!	getTopSamples() : Pair
        return getTopSamples(0);
!!!36361783.java!!!	getTopSamples(in topK : int) : Pair
        try {
            ArrayList<StringFloat> topList =
                    (ArrayList<StringFloat>) mPredictor.getTopCandidates(topK);

            ArrayList<Pair<String, Float> > topSamples =
                    new ArrayList<Pair<String, Float> >(topList.size());
            for (int i = 0; i < topList.size(); ++i) {
                topSamples.add(new Pair<String, Float>(topList.get(i).key, topList.get(i).value));
            }
            return topSamples;
        } catch(RemoteException e) {
            Log.e(TAG,"Exception: getTopSamples");
            throw new RuntimeException(PREDICTOR_NOTAVAILABLE);
        }
!!!36361911.java!!!	setParameter(inout key : String, inout value : String) : boolean
        if (!retrievePredictor())
            throw new RuntimeException(PREDICTOR_NOTAVAILABLE);
        try {
            return mPredictor.setPredictorParameter(key, value);
        } catch (RemoteException e) {
            Log.e(TAG,"Exception: setting predictor parameter");
            throw new RuntimeException(PREDICTOR_NOTAVAILABLE);
        }
