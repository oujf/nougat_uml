class JFunc
!!!36408887.java!!!	JFunc(inout cfunc : CFunc)
        this.cfunc = cfunc;
!!!36409015.java!!!	getCFunc() : CFunc
        return cfunc;
!!!36409143.java!!!	setName(inout fname : String) : void
        this.fname = fname;
!!!36409271.java!!!	getName() : String
        return fname;
!!!36409399.java!!!	setType(inout ftype : JType) : void
        this.ftype = ftype;
!!!36409527.java!!!	getType() : JType
        return ftype;
!!!36409655.java!!!	setClassName(inout className : String) : void
        this.className = className;
!!!36409783.java!!!	getClassName() : String
        return className;
!!!36409911.java!!!	hasBufferArg() : boolean
        return hasBufferArg;
!!!36410039.java!!!	hasTypedBufferArg() : boolean
        return hasTypedBufferArg;
!!!36410167.java!!!	getBufferArgName(in index : int) : String
        return bufferArgNames.get(index);
!!!36410295.java!!!	addArgument(inout argName : String, inout argType : JType, in cindex : int) : void
        argNames.add(argName);
        argTypes.add(argType);
        argCIndices.add(new Integer(cindex));

        if (argType.isBuffer()) {
            hasBufferArg = true;
            bufferArgNames.add(argName);
        }
        if (argType.isTypedBuffer()) {
            hasTypedBufferArg = true;
            bufferArgNames.add(argName);
        }
!!!36410423.java!!!	getNumArgs() : int
        return argNames.size();
!!!36410551.java!!!	getArgIndex(inout name : String) : int
        int len = argNames.size();
        for (int i = 0; i < len; i++) {
            if (name.equals(argNames.get(i))) {
                return i;
            }
        }
        return -1;
!!!36410679.java!!!	getArgName(in index : int) : String
        return argNames.get(index);
!!!36410807.java!!!	getArgType(in index : int) : JType
        return argTypes.get(index);
!!!36410935.java!!!	getArgCIndex(in index : int) : int
        return argCIndices.get(index).intValue();
!!!36411063.java!!!	convert(inout cfunc : CFunc, inout useArray : boolean) : JFunc
        try {
            JFunc jfunc = new JFunc(cfunc);
            jfunc.setName(cfunc.getName());
            jfunc.setType(JType.convert(cfunc.getType(), false));

            int numArgs = cfunc.getNumArgs();
            int numOffsets = 0;
            for (int i = 0; i < numArgs; i++) {
                CType cArgType = cfunc.getArgType(i);
                if (cArgType.isTypedPointer() && useArray) {
                    ++numOffsets;
                }
            }

            for (int i = 0; i < numArgs; i++) {
                String cArgName = cfunc.getArgName(i);
                CType cArgType = cfunc.getArgType(i);

                jfunc.addArgument(cArgName, JType.convert(cArgType, useArray), i);
                if (cArgType.isTypedPointer() && useArray) {
                    if (numOffsets > 1) {
                        jfunc.addArgument(cArgName + "Offset", new JType("int"), i);
                    } else {
                        jfunc.addArgument("offset", new JType("int"), i);
                    }
                }
            }

            return jfunc;
        } catch (RuntimeException e) {
            System.err.println("Failed to convert function " + cfunc);
            throw e;
        }
!!!36411191.java!!!	toString() : String
        String s =  "Function " + fname + " returns " + ftype + ": ";
        for (int i = 0; i < argNames.size(); i++) {
            if (i > 0) {
                s += ", ";
            }
            s += argTypes.get(i) + " " + argNames.get(i);
        }
        return s;
