class CircularBitmapDrawable
!!!36442423.java!!!	CircularBitmapDrawable(inout res : Resources, inout cache : BitmapCache, inout limitDensity : boolean)
        this(res, cache, limitDensity, null);
!!!36442551.java!!!	CircularBitmapDrawable(inout res : Resources, inout cache : BitmapCache, inout limitDensity : boolean, inout opts : ExtendedBitmapDrawable::ExtendedOptions)
        super(res, cache, limitDensity, opts);

        mBitmapPaint.setAntiAlias(true);
        mBitmapPaint.setFilterBitmap(true);
        mBitmapPaint.setDither(true);

        mBorderPaint.setColor(Color.TRANSPARENT);
        mBorderPaint.setStyle(Style.STROKE);
        mBorderPaint.setStrokeWidth(mBorderWidth);
        mBorderPaint.setAntiAlias(true);
!!!36442679.java!!!	setBorderWidth(in borderWidth : float) : void
        final boolean changed = mBorderPaint.getStrokeWidth() != borderWidth;
        mBorderPaint.setStrokeWidth(borderWidth);
        mBorderWidth = borderWidth;

        if (changed) {
            invalidateSelf();
        }
!!!36442807.java!!!	setBorderColor(in color : int) : void
        final boolean changed = mBorderPaint.getColor() != color;
        mBorderPaint.setColor(color);

        if (changed) {
            invalidateSelf();
        }
!!!36442935.java!!!	onDrawBitmap(in canvas : Canvas, in src : Rect, in dst : Rect) : void
        onDrawCircularBitmap(getBitmap().bmp, canvas, src, dst, 1f);
!!!36443063.java!!!	onDrawPlaceholderOrProgress(in canvas : Canvas, in drawable : TileDrawable) : void
        Rect bounds = getBounds();
        if (drawable.getInnerDrawable() instanceof BitmapDrawable) {
            BitmapDrawable placeholder =
                (BitmapDrawable) drawable.getInnerDrawable();
            Bitmap bitmap = placeholder.getBitmap();
            float alpha = placeholder.getPaint().getAlpha() / 255f;
            mRect.set(0, 0, bitmap.getWidth(), bitmap.getHeight());
            onDrawCircularBitmap(bitmap, canvas, mRect, bounds, alpha);
        } else {
          super.onDrawPlaceholderOrProgress(canvas, drawable);
        }

        // Then draw the border.
        canvas.drawCircle(bounds.centerX(), bounds.centerY(),
                bounds.width() / 2f - mBorderWidth / 2, mBorderPaint);
!!!36443191.java!!!	onDrawCircularBitmap(in bitmap : Bitmap, in canvas : Canvas, in src : Rect, in dst : Rect) : void
        onDrawCircularBitmap(bitmap, canvas, src, dst, 1f);
!!!36443319.java!!!	onDrawCircularBitmap(in bitmap : Bitmap, in canvas : Canvas, in src : Rect, in dst : Rect, in alpha : float) : void
        // Draw bitmap through shader first.
        BitmapShader shader = (BitmapShader) mBitmapPaint.getShader();
        if (shader == null || mShaderBitmap != bitmap) {
          shader = new BitmapShader(bitmap, TileMode.CLAMP, TileMode.CLAMP);
          mShaderBitmap = bitmap;
        }

        mMatrix.reset();
        // Fit bitmap to bounds.
        float scale = Math.max((float) dst.width() / src.width(),
                (float) dst.height() / src.height());
        mMatrix.postScale(scale, scale);
        // Translate bitmap to dst bounds.
        mMatrix.postTranslate(dst.left, dst.top);
        shader.setLocalMatrix(mMatrix);
        mBitmapPaint.setShader(shader);

        int oldAlpha = mBitmapPaint.getAlpha();
        mBitmapPaint.setAlpha((int) (oldAlpha * alpha));
        canvas.drawCircle(dst.centerX(), dst.centerY(), dst.width() / 2,
                mBitmapPaint);
        mBitmapPaint.setAlpha(oldAlpha);

        // Then draw the border.
        canvas.drawCircle(dst.centerX(), dst.centerY(),
                dst.width() / 2f - mBorderWidth / 2, mBorderPaint);
!!!36443447.java!!!	setAlpha(in alpha : int) : void
        super.setAlpha(alpha);

        final int old = mBitmapPaint.getAlpha();
        mBitmapPaint.setAlpha(alpha);
        if (alpha != old) {
            invalidateSelf();
        }
!!!36443575.java!!!	setColorFilter(inout cf : ColorFilter) : void
        super.setColorFilter(cf);
        mPaint.setColorFilter(cf);
