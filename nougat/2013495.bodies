class Placeholder
!!!36441015.java!!!	Placeholder(inout placeholder : Drawable, inout res : Resources, in placeholderWidth : int, in placeholderHeight : int, in fadeOutDurationMs : int, inout opts : ExtendedBitmapDrawable::ExtendedOptions)
            super(placeholder, placeholderWidth, placeholderHeight, fadeOutDurationMs, opts);

            if (opts.placeholderAnimationDuration == -1) {
                mPulseAnimator = null;
            } else {
                final long pulseDuration;
                if (opts.placeholderAnimationDuration == 0) {
                    pulseDuration = res.getInteger(R.integer.bitmap_placeholder_animation_duration);
                } else {
                    pulseDuration = opts.placeholderAnimationDuration;
                }
                mPulseAnimator = ValueAnimator.ofInt(55, 255).setDuration(pulseDuration);
                mPulseAnimator.setRepeatCount(ValueAnimator.INFINITE);
                mPulseAnimator.setRepeatMode(ValueAnimator.REVERSE);
                mPulseAnimator.addUpdateListener(new AnimatorUpdateListener() {
                    @Override
                    public void onAnimationUpdate(ValueAnimator animation) {
                        mPulseAlphaFraction = ((Integer) animation.getAnimatedValue()) / 255f;
                        setInnerAlpha(getCurrentAlpha());
                    }
                });
            }
            mFadeOutAnimator.addListener(new AnimatorListenerAdapter() {
                @Override
                public void onAnimationEnd(Animator animation) {
                    stopPulsing();
                }
            });
!!!36441143.java!!!	setInnerAlpha(in alpha : int) : void
            super.setInnerAlpha((int) (alpha * mPulseAlphaFraction));
!!!36441271.java!!!	setPulseEnabled(inout enabled : boolean) : void
            mPulseEnabled = enabled;
            if (!mPulseEnabled) {
                stopPulsing();
            } else {
                startPulsing();
            }
!!!36441399.java!!!	stopPulsing() : void
            if (mPulseAnimator != null) {
                mPulseAnimator.cancel();
                mPulseAlphaFraction = 1f;
                setInnerAlpha(getCurrentAlpha());
            }
!!!36441527.java!!!	startPulsing() : void
            if (mPulseAnimator != null && !mPulseAnimator.isStarted()) {
                mPulseAnimator.start();
            }
!!!36441655.java!!!	setVisible(inout visible : boolean) : boolean
            final boolean changed = super.setVisible(visible);
            if (changed) {
                if (isVisible()) {
                    // start
                    if (mPulseAnimator != null && mPulseEnabled && !mPulseAnimator.isStarted()) {
                        mPulseAnimator.start();
                    }
                } else {
                    // can't cancel the pulsing yet-- wait for the fade-out animation to end
                    // one exception: if alpha is already zero, there is no fade-out, so stop now
                    if (getCurrentAlpha() == 0) {
                        stopPulsing();
                    }
                }
            }
            return changed;
