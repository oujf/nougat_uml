class BluetoothMapBmessageBuilder
!!!36451511.java!!!	BluetoothMapBmessageBuilder()
        mBmsg = new StringBuilder();
!!!36451639.java!!!	createBmessage(inout bmsg : BluetoothMapBmessage) : String
        BluetoothMapBmessageBuilder b = new BluetoothMapBmessageBuilder();

        b.build(bmsg);

        return b.mBmsg.toString();
!!!36451767.java!!!	build(inout bmsg : BluetoothMapBmessage) : void
        int bodyLen = MSG_BEGIN.length() + MSG_END.length() + 3 * CRLF.length()
                + bmsg.mMessage.getBytes().length;

        mBmsg.append(BMSG_BEGIN).append(CRLF);

        mBmsg.append(BMSG_VERSION).append(CRLF);
        mBmsg.append(BMSG_STATUS).append(bmsg.mBmsgStatus).append(CRLF);
        mBmsg.append(BMSG_TYPE).append(bmsg.mBmsgType).append(CRLF);
        mBmsg.append(BMSG_FOLDER).append(bmsg.mBmsgFolder).append(CRLF);

        for (VCardEntry vcard : bmsg.mOriginators) {
            buildVcard(vcard);
        }

        {
            mBmsg.append(BENV_BEGIN).append(CRLF);

            for (VCardEntry vcard : bmsg.mRecipients) {
                buildVcard(vcard);
            }

            {
                mBmsg.append(BBODY_BEGIN).append(CRLF);

                if (bmsg.mBbodyEncoding != null) {
                    mBmsg.append(BBODY_ENCODING).append(bmsg.mBbodyEncoding).append(CRLF);
                }

                if (bmsg.mBbodyCharset != null) {
                    mBmsg.append(BBODY_CHARSET).append(bmsg.mBbodyCharset).append(CRLF);
                }

                if (bmsg.mBbodyLanguage != null) {
                    mBmsg.append(BBODY_LANGUAGE).append(bmsg.mBbodyLanguage).append(CRLF);
                }

                mBmsg.append(BBODY_LENGTH).append(bodyLen).append(CRLF);

                {
                    mBmsg.append(MSG_BEGIN).append(CRLF);

                    mBmsg.append(bmsg.mMessage).append(CRLF);

                    mBmsg.append(MSG_END).append(CRLF);
                }

                mBmsg.append(BBODY_END).append(CRLF);
            }

            mBmsg.append(BENV_END).append(CRLF);
        }

        mBmsg.append(BMSG_END).append(CRLF);
!!!36451895.java!!!	buildVcard(inout vcard : VCardEntry) : void
        String n = buildVcardN(vcard);
        List<PhoneData> tel = vcard.getPhoneList();
        List<EmailData> email = vcard.getEmailList();

        mBmsg.append(VCARD_BEGIN).append(CRLF);

        mBmsg.append(VCARD_VERSION).append(CRLF);

        mBmsg.append(VCARD_N).append(n).append(CRLF);

        if (tel != null && tel.size() > 0) {
            mBmsg.append(VCARD_TEL).append(tel.get(0).getNumber()).append(CRLF);
        }

        if (email != null && email.size() > 0) {
            mBmsg.append(VCARD_EMAIL).append(email.get(0).getAddress()).append(CRLF);
        }

        mBmsg.append(VCARD_END).append(CRLF);
!!!36452023.java!!!	buildVcardN(inout vcard : VCardEntry) : String
        NameData nd = vcard.getNameData();
        StringBuilder sb = new StringBuilder();

        sb.append(nd.getFamily()).append(";");
        sb.append(nd.getGiven() == null ? "" : nd.getGiven()).append(";");
        sb.append(nd.getMiddle() == null ? "" : nd.getMiddle()).append(";");
        sb.append(nd.getPrefix() == null ? "" : nd.getPrefix()).append(";");
        sb.append(nd.getSuffix() == null ? "" : nd.getSuffix());

        return sb.toString();
