class BluetoothMapMessage
!!!36455991.java!!!	BluetoothMapMessage(inout attrs : HashMap<String, String>)
        int size;

        try {
            /* just to validate */
            new BigInteger(attrs.get("handle"), 16);

            mHandle = attrs.get("handle");
        } catch (NumberFormatException e) {
            /*
             * handle MUST have proper value, if it does not then throw
             * something here
             */
            throw new IllegalArgumentException(e);
        }

        mSubject = attrs.get("subject");
        String dateTime = attrs.get("datetime");
        //Handle possible NPE when not able to retreive datetime attribute
        if(dateTime != null){
            mDateTime = (new ObexTime(dateTime)).getTime();
        } else {
            mDateTime = null;
        }


        mSenderName = attrs.get("sender_name");

        mSenderAddressing = attrs.get("sender_addressing");

        mReplytoAddressing = attrs.get("replyto_addressing");

        mRecipientName = attrs.get("recipient_name");

        mRecipientAddressing = attrs.get("recipient_addressing");

        mType = strToType(attrs.get("type"));

        try {
            size = Integer.parseInt(attrs.get("size"));
        } catch (NumberFormatException e) {
            size = 0;
        }

        mSize = size;

        mText = yesnoToBoolean(attrs.get("text"));

        mReceptionStatus = strToReceptionStatus(attrs.get("reception_status"));

        try {
            size = Integer.parseInt(attrs.get("attachment_size"));
        } catch (NumberFormatException e) {
            size = 0;
        }

        mAttachmentSize = size;

        mPriority = yesnoToBoolean(attrs.get("priority"));

        mRead = yesnoToBoolean(attrs.get("read"));

        mSent = yesnoToBoolean(attrs.get("sent"));

        mProtected = yesnoToBoolean(attrs.get("protected"));
!!!36456119.java!!!	yesnoToBoolean(inout yesno : String) : boolean
        return "yes".equals(yesno);
!!!36456247.java!!!	strToType(inout s : String) : BluetoothMapMessage::Type
        if ("EMAIL".equals(s)) {
            return Type.EMAIL;
        } else if ("SMS_GSM".equals(s)) {
            return Type.SMS_GSM;
        } else if ("SMS_CDMA".equals(s)) {
            return Type.SMS_CDMA;
        } else if ("MMS".equals(s)) {
            return Type.MMS;
        }

        return Type.UNKNOWN;
!!!36456375.java!!!	strToReceptionStatus(inout s : String) : BluetoothMapMessage::ReceptionStatus
        if ("complete".equals(s)) {
            return ReceptionStatus.COMPLETE;
        } else if ("fractioned".equals(s)) {
            return ReceptionStatus.FRACTIONED;
        } else if ("notification".equals(s)) {
            return ReceptionStatus.NOTIFICATION;
        }

        return ReceptionStatus.UNKNOWN;
!!!36456503.java!!!	toString() : String
        JSONObject json = new JSONObject();

        try {
            json.put("handle", mHandle);
            json.put("subject", mSubject);
            json.put("datetime", mDateTime);
            json.put("sender_name", mSenderName);
            json.put("sender_addressing", mSenderAddressing);
            json.put("replyto_addressing", mReplytoAddressing);
            json.put("recipient_name", mRecipientName);
            json.put("recipient_addressing", mRecipientAddressing);
            json.put("type", mType);
            json.put("size", mSize);
            json.put("text", mText);
            json.put("reception_status", mReceptionStatus);
            json.put("attachment_size", mAttachmentSize);
            json.put("priority", mPriority);
            json.put("read", mRead);
            json.put("sent", mSent);
            json.put("protected", mProtected);
        } catch (JSONException e) {
            // do nothing
        }

        return json.toString();
!!!36456631.java!!!	getHandle() : String
        return mHandle;
!!!36456759.java!!!	getSubject() : String
        return mSubject;
!!!36456887.java!!!	getDateTime() : Date
        return mDateTime;
!!!36457015.java!!!	getSenderName() : String
        return mSenderName;
!!!36457143.java!!!	getSenderAddressing() : String
        return mSenderAddressing;
!!!36457271.java!!!	getReplytoAddressing() : String
        return mReplytoAddressing;
!!!36457399.java!!!	getRecipientName() : String
        return mRecipientName;
!!!36457527.java!!!	getRecipientAddressing() : String
        return mRecipientAddressing;
!!!36457655.java!!!	getType() : BluetoothMapMessage::Type
        return mType;
!!!36457783.java!!!	getSize() : int
        return mSize;
!!!36457911.java!!!	getReceptionStatus() : BluetoothMapMessage::ReceptionStatus
        return mReceptionStatus;
!!!36458039.java!!!	getAttachmentSize() : int
        return mAttachmentSize;
!!!36458167.java!!!	isText() : boolean
        return mText;
!!!36458295.java!!!	isPriority() : boolean
        return mPriority;
!!!36458423.java!!!	isRead() : boolean
        return mRead;
!!!36458551.java!!!	isSent() : boolean
        return mSent;
!!!36458679.java!!!	isProtected() : boolean
        return mProtected;
