class BluetoothMasObexClientSession
!!!36466615.java!!!	BluetoothMasObexClientSession(inout transport : ObexTransport, inout handler : Handler)
        mTransport = transport;
        mSessionHandler = handler;
!!!36466743.java!!!	start() : void
        if (DBG) Log.d(TAG, "start called.");
        if (mConnected) {
            if (DBG) Log.d(TAG, "Already connected, nothing to do.");
            return;
        }

        // Start a thread to handle messages here.
        mThread = new HandlerThread("BluetoothMasObexClientSessionThread");
        mThread.start();
        mHandler = new ObexClientHandler(mThread.getLooper(), this);

        // Connect it to the target device via OBEX.
        mHandler.obtainMessage(CONNECT).sendToTarget();
!!!36466871.java!!!	makeRequest(inout request : BluetoothMasRequest) : boolean
        if (DBG) Log.d(TAG, "makeRequest called with: " + request);

        boolean status = mHandler.sendMessage(mHandler.obtainMessage(REQUEST, request));
        if (!status) {
            Log.e(TAG, "Adding messages failed, state: " + mConnected);
            return false;
        }
        return true;
!!!36466999.java!!!	stop() : void
        if (DBG) Log.d(TAG, "stop called...");

        mThread.quit();
        disconnect();
!!!36467127.java!!!	connect() : void
        try {
            mSession = new ClientSession(mTransport);

            HeaderSet headerset = new HeaderSet();
            headerset.setHeader(HeaderSet.TARGET, MAS_TARGET);

            headerset = mSession.connect(headerset);

            if (headerset.getResponseCode() == ResponseCodes.OBEX_HTTP_OK) {
                mConnected = true;
                mSessionHandler.obtainMessage(MSG_OBEX_CONNECTED).sendToTarget();
            } else {
                disconnect();
            }
        } catch (IOException e) {
            disconnect();
        }
!!!36467255.java!!!	disconnect() : void
        if (mSession != null) {
            try {
                mSession.disconnect(null);
            } catch (IOException e) {
            }

            try {
                mSession.close();
            } catch (IOException e) {
            }
        }

        mConnected = false;
        mSessionHandler.obtainMessage(MSG_OBEX_DISCONNECTED).sendToTarget();
!!!36467383.java!!!	executeRequest(inout request : BluetoothMasRequest) : void
        try {
            request.execute(mSession);
            mSessionHandler.obtainMessage(MSG_REQUEST_COMPLETED, request).sendToTarget();
        } catch (IOException e) {
            if (DBG) Log.d(TAG, "Request failed: " + request);

            // Disconnect to cleanup.
            disconnect();
        }
!!!36467511.java!!!	connected() : boolean
        return mConnected;
