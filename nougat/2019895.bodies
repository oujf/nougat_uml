class SocketAcceptThread
!!!36474679.java!!!	run() : void

            if (mServerSocket != null) {
                Log.w(TAG, "Socket already created, exiting");
                return;
            }

            try {
                BluetoothAdapter adapter = BluetoothAdapter.getDefaultAdapter();
                mServerSocket = adapter.listenUsingEncryptedRfcommWithServiceRecord(
                        "MAP Message Notification Service", MAP_MNS.getUuid());
            } catch (IOException e) {
                mInterrupted = true;
                Log.e(TAG, "I/O exception when trying to create server socket", e);
            }

            while (!mInterrupted) {
                try {
                    Log.v(TAG, "waiting to accept connection...");

                    BluetoothSocket sock = mServerSocket.accept();

                    Log.v(TAG, "new incoming connection from "
                            + sock.getRemoteDevice().getName());

                    // session will live until closed by remote
                    BluetoothMnsObexServer srv = new BluetoothMnsObexServer(mSessionHandler);
                    BluetoothMapRfcommTransport transport = new BluetoothMapRfcommTransport(
                            sock);
                    new ServerSession(transport, srv, null);
                } catch (IOException ex) {
                    Log.v(TAG, "I/O exception when waiting to accept (aborted?)");
                    mInterrupted = true;
                }
            }

            if (mServerSocket != null) {
                try {
                    mServerSocket.close();
                } catch (IOException e) {
                    // do nothing
                }

                mServerSocket = null;
            }
