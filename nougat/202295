format 76
"obex" // nougat_src::frameworks::base::opengl::java::javax::obex
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/obex/javax/obex/"
  java_package "javax.obex"
  classview 193975 "obex"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1156919 "ApplicationParameter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      attribute 3677495 "mArray"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3677623 "mLength"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3677751 "mMaxLength"
	private explicit_type "int"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 1157047 "TRIPLET_TAGID"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 3677879 "ORDER_TAGID"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 0x01"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3678007 "SEARCH_VALUE_TAGID"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 0x02"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3678135 "SEARCH_ATTRIBUTE_TAGID"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 0x03"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3678263 "MAXLISTCOUNT_TAGID"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 0x04"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " if equals to \"0\", PSE only reply number of contacts"
	end

	attribute 3678391 "LISTSTARTOFFSET_TAGID"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 0x05"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3678519 "FILTER_TAGID"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 0x06"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3678647 "FORMAT_TAGID"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 0x07"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3678775 "PHONEBOOKSIZE_TAGID"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 0x08"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " only used if max list count = 0"
	end

	attribute 3678903 "NEWMISSEDCALLS_TAGID"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 0x09"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " only used in \"mch\" in response"
	end
      end

      class 1157175 "TRIPLET_VALUE"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	class 1157303 "ORDER"
	  visibility public 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 3679031 "ORDER_BY_INDEX"
	    class_attribute const_attribute public explicit_type "byte"
	    init_value " 0x00"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 3679159 "ORDER_BY_ALPHANUMERIC"
	    class_attribute const_attribute public explicit_type "byte"
	    init_value " 0x01"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 3679287 "ORDER_BY_PHONETIC"
	    class_attribute const_attribute public explicit_type "byte"
	    init_value " 0x02"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end

	class 1157431 "SEARCHATTRIBUTE"
	  visibility public 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 3679415 "SEARCH_BY_NAME"
	    class_attribute const_attribute public explicit_type "byte"
	    init_value " 0x00"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 3679543 "SEARCH_BY_NUMBER"
	    class_attribute const_attribute public explicit_type "byte"
	    init_value " 0x01"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 3679671 "SEARCH_BY_SOUND"
	    class_attribute const_attribute public explicit_type "byte"
	    init_value " 0x02"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end

	class 1157559 "FORMAT"
	  visibility public 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 3679799 "VCARD_VERSION_21"
	    class_attribute const_attribute public explicit_type "byte"
	    init_value " 0x00"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 3679927 "VCARD_VERSION_30"
	    class_attribute const_attribute public explicit_type "byte"
	    init_value " 0x01"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end
      end

      class 1157687 "TRIPLET_LENGTH"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 3680055 "ORDER_LENGTH"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3680183 "SEARCH_ATTRIBUTE_LENGTH"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3680311 "MAXLISTCOUNT_LENGTH"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3680439 "LISTSTARTOFFSET_LENGTH"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3680567 "FILTER_LENGTH"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 8"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3680695 "FORMAT_LENGTH"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3680823 "PHONEBOOKSIZE_LENGTH"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 3680951 "NEWMISSEDCALLS_LENGTH"
	  class_attribute const_attribute public explicit_type "byte"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 29194807 "ApplicationParameter"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29194935 "addAPPHeader"
	public explicit_return_type "void"
	nparams 3
	  param in name "tag" explicit_type "byte"
	  param in name "len" explicit_type "byte"
	  param inout name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29195063 "getAPPparam"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1157815 "Authenticator"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface provides a way to respond to authentication challenge and
authentication response headers. When a client or server receives an
authentication challenge or authentication response header, the
<code>onAuthenticationChallenge()</code> or
<code>onAuthenticationResponse()</code> will be called, respectively, by the
implementation.
<P>
For more information on how the authentication procedure works in OBEX,
please review the IrOBEX specification at <A
HREF=\"http://www.irda.org\">http://www.irda.org</A>.
<P>
<STRONG>Authentication Challenges</STRONG>
<P>
When a client or server receives an authentication challenge header, the
<code>onAuthenticationChallenge()</code> method will be invoked by the OBEX
API implementation. The application will then return the user name (if
needed) and password via a <code>PasswordAuthentication</code> object. The
password in this object is not sent in the authentication response. Instead,
the 16-byte challenge received in the authentication challenge is combined
with the password returned from the <code>onAuthenticationChallenge()</code>
method and passed through the MD5 hash algorithm. The resulting value is sent
in the authentication response along with the user name if it was provided.
<P>
<STRONG>Authentication Responses</STRONG>
<P>
When a client or server receives an authentication response header, the
<code>onAuthenticationResponse()</code> method is invoked by the API
implementation with the user name received in the authentication response
header. (The user name will be <code>null</code> if no user name was provided
in the authentication response header.) The application must determine the
correct password. This value should be returned from the
<code>onAuthenticationResponse()</code> method. If the authentication request
should fail without the implementation checking the password,
<code>null</code> should be returned by the application. (This is needed for
reasons like not recognizing the user name, etc.) If the returned value is
not <code>null</code>, the OBEX API implementation will combine the password
returned from the <code>onAuthenticationResponse()</code> method and
challenge sent via the authentication challenge, apply the MD5 hash
algorithm, and compare the result to the response hash received in the
authentication response header. If the values are not equal, an
<code>IOException</code> will be thrown if the client requested
authentication. If the server requested authentication, the
<code>onAuthenticationFailure()</code> method will be called on the
<code>ServerRequestHandler</code> that failed authentication. The connection
is <B>not</B> closed if authentication failed.
@hide"
      operation 29195191 "onAuthenticationChallenge"
	public return_type class_ref 1157943 // PasswordAuthentication
	nparams 3
	  param inout name "description" type class_ref 129591 // String
	  param inout name "isUserIdRequired" explicit_type "boolean"
	  param inout name "isFullAccess" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a client or a server receives an authentication challenge
header. It should respond to the challenge with a
<code>PasswordAuthentication</code> that contains the correct user name
and password for the challenge.
@param description the description of which user name and password should
       be used; if no description is provided in the authentication
       challenge or the description is encoded in an encoding scheme that
       is not supported, an empty string will be provided
@param isUserIdRequired <code>true</code> if the user ID is required;
       <code>false</code> if the user ID is not required
@param isFullAccess <code>true</code> if full access to the server will
       be granted; <code>false</code> if read only access will be granted
@return a <code>PasswordAuthentication</code> object containing the user
        name and password used for authentication"
      end

      operation 29195319 "onAuthenticationResponse"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "userName" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a client or server receives an authentication response
header. This method will provide the user name and expect the correct
password to be returned.
@param userName the user name provided in the authentication response; may
       be <code>null</code>
@return the correct password for the user name provided; if
        <code>null</code> is returned then the authentication request
        failed"
      end
    end

    class 1157943 "PasswordAuthentication"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class holds user name and password combinations.
@hide"
      attribute 3693495 "mUserName"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3693623 "mPassword"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 29208375 "PasswordAuthentication"
	public explicit_return_type ""
	nparams 2
	  param in name "userName" explicit_type "byte"
	  param in name "password" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0}[] ${p0}, final ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new <code>PasswordAuthentication</code> with the user name and
password provided.
@param userName the user name to include; this may be <code>null</code>
@param password the password to include in the response
@throws NullPointerException if <code>password</code> is
        <code>null</code>"
      end

      operation 29208503 "getUserName"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the user name that was specified in the constructor. The user
name may be <code>null</code>.
@return the user name"
      end

      operation 29208631 "getPassword"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the password.
@return the password"
      end
    end

    class 1158071 "BaseStream"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface defines the methods needed by a parent that uses the
PrivateInputStream and PrivateOutputStream objects defined in this package.
@hide"
      operation 29195447 "ensureOpen"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that this object is still open.
@throws IOException if the object is closed"
      end

      operation 29195575 "ensureNotDone"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that additional information may be sent. In other words, the
operation is not done.
@throws IOException if the operation is completed"
      end

      operation 29195703 "continueOperation"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "sendEmpty" explicit_type "boolean"
	  param inout name "inStream" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Continues the operation since there is no data to read.
@param sendEmpty <code>true</code> if the operation should send an empty
       packet or not send anything if there is no data to send
@param inStream <code>true</code> if the stream is input stream or is
       output stream
@return <code>true</code> if the operation was completed;
        <code>false</code> if no operation took place
@throws IOException if an IO error occurs"
      end

      operation 29195831 "streamClosed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inStream" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the output or input stream is closed.
@param inStream <code>true</code> if the input stream is closed;
       <code>false</code> if the output stream is closed
@throws IOException if an IO error occurs"
      end
    end

    class 1158199 "ClientOperation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements the <code>Operation</code> interface. It will read and
write data via puts and gets.
@hide"
      classrelation 3363511 // <realization>
	relation 3363511 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3363511 // <realization>
	  b parent class_ref 1158327 // Operation
      end

      classrelation 3363639 // <realization>
	relation 3363639 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3363639 // <realization>
	  b parent class_ref 1158071 // BaseStream
      end

      classrelation 3363767 // TAG (<unidirectional association>)
	relation 3363767 --->
	  a role_name "TAG" init_value " \"ClientOperation\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3363767 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3681079 "V"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " ObexHelper.VDBG"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3363895 // mParent (<unidirectional association>)
	relation 3363895 --->
	  a role_name "mParent" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3363895 // mParent (<unidirectional association>)
	  b parent class_ref 1158583 // ClientSession
      end

      attribute 3681207 "mInputOpen"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3364023 // mPrivateInput (<unidirectional association>)
	relation 3364023 --->
	  a role_name "mPrivateInput" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3364023 // mPrivateInput (<unidirectional association>)
	  b parent class_ref 1158711 // PrivateInputStream
      end

      attribute 3681335 "mPrivateInputOpen"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3364151 // mPrivateOutput (<unidirectional association>)
	relation 3364151 --->
	  a role_name "mPrivateOutput" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3364151 // mPrivateOutput (<unidirectional association>)
	  b parent class_ref 1158839 // PrivateOutputStream
      end

      attribute 3681463 "mPrivateOutputOpen"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3364279 // mExceptionMessage (<unidirectional association>)
	relation 3364279 --->
	  a role_name "mExceptionMessage" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3364279 // mExceptionMessage (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3681591 "mMaxPacketSize"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3681719 "mOperationDone"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3681847 "mGetOperation"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3681975 "mGetFinalFlag"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3364407 // mRequestHeader (<unidirectional association>)
	relation 3364407 --->
	  a role_name "mRequestHeader" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3364407 // mRequestHeader (<unidirectional association>)
	  b parent class_ref 1158455 // HeaderSet
      end

      classrelation 3364535 // mReplyHeader (<unidirectional association>)
	relation 3364535 --->
	  a role_name "mReplyHeader" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3364535 // mReplyHeader (<unidirectional association>)
	  b parent class_ref 1158455 // HeaderSet
      end

      attribute 3682103 "mEndOfBodySent"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3682231 "mSendBodyHeader"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3682359 "mSrmActive"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A latch - when triggered, there is not way back ;-)"
      end

      attribute 3682487 "mSrmEnabled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Assume SRM disabled - until support is confirmed
 by the server"
      end

      attribute 3682615 "mSrmWaitingForRemote"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " keep waiting until final-bit is received in request
 to handle the case where the SRM enable header is in
 a different OBEX packet than the SRMP header."
      end

      operation 29197879 "ClientOperation"
	public explicit_return_type ""
	nparams 4
	  param in name "maxSize" explicit_type "int"
	  param inout name "p" type class_ref 1158583 // ClientSession
	  param inout name "header" type class_ref 1158455 // HeaderSet
	  param inout name "type" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates new OperationImpl to read and write data to a server
@param maxSize the maximum packet size
@param p the parent to this object
@param type <code>true</code> if this is a get request;
       <code>false</code. if this is a put request
@param header the header to set in the initial request
@throws IOException if the an IO error occurred"
      end

      operation 29198007 "setGetFinalFlag"
	public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows to set flag which will force GET to be always sent as single packet request with
final flag set. This is to improve compatibility with some profiles, i.e. PBAP which
require requests to be sent this way."
      end

      operation 29198135 "abort"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an ABORT message to the server. By calling this method, the
corresponding input and output streams will be closed along with this
object.
@throws IOException if the transaction has already ended or if an OBEX
        server called this method"
      end

      operation 29198263 "getResponseCode"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the response code retrieved from the server. Response codes are
defined in the <code>ResponseCodes</code> interface.
@return the response code retrieved from the server
@throws IOException if an error occurred in the transport layer during
        the transaction; if this method is called on a
        <code>HeaderSet</code> object created by calling
        <code>createHeaderSet</code> in a <code>ClientSession</code>
        object"
      end

      operation 29198391 "getEncoding"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will always return <code>null</code>
@return <code>null</code>"
      end

      operation 29198519 "getType"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of content that the resource connected to is providing.
E.g. if the connection is via HTTP, then the value of the content-type
header field is returned.
@return the content type of the resource that the URL references, or
        <code>null</code> if not known"
      end

      operation 29198647 "getLength"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the content which is being provided. E.g. if the
connection is via HTTP, then the value of the content-length header field
is returned.
@return the content length of the resource that this connection's URL
        references, or -1 if the content length is not known"
      end

      operation 29198775 "openInputStream"
	public explicit_return_type "InputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open and return an input stream for a connection.
@return an input stream
@throws IOException if an I/O error occurs"
      end

      operation 29198903 "openDataInputStream"
	public explicit_return_type "DataInputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open and return a data input stream for a connection.
@return an input stream
@throws IOException if an I/O error occurs"
      end

      operation 29199031 "openOutputStream"
	public explicit_return_type "OutputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open and return an output stream for a connection.
@return an output stream
@throws IOException if an I/O error occurs"
      end

      operation 29199159 "getMaxPacketSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29199287 "getHeaderLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29199415 "openDataOutputStream"
	public explicit_return_type "DataOutputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open and return a data output stream for a connection.
@return an output stream
@throws IOException if an I/O error occurs"
      end

      operation 29199543 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the connection and ends the transaction
@throws IOException if the operation has already ended or is closed"
      end

      operation 29199671 "getReceivedHeader"
	public return_type class_ref 1158455 // HeaderSet
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the headers that have been received during the operation.
Modifying the object returned has no effect on the headers that are sent
or retrieved.
@return the headers received during this <code>Operation</code>
@throws IOException if this <code>Operation</code> has been closed"
      end

      operation 29199799 "sendHeaders"
	public explicit_return_type "void"
	nparams 1
	  param inout name "headers" type class_ref 1158455 // HeaderSet
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the headers that should be sent in the next OBEX message that
is sent.
@param headers the headers to send in the next message
@throws IOException if this <code>Operation</code> has been closed or the
        transaction has ended and no further messages will be exchanged
@throws IllegalArgumentException if <code>headers</code> was not created
        by a call to <code>ServerRequestHandler.createHeaderSet()</code>
@throws NullPointerException if <code>headers</code> is <code>null</code>"
      end

      operation 29199927 "ensureNotDone"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that additional information may be sent. In other words, the
operation is not done.
@throws IOException if the operation is completed"
      end

      operation 29200055 "ensureOpen"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that the connection is open and no exceptions should be thrown.
@throws IOException if an exception needs to be thrown"
      end

      operation 29200183 "validateConnection"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that the connection is open and the proper data has been read.
@throws IOException if an IO error occurs"
      end

      operation 29200311 "sendRequest"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "opCode" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a request to the client of the specified type.
This function will enable SRM and set SRM active if the server
response allows this.
@param opCode the request code to send to the client
@return <code>true</code> if there is more data to send;
        <code>false</code> if there is no more data to send
@throws IOException if an IO error occurs"
      end

      operation 29200439 "checkForSrm"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29200567 "startProcessing"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method starts the processing thread results. It will send the
initial request. If the response takes more then one packet, a thread
will be started to handle additional requests
@throws IOException if an IO error occurs"
      end

      operation 29200695 "continueOperation"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "sendEmpty" explicit_type "boolean"
	  param inout name "inStream" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Continues the operation since there is no data to read.
@param sendEmpty <code>true</code> if the operation should send an empty
       packet or not send anything if there is no data to send
@param inStream <code>true</code> if the stream is input stream or is
       output stream
@throws IOException if an IO error occurs"
      end

      operation 29200823 "streamClosed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inStream" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the output or input stream is closed.
@param inStream <code>true</code> if the input stream is closed;
       <code>false</code> if the output stream is closed
@throws IOException if an IO error occurs"
      end

      operation 29200951 "noBodyHeader"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1158327 "Operation"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>Operation</code> interface provides ways to manipulate a single
OBEX PUT or GET operation. The implementation of this interface sends OBEX
packets as they are built. If during the operation the peer in the operation
ends the operation, an <code>IOException</code> is thrown on the next read
from the input stream, write to the output stream, or call to
<code>sendHeaders()</code>.
<P>
<STRONG>Definition of methods inherited from <code>ContentConnection</code>
</STRONG>
<P>
<code>getEncoding()</code> will always return <code>null</code>. <BR>
<code>getLength()</code> will return the length specified by the OBEX Length
header or -1 if the OBEX Length header was not included. <BR>
<code>getType()</code> will return the value specified in the OBEX Type
header or <code>null</code> if the OBEX Type header was not included.<BR>
<P>
<STRONG>How Headers are Handled</STRONG>
<P>
As headers are received, they may be retrieved through the
<code>getReceivedHeaders()</code> method. If new headers are set during the
operation, the new headers will be sent during the next packet exchange.
<P>
<STRONG>PUT example</STRONG>
<P>
<PRE>
void putObjectViaOBEX(ClientSession conn, HeaderSet head, byte[] obj) throws IOException {
    // Include the length header
    head.setHeader(head.LENGTH, new Long(obj.length));
    // Initiate the PUT request
    Operation op = conn.put(head);
    // Open the output stream to put the object to it
    DataOutputStream out = op.openDataOutputStream();
    // Send the object to the server
    out.write(obj);
    // End the transaction
    out.close();
    op.close();
}
</PRE>
<P>
<STRONG>GET example</STRONG>
<P>
<PRE>
byte[] getObjectViaOBEX(ClientSession conn, HeaderSet head) throws IOException {
    // Send the initial GET request to the server
    Operation op = conn.get(head);
    // Retrieve the length of the object being sent back
    int length = op.getLength();
    // Create space for the object
    byte[] obj = new byte[length];
    // Get the object from the input stream
    DataInputStream in = trans.openDataInputStream();
    in.read(obj);
    // End the transaction
    in.close();
    op.close();
    return obj;
}
</PRE>

<H3>Client PUT Operation Flow</H3> For PUT operations, a call to
<code>close()</code> the <code>OutputStream</code> returned from
<code>openOutputStream()</code> or <code>openDataOutputStream()</code> will
signal that the request is done. (In OBEX terms, the End-Of-Body header
should be sent and the final bit in the request will be set.) At this point,
the reply from the server may begin to be processed. A call to
<code>getResponseCode()</code> will do an implicit close on the
<code>OutputStream</code> and therefore signal that the request is done.
<H3>Client GET Operation Flow</H3> For GET operation, a call to
<code>openInputStream()</code> or <code>openDataInputStream()</code> will
signal that the request is done. (In OBEX terms, the final bit in the request
will be set.) A call to <code>getResponseCode()</code> will cause an implicit
close on the <code>InputStream</code>. No further data may be read at this
point.
@hide"
      operation 29195959 "abort"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an ABORT message to the server. By calling this method, the
corresponding input and output streams will be closed along with this
object. No headers are sent in the abort request. This will end the
operation since <code>close()</code> will be called by this method.
@throws IOException if the transaction has already ended or if an OBEX
        server calls this method"
      end

      operation 29196087 "getReceivedHeader"
	public return_type class_ref 1158455 // HeaderSet
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the headers that have been received during the operation.
Modifying the object returned has no effect on the headers that are sent
or retrieved.
@return the headers received during this <code>Operation</code>
@throws IOException if this <code>Operation</code> has been closed"
      end

      operation 29196215 "sendHeaders"
	public explicit_return_type "void"
	nparams 1
	  param inout name "headers" type class_ref 1158455 // HeaderSet
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the headers that should be sent in the next OBEX message that
is sent.
@param headers the headers to send in the next message
@throws IOException if this <code>Operation</code> has been closed or the
        transaction has ended and no further messages will be exchanged
@throws IllegalArgumentException if <code>headers</code> was not created
        by a call to <code>ServerRequestHandler.createHeaderSet()</code>
        or <code>ClientSession.createHeaderSet()</code>
@throws NullPointerException if <code>headers</code> if <code>null</code>"
      end

      operation 29196343 "getResponseCode"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the response code received from the server. Response codes are
defined in the <code>ResponseCodes</code> class.
@see ResponseCodes
@return the response code retrieved from the server
@throws IOException if an error occurred in the transport layer during
        the transaction; if this object was created by an OBEX server"
      end

      operation 29196471 "getEncoding"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29196599 "getLength"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29196727 "getHeaderLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29196855 "getType"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29196983 "openInputStream"
	public explicit_return_type "InputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29197111 "openDataInputStream"
	public explicit_return_type "DataInputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29197239 "openOutputStream"
	public explicit_return_type "OutputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29197367 "openDataOutputStream"
	public explicit_return_type "DataOutputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29197495 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29197623 "getMaxPacketSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29197751 "noBodyHeader"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1158455 "HeaderSet"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements the javax.obex.HeaderSet interface for OBEX over
RFCOMM or OBEX over l2cap.
@hide"
      attribute 3684023 "COUNT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Count header. This allows the connection statement to
tell the server how many objects it plans to send or retrieve.
<P>
The value of <code>COUNT</code> is 0xC0 (192).
"
      end

      attribute 3684151 "NAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Name header. This specifies the name of the object.
<P>
The value of <code>NAME</code> is 0x01 (1).
"
      end

      attribute 3684279 "TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x42"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Type header. This allows a request to specify the
type of the object (e.g. text, html, binary, etc.).
<P>
The value of <code>TYPE</code> is 0x42 (66).
"
      end

      attribute 3684407 "LENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Length header. This is the length of the object in
bytes.
<P>
The value of <code>LENGTH</code> is 0xC3 (195).
"
      end

      attribute 3684535 "TIME_ISO_8601"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x44"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Time header using the ISO 8601 standards. This is the
preferred time header.
<P>
The value of <code>TIME_ISO_8601</code> is 0x44 (68).
"
      end

      attribute 3684663 "TIME_4_BYTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Time header using the 4 byte representation. This is
only included for backwards compatibility. It represents the number of
seconds since January 1, 1970.
<P>
The value of <code>TIME_4_BYTE</code> is 0xC4 (196).
"
      end

      attribute 3684791 "DESCRIPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x05"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Description header. This is a text description of the
object.
<P>
The value of <code>DESCRIPTION</code> is 0x05 (5).
"
      end

      attribute 3684919 "TARGET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x46"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Target header. This is the name of the service an
operation is targeted to.
<P>
The value of <code>TARGET</code> is 0x46 (70).
"
      end

      attribute 3685047 "HTTP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x47"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX HTTP header. This allows an HTTP 1.X header to be
included in a request or reply.
<P>
The value of <code>HTTP</code> is 0x47 (71).
"
      end

      attribute 3685175 "BODY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x48"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX BODY header.
<P>
The value of <code>BODY</code> is 0x48 (72).
"
      end

      attribute 3685303 "END_OF_BODY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x49"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX End of BODY header.
<P>
The value of <code>BODY</code> is 0x49 (73).
"
      end

      attribute 3685431 "WHO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4A"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Who header. Identifies the OBEX application to
determine if the two peers are talking to each other.
<P>
The value of <code>WHO</code> is 0x4A (74).
"
      end

      attribute 3685559 "CONNECTION_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xCB"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Connection ID header. Identifies used for OBEX
connection multiplexing.
<P>
The value of <code>CONNECTION_ID</code> is 0xCB (203).
"
      end

      attribute 3685687 "APPLICATION_PARAMETER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4C"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Application Parameter header. This header specifies
additional application request and response information.
<P>
The value of <code>APPLICATION_PARAMETER</code> is 0x4C (76).
"
      end

      attribute 3685815 "AUTH_CHALLENGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4D"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX authentication digest-challenge.
<P>
The value of <code>AUTH_CHALLENGE</code> is 0x4D (77).
"
      end

      attribute 3685943 "AUTH_RESPONSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4E"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX authentication digest-response.
<P>
The value of <code>AUTH_RESPONSE</code> is 0x4E (78).
"
      end

      attribute 3686071 "OBJECT_CLASS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4F"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Object Class header. This header specifies the OBEX
object class of the object.
<P>
The value of <code>OBJECT_CLASS</code> is 0x4F (79).
"
      end

      attribute 3686199 "SINGLE_RESPONSE_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x97"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Single Response Mode (SRM). This header is used
for Single response mode, introduced in OBEX 1.5.
<P>
The value of <code>SINGLE_RESPONSE_MODE</code> is 0x97 (151).
"
      end

      attribute 3686327 "SINGLE_RESPONSE_MODE_PARAMETER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x98"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Represents the OBEX Single Response Mode Parameters. This header is used
for Single response mode, introduced in OBEX 1.5.
<P>
The value of <code>SINGLE_RESPONSE_MODE_PARAMETER</code> is 0x98 (152).
"
      end

      attribute 3686455 "mCount"
	private explicit_type "Long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 4 byte unsigned integer"
      end

      classrelation 3365303 // mName (<unidirectional association>)
	relation 3365303 --->
	  a role_name "mName" private
	    comment " null terminated Unicode text string"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3365303 // mName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3686583 "mEmptyName"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3365431 // mType (<unidirectional association>)
	relation 3365431 --->
	  a role_name "mType" private
	    comment " null terminated ASCII text string"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3365431 // mType (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3686711 "mLength"
	private explicit_type "Long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 4 byte unsigend integer"
      end

      attribute 3686839 "mIsoTime"
	private explicit_type "Calendar"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " String of the form YYYYMMDDTHHMMSSZ"
      end

      attribute 3686967 "mByteTime"
	private explicit_type "Calendar"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 4 byte unsigned integer"
      end

      classrelation 3365559 // mDescription (<unidirectional association>)
	relation 3365559 --->
	  a role_name "mDescription" private
	    comment " null terminated Unicode text String"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3365559 // mDescription (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3687095 "mTarget"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " byte sequence"
      end

      attribute 3687223 "mHttpHeader"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " byte sequence"
      end

      attribute 3687351 "mWho"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " length prefixed byte sequence"
      end

      attribute 3687479 "mAppParam"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " byte sequence of the form tag length value"
      end

      attribute 3687607 "mObjectClass"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " byte sequence"
      end

      classrelation 3365687 // mUnicodeUserDefined (<unidirectional association>)
	relation 3365687 --->
	  a role_name "mUnicodeUserDefined" multiplicity "[]" private
	    comment " null terminated unicode string"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3365687 // mUnicodeUserDefined (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3687735 "mSequenceUserDefined"
	private explicit_type "byte"
	multiplicity "[][]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " byte sequence user defined"
      end

      attribute 3687863 "mByteUserDefined"
	private explicit_type "Byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 1 byte"
      end

      attribute 3687991 "mIntegerUserDefined"
	private explicit_type "Long"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 4 byte unsigned integer"
      end

      attribute 3688119 "mRandom"
	private explicit_type "SecureRandom"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3688247 "mSingleResponseMode"
	private explicit_type "Byte"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " byte to indicate enable/disable/support for SRM"
      end

      attribute 3688375 "mSrmParam"
	private explicit_type "Byte"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " byte representing the SRM parameters - only \"wait\""
      end

      attribute 3688503 "nonce"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " is supported by Bluetooth
package"
      end

      attribute 3688631 "mAuthChall"
	public explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The authentication challenge header"
      end

      attribute 3688759 "mAuthResp"
	public explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The authentication response header"
      end

      attribute 3688887 "mConnectionID"
	public explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " THe connection ID"
      end

      attribute 3689015 "responseCode"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 29203511 "HeaderSet"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates new <code>HeaderSet</code> object.
@param size the max packet size for this connection"
      end

      operation 29203639 "setEmptyNameHeader"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets flag for special \"value\" of NAME header which should be empty. This
is not the same as NAME header with empty string in which case it will
have length of 5 bytes. It should be 3 bytes with only header id and
length field."
      end

      operation 29203767 "getEmptyNameHeader"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets flag for special \"value\" of NAME header which should be empty. See
above."
      end

      operation 29203895 "setHeader"
	public explicit_return_type "void"
	nparams 2
	  param in name "headerID" explicit_type "int"
	  param inout name "headerValue" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of the header identifier to the value provided. The type
of object must correspond to the Java type defined in the description of
this interface. If <code>null</code> is passed as the
<code>headerValue</code> then the header will be removed from the set of
headers to include in the next request.
@param headerID the identifier to include in the message
@param headerValue the value of the header identifier
@throws IllegalArgumentException if the header identifier provided is not
        one defined in this interface or a user-defined header; if the
        type of <code>headerValue</code> is not the correct Java type as
        defined in the description of this interface\\"
      end

      operation 29204023 "getHeader"
	public return_type class_ref 132663 // Object
	nparams 1
	  param in name "headerID" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the value of the header identifier provided. The type of the
Object returned is defined in the description of this interface.
@param headerID the header identifier whose value is to be returned
@return the value of the header provided or <code>null</code> if the
        header identifier specified is not part of this
        <code>HeaderSet</code> object
@throws IllegalArgumentException if the <code>headerID</code> is not one
        defined in this interface or any of the user-defined headers
@throws IOException if an error occurred in the transport layer during
        the operation or if the connection has been closed"
      end

      operation 29204151 "getHeaderList"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the list of headers that may be retrieved via the
<code>getHeader</code> method that will not return <code>null</code>. In
other words, this method returns all the headers that are available in
this object.
@see #getHeader
@return the array of headers that are set in this object or
        <code>null</code> if no headers are available
@throws IOException if an error occurred in the transport layer during
        the operation or the connection has been closed"
      end

      operation 29204279 "createAuthenticationChallenge"
	public explicit_return_type "void"
	nparams 3
	  param inout name "realm" type class_ref 129591 // String
	  param inout name "userID" explicit_type "boolean"
	  param inout name "access" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the authentication challenge header. The <code>realm</code> will be
encoded based upon the default encoding scheme used by the implementation
to encode strings. Therefore, the encoding scheme used to encode the
<code>realm</code> is application dependent.
@param realm a short description that describes what password to use; if
       <code>null</code> no realm will be sent in the authentication
       challenge header
@param userID if <code>true</code>, a user ID is required in the reply;
       if <code>false</code>, no user ID is required
@param access if <code>true</code> then full access will be granted if
       successful; if <code>false</code> then read-only access will be
       granted if successful
@throws IOException"
      end

      operation 29204407 "getResponseCode"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the response code received from the server. Response codes are
defined in the <code>ResponseCodes</code> class.
@see ResponseCodes
@return the response code retrieved from the server
@throws IOException if an error occurred in the transport layer during
        the transaction; if this method is called on a
        <code>HeaderSet</code> object created by calling
        <code>createHeaderSet()</code> in a <code>ClientSession</code>
        object; if this object was created by an OBEX server"
      end
    end

    class 1158583 "ClientSession"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class in an implementation of the OBEX ClientSession.
@hide"
      classrelation 3364919 // <generalisation>
	relation 3364919 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3364919 // <generalisation>
	  b parent class_ref 1158967 // ObexSession
      end

      classrelation 3365047 // TAG (<unidirectional association>)
	relation 3365047 --->
	  a role_name "TAG" init_value " \"ClientSession\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3365047 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3682999 "mOpen"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3683127 "mObexConnected"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Determines if an OBEX layer connection has been established"
      end

      attribute 3683255 "mConnectionId"
	private explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3683383 "mMaxTxPacketSize"
	private explicit_type "int"
	init_value " ObexHelper.LOWER_LIMIT_MAX_PACKET_SIZE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The max Packet size must be at least 255 according to the OBEX
specification.
"
      end

      attribute 3683511 "mRequestActive"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3683639 "mInput"
	const_attribute private explicit_type "InputStream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3683767 "mOutput"
	const_attribute private explicit_type "OutputStream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3683895 "mLocalSrmSupported"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3365175 // mTransport (<unidirectional association>)
	relation 3365175 --->
	  a role_name "mTransport" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3365175 // mTransport (<unidirectional association>)
	  b parent class_ref 1159095 // ObexTransport
      end

      operation 29201335 "ClientSession"
	public explicit_return_type ""
	nparams 1
	  param in name "trans" type class_ref 1159095 // ObexTransport
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29201463 "ClientSession"
	public explicit_return_type ""
	nparams 2
	  param in name "trans" type class_ref 1159095 // ObexTransport
	  param in name "supportsSrm" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a ClientSession
@param trans The transport to use for OBEX transactions
@param supportsSrm True if Single Response Mode should be used e.g. if the
       supplied transport is a TCP or l2cap channel.
@throws IOException if it occurs while opening the transport streams."
      end

      operation 29201591 "connect"
	public return_type class_ref 1158455 // HeaderSet
	nparams 1
	  param in name "header" type class_ref 1158455 // HeaderSet
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29201719 "get"
	public return_type class_ref 1158327 // Operation
	nparams 1
	  param inout name "header" type class_ref 1158455 // HeaderSet
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29201847 "setConnectionID"
	public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "0xCB Connection Id an identifier used for OBEX connection multiplexing"
      end

      operation 29201975 "delete"
	public return_type class_ref 1158455 // HeaderSet
	nparams 1
	  param inout name "header" type class_ref 1158455 // HeaderSet
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29202103 "disconnect"
	public return_type class_ref 1158455 // HeaderSet
	nparams 1
	  param inout name "header" type class_ref 1158455 // HeaderSet
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29202231 "getConnectionID"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29202359 "put"
	public return_type class_ref 1158327 // Operation
	nparams 1
	  param inout name "header" type class_ref 1158455 // HeaderSet
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29202487 "setAuthenticator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "auth" type class_ref 1157815 // Authenticator
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29202615 "setPath"
	public return_type class_ref 1158455 // HeaderSet
	nparams 3
	  param inout name "header" type class_ref 1158455 // HeaderSet
	  param inout name "backup" explicit_type "boolean"
	  param inout name "create" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29202743 "ensureOpen"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that the connection is open.
@throws IOException if the connection is closed"
      end

      operation 29202871 "setRequestInactive"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set request inactive. Allows Put and get operation objects to tell this
object when they are done.

package"
      end

      operation 29202999 "setRequestActive"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set request to active.
@throws IOException if already active"
      end

      operation 29203127 "sendRequest"
	public explicit_return_type "boolean"
	nparams 5
	  param in name "opCode" explicit_type "int"
	  param inout name "head" explicit_type "byte"
	  param inout name "header" type class_ref 1158455 // HeaderSet
	  param inout name "privateInput" type class_ref 1158711 // PrivateInputStream
	  param inout name "srmActive" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a standard request to the client. It will then wait for the reply
and update the header set object provided. If any authentication headers
(i.e. authentication challenge or authentication response) are received,
they will be processed.
@param opCode the type of request to send to the client
@param head the headers to send to the client
@param header the header object to update with the response
@param privateInput the input stream used by the Operation object; null
       if this is called on a CONNECT, SETPATH or DISCONNECT
@return
       <code>true</code> if the operation completed successfully;
       <code>false</code> if an authentication response failed to pass
@throws IOException if an IO error occurs"
      end

      operation 29203255 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29203383 "isSrmSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1158711 "PrivateInputStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This object provides an input stream to the Operation objects used in this
package.
@hide"
      classrelation 3365943 // <generalisation>
	relation 3365943 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3365943 // <generalisation>
	  b parent class_ref 189751 // InputStream
      end

      classrelation 3366071 // mParent (<unidirectional association>)
	relation 3366071 --->
	  a role_name "mParent" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3366071 // mParent (<unidirectional association>)
	  b parent class_ref 1158071 // BaseStream
      end

      attribute 3693751 "mData"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3693879 "mIndex"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3694007 "mOpen"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 29208759 "PrivateInputStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "p" type class_ref 1158071 // BaseStream
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an input stream for the <code>Operation</code> to read from
@param p the connection this input stream is for"
      end

      operation 29208887 "available"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the number of bytes that can be read (or skipped over) from this
input stream without blocking by the next caller of a method for this
input stream. The next caller might be the same thread or or another
thread.
@return the number of bytes that can be read from this input stream
        without blocking
@throws IOException if an I/O error occurs"
      end

      operation 29209015 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Reads the next byte of data from the input stream. The value byte is
returned as an int in the range 0 to 255. If no byte is available because
the end of the stream has been reached, the value -1 is returned. This
method blocks until input data is available, the end of the stream is
detected, or an exception is thrown.
@return the byte read from the input stream or -1 if it reaches the end of
        stream
@throws IOException if an I/O error occurs"
      end

      operation 29209143 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "b" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 29209271 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 29209399 "writeBytes"
	public explicit_return_type "void"
	nparams 2
	  param inout name "body" explicit_type "byte"
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the <code>OperationImpl</code> thread to add body data to the
input stream.
@param body the data to add to the stream
@param start the start of the body to array to copy"
      end

      operation 29209527 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that this stream is open
@throws IOException if the stream is not open"
      end

      operation 29209655 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Closes the input stream. If the input stream is already closed, do
nothing.
@throws IOException this will never happen"
      end
    end

    class 1158839 "PrivateOutputStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This object provides an output stream to the Operation objects used in this
package.
@hide"
      classrelation 3366199 // <generalisation>
	relation 3366199 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3366199 // <generalisation>
	  b parent class_ref 417719 // OutputStream
      end

      classrelation 3366327 // mParent (<unidirectional association>)
	relation 3366327 --->
	  a role_name "mParent" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3366327 // mParent (<unidirectional association>)
	  b parent class_ref 1158071 // BaseStream
      end

      attribute 3694135 "mArray"
	private explicit_type "ByteArrayOutputStream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3694263 "mOpen"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3694391 "mMaxPacketSize"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 29209783 "PrivateOutputStream"
	public explicit_return_type ""
	nparams 2
	  param inout name "p" type class_ref 1158071 // BaseStream
	  param in name "maxSize" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty <code>PrivateOutputStream</code> to write to.
@param p the connection that this stream runs over"
      end

      operation 29209911 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines how many bytes have been written to the output stream.
@return the number of bytes written to the output stream"
      end

      operation 29210039 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Writes the specified byte to this output stream. The general contract for
write is that one byte is written to the output stream. The byte to be
written is the eight low-order bits of the argument b. The 24 high-order
bits of b are ignored.
@param b the byte to write
@throws IOException if an I/O error occurs"
      end

      operation 29210167 "write"
	public explicit_return_type "void"
	nparams 1
	  param inout name "buffer" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 29210295 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "buffer" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 29210423 "readBytes"
	public explicit_return_type "byte"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the bytes that have been written to this stream.
@param size the size of the array to return
@return the byte array that is written"
      end

      operation 29210551 "ensureOpen"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that this stream is open
@throws IOException if the stream is not open"
      end

      operation 29210679 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Closes the output stream. If the input stream is already closed, do
nothing.
@throws IOException this will never happen"
      end

      operation 29210807 "isClosed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the connection is closed
@return <code>true</code> if the connection is closed; <code>false</code>
        if the connection is open"
      end
    end

    class 1158967 "ObexSession"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>ObexSession</code> interface characterizes the term
\"OBEX Connection\" as defined in the IrDA Object Exchange Protocol v1.2, which
could be the server-side view of an OBEX connection, or the client-side view
of the same connection, which is established by server's accepting of a
client issued \"CONNECT\".
<P>
This interface serves as the common super class for
<CODE>ClientSession</CODE> and <CODE>ServerSession</CODE>.
@hide"
      classrelation 3364663 // TAG (<unidirectional association>)
	relation 3364663 --->
	  a role_name "TAG" init_value " \"ObexSession\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3364663 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3682743 "V"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " ObexHelper.VDBG"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3364791 // mAuthenticator (<unidirectional association>)
	relation 3364791 --->
	  a role_name "mAuthenticator" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3364791 // mAuthenticator (<unidirectional association>)
	  b parent class_ref 1157815 // Authenticator
      end

      attribute 3682871 "mChallengeDigest"
	protected explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 29201079 "handleAuthChall"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "header" type class_ref 1158455 // HeaderSet
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the server received an authentication challenge header. This
will cause the authenticator to handle the authentication challenge.
@param header the header with the authentication challenge
@return <code>true</code> if the last request should be resent;
        <code>false</code> if the last request should not be resent
@throws IOException"
      end

      operation 29201207 "handleAuthResp"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "authResp" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the server received an authentication response header. This
will cause the authenticator to handle the authentication response.
@param authResp the authentication response
@return <code>true</code> if the response passed; <code>false</code> if
        the response failed"
      end
    end

    class 1159095 "ObexTransport"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>ObexTransport</code> interface defines the underlying transport
connection which carries the OBEX protocol( such as TCP, RFCOMM device file
exposed by Bluetooth or USB in kernel, RFCOMM socket emulated in Android
platform, Irda). This interface provides an abstract layer to be used by the
<code>ObexConnection</code>. Each kind of medium shall have its own
implementation to wrap and follow the same interface.
<P>
See section 1.2.2 of IrDA Object Exchange Protocol specification.
<P>
Different kind of medium may have different construction - for example, the
RFCOMM device file medium may be constructed from a file descriptor or simply
a string while the TCP medium usually from a socket.
@hide"
      operation 29206839 "create"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29206967 "listen"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29207095 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29207223 "connect"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29207351 "disconnect"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29207479 "openInputStream"
	public explicit_return_type "InputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29207607 "openOutputStream"
	public explicit_return_type "OutputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29207735 "openDataInputStream"
	public explicit_return_type "DataInputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29207863 "openDataOutputStream"
	public explicit_return_type "DataOutputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29207991 "getMaxTransmitPacketSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Must return the maximum allowed OBEX packet that can be sent over
the transport. For L2CAP this will be the Max SDU reported by the
peer device.
The returned value will be used to set the outgoing OBEX packet
size. Therefore this value shall not change.
For RFCOMM or other transport types where the OBEX packets size
is unrelated to the transport packet size, return -1;
@return the maximum allowed OBEX packet that can be send over
        the transport. Or -1 in case of don't care."
      end

      operation 29208119 "getMaxReceivePacketSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Must return the maximum allowed OBEX packet that can be received over
the transport. For L2CAP this will be the Max SDU configured for the
L2CAP channel.
The returned value will be used to validate the incoming packet size
values.
For RFCOMM or other transport types where the OBEX packets size
is unrelated to the transport packet size, return -1;
@return the maximum allowed OBEX packet that can be send over
        the transport. Or -1 in case of don't care."
      end

      operation 29208247 "isSrmSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shall return true if the transport in use supports SRM.
@return
       <code>true</code> if SRM operation is supported, and is to be enabled.
       <code>false</code> if SRM operations are not supported, or should not be used."
      end
    end

    class 1159223 "ObexHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class defines a set of helper methods for the implementation of Obex.
@hide"
      classrelation 3365815 // TAG (<unidirectional association>)
	relation 3365815 --->
	  a role_name "TAG" init_value " \"ObexHelper\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3365815 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3689143 "VDBG"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3689271 "BASE_PACKET_LENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the basic packet length used by OBEX. Every OBEX packet has the
same basic format:<BR>
Byte 0: Request or Response Code Byte 1&2: Length of the packet.
"
      end

      operation 29204535 "ObexHelper"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Prevent object construction of helper class "
      end

      attribute 3689399 "MAX_PACKET_SIZE_INT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xFFFE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The maximum packet size for OBEX packets that this client can handle. At
present, this must be changed for each port. TODO: The max packet size
should be the Max incoming MTU minus TODO: L2CAP package headers and
RFCOMM package headers. TODO: Retrieve the max incoming MTU from TODO:
LocalDevice.getProperty().
NOTE: This value must be larger than or equal to the L2CAP SDU


android note set as 0xFFFE to match remote MPS
"
      end

      attribute 3689527 "LOWER_LIMIT_MAX_PACKET_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 255"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The minimum allowed max packet size is 255 according to the OBEX specification"
      end

      attribute 3689655 "MAX_CLIENT_PACKET_SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xFC00"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Temporary workaround to be able to push files to Windows 7.
TODO: Should be removed as soon as Microsoft updates their driver.
"
      end

      attribute 3689783 "OBEX_OPCODE_FINAL_BIT_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3689911 "OBEX_OPCODE_CONNECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3690039 "OBEX_OPCODE_DISCONNECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x81"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3690167 "OBEX_OPCODE_PUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3690295 "OBEX_OPCODE_PUT_FINAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x82"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3690423 "OBEX_OPCODE_GET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x03"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3690551 "OBEX_OPCODE_GET_FINAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x83"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3690679 "OBEX_OPCODE_RESERVED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3690807 "OBEX_OPCODE_RESERVED_FINAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x84"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3690935 "OBEX_OPCODE_SETPATH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x85"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3691063 "OBEX_OPCODE_ABORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xFF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3691191 "OBEX_AUTH_REALM_CHARSET_ASCII"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3691319 "OBEX_AUTH_REALM_CHARSET_ISO_8859_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3691447 "OBEX_AUTH_REALM_CHARSET_ISO_8859_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3691575 "OBEX_AUTH_REALM_CHARSET_ISO_8859_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x03"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3691703 "OBEX_AUTH_REALM_CHARSET_ISO_8859_4"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3691831 "OBEX_AUTH_REALM_CHARSET_ISO_8859_5"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x05"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3691959 "OBEX_AUTH_REALM_CHARSET_ISO_8859_6"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x06"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3692087 "OBEX_AUTH_REALM_CHARSET_ISO_8859_7"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x07"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3692215 "OBEX_AUTH_REALM_CHARSET_ISO_8859_8"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3692343 "OBEX_AUTH_REALM_CHARSET_ISO_8859_9"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x09"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3692471 "OBEX_AUTH_REALM_CHARSET_UNICODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xFF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3692599 "OBEX_SRM_ENABLE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 0x01"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " For BT we only need enable/disable"
      end

      attribute 3692727 "OBEX_SRM_DISABLE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 0x00"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3692855 "OBEX_SRM_SUPPORT"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 0x02"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Unused for now"
      end

      attribute 3692983 "OBEX_SRMP_WAIT"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 0x01"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Only SRMP value used by BT"
      end

      operation 29204663 "updateHeaderSet"
	class_operation public explicit_return_type "byte"
	nparams 2
	  param inout name "header" type class_ref 1158455 // HeaderSet
	  param inout name "headerArray" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the HeaderSet with the headers received in the byte array
provided. Invalid headers are ignored.
<P>
The first two bits of an OBEX Header specifies the type of object that is
being sent. The table below specifies the meaning of the high bits.
<TABLE>
<TR>
<TH>Bits 8 and 7</TH>
<TH>Value</TH>
<TH>Description</TH>
</TR>
<TR>
<TD>00</TD>
<TD>0x00</TD>
<TD>Null Terminated Unicode text, prefixed with 2 byte unsigned integer</TD>
</TR>
<TR>
<TD>01</TD>
<TD>0x40</TD>
<TD>Byte Sequence, length prefixed with 2 byte unsigned integer</TD>
</TR>
<TR>
<TD>10</TD>
<TD>0x80</TD>
<TD>1 byte quantity</TD>
</TR>
<TR>
<TD>11</TD>
<TD>0xC0</TD>
<TD>4 byte quantity - transmitted in network byte order (high byte first</TD>
</TR>
</TABLE>
This method uses the information in this table to determine the type of
Java object to create and passes that object with the full header to
setHeader() to update the HeaderSet object. Invalid headers will cause an
exception to be thrown. When it is thrown, it is ignored.
@param header the HeaderSet to update
@param headerArray the byte array containing headers
@return the result of the last start body or end body header provided;
        the first byte in the result will specify if a body or end of
        body is received
@throws IOException if an invalid header was found"
      end

      operation 29204791 "createHeader"
	class_operation public explicit_return_type "byte"
	nparams 2
	  param inout name "head" type class_ref 1158455 // HeaderSet
	  param inout name "nullOut" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the header part of OBEX packet based on the header provided.
TODO: Could use getHeaderList() to get the array of headers to include
and then use the high two bits to determine the the type of the object
and construct the byte array from that. This will make the size smaller.
@param head the header used to construct the byte array
@param nullOut <code>true</code> if the header should be set to
       <code>null</code> once it is added to the array or
       <code>false</code> if it should not be nulled out
@return the header of an OBEX packet"
      end

      operation 29204919 "findHeaderEnd"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "headerArray" explicit_type "byte"
	  param in name "start" explicit_type "int"
	  param in name "maxSize" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines where the maximum divide is between headers. This method is
used by put and get operations to separate headers to a size that meets
the max packet size allowed.
@param headerArray the headers to separate
@param start the starting index to search
@param maxSize the maximum size of a packet
@return the index of the end of the header block to send or -1 if the
        header could not be divided because the header is too large"
      end

      operation 29205047 "convertToLong"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "b" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the byte array to a long.
@param b the byte array to convert to a long
@return the byte array as a long"
      end

      operation 29205175 "convertToByteArray"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "l" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the long to a 4 byte array. The long must be non negative.
@param l the long to convert
@return a byte array that is the same as the long"
      end

      operation 29205303 "convertToUnicodeByteArray"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param inout name "s" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the String to a UNICODE byte array. It will also add the ending
null characters to the end of the string.
@param s the string to convert
@return the unicode byte array of the string"
      end

      operation 29205431 "getTagValue"
	class_operation public explicit_return_type "byte"
	nparams 2
	  param in name "tag" explicit_type "byte"
	  param inout name "triplet" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the value from the byte array for the tag value specified. The
array should be of the form Tag - Length - Value triplet.
@param tag the tag to retrieve from the byte array
@param triplet the byte sequence containing the tag length value form
@return the value of the specified tag"
      end

      operation 29205559 "findTag"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "tag" explicit_type "byte"
	  param inout name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the index that starts the tag value pair in the byte array provide.
@param tag the tag to look for
@param value the byte array to search
@return the starting index of the tag or -1 if the tag could not be found"
      end

      operation 29205687 "convertToUnicode"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "b" explicit_type "byte"
	  param inout name "includesNull" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the byte array provided to a unicode string.
@param b the byte array to convert to a string
@param includesNull determine if the byte string provided contains the
       UNICODE null character at the end or not; if it does, it will be
       removed
@return a Unicode string
@throws IllegalArgumentException if the byte array has an odd length"
      end

      operation 29205815 "computeMd5Hash"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param inout name "in" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compute the MD5 hash of the byte array provided. Does not accumulate
input.
@param in the byte array to hash
@return the MD5 hash of the byte array"
      end

      operation 29205943 "computeAuthenticationChallenge"
	class_operation public explicit_return_type "byte"
	nparams 4
	  param inout name "nonce" explicit_type "byte"
	  param inout name "realm" type class_ref 129591 // String
	  param inout name "access" explicit_type "boolean"
	  param inout name "userID" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes an authentication challenge header.
@param nonce the challenge that will be provided to the peer; the
       challenge must be 16 bytes long
@param realm a short description that describes what password to use
@param access if <code>true</code> then full access will be granted if
       successful; if <code>false</code> then read only access will be
       granted if successful
@param userID if <code>true</code>, a user ID is required in the reply;
       if <code>false</code>, no user ID is required
@throws IllegalArgumentException if the challenge is not 16 bytes long;
        if the realm can not be encoded in less then 255 bytes
@throws IOException if the encoding scheme ISO 8859-1 is not supported"
      end

      operation 29206071 "getMaxTxPacketSize"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "transport" type class_ref 1159095 // ObexTransport
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the maximum allowed OBEX packet to transmit.
OBEX packets transmitted must be smaller than this value.
@param transport Reference to the ObexTransport in use.
@return the maximum allowed OBEX packet to transmit"
      end

      operation 29206199 "getMaxRxPacketSize"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "transport" type class_ref 1159095 // ObexTransport
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the maximum allowed OBEX packet to receive - used in OBEX connect.
@param transport
@return he maximum allowed OBEX packet to receive"
      end

      operation 29206327 "validateMaxPacketSize"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1159351 "ObexPacket"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 3693111 "mHeaderId"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3693239 "mLength"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3693367 "mPayload"
	public explicit_type "byte"
	multiplicity "[]"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 29206455 "ObexPacket"
	private explicit_return_type ""
	nparams 2
	  param in name "headerId" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29206583 "read"
	class_operation public return_type class_ref 1159351 // ObexPacket
	nparams 1
	  param inout name "is" explicit_type "InputStream"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a complete OBEX packet by reading data from an InputStream.
@param is the input stream to read from.
@return the OBEX packet read.
@throws IOException if an IO exception occurs during read."
      end

      operation 29206711 "read"
	class_operation public return_type class_ref 1159351 // ObexPacket
	nparams 2
	  param in name "headerId" explicit_type "int"
	  param inout name "is" explicit_type "InputStream"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read the remainder of an OBEX packet, with a specified headerId.
@param headerId the headerId already read from the stream.
@param is the stream to read from, assuming 1 byte have already been read.
@return the OBEX packet read.
@throws IOException"
      end
    end

    class 1159479 "ResponseCodes"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>ResponseCodes</code> class contains the list of valid response
codes a server may send to a client.
<P>
<STRONG>IMPORTANT NOTE</STRONG>
<P>
The values in this interface represent the values defined in the IrOBEX
specification, which is different with the HTTP specification.
<P>
<code>OBEX_DATABASE_FULL</code> and <code>OBEX_DATABASE_LOCKED</code> require
further description since they are not defined in HTTP. The server will send
an <code>OBEX_DATABASE_FULL</code> message when the client requests that
something be placed into a database but the database is full (cannot take
more data). <code>OBEX_DATABASE_LOCKED</code> will be returned when the
client wishes to access a database, database table, or database record that
has been locked.
@hide"
      attribute 3694519 "OBEX_HTTP_CONTINUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x90"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX CONTINUE response code.
<P>
The value of <code>OBEX_HTTP_CONTINUE</code> is 0x90 (144).
"
      end

      attribute 3694647 "OBEX_HTTP_OK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xA0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX SUCCESS response code.
<P>
The value of <code>OBEX_HTTP_OK</code> is 0xA0 (160).
"
      end

      attribute 3694775 "OBEX_HTTP_CREATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xA1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX CREATED response code.
<P>
The value of <code>OBEX_HTTP_CREATED</code> is 0xA1 (161).
"
      end

      attribute 3694903 "OBEX_HTTP_ACCEPTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xA2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX ACCEPTED response code.
<P>
The value of <code>OBEX_HTTP_ACCEPTED</code> is 0xA2 (162).
"
      end

      attribute 3695031 "OBEX_HTTP_NOT_AUTHORITATIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xA3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX NON-AUTHORITATIVE INFORMATION response code.
<P>
The value of <code>OBEX_HTTP_NOT_AUTHORITATIVE</code> is 0xA3 (163).
"
      end

      attribute 3695159 "OBEX_HTTP_NO_CONTENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xA4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX NO CONTENT response code.
<P>
The value of <code>OBEX_HTTP_NO_CONTENT</code> is 0xA4 (164).
"
      end

      attribute 3695287 "OBEX_HTTP_RESET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xA5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX RESET CONTENT response code.
<P>
The value of <code>OBEX_HTTP_RESET</code> is 0xA5 (165).
"
      end

      attribute 3695415 "OBEX_HTTP_PARTIAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xA6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX PARTIAL CONTENT response code.
<P>
The value of <code>OBEX_HTTP_PARTIAL</code> is 0xA6 (166).
"
      end

      attribute 3695543 "OBEX_HTTP_MULT_CHOICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xB0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX MULTIPLE_CHOICES response code.
<P>
The value of <code>OBEX_HTTP_MULT_CHOICE</code> is 0xB0 (176).
"
      end

      attribute 3695671 "OBEX_HTTP_MOVED_PERM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xB1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX MOVED PERMANENTLY response code.
<P>
The value of <code>OBEX_HTTP_MOVED_PERM</code> is 0xB1 (177).
"
      end

      attribute 3695799 "OBEX_HTTP_MOVED_TEMP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xB2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX MOVED TEMPORARILY response code.
<P>
The value of <code>OBEX_HTTP_MOVED_TEMP</code> is 0xB2 (178).
"
      end

      attribute 3695927 "OBEX_HTTP_SEE_OTHER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xB3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX SEE OTHER response code.
<P>
The value of <code>OBEX_HTTP_SEE_OTHER</code> is 0xB3 (179).
"
      end

      attribute 3696055 "OBEX_HTTP_NOT_MODIFIED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xB4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX NOT MODIFIED response code.
<P>
The value of <code>OBEX_HTTP_NOT_MODIFIED</code> is 0xB4 (180).
"
      end

      attribute 3696183 "OBEX_HTTP_USE_PROXY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xB5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX USE PROXY response code.
<P>
The value of <code>OBEX_HTTP_USE_PROXY</code> is 0xB5 (181).
"
      end

      attribute 3696311 "OBEX_HTTP_BAD_REQUEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX BAD REQUEST response code.
<P>
The value of <code>OBEX_HTTP_BAD_REQUEST</code> is 0xC0 (192).
"
      end

      attribute 3696439 "OBEX_HTTP_UNAUTHORIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX UNAUTHORIZED response code.
<P>
The value of <code>OBEX_HTTP_UNAUTHORIZED</code> is 0xC1 (193).
"
      end

      attribute 3696567 "OBEX_HTTP_PAYMENT_REQUIRED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX PAYMENT REQUIRED response code.
<P>
The value of <code>OBEX_HTTP_PAYMENT_REQUIRED</code> is 0xC2 (194).
"
      end

      attribute 3696695 "OBEX_HTTP_FORBIDDEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX FORBIDDEN response code.
<P>
The value of <code>OBEX_HTTP_FORBIDDEN</code> is 0xC3 (195).
"
      end

      attribute 3696823 "OBEX_HTTP_NOT_FOUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX NOT FOUND response code.
<P>
The value of <code>OBEX_HTTP_NOT_FOUND</code> is 0xC4 (196).
"
      end

      attribute 3696951 "OBEX_HTTP_BAD_METHOD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX METHOD NOT ALLOWED response code.
<P>
The value of <code>OBEX_HTTP_BAD_METHOD</code> is 0xC5 (197).
"
      end

      attribute 3697079 "OBEX_HTTP_NOT_ACCEPTABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX NOT ACCEPTABLE response code.
<P>
The value of <code>OBEX_HTTP_NOT_ACCEPTABLE</code> is 0xC6 (198).
"
      end

      attribute 3697207 "OBEX_HTTP_PROXY_AUTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX PROXY AUTHENTICATION REQUIRED response code.
<P>
The value of <code>OBEX_HTTP_PROXY_AUTH</code> is 0xC7 (199).
"
      end

      attribute 3697335 "OBEX_HTTP_TIMEOUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX REQUEST TIME OUT response code.
<P>
The value of <code>OBEX_HTTP_TIMEOUT</code> is 0xC8 (200).
"
      end

      attribute 3697463 "OBEX_HTTP_CONFLICT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xC9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX METHOD CONFLICT response code.
<P>
The value of <code>OBEX_HTTP_CONFLICT</code> is 0xC9 (201).
"
      end

      attribute 3697591 "OBEX_HTTP_GONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xCA"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX METHOD GONE response code.
<P>
The value of <code>OBEX_HTTP_GONE</code> is 0xCA (202).
"
      end

      attribute 3697719 "OBEX_HTTP_LENGTH_REQUIRED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xCB"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX METHOD LENGTH REQUIRED response code.
<P>
The value of <code>OBEX_HTTP_LENGTH_REQUIRED</code> is 0xCB (203).
"
      end

      attribute 3697847 "OBEX_HTTP_PRECON_FAILED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xCC"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX PRECONDITION FAILED response code.
<P>
The value of <code>OBEX_HTTP_PRECON_FAILED</code> is 0xCC (204).
"
      end

      attribute 3697975 "OBEX_HTTP_ENTITY_TOO_LARGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xCD"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX REQUESTED ENTITY TOO LARGE response code.
<P>
The value of <code>OBEX_HTTP_ENTITY_TOO_LARGE</code> is 0xCD (205).
"
      end

      attribute 3698103 "OBEX_HTTP_REQ_TOO_LARGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xCE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX REQUESTED URL TOO LARGE response code.
<P>
The value of <code>OBEX_HTTP_REQ_TOO_LARGE</code> is 0xCE (206).
"
      end

      attribute 3698231 "OBEX_HTTP_UNSUPPORTED_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xCF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX UNSUPPORTED MEDIA TYPE response code.
<P>
The value of <code>OBEX_HTTP_UNSUPPORTED_TYPE</code> is 0xCF (207).
"
      end

      attribute 3698359 "OBEX_HTTP_INTERNAL_ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xD0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX INTERNAL SERVER ERROR response code.
<P>
The value of <code>OBEX_HTTP_INTERNAL_ERROR</code> is 0xD0 (208).
"
      end

      attribute 3698487 "OBEX_HTTP_NOT_IMPLEMENTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xD1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX NOT IMPLEMENTED response code.
<P>
The value of <code>OBEX_HTTP_NOT_IMPLEMENTED</code> is 0xD1 (209).
"
      end

      attribute 3698615 "OBEX_HTTP_BAD_GATEWAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xD2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX BAD GATEWAY response code.
<P>
The value of <code>OBEX_HTTP_BAD_GATEWAY</code> is 0xD2 (210).
"
      end

      attribute 3698743 "OBEX_HTTP_UNAVAILABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xD3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX SERVICE UNAVAILABLE response code.
<P>
The value of <code>OBEX_HTTP_UNAVAILABLE</code> is 0xD3 (211).
"
      end

      attribute 3698871 "OBEX_HTTP_GATEWAY_TIMEOUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xD4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX GATEWAY TIMEOUT response code.
<P>
The value of <code>OBEX_HTTP_GATEWAY_TIMEOUT</code> is 0xD4 (212).
"
      end

      attribute 3698999 "OBEX_HTTP_VERSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xD5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX HTTP VERSION NOT SUPPORTED response code.
<P>
The value of <code>OBEX_HTTP_VERSION</code> is 0xD5 (213).
"
      end

      attribute 3699127 "OBEX_DATABASE_FULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xE0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX DATABASE FULL response code.
<P>
The value of <code>OBEX_DATABASE_FULL</code> is 0xE0 (224).
"
      end

      attribute 3699255 "OBEX_DATABASE_LOCKED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xE1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines the OBEX DATABASE LOCKED response code.
<P>
The value of <code>OBEX_DATABASE_LOCKED</code> is 0xE1 (225).
"
      end

      operation 29210935 "ResponseCodes"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor does nothing."
      end
    end

    class 1159607 "ServerOperation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements the Operation interface for server side connections.
<P>
<STRONG>Request Codes</STRONG> There are four different request codes that
are in this class. 0x02 is a PUT request that signals that the request is not
complete and requires an additional OBEX packet. 0x82 is a PUT request that
says that request is complete. In this case, the server can begin sending the
response. The 0x03 is a GET request that signals that the request is not
finished. When the server receives a 0x83, the client is signaling the server
that it is done with its request. TODO: Extend the ClientOperation and reuse
the methods defined TODO: in that class.
@hide"
      classrelation 3366455 // <realization>
	relation 3366455 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3366455 // <realization>
	  b parent class_ref 1158327 // Operation
      end

      classrelation 3366583 // <realization>
	relation 3366583 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3366583 // <realization>
	  b parent class_ref 1158071 // BaseStream
      end

      classrelation 3366711 // TAG (<unidirectional association>)
	relation 3366711 --->
	  a role_name "TAG" init_value " \"ServerOperation\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3366711 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3699383 "V"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " ObexHelper.VDBG"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Verbose debugging"
      end

      attribute 3699511 "isAborted"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3366839 // requestHeader (<unidirectional association>)
	relation 3366839 --->
	  a role_name "requestHeader" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3366839 // requestHeader (<unidirectional association>)
	  b parent class_ref 1158455 // HeaderSet
      end

      classrelation 3366967 // replyHeader (<unidirectional association>)
	relation 3366967 --->
	  a role_name "replyHeader" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3366967 // replyHeader (<unidirectional association>)
	  b parent class_ref 1158455 // HeaderSet
      end

      attribute 3699639 "finalBitSet"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3699767 "mInput"
	private explicit_type "InputStream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3367095 // mParent (<unidirectional association>)
	relation 3367095 --->
	  a role_name "mParent" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3367095 // mParent (<unidirectional association>)
	  b parent class_ref 1159735 // ServerSession
      end

      attribute 3699895 "mMaxPacketLength"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3700023 "mResponseSize"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3700151 "mClosed"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3700279 "mGetOperation"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3367223 // mPrivateInput (<unidirectional association>)
	relation 3367223 --->
	  a role_name "mPrivateInput" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3367223 // mPrivateInput (<unidirectional association>)
	  b parent class_ref 1158711 // PrivateInputStream
      end

      classrelation 3367351 // mPrivateOutput (<unidirectional association>)
	relation 3367351 --->
	  a role_name "mPrivateOutput" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3367351 // mPrivateOutput (<unidirectional association>)
	  b parent class_ref 1158839 // PrivateOutputStream
      end

      classrelation 3367479 // mTransport (<unidirectional association>)
	relation 3367479 --->
	  a role_name "mTransport" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3367479 // mTransport (<unidirectional association>)
	  b parent class_ref 1159095 // ObexTransport
      end

      attribute 3700407 "mPrivateOutputOpen"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3367607 // mExceptionString (<unidirectional association>)
	relation 3367607 --->
	  a role_name "mExceptionString" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3367607 // mExceptionString (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 3367735 // mListener (<unidirectional association>)
	relation 3367735 --->
	  a role_name "mListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3367735 // mListener (<unidirectional association>)
	  b parent class_ref 1159863 // ServerRequestHandler
      end

      attribute 3700535 "mRequestFinished"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3700663 "mHasBody"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3700791 "mSendBodyHeader"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3700919 "mSrmEnabled"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Assume SRM disabled - needs to be explicit
 enabled by client"
      end

      attribute 3701047 "mSrmActive"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A latch - when triggered, there is not way back ;-)"
      end

      attribute 3701175 "mSrmResponseSent"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Set to true when a SRM enable response have been send"
      end

      attribute 3701303 "mSrmWaitingForRemote"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " keep waiting until final-bit is received in request
 to handle the case where the SRM enable header is in
 a different OBEX packet than the SRMP header."
      end

      attribute 3701431 "mSrmLocalWait"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Why should we wait? - currently not exposed to apps."
      end

      operation 29211063 "ServerOperation"
	public explicit_return_type ""
	nparams 5
	  param inout name "p" type class_ref 1159735 // ServerSession
	  param inout name "in" explicit_type "InputStream"
	  param in name "request" explicit_type "int"
	  param in name "maxSize" explicit_type "int"
	  param inout name "listen" type class_ref 1159863 // ServerRequestHandler
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates new ServerOperation
@param p the parent that created this object
@param in the input stream to read from
@param out the output stream to write to
@param request the initial request that was received from the client
@param maxSize the max packet size that the client will accept
@param listen the listener that is responding to the request
@throws IOException if an IO error occurs"
      end

      operation 29211191 "handleObexPacket"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "packet" type class_ref 1159351 // ObexPacket
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse headers and update member variables
@param packet the received obex packet
@return false for failing authentication - and a OBEX_HTTP_UNAUTHORIZED
response have been send. Else true.
@throws IOException"
      end

      operation 29211319 "updateRequestHeaders"
	private explicit_return_type "byte"
	nparams 1
	  param inout name "packet" type class_ref 1159351 // ObexPacket
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update the request header set, and sniff on SRM headers to update local state.
@param data the OBEX packet data
@return any bytes in a body/end-of-body header returned by {@link ObexHelper.updateHeaderSet}
@throws IOException"
      end

      operation 29211447 "checkForSrmWait"
	private explicit_return_type "void"
	nparams 1
	  param in name "headerId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call this only when a complete request have been received.
(This is not optimal, but the current design is not really suited to
the way SRM is specified.)"
      end

      operation 29211575 "isValidBody"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29211703 "continueOperation"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "sendEmpty" explicit_type "boolean"
	  param inout name "inStream" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if the operation should continue or should wait. If it should
continue, this method will continue the operation.
@param sendEmpty if <code>true</code> then this will continue the
       operation even if no headers will be sent; if <code>false</code>
       then this method will only continue the operation if there are
       headers to send
@param inStream if<code>true</code> the stream is input stream, otherwise
       output stream
@return <code>true</code> if the operation was completed;
        <code>false</code> if no operation took place"
      end

      operation 29211831 "sendReply"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "type" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a reply to the client. If the reply is a OBEX_HTTP_CONTINUE, it
will wait for a response from the client before ending unless SRM is active.
@param type the response code to send back to the client
@return <code>true</code> if the final bit was not set on the reply;
        <code>false</code> if no reply was received because the operation
        ended, an abort was received, the final bit was set in the
        reply or SRM is active.
@throws IOException if an IO error occurs"
      end

      operation 29211959 "checkSrmRemoteAbort"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will look for an abort from the peer during a SRM transfer.
The function will not block if no data has been received from the remote device.
If data have been received, the function will block while reading the incoming
OBEX package.
An Abort request will be handled, and cause an IOException(\"Abort Received\").
Other messages will be discarded silently as per GOEP specification.
@throws IOException if an abort request have been received.
TODO: I think this is an error in the specification. If we discard other messages,
      the peer device will most likely stall, as it will not receive the expected
      response for the message...
      I'm not sure how to understand \"Receipt of invalid or unexpected SRM or SRMP
      header values shall be ignored by the receiving device.\"
      If any signal is received during an active SRM transfer it is unexpected regardless
      whether or not it contains SRM/SRMP headers..."
      end

      operation 29212087 "handleRemoteAbort"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29212215 "abort"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an ABORT message to the server. By calling this method, the
corresponding input and output streams will be closed along with this
object.
@throws IOException if the transaction has already ended or if an OBEX
        server called this method"
      end

      operation 29212343 "getReceivedHeader"
	public return_type class_ref 1158455 // HeaderSet
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the headers that have been received during the operation.
Modifying the object returned has no effect on the headers that are sent
or retrieved.
@return the headers received during this <code>Operation</code>
@throws IOException if this <code>Operation</code> has been closed"
      end

      operation 29212471 "sendHeaders"
	public explicit_return_type "void"
	nparams 1
	  param inout name "headers" type class_ref 1158455 // HeaderSet
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the headers that should be sent in the next OBEX message that
is sent.
@param headers the headers to send in the next message
@throws IOException if this <code>Operation</code> has been closed or the
        transaction has ended and no further messages will be exchanged
@throws IllegalArgumentException if <code>headers</code> was not created
        by a call to <code>ServerRequestHandler.createHeaderSet()</code>"
      end

      operation 29212599 "getResponseCode"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the response code retrieved from the server. Response codes are
defined in the <code>ResponseCodes</code> interface.
@return the response code retrieved from the server
@throws IOException if an error occurred in the transport layer during
        the transaction; if this method is called on a
        <code>HeaderSet</code> object created by calling
        <code>createHeaderSet</code> in a <code>ClientSession</code>
        object; if this is called from a server"
      end

      operation 29212727 "getEncoding"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Always returns <code>null</code>
@return <code>null</code>"
      end

      operation 29212855 "getType"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of content that the resource connected to is providing.
E.g. if the connection is via HTTP, then the value of the content-type
header field is returned.
@return the content type of the resource that the URL references, or
        <code>null</code> if not known"
      end

      operation 29212983 "getLength"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the content which is being provided. E.g. if the
connection is via HTTP, then the value of the content-length header field
is returned.
@return the content length of the resource that this connection's URL
        references, or -1 if the content length is not known"
      end

      operation 29213111 "getMaxPacketSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29213239 "getHeaderLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29213367 "openInputStream"
	public explicit_return_type "InputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open and return an input stream for a connection.
@return an input stream
@throws IOException if an I/O error occurs"
      end

      operation 29213495 "openDataInputStream"
	public explicit_return_type "DataInputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open and return a data input stream for a connection.
@return an input stream
@throws IOException if an I/O error occurs"
      end

      operation 29213623 "openOutputStream"
	public explicit_return_type "OutputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open and return an output stream for a connection.
@return an output stream
@throws IOException if an I/O error occurs"
      end

      operation 29213751 "openDataOutputStream"
	public explicit_return_type "DataOutputStream"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open and return a data output stream for a connection.
@return an output stream
@throws IOException if an I/O error occurs"
      end

      operation 29213879 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the connection and ends the transaction
@throws IOException if the operation has already ended or is closed"
      end

      operation 29214007 "ensureOpen"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that the connection is open and no exceptions should be thrown.
@throws IOException if an exception needs to be thrown"
      end

      operation 29214135 "ensureNotDone"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that additional information may be sent. In other words, the
operation is not done.
<P>
Included to implement the BaseStream interface only. It does not do
anything on the server side since the operation of the Operation object
is not done until after the handler returns from its method.
@throws IOException if the operation is completed"
      end

      operation 29214263 "streamClosed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inStream" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the output or input stream is closed. It does not do anything
on the server side since the operation of the Operation object is not
done until after the handler returns from its method.
@param inStream <code>true</code> if the input stream is closed;
       <code>false</code> if the output stream is closed
@throws IOException if an IO error occurs"
      end

      operation 29214391 "noBodyHeader"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1159735 "ServerSession"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class in an implementation of the OBEX ServerSession.
@hide"
      classrelation 3367863 // <generalisation>
	relation 3367863 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3367863 // <generalisation>
	  b parent class_ref 1158967 // ObexSession
      end

      classrelation 3367991 // <realization>
	relation 3367991 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3367991 // <realization>
	  b parent class_ref 149943 // Runnable
      end

      classrelation 3368119 // TAG (<unidirectional association>)
	relation 3368119 --->
	  a role_name "TAG" init_value " \"Obex ServerSession\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3368119 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 3701687 "V"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " ObexHelper.VDBG"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3368247 // mTransport (<unidirectional association>)
	relation 3368247 --->
	  a role_name "mTransport" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3368247 // mTransport (<unidirectional association>)
	  b parent class_ref 1159095 // ObexTransport
      end

      attribute 3701815 "mInput"
	private explicit_type "InputStream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3701943 "mOutput"
	private explicit_type "OutputStream"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3368375 // mListener (<unidirectional association>)
	relation 3368375 --->
	  a role_name "mListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3368375 // mListener (<unidirectional association>)
	  b parent class_ref 1159863 // ServerRequestHandler
      end

      classrelation 3368503 // mProcessThread (<unidirectional association>)
	relation 3368503 --->
	  a role_name "mProcessThread" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3368503 // mProcessThread (<unidirectional association>)
	  b parent class_ref 1030455 // Thread
      end

      attribute 3702071 "mMaxPacketLength"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3702199 "mClosed"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 29216311 "ServerSession"
	public explicit_return_type ""
	nparams 3
	  param inout name "trans" type class_ref 1159095 // ObexTransport
	  param inout name "handler" type class_ref 1159863 // ServerRequestHandler
	  param inout name "auth" type class_ref 1157815 // Authenticator
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates new ServerSession.
@param trans the connection to the client
@param handler the event listener that will process requests
@param auth the authenticator to use with this connection
@throws IOException if an error occurred while opening the input and
        output streams"
      end

      operation 29216439 "run"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes requests made to the server and forwards them to the
appropriate event listener."
      end

      operation 29216567 "handleAbortRequest"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles a ABORT request from a client. This method will read the rest of
the request from the client. Assuming the request is valid, it will
create a <code>HeaderSet</code> object to pass to the
<code>ServerRequestHandler</code> object. After the handler processes the
request, this method will create a reply message to send to the server.

@throws IOException if an error occurred at the transport layer"
      end

      operation 29216695 "handlePutRequest"
	private explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles a PUT request from a client. This method will provide a
<code>ServerOperation</code> object to the request handler. The
<code>ServerOperation</code> object will handle the rest of the request.
It will also send replies and receive requests until the final reply
should be sent. When the final reply should be sent, this method will get
the response code to use and send the reply. The
<code>ServerOperation</code> object will always reply with a
OBEX_HTTP_CONTINUE reply. It will only reply if further information is
needed.
@param type the type of request received; either 0x02 or 0x82
@throws IOException if an error occurred at the transport layer"
      end

      operation 29216823 "handleGetRequest"
	private explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles a GET request from a client. This method will provide a
<code>ServerOperation</code> object to the request handler. The
<code>ServerOperation</code> object will handle the rest of the request.
It will also send replies and receive requests until the final reply
should be sent. When the final reply should be sent, this method will get
the response code to use and send the reply. The
<code>ServerOperation</code> object will always reply with a
OBEX_HTTP_CONTINUE reply. It will only reply if further information is
needed.
@param type the type of request received; either 0x03 or 0x83
@throws IOException if an error occurred at the transport layer"
      end

      operation 29216951 "sendResponse"
	public explicit_return_type "void"
	nparams 2
	  param in name "code" explicit_type "int"
	  param inout name "header" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send standard response.
@param code the response code to send
@param header the headers to include in the response
@throws IOException if an IO error occurs"
      end

      operation 29217079 "handleSetPathRequest"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles a SETPATH request from a client. This method will read the rest
of the request from the client. Assuming the request is valid, it will
create a <code>HeaderSet</code> object to pass to the
<code>ServerRequestHandler</code> object. After the handler processes the
request, this method will create a reply message to send to the server
with the response code provided.
@throws IOException if an error occurred at the transport layer"
      end

      operation 29217207 "handleDisconnectRequest"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles a disconnect request from a client. This method will read the
rest of the request from the client. Assuming the request is valid, it
will create a <code>HeaderSet</code> object to pass to the
<code>ServerRequestHandler</code> object. After the handler processes the
request, this method will create a reply message to send to the server.
@throws IOException if an error occurred at the transport layer"
      end

      operation 29217335 "handleConnectRequest"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles a connect request from a client. This method will read the rest
of the request from the client. Assuming the request is valid, it will
create a <code>HeaderSet</code> object to pass to the
<code>ServerRequestHandler</code> object. After the handler processes the
request, this method will create a reply message to send to the server
with the response code provided.
@throws IOException if an error occurred at the transport layer"
      end

      operation 29217463 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the server session - in detail close I/O streams and the
underlying transport layer. Internal flag is also set so that later
attempt to read/write will throw an exception."
      end

      operation 29217591 "validateResponseCode"
	private explicit_return_type "int"
	nparams 1
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that the response code is valid. If it is not valid, it will
return the <code>OBEX_HTTP_INTERNAL_ERROR</code> response code.
@param code the response code to check
@return the valid response code or <code>OBEX_HTTP_INTERNAL_ERROR</code>
        if <code>code</code> is not valid"
      end

      operation 29217719 "getTransport"
	public return_type class_ref 1159095 // ObexTransport
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1159863 "ServerRequestHandler"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>ServerRequestHandler</code> class defines an event listener that
will respond to OBEX requests made to the server.
<P>
The <code>onConnect()</code>, <code>onSetPath()</code>,
<code>onDelete()</code>, <code>onGet()</code>, and <code>onPut()</code>
methods may return any response code defined in the
<code>ResponseCodes</code> class except for <code>OBEX_HTTP_CONTINUE</code>.
If <code>OBEX_HTTP_CONTINUE</code> or a value not defined in the
<code>ResponseCodes</code> class is returned, the server implementation will
send an <code>OBEX_HTTP_INTERNAL_ERROR</code> response to the client.
<P>
<STRONG>Connection ID and Target Headers</STRONG>
<P>
According to the IrOBEX specification, a packet may not contain a Connection
ID and Target header. Since the Connection ID header is managed by the
implementation, it will not send a Connection ID header, if a Connection ID
was specified, in a packet that has a Target header. In other words, if an
application adds a Target header to a <code>HeaderSet</code> object used in
an OBEX operation and a Connection ID was specified, no Connection ID will be
sent in the packet containing the Target header.
<P>
<STRONG>CREATE-EMPTY Requests</STRONG>
<P>
A CREATE-EMPTY request allows clients to create empty objects on the server.
When a CREATE-EMPTY request is received, the <code>onPut()</code> method will
be called by the implementation. To differentiate between a normal PUT
request and a CREATE-EMPTY request, an application must open the
<code>InputStream</code> from the <code>Operation</code> object passed to the
<code>onPut()</code> method. For a PUT request, the application will be able
to read Body data from this <code>InputStream</code>. For a CREATE-EMPTY
request, there will be no Body data to read. Therefore, a call to
<code>InputStream.read()</code> will return -1.
@hide"
      attribute 3701559 "mConnectionId"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 29214519 "ServerRequestHandler"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a <code>ServerRequestHandler</code>."
      end

      operation 29214647 "setConnectionId"
	public explicit_return_type "void"
	nparams 1
	  param in name "connectionId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the connection ID header to include in the reply packets.
@param connectionId the connection ID to use; -1 if no connection ID
       should be sent
@throws IllegalArgumentException if <code>id</code> is not in the range
        -1 to 2<sup>32</sup>-1"
      end

      operation 29214775 "getConnectionId"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the connection ID that is being used in the present connection.
This method will return -1 if no connection ID is being used.
@return the connection id being used or -1 if no connection ID is being
        used"
      end

      operation 29214903 "onConnect"
	public explicit_return_type "int"
	nparams 2
	  param inout name "request" type class_ref 1158455 // HeaderSet
	  param inout name "reply" type class_ref 1158455 // HeaderSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a CONNECT request is received.
<P>
If this method is not implemented by the class that extends this class,
<code>onConnect()</code> will always return an <code>OBEX_HTTP_OK</code>
response code.
<P>
The headers received in the request can be retrieved from the
<code>request</code> argument. The headers that should be sent in the
reply must be specified in the <code>reply</code> argument.
@param request contains the headers sent by the client;
       <code>request</code> will never be <code>null</code>
@param reply the headers that should be sent in the reply;
       <code>reply</code> will never be <code>null</code>
@return a response code defined in <code>ResponseCodes</code> that will
        be returned to the client; if an invalid response code is
        provided, the <code>OBEX_HTTP_INTERNAL_ERROR</code> response code
        will be used"
      end

      operation 29215031 "onDisconnect"
	public explicit_return_type "void"
	nparams 2
	  param inout name "request" type class_ref 1158455 // HeaderSet
	  param inout name "reply" type class_ref 1158455 // HeaderSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a DISCONNECT request is received.
<P>
The headers received in the request can be retrieved from the
<code>request</code> argument. The headers that should be sent in the
reply must be specified in the <code>reply</code> argument.
@param request contains the headers sent by the client;
       <code>request</code> will never be <code>null</code>
@param reply the headers that should be sent in the reply;
       <code>reply</code> will never be <code>null</code>"
      end

      operation 29215159 "onSetPath"
	public explicit_return_type "int"
	nparams 4
	  param inout name "request" type class_ref 1158455 // HeaderSet
	  param inout name "reply" type class_ref 1158455 // HeaderSet
	  param inout name "backup" explicit_type "boolean"
	  param inout name "create" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a SETPATH request is received.
<P>
If this method is not implemented by the class that extends this class,
<code>onSetPath()</code> will always return an
<code>OBEX_HTTP_NOT_IMPLEMENTED</code> response code.
<P>
The headers received in the request can be retrieved from the
<code>request</code> argument. The headers that should be sent in the
reply must be specified in the <code>reply</code> argument.
@param request contains the headers sent by the client;
       <code>request</code> will never be <code>null</code>
@param reply the headers that should be sent in the reply;
       <code>reply</code> will never be <code>null</code>
@param backup <code>true</code> if the client requests that the server
       back up one directory before changing to the path described by
       <code>name</code>; <code>false</code> to apply the request to the
       present path
@param create <code>true</code> if the path should be created if it does
       not already exist; <code>false</code> if the path should not be
       created if it does not exist and an error code should be returned
@return a response code defined in <code>ResponseCodes</code> that will
        be returned to the client; if an invalid response code is
        provided, the <code>OBEX_HTTP_INTERNAL_ERROR</code> response code
        will be used"
      end

      operation 29215287 "onDelete"
	public explicit_return_type "int"
	nparams 2
	  param inout name "request" type class_ref 1158455 // HeaderSet
	  param inout name "reply" type class_ref 1158455 // HeaderSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a DELETE request is received.
<P>
If this method is not implemented by the class that extends this class,
<code>onDelete()</code> will always return an
<code>OBEX_HTTP_NOT_IMPLEMENTED</code> response code.
<P>
The headers received in the request can be retrieved from the
<code>request</code> argument. The headers that should be sent in the
reply must be specified in the <code>reply</code> argument.
@param request contains the headers sent by the client;
       <code>request</code> will never be <code>null</code>
@param reply the headers that should be sent in the reply;
       <code>reply</code> will never be <code>null</code>
@return a response code defined in <code>ResponseCodes</code> that will
        be returned to the client; if an invalid response code is
        provided, the <code>OBEX_HTTP_INTERNAL_ERROR</code> response code
        will be used"
      end

      operation 29215415 "onAbort"
	public explicit_return_type "int"
	nparams 2
	  param inout name "request" type class_ref 1158455 // HeaderSet
	  param inout name "reply" type class_ref 1158455 // HeaderSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a ABORT request is received."
      end

      operation 29215543 "onPut"
	public explicit_return_type "int"
	nparams 1
	  param inout name "operation" type class_ref 1158327 // Operation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a PUT request is received.
<P>
If this method is not implemented by the class that extends this class,
<code>onPut()</code> will always return an
<code>OBEX_HTTP_NOT_IMPLEMENTED</code> response code.
<P>
If an ABORT request is received during the processing of a PUT request,
<code>op</code> will be closed by the implementation.
@param operation contains the headers sent by the client and allows new
       headers to be sent in the reply; <code>op</code> will never be
       <code>null</code>
@return a response code defined in <code>ResponseCodes</code> that will
        be returned to the client; if an invalid response code is
        provided, the <code>OBEX_HTTP_INTERNAL_ERROR</code> response code
        will be used"
      end

      operation 29215671 "onGet"
	public explicit_return_type "int"
	nparams 1
	  param inout name "operation" type class_ref 1158327 // Operation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a GET request is received.
<P>
If this method is not implemented by the class that extends this class,
<code>onGet()</code> will always return an
<code>OBEX_HTTP_NOT_IMPLEMENTED</code> response code.
<P>
If an ABORT request is received during the processing of a GET request,
<code>op</code> will be closed by the implementation.
@param operation contains the headers sent by the client and allows new
       headers to be sent in the reply; <code>op</code> will never be
       <code>null</code>
@return a response code defined in <code>ResponseCodes</code> that will
        be returned to the client; if an invalid response code is
        provided, the <code>OBEX_HTTP_INTERNAL_ERROR</code> response code
        will be used"
      end

      operation 29215799 "onAuthenticationFailure"
	public explicit_return_type "void"
	nparams 1
	  param inout name "userName" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when this object attempts to authenticate a client and the
authentication request fails because the response digest in the
authentication response header was wrong.
<P>
If this method is not implemented by the class that extends this class,
this method will do nothing.
@param userName the user name returned in the authentication response;
       <code>null</code> if no user name was provided in the response"
      end

      operation 29215927 "updateStatus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "message" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by ServerSession to update the status of current transaction
<P>
If this method is not implemented by the class that extends this class,
this method will do nothing."
      end

      operation 29216055 "onClose"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when session is closed.
<P>
If this method is not implemented by the class that extends this class,
this method will do nothing."
      end

      operation 29216183 "isSrmSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override to add Single Response Mode support - e.g. if the supplied
transport is l2cap.
@return True if SRM is supported, else False"
      end
    end

    class 1159991 "SessionNotifier"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <code>SessionNotifier</code> interface defines a connection notifier for
server-side OBEX connections. When a <code>SessionNotifier</code> is created
and calls <code>acceptAndOpen()</code>, it will begin listening for clients
to create a connection at the transport layer. When the transport layer
connection is received, the <code>acceptAndOpen()</code> method will return a
<code>javax.microedition.io.Connection</code> that is the connection to the
client. The <code>acceptAndOpen()</code> method also takes a
<code>ServerRequestHandler</code> argument that will process the requests
from the client that connects to the server.
@hide"
      operation 29217847 "acceptAndOpen"
	public return_type class_ref 1158967 // ObexSession
	nparams 1
	  param inout name "handler" type class_ref 1159863 // ServerRequestHandler
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits for a transport layer connection to be established and specifies
the handler to handle the requests from the client. No authenticator is
associated with this connection, therefore, it is implementation
dependent as to how an authentication challenge and authentication
response header will be received and processed.
<P>
<H4>Additional Note for OBEX over Bluetooth</H4> If this method is called
on a <code>SessionNotifier</code> object that does not have a
<code>ServiceRecord</code> in the SDDB, the <code>ServiceRecord</code>
for this object will be added to the SDDB. This method requests the BCC
to put the local device in connectable mode so that it will respond to
connection attempts by clients.
<P>
The following checks are done to verify that the service record provided
is valid. If any of these checks fail, then a
<code>ServiceRegistrationException</code> is thrown.
<UL>
<LI>ServiceClassIDList and ProtocolDescriptorList, the mandatory service
attributes for a <code>btgoep</code> service record, must be present in
the <code>ServiceRecord</code> associated with this notifier.
<LI>L2CAP, RFCOMM and OBEX must all be in the ProtocolDescriptorList
<LI>The <code>ServiceRecord</code> associated with this notifier must not
have changed the RFCOMM server channel number
</UL>
<P>
This method will not ensure that <code>ServiceRecord</code> associated
with this notifier is a completely valid service record. It is the
responsibility of the application to ensure that the service record
follows all of the applicable syntactic and semantic rules for service
record correctness.
@param handler the request handler that will respond to OBEX requests
@return the connection to the client
@throws IOException if an error occurs in the transport layer
@throws NullPointerException if <code>handler</code> is <code>null</code>"
      end

      operation 29217975 "acceptAndOpen"
	public return_type class_ref 1158967 // ObexSession
	nparams 2
	  param inout name "handler" type class_ref 1159863 // ServerRequestHandler
	  param inout name "auth" type class_ref 1157815 // Authenticator
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits for a transport layer connection to be established and specifies
the handler to handle the requests from the client and the
<code>Authenticator</code> to use to respond to authentication challenge
and authentication response headers.
<P>
<H4>Additional Note for OBEX over Bluetooth</H4> If this method is called
on a <code>SessionNotifier</code> object that does not have a
<code>ServiceRecord</code> in the SDDB, the <code>ServiceRecord</code>
for this object will be added to the SDDB. This method requests the BCC
to put the local device in connectable mode so that it will respond to
connection attempts by clients.
<P>
The following checks are done to verify that the service record provided
is valid. If any of these checks fail, then a
<code>ServiceRegistrationException</code> is thrown.
<UL>
<LI>ServiceClassIDList and ProtocolDescriptorList, the mandatory service
attributes for a <code>btgoep</code> service record, must be present in
the <code>ServiceRecord</code> associated with this notifier.
<LI>L2CAP, RFCOMM and OBEX must all be in the ProtocolDescriptorList
<LI>The <code>ServiceRecord</code> associated with this notifier must not
have changed the RFCOMM server channel number
</UL>
<P>
This method will not ensure that <code>ServiceRecord</code> associated
with this notifier is a completely valid service record. It is the
responsibility of the application to ensure that the service record
follows all of the applicable syntactic and semantic rules for service
record correctness.
@param handler the request handler that will respond to OBEX requests
@param auth the <code>Authenticator</code> to use with this connection;
       if <code>null</code> then no <code>Authenticator</code> will be
       used
@return the connection to the client
@throws IOException if an error occurs in the transport layer
@throws NullPointerException if <code>handler</code> is <code>null</code>"
      end
    end
  end

  deploymentview 178231 "obex"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 678711 "ApplicationParameter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1156919 // ApplicationParameter
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 678839 "Authenticator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1157815 // Authenticator
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 678967 "BaseStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1158071 // BaseStream
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 679095 "Operation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
${definition}"
      associated_classes
	class_ref 1158327 // Operation
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 679223 "ClientOperation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ByteArrayOutputStream;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1158199 // ClientOperation
      end
      comment "Copyright (c) 2015 The Android Open Source Project
Copyright (C) 2015 Samsung LSI
Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 679351 "ObexSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1158967 // ObexSession
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 679479 "ClientSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1158583 // ClientSession
      end
      comment "Copyright (c) 2015 The Android Open Source Project
Copyright (C) 2015 Samsung LSI
Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 679607 "HeaderSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Calendar;
import java.security.SecureRandom;
${definition}"
      associated_classes
	class_ref 1158455 // HeaderSet
      end
      comment "Copyright (c) 2014 The Android Open Source Project
Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 679735 "ObexHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1159223 // ObexHelper
      end
      comment "Copyright (C) 2015 The Android Open Source Project
Copyright (C) 2015 Samsung LSI
Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 679863 "ObexPacket"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
${definition}"
      associated_classes
	class_ref 1159351 // ObexPacket
      end
      comment "Copyright (c) 2015 The Android Open Source Project
Copyright (c) 2015 Samsung LSI

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 679991 "ObexTransport"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
${definition}"
      associated_classes
	class_ref 1159095 // ObexTransport
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 680119 "PasswordAuthentication"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1157943 // PasswordAuthentication
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 680247 "PrivateInputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1158711 // PrivateInputStream
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 680375 "PrivateOutputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.OutputStream;
import java.io.ByteArrayOutputStream;
${definition}"
      associated_classes
	class_ref 1158839 // PrivateOutputStream
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 680503 "ResponseCodes"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1159479 // ResponseCodes
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 680631 "ServerOperation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.InputStream;
import java.io.DataInputStream;
import java.io.OutputStream;
import java.io.DataOutputStream;
import java.io.ByteArrayOutputStream;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1159607 // ServerOperation
      end
      comment " Copyright (c) 2015 The Android Open Source Project
Copyright (C) 2015 Samsung LSI
Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 680759 "ServerRequestHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1159863 // ServerRequestHandler
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 680887 "ServerSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import java.io.InputStream;
import java.io.IOException;
import java.io.OutputStream;
${definition}"
      associated_classes
	class_ref 1159735 // ServerSession
      end
      comment "Copyright (C) 2015 The Android Open Source Project
Copyright (c) 2015 Samsung LSI
Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end

    artifact 681015 "SessionNotifier"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1159991 // SessionNotifier
      end
      comment "Copyright (c) 2008-2009, Motorola, Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

- Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

- Neither the name of the Motorola, Inc. nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE."
    end
  end
end
