class StdTypeList
!!!1027639.java!!!	make(inout type : Type) : StdTypeList
        StdTypeList result = new StdTypeList(1);
        result.set(0, type);
        return result;
!!!1027767.java!!!	make(inout type0 : Type, inout type1 : Type) : StdTypeList
        StdTypeList result = new StdTypeList(2);
        result.set(0, type0);
        result.set(1, type1);
        return result;
!!!1027895.java!!!	make(inout type0 : Type, inout type1 : Type, inout type2 : Type) : StdTypeList
        StdTypeList result = new StdTypeList(3);
        result.set(0, type0);
        result.set(1, type1);
        result.set(2, type2);
        return result;
!!!1028023.java!!!	make(inout type0 : Type, inout type1 : Type, inout type2 : Type, inout type3 : Type) : StdTypeList
        StdTypeList result = new StdTypeList(4);
        result.set(0, type0);
        result.set(1, type1);
        result.set(2, type2);
        result.set(3, type3);
        return result;
!!!1028151.java!!!	toHuman(inout list : TypeList) : String
        int size = list.size();

        if (size == 0) {
            return "<empty>";
        }

        StringBuffer sb = new StringBuffer(100);

        for (int i = 0; i < size; i++) {
            if (i != 0) {
                sb.append(", ");
            }
            sb.append(list.getType(i).toHuman());
        }

        return sb.toString();
!!!1028279.java!!!	hashContents(inout list : TypeList) : int
        int size = list.size();
        int hash = 0;

        for (int i = 0; i < size; i++) {
            hash = (hash * 31) + list.getType(i).hashCode();
        }

        return hash;
!!!1028407.java!!!	equalContents(inout list1 : TypeList, inout list2 : TypeList) : boolean
        int size = list1.size();

        if (list2.size() != size) {
            return false;
        }

        for (int i = 0; i < size; i++) {
            if (! list1.getType(i).equals(list2.getType(i))) {
                return false;
            }
        }

        return true;
!!!1028535.java!!!	compareContents(inout list1 : TypeList, inout list2 : TypeList) : int
        int size1 = list1.size();
        int size2 = list2.size();
        int size = Math.min(size1, size2);

        for (int i = 0; i < size; i++) {
            int comparison = list1.getType(i).compareTo(list2.getType(i));
            if (comparison != 0) {
                return comparison;
            }
        }

        if (size1 == size2) {
            return 0;
        } else if (size1 < size2) {
            return -1;
        } else {
            return 1;
        }
!!!1028663.java!!!	StdTypeList(in size : int)
        super(size);
!!!1028791.java!!!	getType(in n : int) : Type
        return get(n);
!!!1028919.java!!!	getWordCount() : int
        int sz = size();
        int result = 0;

        for (int i = 0; i < sz; i++) {
            result += get(i).getCategory();
        }

        return result;
!!!1029047.java!!!	withAddedType(inout type : Type) : TypeList
        int sz = size();
        StdTypeList result = new StdTypeList(sz + 1);

        for (int i = 0; i < sz; i++) {
            result.set0(i, get0(i));
        }

        result.set(sz, type);
        result.setImmutable();
        return result;
!!!1029175.java!!!	get(in n : int) : Type
        return (Type) get0(n);
!!!1029303.java!!!	set(in n : int, inout type : Type) : void
        set0(n, type);
!!!1029431.java!!!	withFirst(inout type : Type) : StdTypeList
        int sz = size();
        StdTypeList result = new StdTypeList(sz + 1);

        result.set0(0, type);
        for (int i = 0; i < sz; i++) {
            result.set0(i + 1, getOrNull0(i));
        }

        return result;
