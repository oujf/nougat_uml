class Item
!!!718007.java!!!	Item(in startPc : int, in length : int, inout name : CstString, inout descriptor : CstString, inout signature : CstString, in index : int)
            if (startPc < 0) {
                throw new IllegalArgumentException("startPc < 0");
            }

            if (length < 0) {
                throw new IllegalArgumentException("length < 0");
            }

            if (name == null) {
                throw new NullPointerException("name == null");
            }

            if ((descriptor == null) && (signature == null)) {
                throw new NullPointerException(
                        "(descriptor == null) && (signature == null)");
            }

            if (index < 0) {
                throw new IllegalArgumentException("index < 0");
            }

            this.startPc = startPc;
            this.length = length;
            this.name = name;
            this.descriptor = descriptor;
            this.signature = signature;
            this.index = index;
!!!718135.java!!!	getStartPc() : int
            return startPc;
!!!718263.java!!!	getLength() : int
            return length;
!!!718391.java!!!	getDescriptor() : CstString
            return descriptor;
!!!718519.java!!!	getLocalItem() : LocalItem
            return LocalItem.make(name, signature);
!!!718647.java!!!	getSignature() : CstString
            return signature;
!!!718775.java!!!	getIndex() : int
            return index;
!!!718903.java!!!	getType() : Type
            return Type.intern(descriptor.getString());
!!!719031.java!!!	withSignature(inout newSignature : CstString) : LocalVariableList::Item
            return new Item(startPc, length, name, descriptor, newSignature,
                    index);
!!!719159.java!!!	matchesPcAndIndex(in pc : int, in index : int) : boolean
            return (index == this.index) &&
                (pc >= startPc) &&
                (pc < (startPc + length));
!!!719287.java!!!	matchesAllButType(inout other : LocalVariableList::Item) : boolean
            return (startPc == other.startPc)
                && (length == other.length)
                && (index == other.index)
                && name.equals(other.name);
