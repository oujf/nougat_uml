class MonthViewTouchHelper
!!!36606263.java!!!	MonthViewTouchHelper(inout host : View)
            super(host);
!!!36606391.java!!!	setFocusedVirtualView(in virtualViewId : int) : void
            getAccessibilityNodeProvider(MonthView.this).performAction(
                    virtualViewId, AccessibilityNodeInfoCompat.ACTION_ACCESSIBILITY_FOCUS, null);
!!!36606519.java!!!	clearFocusedVirtualView() : void
            final int focusedVirtualView = getFocusedVirtualView();
            if (focusedVirtualView != ExploreByTouchHelper.INVALID_ID) {
                getAccessibilityNodeProvider(MonthView.this).performAction(
                        focusedVirtualView,
                        AccessibilityNodeInfoCompat.ACTION_CLEAR_ACCESSIBILITY_FOCUS,
                        null);
            }
!!!36606647.java!!!	getVirtualViewAt(in x : float, in y : float) : int
            final int day = getDayFromLocation(x, y);
            if (day >= 0) {
                return day;
            }
            return ExploreByTouchHelper.INVALID_ID;
!!!36606775.java!!!	getVisibleVirtualViews(inout virtualViewIds : List<Integer>) : void
            for (int day = 1; day <= mNumCells; day++) {
                virtualViewIds.add(day);
            }
!!!36606903.java!!!	onPopulateEventForVirtualView(in virtualViewId : int, inout event : AccessibilityEvent) : void
            event.setContentDescription(getItemDescription(virtualViewId));
!!!36607031.java!!!	onPopulateNodeForVirtualView(in virtualViewId : int, inout node : AccessibilityNodeInfoCompat) : void
            getItemBounds(virtualViewId, mTempRect);

            node.setContentDescription(getItemDescription(virtualViewId));
            node.setBoundsInParent(mTempRect);
            node.addAction(AccessibilityNodeInfo.ACTION_CLICK);

            if (virtualViewId == mSelectedDay) {
                node.setSelected(true);
            }

!!!36607159.java!!!	onPerformActionForVirtualView(in virtualViewId : int, in action : int, inout arguments : Bundle) : boolean
            switch (action) {
                case AccessibilityNodeInfo.ACTION_CLICK:
                    onDayClick(virtualViewId);
                    return true;
            }

            return false;
!!!36607287.java!!!	getItemBounds(in day : int, inout rect : Rect) : void
            final int offsetX = mEdgePadding;
            final int offsetY = getMonthHeaderSize();
            final int cellHeight = mRowHeight;
            final int cellWidth = ((mWidth - (2 * mEdgePadding)) / mNumDays);
            final int index = ((day - 1) + findDayOffset());
            final int row = (index / mNumDays);
            final int column = (index % mNumDays);
            final int x = (offsetX + (column * cellWidth));
            final int y = (offsetY + (row * cellHeight));

            rect.set(x, y, (x + cellWidth), (y + cellHeight));
!!!36607415.java!!!	getItemDescription(in day : int) : CharSequence
            mTempCalendar.set(mYear, mMonth, day);
            final CharSequence date = DateFormat.format(DATE_FORMAT,
                    mTempCalendar.getTimeInMillis());

            if (day == mSelectedDay) {
                return getContext().getString(R.string.item_is_selected, date);
            }

            return date;
