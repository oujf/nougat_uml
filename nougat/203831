format 76
"view" // nougat_src::frameworks::base::core::java::android::support::v4::view
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/support/v4/java/android/support/v4/view/"
  java_package "android.support.v4.view"
  classview 195383 "view"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1175223 "AbsSavedState"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@link Parcelable} implementation that should be used by inheritance
hierarchies to ensure the state of all classes along the chain is saved."
      classrelation 3399735 // <realization>
	relation 3399735 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3399735 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 3399863 // EMPTY_STATE (<unidirectional association>)
	relation 3399863 --->
	  a role_name "EMPTY_STATE" init_value " new AbsSavedState() {}" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3399863 // EMPTY_STATE (<unidirectional association>)
	  b parent class_ref 1175223 // AbsSavedState
      end

      classrelation 3399991 // mSuperState (<unidirectional association>)
	relation 3399991 --->
	  a role_name "mSuperState" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3399991 // mSuperState (<unidirectional association>)
	  b parent class_ref 137399 // Parcelable
      end

      operation 29554999 "AbsSavedState"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor used to make the EMPTY_STATE singleton"
      end

      operation 29555127 "AbsSavedState"
	protected explicit_return_type ""
	nparams 1
	  param inout name "superState" type class_ref 137399 // Parcelable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor called by derived classes when creating their SavedState objects

@param superState The state of the superclass of this view"
      end

      operation 29555255 "AbsSavedState"
	protected explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor used when reading from a parcel. Reads the state of the superclass.

@param source parcel to read from"
      end

      operation 29555383 "AbsSavedState"
	protected explicit_return_type ""
	nparams 2
	  param inout name "source" type class_ref 137527 // Parcel
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor used when reading from a parcel. Reads the state of the superclass.

@param source parcel to read from
@param loader ClassLoader to use for reading"
      end

      operation 29555511 "getSuperState"
	public return_type class_ref 137399 // Parcelable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29555639 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 29555767 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3400119 // CREATOR (<unidirectional association>)
	relation 3400119 --->
	  a role_name "CREATOR" init_value " ParcelableCompat.newCreator(new ParcelableCompatCreatorCallbacks<AbsSavedState>() {
        @Override
        public AbsSavedState createFromParcel(Parcel in, ClassLoader loader) {
            Parcelable superState = in.readParcelable(loader);
            if (superState != null) {
                throw new IllegalStateException(\"superState must be null\");
            }
            return EMPTY_STATE;
        }

        @Override
        public AbsSavedState[] newArray(int size) {
            return new AbsSavedState[size];
        }
    })" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AbsSavedState> ${name}${value};
"
	    classrelation_ref 3400119 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end

    class 1181623 "ScrollingView"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An interface that can be implemented by Views to provide scroll related APIs."
      operation 29594423 "computeHorizontalScrollRange"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Compute the horizontal range that the horizontal scrollbar
represents.</p>

<p>The range is expressed in arbitrary units that must be the same as the
units used by {@link #computeHorizontalScrollExtent()} and
{@link #computeHorizontalScrollOffset()}.</p>

<p>The default range is the drawing width of this view.</p>

@return the total horizontal range represented by the horizontal
        scrollbar

@see #computeHorizontalScrollExtent()
@see #computeHorizontalScrollOffset()
@see android.widget.ScrollBarDrawable"
      end

      operation 29594551 "computeHorizontalScrollOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Compute the horizontal offset of the horizontal scrollbar's thumb
within the horizontal range. This value is used to compute the position
of the thumb within the scrollbar's track.</p>

<p>The range is expressed in arbitrary units that must be the same as the
units used by {@link #computeHorizontalScrollRange()} and
{@link #computeHorizontalScrollExtent()}.</p>

<p>The default offset is the scroll offset of this view.</p>

@return the horizontal offset of the scrollbar's thumb

@see #computeHorizontalScrollRange()
@see #computeHorizontalScrollExtent()
@see android.widget.ScrollBarDrawable"
      end

      operation 29594679 "computeHorizontalScrollExtent"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Compute the horizontal extent of the horizontal scrollbar's thumb
within the horizontal range. This value is used to compute the length
of the thumb within the scrollbar's track.</p>

<p>The range is expressed in arbitrary units that must be the same as the
units used by {@link #computeHorizontalScrollRange()} and
{@link #computeHorizontalScrollOffset()}.</p>

<p>The default extent is the drawing width of this view.</p>

@return the horizontal extent of the scrollbar's thumb

@see #computeHorizontalScrollRange()
@see #computeHorizontalScrollOffset()
@see android.widget.ScrollBarDrawable"
      end

      operation 29594807 "computeVerticalScrollRange"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Compute the vertical range that the vertical scrollbar represents.</p>

<p>The range is expressed in arbitrary units that must be the same as the
units used by {@link #computeVerticalScrollExtent()} and
{@link #computeVerticalScrollOffset()}.</p>

@return the total vertical range represented by the vertical scrollbar

<p>The default range is the drawing height of this view.</p>

@see #computeVerticalScrollExtent()
@see #computeVerticalScrollOffset()
@see android.widget.ScrollBarDrawable"
      end

      operation 29594935 "computeVerticalScrollOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Compute the vertical offset of the vertical scrollbar's thumb
within the horizontal range. This value is used to compute the position
of the thumb within the scrollbar's track.</p>

<p>The range is expressed in arbitrary units that must be the same as the
units used by {@link #computeVerticalScrollRange()} and
{@link #computeVerticalScrollExtent()}.</p>

<p>The default offset is the scroll offset of this view.</p>

@return the vertical offset of the scrollbar's thumb

@see #computeVerticalScrollRange()
@see #computeVerticalScrollExtent()
@see android.widget.ScrollBarDrawable"
      end

      operation 29595063 "computeVerticalScrollExtent"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Compute the vertical extent of the vertical scrollbar's thumb
within the vertical range. This value is used to compute the length
of the thumb within the scrollbar's track.</p>

<p>The range is expressed in arbitrary units that must be the same as the
units used by {@link #computeVerticalScrollRange()} and
{@link #computeVerticalScrollOffset()}.</p>

<p>The default extent is the drawing height of this view.</p>

@return the vertical extent of the scrollbar's thumb

@see #computeVerticalScrollRange()
@see #computeVerticalScrollOffset()
@see android.widget.ScrollBarDrawable"
      end
    end

    class 1181751 "NestedScrollingChild"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface should be implemented by {@link android.view.View View} subclasses that wish
to support dispatching nested scrolling operations to a cooperating parent
{@link android.view.ViewGroup ViewGroup}.

<p>Classes implementing this interface should create a final instance of a
{@link NestedScrollingChildHelper} as a field and delegate any View methods to the
<code>NestedScrollingChildHelper</code> methods of the same signature.</p>

<p>Views invoking nested scrolling functionality should always do so from the relevant
{@link ViewCompat}, {@link ViewGroupCompat} or {@link ViewParentCompat} compatibility
shim static methods. This ensures interoperability with nested scrolling views on Android
5.0 Lollipop and newer.</p>"
      operation 29595191 "setNestedScrollingEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable or disable nested scrolling for this view.

<p>If this property is set to true the view will be permitted to initiate nested
scrolling operations with a compatible parent view in the current hierarchy. If this
view does not implement nested scrolling this will have no effect. Disabling nested scrolling
while a nested scroll is in progress has the effect of {@link #stopNestedScroll() stopping}
the nested scroll.</p>

@param enabled true to enable nested scrolling, false to disable

@see #isNestedScrollingEnabled()"
      end

      operation 29595319 "isNestedScrollingEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if nested scrolling is enabled for this view.

<p>If nested scrolling is enabled and this View class implementation supports it,
this view will act as a nested scrolling child view when applicable, forwarding data
about the scroll operation in progress to a compatible and cooperating nested scrolling
parent.</p>

@return true if nested scrolling is enabled

@see #setNestedScrollingEnabled(boolean)"
      end

      operation 29595447 "startNestedScroll"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "axes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin a nestable scroll operation along the given axes.

<p>A view starting a nested scroll promises to abide by the following contract:</p>

<p>The view will call startNestedScroll upon initiating a scroll operation. In the case
of a touch scroll this corresponds to the initial {@link MotionEvent#ACTION_DOWN}.
In the case of touch scrolling the nested scroll will be terminated automatically in
the same manner as {@link ViewParent#requestDisallowInterceptTouchEvent(boolean)}.
In the event of programmatic scrolling the caller must explicitly call
{@link #stopNestedScroll()} to indicate the end of the nested scroll.</p>

<p>If <code>startNestedScroll</code> returns true, a cooperative parent was found.
If it returns false the caller may ignore the rest of this contract until the next scroll.
Calling startNestedScroll while a nested scroll is already in progress will return true.</p>

<p>At each incremental step of the scroll the caller should invoke
{@link #dispatchNestedPreScroll(int, int, int[], int[]) dispatchNestedPreScroll}
once it has calculated the requested scrolling delta. If it returns true the nested scrolling
parent at least partially consumed the scroll and the caller should adjust the amount it
scrolls by.</p>

<p>After applying the remainder of the scroll delta the caller should invoke
{@link #dispatchNestedScroll(int, int, int, int, int[]) dispatchNestedScroll}, passing
both the delta consumed and the delta unconsumed. A nested scrolling parent may treat
these values differently. See
{@link NestedScrollingParent#onNestedScroll(View, int, int, int, int)}.
</p>

@param axes Flags consisting of a combination of {@link ViewCompat#SCROLL_AXIS_HORIZONTAL}
            and/or {@link ViewCompat#SCROLL_AXIS_VERTICAL}.
@return true if a cooperative parent was found and nested scrolling has been enabled for
        the current gesture.

@see #stopNestedScroll()
@see #dispatchNestedPreScroll(int, int, int[], int[])
@see #dispatchNestedScroll(int, int, int, int, int[])"
      end

      operation 29595575 "stopNestedScroll"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stop a nested scroll in progress.

<p>Calling this method when a nested scroll is not currently in progress is harmless.</p>

@see #startNestedScroll(int)"
      end

      operation 29595703 "hasNestedScrollingParent"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this view has a nested scrolling parent.

<p>The presence of a nested scrolling parent indicates that this view has initiated
a nested scroll and it was accepted by an ancestor view further up the view hierarchy.</p>

@return whether this view has a nested scrolling parent"
      end

      operation 29595831 "dispatchNestedScroll"
	public explicit_return_type "boolean"
	nparams 5
	  param in name "dxConsumed" explicit_type "int"
	  param in name "dyConsumed" explicit_type "int"
	  param in name "dxUnconsumed" explicit_type "int"
	  param in name "dyUnconsumed" explicit_type "int"
	  param inout name "offsetInWindow" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatch one step of a nested scroll in progress.

<p>Implementations of views that support nested scrolling should call this to report
info about a scroll in progress to the current nested scrolling parent. If a nested scroll
is not currently in progress or nested scrolling is not
{@link #isNestedScrollingEnabled() enabled} for this view this method does nothing.</p>

<p>Compatible View implementations should also call
{@link #dispatchNestedPreScroll(int, int, int[], int[]) dispatchNestedPreScroll} before
consuming a component of the scroll event themselves.</p>

@param dxConsumed Horizontal distance in pixels consumed by this view during this scroll step
@param dyConsumed Vertical distance in pixels consumed by this view during this scroll step
@param dxUnconsumed Horizontal scroll distance in pixels not consumed by this view
@param dyUnconsumed Horizontal scroll distance in pixels not consumed by this view
@param offsetInWindow Optional. If not null, on return this will contain the offset
                      in local view coordinates of this view from before this operation
                      to after it completes. View implementations may use this to adjust
                      expected input coordinate tracking.
@return true if the event was dispatched, false if it could not be dispatched.
@see #dispatchNestedPreScroll(int, int, int[], int[])"
      end

      operation 29595959 "dispatchNestedPreScroll"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	  param inout name "consumed" explicit_type "int"
	  param inout name "offsetInWindow" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatch one step of a nested scroll in progress before this view consumes any portion of it.

<p>Nested pre-scroll events are to nested scroll events what touch intercept is to touch.
<code>dispatchNestedPreScroll</code> offers an opportunity for the parent view in a nested
scrolling operation to consume some or all of the scroll operation before the child view
consumes it.</p>

@param dx Horizontal scroll distance in pixels
@param dy Vertical scroll distance in pixels
@param consumed Output. If not null, consumed[0] will contain the consumed component of dx
                and consumed[1] the consumed dy.
@param offsetInWindow Optional. If not null, on return this will contain the offset
                      in local view coordinates of this view from before this operation
                      to after it completes. View implementations may use this to adjust
                      expected input coordinate tracking.
@return true if the parent consumed some or all of the scroll delta
@see #dispatchNestedScroll(int, int, int, int, int[])"
      end

      operation 29596087 "dispatchNestedFling"
	public explicit_return_type "boolean"
	nparams 3
	  param in name "velocityX" explicit_type "float"
	  param in name "velocityY" explicit_type "float"
	  param inout name "consumed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatch a fling to a nested scrolling parent.

<p>This method should be used to indicate that a nested scrolling child has detected
suitable conditions for a fling. Generally this means that a touch scroll has ended with a
{@link VelocityTracker velocity} in the direction of scrolling that meets or exceeds
the {@link ViewConfiguration#getScaledMinimumFlingVelocity() minimum fling velocity}
along a scrollable axis.</p>

<p>If a nested scrolling child view would normally fling but it is at the edge of
its own content, it can use this method to delegate the fling to its nested scrolling
parent instead. The parent may optionally consume the fling or observe a child fling.</p>

@param velocityX Horizontal fling velocity in pixels per second
@param velocityY Vertical fling velocity in pixels per second
@param consumed true if the child consumed the fling, false otherwise
@return true if the nested scrolling parent consumed or otherwise reacted to the fling"
      end

      operation 29596215 "dispatchNestedPreFling"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "velocityX" explicit_type "float"
	  param in name "velocityY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatch a fling to a nested scrolling parent before it is processed by this view.

<p>Nested pre-fling events are to nested fling events what touch intercept is to touch
and what nested pre-scroll is to nested scroll. <code>dispatchNestedPreFling</code>
offsets an opportunity for the parent view in a nested fling to fully consume the fling
before the child view consumes it. If this method returns <code>true</code>, a nested
parent view consumed the fling and this view should not scroll as a result.</p>

<p>For a better user experience, only one view in a nested scrolling chain should consume
the fling at a time. If a parent view consumed the fling this method will return false.
Custom view implementations should account for this in two ways:</p>

<ul>
    <li>If a custom view is paged and needs to settle to a fixed page-point, do not
    call <code>dispatchNestedPreFling</code>; consume the fling and settle to a valid
    position regardless.</li>
    <li>If a nested parent does consume the fling, this view should not scroll at all,
    even to settle back to a valid idle position.</li>
</ul>

<p>Views should also not offer fling velocities to nested parent views along an axis
where scrolling is not currently supported; a {@link android.widget.ScrollView ScrollView}
should not offer a horizontal fling velocity to its parents since scrolling along that
axis is not permitted and carrying velocity along that motion does not make sense.</p>

@param velocityX Horizontal fling velocity in pixels per second
@param velocityY Vertical fling velocity in pixels per second
@return true if a nested scrolling parent consumed the fling"
      end
    end

    class 1184311 "NestedScrollingChildHelper"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 1195063 "ViewPropertyAnimatorListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>An animation listener receives notifications from an animation.
Notifications indicate animation related events, such as the end or the
start of the animation.</p>"
      operation 29728567 "onAnimationStart"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Notifies the start of the animation.</p>

@param view The view associated with the ViewPropertyAnimator"
      end

      operation 29728695 "onAnimationEnd"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Notifies the end of the animation. This callback is not invoked
for animations with repeat count set to INFINITE.</p>

@param view The view associated with the ViewPropertyAnimator"
      end

      operation 29728823 "onAnimationCancel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Notifies the cancellation of the animation. This callback is not invoked
for animations with repeat count set to INFINITE.</p>

@param view The view associated with the ViewPropertyAnimator"
      end
    end

    class 1316151 "ViewPager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Layout manager that allows the user to flip left and right
through pages of data.  You supply an implementation of a
{@link PagerAdapter} to generate the pages that the view shows.

<p>ViewPager is most often used in conjunction with {@link android.app.Fragment},
which is a convenient way to supply and manage the lifecycle of each page.
There are standard adapters implemented for using fragments with the ViewPager,
which cover the most common use cases.  These are
{@link android.support.v4.app.FragmentPagerAdapter} and
{@link android.support.v4.app.FragmentStatePagerAdapter}; each of these
classes have simple code showing how to build a full user interface
with them.

<p>Views which are annotated with the {@link DecorView} annotation are treated as
part of the view pagers 'decor'. Each decor view's position can be controlled via
its {@code android:layout_gravity} attribute. For example:

<pre>
&lt;android.support.v4.view.ViewPager
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;&gt;

    &lt;android.support.v4.view.PagerTitleStrip
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;top&quot; /&gt;

&lt;/android.support.v4.view.ViewPager&gt;
</pre>

<p>For more information about how to use ViewPager, read <a
href=\"{@docRoot}training/implementing-navigation/lateral.html\">Creating Swipe Views with
Tabs</a>.</p>

<p>Below is a more complicated example of ViewPager, using it in conjunction
with {@link android.app.ActionBar} tabs.  You can find other examples of using
ViewPager in the API 4+ Support Demos and API 13+ Support Demos sample code.

{@sample development/samples/Support13Demos/src/com/example/android/supportv13/app/ActionBarTabsPager.java
     complete}"
      classrelation 3878071 // <generalisation>
	relation 3878071 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3878071 // <generalisation>
	  b parent class_ref 134711 // ViewGroup
      end

      classrelation 3878199 // TAG (<unidirectional association>)
	relation 3878199 --->
	  a role_name "TAG" init_value " \"ViewPager\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3878199 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 4346935 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4347063 "USE_CACHE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4347191 "DEFAULT_OFFSCREEN_PAGES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4347319 "MAX_SETTLE_DURATION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 600"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ms"
      end

      attribute 4347447 "MIN_DISTANCE_FOR_FLING"
	class_attribute const_attribute private explicit_type "int"
	init_value " 25"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " dips"
      end

      attribute 4347575 "DEFAULT_GUTTER_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " dips"
      end

      attribute 4347703 "MIN_FLING_VELOCITY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " dips"
      end

      attribute 4347831 "LAYOUT_ATTRS"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[] {
        android.R.attr.layout_gravity
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4347959 "mExpectedAdapterCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to track what the expected number of items in the adapter should be.
If the app changes this when we don't expect it, we'll throw a big obnoxious exception.
"
      end

      class 1316279 "ItemInfo"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3878327 // object (<unidirectional association>)
	  relation 3878327 --->
	    a role_name "object" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3878327 // object (<unidirectional association>)
	    b parent class_ref 132663 // Object
	end

	attribute 4348087 "position"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 4348215 "scrolling"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 4348343 "widthFactor"
	  package explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 4348471 "offset"
	  package explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 3878455 // COMPARATOR (<unidirectional association>)
	relation 3878455 --->
	  stereotype "Comparator"
	  a role_name "COMPARATOR" init_value " new Comparator<ItemInfo>(){
        @Override
        public int compare(ItemInfo lhs, ItemInfo rhs) {
            return lhs.position - rhs.position;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 3878455 // COMPARATOR (<unidirectional association>)
	  b parent class_ref 1316279 // ItemInfo
      end

      classrelation 3878583 // sInterpolator (<unidirectional association>)
	relation 3878583 --->
	  a role_name "sInterpolator" init_value " new Interpolator() {
        public float getInterpolation(float t) {
            t -= 1.0f;
            return t * t * t * t * t + 1.0f;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3878583 // sInterpolator (<unidirectional association>)
	  b parent class_ref 371511 // Interpolator
      end

      classrelation 3878711 // mItems (<unidirectional association>)
	relation 3878711 --->
	  stereotype "ArrayList"
	  a role_name "mItems" init_value " new ArrayList<ItemInfo>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 3878711 // mItems (<unidirectional association>)
	  b parent class_ref 1316279 // ItemInfo
      end

      classrelation 3878839 // mTempItem (<unidirectional association>)
	relation 3878839 --->
	  a role_name "mTempItem" init_value " new ItemInfo()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3878839 // mTempItem (<unidirectional association>)
	  b parent class_ref 1316279 // ItemInfo
      end

      classrelation 3878967 // mTempRect (<unidirectional association>)
	relation 3878967 --->
	  a role_name "mTempRect" init_value " new Rect()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3878967 // mTempRect (<unidirectional association>)
	  b parent class_ref 135351 // Rect
      end

      classrelation 3879095 // mAdapter (<unidirectional association>)
	relation 3879095 --->
	  a role_name "mAdapter" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3879095 // mAdapter (<unidirectional association>)
	  b parent class_ref 1316407 // PagerAdapter
      end

      attribute 4348599 "mCurItem"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Index of currently displayed page."
      end

      attribute 4348727 "mRestoredCurItem"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3879223 // mRestoredAdapterState (<unidirectional association>)
	relation 3879223 --->
	  a role_name "mRestoredAdapterState" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3879223 // mRestoredAdapterState (<unidirectional association>)
	  b parent class_ref 137399 // Parcelable
      end

      attribute 4348855 "mRestoredClassLoader"
	private explicit_type "ClassLoader"
	init_value " null"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3879351 // mScroller (<unidirectional association>)
	relation 3879351 --->
	  a role_name "mScroller" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3879351 // mScroller (<unidirectional association>)
	  b parent class_ref 272311 // Scroller
      end

      attribute 4348983 "mIsScrollStarted"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 1316535 "PagerObserver"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3882423 // <generalisation>
	  relation 3882423 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 3882423 // <generalisation>
	    b parent class_ref 311735 // DataSetObserver
	end

	operation 30586039 "onChanged"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30586167 "onInvalidated"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 3879479 // mObserver (<unidirectional association>)
	relation 3879479 --->
	  a role_name "mObserver" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3879479 // mObserver (<unidirectional association>)
	  b parent class_ref 1316535 // PagerObserver
      end

      attribute 4349111 "mPageMargin"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3879607 // mMarginDrawable (<unidirectional association>)
	relation 3879607 --->
	  a role_name "mMarginDrawable" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3879607 // mMarginDrawable (<unidirectional association>)
	  b parent class_ref 129719 // Drawable
      end

      attribute 4349239 "mTopPageBounds"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4349367 "mBottomPageBounds"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4349495 "mFirstOffset"
	private explicit_type "float"
	init_value " -Float.MAX_VALUE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Offsets of the first and last items, if known.
 Set during population, used to determine if we are at the beginning
 or end of the pager data set during touch scrolling."
      end

      attribute 4349623 "mLastOffset"
	private explicit_type "float"
	init_value " Float.MAX_VALUE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4349751 "mChildWidthMeasureSpec"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4349879 "mChildHeightMeasureSpec"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4350007 "mInLayout"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4350135 "mScrollingCacheEnabled"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4350263 "mPopulatePending"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4350391 "mOffscreenPageLimit"
	private explicit_type "int"
	init_value " DEFAULT_OFFSCREEN_PAGES"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4350519 "mIsBeingDragged"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4350647 "mIsUnableToDrag"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4350775 "mDefaultGutterSize"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4350903 "mGutterSize"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4351031 "mTouchSlop"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4351159 "mLastMotionX"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Position of the last motion event.
"
      end

      attribute 4351287 "mLastMotionY"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4351415 "mInitialMotionX"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4351543 "mInitialMotionY"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4351671 "mActivePointerId"
	private explicit_type "int"
	init_value " INVALID_POINTER"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "ID of the active pointer. This is used to retain consistency during
drags/flings if multiple pointers are used.
"
      end

      attribute 4351799 "INVALID_POINTER"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sentinel value for no current active pointer.
Used by {@link #mActivePointerId}.
"
      end

      classrelation 3879735 // mVelocityTracker (<unidirectional association>)
	relation 3879735 --->
	  a role_name "mVelocityTracker" private
	    comment "
Determines speed during touch scrolling

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3879735 // mVelocityTracker (<unidirectional association>)
	  b parent class_ref 369975 // VelocityTracker
      end

      attribute 4351927 "mMinimumVelocity"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4352055 "mMaximumVelocity"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4352183 "mFlingDistance"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4352311 "mCloseEnough"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4352439 "CLOSE_ENOUGH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If the pager is at least this close to its final position, complete the scroll
 on touch down and let the user interact with the content inside instead of
 \"catching\" the flinging pager.
 dp"
      end

      attribute 4352567 "mFakeDragging"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4352695 "mFakeDragBeginTime"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3879863 // mLeftEdge (<unidirectional association>)
	relation 3879863 --->
	  a role_name "mLeftEdge" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3879863 // mLeftEdge (<unidirectional association>)
	  b parent class_ref 1183287 // EdgeEffectCompat
      end

      classrelation 3879991 // mRightEdge (<unidirectional association>)
	relation 3879991 --->
	  a role_name "mRightEdge" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3879991 // mRightEdge (<unidirectional association>)
	  b parent class_ref 1183287 // EdgeEffectCompat
      end

      attribute 4352823 "mFirstLayout"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4352951 "mNeedCalculatePageOffsets"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4353079 "mCalledSuper"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4353207 "mDecorChildCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 1316663 "OnPageChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 30565943 "onPageScrolled"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "position" explicit_type "int"
	    param in name "positionOffset" explicit_type "float"
	    param in name "positionOffsetPixels" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when the current page is scrolled, either as part
of a programmatically initiated smooth scroll or a user initiated touch scroll.

@param position Position index of the first page currently being displayed.
                Page position+1 will be visible if positionOffset is nonzero.
@param positionOffset Value from [0, 1) indicating the offset from the page at position.
@param positionOffsetPixels Value in pixels indicating the offset from position."
	end

	operation 30566071 "onPageSelected"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when a new page becomes selected. Animation is not
necessarily complete.

@param position Position index of the new selected page."
	end

	operation 30566199 "onPageScrollStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "state" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the scroll state changes. Useful for discovering when the user
begins dragging, when the pager is automatically settling to the current page,
or when it is fully stopped/idle.

@param state The new scroll state.
@see ViewPager#SCROLL_STATE_IDLE
@see ViewPager#SCROLL_STATE_DRAGGING
@see ViewPager#SCROLL_STATE_SETTLING"
	end
      end

      classrelation 3880119 // mOnPageChangeListeners (<unidirectional association>)
	relation 3880119 --->
	  stereotype "List"
	  a role_name "mOnPageChangeListeners" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 3880119 // mOnPageChangeListeners (<unidirectional association>)
	  b parent class_ref 1316663 // OnPageChangeListener
      end

      classrelation 3880247 // mOnPageChangeListener (<unidirectional association>)
	relation 3880247 --->
	  a role_name "mOnPageChangeListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3880247 // mOnPageChangeListener (<unidirectional association>)
	  b parent class_ref 1316663 // OnPageChangeListener
      end

      classrelation 3880375 // mInternalPageChangeListener (<unidirectional association>)
	relation 3880375 --->
	  a role_name "mInternalPageChangeListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3880375 // mInternalPageChangeListener (<unidirectional association>)
	  b parent class_ref 1316663 // OnPageChangeListener
      end

      class 1316791 "OnAdapterChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 30566839 "onAdapterChanged"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "viewPager" type class_ref 1316151 // ViewPager
	    param inout name "oldAdapter" type class_ref 1316407 // PagerAdapter
	    param inout name "newAdapter" type class_ref 1316407 // PagerAdapter
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the adapter for the given view pager has changed.

@param viewPager  ViewPager where the adapter change has happened
@param oldAdapter the previously set adapter
@param newAdapter the newly set adapter"
	end
      end

      classrelation 3880503 // mAdapterChangeListeners (<unidirectional association>)
	relation 3880503 --->
	  stereotype "List"
	  a role_name "mAdapterChangeListeners" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 3880503 // mAdapterChangeListeners (<unidirectional association>)
	  b parent class_ref 1316791 // OnAdapterChangeListener
      end

      class 1316919 "PageTransformer"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 30566711 "transformPage"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "page" type class_ref 134455 // View
	    param in name "position" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Apply a property transformation to the given page.

@param page Apply the transformation to this page
@param position Position of page relative to the current front-and-center
                position of the pager. 0 is front and center. 1 is one full
                page position to the right, and -1 is one page position to the left."
	end
      end

      classrelation 3880631 // mPageTransformer (<unidirectional association>)
	relation 3880631 --->
	  a role_name "mPageTransformer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3880631 // mPageTransformer (<unidirectional association>)
	  b parent class_ref 1316919 // PageTransformer
      end

      attribute 4353335 "mSetChildrenDrawingOrderEnabled"
	private explicit_type "Method"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4353463 "DRAW_ORDER_DEFAULT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4353591 "DRAW_ORDER_FORWARD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4353719 "DRAW_ORDER_REVERSE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4353847 "mDrawingOrder"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3880759 // mDrawingOrderedChildren (<unidirectional association>)
	relation 3880759 --->
	  stereotype "ArrayList"
	  a role_name "mDrawingOrderedChildren" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 3880759 // mDrawingOrderedChildren (<unidirectional association>)
	  b parent class_ref 134455 // View
      end

      class 1317047 "ViewPositionComparator"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 3880887 // sPositionComparator (<unidirectional association>)
	relation 3880887 --->
	  a role_name "sPositionComparator" init_value " new ViewPositionComparator()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3880887 // sPositionComparator (<unidirectional association>)
	  b parent class_ref 1317047 // ViewPositionComparator
      end

      attribute 4353975 "SCROLL_STATE_IDLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that the pager is in an idle, settled state. The current page
is fully in view and no animation is in progress.
"
      end

      attribute 4354103 "SCROLL_STATE_DRAGGING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that the pager is currently being dragged by the user.
"
      end

      attribute 4354231 "SCROLL_STATE_SETTLING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that the pager is in the process of settling to a final position.
"
      end

      attribute 4354359 "mEndScrollRunnable"
	const_attribute private explicit_type "Runnable"
	init_value " new Runnable() {
        public void run() {
            setScrollState(SCROLL_STATE_IDLE);
            populate();
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4354487 "mScrollState"
	private explicit_type "int"
	init_value " SCROLL_STATE_IDLE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 1317175 "SimpleOnPageChangeListener"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3881015 // <realization>
	  relation 3881015 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 3881015 // <realization>
	    b parent class_ref 1316663 // OnPageChangeListener
	end

	operation 30566327 "onPageScrolled"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "position" explicit_type "int"
	    param in name "positionOffset" explicit_type "float"
	    param in name "positionOffsetPixels" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30566455 "onPageSelected"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "position" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30566583 "onPageScrollStateChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "state" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1317303 "DecorView"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 30566967 "ViewPager"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30567095 "ViewPager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "attrs" type class_ref 130359 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30567223 "initViewPager"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30567351 "onDetachedFromWindow"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30567479 "setScrollState"
	private explicit_return_type "void"
	nparams 1
	  param in name "newState" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30567607 "setAdapter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "adapter" type class_ref 1316407 // PagerAdapter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a PagerAdapter that will supply views for this pager as needed.

@param adapter Adapter to use"
      end

      operation 30567735 "removeNonDecorViews"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30567863 "getAdapter"
	public return_type class_ref 1316407 // PagerAdapter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the current adapter supplying pages.

@return The currently registered PagerAdapter"
      end

      operation 30567991 "addOnAdapterChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1316791 // OnAdapterChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a listener that will be invoked whenever the adapter for this ViewPager changes.

@param listener listener to add"
      end

      operation 30568119 "removeOnAdapterChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1316791 // OnAdapterChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a listener that was previously added via
{@link #addOnAdapterChangeListener(OnAdapterChangeListener)}.

@param listener listener to remove"
      end

      operation 30568247 "getClientWidth"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30568375 "setCurrentItem"
	public explicit_return_type "void"
	nparams 1
	  param in name "item" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the currently selected page. If the ViewPager has already been through its first
layout with its current adapter there will be a smooth animated transition between
the current item and the specified item.

@param item Item index to select"
      end

      operation 30568503 "setCurrentItem"
	public explicit_return_type "void"
	nparams 2
	  param in name "item" explicit_type "int"
	  param inout name "smoothScroll" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the currently selected page.

@param item Item index to select
@param smoothScroll True to smoothly scroll to the new item, false to transition immediately"
      end

      operation 30568631 "getCurrentItem"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30568759 "setCurrentItemInternal"
	package explicit_return_type "void"
	nparams 3
	  param in name "item" explicit_type "int"
	  param inout name "smoothScroll" explicit_type "boolean"
	  param inout name "always" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30568887 "setCurrentItemInternal"
	package explicit_return_type "void"
	nparams 4
	  param in name "item" explicit_type "int"
	  param inout name "smoothScroll" explicit_type "boolean"
	  param inout name "always" explicit_type "boolean"
	  param in name "velocity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30569015 "scrollToItem"
	private explicit_return_type "void"
	nparams 4
	  param in name "item" explicit_type "int"
	  param inout name "smoothScroll" explicit_type "boolean"
	  param in name "velocity" explicit_type "int"
	  param inout name "dispatchSelected" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30569143 "setOnPageChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1316663 // OnPageChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Set a listener that will be invoked whenever the page changes or is incrementally
scrolled. See {@link OnPageChangeListener}.

@param listener Listener to set

@deprecated Use {@link #addOnPageChangeListener(OnPageChangeListener)}
and {@link #removeOnPageChangeListener(OnPageChangeListener)} instead."
      end

      operation 30569271 "addOnPageChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1316663 // OnPageChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a listener that will be invoked whenever the page changes or is incrementally
scrolled. See {@link OnPageChangeListener}.

<p>Components that add a listener should take care to remove it when finished.
Other components that take ownership of a view may call {@link #clearOnPageChangeListeners()}
to remove all attached listeners.</p>

@param listener listener to add"
      end

      operation 30569399 "removeOnPageChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1316663 // OnPageChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a listener that was previously added via
{@link #addOnPageChangeListener(OnPageChangeListener)}.

@param listener listener to remove"
      end

      operation 30569527 "clearOnPageChangeListeners"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove all listeners that are notified of any changes in scroll state or position."
      end

      operation 30569655 "setPageTransformer"
	public explicit_return_type "void"
	nparams 2
	  param inout name "reverseDrawingOrder" explicit_type "boolean"
	  param inout name "transformer" type class_ref 1316919 // PageTransformer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a {@link PageTransformer} that will be called for each attached page whenever
the scroll position is changed. This allows the application to apply custom property
transformations to each page, overriding the default sliding look and feel.

<p><em>Note:</em> Prior to Android 3.0 the property animation APIs did not exist.
As a result, setting a PageTransformer prior to Android 3.0 (API 11) will have no effect.</p>

@param reverseDrawingOrder true if the supplied PageTransformer requires page views
                           to be drawn from last to first instead of first to last.
@param transformer PageTransformer that will modify each page's animation properties"
      end

      operation 30569783 "setChildrenDrawingOrderEnabledCompat"
	package explicit_return_type "void"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30569911 "getChildDrawingOrder"
	protected explicit_return_type "int"
	nparams 2
	  param in name "childCount" explicit_type "int"
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30570039 "setInternalPageChangeListener"
	package return_type class_ref 1316663 // OnPageChangeListener
	nparams 1
	  param inout name "listener" type class_ref 1316663 // OnPageChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a separate OnPageChangeListener for internal use by the support library.

@param listener Listener to set
@return The old listener that was set, if any."
      end

      operation 30570167 "getOffscreenPageLimit"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of pages that will be retained to either side of the
current page in the view hierarchy in an idle state. Defaults to 1.

@return How many pages will be kept offscreen on either side
@see #setOffscreenPageLimit(int)"
      end

      operation 30570295 "setOffscreenPageLimit"
	public explicit_return_type "void"
	nparams 1
	  param in name "limit" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the number of pages that should be retained to either side of the
current page in the view hierarchy in an idle state. Pages beyond this
limit will be recreated from the adapter when needed.

<p>This is offered as an optimization. If you know in advance the number
of pages you will need to support or have lazy-loading mechanisms in place
on your pages, tweaking this setting can have benefits in perceived smoothness
of paging animations and interaction. If you have a small number of pages (3-4)
that you can keep active all at once, less time will be spent in layout for
newly created view subtrees as the user pages back and forth.</p>

<p>You should keep this limit low, especially if your pages have complex layouts.
This setting defaults to 1.</p>

@param limit How many pages will be kept offscreen in an idle state."
      end

      operation 30570423 "setPageMargin"
	public explicit_return_type "void"
	nparams 1
	  param in name "marginPixels" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the margin between pages.

@param marginPixels Distance between adjacent pages in pixels
@see #getPageMargin()
@see #setPageMarginDrawable(Drawable)
@see #setPageMarginDrawable(int)"
      end

      operation 30570551 "getPageMargin"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the margin between pages.

@return The size of the margin in pixels"
      end

      operation 30570679 "setPageMarginDrawable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "d" type class_ref 129719 // Drawable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a drawable that will be used to fill the margin between pages.

@param d Drawable to display between pages"
      end

      operation 30570807 "setPageMarginDrawable"
	public explicit_return_type "void"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@DrawableRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a drawable that will be used to fill the margin between pages.

@param resId Resource ID of a drawable to display between pages"
      end

      operation 30570935 "verifyDrawable"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "who" type class_ref 129719 // Drawable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30571063 "drawableStateChanged"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30571191 "distanceInfluenceForSnapDuration"
	package explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " We want the duration of the page snap animation to be influenced by the distance that
 the screen has to travel, however, we don't want this duration to be effected in a
 purely linear fashion. Instead, we use this method to moderate the effect that the distance
 of travel has on the overall snap duration."
      end

      operation 30571319 "smoothScrollTo"
	package explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link View#scrollBy}, but scroll smoothly instead of immediately.

@param x the number of pixels to scroll by on the X axis
@param y the number of pixels to scroll by on the Y axis"
      end

      operation 30571447 "smoothScrollTo"
	package explicit_return_type "void"
	nparams 3
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "velocity" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link View#scrollBy}, but scroll smoothly instead of immediately.

@param x the number of pixels to scroll by on the X axis
@param y the number of pixels to scroll by on the Y axis
@param velocity the velocity associated with a fling, if applicable. (0 otherwise)"
      end

      operation 30571575 "addNewItem"
	package return_type class_ref 1316279 // ItemInfo
	nparams 2
	  param in name "position" explicit_type "int"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30571703 "dataSetChanged"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30571831 "populate"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30571959 "populate"
	package explicit_return_type "void"
	nparams 1
	  param in name "newCurrentItem" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30572087 "sortChildDrawingOrder"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30572215 "calculatePageOffsets"
	private explicit_return_type "void"
	nparams 3
	  param inout name "curItem" type class_ref 1316279 // ItemInfo
	  param in name "curIndex" explicit_type "int"
	  param inout name "oldCurInfo" type class_ref 1316279 // ItemInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1317431 "SavedState"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3881143 // <generalisation>
	  relation 3881143 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 3881143 // <generalisation>
	    b parent class_ref 1175223 // AbsSavedState
	end

	attribute 4354615 "position"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 3881271 // adapterState (<unidirectional association>)
	  relation 3881271 --->
	    a role_name "adapterState" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 3881271 // adapterState (<unidirectional association>)
	    b parent class_ref 137399 // Parcelable
	end

	attribute 4354743 "loader"
	  package explicit_type "ClassLoader"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 30572343 "SavedState"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "superState" type class_ref 137399 // Parcelable
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30572471 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "out" type class_ref 137527 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30572599 "toString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	classrelation 3881399 // CREATOR (<unidirectional association>)
	  relation 3881399 --->
	    a role_name "CREATOR" init_value " ParcelableCompat.newCreator(new ParcelableCompatCreatorCallbacks<SavedState>() {
                    @Override
                    public SavedState createFromParcel(Parcel in, ClassLoader loader) {
                        return new SavedState(in, loader);
                    }
                    @Override
                    public SavedState[] newArray(int size) {
                        return new SavedState[size];
                    }
                })" class_relation const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SavedState> ${name}${value};
"
	      classrelation_ref 3881399 // CREATOR (<unidirectional association>)
	    b parent class_ref 137655 // Creator
	end

	operation 30572727 "SavedState"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "in" type class_ref 137527 // Parcel
	    param inout name "loader" explicit_type "ClassLoader"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 30572855 "onSaveInstanceState"
	public return_type class_ref 137399 // Parcelable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30572983 "onRestoreInstanceState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "state" type class_ref 137399 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30573111 "addView"
	public explicit_return_type "void"
	nparams 3
	  param inout name "child" type class_ref 134455 // View
	  param in name "index" explicit_type "int"
	  param inout name "params" type class_ref 140855 // LayoutParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30573239 "isDecorView"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param inout name "view" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30573367 "removeView"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30573495 "infoForChild"
	package return_type class_ref 1316279 // ItemInfo
	nparams 1
	  param inout name "child" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30573623 "infoForAnyChild"
	package return_type class_ref 1316279 // ItemInfo
	nparams 1
	  param inout name "child" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30573751 "infoForPosition"
	package return_type class_ref 1316279 // ItemInfo
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30573879 "onAttachedToWindow"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30574007 "onMeasure"
	protected explicit_return_type "void"
	nparams 2
	  param in name "widthMeasureSpec" explicit_type "int"
	  param in name "heightMeasureSpec" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30574135 "onSizeChanged"
	protected explicit_return_type "void"
	nparams 4
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	  param in name "oldw" explicit_type "int"
	  param in name "oldh" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30574263 "recomputeScrollPosition"
	private explicit_return_type "void"
	nparams 4
	  param in name "width" explicit_type "int"
	  param in name "oldWidth" explicit_type "int"
	  param in name "margin" explicit_type "int"
	  param in name "oldMargin" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30574391 "onLayout"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "changed" explicit_type "boolean"
	  param in name "l" explicit_type "int"
	  param in name "t" explicit_type "int"
	  param in name "r" explicit_type "int"
	  param in name "b" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30574519 "computeScroll"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30574647 "pageScrolled"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "xpos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30574775 "onPageScrolled"
	protected explicit_return_type "void"
	nparams 3
	  param in name "position" explicit_type "int"
	  param in name "offset" explicit_type "float"
	  param in name "offsetPixels" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "This method will be invoked when the current page is scrolled, either as part
of a programmatically initiated smooth scroll or a user initiated touch scroll.
If you override this method you must call through to the superclass implementation
(e.g. super.onPageScrolled(position, offset, offsetPixels)) before onPageScrolled
returns.

@param position Position index of the first page currently being displayed.
                Page position+1 will be visible if positionOffset is nonzero.
@param offset Value from [0, 1) indicating the offset from the page at position.
@param offsetPixels Value in pixels indicating the offset from position."
      end

      operation 30574903 "dispatchOnPageScrolled"
	private explicit_return_type "void"
	nparams 3
	  param in name "position" explicit_type "int"
	  param in name "offset" explicit_type "float"
	  param in name "offsetPixels" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30575031 "dispatchOnPageSelected"
	private explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30575159 "dispatchOnScrollStateChanged"
	private explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30575287 "completeScroll"
	private explicit_return_type "void"
	nparams 1
	  param inout name "postEvents" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30575415 "isGutterDrag"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "x" explicit_type "float"
	  param in name "dx" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30575543 "enableLayers"
	private explicit_return_type "void"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30575671 "onInterceptTouchEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ev" type class_ref 146743 // MotionEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30575799 "onTouchEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "ev" type class_ref 146743 // MotionEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30575927 "resetTouch"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30576055 "requestParentDisallowInterceptTouchEvent"
	private explicit_return_type "void"
	nparams 1
	  param inout name "disallowIntercept" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30576183 "performDrag"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "x" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30576311 "infoForCurrentScrollPosition"
	private return_type class_ref 1316279 // ItemInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return Info about the page at the current scroll position.
        This can be synthetic for a missing middle page; the 'object' field can be null."
      end

      operation 30576439 "determineTargetPage"
	private explicit_return_type "int"
	nparams 4
	  param in name "currentPage" explicit_type "int"
	  param in name "pageOffset" explicit_type "float"
	  param in name "velocity" explicit_type "int"
	  param in name "deltaX" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30576567 "draw"
	public explicit_return_type "void"
	nparams 1
	  param inout name "canvas" type class_ref 135735 // Canvas
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30576695 "onDraw"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "canvas" type class_ref 135735 // Canvas
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30576823 "beginFakeDrag"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start a fake drag of the pager.

<p>A fake drag can be useful if you want to synchronize the motion of the ViewPager
with the touch scrolling of another view, while still letting the ViewPager
control the snapping motion and fling behavior. (e.g. parallax-scrolling tabs.)
Call {@link #fakeDragBy(float)} to simulate the actual drag motion. Call
{@link #endFakeDrag()} to complete the fake drag and fling as necessary.

<p>During a fake drag the ViewPager will ignore all touch events. If a real drag
is already in progress, this method will return false.

@return true if the fake drag began successfully, false if it could not be started.

@see #fakeDragBy(float)
@see #endFakeDrag()"
      end

      operation 30576951 "endFakeDrag"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End a fake drag of the pager.

@see #beginFakeDrag()
@see #fakeDragBy(float)"
      end

      operation 30577079 "fakeDragBy"
	public explicit_return_type "void"
	nparams 1
	  param in name "xOffset" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fake drag by an offset in pixels. You must have called {@link #beginFakeDrag()} first.

@param xOffset Offset in pixels to drag by.
@see #beginFakeDrag()
@see #endFakeDrag()"
      end

      operation 30577207 "isFakeDragging"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if a fake drag is in progress.

@return true if currently in a fake drag, false otherwise.

@see #beginFakeDrag()
@see #fakeDragBy(float)
@see #endFakeDrag()"
      end

      operation 30577335 "onSecondaryPointerUp"
	private explicit_return_type "void"
	nparams 1
	  param inout name "ev" type class_ref 146743 // MotionEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30577463 "endDrag"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30577591 "setScrollingCacheEnabled"
	private explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30577719 "canScrollHorizontally"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "direction" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30577847 "canScroll"
	protected explicit_return_type "boolean"
	nparams 5
	  param inout name "v" type class_ref 134455 // View
	  param inout name "checkV" explicit_type "boolean"
	  param in name "dx" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests scrollability within child views of v given a delta of dx.

@param v View to test for horizontal scrollability
@param checkV Whether the view v passed should itself be checked for scrollability (true),
              or just its children (false).
@param dx Delta scrolled in pixels
@param x X coordinate of the active touch point
@param y Y coordinate of the active touch point
@return true if child views of v can be scrolled by delta of dx."
      end

      operation 30577975 "dispatchKeyEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "event" type class_ref 137015 // KeyEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30578103 "executeKeyEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "event" type class_ref 137015 // KeyEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "You can call this function yourself to have the scroll view perform
scrolling from a key event, just as if the event had been dispatched to
it by the view hierarchy.

@param event The key event to execute.
@return Return true if the event was handled, else false."
      end

      operation 30578231 "arrowScroll"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "direction" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30578359 "getChildRectInPagerCoordinates"
	private return_type class_ref 135351 // Rect
	nparams 2
	  param inout name "outRect" type class_ref 135351 // Rect
	  param inout name "child" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30578487 "pageLeft"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30578615 "pageRight"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 30578743 "addFocusables"
	public explicit_return_type "void"
	nparams 3
	  param inout name "views" explicit_type "ArrayList<View>"
	  param in name "direction" explicit_type "int"
	  param in name "focusableMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "We only want the current page that is being shown to be focusable."
      end

      operation 30578871 "addTouchables"
	public explicit_return_type "void"
	nparams 1
	  param inout name "views" explicit_type "ArrayList<View>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "We only want the current page that is being shown to be touchable."
      end

      operation 30578999 "onRequestFocusInDescendants"
	protected explicit_return_type "boolean"
	nparams 2
	  param in name "direction" explicit_type "int"
	  param inout name "previouslyFocusedRect" type class_ref 135351 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "We only want the current page that is being shown to be focusable."
      end

      operation 30579127 "dispatchPopulateAccessibilityEvent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "event" type class_ref 138679 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30579255 "generateDefaultLayoutParams"
	protected return_type class_ref 140855 // LayoutParams
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30579383 "generateLayoutParams"
	protected return_type class_ref 140855 // LayoutParams
	nparams 1
	  param inout name "p" type class_ref 140855 // LayoutParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30579511 "checkLayoutParams"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "p" type class_ref 140855 // LayoutParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 30579639 "generateLayoutParams"
	public return_type class_ref 140855 // LayoutParams
	nparams 1
	  param inout name "attrs" type class_ref 130359 // AttributeSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 1317559 "MyAccessibilityDelegate"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3882295 // <generalisation>
	  relation 3882295 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 3882295 // <generalisation>
	    b parent class_ref 1317687 // AccessibilityDelegateCompat
	end

	operation 30585527 "onInitializeAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30585655 "onInitializeAccessibilityNodeInfo"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "host" type class_ref 134455 // View
	    param inout name "info" type class_ref 1185335 // AccessibilityNodeInfoCompat
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30585783 "performAccessibilityAction"
	  public explicit_return_type "boolean"
	  nparams 3
	    param inout name "host" type class_ref 134455 // View
	    param in name "action" explicit_type "int"
	    param inout name "args" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30585911 "canScroll"
	  private explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 1316407 "PagerAdapter"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class providing the adapter to populate pages inside of
a {@link ViewPager}.  You will most likely want to use a more
specific implementation of this, such as
{@link android.support.v4.app.FragmentPagerAdapter} or
{@link android.support.v4.app.FragmentStatePagerAdapter}.

<p>When you implement a PagerAdapter, you must override the following methods
at minimum:</p>
<ul>
<li>{@link #instantiateItem(ViewGroup, int)}</li>
<li>{@link #destroyItem(ViewGroup, int, Object)}</li>
<li>{@link #getCount()}</li>
<li>{@link #isViewFromObject(View, Object)}</li>
</ul>

<p>PagerAdapter is more general than the adapters used for
{@link android.widget.AdapterView AdapterViews}. Instead of providing a
View recycling mechanism directly ViewPager uses callbacks to indicate the
steps taken during an update. A PagerAdapter may implement a form of View
recycling if desired or use a more sophisticated method of managing page
Views such as Fragment transactions where each page is represented by its
own Fragment.</p>

<p>ViewPager associates each page with a key Object instead of working with
Views directly. This key is used to track and uniquely identify a given page
independent of its position in the adapter. A call to the PagerAdapter method
{@link #startUpdate(ViewGroup)} indicates that the contents of the ViewPager
are about to change. One or more calls to {@link #instantiateItem(ViewGroup, int)}
and/or {@link #destroyItem(ViewGroup, int, Object)} will follow, and the end
of an update will be signaled by a call to {@link #finishUpdate(ViewGroup)}.
By the time {@link #finishUpdate(ViewGroup) finishUpdate} returns the views
associated with the key objects returned by
{@link #instantiateItem(ViewGroup, int) instantiateItem} should be added to
the parent ViewGroup passed to these methods and the views associated with
the keys passed to {@link #destroyItem(ViewGroup, int, Object) destroyItem}
should be removed. The method {@link #isViewFromObject(View, Object)} identifies
whether a page View is associated with a given key object.</p>

<p>A very simple PagerAdapter may choose to use the page Views themselves
as key objects, returning them from {@link #instantiateItem(ViewGroup, int)}
after creation and adding them to the parent ViewGroup. A matching
{@link #destroyItem(ViewGroup, int, Object)} implementation would remove the
View from the parent ViewGroup and {@link #isViewFromObject(View, Object)}
could be implemented as <code>return view == object;</code>.</p>

<p>PagerAdapter supports data set changes. Data set changes must occur on the
main thread and must end with a call to {@link #notifyDataSetChanged()} similar
to AdapterView adapters derived from {@link android.widget.BaseAdapter}. A data
set change may involve pages being added, removed, or changing position. The
ViewPager will keep the current page active provided the adapter implements
the method {@link #getItemPosition(Object)}.</p>"
      classrelation 6566967 // mObservable (<unidirectional association>)
	relation 6566967 --->
	  a role_name "mObservable" init_value " new DataSetObservable()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6566967 // mObservable (<unidirectional association>)
	  b parent class_ref 311991 // DataSetObservable
      end

      classrelation 6567095 // mViewPagerObserver (<unidirectional association>)
	relation 6567095 --->
	  a role_name "mViewPagerObserver" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6567095 // mViewPagerObserver (<unidirectional association>)
	  b parent class_ref 311735 // DataSetObserver
      end

      attribute 6996151 "POSITION_UNCHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6996279 "POSITION_NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 37294263 "getCount"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of views available."
      end

      operation 37294391 "startUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "container" type class_ref 134711 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a change in the shown pages is going to start being made.
@param container The containing View which is displaying this adapter's
page views."
      end

      operation 37294519 "instantiateItem"
	public return_type class_ref 132663 // Object
	nparams 2
	  param inout name "container" type class_ref 134711 // ViewGroup
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the page for the given position.  The adapter is responsible
for adding the view to the container given here, although it only
must ensure this is done by the time it returns from
{@link #finishUpdate(ViewGroup)}.

@param container The containing View in which the page will be shown.
@param position The page position to be instantiated.
@return Returns an Object representing the new page.  This does not
need to be a View, but can be some other container of the page."
      end

      operation 37294647 "destroyItem"
	public explicit_return_type "void"
	nparams 3
	  param inout name "container" type class_ref 134711 // ViewGroup
	  param in name "position" explicit_type "int"
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a page for the given position.  The adapter is responsible
for removing the view from its container, although it only must ensure
this is done by the time it returns from {@link #finishUpdate(ViewGroup)}.

@param container The containing View from which the page will be removed.
@param position The page position to be removed.
@param object The same object that was returned by
{@link #instantiateItem(View, int)}."
      end

      operation 37294775 "setPrimaryItem"
	public explicit_return_type "void"
	nparams 3
	  param inout name "container" type class_ref 134711 // ViewGroup
	  param in name "position" explicit_type "int"
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to inform the adapter of which item is currently considered to
be the \"primary\", that is the one show to the user as the current page.

@param container The containing View from which the page will be removed.
@param position The page position that is now the primary.
@param object The same object that was returned by
{@link #instantiateItem(View, int)}."
      end

      operation 37294903 "finishUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "container" type class_ref 134711 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the a change in the shown pages has been completed.  At this
point you must ensure that all of the pages have actually been added or
removed from the container as appropriate.
@param container The containing View which is displaying this adapter's
page views."
      end

      operation 37295031 "startUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "container" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Called when a change in the shown pages is going to start being made.
@param container The containing View which is displaying this adapter's
page views.

@deprecated Use {@link #startUpdate(ViewGroup)}"
      end

      operation 37295159 "instantiateItem"
	public return_type class_ref 132663 // Object
	nparams 2
	  param inout name "container" type class_ref 134455 // View
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Create the page for the given position.  The adapter is responsible
for adding the view to the container given here, although it only
must ensure this is done by the time it returns from
{@link #finishUpdate(ViewGroup)}.

@param container The containing View in which the page will be shown.
@param position The page position to be instantiated.
@return Returns an Object representing the new page.  This does not
need to be a View, but can be some other container of the page.

@deprecated Use {@link #instantiateItem(ViewGroup, int)}"
      end

      operation 37295287 "destroyItem"
	public explicit_return_type "void"
	nparams 3
	  param inout name "container" type class_ref 134455 // View
	  param in name "position" explicit_type "int"
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Remove a page for the given position.  The adapter is responsible
for removing the view from its container, although it only must ensure
this is done by the time it returns from {@link #finishUpdate(View)}.

@param container The containing View from which the page will be removed.
@param position The page position to be removed.
@param object The same object that was returned by
{@link #instantiateItem(View, int)}.

@deprecated Use {@link #destroyItem(ViewGroup, int, Object)}"
      end

      operation 37295415 "setPrimaryItem"
	public explicit_return_type "void"
	nparams 3
	  param inout name "container" type class_ref 134455 // View
	  param in name "position" explicit_type "int"
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Called to inform the adapter of which item is currently considered to
be the \"primary\", that is the one show to the user as the current page.

@param container The containing View from which the page will be removed.
@param position The page position that is now the primary.
@param object The same object that was returned by
{@link #instantiateItem(View, int)}.

@deprecated Use {@link #setPrimaryItem(ViewGroup, int, Object)}"
      end

      operation 37295543 "finishUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "container" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Called when the a change in the shown pages has been completed.  At this
point you must ensure that all of the pages have actually been added or
removed from the container as appropriate.
@param container The containing View which is displaying this adapter's
page views.

@deprecated Use {@link #finishUpdate(ViewGroup)}"
      end

      operation 37295671 "isViewFromObject"
	abstract public explicit_return_type "boolean"
	nparams 2
	  param inout name "view" type class_ref 134455 // View
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines whether a page View is associated with a specific key object
as returned by {@link #instantiateItem(ViewGroup, int)}. This method is
required for a PagerAdapter to function properly.

@param view Page View to check for association with <code>object</code>
@param object Object to check for association with <code>view</code>
@return true if <code>view</code> is associated with the key object <code>object</code>"
      end

      operation 37295799 "saveState"
	public return_type class_ref 137399 // Parcelable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save any instance state associated with this adapter and its pages that should be
restored if the current UI state needs to be reconstructed.

@return Saved state for this adapter"
      end

      operation 37295927 "restoreState"
	public explicit_return_type "void"
	nparams 2
	  param inout name "state" type class_ref 137399 // Parcelable
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore any instance state associated with this adapter and its pages
that was previously saved by {@link #saveState()}.

@param state State previously saved by a call to {@link #saveState()}
@param loader A ClassLoader that should be used to instantiate any restored objects"
      end

      operation 37296055 "getItemPosition"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the host view is attempting to determine if an item's position
has changed. Returns {@link #POSITION_UNCHANGED} if the position of the given
item has not changed or {@link #POSITION_NONE} if the item is no longer present
in the adapter.

<p>The default implementation assumes that items will never
change position and always returns {@link #POSITION_UNCHANGED}.

@param object Object representing an item, previously returned by a call to
              {@link #instantiateItem(View, int)}.
@return object's new position index from [0, {@link #getCount()}),
        {@link #POSITION_UNCHANGED} if the object's position has not changed,
        or {@link #POSITION_NONE} if the item is no longer present."
      end

      operation 37296183 "notifyDataSetChanged"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method should be called by the application if the data backing this adapter has changed
and associated views should update."
      end

      operation 37296311 "registerDataSetObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 311735 // DataSetObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register an observer to receive callbacks related to the adapter's data changing.

@param observer The {@link android.database.DataSetObserver} which will receive callbacks."
      end

      operation 37296439 "unregisterDataSetObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 311735 // DataSetObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregister an observer from callbacks related to the adapter's data changing.

@param observer The {@link android.database.DataSetObserver} which will be unregistered."
      end

      operation 37296567 "setViewPagerObserver"
	package explicit_return_type "void"
	nparams 1
	  param inout name "observer" type class_ref 311735 // DataSetObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37296695 "getPageTitle"
	public explicit_return_type "CharSequence"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method may be called by the ViewPager to obtain a title string
to describe the specified page. This method may return null
indicating no title for this page. The default implementation returns
null.

@param position The position of the title requested
@return A title for the requested page"
      end

      operation 37296823 "getPageWidth"
	public explicit_return_type "float"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the proportional width of a given page as a percentage of the
ViewPager's measured width from (0.f-1.f]

@param position The position of the page requested
@return Proportional width for the given page position"
      end
    end

    class 1317687 "AccessibilityDelegateCompat"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Helper for accessing {@link View.AccessibilityDelegate} introduced after
API level 4 in a backwards compatible fashion.
<p>
<strong>Note:</strong> On platform versions prior to
{@link android.os.Build.VERSION_CODES#M API 23}, delegate methods on
views in the {@code android.widget.*} package are called <i>before</i>
host methods. This prevents certain properties such as class name from
being modified by overriding
{@link AccessibilityDelegateCompat#onInitializeAccessibilityNodeInfo(View, AccessibilityNodeInfoCompat)},
as any changes will be overwritten by the host class.
<p>
Starting in {@link android.os.Build.VERSION_CODES#M API 23}, delegate
methods are called <i>after</i> host methods, which all properties to be
modified without being overwritten by the host class."
      class 1317815 "AccessibilityDelegateImpl"
	visibility package stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 30579767 "newAccessiblityDelegateDefaultImpl"
	  public return_type class_ref 132663 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30579895 "newAccessiblityDelegateBridge"
	  public return_type class_ref 132663 // Object
	  nparams 1
	    param inout name "listener" type class_ref 1317687 // AccessibilityDelegateCompat
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30580023 "dispatchPopulateAccessibilityEvent"
	  public explicit_return_type "boolean"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30580151 "onInitializeAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30580279 "onInitializeAccessibilityNodeInfo"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "info" type class_ref 1185335 // AccessibilityNodeInfoCompat
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30580407 "onPopulateAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30580535 "onRequestSendAccessibilityEvent"
	  public explicit_return_type "boolean"
	  nparams 4
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134711 // ViewGroup
	    param inout name "child" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30580663 "sendAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param in name "eventType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30580791 "sendAccessibilityEventUnchecked"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30580919 "getAccessibilityNodeProvider"
	  public return_type class_ref 1317943 // AccessibilityNodeProviderCompat
	  nparams 2
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30581047 "performAccessibilityAction"
	  public explicit_return_type "boolean"
	  nparams 4
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param in name "action" explicit_type "int"
	    param inout name "args" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1318071 "AccessibilityDelegateStubImpl"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3881527 // <realization>
	  relation 3881527 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 3881527 // <realization>
	    b parent class_ref 1317815 // AccessibilityDelegateImpl
	end

	operation 30581175 "newAccessiblityDelegateDefaultImpl"
	  public return_type class_ref 132663 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 30581303 "newAccessiblityDelegateBridge"
	  public return_type class_ref 132663 // Object
	  nparams 1
	    param inout name "listener" type class_ref 1317687 // AccessibilityDelegateCompat
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30581431 "dispatchPopulateAccessibilityEvent"
	  public explicit_return_type "boolean"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30581559 "onInitializeAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30581687 "onInitializeAccessibilityNodeInfo"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "info" type class_ref 1185335 // AccessibilityNodeInfoCompat
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30581815 "onPopulateAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30581943 "onRequestSendAccessibilityEvent"
	  public explicit_return_type "boolean"
	  nparams 4
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134711 // ViewGroup
	    param inout name "child" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30582071 "sendAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param in name "eventType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30582199 "sendAccessibilityEventUnchecked"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30582327 "getAccessibilityNodeProvider"
	  public return_type class_ref 1317943 // AccessibilityNodeProviderCompat
	  nparams 2
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30582455 "performAccessibilityAction"
	  public explicit_return_type "boolean"
	  nparams 4
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param in name "action" explicit_type "int"
	    param inout name "args" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1318199 "AccessibilityDelegateIcsImpl"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3881655 // <generalisation>
	  relation 3881655 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 3881655 // <generalisation>
	    b parent class_ref 1318071 // AccessibilityDelegateStubImpl
	end

	operation 30582583 "newAccessiblityDelegateDefaultImpl"
	  public return_type class_ref 132663 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30582711 "newAccessiblityDelegateBridge"
	  public return_type class_ref 132663 // Object
	  nparams 1
	    param in name "compat" type class_ref 1317687 // AccessibilityDelegateCompat
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30582839 "dispatchPopulateAccessibilityEvent"
	  public explicit_return_type "boolean"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30582967 "onInitializeAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30583095 "onInitializeAccessibilityNodeInfo"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "info" type class_ref 1185335 // AccessibilityNodeInfoCompat
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30583223 "onPopulateAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30583351 "onRequestSendAccessibilityEvent"
	  public explicit_return_type "boolean"
	  nparams 4
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134711 // ViewGroup
	    param inout name "child" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30583479 "sendAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param in name "eventType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30583607 "sendAccessibilityEventUnchecked"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param inout name "event" type class_ref 138679 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 1318327 "AccessibilityDelegateJellyBeanImpl"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3881783 // <generalisation>
	  relation 3881783 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 3881783 // <generalisation>
	    b parent class_ref 1318199 // AccessibilityDelegateIcsImpl
	end

	operation 30583735 "newAccessiblityDelegateBridge"
	  public return_type class_ref 132663 // Object
	  nparams 1
	    param in name "compat" type class_ref 1317687 // AccessibilityDelegateCompat
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30583863 "getAccessibilityNodeProvider"
	  public return_type class_ref 1317943 // AccessibilityNodeProviderCompat
	  nparams 2
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 30583991 "performAccessibilityAction"
	  public explicit_return_type "boolean"
	  nparams 4
	    param inout name "delegate" type class_ref 132663 // Object
	    param inout name "host" type class_ref 134455 // View
	    param in name "action" explicit_type "int"
	    param inout name "args" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 3881911 // IMPL (<unidirectional association>)
	relation 3881911 --->
	  a role_name "IMPL" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3881911 // IMPL (<unidirectional association>)
	  b parent class_ref 1317815 // AccessibilityDelegateImpl
      end

      classrelation 3882039 // DEFAULT_DELEGATE (<unidirectional association>)
	relation 3882039 --->
	  a role_name "DEFAULT_DELEGATE" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3882039 // DEFAULT_DELEGATE (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      extra_member 151991 "initialization"
	
	cpp "" ""
	java "  static {
        if (Build.VERSION.SDK_INT >= 16) { // JellyBean
            IMPL = new AccessibilityDelegateJellyBeanImpl();
        } else if (Build.VERSION.SDK_INT >= 14) { // ICS
            IMPL = new AccessibilityDelegateIcsImpl();
        } else {
            IMPL = new AccessibilityDelegateStubImpl();
        }
        DEFAULT_DELEGATE = IMPL.newAccessiblityDelegateDefaultImpl();
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 3882167 // mBridge (<unidirectional association>)
	relation 3882167 --->
	  a role_name "mBridge" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3882167 // mBridge (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      operation 30584119 "AccessibilityDelegateCompat"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance."
      end

      operation 30584247 "getBridge"
	package return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The wrapped bridge implementation."
      end

      operation 30584375 "sendAccessibilityEvent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 134455 // View
	  param in name "eventType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an accessibility event of the given type. If accessibility is not
enabled this method has no effect.
<p>
The default implementation behaves as {@link View#sendAccessibilityEvent(int)
View#sendAccessibilityEvent(int)} for the case of no accessibility delegate
been set.
</p>

@param host The View hosting the delegate.
@param eventType The type of the event to send.

@see View#sendAccessibilityEvent(int) View#sendAccessibilityEvent(int)"
      end

      operation 30584503 "sendAccessibilityEventUnchecked"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 134455 // View
	  param inout name "event" type class_ref 138679 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends an accessibility event. This method behaves exactly as
{@link #sendAccessibilityEvent(View, int)} but takes as an argument an
empty {@link AccessibilityEvent} and does not perform a check whether
accessibility is enabled.
<p>
The default implementation behaves as
{@link View#sendAccessibilityEventUnchecked(AccessibilityEvent)
View#sendAccessibilityEventUnchecked(AccessibilityEvent)} for
the case of no accessibility delegate been set.
</p>

@param host The View hosting the delegate.
@param event The event to send.

@see View#sendAccessibilityEventUnchecked(AccessibilityEvent)
     View#sendAccessibilityEventUnchecked(AccessibilityEvent)"
      end

      operation 30584631 "dispatchPopulateAccessibilityEvent"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "host" type class_ref 134455 // View
	  param inout name "event" type class_ref 138679 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dispatches an {@link AccessibilityEvent} to the host {@link View} first and then
to its children for adding their text content to the event.
<p>
The default implementation behaves as
{@link View#dispatchPopulateAccessibilityEvent(AccessibilityEvent)
View#dispatchPopulateAccessibilityEvent(AccessibilityEvent)} for
the case of no accessibility delegate been set.
</p>

@param host The View hosting the delegate.
@param event The event.
@return True if the event population was completed.

@see View#dispatchPopulateAccessibilityEvent(AccessibilityEvent)
     View#dispatchPopulateAccessibilityEvent(AccessibilityEvent)"
      end

      operation 30584759 "onPopulateAccessibilityEvent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 134455 // View
	  param inout name "event" type class_ref 138679 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gives a chance to the host View to populate the accessibility event with its
text content.
<p>
The default implementation behaves as
{@link ViewCompat#onPopulateAccessibilityEvent(View, AccessibilityEvent)
ViewCompat#onPopulateAccessibilityEvent(AccessibilityEvent)} for
the case of no accessibility delegate been set.
</p>

@param host The View hosting the delegate.
@param event The accessibility event which to populate.

@see ViewCompat#onPopulateAccessibilityEvent(View ,AccessibilityEvent)
     ViewCompat#onPopulateAccessibilityEvent(View, AccessibilityEvent)"
      end

      operation 30584887 "onInitializeAccessibilityEvent"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 134455 // View
	  param inout name "event" type class_ref 138679 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes an {@link AccessibilityEvent} with information about the
the host View which is the event source.
<p>
The default implementation behaves as
{@link ViewCompat#onInitializeAccessibilityEvent(View v, AccessibilityEvent event)
ViewCompat#onInitalizeAccessibilityEvent(View v, AccessibilityEvent event)} for
the case of no accessibility delegate been set.
</p>

@param host The View hosting the delegate.
@param event The event to initialize.

@see ViewCompat#onInitializeAccessibilityEvent(View, AccessibilityEvent)
     ViewCompat#onInitializeAccessibilityEvent(View, AccessibilityEvent)"
      end

      operation 30585015 "onInitializeAccessibilityNodeInfo"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 134455 // View
	  param inout name "info" type class_ref 1185335 // AccessibilityNodeInfoCompat
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes an {@link AccessibilityNodeInfoCompat} with information about the host view.
<p>
The default implementation behaves as
{@link ViewCompat#onInitializeAccessibilityNodeInfo(View, AccessibilityNodeInfoCompat)
ViewCompat#onInitializeAccessibilityNodeInfo(View, AccessibilityNodeInfoCompat)} for
the case of no accessibility delegate been set.
</p>

@param host The View hosting the delegate.
@param info The instance to initialize.

@see ViewCompat#onInitializeAccessibilityNodeInfo(View, AccessibilityNodeInfoCompat)
     ViewCompat#onInitializeAccessibilityNodeInfo(View, AccessibilityNodeInfoCompat)"
      end

      operation 30585143 "onRequestSendAccessibilityEvent"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "host" type class_ref 134711 // ViewGroup
	  param inout name "child" type class_ref 134455 // View
	  param inout name "event" type class_ref 138679 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a child of the host View has requested sending an
{@link AccessibilityEvent} and gives an opportunity to the parent (the host)
to augment the event.
<p>
The default implementation behaves as
{@link ViewGroupCompat#onRequestSendAccessibilityEvent(ViewGroup, View, AccessibilityEvent)
ViewGroupCompat#onRequestSendAccessibilityEvent(ViewGroup, View, AccessibilityEvent)} for
the case of no accessibility delegate been set.
</p>

@param host The View hosting the delegate.
@param child The child which requests sending the event.
@param event The event to be sent.
@return True if the event should be sent

@see ViewGroupCompat#onRequestSendAccessibilityEvent(ViewGroup, View, AccessibilityEvent)
     ViewGroupCompat#onRequestSendAccessibilityEvent(ViewGroup, View, AccessibilityEvent)"
      end

      operation 30585271 "getAccessibilityNodeProvider"
	public return_type class_ref 1317943 // AccessibilityNodeProviderCompat
	nparams 1
	  param inout name "host" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the provider for managing a virtual view hierarchy rooted at this View
and reported to {@link android.accessibilityservice.AccessibilityService}s
that explore the window content.
<p>
The default implementation behaves as
{@link ViewCompat#getAccessibilityNodeProvider(View) ViewCompat#getAccessibilityNodeProvider(View)}
for the case of no accessibility delegate been set.
</p>

@return The provider.

@see AccessibilityNodeProviderCompat"
      end

      operation 30585399 "performAccessibilityAction"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "host" type class_ref 134455 // View
	  param in name "action" explicit_type "int"
	  param inout name "args" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs the specified accessibility action on the view. For
possible accessibility actions look at {@link AccessibilityNodeInfoCompat}.
<p>
The default implementation behaves as
{@link View#performAccessibilityAction(int, Bundle)
 View#performAccessibilityAction(int, Bundle)} for the case of
 no accessibility delegate been set.
</p>

@param action The action to perform.
@return Whether the action was performed.

@see View#performAccessibilityAction(int, Bundle)
     View#performAccessibilityAction(int, Bundle)"
      end
    end

    class 2117943 "GestureDetectorCompat"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 2270391 "OnApplyWindowInsetsListener"
      visibility package stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 2278455 "WindowInsetsCompat"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 2278967 "NestedScrollingParent"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface should be implemented by {@link android.view.ViewGroup ViewGroup} subclasses
that wish to support scrolling operations delegated by a nested child view.

<p>Classes implementing this interface should create a final instance of a
{@link NestedScrollingParentHelper} as a field and delegate any View or ViewGroup methods
to the <code>NestedScrollingParentHelper</code> methods of the same signature.</p>

<p>Views invoking nested scrolling functionality should always do so from the relevant
{@link ViewCompat}, {@link ViewGroupCompat} or {@link ViewParentCompat} compatibility
shim static methods. This ensures interoperability with nested scrolling views on Android
5.0 Lollipop and newer.</p>"
      operation 38886071 "onStartNestedScroll"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "child" type class_ref 134455 // View
	  param inout name "target" type class_ref 134455 // View
	  param in name "nestedScrollAxes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "React to a descendant view initiating a nestable scroll operation, claiming the
nested scroll operation if appropriate.

<p>This method will be called in response to a descendant view invoking
{@link ViewCompat#startNestedScroll(View, int)}. Each parent up the view hierarchy will be
given an opportunity to respond and claim the nested scrolling operation by returning
<code>true</code>.</p>

<p>This method may be overridden by ViewParent implementations to indicate when the view
is willing to support a nested scrolling operation that is about to begin. If it returns
true, this ViewParent will become the target view's nested scrolling parent for the duration
of the scroll operation in progress. When the nested scroll is finished this ViewParent
will receive a call to {@link #onStopNestedScroll(View)}.
</p>

@param child Direct child of this ViewParent containing target
@param target View that initiated the nested scroll
@param nestedScrollAxes Flags consisting of {@link ViewCompat#SCROLL_AXIS_HORIZONTAL},
                        {@link ViewCompat#SCROLL_AXIS_VERTICAL} or both
@return true if this ViewParent accepts the nested scroll operation"
      end

      operation 38886199 "onNestedScrollAccepted"
	public explicit_return_type "void"
	nparams 3
	  param inout name "child" type class_ref 134455 // View
	  param inout name "target" type class_ref 134455 // View
	  param in name "nestedScrollAxes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "React to the successful claiming of a nested scroll operation.

<p>This method will be called after
{@link #onStartNestedScroll(View, View, int) onStartNestedScroll} returns true. It offers
an opportunity for the view and its superclasses to perform initial configuration
for the nested scroll. Implementations of this method should always call their superclass's
implementation of this method if one is present.</p>

@param child Direct child of this ViewParent containing target
@param target View that initiated the nested scroll
@param nestedScrollAxes Flags consisting of {@link ViewCompat#SCROLL_AXIS_HORIZONTAL},
                        {@link ViewCompat#SCROLL_AXIS_VERTICAL} or both
@see #onStartNestedScroll(View, View, int)
@see #onStopNestedScroll(View)"
      end

      operation 38886327 "onStopNestedScroll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "React to a nested scroll operation ending.

<p>Perform cleanup after a nested scrolling operation.
This method will be called when a nested scroll stops, for example when a nested touch
scroll ends with a {@link MotionEvent#ACTION_UP} or {@link MotionEvent#ACTION_CANCEL} event.
Implementations of this method should always call their superclass's implementation of this
method if one is present.</p>

@param target View that initiated the nested scroll"
      end

      operation 38886455 "onNestedScroll"
	public explicit_return_type "void"
	nparams 5
	  param inout name "target" type class_ref 134455 // View
	  param in name "dxConsumed" explicit_type "int"
	  param in name "dyConsumed" explicit_type "int"
	  param in name "dxUnconsumed" explicit_type "int"
	  param in name "dyUnconsumed" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "React to a nested scroll in progress.

<p>This method will be called when the ViewParent's current nested scrolling child view
dispatches a nested scroll event. To receive calls to this method the ViewParent must have
previously returned <code>true</code> for a call to
{@link #onStartNestedScroll(View, View, int)}.</p>

<p>Both the consumed and unconsumed portions of the scroll distance are reported to the
ViewParent. An implementation may choose to use the consumed portion to match or chase scroll
position of multiple child elements, for example. The unconsumed portion may be used to
allow continuous dragging of multiple scrolling or draggable elements, such as scrolling
a list within a vertical drawer where the drawer begins dragging once the edge of inner
scrolling content is reached.</p>

@param target The descendent view controlling the nested scroll
@param dxConsumed Horizontal scroll distance in pixels already consumed by target
@param dyConsumed Vertical scroll distance in pixels already consumed by target
@param dxUnconsumed Horizontal scroll distance in pixels not consumed by target
@param dyUnconsumed Vertical scroll distance in pixels not consumed by target"
      end

      operation 38886583 "onNestedPreScroll"
	public explicit_return_type "void"
	nparams 4
	  param inout name "target" type class_ref 134455 // View
	  param in name "dx" explicit_type "int"
	  param in name "dy" explicit_type "int"
	  param inout name "consumed" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "React to a nested scroll in progress before the target view consumes a portion of the scroll.

<p>When working with nested scrolling often the parent view may want an opportunity
to consume the scroll before the nested scrolling child does. An example of this is a
drawer that contains a scrollable list. The user will want to be able to scroll the list
fully into view before the list itself begins scrolling.</p>

<p><code>onNestedPreScroll</code> is called when a nested scrolling child invokes
{@link View#dispatchNestedPreScroll(int, int, int[], int[])}. The implementation should
report how any pixels of the scroll reported by dx, dy were consumed in the
<code>consumed</code> array. Index 0 corresponds to dx and index 1 corresponds to dy.
This parameter will never be null. Initial values for consumed[0] and consumed[1]
will always be 0.</p>

@param target View that initiated the nested scroll
@param dx Horizontal scroll distance in pixels
@param dy Vertical scroll distance in pixels
@param consumed Output. The horizontal and vertical scroll distance consumed by this parent"
      end

      operation 38886711 "onNestedFling"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "target" type class_ref 134455 // View
	  param in name "velocityX" explicit_type "float"
	  param in name "velocityY" explicit_type "float"
	  param inout name "consumed" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request a fling from a nested scroll.

<p>This method signifies that a nested scrolling child has detected suitable conditions
for a fling. Generally this means that a touch scroll has ended with a
{@link VelocityTracker velocity} in the direction of scrolling that meets or exceeds
the {@link ViewConfiguration#getScaledMinimumFlingVelocity() minimum fling velocity}
along a scrollable axis.</p>

<p>If a nested scrolling child view would normally fling but it is at the edge of
its own content, it can use this method to delegate the fling to its nested scrolling
parent instead. The parent may optionally consume the fling or observe a child fling.</p>

@param target View that initiated the nested scroll
@param velocityX Horizontal velocity in pixels per second
@param velocityY Vertical velocity in pixels per second
@param consumed true if the child consumed the fling, false otherwise
@return true if this parent consumed or otherwise reacted to the fling"
      end

      operation 38886839 "onNestedPreFling"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "target" type class_ref 134455 // View
	  param in name "velocityX" explicit_type "float"
	  param in name "velocityY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "React to a nested fling before the target view consumes it.

<p>This method siginfies that a nested scrolling child has detected a fling with the given
velocity along each axis. Generally this means that a touch scroll has ended with a
{@link VelocityTracker velocity} in the direction of scrolling that meets or exceeds
the {@link ViewConfiguration#getScaledMinimumFlingVelocity() minimum fling velocity}
along a scrollable axis.</p>

<p>If a nested scrolling parent is consuming motion as part of a
{@link #onNestedPreScroll(View, int, int, int[]) pre-scroll}, it may be appropriate for
it to also consume the pre-fling to complete that same motion. By returning
<code>true</code> from this method, the parent indicates that the child should not
fling its own internal content as well.</p>

@param target View that initiated the nested scroll
@param velocityX Horizontal velocity in pixels per second
@param velocityY Vertical velocity in pixels per second
@return true if this parent consumed the fling ahead of the target view"
      end

      operation 38886967 "getNestedScrollAxes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current axes of nested scrolling for this NestedScrollingParent.

<p>A NestedScrollingParent returning something other than {@link ViewCompat#SCROLL_AXIS_NONE}
is currently acting as a nested scrolling parent for one or more descendant views in
the hierarchy.</p>

@return Flags indicating the current axes of nested scrolling
@see ViewCompat#SCROLL_AXIS_HORIZONTAL
@see ViewCompat#SCROLL_AXIS_VERTICAL
@see ViewCompat#SCROLL_AXIS_NONE"
      end
    end

    class 2279223 "NestedScrollingParentHelper"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end
  end

  deploymentview 179383 "view"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 690359 "AbsSavedState"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.support.v4.os.ParcelableCompat;
import android.support.v4.os.ParcelableCompatCreatorCallbacks;
${definition}"
      associated_classes
	class_ref 1175223 // AbsSavedState
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 693303 "ScrollingView"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1181623 // ScrollingView
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 693431 "NestedScrollingChild"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.view.MotionEvent;
import android.view.VelocityTracker;
import android.view.View;
import android.view.ViewConfiguration;
import android.view.ViewParent;
${definition}"
      associated_classes
	class_ref 1181751 // NestedScrollingChild
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 696375 "ViewPropertyAnimatorListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.view.View;
${definition}"
      associated_classes
	class_ref 1195063 // ViewPropertyAnimatorListener
      end
    end

    artifact 763831 "AccessibilityDelegateCompat"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Build;
import android.os.Bundle;
import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;
import android.support.v4.view.accessibility.AccessibilityNodeProviderCompat;
import android.view.View;
import android.view.ViewGroup;
import android.view.accessibility.AccessibilityEvent;
${definition}"
      associated_classes
	class_ref 1317687 // AccessibilityDelegateCompat
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1172151 "PagerAdapter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.DataSetObservable;
import android.database.DataSetObserver;
import android.os.Parcelable;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      associated_classes
	class_ref 1316407 // PagerAdapter
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1271991 "NestedScrollingParent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.view.MotionEvent;
import android.view.VelocityTracker;
import android.view.View;
import android.view.ViewConfiguration;
${definition}"
      associated_classes
	class_ref 2278967 // NestedScrollingParent
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end

  package_ref 204343 // accessibility
end
