class InputMethodSettingsImpl
!!!36629047.java!!!	init(in context : Context, in prefScreen : PreferenceScreen) : boolean
        mImm = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);
        mImi = getMyImi(context, mImm);
        if (mImi == null || mImi.getSubtypeCount() <= 1) {
            return false;
        }
        final Intent intent = new Intent(Settings.ACTION_INPUT_METHOD_SUBTYPE_SETTINGS);
        intent.putExtra(Settings.EXTRA_INPUT_METHOD_ID, mImi.getId());
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK
                | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED
                | Intent.FLAG_ACTIVITY_CLEAR_TOP);
        mSubtypeEnablerPreference = new Preference(context);
        mSubtypeEnablerPreference.setIntent(intent);
        prefScreen.addPreference(mSubtypeEnablerPreference);
        updateSubtypeEnabler();
        return true;
!!!36629175.java!!!	getMyImi(inout context : Context, inout imm : InputMethodManager) : InputMethodInfo
        final List<InputMethodInfo> imis = imm.getInputMethodList();
        for (int i = 0; i < imis.size(); ++i) {
            final InputMethodInfo imi = imis.get(i);
            if (imis.get(i).getPackageName().equals(context.getPackageName())) {
                return imi;
            }
        }
        return null;
!!!36629303.java!!!	getEnabledSubtypesLabel(inout context : Context, inout imm : InputMethodManager, inout imi : InputMethodInfo) : String
        if (context == null || imm == null || imi == null) return null;
        final List<InputMethodSubtype> subtypes = imm.getEnabledInputMethodSubtypeList(imi, true);
        final StringBuilder sb = new StringBuilder();
        final int N = subtypes.size();
        for (int i = 0; i < N; ++i) {
            final InputMethodSubtype subtype = subtypes.get(i);
            if (sb.length() > 0) {
                sb.append(", ");
            }
            sb.append(subtype.getDisplayName(context, imi.getPackageName(),
                    imi.getServiceInfo().applicationInfo));
        }
        return sb.toString();
!!!36629431.java!!!	setInputMethodSettingsCategoryTitle(in resId : int) : void
        mInputMethodSettingsCategoryTitleRes = resId;
        updateSubtypeEnabler();
!!!36629559.java!!!	setInputMethodSettingsCategoryTitle(inout title : CharSequence) : void
        mInputMethodSettingsCategoryTitleRes = 0;
        mInputMethodSettingsCategoryTitle = title;
        updateSubtypeEnabler();
!!!36629687.java!!!	setSubtypeEnablerTitle(in resId : int) : void
        mSubtypeEnablerTitleRes = resId;
        updateSubtypeEnabler();
!!!36629815.java!!!	setSubtypeEnablerTitle(inout title : CharSequence) : void
        mSubtypeEnablerTitleRes = 0;
        mSubtypeEnablerTitle = title;
        updateSubtypeEnabler();
!!!36629943.java!!!	setSubtypeEnablerIcon(in resId : int) : void
        mSubtypeEnablerIconRes = resId;
        updateSubtypeEnabler();
!!!36630071.java!!!	setSubtypeEnablerIcon(inout drawable : Drawable) : void
        mSubtypeEnablerIconRes = 0;
        mSubtypeEnablerIcon = drawable;
        updateSubtypeEnabler();
!!!36630199.java!!!	updateSubtypeEnabler() : void
        final Preference pref = mSubtypeEnablerPreference;
        if (pref == null) {
            return;
        }
        final Context context = pref.getContext();
        final CharSequence title;
        if (mSubtypeEnablerTitleRes != 0) {
            title = context.getString(mSubtypeEnablerTitleRes);
        } else {
            title = mSubtypeEnablerTitle;
        }
        pref.setTitle(title);
        final Intent intent = pref.getIntent();
        if (intent != null) {
            intent.putExtra(Intent.EXTRA_TITLE, title);
        }
        final String summary = getEnabledSubtypesLabel(context, mImm, mImi);
        if (!TextUtils.isEmpty(summary)) {
            pref.setSummary(summary);
        }
        if (mSubtypeEnablerIconRes != 0) {
            pref.setIcon(mSubtypeEnablerIconRes);
        } else {
            pref.setIcon(mSubtypeEnablerIcon);
        }
