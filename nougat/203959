format 76
"app" // nougat_src::frameworks::base::core::java::android::support::v4::app
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/support/v4/java/android/support/v4/app/"
  java_package "android.support.v4.app"
  classview 195511 "app"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1175863 "ActionBarDrawerToggle"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 1799351 "ListFragment"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Static library support version of the framework's {@link android.app.ListFragment}.
Used to write apps that run on platforms prior to Android 3.0.  When running
on Android 3.0 or above, this implementation is still used; it does not try
to switch to the framework's implementation.  See the framework SDK
documentation for a class overview."
      classrelation 5767223 // <generalisation>
	relation 5767223 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5767223 // <generalisation>
	  b parent class_ref 1799479 // Fragment
      end

      attribute 6225207 "INTERNAL_EMPTY_ID"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00ff0001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6225335 "INTERNAL_PROGRESS_CONTAINER_ID"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00ff0002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6225463 "INTERNAL_LIST_CONTAINER_ID"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x00ff0003"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5767351 // mHandler (<unidirectional association>)
	relation 5767351 --->
	  a role_name "mHandler" init_value " new Handler()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5767351 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      attribute 6225591 "mRequestFocus"
	const_attribute private explicit_type "Runnable"
	init_value " new Runnable() {
        public void run() {
            mList.focusableViewAvailable(mList);
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5767479 // mOnClickListener (<unidirectional association>)
	relation 5767479 --->
	  a role_name "mOnClickListener" init_value " new AdapterView.OnItemClickListener() {
        public void onItemClick(AdapterView<?> parent, View v, int position, long id) {
            onListItemClick((ListView)parent, v, position, id);
        }
    }" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5767479 // mOnClickListener (<unidirectional association>)
	  b parent class_ref 361783 // OnItemClickListener
      end

      classrelation 5767607 // mAdapter (<unidirectional association>)
	relation 5767607 --->
	  a role_name "mAdapter" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5767607 // mAdapter (<unidirectional association>)
	  b parent class_ref 311479 // ListAdapter
      end

      classrelation 5767735 // mList (<unidirectional association>)
	relation 5767735 --->
	  a role_name "mList" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5767735 // mList (<unidirectional association>)
	  b parent class_ref 310711 // ListView
      end

      classrelation 5767863 // mEmptyView (<unidirectional association>)
	relation 5767863 --->
	  a role_name "mEmptyView" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5767863 // mEmptyView (<unidirectional association>)
	  b parent class_ref 134455 // View
      end

      classrelation 5767991 // mStandardEmptyView (<unidirectional association>)
	relation 5767991 --->
	  a role_name "mStandardEmptyView" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5767991 // mStandardEmptyView (<unidirectional association>)
	  b parent class_ref 160439 // TextView
      end

      classrelation 5768119 // mProgressContainer (<unidirectional association>)
	relation 5768119 --->
	  a role_name "mProgressContainer" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5768119 // mProgressContainer (<unidirectional association>)
	  b parent class_ref 134455 // View
      end

      classrelation 5768247 // mListContainer (<unidirectional association>)
	relation 5768247 --->
	  a role_name "mListContainer" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5768247 // mListContainer (<unidirectional association>)
	  b parent class_ref 134455 // View
      end

      attribute 6225719 "mEmptyText"
	package explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6225847 "mListShown"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 35067703 "ListFragment"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35067831 "onCreateView"
	public return_type class_ref 134455 // View
	nparams 3
	  param inout name "inflater" type class_ref 133815 // LayoutInflater
	  param inout name "container" type class_ref 134711 // ViewGroup
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Provide default implementation to return a simple list view.  Subclasses
can override to replace with their own layout.  If doing so, the
returned view hierarchy <em>must</em> have a ListView whose id
is {@link android.R.id#list android.R.id.list} and can optionally
have a sibling view id {@link android.R.id#empty android.R.id.empty}
that is to be shown when the list is empty.

<p>If you are overriding this method with your own custom content,
consider including the standard layout {@link android.R.layout#list_content}
in your layout file, so that you continue to retain all of the standard
behavior of ListFragment.  In particular, this is currently the only
way to have the built-in indeterminant progress state be shown."
      end

      operation 35067959 "onViewCreated"
	public explicit_return_type "void"
	nparams 2
	  param inout name "view" type class_ref 134455 // View
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Attach to list view once the view hierarchy has been created."
      end

      operation 35068087 "onDestroyView"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Detach from list view."
      end

      operation 35068215 "onListItemClick"
	public explicit_return_type "void"
	nparams 4
	  param inout name "l" type class_ref 310711 // ListView
	  param inout name "v" type class_ref 134455 // View
	  param in name "position" explicit_type "int"
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method will be called when an item in the list is selected.
Subclasses should override. Subclasses can call
getListView().getItemAtPosition(position) if they need to access the
data associated with the selected item.

@param l The ListView where the click happened
@param v The view that was clicked within the ListView
@param position The position of the view in the list
@param id The row id of the item that was clicked"
      end

      operation 35068343 "setListAdapter"
	public explicit_return_type "void"
	nparams 1
	  param inout name "adapter" type class_ref 311479 // ListAdapter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provide the cursor for the list view."
      end

      operation 35068471 "setSelection"
	public explicit_return_type "void"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the currently selected list item to the specified
position with the adapter's data

@param position"
      end

      operation 35068599 "getSelectedItemPosition"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the position of the currently selected list item."
      end

      operation 35068727 "getSelectedItemId"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the cursor row ID of the currently selected list item."
      end

      operation 35068855 "getListView"
	public return_type class_ref 310711 // ListView
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the fragment's list view widget."
      end

      operation 35068983 "setEmptyText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The default content for a ListFragment has a TextView that can
be shown when the list is empty.  If you would like to have it
shown, call this method to supply the text it should use."
      end

      operation 35069111 "setListShown"
	public explicit_return_type "void"
	nparams 1
	  param inout name "shown" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Control whether the list is being displayed.  You can make it not
displayed if you are waiting for the initial data to show in it.  During
this time an indeterminant progress indicator will be shown instead.

<p>Applications do not normally need to use this themselves.  The default
behavior of ListFragment is to start with the list not being shown, only
showing it once an adapter is given with {@link #setListAdapter(ListAdapter)}.
If the list at that point had not been shown, when it does get shown
it will be do without the user ever seeing the hidden state.

@param shown If true, the list view is shown; if false, the progress
indicator.  The initial value is true."
      end

      operation 35069239 "setListShownNoAnimation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "shown" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #setListShown(boolean)}, but no animation is used when
transitioning from the previous state."
      end

      operation 35069367 "setListShown"
	private explicit_return_type "void"
	nparams 2
	  param inout name "shown" explicit_type "boolean"
	  param inout name "animate" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Control whether the list is being displayed.  You can make it not
displayed if you are waiting for the initial data to show in it.  During
this time an indeterminant progress indicator will be shown instead.

@param shown If true, the list view is shown; if false, the progress
indicator.  The initial value is true.
@param animate If true, an animation will be used to transition to the
new state."
      end

      operation 35069495 "getListAdapter"
	public return_type class_ref 311479 // ListAdapter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the ListAdapter associated with this fragment's ListView."
      end

      operation 35069623 "ensureList"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1799479 "Fragment"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Static library support version of the framework's {@link android.app.Fragment}.
Used to write apps that run on platforms prior to Android 3.0.  When running
on Android 3.0 or above, this implementation is still used; it does not try
to switch to the framework's implementation. See the framework {@link android.app.Fragment}
documentation for a class overview.

<p>The main differences when using this support version instead of the framework version are:
<ul>
 <li>Your activity must extend {@link FragmentActivity}
 <li>You must call {@link FragmentActivity#getSupportFragmentManager} to get the
 {@link FragmentManager}
</ul>
"
      classrelation 5763127 // <realization>
	relation 5763127 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5763127 // <realization>
	  b parent class_ref 129463 // ComponentCallbacks
      end

      classrelation 5763255 // <realization>
	relation 5763255 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5763255 // <realization>
	  b parent class_ref 143031 // OnCreateContextMenuListener
      end

      classrelation 5763383 // sClassMap (<unidirectional association>)
	relation 5763383 --->
	  a role_name "sClassMap" init_value "
            new SimpleArrayMap<String, Class<?>>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Class<?>> ${name}${value};
"
	    classrelation_ref 5763383 // sClassMap (<unidirectional association>)
	  b parent class_ref 1375159 // SimpleArrayMap
      end

      classrelation 5763511 // USE_DEFAULT_TRANSITION (<unidirectional association>)
	relation 5763511 --->
	  a role_name "USE_DEFAULT_TRANSITION" init_value " new Object()" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5763511 // USE_DEFAULT_TRANSITION (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      attribute 6220983 "INITIALIZING"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Not yet created."
      end

      attribute 6221111 "CREATED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Created."
      end

      attribute 6221239 "ACTIVITY_CREATED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The activity has finished its creation."
      end

      attribute 6221367 "STOPPED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Fully created, not started."
      end

      attribute 6221495 "STARTED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Created and started, not resumed."
      end

      attribute 6221623 "RESUMED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Created started and resumed."
      end

      attribute 6221751 "mState"
	package explicit_type "int"
	init_value " INITIALIZING"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5763639 // mAnimatingAway (<unidirectional association>)
	relation 5763639 --->
	  a role_name "mAnimatingAway" package
	    comment " Non-null if the fragment's view hierarchy is currently animating away,
 meaning we need to wait a bit on completely destroying it.  This is the
 view that is animating.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5763639 // mAnimatingAway (<unidirectional association>)
	  b parent class_ref 134455 // View
      end

      attribute 6221879 "mStateAfterAnimating"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If mAnimatingAway != null, this is the state we should move to once the
 animation is done."
      end

      classrelation 5763767 // mSavedFragmentState (<unidirectional association>)
	relation 5763767 --->
	  a role_name "mSavedFragmentState" package
	    comment " When instantiated from saved state, this is the saved state.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5763767 // mSavedFragmentState (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      classrelation 5763895 // mSavedViewState (<unidirectional association>)
	relation 5763895 --->
	  a role_name "mSavedViewState" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Parcelable> ${name}${value};
"
	    classrelation_ref 5763895 // mSavedViewState (<unidirectional association>)
	  b parent class_ref 139575 // SparseArray
      end

      attribute 6222007 "mIndex"
	package explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Index into active fragment array."
      end

      classrelation 5764023 // mWho (<unidirectional association>)
	relation 5764023 --->
	  a role_name "mWho" package
	    comment " Internal unique name for this fragment;
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5764023 // mWho (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 5764151 // mArguments (<unidirectional association>)
	relation 5764151 --->
	  a role_name "mArguments" package
	    comment " Construction arguments;
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5764151 // mArguments (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      classrelation 5764279 // mTarget (<unidirectional association>)
	relation 5764279 --->
	  a role_name "mTarget" package
	    comment " Target fragment.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5764279 // mTarget (<unidirectional association>)
	  b parent class_ref 1799479 // Fragment
      end

      attribute 6222135 "mTargetIndex"
	package explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " For use when retaining a fragment: this is the index of the last mTarget."
      end

      attribute 6222263 "mTargetRequestCode"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Target request code."
      end

      attribute 6222391 "mAdded"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " True if the fragment is in the list of added fragments."
      end

      attribute 6222519 "mRemoving"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If set this fragment is being removed from its activity."
      end

      attribute 6222647 "mFromLayout"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Set to true if this fragment was instantiated from a layout file."
      end

      attribute 6222775 "mInLayout"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Set to true when the view has actually been inflated in its layout."
      end

      attribute 6222903 "mRestored"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " True if this fragment has been restored from previously saved state."
      end

      attribute 6223031 "mBackStackNesting"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Number of active back stack entries this fragment is in."
      end

      classrelation 5764407 // mFragmentManager (<unidirectional association>)
	relation 5764407 --->
	  a role_name "mFragmentManager" package
	    comment " The fragment manager we are associated with.  Set as soon as the
 fragment is used in a transaction; cleared after it has been removed
 from all transactions.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5764407 // mFragmentManager (<unidirectional association>)
	  b parent class_ref 1799991 // FragmentManagerImpl
      end

      classrelation 5764535 // mHost (<unidirectional association>)
	relation 5764535 --->
	  a role_name "mHost" package
	    comment " Host this fragment is attached to.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5764535 // mHost (<unidirectional association>)
	  b parent class_ref 1799735 // FragmentHostCallback
      end

      classrelation 5764663 // mChildFragmentManager (<unidirectional association>)
	relation 5764663 --->
	  a role_name "mChildFragmentManager" package
	    comment " Private fragment manager for child fragments inside of this one.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5764663 // mChildFragmentManager (<unidirectional association>)
	  b parent class_ref 1799991 // FragmentManagerImpl
      end

      classrelation 5764791 // mChildNonConfig (<unidirectional association>)
	relation 5764791 --->
	  a role_name "mChildNonConfig" package
	    comment " For use when restoring fragment state and descendant fragments are retained.
 This state is set by FragmentState.instantiate and cleared in onCreate.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5764791 // mChildNonConfig (<unidirectional association>)
	  b parent class_ref 1799863 // FragmentManagerNonConfig
      end

      classrelation 5764919 // mParentFragment (<unidirectional association>)
	relation 5764919 --->
	  a role_name "mParentFragment" package
	    comment " If this Fragment is contained in another Fragment, this is that container.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5764919 // mParentFragment (<unidirectional association>)
	  b parent class_ref 1799479 // Fragment
      end

      attribute 6223159 "mFragmentId"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The optional identifier for this fragment -- either the container ID if it
 was dynamically added to the view hierarchy, or the ID supplied in
 layout."
      end

      attribute 6223287 "mContainerId"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " When a fragment is being dynamically added to the view hierarchy, this
 is the identifier of the parent container it is being added to."
      end

      classrelation 5765047 // mTag (<unidirectional association>)
	relation 5765047 --->
	  a role_name "mTag" package
	    comment " The optional named tag for this fragment -- usually used to find
 fragments that are not part of the layout.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5765047 // mTag (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6223415 "mHidden"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Set to true when the app has requested that this fragment be hidden
 from the user."
      end

      attribute 6223543 "mDetached"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Set to true when the app has requested that this fragment be deactivated."
      end

      attribute 6223671 "mRetainInstance"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If set this fragment would like its instance retained across
 configuration changes."
      end

      attribute 6223799 "mRetaining"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If set this fragment is being retained across the current config change."
      end

      attribute 6223927 "mHasMenu"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If set this fragment has menu items to contribute."
      end

      attribute 6224055 "mMenuVisible"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Set to true to allow the fragment's menu to be shown."
      end

      attribute 6224183 "mCalled"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Used to verify that subclasses call through to super class."
      end

      attribute 6224311 "mNextAnim"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If app has requested a specific animation, this is the one to use."
      end

      classrelation 5765175 // mContainer (<unidirectional association>)
	relation 5765175 --->
	  a role_name "mContainer" package
	    comment " The parent container of the fragment after dynamically added to UI.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5765175 // mContainer (<unidirectional association>)
	  b parent class_ref 134711 // ViewGroup
      end

      classrelation 5765303 // mView (<unidirectional association>)
	relation 5765303 --->
	  a role_name "mView" package
	    comment " The View generated for this fragment.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5765303 // mView (<unidirectional association>)
	  b parent class_ref 134455 // View
      end

      classrelation 5765431 // mInnerView (<unidirectional association>)
	relation 5765431 --->
	  a role_name "mInnerView" package
	    comment " The real inner view that will save/restore state.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5765431 // mInnerView (<unidirectional association>)
	  b parent class_ref 134455 // View
      end

      attribute 6224439 "mDeferStart"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether this fragment should defer starting until after other fragments
 have been started and their loaders are finished."
      end

      attribute 6224567 "mUserVisibleHint"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Hint provided by the app that this fragment is currently visible to the user."
      end

      classrelation 5765559 // mLoaderManager (<unidirectional association>)
	relation 5765559 --->
	  a role_name "mLoaderManager" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5765559 // mLoaderManager (<unidirectional association>)
	  b parent class_ref 1800119 // LoaderManagerImpl
      end

      attribute 6224695 "mLoadersStarted"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6224823 "mCheckedForLoaderManager"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5765687 // mEnterTransition (<unidirectional association>)
	relation 5765687 --->
	  a role_name "mEnterTransition" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5765687 // mEnterTransition (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      classrelation 5765815 // mReturnTransition (<unidirectional association>)
	relation 5765815 --->
	  a role_name "mReturnTransition" init_value " USE_DEFAULT_TRANSITION" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5765815 // mReturnTransition (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      classrelation 5765943 // mExitTransition (<unidirectional association>)
	relation 5765943 --->
	  a role_name "mExitTransition" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5765943 // mExitTransition (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      classrelation 5766071 // mReenterTransition (<unidirectional association>)
	relation 5766071 --->
	  a role_name "mReenterTransition" init_value " USE_DEFAULT_TRANSITION" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5766071 // mReenterTransition (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      classrelation 5766199 // mSharedElementEnterTransition (<unidirectional association>)
	relation 5766199 --->
	  a role_name "mSharedElementEnterTransition" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5766199 // mSharedElementEnterTransition (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      classrelation 5766327 // mSharedElementReturnTransition (<unidirectional association>)
	relation 5766327 --->
	  a role_name "mSharedElementReturnTransition" init_value " USE_DEFAULT_TRANSITION" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5766327 // mSharedElementReturnTransition (<unidirectional association>)
	  b parent class_ref 132663 // Object
      end

      attribute 6224951 "mAllowReturnTransitionOverlap"
	package explicit_type "Boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6225079 "mAllowEnterTransitionOverlap"
	package explicit_type "Boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5766455 // mEnterTransitionCallback (<unidirectional association>)
	relation 5766455 --->
	  a role_name "mEnterTransitionCallback" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5766455 // mEnterTransitionCallback (<unidirectional association>)
	  b parent class_ref 1800247 // SharedElementCallback
      end

      classrelation 5766583 // mExitTransitionCallback (<unidirectional association>)
	relation 5766583 --->
	  a role_name "mExitTransitionCallback" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5766583 // mExitTransitionCallback (<unidirectional association>)
	  b parent class_ref 1800247 // SharedElementCallback
      end

      class 1800375 "SavedState"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5766711 // <realization>
	  relation 5766711 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5766711 // <realization>
	    b parent class_ref 137399 // Parcelable
	end

	classrelation 5766839 // mState (<unidirectional association>)
	  relation 5766839 --->
	    a role_name "mState" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5766839 // mState (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	operation 35050167 "SavedState"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "state" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 35050295 "SavedState"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "in" type class_ref 137527 // Parcel
	    param inout name "loader" explicit_type "ClassLoader"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 35050423 "describeContents"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 35050551 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "dest" type class_ref 137527 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	classrelation 5766967 // CREATOR (<unidirectional association>)
	  relation 5766967 --->
	    a role_name "CREATOR" init_value " new Parcelable.Creator<SavedState>() {
            @Override
            public SavedState createFromParcel(Parcel in) {
                return new SavedState(in, null);
            }

            @Override
            public SavedState[] newArray(int size) {
                return new SavedState[size];
            }
        }" class_relation const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SavedState> ${name}${value};
"
	      classrelation_ref 5766967 // CREATOR (<unidirectional association>)
	    b parent class_ref 137655 // Creator
	end
      end

      class 1800503 "InstantiationException"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5767095 // <generalisation>
	  relation 5767095 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5767095 // <generalisation>
	    b parent class_ref 446775 // RuntimeException
	end

	operation 35050679 "InstantiationException"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "msg" type class_ref 129591 // String
	    param inout name "cause" explicit_type "Exception"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 35050807 "Fragment"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Default constructor.  <strong>Every</strong> fragment must have an
empty constructor, so it can be instantiated when restoring its
activity's state.  It is strongly recommended that subclasses do not
have other constructors with parameters, since these constructors
will not be called when the fragment is re-instantiated; instead,
arguments can be supplied by the caller with {@link #setArguments}
and later retrieved by the Fragment with {@link #getArguments}.

<p>Applications should generally not implement a constructor.  The
first place application code an run where the fragment is ready to
be used is in {@link #onAttach(Activity)}, the point where the fragment
is actually associated with its activity.  Some applications may also
want to implement {@link #onInflate} to retrieve attributes from a
layout resource, though should take care here because this happens for
the fragment is attached to its activity."
      end

      operation 35050935 "instantiate"
	class_operation public return_type class_ref 1799479 // Fragment
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "fname" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #instantiate(Context, String, Bundle)} but with a null
argument Bundle."
      end

      operation 35051063 "instantiate"
	class_operation public return_type class_ref 1799479 // Fragment
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "fname" type class_ref 129591 // String
	  param inout name "args" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new instance of a Fragment with the given class name.  This is
the same as calling its empty constructor.

@param context The calling context being used to instantiate the fragment.
This is currently just used to get its ClassLoader.
@param fname The class name of the fragment to instantiate.
@param args Bundle of arguments to supply to the fragment, which it
can retrieve with {@link #getArguments()}.  May be null.
@return Returns a new fragment instance.
@throws InstantiationException If there is a failure in instantiating
the given fragment class.  This is a runtime exception; it is not
normally expected to happen."
      end

      operation 35051191 "isSupportFragmentClass"
	class_operation package explicit_return_type "boolean"
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "fname" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if the given fragment name is a support library fragment class.

@param context Context used to determine the correct ClassLoader to use
@param fname Class name of the fragment to test
@return true if <code>fname</code> is <code>android.support.v4.app.Fragment</code>
        or a subclass, false otherwise."
      end

      operation 35051319 "restoreViewState"
	package explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35051447 "setIndex"
	package explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "parent" type class_ref 1799479 // Fragment
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35051575 "isInBackStack"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35051703 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Subclasses can not override equals()."
      end

      operation 35051831 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Subclasses can not override hashCode()."
      end

      operation 35051959 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35052087 "getId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the identifier this fragment is known by.  This is either
the android:id value supplied in a layout or the container view ID
supplied when adding the fragment."
      end

      operation 35052215 "getTag"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the tag name of the fragment, if specified."
      end

      operation 35052343 "setArguments"
	public explicit_return_type "void"
	nparams 1
	  param inout name "args" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Supply the construction arguments for this fragment.  This can only
be called before the fragment has been attached to its activity; that
is, you should call it immediately after constructing the fragment.  The
arguments supplied here will be retained across fragment destroy and
creation."
      end

      operation 35052471 "getArguments"
	public return_type class_ref 131511 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the arguments supplied when the fragment was instantiated,
if any."
      end

      operation 35052599 "setInitialSavedState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "state" type class_ref 1800375 // SavedState
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the initial saved state that this Fragment should restore itself
from when first being constructed, as returned by
{@link FragmentManager#saveFragmentInstanceState(Fragment)
FragmentManager.saveFragmentInstanceState}.

@param state The state the fragment should be restored from."
      end

      operation 35052727 "setTargetFragment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "fragment" type class_ref 1799479 // Fragment
	  param in name "requestCode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Optional target for this fragment.  This may be used, for example,
if this fragment is being started by another, and when done wants to
give a result back to the first.  The target set here is retained
across instances via {@link FragmentManager#putFragment
FragmentManager.putFragment()}.

@param fragment The fragment that is the target of this one.
@param requestCode Optional request code, for convenience if you
are going to call back with {@link #onActivityResult(int, int, Intent)}."
      end

      operation 35052855 "getTargetFragment"
	public return_type class_ref 1799479 // Fragment
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the target fragment set by {@link #setTargetFragment}."
      end

      operation 35052983 "getTargetRequestCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the target request code set by {@link #setTargetFragment}."
      end

      operation 35053111 "getContext"
	public return_type class_ref 128567 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@link Context} this fragment is currently associated with."
      end

      operation 35053239 "getActivity"
	public return_type class_ref 1800631 // FragmentActivity
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@link FragmentActivity} this fragment is currently associated with.
May return {@code null} if the fragment is associated with a {@link Context}
instead."
      end

      operation 35053367 "getHost"
	public return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the host object of this fragment. May return {@code null} if the fragment
isn't currently being hosted."
      end

      operation 35053495 "getResources"
	public return_type class_ref 128951 // Resources
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return <code>getActivity().getResources()</code>."
      end

      operation 35053623 "getText"
	public explicit_return_type "CharSequence"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StringRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a localized, styled CharSequence from the application's package's
default string table.

@param resId Resource id for the CharSequence text"
      end

      operation 35053751 "getString"
	public return_type class_ref 129591 // String
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StringRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a localized string from the application's package's
default string table.

@param resId Resource id for the string"
      end

      operation 35053879 "getString"
	public return_type class_ref 129591 // String
	nparams 2
	  param in name "resId" explicit_type "int"
	  param inout name "" explicit_type "Object...formatArgs"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@StringRes ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a localized formatted string from the application's package's
default string table, substituting the format arguments as defined in
{@link java.util.Formatter} and {@link java.lang.String#format}.

@param resId Resource id for the format string
@param formatArgs The format arguments that will be used for substitution."
      end

      operation 35054007 "getFragmentManager"
	public return_type class_ref 1800759 // FragmentManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the FragmentManager for interacting with fragments associated
with this fragment's activity.  Note that this will be non-null slightly
before {@link #getActivity()}, during the time from when the fragment is
placed in a {@link FragmentTransaction} until it is committed and
attached to its activity.

<p>If this Fragment is a child of another Fragment, the FragmentManager
returned here will be the parent's {@link #getChildFragmentManager()}."
      end

      operation 35054135 "getChildFragmentManager"
	public return_type class_ref 1800759 // FragmentManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a private FragmentManager for placing and managing Fragments
inside of this Fragment."
      end

      operation 35054263 "getParentFragment"
	public return_type class_ref 1799479 // Fragment
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parent Fragment containing this Fragment.  If this Fragment
is attached directly to an Activity, returns null."
      end

      operation 35054391 "isAdded"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the fragment is currently added to its activity."
      end

      operation 35054519 "isDetached"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the fragment has been explicitly detached from the UI.
That is, {@link FragmentTransaction#detach(Fragment)
FragmentTransaction.detach(Fragment)} has been used on it."
      end

      operation 35054647 "isRemoving"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this fragment is currently being removed from its
activity.  This is  <em>not</em> whether its activity is finishing, but
rather whether it is in the process of being removed from its activity."
      end

      operation 35054775 "isInLayout"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the layout is included as part of an activity view
hierarchy via the &lt;fragment&gt; tag.  This will always be true when
fragments are created through the &lt;fragment&gt; tag, <em>except</em>
in the case where an old fragment is restored from a previous state and
it does not appear in the layout of the current state."
      end

      operation 35054903 "isResumed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the fragment is in the resumed state.  This is true
for the duration of {@link #onResume()} and {@link #onPause()} as well."
      end

      operation 35055031 "isVisible"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the fragment is currently visible to the user.  This means
it: (1) has been added, (2) has its view attached to the window, and 
(3) is not hidden."
      end

      operation 35055159 "isHidden"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the fragment has been hidden.  By default fragments
are shown.  You can find out about changes to this state with
{@link #onHiddenChanged}.  Note that the hidden state is orthogonal
to other states -- that is, to be visible to the user, a fragment
must be both started and not hidden."
      end

      operation 35055287 "hasOptionsMenu"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 35055415 "isMenuVisible"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 35055543 "onHiddenChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hidden" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the hidden state (as returned by {@link #isHidden()} of
the fragment has changed.  Fragments start out not hidden; this will
be called whenever the fragment changes state from that.
@param hidden True if the fragment is now hidden, false if it is not
visible."
      end

      operation 35055671 "setRetainInstance"
	public explicit_return_type "void"
	nparams 1
	  param inout name "retain" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Control whether a fragment instance is retained across Activity
re-creation (such as from a configuration change).  This can only
be used with fragments not in the back stack.  If set, the fragment
lifecycle will be slightly different when an activity is recreated:
<ul>
<li> {@link #onDestroy()} will not be called (but {@link #onDetach()} still
will be, because the fragment is being detached from its current activity).
<li> {@link #onCreate(Bundle)} will not be called since the fragment
is not being re-created.
<li> {@link #onAttach(Activity)} and {@link #onActivityCreated(Bundle)} <b>will</b>
still be called.
</ul>"
      end

      operation 35055799 "getRetainInstance"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35055927 "setHasOptionsMenu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hasMenu" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report that this fragment would like to participate in populating
the options menu by receiving a call to {@link #onCreateOptionsMenu}
and related methods.

@param hasMenu If true, the fragment has menu items to contribute."
      end

      operation 35056055 "setMenuVisibility"
	public explicit_return_type "void"
	nparams 1
	  param inout name "menuVisible" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a hint for whether this fragment's menu should be visible.  This
is useful if you know that a fragment has been placed in your view
hierarchy so that the user can not currently seen it, so any menu items
it has should also not be shown.

@param menuVisible The default is true, meaning the fragment's menu will
be shown as usual.  If false, the user will not see the menu."
      end

      operation 35056183 "setUserVisibleHint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isVisibleToUser" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a hint to the system about whether this fragment's UI is currently visible
to the user. This hint defaults to true and is persistent across fragment instance
state save and restore.

<p>An app may set this to false to indicate that the fragment's UI is
scrolled out of visibility or is otherwise not directly visible to the user.
This may be used by the system to prioritize operations such as fragment lifecycle updates
or loader ordering behavior.</p>

@param isVisibleToUser true if this fragment's UI is currently visible to the user (default),
                       false if it is not."
      end

      operation 35056311 "getUserVisibleHint"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The current value of the user-visible hint on this fragment.
@see #setUserVisibleHint(boolean)"
      end

      operation 35056439 "getLoaderManager"
	public return_type class_ref 1800887 // LoaderManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the LoaderManager for this fragment, creating it if needed."
      end

      operation 35056567 "startActivity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call {@link Activity#startActivity(Intent)} from the fragment's
containing Activity."
      end

      operation 35056695 "startActivity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 131255 // Intent
	  param inout name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call {@link Activity#startActivity(Intent, Bundle)} from the fragment's
containing Activity."
      end

      operation 35056823 "startActivityForResult"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 131255 // Intent
	  param in name "requestCode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call {@link Activity#startActivityForResult(Intent, int)} from the fragment's
containing Activity."
      end

      operation 35056951 "startActivityForResult"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 131255 // Intent
	  param in name "requestCode" explicit_type "int"
	  param inout name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call {@link Activity#startActivityForResult(Intent, int, Bundle)} from the fragment's
containing Activity."
      end

      operation 35057079 "startIntentSenderForResult"
	public explicit_return_type "void"
	nparams 7
	  param inout name "intent" type class_ref 131639 // IntentSender
	  param in name "requestCode" explicit_type "int"
	  param inout name "fillInIntent" type class_ref 131255 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	  param inout name "options" type class_ref 131511 // Bundle
	nexceptions 1
	  exception class_ref 131767 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call {@link Activity#startIntentSenderForResult(IntentSender, int, Intent, int, int, int,
Bundle)} from the fragment's containing Activity."
      end

      operation 35057207 "onActivityResult"
	public explicit_return_type "void"
	nparams 3
	  param in name "requestCode" explicit_type "int"
	  param in name "resultCode" explicit_type "int"
	  param inout name "data" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive the result from a previous call to
{@link #startActivityForResult(Intent, int)}.  This follows the
related Activity API as described there in
{@link Activity#onActivityResult(int, int, Intent)}.

@param requestCode The integer request code originally supplied to
                   startActivityForResult(), allowing you to identify who this
                   result came from.
@param resultCode The integer result code returned by the child activity
                  through its setResult().
@param data An Intent, which can return result data to the caller
              (various data can be attached to Intent \"extras\")."
      end

      operation 35057335 "requestPermissions"
	public explicit_return_type "void"
	nparams 2
	  param inout name "permissions" type class_ref 129591 // String
	  param in name "requestCode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests permissions to be granted to this application. These permissions
must be requested in your manifest, they should not be granted to your app,
and they should have protection level {@link android.content.pm.PermissionInfo
#PROTECTION_DANGEROUS dangerous}, regardless whether they are declared by
the platform or a third-party app.
<p>
Normal permissions {@link android.content.pm.PermissionInfo#PROTECTION_NORMAL}
are granted at install time if requested in the manifest. Signature permissions
{@link android.content.pm.PermissionInfo#PROTECTION_SIGNATURE} are granted at
install time if requested in the manifest and the signature of your app matches
the signature of the app declaring the permissions.
</p>
<p>
If your app does not have the requested permissions the user will be presented
with UI for accepting them. After the user has accepted or rejected the
requested permissions you will receive a callback on {@link
#onRequestPermissionsResult(int, String[], int[])} reporting whether the
permissions were granted or not.
</p>
<p>
Note that requesting a permission does not guarantee it will be granted and
your app should be able to run without having this permission.
</p>
<p>
This method may start an activity allowing the user to choose which permissions
to grant and which to reject. Hence, you should be prepared that your activity
may be paused and resumed. Further, granting some permissions may require
a restart of you application. In such a case, the system will recreate the
activity stack before delivering the result to {@link
#onRequestPermissionsResult(int, String[], int[])}.
</p>
<p>
When checking whether you have a permission you should use {@link
android.content.Context#checkSelfPermission(String)}.
</p>
<p>
Calling this API for permissions already granted to your app would show UI
to the user to decided whether the app can still hold these permissions. This
can be useful if the way your app uses the data guarded by the permissions
changes significantly.
</p>
<p>
A sample permissions request looks like this:
</p>
<code><pre><p>
private void showContacts() {
    if (getActivity().checkSelfPermission(Manifest.permission.READ_CONTACTS)
            != PackageManager.PERMISSION_GRANTED) {
        requestPermissions(new String[]{Manifest.permission.READ_CONTACTS},
                PERMISSIONS_REQUEST_READ_CONTACTS);
    } else {
        doShowContacts();
    }
}

{@literal @}Override
public void onRequestPermissionsResult(int requestCode, String[] permissions,
        int[] grantResults) {
    if (requestCode == PERMISSIONS_REQUEST_READ_CONTACTS
            && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
        doShowContacts();
    }
}
</code></pre></p>

@param permissions The requested permissions.
@param requestCode Application specific request code to match with a result
   reported to {@link #onRequestPermissionsResult(int, String[], int[])}.

@see #onRequestPermissionsResult(int, String[], int[])
@see android.content.Context#checkSelfPermission(String)"
      end

      operation 35057463 "onRequestPermissionsResult"
	public explicit_return_type "void"
	nparams 3
	  param in name "requestCode" explicit_type "int"
	  param inout name "permissions" type class_ref 129591 // String
	  param inout name "grantResults" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @NonNull ${t1}[] ${p1}, @NonNull ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback for the result from requesting permissions. This method
is invoked for every call on {@link #requestPermissions(String[], int)}.
<p>
<strong>Note:</strong> It is possible that the permissions request interaction
with the user is interrupted. In this case you will receive empty permissions
and results arrays which should be treated as a cancellation.
</p>

@param requestCode The request code passed in {@link #requestPermissions(String[], int)}.
@param permissions The requested permissions. Never null.
@param grantResults The grant results for the corresponding permissions
    which is either {@link android.content.pm.PackageManager#PERMISSION_GRANTED}
    or {@link android.content.pm.PackageManager#PERMISSION_DENIED}. Never null.

@see #requestPermissions(String[], int)"
      end

      operation 35057591 "shouldShowRequestPermissionRationale"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether you should show UI with rationale for requesting a permission.
You should do this only if you do not have the permission and the context in
which the permission is requested does not clearly communicate to the user
what would be the benefit from granting this permission.
<p>
For example, if you write a camera app, requesting the camera permission
would be expected by the user and no rationale for why it is requested is
needed. If however, the app needs location for tagging photos then a non-tech
savvy user may wonder how location is related to taking photos. In this case
you may choose to show UI with rationale of requesting this permission.
</p>

@param permission A permission your app wants to request.
@return Whether you can show permission rationale UI.

@see Context#checkSelfPermission(String)
@see #requestPermissions(String[], int)
@see #onRequestPermissionsResult(int, String[], int[])"
      end

      operation 35057719 "getLayoutInflater"
	public return_type class_ref 133815 // LayoutInflater
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide Hack so that DialogFragment can make its Dialog before creating
its views, and the view construction can use the dialog's context for
inflation.  Maybe this should become a public API. Note sure."
      end

      operation 35057847 "onInflate"
	public explicit_return_type "void"
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "attrs" type class_ref 130359 // AttributeSet
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called when a fragment is being created as part of a view layout
inflation, typically from setting the content view of an activity.  This
may be called immediately after the fragment is created from a <fragment>
tag in a layout file.  Note this is <em>before</em> the fragment's
{@link #onAttach(Activity)} has been called; all you should do here is
parse the attributes and save them away.

<p>This is called every time the fragment is inflated, even if it is
being inflated into a new instance with saved state.  It typically makes
sense to re-parse the parameters each time, to allow them to change with
different configurations.</p>

<p>Here is a typical implementation of a fragment that can take parameters
both through attributes supplied here as well from {@link #getArguments()}:</p>

{@sample development/samples/ApiDemos/src/com/example/android/apis/app/FragmentArguments.java
     fragment}

<p>Note that parsing the XML attributes uses a \"styleable\" resource.  The
declaration for the styleable used here is:</p>

{@sample development/samples/ApiDemos/res/values/attrs.xml fragment_arguments}

<p>The fragment can then be declared within its activity's content layout
through a tag like this:</p>

{@sample development/samples/ApiDemos/res/layout/fragment_arguments.xml from_attributes}

<p>This fragment can also be created dynamically from arguments given
at runtime in the arguments Bundle; here is an example of doing so at
creation of the containing activity:</p>

{@sample development/samples/ApiDemos/src/com/example/android/apis/app/FragmentArguments.java
     create}

@param context The Activity that is inflating this fragment.
@param attrs The attributes at the tag where the fragment is
being created.
@param savedInstanceState If the fragment is being re-created from
a previous saved state, this is the state."
      end

      operation 35057975 "onInflate"
	public explicit_return_type "void"
	nparams 3
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "attrs" type class_ref 130359 // AttributeSet
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
@CallSuper
"
	
	
	
	comment "Called when a fragment is being created as part of a view layout
inflation, typically from setting the content view of an activity.

@deprecated See {@link #onInflate(Context, AttributeSet, Bundle)}."
      end

      operation 35058103 "onAttachFragment"
	public explicit_return_type "void"
	nparams 1
	  param inout name "childFragment" type class_ref 1799479 // Fragment
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a fragment is attached as a child of this fragment.

<p>This is called after the attached fragment's <code>onAttach</code> and before
the attached fragment's <code>onCreate</code> if the fragment has not yet had a previous
call to <code>onCreate</code>.</p>

@param childFragment child fragment being attached"
      end

      operation 35058231 "onAttach"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called when a fragment is first attached to its context.
{@link #onCreate(Bundle)} will be called after this."
      end

      operation 35058359 "onAttach"
	public explicit_return_type "void"
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
@CallSuper
"
	
	
	
	comment "Called when a fragment is first attached to its activity.
{@link #onCreate(Bundle)} will be called after this.

@deprecated See {@link #onAttach(Context)}."
      end

      operation 35058487 "onCreateAnimation"
	public return_type class_ref 139703 // Animation
	nparams 3
	  param in name "transit" explicit_type "int"
	  param inout name "enter" explicit_type "boolean"
	  param in name "nextAnim" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a fragment loads an animation."
      end

      operation 35058615 "onCreate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called to do initial creation of a fragment.  This is called after
{@link #onAttach(Activity)} and before
{@link #onCreateView(LayoutInflater, ViewGroup, Bundle)}.

<p>Note that this can be called while the fragment's activity is
still in the process of being created.  As such, you can not rely
on things like the activity's content view hierarchy being initialized
at this point.  If you want to do work once the activity itself is
created, see {@link #onActivityCreated(Bundle)}.

<p>Any restored child fragments will be created before the base
<code>Fragment.onCreate</code> method returns.</p>

@param savedInstanceState If the fragment is being re-created from
a previous saved state, this is the state."
      end

      operation 35058743 "restoreChildFragmentState"
	package explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore the state of the child FragmentManager. Called by either
{@link #onCreate(Bundle)} for non-retained instance fragments or by
{@link FragmentManagerImpl#moveToState(Fragment, int, int, int, boolean)}
for retained instance fragments.

<p><strong>Postcondition:</strong> if there were child fragments to restore,
the child FragmentManager will be instantiated and brought to the {@link #CREATED} state.
</p>

@param savedInstanceState the savedInstanceState potentially containing fragment info"
      end

      operation 35058871 "onCreateView"
	public return_type class_ref 134455 // View
	nparams 3
	  param inout name "inflater" type class_ref 133815 // LayoutInflater
	  param inout name "container" type class_ref 134711 // ViewGroup
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Called to have the fragment instantiate its user interface view.
This is optional, and non-graphical fragments can return null (which
is the default implementation).  This will be called between
{@link #onCreate(Bundle)} and {@link #onActivityCreated(Bundle)}.

<p>If you return a View from here, you will later be called in
{@link #onDestroyView} when the view is being released.

@param inflater The LayoutInflater object that can be used to inflate
any views in the fragment,
@param container If non-null, this is the parent view that the fragment's
UI should be attached to.  The fragment should not add the view itself,
but this can be used to generate the LayoutParams of the view.
@param savedInstanceState If non-null, this fragment is being re-constructed
from a previous saved state as given here.

@return Return the View for the fragment's UI, or null."
      end

      operation 35058999 "onViewCreated"
	public explicit_return_type "void"
	nparams 2
	  param inout name "view" type class_ref 134455 // View
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called immediately after {@link #onCreateView(LayoutInflater, ViewGroup, Bundle)}
has returned, but before any saved state has been restored in to the view.
This gives subclasses a chance to initialize themselves once
they know their view hierarchy has been completely created.  The fragment's
view hierarchy is not however attached to its parent at this point.
@param view The View returned by {@link #onCreateView(LayoutInflater, ViewGroup, Bundle)}.
@param savedInstanceState If non-null, this fragment is being re-constructed
from a previous saved state as given here."
      end

      operation 35059127 "getView"
	public return_type class_ref 134455 // View
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Nullable
"
	
	
	
	comment "Get the root view for the fragment's layout (the one returned by {@link #onCreateView}),
if provided.

@return The fragment's root view, or null if it has no layout."
      end

      operation 35059255 "onActivityCreated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called when the fragment's activity has been created and this
fragment's view hierarchy instantiated.  It can be used to do final
initialization once these pieces are in place, such as retrieving
views or restoring state.  It is also useful for fragments that use
{@link #setRetainInstance(boolean)} to retain their instance,
as this callback tells the fragment when it is fully associated with
the new activity instance.  This is called after {@link #onCreateView}
and before {@link #onViewStateRestored(Bundle)}.

@param savedInstanceState If the fragment is being re-created from
a previous saved state, this is the state."
      end

      operation 35059383 "onViewStateRestored"
	public explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called when all saved state has been restored into the view hierarchy
of the fragment.  This can be used to do initialization based on saved
state that you are letting the view hierarchy track itself, such as
whether check box widgets are currently checked.  This is called
after {@link #onActivityCreated(Bundle)} and before
{@link #onStart()}.

@param savedInstanceState If the fragment is being re-created from
a previous saved state, this is the state."
      end

      operation 35059511 "onStart"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called when the Fragment is visible to the user.  This is generally
tied to {@link Activity#onStart() Activity.onStart} of the containing
Activity's lifecycle."
      end

      operation 35059639 "onResume"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called when the fragment is visible to the user and actively running.
This is generally
tied to {@link Activity#onResume() Activity.onResume} of the containing
Activity's lifecycle."
      end

      operation 35059767 "onSaveInstanceState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "outState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called to ask the fragment to save its current dynamic state, so it
can later be reconstructed in a new instance of its process is
restarted.  If a new instance of the fragment later needs to be
created, the data you place in the Bundle here will be available
in the Bundle given to {@link #onCreate(Bundle)},
{@link #onCreateView(LayoutInflater, ViewGroup, Bundle)}, and
{@link #onActivityCreated(Bundle)}.

<p>This corresponds to {@link Activity#onSaveInstanceState(Bundle)
Activity.onSaveInstanceState(Bundle)} and most of the discussion there
applies here as well.  Note however: <em>this method may be called
at any time before {@link #onDestroy()}</em>.  There are many situations
where a fragment may be mostly torn down (such as when placed on the
back stack with no UI showing), but its state will not be saved until
its owning activity actually needs to save its state.

@param outState Bundle in which to place your saved state."
      end

      operation 35059895 "onMultiWindowModeChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isInMultiWindowMode" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the Fragment's activity changes from fullscreen mode to multi-window mode and
visa-versa. This is generally tied to {@link Activity#onMultiWindowModeChanged} of the
containing Activity.

@param isInMultiWindowMode True if the activity is in multi-window mode."
      end

      operation 35060023 "onPictureInPictureModeChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isInPictureInPictureMode" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the system when the activity changes to and from picture-in-picture mode. This is
generally tied to {@link Activity#onPictureInPictureModeChanged} of the containing Activity.

@param isInPictureInPictureMode True if the activity is in picture-in-picture mode."
      end

      operation 35060151 "onConfigurationChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newConfig" type class_ref 133431 // Configuration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
      end

      operation 35060279 "onPause"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called when the Fragment is no longer resumed.  This is generally
tied to {@link Activity#onPause() Activity.onPause} of the containing
Activity's lifecycle."
      end

      operation 35060407 "onStop"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called when the Fragment is no longer started.  This is generally
tied to {@link Activity#onStop() Activity.onStop} of the containing
Activity's lifecycle."
      end

      operation 35060535 "onLowMemory"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
      end

      operation 35060663 "onDestroyView"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called when the view previously created by {@link #onCreateView} has
been detached from the fragment.  The next time the fragment needs
to be displayed, a new view will be created.  This is called
after {@link #onStop()} and before {@link #onDestroy()}.  It is called
<em>regardless</em> of whether {@link #onCreateView} returned a
non-null view.  Internally it is called after the view's state has
been saved but before it has been removed from its parent."
      end

      operation 35060791 "onDestroy"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called when the fragment is no longer in use.  This is called
after {@link #onStop()} and before {@link #onDetach()}."
      end

      operation 35060919 "initState"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the fragment manager once this fragment has been removed,
so that we don't have any left-over state if the application decides
to re-use the instance.  This only clears state that the framework
internally manages, not things the application sets."
      end

      operation 35061047 "onDetach"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@CallSuper
"
	
	
	
	comment "Called when the fragment is no longer attached to its activity.  This
is called after {@link #onDestroy()}."
      end

      operation 35061175 "onCreateOptionsMenu"
	public explicit_return_type "void"
	nparams 2
	  param inout name "menu" type class_ref 154295 // Menu
	  param inout name "inflater" type class_ref 155959 // MenuInflater
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the contents of the Fragment host's standard options menu.  You
should place your menu items in to <var>menu</var>.  For this method
to be called, you must have first called {@link #setHasOptionsMenu}.  See
{@link Activity#onCreateOptionsMenu(Menu) Activity.onCreateOptionsMenu}
for more information.

@param menu The options menu in which you place your items.

@see #setHasOptionsMenu
@see #onPrepareOptionsMenu
@see #onOptionsItemSelected"
      end

      operation 35061303 "onPrepareOptionsMenu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "menu" type class_ref 154295 // Menu
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepare the Fragment host's standard options menu to be displayed.  This is
called right before the menu is shown, every time it is shown.  You can
use this method to efficiently enable/disable items or otherwise
dynamically modify the contents.  See
{@link Activity#onPrepareOptionsMenu(Menu) Activity.onPrepareOptionsMenu}
for more information.

@param menu The options menu as last shown or first initialized by
            onCreateOptionsMenu().

@see #setHasOptionsMenu
@see #onCreateOptionsMenu"
      end

      operation 35061431 "onDestroyOptionsMenu"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when this fragment's option menu items are no longer being
included in the overall options menu.  Receiving this call means that
the menu needed to be rebuilt, but this fragment's items were not
included in the newly built menu (its {@link #onCreateOptionsMenu(Menu, MenuInflater)}
was not called)."
      end

      operation 35061559 "onOptionsItemSelected"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "item" type class_ref 154423 // MenuItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This hook is called whenever an item in your options menu is selected.
The default implementation simply returns false to have the normal
processing happen (calling the item's Runnable or sending a message to
its Handler as appropriate).  You can use this method for any items
for which you would like to do processing without those other
facilities.

<p>Derived classes should call through to the base class for it to
perform the default menu handling.

@param item The menu item that was selected.

@return boolean Return false to allow normal menu processing to
        proceed, true to consume it here.

@see #onCreateOptionsMenu"
      end

      operation 35061687 "onOptionsMenuClosed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "menu" type class_ref 154295 // Menu
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This hook is called whenever the options menu is being closed (either by the user canceling
the menu with the back/menu button, or when an item is selected).
 
@param menu The options menu as last shown or first initialized by
            onCreateOptionsMenu()."
      end

      operation 35061815 "onCreateContextMenu"
	public explicit_return_type "void"
	nparams 3
	  param inout name "menu" type class_ref 148151 // ContextMenu
	  param inout name "v" type class_ref 134455 // View
	  param inout name "menuInfo" type class_ref 148279 // ContextMenuInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Called when a context menu for the {@code view} is about to be shown.
Unlike {@link #onCreateOptionsMenu}, this will be called every
time the context menu is about to be shown and should be populated for
the view (or item inside the view for {@link AdapterView} subclasses,
this can be found in the {@code menuInfo})).
<p>
Use {@link #onContextItemSelected(android.view.MenuItem)} to know when an
item has been selected.
<p>
The default implementation calls up to
{@link Activity#onCreateContextMenu Activity.onCreateContextMenu}, though
you can not call this implementation if you don't want that behavior.
<p>
It is not safe to hold onto the context menu after this method returns.
{@inheritDoc}"
      end

      operation 35061943 "registerForContextMenu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a context menu to be shown for the given view (multiple views
can show the context menu). This method will set the
{@link OnCreateContextMenuListener} on the view to this fragment, so
{@link #onCreateContextMenu(ContextMenu, View, ContextMenuInfo)} will be
called when it is time to show the context menu.

@see #unregisterForContextMenu(View)
@param view The view that should show a context menu."
      end

      operation 35062071 "unregisterForContextMenu"
	public explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 134455 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prevents a context menu to be shown for the given view. This method will
remove the {@link OnCreateContextMenuListener} on the view.

@see #registerForContextMenu(View)
@param view The view that should stop showing a context menu."
      end

      operation 35062199 "onContextItemSelected"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "item" type class_ref 154423 // MenuItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This hook is called whenever an item in a context menu is selected. The
default implementation simply returns false to have the normal processing
happen (calling the item's Runnable or sending a message to its Handler
as appropriate). You can use this method for any items for which you
would like to do processing without those other facilities.
<p>
Use {@link MenuItem#getMenuInfo()} to get extra information set by the
View that added this menu item.
<p>
Derived classes should call through to the base class for it to perform
the default menu handling.

@param item The context menu item that was selected.
@return boolean Return false to allow normal context menu processing to
        proceed, true to consume it here."
      end

      operation 35062327 "setEnterSharedElementCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 1800247 // SharedElementCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When custom transitions are used with Fragments, the enter transition callback
is called when this Fragment is attached or detached when not popping the back stack.

@param callback Used to manipulate the shared element transitions on this Fragment
                when added not as a pop from the back stack."
      end

      operation 35062455 "setExitSharedElementCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 1800247 // SharedElementCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When custom transitions are used with Fragments, the exit transition callback
is called when this Fragment is attached or detached when popping the back stack.

@param callback Used to manipulate the shared element transitions on this Fragment
                when added as a pop from the back stack."
      end

      operation 35062583 "setEnterTransition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the Transition that will be used to move Views into the initial scene. The entering
Views will be those that are regular Views or ViewGroups that have
{@link ViewGroup#isTransitionGroup} return true. Typical Transitions will extend
{@link android.transition.Visibility} as entering is governed by changing visibility from
{@link View#INVISIBLE} to {@link View#VISIBLE}. If <code>transition</code> is null,
entering Views will remain unaffected.

@param transition The Transition to use to move Views into the initial Scene."
      end

      operation 35062711 "getEnterTransition"
	public return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Transition that will be used to move Views into the initial scene. The entering
Views will be those that are regular Views or ViewGroups that have
{@link ViewGroup#isTransitionGroup} return true. Typical Transitions will extend
{@link android.transition.Visibility} as entering is governed by changing visibility from
{@link View#INVISIBLE} to {@link View#VISIBLE}.

@return the Transition to use to move Views into the initial Scene."
      end

      operation 35062839 "setReturnTransition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the Transition that will be used to move Views out of the scene when the Fragment is
preparing to be removed, hidden, or detached because of popping the back stack. The exiting
Views will be those that are regular Views or ViewGroups that have
{@link ViewGroup#isTransitionGroup} return true. Typical Transitions will extend
{@link android.transition.Visibility} as entering is governed by changing visibility from
{@link View#VISIBLE} to {@link View#INVISIBLE}. If <code>transition</code> is null,
entering Views will remain unaffected. If nothing is set, the default will be to
use the same value as set in {@link #setEnterTransition(Object)}.

@param transition The Transition to use to move Views out of the Scene when the Fragment
                  is preparing to close. <code>transition</code> must be an
                  android.transition.Transition."
      end

      operation 35062967 "getReturnTransition"
	public return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Transition that will be used to move Views out of the scene when the Fragment is
preparing to be removed, hidden, or detached because of popping the back stack. The exiting
Views will be those that are regular Views or ViewGroups that have
{@link ViewGroup#isTransitionGroup} return true. Typical Transitions will extend
{@link android.transition.Visibility} as entering is governed by changing visibility from
{@link View#VISIBLE} to {@link View#INVISIBLE}. If <code>transition</code> is null,
entering Views will remain unaffected.

@return the Transition to use to move Views out of the Scene when the Fragment
        is preparing to close."
      end

      operation 35063095 "setExitTransition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the Transition that will be used to move Views out of the scene when the
fragment is removed, hidden, or detached when not popping the back stack.
The exiting Views will be those that are regular Views or ViewGroups that
have {@link ViewGroup#isTransitionGroup} return true. Typical Transitions will extend
{@link android.transition.Visibility} as exiting is governed by changing visibility
from {@link View#VISIBLE} to {@link View#INVISIBLE}. If transition is null, the views will
remain unaffected.

@param transition The Transition to use to move Views out of the Scene when the Fragment
                  is being closed not due to popping the back stack. <code>transition</code>
                  must be an android.transition.Transition."
      end

      operation 35063223 "getExitTransition"
	public return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Transition that will be used to move Views out of the scene when the
fragment is removed, hidden, or detached when not popping the back stack.
The exiting Views will be those that are regular Views or ViewGroups that
have {@link ViewGroup#isTransitionGroup} return true. Typical Transitions will extend
{@link android.transition.Visibility} as exiting is governed by changing visibility
from {@link View#VISIBLE} to {@link View#INVISIBLE}. If transition is null, the views will
remain unaffected.

@return the Transition to use to move Views out of the Scene when the Fragment
        is being closed not due to popping the back stack."
      end

      operation 35063351 "setReenterTransition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the Transition that will be used to move Views in to the scene when returning due
to popping a back stack. The entering Views will be those that are regular Views
or ViewGroups that have {@link ViewGroup#isTransitionGroup} return true. Typical Transitions
will extend {@link android.transition.Visibility} as exiting is governed by changing
visibility from {@link View#VISIBLE} to {@link View#INVISIBLE}. If transition is null,
the views will remain unaffected. If nothing is set, the default will be to use the same
transition as {@link #setExitTransition(Object)}.

@param transition The Transition to use to move Views into the scene when reentering from a
                  previously-started Activity. <code>transition</code>
                  must be an android.transition.Transition."
      end

      operation 35063479 "getReenterTransition"
	public return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Transition that will be used to move Views in to the scene when returning due
to popping a back stack. The entering Views will be those that are regular Views
or ViewGroups that have {@link ViewGroup#isTransitionGroup} return true. Typical Transitions
will extend {@link android.transition.Visibility} as exiting is governed by changing
visibility from {@link View#VISIBLE} to {@link View#INVISIBLE}. If transition is null,
the views will remain unaffected. If nothing is set, the default will be to use the same
transition as {@link #setExitTransition(Object)}.

@return the Transition to use to move Views into the scene when reentering from a
                  previously-started Activity."
      end

      operation 35063607 "setSharedElementEnterTransition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the Transition that will be used for shared elements transferred into the content
Scene. Typical Transitions will affect size and location, such as
{@link android.transition.ChangeBounds}. A null
value will cause transferred shared elements to blink to the final position.

@param transition The Transition to use for shared elements transferred into the content
                  Scene.  <code>transition</code> must be an android.transition.Transition."
      end

      operation 35063735 "getSharedElementEnterTransition"
	public return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Transition that will be used for shared elements transferred into the content
Scene. Typical Transitions will affect size and location, such as
{@link android.transition.ChangeBounds}. A null
value will cause transferred shared elements to blink to the final position.

@return The Transition to use for shared elements transferred into the content
                  Scene."
      end

      operation 35063863 "setSharedElementReturnTransition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the Transition that will be used for shared elements transferred back during a
pop of the back stack. This Transition acts in the leaving Fragment.
Typical Transitions will affect size and location, such as
{@link android.transition.ChangeBounds}. A null
value will cause transferred shared elements to blink to the final position.
If no value is set, the default will be to use the same value as
{@link #setSharedElementEnterTransition(Object)}.

@param transition The Transition to use for shared elements transferred out of the content
                  Scene. <code>transition</code> must be an android.transition.Transition."
      end

      operation 35063991 "getSharedElementReturnTransition"
	public return_type class_ref 132663 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Transition that will be used for shared elements transferred back during a
pop of the back stack. This Transition acts in the leaving Fragment.
Typical Transitions will affect size and location, such as
{@link android.transition.ChangeBounds}. A null
value will cause transferred shared elements to blink to the final position.
If no value is set, the default will be to use the same value as
{@link #setSharedElementEnterTransition(Object)}.

@return The Transition to use for shared elements transferred out of the content
                  Scene."
      end

      operation 35064119 "setAllowEnterTransitionOverlap"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allow" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the the exit transition and enter transition overlap or not.
When true, the enter transition will start as soon as possible. When false, the
enter transition will wait until the exit transition completes before starting.

@param allow true to start the enter transition when possible or false to
             wait until the exiting transition completes."
      end

      operation 35064247 "getAllowEnterTransitionOverlap"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the the exit transition and enter transition overlap or not.
When true, the enter transition will start as soon as possible. When false, the
enter transition will wait until the exit transition completes before starting.

@return true when the enter transition should start as soon as possible or false to
when it should wait until the exiting transition completes."
      end

      operation 35064375 "setAllowReturnTransitionOverlap"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allow" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the the return transition and reenter transition overlap or not.
When true, the reenter transition will start as soon as possible. When false, the
reenter transition will wait until the return transition completes before starting.

@param allow true to start the reenter transition when possible or false to wait until the
             return transition completes."
      end

      operation 35064503 "getAllowReturnTransitionOverlap"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the the return transition and reenter transition overlap or not.
When true, the reenter transition will start as soon as possible. When false, the
reenter transition will wait until the return transition completes before starting.

@return true to start the reenter transition when possible or false to wait until the
        return transition completes."
      end

      operation 35064631 "dump"
	public explicit_return_type "void"
	nparams 4
	  param inout name "prefix" type class_ref 129591 // String
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the Fragments's state into the given stream.

@param prefix Text to print at the front of each line.
@param fd The raw file descriptor that the dump is being sent to.
@param writer The PrintWriter to which you should dump your state.  This will be
closed for you after you return.
@param args additional arguments to the dump request."
      end

      operation 35064759 "findFragmentByWho"
	package return_type class_ref 1799479 // Fragment
	nparams 1
	  param inout name "who" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35064887 "instantiateChildFragmentManager"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35065015 "performCreate"
	package explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35065143 "performCreateView"
	package return_type class_ref 134455 // View
	nparams 3
	  param inout name "inflater" type class_ref 133815 // LayoutInflater
	  param inout name "container" type class_ref 134711 // ViewGroup
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35065271 "performActivityCreated"
	package explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35065399 "performStart"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35065527 "performResume"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35065655 "performMultiWindowModeChanged"
	package explicit_return_type "void"
	nparams 1
	  param inout name "isInMultiWindowMode" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35065783 "performPictureInPictureModeChanged"
	package explicit_return_type "void"
	nparams 1
	  param inout name "isInPictureInPictureMode" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35065911 "performConfigurationChanged"
	package explicit_return_type "void"
	nparams 1
	  param inout name "newConfig" type class_ref 133431 // Configuration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35066039 "performLowMemory"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35066167 "performCreateOptionsMenu"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "menu" type class_ref 154295 // Menu
	  param inout name "inflater" type class_ref 155959 // MenuInflater
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "void performTrimMemory(int level) {
onTrimMemory(level);
if (mChildFragmentManager != null) {
mChildFragmentManager.dispatchTrimMemory(level);
}
}"
      end

      operation 35066295 "performPrepareOptionsMenu"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "menu" type class_ref 154295 // Menu
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35066423 "performOptionsItemSelected"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "item" type class_ref 154423 // MenuItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35066551 "performContextItemSelected"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "item" type class_ref 154423 // MenuItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35066679 "performOptionsMenuClosed"
	package explicit_return_type "void"
	nparams 1
	  param inout name "menu" type class_ref 154295 // Menu
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35066807 "performSaveInstanceState"
	package explicit_return_type "void"
	nparams 1
	  param inout name "outState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35066935 "performPause"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35067063 "performStop"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35067191 "performReallyStop"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35067319 "performDestroyView"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35067447 "performDestroy"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35067575 "performDetach"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1799607 "FragmentState"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5762231 // <realization>
	relation 5762231 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5762231 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 5762359 // mClassName (<unidirectional association>)
	relation 5762359 --->
	  a role_name "mClassName" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5762359 // mClassName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6220087 "mIndex"
	const_attribute package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6220215 "mFromLayout"
	const_attribute package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6220343 "mFragmentId"
	const_attribute package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6220471 "mContainerId"
	const_attribute package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5762487 // mTag (<unidirectional association>)
	relation 5762487 --->
	  a role_name "mTag" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5762487 // mTag (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6220599 "mRetainInstance"
	const_attribute package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6220727 "mDetached"
	const_attribute package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5762615 // mArguments (<unidirectional association>)
	relation 5762615 --->
	  a role_name "mArguments" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5762615 // mArguments (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      attribute 6220855 "mHidden"
	const_attribute package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5762743 // mSavedFragmentState (<unidirectional association>)
	relation 5762743 --->
	  a role_name "mSavedFragmentState" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5762743 // mSavedFragmentState (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      classrelation 5762871 // mInstance (<unidirectional association>)
	relation 5762871 --->
	  a role_name "mInstance" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5762871 // mInstance (<unidirectional association>)
	  b parent class_ref 1799479 // Fragment
      end

      operation 35049527 "FragmentState"
	public explicit_return_type ""
	nparams 1
	  param inout name "frag" type class_ref 1799479 // Fragment
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35049655 "FragmentState"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 137527 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35049783 "instantiate"
	public return_type class_ref 1799479 // Fragment
	nparams 3
	  param inout name "host" type class_ref 1799735 // FragmentHostCallback
	  param inout name "parent" type class_ref 1799479 // Fragment
	  param inout name "childNonConfig" type class_ref 1799863 // FragmentManagerNonConfig
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35049911 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35050039 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 5762999 // CREATOR (<unidirectional association>)
	relation 5762999 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<FragmentState>() {
        public FragmentState createFromParcel(Parcel in) {
            return new FragmentState(in);
        }
        
        public FragmentState[] newArray(int size) {
            return new FragmentState[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<FragmentState> ${name}${value};
"
	    classrelation_ref 5762999 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end
    end

    class 1799735 "FragmentHostCallback"
      abstract visibility package 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 1799863 "FragmentManagerNonConfig"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 1799991 "FragmentManagerImpl"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 1800119 "LoaderManagerImpl"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      classrelation 6555959 // <generalisation>
	relation 6555959 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6555959 // <generalisation>
	  b parent class_ref 1800887 // LoaderManager
      end

      classrelation 6556087 // TAG (<unidirectional association>)
	relation 6556087 --->
	  a role_name "TAG" init_value " \"LoaderManager\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6556087 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6986551 "DEBUG"
	class_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 2111415 "LoaderInfo"
	visibility package 
	nactuals 4
	actual class class_ref 2111287 // Loader
	  rank 0 explicit_value ""
	actual class class_ref 2111543 // OnLoadCompleteListener
	  rank 0 explicit_value ""
	actual class class_ref 2111287 // Loader
	  rank 0 explicit_value ""
	actual class class_ref 2111671 // OnLoadCanceledListener
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6557239 // <realization>
	  relation 6557239 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6557239 // <realization>
	    b parent class_ref 2111543 // OnLoadCompleteListener
	end

	classrelation 6557367 // <realization>
	  relation 6557367 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6557367 // <realization>
	    b parent class_ref 2111671 // OnLoadCanceledListener
	end

	attribute 6987959 "mId"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 6557495 // mArgs (<unidirectional association>)
	  relation 6557495 --->
	    a role_name "mArgs" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6557495 // mArgs (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	classrelation 6557623 // mCallbacks (<unidirectional association>)
	  relation 6557623 --->
	    a role_name "mCallbacks" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	      classrelation_ref 6557623 // mCallbacks (<unidirectional association>)
	    b parent class_ref 2111159 // LoaderCallbacks
	end

	classrelation 6557751 // mLoader (<unidirectional association>)
	  relation 6557751 --->
	    a role_name "mLoader" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	      classrelation_ref 6557751 // mLoader (<unidirectional association>)
	    b parent class_ref 2111287 // Loader
	end

	attribute 6988087 "mHaveData"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6988215 "mDeliveredData"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 6557879 // mData (<unidirectional association>)
	  relation 6557879 --->
	    a role_name "mData" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6557879 // mData (<unidirectional association>)
	    b parent class_ref 132663 // Object
	end

	attribute 6988343 "mStarted"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  java_annotation "@SuppressWarnings(\"hiding\")
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6988471 "mRetaining"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  java_annotation "@SuppressWarnings(\"hiding\")
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6988599 "mRetainingStarted"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  java_annotation "@SuppressWarnings(\"hiding\")
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6988727 "mReportNextStart"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6988855 "mDestroyed"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6988983 "mListenerRegistered"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 6558007 // mPendingLoader (<unidirectional association>)
	  relation 6558007 --->
	    a role_name "mPendingLoader" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6558007 // mPendingLoader (<unidirectional association>)
	    b parent class_ref 2111415 // LoaderInfo
	end

	operation 37269047 "LoaderInfo"
	  public explicit_return_type ""
	  nparams 3
	    param in name "id" explicit_type "int"
	    param inout name "args" type class_ref 131511 // Bundle
	    param inout name "callbacks" type class_ref 2111159 // LoaderCallbacks
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<Object> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 37269175 "start"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 37269303 "retain"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 37269431 "finishRetain"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 37269559 "reportStart"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 37269687 "stop"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 37269815 "cancel"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 37269943 "destroy"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 37270071 "onLoadCanceled"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "loader" type class_ref 2111287 // Loader
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Object> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 37270199 "onLoadComplete"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "loader" type class_ref 2111287 // Loader
	    param inout name "data" type class_ref 132663 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Object> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 37270327 "callOnLoadFinished"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "loader" type class_ref 2111287 // Loader
	    param inout name "data" type class_ref 132663 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Object> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 37270455 "toString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 37270583 "dump"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "prefix" type class_ref 129591 // String
	    param inout name "fd" explicit_type "FileDescriptor"
	    param inout name "writer" explicit_type "PrintWriter"
	    param inout name "args" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 6556215 // mLoaders (<unidirectional association>)
	relation 6556215 --->
	  a role_name "mLoaders" init_value " new SparseArrayCompat<LoaderInfo>()" const_relation package
	    comment " These are the currently active loaders.  A loader is here
 from the time its load is started until it has been explicitly
 stopped or restarted by the application.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<LoaderInfo> ${name}${value};
"
	    classrelation_ref 6556215 // mLoaders (<unidirectional association>)
	  b parent class_ref 1803575 // SparseArrayCompat
      end

      classrelation 6556343 // mInactiveLoaders (<unidirectional association>)
	relation 6556343 --->
	  a role_name "mInactiveLoaders" init_value " new SparseArrayCompat<LoaderInfo>()" const_relation package
	    comment " These are previously run loaders.  This list is maintained internally
 to avoid destroying a loader while an application is still using it.
 It allows an application to restart a loader, but continue using its
 previously run loader until the new loader's data is available.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<LoaderInfo> ${name}${value};
"
	    classrelation_ref 6556343 // mInactiveLoaders (<unidirectional association>)
	  b parent class_ref 1803575 // SparseArrayCompat
      end

      classrelation 6556471 // mWho (<unidirectional association>)
	relation 6556471 --->
	  a role_name "mWho" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6556471 // mWho (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6986679 "mStarted"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6986807 "mRetaining"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6986935 "mRetainingStarted"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6987063 "mCreatingLoader"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6556599 // mHost (<unidirectional association>)
	relation 6556599 --->
	  a role_name "mHost" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6556599 // mHost (<unidirectional association>)
	  b parent class_ref 1799735 // FragmentHostCallback
      end

      operation 37270711 "LoaderManagerImpl"
	package explicit_return_type ""
	nparams 3
	  param inout name "who" type class_ref 129591 // String
	  param inout name "host" type class_ref 1799735 // FragmentHostCallback
	  param inout name "started" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37270839 "updateHostController"
	package explicit_return_type "void"
	nparams 1
	  param inout name "host" type class_ref 1799735 // FragmentHostCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37270967 "createLoader"
	private return_type class_ref 2111415 // LoaderInfo
	nparams 3
	  param in name "id" explicit_type "int"
	  param inout name "args" type class_ref 131511 // Bundle
	  param inout name "callback" type class_ref 2111159 // LoaderCallbacks
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<Object> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37271095 "createAndInstallLoader"
	private return_type class_ref 2111415 // LoaderInfo
	nparams 3
	  param in name "id" explicit_type "int"
	  param inout name "args" type class_ref 131511 // Bundle
	  param inout name "callback" type class_ref 2111159 // LoaderCallbacks
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<Object> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37271223 "installLoader"
	package explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 2111415 // LoaderInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37271351 "initLoader"
	public return_type class_ref 2111287 // Loader
	nparams 3
	  param in name "id" explicit_type "int"
	  param inout name "args" type class_ref 131511 // Bundle
	  param inout name "callback" type class_ref 2111159 // LoaderCallbacks
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<D> ${type}<D> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<D> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Call to initialize a particular ID with a Loader.  If this ID already
has a Loader associated with it, it is left unchanged and any previous
callbacks replaced with the newly provided ones.  If there is not currently
a Loader for the ID, a new one is created and started.

<p>This function should generally be used when a component is initializing,
to ensure that a Loader it relies on is created.  This allows it to re-use
an existing Loader's data if there already is one, so that for example
when an {@link Activity} is re-created after a configuration change it
does not need to re-create its loaders.

<p>Note that in the case where an existing Loader is re-used, the
<var>args</var> given here <em>will be ignored</em> because you will
continue using the previous Loader.

@param id A unique (to this LoaderManager instance) identifier under
which to manage the new Loader.
@param args Optional arguments that will be propagated to
{@link android.support.v4.app.LoaderManager.LoaderCallbacks#onCreateLoader(int, Bundle) LoaderCallbacks.onCreateLoader()}.
@param callback Interface implementing management of this Loader.  Required.
Its onCreateLoader() method will be called while inside of the function to
instantiate the Loader object."
      end

      operation 37271479 "restartLoader"
	public return_type class_ref 2111287 // Loader
	nparams 3
	  param in name "id" explicit_type "int"
	  param inout name "args" type class_ref 131511 // Bundle
	  param inout name "callback" type class_ref 2111159 // LoaderCallbacks
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<D> ${type}<D> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<D> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Call to re-create the Loader associated with a particular ID.  If there
is currently a Loader associated with this ID, it will be
canceled/stopped/destroyed as appropriate.  A new Loader with the given
arguments will be created and its data delivered to you once available.

<p>This function does some throttling of Loaders.  If too many Loaders
have been created for the given ID but not yet generated their data,
new calls to this function will create and return a new Loader but not
actually start it until some previous loaders have completed.

<p>After calling this function, any previous Loaders associated with
this ID will be considered invalid, and you will receive no further
data updates from them.

@param id A unique (to this LoaderManager instance) identifier under
which to manage the new Loader.
@param args Optional arguments that will be propagated to
{@link android.support.v4.app.LoaderManager.LoaderCallbacks#onCreateLoader(int, Bundle) LoaderCallbacks.onCreateLoader()}.
@param callback Interface implementing management of this Loader.  Required.
Its onCreateLoader() method will be called while inside of the function to
instantiate the Loader object."
      end

      operation 37271607 "destroyLoader"
	public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rip down, tear apart, shred to pieces a current Loader ID.  After returning
from this function, any Loader objects associated with this ID are
destroyed.  Any data associated with them is destroyed.  You better not
be using it when you do this.
@param id Identifier of the Loader to be destroyed."
      end

      operation 37271735 "getLoader"
	public return_type class_ref 2111287 // Loader
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<D> ${type}<D> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Return the most recent Loader object associated with the
given ID."
      end

      operation 37271863 "doStart"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37271991 "doStop"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37272119 "doRetain"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37272247 "finishRetain"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37272375 "doReportNextStart"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37272503 "doReportStart"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37272631 "doDestroy"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 37272759 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 37272887 "dump"
	public explicit_return_type "void"
	nparams 4
	  param inout name "prefix" type class_ref 129591 // String
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 37273015 "hasRunningLoaders"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 1800247 "SharedElementCallback"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Listener provided in
{@link FragmentActivity#setEnterSharedElementCallback(SharedElementCallback)} and
{@link FragmentActivity#setExitSharedElementCallback(SharedElementCallback)}
to monitor the Activity transitions. The events can be used to customize Activity
Transition behavior."
      classrelation 5772855 // mTempMatrix (<unidirectional association>)
	relation 5772855 --->
	  a role_name "mTempMatrix" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5772855 // mTempMatrix (<unidirectional association>)
	  b parent class_ref 141111 // Matrix
      end

      attribute 6226231 "MAX_IMAGE_SIZE"
	class_attribute private explicit_type "int"
	init_value " (1024 * 1024)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5772983 // BUNDLE_SNAPSHOT_BITMAP (<unidirectional association>)
	relation 5772983 --->
	  a role_name "BUNDLE_SNAPSHOT_BITMAP" init_value " \"sharedElement:snapshot:bitmap\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5772983 // BUNDLE_SNAPSHOT_BITMAP (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 5773111 // BUNDLE_SNAPSHOT_IMAGE_SCALETYPE (<unidirectional association>)
	relation 5773111 --->
	  a role_name "BUNDLE_SNAPSHOT_IMAGE_SCALETYPE" init_value " \"sharedElement:snapshot:imageScaleType\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5773111 // BUNDLE_SNAPSHOT_IMAGE_SCALETYPE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 5773239 // BUNDLE_SNAPSHOT_IMAGE_MATRIX (<unidirectional association>)
	relation 5773239 --->
	  a role_name "BUNDLE_SNAPSHOT_IMAGE_MATRIX" init_value " \"sharedElement:snapshot:imageMatrix\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5773239 // BUNDLE_SNAPSHOT_IMAGE_MATRIX (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 35079991 "onSharedElementStart"
	public explicit_return_type "void"
	nparams 3
	  param inout name "sharedElementNames" explicit_type "List<String>"
	  param inout name "sharedElements" explicit_type "List<View>"
	  param inout name "sharedElementSnapshots" explicit_type "List<View>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In Activity Transitions, onSharedElementStart is called immediately before
capturing the start of the shared element state on enter and reenter transitions and
immediately before capturing the end of the shared element state for exit and return
transitions.
<p>
In Fragment Transitions, onSharedElementStart is called immediately before capturing the
start state of all shared element transitions.
<p>
This call can be used to adjust the transition start state by modifying the shared
element Views. Note that no layout step will be executed between onSharedElementStart
and the transition state capture.
<p>
For Activity Transitions, any changes made in {@link #onSharedElementEnd(List, List, List)}
that are not updated during layout should be corrected in onSharedElementStart for exit and
return transitions. For example, rotation or scale will not be affected by layout and
if changed in {@link #onSharedElementEnd(List, List, List)}, it will also have to be reset
in onSharedElementStart again to correct the end state.

@param sharedElementNames The names of the shared elements that were accepted into
                          the View hierarchy.
@param sharedElements The shared elements that are part of the View hierarchy.
@param sharedElementSnapshots The Views containing snap shots of the shared element
                              from the launching Window. These elements will not
                              be part of the scene, but will be positioned relative
                              to the Window decor View. This list is null for Fragment
                              Transitions."
      end

      operation 35080119 "onSharedElementEnd"
	public explicit_return_type "void"
	nparams 3
	  param inout name "sharedElementNames" explicit_type "List<String>"
	  param inout name "sharedElements" explicit_type "List<View>"
	  param inout name "sharedElementSnapshots" explicit_type "List<View>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In Activity Transitions, onSharedElementEnd is called immediately before
capturing the end of the shared element state on enter and reenter transitions and
immediately before capturing the start of the shared element state for exit and return
transitions.
<p>
In Fragment Transitions, onSharedElementEnd is called immediately before capturing the
end state of all shared element transitions.
<p>
This call can be used to adjust the transition end state by modifying the shared
element Views. Note that no layout step will be executed between onSharedElementEnd
and the transition state capture.
<p>
Any changes made in {@link #onSharedElementStart(List, List, List)} that are not updated
during layout should be corrected in onSharedElementEnd. For example, rotation or scale
will not be affected by layout and if changed in
{@link #onSharedElementStart(List, List, List)}, it will also have to be reset in
onSharedElementEnd again to correct the end state.

@param sharedElementNames The names of the shared elements that were accepted into
                          the View hierarchy.
@param sharedElements The shared elements that are part of the View hierarchy.
@param sharedElementSnapshots The Views containing snap shots of the shared element
                              from the launching Window. These elements will not
                              be part of the scene, but will be positioned relative
                              to the Window decor View. This list will be null for
                              Fragment Transitions."
      end

      operation 35080247 "onRejectSharedElements"
	public explicit_return_type "void"
	nparams 1
	  param inout name "rejectedSharedElements" explicit_type "List<View>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called after {@link #onMapSharedElements(java.util.List, java.util.Map)} when
transferring shared elements in. Any shared elements that have no mapping will be in
<var>rejectedSharedElements</var>. The elements remaining in
<var>rejectedSharedElements</var> will be transitioned out of the Scene. If a
View is removed from <var>rejectedSharedElements</var>, it must be handled by the
<code>SharedElementListener</code>.
<p>
Views in rejectedSharedElements will have their position and size set to the
position of the calling shared element, relative to the Window decor View and contain
snapshots of the View from the calling Activity or Fragment. This
view may be safely added to the decor View's overlay to remain in position.
</p>
<p>This method is not called for Fragment Transitions. All rejected shared elements
will be handled by the exit transition.</p>

@param rejectedSharedElements Views containing visual information of shared elements
                              that are not part of the entering scene. These Views
                              are positioned relative to the Window decor View. A
                              View removed from this list will not be transitioned
                              automatically."
      end

      operation 35080375 "onMapSharedElements"
	public explicit_return_type "void"
	nparams 2
	  param inout name "names" explicit_type "List<String>"
	  param inout name "sharedElements" explicit_type "Map<String, View>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Lets the SharedElementCallback adjust the mapping of shared element names to
Views.

@param names The names of all shared elements transferred from the calling Activity
             or Fragment in the order they were provided.
@param sharedElements The mapping of shared element names to Views. The best guess
                      will be filled into sharedElements based on the transitionNames."
      end

      operation 35080503 "onCaptureSharedElementSnapshot"
	public return_type class_ref 137399 // Parcelable
	nparams 3
	  param inout name "sharedElement" type class_ref 134455 // View
	  param inout name "viewToGlobalMatrix" type class_ref 141111 // Matrix
	  param inout name "screenBounds" type class_ref 150967 // RectF
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a snapshot of a shared element to be used by the remote Activity and reconstituted
with {@link #onCreateSnapshotView(android.content.Context, android.os.Parcelable)}. A
null return value will mean that the remote Activity will have a null snapshot View in
{@link #onSharedElementStart(java.util.List, java.util.List, java.util.List)} and
{@link #onSharedElementEnd(java.util.List, java.util.List, java.util.List)}.

<p>This is not called for Fragment Transitions.</p>

@param sharedElement The shared element View to create a snapshot for.
@param viewToGlobalMatrix A matrix containing a transform from the view to the screen
                          coordinates.
@param screenBounds The bounds of shared element in screen coordinate space. This is
                    the bounds of the view with the viewToGlobalMatrix applied.
@return A snapshot to send to the remote Activity to be reconstituted with
{@link #onCreateSnapshotView(android.content.Context, android.os.Parcelable)} and passed
into {@link #onSharedElementStart(java.util.List, java.util.List, java.util.List)} and
{@link #onSharedElementEnd(java.util.List, java.util.List, java.util.List)}."
      end

      operation 35080631 "createDrawableBitmap"
	class_operation private return_type class_ref 131127 // Bitmap
	nparams 1
	  param inout name "drawable" type class_ref 129719 // Drawable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a copy of bitmap of given drawable."
      end

      operation 35080759 "onCreateSnapshotView"
	public return_type class_ref 134455 // View
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "snapshot" type class_ref 137399 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reconstitutes a snapshot View from a Parcelable returned in
{@link #onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix,
android.graphics.RectF)} to be used in {@link #onSharedElementStart(java.util.List,
java.util.List, java.util.List)} and {@link #onSharedElementEnd(java.util.List,
java.util.List, java.util.List)}. The returned View will be sized and positioned after
this call so that it is ready to be added to the decor View's overlay.

<p>This is not called for Fragment Transitions.</p>

@param context The Context used to create the snapshot View.
@param snapshot The Parcelable returned by {@link #onCaptureSharedElementSnapshot(
android.view.View, android.graphics.Matrix, android.graphics.RectF)}.
@return A View to be sent in {@link #onSharedElementStart(java.util.List, java.util.List,
java.util.List)} and {@link #onSharedElementEnd(java.util.List, java.util.List,
java.util.List)}. A null value will produce a null snapshot value for those two methods."
      end
    end

    class 1800631 "FragmentActivity"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for activities that want to use the support-based
{@link android.support.v4.app.Fragment} and
{@link android.support.v4.content.Loader} APIs.

<p>When using this class as opposed to new platform's built-in fragment
and loader support, you must use the {@link #getSupportFragmentManager()}
and {@link #getSupportLoaderManager()} methods respectively to access
those features.

<p>Known limitations:</p>
<ul>
<li> <p>When using the <code>&lt;fragment></code> tag, this implementation can not
use the parent view's ID as the new fragment's ID.  You must explicitly
specify an ID (or tag) in the <code>&lt;fragment></code>.</p>
<li> <p>Prior to Honeycomb (3.0), an activity's state was saved before pausing.
Fragments are a significant amount of new state, and dynamic enough that one
often wants them to change between pausing and stopping.  These classes
throw an exception if you try to change the fragment state after it has been
saved, to avoid accidental loss of UI state.  However this is too restrictive
prior to Honeycomb, where the state is saved before pausing.  To address this,
when running on platforms prior to Honeycomb an exception will not be thrown
if you change fragments between the state save and the activity being stopped.
This means that in some cases if the activity is restored from its last saved
state, this may be a snapshot slightly before what the user last saw.</p>
</ul>"
      classrelation 5771575 // <generalisation>
	relation 5771575 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5771575 // <generalisation>
	  b parent class_ref 1801783 // BaseFragmentActivityJB
      end

      classrelation 5773879 // <realization>
	relation 5773879 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5773879 // <realization>
	  b parent class_ref 1802423 // OnRequestPermissionsResultCallback
      end

      classrelation 5774007 // <realization>
	relation 5774007 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5774007 // <realization>
	  b parent class_ref 1803319 // RequestPermissionsRequestCodeValidator
      end

      classrelation 5774135 // TAG (<unidirectional association>)
	relation 5774135 --->
	  a role_name "TAG" init_value " \"FragmentActivity\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5774135 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 5774263 // FRAGMENTS_TAG (<unidirectional association>)
	relation 5774263 --->
	  a role_name "FRAGMENTS_TAG" init_value " \"android:support:fragments\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5774263 // FRAGMENTS_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 5774391 // NEXT_CANDIDATE_REQUEST_INDEX_TAG (<unidirectional association>)
	relation 5774391 --->
	  a role_name "NEXT_CANDIDATE_REQUEST_INDEX_TAG" init_value " \"android:support:next_request_index\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5774391 // NEXT_CANDIDATE_REQUEST_INDEX_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 5774519 // ALLOCATED_REQUEST_INDICIES_TAG (<unidirectional association>)
	relation 5774519 --->
	  a role_name "ALLOCATED_REQUEST_INDICIES_TAG" init_value " \"android:support:request_indicies\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5774519 // ALLOCATED_REQUEST_INDICIES_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 5774647 // REQUEST_FRAGMENT_WHO_TAG (<unidirectional association>)
	relation 5774647 --->
	  a role_name "REQUEST_FRAGMENT_WHO_TAG" init_value " \"android:support:request_fragment_who\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5774647 // REQUEST_FRAGMENT_WHO_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6226359 "MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0xffff - 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6226487 "HONEYCOMB"
	class_attribute const_attribute private explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " This is the SDK API version of Honeycomb (3.0)."
      end

      attribute 6226615 "MSG_REALLY_STOPPED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6226743 "MSG_RESUME_PENDING"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5774775 // mHandler (<unidirectional association>)
	relation 5774775 --->
	  a role_name "mHandler" init_value " new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case MSG_REALLY_STOPPED:
                    if (mStopped) {
                        doReallyStop(false);
                    }
                    break;
                case MSG_RESUME_PENDING:
                    onResumeFragments();
                    mFragments.execPendingActions();
                    break;
                default:
                    super.handleMessage(msg);
            }
        }

    }" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5774775 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      classrelation 5774903 // mFragments (<unidirectional association>)
	relation 5774903 --->
	  a role_name "mFragments" init_value " FragmentController.createController(new HostCallbacks())" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5774903 // mFragments (<unidirectional association>)
	  b parent class_ref 1803447 // FragmentController
      end

      attribute 6226871 "mCreated"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6226999 "mResumed"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6227127 "mStopped"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6227255 "mReallyStopped"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6227383 "mRetaining"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6227511 "mOptionsMenuInvalidated"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6227639 "mRequestedPermissionsFromFragment"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6227767 "mNextCandidateRequestIndex"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A hint for the next candidate request index. Request indicies are ints between 0 and 2^16-1
 which are encoded into the upper 16 bits of the requestCode for
 Fragment.startActivityForResult(...) calls. This allows us to dispatch onActivityResult(...)
 to the appropriate Fragment. Request indicies are allocated by allocateRequestIndex(...)."
      end

      classrelation 5775031 // mPendingFragmentActivityResults (<unidirectional association>)
	relation 5775031 --->
	  a role_name "mPendingFragmentActivityResults" package
	    comment " A map from request index to Fragment \"who\" (i.e. a Fragment's unique identifier). Used to
 keep track of the originating Fragment for Fragment.startActivityForResult(...) calls, so we
 can dispatch the onActivityResult(...) to the appropriate Fragment. Will only contain entries
 for startActivityForResult calls where a result has not yet been delivered.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 5775031 // mPendingFragmentActivityResults (<unidirectional association>)
	  b parent class_ref 1803575 // SparseArrayCompat
      end
    end

    class 1800759 "FragmentManager"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 1800887 "LoaderManager"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Static library support version of the framework's {@link android.app.LoaderManager}.
Used to write apps that run on platforms prior to Android 3.0.  When running
on Android 3.0 or above, this implementation is still used; it does not try
to switch to the framework's implementation.  See the framework SDK
documentation for a class overview.

<p>Your activity must derive from {@link FragmentActivity} to use this."
      class 2111159 "LoaderCallbacks"
	visibility public stereotype "interface"
	nformals 1
	formal name "D" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 37263159 "onCreateLoader"
	  public return_type class_ref 2111287 // Loader
	  nparams 2
	    param in name "id" explicit_type "int"
	    param inout name "args" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<D> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Instantiate and return a new Loader for the given ID.

@param id The ID whose loader is to be created.
@param args Any arguments supplied by the caller.
@return Return a new Loader instance that is ready to start loading."
	end

	operation 37263287 "onLoadFinished"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "loader" type class_ref 2111287 // Loader
	    param inout name "data" explicit_type "D"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a previously created loader has finished its load.  Note
that normally an application is <em>not</em> allowed to commit fragment
transactions while in this call, since it can happen after an
activity's state is saved.  See {@link FragmentManager#beginTransaction()
FragmentManager.openTransaction()} for further discussion on this.

<p>This function is guaranteed to be called prior to the release of
the last data that was supplied for this Loader.  At this point
you should remove all use of the old data (since it will be released
soon), but should not do your own release of the data since its Loader
owns it and will take care of that.  The Loader will take care of
management of its data so you don't have to.  In particular:

<ul>
<li> <p>The Loader will monitor for changes to the data, and report
them to you through new calls here.  You should not monitor the
data yourself.  For example, if the data is a {@link android.database.Cursor}
and you place it in a {@link android.widget.CursorAdapter}, use
the {@link android.widget.CursorAdapter#CursorAdapter(android.content.Context,
android.database.Cursor, int)} constructor <em>without</em> passing
in either {@link android.widget.CursorAdapter#FLAG_AUTO_REQUERY}
or {@link android.widget.CursorAdapter#FLAG_REGISTER_CONTENT_OBSERVER}
(that is, use 0 for the flags argument).  This prevents the CursorAdapter
from doing its own observing of the Cursor, which is not needed since
when a change happens you will get a new Cursor throw another call
here.
<li> The Loader will release the data once it knows the application
is no longer using it.  For example, if the data is
a {@link android.database.Cursor} from a {@link android.content.CursorLoader},
you should not call close() on it yourself.  If the Cursor is being placed in a
{@link android.widget.CursorAdapter}, you should use the
{@link android.widget.CursorAdapter#swapCursor(android.database.Cursor)}
method so that the old Cursor is not closed.
</ul>

@param loader The Loader that has finished.
@param data The data generated by the Loader."
	end

	operation 37263415 "onLoaderReset"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "loader" type class_ref 2111287 // Loader
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a previously created loader is being reset, and thus
making its data unavailable.  The application should at this point
remove any references it has to the Loader's data.

@param loader The Loader that is being reset."
	end
      end

      operation 37263543 "initLoader"
	abstract public return_type class_ref 2111287 // Loader
	nparams 3
	  param in name "id" explicit_type "int"
	  param inout name "args" type class_ref 131511 // Bundle
	  param inout name "callback" type class_ref 2111159 // LoaderCallbacks
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<D> ${type}<D> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<D> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures a loader is initialized and active.  If the loader doesn't
already exist, one is created and (if the activity/fragment is currently
started) starts the loader.  Otherwise the last created
loader is re-used.

<p>In either case, the given callback is associated with the loader, and
will be called as the loader state changes.  If at the point of call
the caller is in its started state, and the requested loader
already exists and has generated its data, then
callback {@link LoaderCallbacks#onLoadFinished} will
be called immediately (inside of this function), so you must be prepared
for this to happen.

@param id A unique identifier for this loader.  Can be whatever you want.
Identifiers are scoped to a particular LoaderManager instance.
@param args Optional arguments to supply to the loader at construction.
If a loader already exists (a new one does not need to be created), this
parameter will be ignored and the last arguments continue to be used.
@param callback Interface the LoaderManager will call to report about
changes in the state of the loader.  Required."
      end

      operation 37263671 "restartLoader"
	abstract public return_type class_ref 2111287 // Loader
	nparams 3
	  param in name "id" explicit_type "int"
	  param inout name "args" type class_ref 131511 // Bundle
	  param inout name "callback" type class_ref 2111159 // LoaderCallbacks
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<D> ${type}<D> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}<D> ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts a new or restarts an existing {@link android.content.Loader} in
this manager, registers the callbacks to it,
and (if the activity/fragment is currently started) starts loading it.
If a loader with the same id has previously been
started it will automatically be destroyed when the new loader completes
its work. The callback will be delivered before the old loader
is destroyed.

@param id A unique identifier for this loader.  Can be whatever you want.
Identifiers are scoped to a particular LoaderManager instance.
@param args Optional arguments to supply to the loader at construction.
@param callback Interface the LoaderManager will call to report about
changes in the state of the loader.  Required."
      end

      operation 37263799 "destroyLoader"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops and removes the loader with the given ID.  If this loader
had previously reported data to the client through
{@link LoaderCallbacks#onLoadFinished(Loader, Object)}, a call
will be made to {@link LoaderCallbacks#onLoaderReset(Loader)}."
      end

      operation 37263927 "getLoader"
	abstract public return_type class_ref 2111287 // Loader
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<D> ${type}<D> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Loader with the given id or null if no matching Loader
is found."
      end

      operation 37264055 "dump"
	abstract public explicit_return_type "void"
	nparams 4
	  param inout name "prefix" type class_ref 129591 // String
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the LoaderManager's state into the given stream.

@param prefix Text to print at the front of each line.
@param fd The raw file descriptor that the dump is being sent to.
@param writer A PrintWriter to which the dump is to be set.
@param args Additional arguments to the dump request."
      end

      operation 37264183 "enableDebugLogging"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Control whether the framework's internal loader manager debugging
logs are turned on.  If enabled, you will see output in logcat as
the framework performs loader operations."
      end

      operation 37264311 "hasRunningLoaders"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if any loaders managed are currently running and have not
returned data to the application yet."
      end
    end

    class 1801783 "BaseFragmentActivityJB"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for {@code FragmentActivity} to be able to use v16 APIs.

@hide"
      classrelation 5771447 // <generalisation>
	relation 5771447 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5771447 // <generalisation>
	  b parent class_ref 1801911 // BaseFragmentActivityHoneycomb
      end

      attribute 6226103 "mStartedActivityFromFragment"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " We need to keep track of whether startActivityForResult originated from a Fragment, so we
 can conditionally check whether the requestCode collides with our reserved ID space for the
 request index (see above). Unfortunately we can't just call
 super.startActivityForResult(...) to bypass the check when the call didn't come from a
 fragment, since we need to use the ActivityCompat version for backward compatibility."
      end

      operation 35073847 "startActivityForResult"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 131255 // Intent
	  param in name "requestCode" explicit_type "int"
	  param inout name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35073975 "startIntentSenderForResult"
	public explicit_return_type "void"
	nparams 7
	  param inout name "intent" type class_ref 131639 // IntentSender
	  param in name "requestCode" explicit_type "int"
	  param inout name "fillInIntent" type class_ref 131255 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	  param inout name "options" type class_ref 131511 // Bundle
	nexceptions 1
	  exception class_ref 131767 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 1801911 "BaseFragmentActivityHoneycomb"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for {@code FragmentActivity} to be able to use v11 APIs.

@hide"
      classrelation 5771319 // <generalisation>
	relation 5771319 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5771319 // <generalisation>
	  b parent class_ref 1802039 // BaseFragmentActivityEclair
      end

      operation 35073719 "onCreateView"
	public return_type class_ref 134455 // View
	nparams 4
	  param inout name "parent" type class_ref 134455 // View
	  param inout name "name" type class_ref 129591 // String
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "attrs" type class_ref 130359 // AttributeSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 1802039 "BaseFragmentActivityEclair"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for {@code FragmentActivity} to be able to use v5 APIs.

@hide"
      classrelation 5771191 // <generalisation>
	relation 5771191 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5771191 // <generalisation>
	  b parent class_ref 1802167 // BaseFragmentActivityDonut
      end

      attribute 6225975 "mStartedIntentSenderFromFragment"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " We need to keep track of whether startIntentSenderForResult originated from a Fragment, so we
 can conditionally check whether the requestCode collides with our reserved ID space for the
 request index (see above). Unfortunately we can't just call
 super.startIntentSenderForResult(...) to bypass the check when the call didn't come from a
 fragment, since we need to use the ActivityCompat version for backward compatibility."
      end

      operation 35073335 "startIntentSenderForResult"
	public explicit_return_type "void"
	nparams 6
	  param inout name "intent" type class_ref 131639 // IntentSender
	  param in name "requestCode" explicit_type "int"
	  param inout name "fillInIntent" type class_ref 131255 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	nexceptions 1
	  exception class_ref 131767 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35073463 "onBackPressedNotHandled"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35073591 "checkForValidRequestCode"
	class_operation package explicit_return_type "void"
	nparams 1
	  param in name "requestCode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the given request code is a valid code by masking it with 0xffff0000. Throws
an {@link IllegalArgumentException} if the code is not valid."
      end
    end

    class 1802167 "BaseFragmentActivityDonut"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for {@code FragmentActivity} to be able to use Donut APIs.

@hide"
      classrelation 5771063 // <generalisation>
	relation 5771063 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5771063 // <generalisation>
	  b parent class_ref 128183 // Activity
      end

      operation 35072823 "onCreate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35072951 "onCreateView"
	public return_type class_ref 134455 // View
	nparams 3
	  param inout name "name" type class_ref 129591 // String
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "attrs" type class_ref 130359 // AttributeSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35073079 "dispatchFragmentsOnCreateView"
	abstract package return_type class_ref 134455 // View
	nparams 4
	  param inout name "parent" type class_ref 134455 // View
	  param inout name "name" type class_ref 129591 // String
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "attrs" type class_ref 130359 // AttributeSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35073207 "onBackPressedNotHandled"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the back button has been pressed.and not handled by the support fragment manager."
      end
    end

    class 1802295 "ActivityCompat"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Helper for accessing features in {@link android.app.Activity}
introduced after API level 4 in a backwards compatible fashion."
      class 1802423 "OnRequestPermissionsResultCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 35076407 "onRequestPermissionsResult"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "requestCode" explicit_type "int"
	    param inout name "permissions" type class_ref 129591 // String
	    param inout name "grantResults" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @NonNull ${t1}[] ${p1}, @NonNull ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback for the result from requesting permissions. This method
is invoked for every call on {@link #requestPermissions(android.app.Activity,
String[], int)}.
<p>
<strong>Note:</strong> It is possible that the permissions request interaction
with the user is interrupted. In this case you will receive empty permissions
and results arrays which should be treated as a cancellation.
</p>

@param requestCode The request code passed in {@link #requestPermissions(
android.app.Activity, String[], int)}
@param permissions The requested permissions. Never null.
@param grantResults The grant results for the corresponding permissions
    which is either {@link android.content.pm.PackageManager#PERMISSION_GRANTED}
    or {@link android.content.pm.PackageManager#PERMISSION_DENIED}. Never null.

@see #requestPermissions(android.app.Activity, String[], int)"
	end
      end

      classrelation 5772727 // <generalisation>
	relation 5772727 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5772727 // <generalisation>
	  b parent class_ref 1802551 // ContextCompat
      end

      operation 35076535 "invalidateOptionsMenu"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidate the activity's options menu, if able.

<p>Before API level 11 (Android 3.0/Honeycomb) the lifecycle of the
options menu was controlled primarily by the user's operation of
the hardware menu key. When the user presses down on the menu key
for the first time the menu was created and prepared by calls
to {@link Activity#onCreateOptionsMenu(android.view.Menu)} and
{@link Activity#onPrepareOptionsMenu(android.view.Menu)} respectively.
Subsequent presses of the menu key kept the existing instance of the
Menu itself and called {@link Activity#onPrepareOptionsMenu(android.view.Menu)}
to give the activity an opportunity to contextually alter the menu
before the menu panel was shown.</p>

<p>In Android 3.0+ the Action Bar forces the options menu to be built early
so that items chosen to show as actions may be displayed when the activity
first becomes visible. The Activity method invalidateOptionsMenu forces
the entire menu to be destroyed and recreated from
{@link Activity#onCreateOptionsMenu(android.view.Menu)}, offering a similar
though heavier-weight opportunity to change the menu's contents. Normally
this functionality is used to support a changing configuration of Fragments.</p>

<p>Applications may use this support helper to signal a significant change in
activity state that should cause the options menu to be rebuilt. If the app
is running on an older platform version that does not support menu invalidation
the app will still receive {@link Activity#onPrepareOptionsMenu(android.view.Menu)}
the next time the user presses the menu key and this method will return false.
If this method returns true the options menu was successfully invalidated.</p>

@param activity Invalidate the options menu of this activity
@return true if this operation was supported and it completed; false if it was not available."
      end

      operation 35076663 "startActivity"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "intent" type class_ref 131255 // Intent
	  param inout name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start an activity with additional launch information, if able.

<p>In Android 4.1+ additional options were introduced to allow for more
control on activity launch animations. Applications can use this method
along with {@link ActivityOptionsCompat} to use these animations when
available. When run on versions of the platform where this feature does
not exist the activity will be launched normally.</p>

@param activity Context to launch activity from.
@param intent The description of the activity to start.
@param options Additional options for how the Activity should be started.
               May be null if there are no options. See
               {@link ActivityOptionsCompat} for how to build the Bundle
               supplied here; there are no supported definitions for
               building it manually."
      end

      operation 35076791 "startActivityForResult"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "intent" type class_ref 131255 // Intent
	  param in name "requestCode" explicit_type "int"
	  param inout name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, @Nullable ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start new activity with options, if able, for which you would like a
result when it finished.

<p>In Android 4.1+ additional options were introduced to allow for more
control on activity launch animations. Applications can use this method
along with {@link ActivityOptionsCompat} to use these animations when
available. When run on versions of the platform where this feature does
not exist the activity will be launched normally.</p>

@param activity Origin activity to launch from.
@param intent The description of the activity to start.
@param requestCode If >= 0, this code will be returned in
                  onActivityResult() when the activity exits.
@param options Additional options for how the Activity should be started.
               May be null if there are no options. See
               {@link ActivityOptionsCompat} for how to build the Bundle
               supplied here; there are no supported definitions for
               building it manually."
      end

      operation 35076919 "startIntentSenderForResult"
	class_operation public explicit_return_type "void"
	nparams 8
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "intent" type class_ref 131639 // IntentSender
	  param in name "requestCode" explicit_type "int"
	  param inout name "fillInIntent" type class_ref 131255 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	  param inout name "options" type class_ref 131511 // Bundle
	nexceptions 1
	  exception class_ref 131767 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, @Nullable ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start new IntentSender with options, if able, for which you would like a
result when it finished.

<p>In Android 4.1+ additional options were introduced to allow for more
control on activity launch animations. Applications can use this method
along with {@link ActivityOptionsCompat} to use these animations when
available. When run on versions of the platform where this feature does
not exist the activity will be launched normally.</p>

@param activity Origin activity to launch from.
@param intent The IntentSender to launch.
@param requestCode If >= 0, this code will be returned in
                  onActivityResult() when the activity exits.
@param fillInIntent If non-null, this will be provided as the
                    intent parameter to {@link IntentSender#sendIntent}.
@param flagsMask Intent flags in the original IntentSender that you
                 would like to change.
@param flagsValues Desired values for any bits set in <var>flagsMask</var>
@param extraFlags Always set to 0.
@param options Additional options for how the Activity should be started.
               May be null if there are no options. See
               {@link ActivityOptionsCompat} for how to build the Bundle
               supplied here; there are no supported definitions for
               building it manually."
      end

      operation 35077047 "finishAffinity"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finish this activity, and tries to finish all activities immediately below it
in the current task that have the same affinity.

<p>On Android 4.1+ calling this method will call through to the native version of this
method. For other platforms {@link Activity#finish()} will be called instead.</p>"
      end

      operation 35077175 "finishAfterTransition"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the Activity Scene entry Transition and triggers the calling Activity
to reverse its exit Transition. When the exit Transition completes,
{@link Activity#finish()} is called. If no entry Transition was used, finish() is called
immediately and the Activity exit Transition is run.

<p>On Android 4.4 or lower, this method only finishes the Activity with no
special exit transition.</p>"
      end

      operation 35077303 "getReferrer"
	public return_type class_ref 133047 // Uri
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Backwards compatible implementation of {@link android.app.Activity#getReferrer()
Activity.getReferrer}.  Uses the platform's implementation if available, otherwise
only falls back to digging any explicitly specified referrer from the activity's intent."
      end

      operation 35077431 "setEnterSharedElementCallback"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "callback" type class_ref 1800247 // SharedElementCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When {@link android.app.ActivityOptions#makeSceneTransitionAnimation(Activity,
android.view.View, String)} was used to start an Activity, <var>callback</var>
will be called to handle shared elements on the <i>launched</i> Activity. This requires
{@link android.view.Window#FEATURE_CONTENT_TRANSITIONS}.

@param callback Used to manipulate shared element transitions on the launched Activity."
      end

      operation 35077559 "setExitSharedElementCallback"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "callback" type class_ref 1800247 // SharedElementCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When {@link android.app.ActivityOptions#makeSceneTransitionAnimation(Activity,
android.view.View, String)} was used to start an Activity, <var>callback</var>
will be called to handle shared elements on the <i>launching</i> Activity. Most
calls will only come when returning from the started Activity.
This requires {@link android.view.Window#FEATURE_CONTENT_TRANSITIONS}.

@param callback Used to manipulate shared element transitions on the launching Activity."
      end

      operation 35077687 "postponeEnterTransition"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35077815 "startPostponedEnterTransition"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35077943 "requestPermissions"
	class_operation public explicit_return_type "void"
	nparams 3
	  param in name "activity" type class_ref 128183 // Activity
	  param in name "permissions" type class_ref 129591 // String
	  param in name "requestCode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull final ${t0} ${p0}, @NonNull final ${t1}[] ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests permissions to be granted to this application. These permissions
must be requested in your manifest, they should not be granted to your app,
and they should have protection level {@link android.content.pm.PermissionInfo
#PROTECTION_DANGEROUS dangerous}, regardless whether they are declared by
the platform or a third-party app.
<p>
Normal permissions {@link android.content.pm.PermissionInfo#PROTECTION_NORMAL}
are granted at install time if requested in the manifest. Signature permissions
{@link android.content.pm.PermissionInfo#PROTECTION_SIGNATURE} are granted at
install time if requested in the manifest and the signature of your app matches
the signature of the app declaring the permissions.
</p>
<p>
If your app does not have the requested permissions the user will be presented
with UI for accepting them. After the user has accepted or rejected the
requested permissions you will receive a callback reporting whether the
permissions were granted or not. Your activity has to implement {@link
android.support.v4.app.ActivityCompat.OnRequestPermissionsResultCallback}
and the results of permission requests will be delivered to its {@link
android.support.v4.app.ActivityCompat.OnRequestPermissionsResultCallback#onRequestPermissionsResult(
int, String[], int[])} method.
</p>
<p>
Note that requesting a permission does not guarantee it will be granted and
your app should be able to run without having this permission.
</p>
<p>
This method may start an activity allowing the user to choose which permissions
to grant and which to reject. Hence, you should be prepared that your activity
may be paused and resumed. Further, granting some permissions may require
a restart of you application. In such a case, the system will recreate the
activity stack before delivering the result to your onRequestPermissionsResult(
int, String[], int[]).
</p>
<p>
When checking whether you have a permission you should use {@link
#checkSelfPermission(android.content.Context, String)}.
</p>
<p>
Calling this API for permissions already granted to your app would show UI
to the user to decided whether the app can still hold these permissions. This
can be useful if the way your app uses the data guarded by the permissions
changes significantly.
</p>

@param activity The target activity.
@param permissions The requested permissions.
@param requestCode Application specific request code to match with a result
   reported to {@link OnRequestPermissionsResultCallback#onRequestPermissionsResult(
   int, String[], int[])}.

@see #checkSelfPermission(android.content.Context, String)
@see #shouldShowRequestPermissionRationale(android.app.Activity, String)"
      end

      operation 35078071 "shouldShowRequestPermissionRationale"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "permission" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether you should show UI with rationale for requesting a permission.
You should do this only if you do not have the permission and the context in
which the permission is requested does not clearly communicate to the user
what would be the benefit from granting this permission.
<p>
For example, if you write a camera app, requesting the camera permission
would be expected by the user and no rationale for why it is requested is
needed. If however, the app needs location for tagging photos then a non-tech
savvy user may wonder how location is related to taking photos. In this case
you may choose to show UI with rationale of requesting this permission.
</p>

@param activity The target activity.
@param permission A permission your app wants to request.
@return Whether you can show permission rationale UI.

@see #checkSelfPermission(android.content.Context, String)
@see #requestPermissions(android.app.Activity, String[], int)"
      end

      operation 35078199 "createCallback"
	class_operation private return_type class_ref 1802807 // SharedElementCallback21
	nparams 1
	  param inout name "callback" type class_ref 1800247 // SharedElementCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1802935 "SharedElementCallback21Impl"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5773623 // <generalisation>
	  relation 5773623 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5773623 // <generalisation>
	    b parent class_ref 1802807 // SharedElementCallback21
	end

	classrelation 5773751 // mCallback (<unidirectional association>)
	  relation 5773751 --->
	    a role_name "mCallback" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5773751 // mCallback (<unidirectional association>)
	    b parent class_ref 1800247 // SharedElementCallback
	end

	operation 35081783 "SharedElementCallback21Impl"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "callback" type class_ref 1800247 // SharedElementCallback
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 35081911 "onSharedElementStart"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "sharedElementNames" explicit_type "List<String>"
	    param inout name "sharedElements" explicit_type "List<View>"
	    param inout name "sharedElementSnapshots" explicit_type "List<View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 35082039 "onSharedElementEnd"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "sharedElementNames" explicit_type "List<String>"
	    param inout name "sharedElements" explicit_type "List<View>"
	    param inout name "sharedElementSnapshots" explicit_type "List<View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 35082167 "onRejectSharedElements"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "rejectedSharedElements" explicit_type "List<View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 35082295 "onMapSharedElements"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "names" explicit_type "List<String>"
	    param inout name "sharedElements" explicit_type "Map<String, View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 35082423 "onCaptureSharedElementSnapshot"
	  public return_type class_ref 137399 // Parcelable
	  nparams 3
	    param inout name "sharedElement" type class_ref 134455 // View
	    param inout name "viewToGlobalMatrix" type class_ref 141111 // Matrix
	    param inout name "screenBounds" type class_ref 150967 // RectF
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 35082551 "onCreateSnapshotView"
	  public return_type class_ref 134455 // View
	  nparams 2
	    param inout name "context" type class_ref 128567 // Context
	    param inout name "snapshot" type class_ref 137399 // Parcelable
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 1802679 "ActivityCompat21"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      class 1802807 "SharedElementCallback21"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 35079095 "onSharedElementStart"
	  abstract public explicit_return_type "void"
	  nparams 3
	    param inout name "sharedElementNames" explicit_type "List<String>"
	    param inout name "sharedElements" explicit_type "List<View>"
	    param inout name "sharedElementSnapshots" explicit_type "List<View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 35079223 "onSharedElementEnd"
	  abstract public explicit_return_type "void"
	  nparams 3
	    param inout name "sharedElementNames" explicit_type "List<String>"
	    param inout name "sharedElements" explicit_type "List<View>"
	    param inout name "sharedElementSnapshots" explicit_type "List<View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 35079351 "onRejectSharedElements"
	  abstract public explicit_return_type "void"
	  nparams 1
	    param inout name "rejectedSharedElements" explicit_type "List<View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 35079479 "onMapSharedElements"
	  abstract public explicit_return_type "void"
	  nparams 2
	    param inout name "names" explicit_type "List<String>"
	    param inout name "sharedElements" explicit_type "Map<String, View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 35079607 "onCaptureSharedElementSnapshot"
	  abstract public return_type class_ref 137399 // Parcelable
	  nparams 3
	    param inout name "sharedElement" type class_ref 134455 // View
	    param inout name "viewToGlobalMatrix" type class_ref 141111 // Matrix
	    param inout name "screenBounds" type class_ref 150967 // RectF
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 35079735 "onCreateSnapshotView"
	  abstract public return_type class_ref 134455 // View
	  nparams 2
	    param inout name "context" type class_ref 128567 // Context
	    param inout name "snapshot" type class_ref 137399 // Parcelable
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 35078327 "setMediaController"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "mediaControllerObj" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35078455 "finishAfterTransition"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35078583 "setEnterSharedElementCallback"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "callback" type class_ref 1802807 // SharedElementCallback21
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35078711 "setExitSharedElementCallback"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "callback" type class_ref 1802807 // SharedElementCallback21
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35078839 "postponeEnterTransition"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35078967 "startPostponedEnterTransition"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "activity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35079863 "createCallback"
	class_operation private return_type class_ref 1800247 // SharedElementCallback
	nparams 1
	  param inout name "callback" type class_ref 1802807 // SharedElementCallback21
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1803063 "SharedElementCallbackImpl"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5773367 // <generalisation>
	  relation 5773367 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5773367 // <generalisation>
	    b parent class_ref 1800247 // SharedElementCallback
	end

	classrelation 5773495 // mCallback (<unidirectional association>)
	  relation 5773495 --->
	    a role_name "mCallback" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5773495 // mCallback (<unidirectional association>)
	    b parent class_ref 1802807 // SharedElementCallback21
	end

	operation 35080887 "SharedElementCallbackImpl"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "callback" type class_ref 1802807 // SharedElementCallback21
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 35081015 "onSharedElementStart"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "sharedElementNames" explicit_type "List<String>"
	    param inout name "sharedElements" explicit_type "List<View>"
	    param inout name "sharedElementSnapshots" explicit_type "List<View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 35081143 "onSharedElementEnd"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "sharedElementNames" explicit_type "List<String>"
	    param inout name "sharedElements" explicit_type "List<View>"
	    param inout name "sharedElementSnapshots" explicit_type "List<View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 35081271 "onRejectSharedElements"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "rejectedSharedElements" explicit_type "List<View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 35081399 "onMapSharedElements"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "names" explicit_type "List<String>"
	    param inout name "sharedElements" explicit_type "Map<String, View>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 35081527 "onCaptureSharedElementSnapshot"
	  public return_type class_ref 137399 // Parcelable
	  nparams 3
	    param inout name "sharedElement" type class_ref 134455 // View
	    param inout name "viewToGlobalMatrix" type class_ref 141111 // Matrix
	    param inout name "screenBounds" type class_ref 150967 // RectF
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 35081655 "onCreateSnapshotView"
	  public return_type class_ref 134455 // View
	  nparams 2
	    param inout name "context" type class_ref 128567 // Context
	    param inout name "snapshot" type class_ref 137399 // Parcelable
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 1803191 "ActivityCompatApi23"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      class 1803319 "RequestPermissionsRequestCodeValidator"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 35082679 "validateRequestPermissionsRequestCode"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "requestCode" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 35082807 "requestPermissions"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "permissions" type class_ref 129591 // String
	  param in name "requestCode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35082935 "shouldShowRequestPermissionRationale"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "activity" type class_ref 128183 // Activity
	  param inout name "permission" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1803447 "FragmentController"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 1804727 "TaskStackBuilder"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility class for constructing synthetic back stacks for cross-task navigation
on Android 3.0 and newer.

<p>In API level 11 (Android 3.0/Honeycomb) the recommended conventions for
app navigation using the back key changed. The back key's behavior is local
to the current task and does not capture navigation across different tasks.
Navigating across tasks and easily reaching the previous task is accomplished
through the \"recents\" UI, accessible through the software-provided Recents key
on the navigation or system bar. On devices with the older hardware button configuration
the recents UI can be accessed with a long press on the Home key.</p>

<p>When crossing from one task stack to another post-Android 3.0,
the application should synthesize a back stack/history for the new task so that
the user may navigate out of the new task and back to the Launcher by repeated
presses of the back key. Back key presses should not navigate across task stacks.</p>

<p>TaskStackBuilder provides a backward-compatible way to obey the correct conventions
around cross-task navigation on the device's version of the platform. On devices running
Android 3.0 or newer, calls to the {@link #startActivities()} method or sending the
{@link PendingIntent} generated by {@link #getPendingIntent(int, int)} will construct
the synthetic back stack as prescribed. On devices running older versions of the platform,
these same calls will invoke the topmost activity in the supplied stack, ignoring
the rest of the synthetic stack and allowing the back key to navigate back to the previous
task.</p>

<div class=\"special reference\">
<h3>About Navigation</h3>
For more detailed information about tasks, the back stack, and navigation design guidelines,
please read
<a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back Stack</a>
from the developer guide and <a href=\"{@docRoot}design/patterns/navigation.html\">Navigation</a>
from the design guide.
</div>"
      class 1804855 "SupportParentable"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 35084087 "getSupportParentActivityIntent"
	  public return_type class_ref 131255 // Intent
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 5777335 // <realization>
	relation 5777335 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}<Intent>"
	    classrelation_ref 5777335 // <realization>
	  b parent class_ref 444855 // Iterable
      end

      classrelation 5777463 // TAG (<unidirectional association>)
	relation 5777463 --->
	  a role_name "TAG" init_value " \"TaskStackBuilder\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5777463 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      class 1804983 "TaskStackBuilderImpl"
	visibility package stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 35084215 "getPendingIntent"
	  public return_type class_ref 159287 // PendingIntent
	  nparams 5
	    param inout name "context" type class_ref 128567 // Context
	    param inout name "intents" type class_ref 131255 // Intent
	    param in name "requestCode" explicit_type "int"
	    param in name "flags" explicit_type "int"
	    param inout name "options" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1805111 "TaskStackBuilderImplBase"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5777591 // <realization>
	  relation 5777591 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5777591 // <realization>
	    b parent class_ref 1804983 // TaskStackBuilderImpl
	end

	operation 35084343 "getPendingIntent"
	  public return_type class_ref 159287 // PendingIntent
	  nparams 5
	    param inout name "context" type class_ref 128567 // Context
	    param inout name "intents" type class_ref 131255 // Intent
	    param in name "requestCode" explicit_type "int"
	    param in name "flags" explicit_type "int"
	    param inout name "options" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1805239 "TaskStackBuilderImplHoneycomb"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5777719 // <realization>
	  relation 5777719 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5777719 // <realization>
	    b parent class_ref 1804983 // TaskStackBuilderImpl
	end

	operation 35084471 "getPendingIntent"
	  public return_type class_ref 159287 // PendingIntent
	  nparams 5
	    param inout name "context" type class_ref 128567 // Context
	    param inout name "intents" type class_ref 131255 // Intent
	    param in name "requestCode" explicit_type "int"
	    param in name "flags" explicit_type "int"
	    param inout name "options" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1805367 "TaskStackBuilderImplJellybean"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5777847 // <realization>
	  relation 5777847 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5777847 // <realization>
	    b parent class_ref 1804983 // TaskStackBuilderImpl
	end

	operation 35084599 "getPendingIntent"
	  public return_type class_ref 159287 // PendingIntent
	  nparams 5
	    param inout name "context" type class_ref 128567 // Context
	    param inout name "intents" type class_ref 131255 // Intent
	    param in name "requestCode" explicit_type "int"
	    param in name "flags" explicit_type "int"
	    param inout name "options" type class_ref 131511 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 5777975 // IMPL (<unidirectional association>)
	relation 5777975 --->
	  a role_name "IMPL" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5777975 // IMPL (<unidirectional association>)
	  b parent class_ref 1804983 // TaskStackBuilderImpl
      end

      extra_member 159799 "initialization"
	
	cpp "" ""
	java "  static {
        if (Build.VERSION.SDK_INT >= 11) {
            IMPL = new TaskStackBuilderImplHoneycomb();
        } else {
            IMPL = new TaskStackBuilderImplBase();
        }
    }"
	php ""
	python ""
	idl ""
      end

      classrelation 5778103 // mIntents (<unidirectional association>)
	relation 5778103 --->
	  stereotype "ArrayList"
	  a role_name "mIntents" init_value " new ArrayList<Intent>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 5778103 // mIntents (<unidirectional association>)
	  b parent class_ref 131255 // Intent
      end

      classrelation 5778231 // mSourceContext (<unidirectional association>)
	relation 5778231 --->
	  a role_name "mSourceContext" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5778231 // mSourceContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      operation 35084727 "TaskStackBuilder"
	private explicit_return_type ""
	nparams 1
	  param inout name "a" type class_ref 128567 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35084855 "create"
	class_operation public return_type class_ref 1804727 // TaskStackBuilder
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a new TaskStackBuilder for launching a fresh task stack consisting
of a series of activities.

@param context The context that will launch the new task stack or generate a PendingIntent
@return A new TaskStackBuilder"
      end

      operation 35084983 "from"
	class_operation public return_type class_ref 1804727 // TaskStackBuilder
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Return a new TaskStackBuilder for launching a fresh task stack consisting
of a series of activities.

@param context The context that will launch the new task stack or generate a PendingIntent
@return A new TaskStackBuilder

@deprecated use {@link #create(Context)} instead"
      end

      operation 35085111 "addNextIntent"
	public return_type class_ref 1804727 // TaskStackBuilder
	nparams 1
	  param inout name "nextIntent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent to the task stack. The most recently added Intent will invoke
the Activity at the top of the final task stack.

@param nextIntent Intent for the next Activity in the synthesized task stack
@return This TaskStackBuilder for method chaining"
      end

      operation 35085239 "addNextIntentWithParentStack"
	public return_type class_ref 1804727 // TaskStackBuilder
	nparams 1
	  param inout name "nextIntent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent with the resolved chain of parents for the target activity to
the task stack.

<p>This is equivalent to calling {@link #addParentStack(ComponentName) addParentStack}
with the resolved ComponentName of nextIntent (if it can be resolved), followed by
{@link #addNextIntent(Intent) addNextIntent} with nextIntent.</p>

@param nextIntent Intent for the topmost Activity in the synthesized task stack.
                  Its chain of parents as specified in the manifest will be added.
@return This TaskStackBuilder for method chaining."
      end

      operation 35085367 "addParentStack"
	public return_type class_ref 1804727 // TaskStackBuilder
	nparams 1
	  param inout name "sourceActivity" type class_ref 128183 // Activity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add the activity parent chain as specified by manifest &lt;meta-data&gt; elements
to the task stack builder.

@param sourceActivity All parents of this activity will be added
@return This TaskStackBuilder for method chaining"
      end

      operation 35085495 "addParentStack"
	public return_type class_ref 1804727 // TaskStackBuilder
	nparams 1
	  param inout name "sourceActivityClass" type class_ref 132791 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add the activity parent chain as specified by manifest &lt;meta-data&gt; elements
to the task stack builder.

@param sourceActivityClass All parents of this activity will be added
@return This TaskStackBuilder for method chaining"
      end

      operation 35085623 "addParentStack"
	public return_type class_ref 1804727 // TaskStackBuilder
	nparams 1
	  param inout name "sourceActivityName" type class_ref 132279 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add the activity parent chain as specified by manifest &lt;meta-data&gt; elements
to the task stack builder.

@param sourceActivityName Must specify an Activity component. All parents of
                          this activity will be added
@return This TaskStackBuilder for method chaining"
      end

      operation 35085751 "getIntentCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the number of intents added so far."
      end

      operation 35085879 "getIntent"
	public return_type class_ref 131255 // Intent
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Get the intent at the specified index.
Useful if you need to modify the flags or extras of an intent that was previously added,
for example with {@link #addParentStack(Activity)}.

@param index Index from 0-getIntentCount()
@return the intent at position index

@deprecated Renamed to editIntentAt to better reflect intended usage"
      end

      operation 35086007 "editIntentAt"
	public return_type class_ref 131255 // Intent
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the intent at the specified index for modification.
Useful if you need to modify the flags or extras of an intent that was previously added,
for example with {@link #addParentStack(Activity)}.

@param index Index from 0-getIntentCount()
@return the intent at position index"
      end

      operation 35086135 "iterator"
	public return_type class_ref 131255 // Intent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use editIntentAt instead"
      end

      operation 35086263 "startActivities"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start the task stack constructed by this builder. The Context used to obtain
this builder must be an Activity.

<p>On devices that do not support API level 11 or higher the topmost activity
will be started as a new task. On devices that do support API level 11 or higher
the new task stack will be created in its entirety.</p>"
      end

      operation 35086391 "startActivities"
	public explicit_return_type "void"
	nparams 1
	  param inout name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start the task stack constructed by this builder. The Context used to obtain
this builder must be an Activity.

<p>On devices that do not support API level 11 or higher the topmost activity
will be started as a new task. On devices that do support API level 11 or higher
the new task stack will be created in its entirety.</p>

@param options Additional options for how the Activity should be started.
See {@link android.content.Context#startActivity(Intent, Bundle)"
      end

      operation 35086519 "getPendingIntent"
	public return_type class_ref 159287 // PendingIntent
	nparams 2
	  param in name "requestCode" explicit_type "int"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a {@link PendingIntent} for launching the task constructed by this builder so far.

@param requestCode Private request code for the sender
@param flags May be {@link PendingIntent#FLAG_ONE_SHOT},
             {@link PendingIntent#FLAG_NO_CREATE}, {@link PendingIntent#FLAG_CANCEL_CURRENT},
             {@link PendingIntent#FLAG_UPDATE_CURRENT}, or any of the flags supported by
             {@link Intent#fillIn(Intent, int)} to control which unspecified parts of the
             intent that can be supplied when the actual send happens.
@return The obtained PendingIntent"
      end

      operation 35086647 "getPendingIntent"
	public return_type class_ref 159287 // PendingIntent
	nparams 3
	  param in name "requestCode" explicit_type "int"
	  param in name "flags" explicit_type "int"
	  param inout name "options" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a {@link PendingIntent} for launching the task constructed by this builder so far.

@param requestCode Private request code for the sender
@param flags May be {@link PendingIntent#FLAG_ONE_SHOT},
             {@link PendingIntent#FLAG_NO_CREATE}, {@link PendingIntent#FLAG_CANCEL_CURRENT},
             {@link PendingIntent#FLAG_UPDATE_CURRENT}, or any of the flags supported by
             {@link Intent#fillIn(Intent, int)} to control which unspecified parts of the
             intent that can be supplied when the actual send happens.
@param options Additional options for how the Activity should be started.
See {@link android.content.Context#startActivity(Intent, Bundle)
@return The obtained PendingIntent"
      end

      operation 35086775 "getIntents"
	public return_type class_ref 131255 // Intent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an array containing the intents added to this builder. The intent at the
root of the task stack will appear as the first item in the array and the
intent at the top of the stack will appear as the last item.

@return An array containing the intents added to this builder."
      end
    end

    class 2114103 "FragmentTransaction"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 2280631 "DialogFragment"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Static library support version of the framework's {@link android.app.DialogFragment}.
Used to write apps that run on platforms prior to Android 3.0.  When running
on Android 3.0 or above, this implementation is still used; it does not try
to switch to the framework's implementation.  See the framework SDK
documentation for a class overview."
      classrelation 7190967 // <generalisation>
	relation 7190967 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7190967 // <generalisation>
	  b parent class_ref 1799479 // Fragment
      end

      classrelation 7191095 // <realization>
	relation 7191095 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7191095 // <realization>
	  b parent class_ref 345911 // OnCancelListener
      end

      classrelation 7191223 // <realization>
	relation 7191223 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7191223 // <realization>
	  b parent class_ref 346039 // OnDismissListener
      end

      class 2280759 "DialogStyle"
	visibility private stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef({STYLE_NORMAL, STYLE_NO_TITLE, STYLE_NO_FRAME, STYLE_NO_INPUT})
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      attribute 7646007 "STYLE_NORMAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Style for {@link #setStyle(int, int)}: a basic,
normal dialog.
"
      end

      attribute 7646135 "STYLE_NO_TITLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Style for {@link #setStyle(int, int)}: don't include
a title area.
"
      end

      attribute 7646263 "STYLE_NO_FRAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Style for {@link #setStyle(int, int)}: don't draw
any frame at all; the view hierarchy returned by {@link #onCreateView}
is entirely responsible for drawing the dialog.
"
      end

      attribute 7646391 "STYLE_NO_INPUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Style for {@link #setStyle(int, int)}: like
{@link #STYLE_NO_FRAME}, but also disables all input to the dialog.
The user can not touch it, and its window will not receive input focus.
"
      end

      classrelation 7191351 // SAVED_DIALOG_STATE_TAG (<unidirectional association>)
	relation 7191351 --->
	  a role_name "SAVED_DIALOG_STATE_TAG" init_value " \"android:savedDialogState\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7191351 // SAVED_DIALOG_STATE_TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7191479 // SAVED_STYLE (<unidirectional association>)
	relation 7191479 --->
	  a role_name "SAVED_STYLE" init_value " \"android:style\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7191479 // SAVED_STYLE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7191607 // SAVED_THEME (<unidirectional association>)
	relation 7191607 --->
	  a role_name "SAVED_THEME" init_value " \"android:theme\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7191607 // SAVED_THEME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7191735 // SAVED_CANCELABLE (<unidirectional association>)
	relation 7191735 --->
	  a role_name "SAVED_CANCELABLE" init_value " \"android:cancelable\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7191735 // SAVED_CANCELABLE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7191863 // SAVED_SHOWS_DIALOG (<unidirectional association>)
	relation 7191863 --->
	  a role_name "SAVED_SHOWS_DIALOG" init_value " \"android:showsDialog\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7191863 // SAVED_SHOWS_DIALOG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7191991 // SAVED_BACK_STACK_ID (<unidirectional association>)
	relation 7191991 --->
	  a role_name "SAVED_BACK_STACK_ID" init_value " \"android:backStackId\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7191991 // SAVED_BACK_STACK_ID (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 7646519 "mStyle"
	package explicit_type "int"
	init_value " STYLE_NORMAL"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 7646647 "mTheme"
	package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 7646775 "mCancelable"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 7646903 "mShowsDialog"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 7647031 "mBackStackId"
	package explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7192119 // mDialog (<unidirectional association>)
	relation 7192119 --->
	  a role_name "mDialog" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7192119 // mDialog (<unidirectional association>)
	  b parent class_ref 155191 // Dialog
      end

      attribute 7647159 "mViewDestroyed"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 7647287 "mDismissed"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 7647415 "mShownByMe"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 38907703 "DialogFragment"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38907831 "setStyle"
	public explicit_return_type "void"
	nparams 2
	  param in name "style" explicit_type "int"
	  param in name "theme" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@DialogStyle ${t0} ${p0}, @StyleRes ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call to customize the basic appearance and behavior of the
fragment's dialog.  This can be used for some common dialog behaviors,
taking care of selecting flags, theme, and other options for you.  The
same effect can be achieve by manually setting Dialog and Window
attributes yourself.  Calling this after the fragment's Dialog is
created will have no effect.

@param style Selects a standard style: may be {@link #STYLE_NORMAL},
{@link #STYLE_NO_TITLE}, {@link #STYLE_NO_FRAME}, or
{@link #STYLE_NO_INPUT}.
@param theme Optional custom theme.  If 0, an appropriate theme (based
on the style) will be selected for you."
      end

      operation 38907959 "show"
	public explicit_return_type "void"
	nparams 2
	  param inout name "manager" type class_ref 1800759 // FragmentManager
	  param inout name "tag" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Display the dialog, adding the fragment to the given FragmentManager.  This
is a convenience for explicitly creating a transaction, adding the
fragment to it with the given tag, and committing it.  This does
<em>not</em> add the transaction to the back stack.  When the fragment
is dismissed, a new transaction will be executed to remove it from
the activity.
@param manager The FragmentManager this fragment will be added to.
@param tag The tag for this fragment, as per
{@link FragmentTransaction#add(Fragment, String) FragmentTransaction.add}."
      end

      operation 38908087 "show"
	public explicit_return_type "int"
	nparams 2
	  param inout name "transaction" type class_ref 2114103 // FragmentTransaction
	  param inout name "tag" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Display the dialog, adding the fragment using an existing transaction
and then committing the transaction.
@param transaction An existing transaction in which to add the fragment.
@param tag The tag for this fragment, as per
{@link FragmentTransaction#add(Fragment, String) FragmentTransaction.add}.
@return Returns the identifier of the committed transaction, as per
{@link FragmentTransaction#commit() FragmentTransaction.commit()}."
      end

      operation 38908215 "dismiss"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Dismiss the fragment and its dialog.  If the fragment was added to the
back stack, all back stack state up to and including this entry will
be popped.  Otherwise, a new transaction will be committed to remove
the fragment."
      end

      operation 38908343 "dismissAllowingStateLoss"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #dismiss()} that uses
{@link FragmentTransaction#commitAllowingStateLoss()
FragmentTransaction.commitAllowingStateLoss()}. See linked
documentation for further details."
      end

      operation 38908471 "dismissInternal"
	package explicit_return_type "void"
	nparams 1
	  param inout name "allowStateLoss" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38908599 "getDialog"
	public return_type class_ref 155191 // Dialog
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38908727 "getTheme"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@StyleRes
"
	
	
	
      end

      operation 38908855 "setCancelable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cancelable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Control whether the shown Dialog is cancelable.  Use this instead of
directly calling {@link Dialog#setCancelable(boolean)
Dialog.setCancelable(boolean)}, because DialogFragment needs to change
its behavior based on this.

@param cancelable If true, the dialog is cancelable.  The default
is true."
      end

      operation 38908983 "isCancelable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current value of {@link #setCancelable(boolean)}."
      end

      operation 38909111 "setShowsDialog"
	public explicit_return_type "void"
	nparams 1
	  param inout name "showsDialog" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Controls whether this fragment should be shown in a dialog.  If not
set, no Dialog will be created in {@link #onActivityCreated(Bundle)},
and the fragment's view hierarchy will thus not be added to it.  This
allows you to instead use it as a normal fragment (embedded inside of
its activity).

<p>This is normally set for you based on whether the fragment is
associated with a container view ID passed to
{@link FragmentTransaction#add(int, Fragment) FragmentTransaction.add(int, Fragment)}.
If the fragment was added with a container, setShowsDialog will be
initialized to false; otherwise, it will be true.

@param showsDialog If true, the fragment will be displayed in a Dialog.
If false, no Dialog will be created and the fragment's view hierarchly
left undisturbed."
      end

      operation 38909239 "getShowsDialog"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current value of {@link #setShowsDialog(boolean)}."
      end

      operation 38909367 "onAttach"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38909495 "onDetach"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38909623 "onCreate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38909751 "getLayoutInflater"
	public return_type class_ref 133815 // LayoutInflater
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 38909879 "setupDialog"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dialog" type class_ref 155191 // Dialog
	  param in name "style" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 38910007 "onCreateDialog"
	public return_type class_ref 155191 // Dialog
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Override to build your own custom Dialog container.  This is typically
used to show an AlertDialog instead of a generic Dialog; when doing so,
{@link #onCreateView(LayoutInflater, ViewGroup, Bundle)} does not need
to be implemented since the AlertDialog takes care of its own content.

<p>This method will be called after {@link #onCreate(Bundle)} and
before {@link #onCreateView(LayoutInflater, ViewGroup, Bundle)}.  The
default implementation simply instantiates and returns a {@link Dialog}
class.

<p><em>Note: DialogFragment own the {@link Dialog#setOnCancelListener
Dialog.setOnCancelListener} and {@link Dialog#setOnDismissListener
Dialog.setOnDismissListener} callbacks.  You must not set them yourself.</em>
To find out about these events, override {@link #onCancel(DialogInterface)}
and {@link #onDismiss(DialogInterface)}.</p>

@param savedInstanceState The last saved instance state of the Fragment,
or null if this is a freshly created Fragment.

@return Return a new Dialog instance to be displayed by the Fragment."
      end

      operation 38910135 "onCancel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dialog" type class_ref 345783 // DialogInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38910263 "onDismiss"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dialog" type class_ref 345783 // DialogInterface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 38910391 "onActivityCreated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38910519 "onStart"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38910647 "onSaveInstanceState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "outState" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38910775 "onStop"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38910903 "onDestroyView"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Remove dialog."
      end
    end
  end

  deploymentview 211767 "app"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 997559 "Fragment"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.content.ComponentCallbacks;
import android.content.Context;
import android.content.Intent;
import android.content.IntentSender;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import android.support.annotation.CallSuper;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.annotation.StringRes;
import android.support.v4.util.SimpleArrayMap;
import android.support.v4.util.DebugUtils;
import android.support.v4.view.LayoutInflaterCompat;
import android.util.AttributeSet;
import android.util.Log;
import android.util.SparseArray;
import android.view.ContextMenu;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.ContextMenu.ContextMenuInfo;
import android.view.View.OnCreateContextMenuListener;
import android.view.animation.Animation;
import android.widget.AdapterView;
import java.io.FileDescriptor;
import java.io.PrintWriter;
${definition}"
      associated_classes
	class_ref 1799607 // FragmentState
	class_ref 1799479 // Fragment
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 997687 "ListFragment"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.AnimationUtils;
import android.widget.AdapterView;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;
${definition}"
      associated_classes
	class_ref 1799351 // ListFragment
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 998071 "BaseFragmentActivityDonut"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.content.Context;
import android.os.Build;
import android.os.Bundle;
import android.util.AttributeSet;
import android.view.View;
${definition}"
      associated_classes
	class_ref 1802167 // BaseFragmentActivityDonut
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 998199 "BaseFragmentActivityEclair"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Intent;
import android.content.IntentSender;
import android.support.annotation.Nullable;
${definition}"
      associated_classes
	class_ref 1802039 // BaseFragmentActivityEclair
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 998327 "BaseFragmentActivityHoneycomb"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.Build;
import android.util.AttributeSet;
import android.view.View;
${definition}"
      associated_classes
	class_ref 1801911 // BaseFragmentActivityHoneycomb
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 998455 "BaseFragmentActivityJB"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Intent;
import android.content.IntentSender;
import android.os.Bundle;
import android.support.annotation.Nullable;
${definition}"
      associated_classes
	class_ref 1801783 // BaseFragmentActivityJB
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License"
    end

    artifact 998711 "SharedElementCallback"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.os.Parcelable;
import android.view.View;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 1800247 // SharedElementCallback
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 998839 "ActivityCompat21"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.app.SharedElementCallback;
import android.content.Context;
import android.graphics.Matrix;
import android.graphics.RectF;
import android.media.session.MediaController;
import android.os.Parcelable;
import android.view.View;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 1802679 // ActivityCompat21
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 998967 "ActivityCompat"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.IntentSender;
import android.content.pm.PackageManager;
import android.graphics.Matrix;
import android.graphics.RectF;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.Parcelable;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v4.content.ContextCompat;
import android.view.View;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 1802295 // ActivityCompat
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 999095 "ActivityCompat23"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
${definition}"
      associated_classes
	class_ref 1803191 // ActivityCompatApi23
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 999607 "TaskStackBuilder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.app.PendingIntent;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Build;
import android.os.Bundle;
import android.support.v4.content.ContextCompat;
import android.support.v4.content.IntentCompat;
import android.util.Log;
import java.util.ArrayList;
import java.util.Iterator;
${definition}"
      associated_classes
	class_ref 1804727 // TaskStackBuilder
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1170999 "LoaderManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.os.Bundle;
import android.support.v4.content.Loader;
import android.support.v4.util.DebugUtils;
import android.support.v4.util.SparseArrayCompat;
import android.util.Log;
import java.io.FileDescriptor;
import java.io.PrintWriter;
import java.lang.reflect.Modifier;
${definition}"
      associated_classes
	class_ref 1800887 // LoaderManager
	class_ref 1800119 // LoaderManagerImpl
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1272503 "DialogFragment"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.annotation.IntDef;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.annotation.StyleRes;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.WindowManager;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_classes
	class_ref 2280631 // DialogFragment
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
