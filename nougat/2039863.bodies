class ImsCallSession
!!!36652599.java!!!	ImsCallSession(inout iSession : IImsCallSession)
        miSession = iSession;

        if (iSession != null) {
            try {
                iSession.setListener(new IImsCallSessionListenerProxy());
            } catch (RemoteException e) {
            }
        } else {
            mClosed = true;
        }
!!!36652727.java!!!	ImsCallSession(inout iSession : IImsCallSession, inout listener : ImsCallSession::Listener)
        this(iSession);
        setListener(listener);
!!!36652855.java!!!	close() : void
        if (mClosed) {
            return;
        }

        try {
            miSession.close();
            mClosed = true;
        } catch (RemoteException e) {
        }
!!!36652983.java!!!	getCallId() : String
        if (mClosed) {
            return null;
        }

        try {
            return miSession.getCallId();
        } catch (RemoteException e) {
            return null;
        }
!!!36653111.java!!!	getCallProfile() : ImsCallProfile
        if (mClosed) {
            return null;
        }

        try {
            return miSession.getCallProfile();
        } catch (RemoteException e) {
            return null;
        }
!!!36653239.java!!!	getLocalCallProfile() : ImsCallProfile
        if (mClosed) {
            return null;
        }

        try {
            return miSession.getLocalCallProfile();
        } catch (RemoteException e) {
            return null;
        }
!!!36653367.java!!!	getRemoteCallProfile() : ImsCallProfile
        if (mClosed) {
            return null;
        }

        try {
            return miSession.getRemoteCallProfile();
        } catch (RemoteException e) {
            return null;
        }
!!!36653495.java!!!	getVideoCallProvider() : IImsVideoCallProvider
        if (mClosed) {
            return null;
        }

        try {
            return miSession.getVideoCallProvider();
        } catch (RemoteException e) {
            return null;
        }
!!!36653623.java!!!	getProperty(inout name : String) : String
        if (mClosed) {
            return null;
        }

        try {
            return miSession.getProperty(name);
        } catch (RemoteException e) {
            return null;
        }
!!!36653751.java!!!	getState() : int
        if (mClosed) {
            return State.INVALID;
        }

        try {
            return miSession.getState();
        } catch (RemoteException e) {
            return State.INVALID;
        }
!!!36653879.java!!!	isAlive() : boolean
        if (mClosed) {
            return false;
        }

        int state = getState();
        switch (state) {
            case State.IDLE:
            case State.INITIATED:
            case State.NEGOTIATING:
            case State.ESTABLISHING:
            case State.ESTABLISHED:
            case State.RENEGOTIATING:
            case State.REESTABLISHING:
                return true;
            default:
                return false;
        }
!!!36654007.java!!!	getSession() : IImsCallSession
        return miSession;
!!!36654135.java!!!	isInCall() : boolean
        if (mClosed) {
            return false;
        }

        try {
            return miSession.isInCall();
        } catch (RemoteException e) {
            return false;
        }
!!!36654263.java!!!	setListener(inout listener : ImsCallSession::Listener) : void
        mListener = listener;
!!!36654391.java!!!	setMute(inout muted : boolean) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.setMute(muted);
        } catch (RemoteException e) {
        }
!!!36654519.java!!!	start(inout callee : String, inout profile : ImsCallProfile) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.start(callee, profile);
        } catch (RemoteException e) {
        }
!!!36654647.java!!!	start(inout participants : String, inout profile : ImsCallProfile) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.startConference(participants, profile);
        } catch (RemoteException e) {
        }
!!!36654775.java!!!	accept(in callType : int, inout profile : ImsStreamMediaProfile) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.accept(callType, profile);
        } catch (RemoteException e) {
        }
!!!36654903.java!!!	reject(in reason : int) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.reject(reason);
        } catch (RemoteException e) {
        }
!!!36655031.java!!!	terminate(in reason : int) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.terminate(reason);
        } catch (RemoteException e) {
        }
!!!36655159.java!!!	hold(inout profile : ImsStreamMediaProfile) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.hold(profile);
        } catch (RemoteException e) {
        }
!!!36655287.java!!!	resume(inout profile : ImsStreamMediaProfile) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.resume(profile);
        } catch (RemoteException e) {
        }
!!!36655415.java!!!	merge() : void
        if (mClosed) {
            return;
        }

        try {
            miSession.merge();
        } catch (RemoteException e) {
        }
!!!36655543.java!!!	update(in callType : int, inout profile : ImsStreamMediaProfile) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.update(callType, profile);
        } catch (RemoteException e) {
        }
!!!36655671.java!!!	extendToConference(inout participants : String) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.extendToConference(participants);
        } catch (RemoteException e) {
        }
!!!36655799.java!!!	inviteParticipants(inout participants : String) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.inviteParticipants(participants);
        } catch (RemoteException e) {
        }
!!!36655927.java!!!	removeParticipants(inout participants : String) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.removeParticipants(participants);
        } catch (RemoteException e) {
        }
!!!36656055.java!!!	sendDtmf(in c : char, inout result : Message) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.sendDtmf(c, result);
        } catch (RemoteException e) {
        }
!!!36656183.java!!!	startDtmf(in c : char) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.startDtmf(c);
        } catch (RemoteException e) {
        }
!!!36656311.java!!!	stopDtmf() : void
        if (mClosed) {
            return;
        }

        try {
            miSession.stopDtmf();
        } catch (RemoteException e) {
        }
!!!36656439.java!!!	sendUssd(inout ussdMessage : String) : void
        if (mClosed) {
            return;
        }

        try {
            miSession.sendUssd(ussdMessage);
        } catch (RemoteException e) {
        }
!!!36656567.java!!!	isMultiparty() : boolean
        if (mClosed) {
            return false;
        }

        try {
            return miSession.isMultiparty();
        } catch (RemoteException e) {
            return false;
        }
!!!36660535.java!!!	toString() : String
        StringBuilder sb = new StringBuilder();
        sb.append("[ImsCallSession objId:");
        sb.append(System.identityHashCode(this));
        sb.append(" state:");
        sb.append(State.toString(getState()));
        sb.append(" callId:");
        sb.append(getCallId());
        sb.append("]");
        return sb.toString();
