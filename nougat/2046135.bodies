class SimpleSessionDescription
!!!36705079.java!!!	SimpleSessionDescription(in sessionId : long, inout address : String)
        address = (address.indexOf(':') < 0 ? "IN IP4 " : "IN IP6 ") + address;
        mFields.parse("v=0");
        mFields.parse(String.format(Locale.US, "o=- %d %d %s", sessionId,
                System.currentTimeMillis(), address));
        mFields.parse("s=-");
        mFields.parse("t=0 0");
        mFields.parse("c=" + address);
!!!36705207.java!!!	SimpleSessionDescription(inout message : String)
        String[] lines = message.trim().replaceAll(" +", " ").split("[\r\n]+");
        Fields fields = mFields;

        for (String line : lines) {
            try {
                if (line.charAt(1) != '=') {
                    throw new IllegalArgumentException();
                }
                if (line.charAt(0) == 'm') {
                    String[] parts = line.substring(2).split(" ", 4);
                    String[] ports = parts[1].split("/", 2);
                    Media media = newMedia(parts[0], Integer.parseInt(ports[0]),
                            (ports.length < 2) ? 1 : Integer.parseInt(ports[1]),
                            parts[2]);
                    for (String format : parts[3].split(" ")) {
                        media.setFormat(format, null);
                    }
                    fields = media;
                } else {
                    fields.parse(line);
                }
            } catch (Exception e) {
                throw new IllegalArgumentException("Invalid SDP: " + line);
            }
        }
!!!36705335.java!!!	newMedia(inout type : String, in port : int, in portCount : int, inout protocol : String) : SimpleSessionDescription::Media
        Media media = new Media(type, port, portCount, protocol);
        mMedia.add(media);
        return media;
!!!36705463.java!!!	getMedia() : SimpleSessionDescription::Media
        return mMedia.toArray(new Media[mMedia.size()]);
!!!36705591.java!!!	encode() : String
        StringBuilder buffer = new StringBuilder();
        mFields.write(buffer);
        for (Media media : mMedia) {
            media.write(buffer);
        }
        return buffer.toString();
!!!36705719.java!!!	getAddress() : String
        return mFields.getAddress();
!!!36705847.java!!!	setAddress(inout address : String) : void
        mFields.setAddress(address);
!!!36705975.java!!!	getEncryptionMethod() : String
        return mFields.getEncryptionMethod();
!!!36706103.java!!!	getEncryptionKey() : String
        return mFields.getEncryptionKey();
!!!36706231.java!!!	setEncryption(inout method : String, inout key : String) : void
        mFields.setEncryption(method, key);
!!!36706359.java!!!	getBandwidthTypes() : String
        return mFields.getBandwidthTypes();
!!!36706487.java!!!	getBandwidth(inout type : String) : int
        return mFields.getBandwidth(type);
!!!36706615.java!!!	setBandwidth(inout type : String, in value : int) : void
        mFields.setBandwidth(type, value);
!!!36706743.java!!!	getAttributeNames() : String
        return mFields.getAttributeNames();
!!!36706871.java!!!	getAttribute(inout name : String) : String
        return mFields.getAttribute(name);
!!!36706999.java!!!	setAttribute(inout name : String, inout value : String) : void
        mFields.setAttribute(name, value);
