class SipSessionGroupExt
!!!36742455.java!!!	SipSessionGroupExt(inout localProfile : SipProfile, inout incomingCallPendingIntent : PendingIntent, inout listener : ISipSessionListener)
            if (SSGE_DBG) log("SipSessionGroupExt: profile=" + localProfile);
            mSipGroup = new SipSessionGroup(duplicate(localProfile),
                    localProfile.getPassword(), mTimer, mMyWakeLock);
            mIncomingCallPendingIntent = incomingCallPendingIntent;
            mAutoRegistration.setListener(listener);
!!!36742583.java!!!	getLocalProfile() : SipProfile
            return mSipGroup.getLocalProfile();
!!!36742711.java!!!	containsSession(inout callId : String) : boolean
            return mSipGroup.containsSession(callId);
!!!36742839.java!!!	onKeepAliveIntervalChanged() : void
            mAutoRegistration.onKeepAliveIntervalChanged();
!!!36742967.java!!!	setWakeupTimer(inout timer : SipWakeupTimer) : void
            mSipGroup.setWakeupTimer(timer);
!!!36743095.java!!!	duplicate(inout p : SipProfile) : SipProfile
            try {
                return new SipProfile.Builder(p).setPassword("*").build();
            } catch (Exception e) {
                loge("duplicate()", e);
                throw new RuntimeException("duplicate profile", e);
            }
!!!36743223.java!!!	setListener(inout listener : ISipSessionListener) : void
            mAutoRegistration.setListener(listener);
!!!36743351.java!!!	setIncomingCallPendingIntent(inout pIntent : PendingIntent) : void
            mIncomingCallPendingIntent = pIntent;
!!!36743479.java!!!	openToReceiveCalls() : void
            mOpenedToReceiveCalls = true;
            if (mNetworkType != -1) {
                mSipGroup.openToReceiveCalls(this);
                mAutoRegistration.start(mSipGroup);
            }
            if (SSGE_DBG) log("openToReceiveCalls: " + obfuscateSipUri(getUri()) + ": "
                    + mIncomingCallPendingIntent);
!!!36743607.java!!!	onConnectivityChanged(inout connected : boolean) : void
            if (SSGE_DBG) {
                log("onConnectivityChanged: connected=" + connected + " uri="
                    + obfuscateSipUri(getUri()) + ": " + mIncomingCallPendingIntent);
            }
            mSipGroup.onConnectivityChanged();
            if (connected) {
                mSipGroup.reset();
                if (mOpenedToReceiveCalls) openToReceiveCalls();
            } else {
                mSipGroup.close();
                mAutoRegistration.stop();
            }
!!!36743735.java!!!	close() : void
            mOpenedToReceiveCalls = false;
            mSipGroup.close();
            mAutoRegistration.stop();
            if (SSGE_DBG) log("close: " + obfuscateSipUri(getUri()) + ": "
                    + mIncomingCallPendingIntent);
!!!36743863.java!!!	createSession(inout listener : ISipSessionListener) : ISipSession
            if (SSGE_DBG) log("createSession");
            return mSipGroup.createSession(listener);
!!!36743991.java!!!	onRinging(inout s : ISipSession, inout caller : SipProfile, inout sessionDescription : String) : void
            SipSessionGroup.SipSessionImpl session =
                    (SipSessionGroup.SipSessionImpl) s;
            synchronized (SipService.this) {
                try {
                    if (!isRegistered() || callingSelf(this, session)) {
                        if (SSGE_DBG) log("onRinging: end notReg or self");
                        session.endCall();
                        return;
                    }

                    // send out incoming call broadcast
                    addPendingSession(session);
                    Intent intent = SipManager.createIncomingCallBroadcast(
                            session.getCallId(), sessionDescription);
                    if (SSGE_DBG) log("onRinging: uri=" + getUri() + ": "
                            + caller.getUri() + ": " + session.getCallId()
                            + " " + mIncomingCallPendingIntent);
                    mIncomingCallPendingIntent.send(mContext,
                            SipManager.INCOMING_CALL_RESULT_CODE, intent);
                } catch (PendingIntent.CanceledException e) {
                    loge("onRinging: pendingIntent is canceled, drop incoming call", e);
                    session.endCall();
                }
            }
!!!36744119.java!!!	onError(inout session : ISipSession, in errorCode : int, inout message : String) : void
            if (SSGE_DBG) log("onError: errorCode=" + errorCode + " desc="
                    + SipErrorCode.toString(errorCode) + ": " + message);
!!!36744247.java!!!	isOpenedToReceiveCalls() : boolean
            return mOpenedToReceiveCalls;
!!!36744375.java!!!	isRegistered() : boolean
            return mAutoRegistration.isRegistered();
!!!36744503.java!!!	getUri() : String
            return mSipGroup.getLocalProfileUri();
!!!36744631.java!!!	log(inout s : String) : void
            Rlog.d(SSGE_TAG, s);
!!!36744759.java!!!	loge(inout s : String, inout t : Throwable) : void
            Rlog.e(SSGE_TAG, s, t);
