class SipSessionListenerProxy
!!!36768055.java!!!	setListener(inout listener : ISipSessionListener) : void
        mListener = listener;
!!!36768183.java!!!	getListener() : ISipSessionListener
        return mListener;
!!!36768311.java!!!	proxy(inout runnable : Runnable) : void
        // One thread for each calling back.
        // Note: Guarantee ordering if the issue becomes important. Currently,
        // the chance of handling two callback events at a time is none.
        new Thread(runnable, "SipSessionCallbackThread").start();
!!!36768439.java!!!	onCalling(in session : ISipSession) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onCalling(session);
                } catch (Throwable t) {
                    handle(t, "onCalling()");
                }
            }
        });
!!!36768567.java!!!	onRinging(in session : ISipSession, in caller : SipProfile, in sessionDescription : String) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onRinging(session, caller, sessionDescription);
                } catch (Throwable t) {
                    handle(t, "onRinging()");
                }
            }
        });
!!!36768695.java!!!	onRingingBack(in session : ISipSession) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onRingingBack(session);
                } catch (Throwable t) {
                    handle(t, "onRingingBack()");
                }
            }
        });
!!!36768823.java!!!	onCallEstablished(in session : ISipSession, in sessionDescription : String) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onCallEstablished(session, sessionDescription);
                } catch (Throwable t) {
                    handle(t, "onCallEstablished()");
                }
            }
        });
!!!36768951.java!!!	onCallEnded(in session : ISipSession) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onCallEnded(session);
                } catch (Throwable t) {
                    handle(t, "onCallEnded()");
                }
            }
        });
!!!36769079.java!!!	onCallTransferring(in newSession : ISipSession, in sessionDescription : String) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onCallTransferring(newSession, sessionDescription);
                } catch (Throwable t) {
                    handle(t, "onCallTransferring()");
                }
            }
        });
!!!36769207.java!!!	onCallBusy(in session : ISipSession) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onCallBusy(session);
                } catch (Throwable t) {
                    handle(t, "onCallBusy()");
                }
            }
        });
!!!36769335.java!!!	onCallChangeFailed(in session : ISipSession, in errorCode : int, in message : String) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onCallChangeFailed(session, errorCode, message);
                } catch (Throwable t) {
                    handle(t, "onCallChangeFailed()");
                }
            }
        });
!!!36769463.java!!!	onError(in session : ISipSession, in errorCode : int, in message : String) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onError(session, errorCode, message);
                } catch (Throwable t) {
                    handle(t, "onError()");
                }
            }
        });
!!!36769591.java!!!	onRegistering(in session : ISipSession) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onRegistering(session);
                } catch (Throwable t) {
                    handle(t, "onRegistering()");
                }
            }
        });
!!!36769719.java!!!	onRegistrationDone(in session : ISipSession, in duration : int) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onRegistrationDone(session, duration);
                } catch (Throwable t) {
                    handle(t, "onRegistrationDone()");
                }
            }
        });
!!!36769847.java!!!	onRegistrationFailed(in session : ISipSession, in errorCode : int, in message : String) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onRegistrationFailed(session, errorCode, message);
                } catch (Throwable t) {
                    handle(t, "onRegistrationFailed()");
                }
            }
        });
!!!36769975.java!!!	onRegistrationTimeout(in session : ISipSession) : void
        if (mListener == null) return;
        proxy(new Runnable() {
            @Override
            public void run() {
                try {
                    mListener.onRegistrationTimeout(session);
                } catch (Throwable t) {
                    handle(t, "onRegistrationTimeout()");
                }
            }
        });
!!!36770103.java!!!	handle(inout t : Throwable, inout message : String) : void
        if (t instanceof DeadObjectException) {
            mListener = null;
            // This creates race but it's harmless. Just don't log the error
            // when it happens.
        } else if (mListener != null) {
            loge(message, t);
        }
!!!36770231.java!!!	log(inout s : String) : void
        Rlog.d(TAG, s);
!!!36770359.java!!!	loge(inout s : String, inout t : Throwable) : void
        Rlog.e(TAG, s, t);
