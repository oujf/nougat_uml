class SipKeepAlive
!!!36757943.java!!!	start(in interval : int, inout callback : SipSessionGroup::KeepAliveProcessCallback) : void
                if (mRunning) return;
                mRunning = true;
                mInterval = interval;
                mCallback = new KeepAliveProcessCallbackProxy(callback);
                mWakeupTimer.set(interval * 1000, this);
                if (SKA_DBG) {
                    log("start keepalive:"
                            + mLocalProfile.getUriString());
                }

                // No need to run the first time in a separate thread for now
                run();
!!!36758071.java!!!	process(inout evt : EventObject) : boolean
                if (mRunning && (mState == SipSession.State.PINGING)) {
                    if (evt instanceof ResponseEvent) {
                        if (parseOptionsResult(evt)) {
                            if (mPortChanged) {
                                resetExternalAddress();
                                stop();
                            } else {
                                cancelSessionTimer();
                                removeSipSession(SipSessionImpl.this);
                            }
                            mCallback.onResponse(mPortChanged);
                            return true;
                        }
                    }
                }
                return false;
!!!36758199.java!!!	onError(inout session : ISipSession, in errorCode : int, inout message : String) : void
                stop();
                mCallback.onError(errorCode, message);
!!!36758327.java!!!	run() : void
                synchronized (SipSessionGroup.this) {
                    if (!mRunning) return;

                    if (DBG_PING) {
                        String peerUri = (mPeerProfile == null)
                                ? "null"
                                : mPeerProfile.getUriString();
                        log("keepalive: " + mLocalProfile.getUriString()
                                + " --> " + peerUri + ", interval=" + mInterval);
                    }
                    try {
                        sendKeepAlive();
                    } catch (Throwable t) {
                        if (SKA_DBG) {
                            loge("keepalive error: "
                                    + mLocalProfile.getUriString(), getRootCause(t));
                        }
                        // It's possible that the keepalive process is being stopped
                        // during session.sendKeepAlive() so need to check mRunning
                        // again here.
                        if (mRunning) SipSessionImpl.this.onError(t);
                    }
                }
!!!36758455.java!!!	stop() : void
                synchronized (SipSessionGroup.this) {
                    if (SKA_DBG) {
                        log("stop keepalive:" + mLocalProfile.getUriString()
                                + ",RPort=" + mRPort);
                    }
                    mRunning = false;
                    mWakeupTimer.cancel(this);
                    reset();
                }
!!!36758583.java!!!	sendKeepAlive() : void
                synchronized (SipSessionGroup.this) {
                    mState = SipSession.State.PINGING;
                    mClientTransaction = mSipHelper.sendOptions(
                            mLocalProfile, mPeerProfile, generateTag());
                    mDialog = mClientTransaction.getDialog();
                    addSipSession(SipSessionImpl.this);

                    startSessionTimer(KEEPALIVE_TIMEOUT);
                    // when timed out, onError() will be called with SipErrorCode.TIME_OUT
                }
!!!36758711.java!!!	parseOptionsResult(inout evt : EventObject) : boolean
                if (expectResponse(Request.OPTIONS, evt)) {
                    ResponseEvent event = (ResponseEvent) evt;
                    int rPort = getRPortFromResponse(event.getResponse());
                    if (rPort != -1) {
                        if (mRPort == 0) mRPort = rPort;
                        if (mRPort != rPort) {
                            mPortChanged = true;
                            if (SKA_DBG) log(String.format(
                                    "rport is changed: %d <> %d", mRPort, rPort));
                            mRPort = rPort;
                        } else {
                            if (SKA_DBG) log("rport is the same: " + rPort);
                        }
                    } else {
                        if (SKA_DBG) log("peer did not respond rport");
                    }
                    return true;
                }
                return false;
!!!36758839.java!!!	getRPortFromResponse(inout response : Response) : int
                ViaHeader viaHeader = (ViaHeader)(response.getHeader(
                        SIPHeaderNames.VIA));
                return (viaHeader == null) ? -1 : viaHeader.getRPort();
!!!36758967.java!!!	log(inout s : String) : void
                Rlog.d(SKA_TAG, s);
