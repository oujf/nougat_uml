class KeepAliveProcessCallbackProxy
!!!36761015.java!!!	KeepAliveProcessCallbackProxy(inout callback : SipSessionGroup::KeepAliveProcessCallback)
            mCallback = callback;
!!!36761143.java!!!	proxy(inout runnable : Runnable) : void
            // One thread for each calling back.
            // Note: Guarantee ordering if the issue becomes important. Currently,
            // the chance of handling two callback events at a time is none.
            new Thread(runnable, "SIP-KeepAliveProcessCallbackThread").start();
!!!36761271.java!!!	onResponse(in portChanged : boolean) : void
            if (mCallback == null) return;
            proxy(new Runnable() {
                @Override
                public void run() {
                    try {
                        mCallback.onResponse(portChanged);
                    } catch (Throwable t) {
                        loge("onResponse", t);
                    }
                }
            });
!!!36761399.java!!!	onError(in errorCode : int, in description : String) : void
            if (mCallback == null) return;
            proxy(new Runnable() {
                @Override
                public void run() {
                    try {
                        mCallback.onError(errorCode, description);
                    } catch (Throwable t) {
                        loge("onError", t);
                    }
                }
            });
!!!36761527.java!!!	loge(inout s : String, inout t : Throwable) : void
            Rlog.e(KAPCP_TAG, s, t);
