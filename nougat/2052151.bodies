class FrameworkFacade
!!!36778295.java!!!	makeBaseLogger() : BaseWifiLogger
        return new BaseWifiLogger();
!!!36778423.java!!!	makeRealLogger(inout stateMachine : WifiStateMachine, inout wifiNative : WifiNative, inout buildProperties : BuildProperties) : BaseWifiLogger
        return new WifiLogger(stateMachine, wifiNative, buildProperties);
!!!36778551.java!!!	setIntegerSetting(inout context : Context, inout name : String, in def : int) : boolean
        return Settings.Global.putInt(context.getContentResolver(), name, def);
!!!36778679.java!!!	getIntegerSetting(inout context : Context, inout name : String, in def : int) : int
        return Settings.Global.getInt(context.getContentResolver(), name, def);
!!!36778807.java!!!	getLongSetting(inout context : Context, inout name : String, in def : long) : long
        return Settings.Global.getLong(context.getContentResolver(), name, def);
!!!36778935.java!!!	setStringSetting(inout context : Context, inout name : String, inout def : String) : boolean
        return Settings.Global.putString(context.getContentResolver(), name, def);
!!!36779063.java!!!	getStringSetting(inout context : Context, inout name : String) : String
        return Settings.Global.getString(context.getContentResolver(), name);
!!!36779191.java!!!	getService(inout serviceName : String) : IBinder
        return ServiceManager.getService(serviceName);
!!!36779319.java!!!	makeWifiScanner(inout context : Context, inout looper : Looper) : WifiScanner
        return new WifiScanner(context, IWifiScanner.Stub.asInterface(
                        getService(Context.WIFI_SCANNING_SERVICE)), looper);
!!!36779447.java!!!	getBroadcast(inout context : Context, in requestCode : int, inout intent : Intent, in flags : int) : PendingIntent
        return PendingIntent.getBroadcast(context, requestCode, intent, flags);
!!!36779575.java!!!	makeSupplicantStateTracker(inout context : Context, inout configManager : WifiConfigManager, inout handler : Handler) : SupplicantStateTracker
        return new SupplicantStateTracker(context, configManager, handler);
!!!36779703.java!!!	getConfigWiFiDisableInECBM(inout context : Context) : boolean
       CarrierConfigManager configManager = (CarrierConfigManager) context
               .getSystemService(Context.CARRIER_CONFIG_SERVICE);
       if (configManager != null) {
           return configManager.getConfig().getBoolean(
               CarrierConfigManager.KEY_CONFIG_WIFI_DISABLE_IN_ECBM);
       }
       /* Default to TRUE */
       return true;
!!!36779831.java!!!	makeApConfigStore(inout context : Context, inout backupManagerProxy : BackupManagerProxy) : WifiApConfigStore
        return new WifiApConfigStore(context, backupManagerProxy);
!!!36779959.java!!!	getTxPackets(inout iface : String) : long
        return TrafficStats.getTxPackets(iface);
!!!36780087.java!!!	getRxPackets(inout iface : String) : long
        return TrafficStats.getRxPackets(iface);
!!!36780215.java!!!	makeIpManager(inout context : Context, inout iface : String, inout callback : IpManager::Callback) : IpManager
        return new IpManager(context, iface, callback);
!!!36780343.java!!!	makeSoftApManager(inout context : Context, inout looper : Looper, inout wifiNative : WifiNative, inout nmService : INetworkManagementService, inout cm : ConnectivityManager, inout countryCode : String, inout allowed2GChannels : ArrayList<Integer>, inout listener : SoftApManager::Listener) : SoftApManager
        return new SoftApManager(
                context, looper, wifiNative, nmService, cm, countryCode,
                allowed2GChannels, listener);
!!!36780471.java!!!	checkUidPermission(inout permName : String, in uid : int) : int
        return AppGlobals.getPackageManager().checkUidPermission(permName, uid);
!!!36780599.java!!!	makeWifiConfigManager(inout context : Context, inout wifiNative : WifiNative, inout frameworkFacade : FrameworkFacade, inout clock : Clock, inout userManager : UserManager, inout keyStore : KeyStore) : WifiConfigManager
        return new WifiConfigManager(context, wifiNative, frameworkFacade, clock, userManager,
                keyStore);
