class TetheringState
!!!36793655.java!!!	enter() : void
                /* Send a delayed message to terminate if tethering fails to notify. */
                sendMessageDelayed(
                        obtainMessage(CMD_TETHER_NOTIFICATION_TIMEOUT, ++mTetherToken),
                        TETHER_NOTIFICATION_TIME_OUT_MSECS);
!!!36793783.java!!!	processMessage(inout message : Message) : boolean
                switch (message.what) {
                    case CMD_TETHER_STATE_CHANGE:
                        TetherStateChange stateChange = (TetherStateChange) message.obj;
                        if (isWifiTethered(stateChange.active)) {
                            transitionTo(mTetheredState);
                        }
                        break;
                    case CMD_TETHER_NOTIFICATION_TIMEOUT:
                        if (message.arg1 == mTetherToken) {
                            Log.e(TAG, "Failed to get tether update, "
                                    + "shutdown soft access point");
                            transitionTo(mStartedState);
                            /* Needs to be first thing handled. */
                            sendMessageAtFrontOfQueue(CMD_STOP);
                        }
                        break;
                    default:
                        return NOT_HANDLED;
                }
                return HANDLED;
