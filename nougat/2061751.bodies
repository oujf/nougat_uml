class PnoScanListener
!!!36830903.java!!!	clearScanDetails() : void
            mScanDetails.clear();
!!!36831031.java!!!	resetLowRssiNetworkRetryDelay() : void
            mLowRssiNetworkRetryDelay = LOW_RSSI_NETWORK_RETRY_START_DELAY_MS;
!!!36831159.java!!!	getLowRssiNetworkRetryDelay() : int
            return mLowRssiNetworkRetryDelay;
!!!36831287.java!!!	onSuccess() : void
            localLog("PnoScanListener onSuccess");

            // reset the count
            mScanRestartCount = 0;
!!!36831415.java!!!	onFailure(in reason : int, inout description : String) : void
            Log.e(TAG, "PnoScanListener onFailure:"
                          + " reason: " + reason
                          + " description: " + description);

            // reschedule the scan
            if (mScanRestartCount++ < MAX_SCAN_RESTART_ALLOWED) {
                scheduleDelayedConnectivityScan(RESTART_SCAN_DELAY_MS);
            } else {
                mScanRestartCount = 0;
                Log.e(TAG, "Failed to successfully start PNO scan for "
                          + MAX_SCAN_RESTART_ALLOWED + " times");
            }
!!!36831543.java!!!	onPeriodChanged(in periodInMs : int) : void
            localLog("PnoScanListener onPeriodChanged: "
                          + "actual scan period " + periodInMs + "ms");
!!!36831927.java!!!	onPnoNetworkFound(inout results : ScanResult) : void
            localLog("PnoScanListener: onPnoNetworkFound: results len = " + results.length);

            for (ScanResult result: results) {
                mScanDetails.add(ScanDetailUtil.toScanDetail(result));
            }

            boolean wasConnectAttempted;
            wasConnectAttempted = handleScanResults(mScanDetails, "PnoScanListener");
            clearScanDetails();

            if (!wasConnectAttempted) {
                // The scan results were rejected by QNS due to low RSSI values
                if (mLowRssiNetworkRetryDelay > LOW_RSSI_NETWORK_RETRY_MAX_DELAY_MS) {
                    mLowRssiNetworkRetryDelay = LOW_RSSI_NETWORK_RETRY_MAX_DELAY_MS;
                }
                scheduleDelayedConnectivityScan(mLowRssiNetworkRetryDelay);

                // Set up the delay value for next retry.
                mLowRssiNetworkRetryDelay *= 2;
            } else {
                resetLowRssiNetworkRetryDelay();
            }
