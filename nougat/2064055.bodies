class WifiCountryCode
!!!36841015.java!!!	WifiCountryCode(inout wifiNative : WifiNative, inout oemDefaultCountryCode : String, inout persistentCountryCode : String, inout revertCountryCodeOnCellularLoss : boolean)

        mWifiNative = wifiNative;
        mRevertCountryCodeOnCellularLoss = revertCountryCodeOnCellularLoss;

        if (!TextUtils.isEmpty(persistentCountryCode)) {
            mDefaultCountryCode = persistentCountryCode.toUpperCase();
        } else if (!TextUtils.isEmpty(oemDefaultCountryCode)) {
            mDefaultCountryCode = oemDefaultCountryCode.toUpperCase();
        } else {
            if (mRevertCountryCodeOnCellularLoss) {
                Log.w(TAG, "config_wifi_revert_country_code_on_cellular_loss is set, "
                         + "but there is no default country code.");
                mRevertCountryCodeOnCellularLoss = false;
                return;
            }
        }

        if (mRevertCountryCodeOnCellularLoss) {
            Log.d(TAG, "Country code will be reverted to " + mDefaultCountryCode
                    + " on MCC loss");
        }
!!!36841143.java!!!	enableVerboseLogging(in verbose : int) : void
        if (verbose > 0) {
            DBG = true;
        } else {
            DBG = false;
        }
!!!36841271.java!!!	simCardRemoved() : void
        if (DBG) Log.d(TAG, "SIM Card Removed");
        // SIM card is removed, we need to reset the country code to phone default.
        if (mRevertCountryCodeOnCellularLoss) {
            mTelephonyCountryCode = null;
            if (mReady) {
                updateCountryCode();
            }
        }
!!!36841399.java!!!	airplaneModeEnabled() : void
        if (DBG) Log.d(TAG, "Airplane Mode Enabled");
        mTelephonyCountryCode = null;
        // Airplane mode is enabled, we need to reset the country code to phone default.
        if (mRevertCountryCodeOnCellularLoss) {
            mTelephonyCountryCode = null;
            // Country code will be set upon when wpa_supplicant starts next time.
        }
!!!36841527.java!!!	setReadyForChange(inout ready : boolean) : void
        if (DBG) Log.d(TAG, "Set ready: " + ready);
        mReady = ready;
        // We are ready to set country code now.
        // We need to post pending country code request.
        if (mReady) {
            updateCountryCode();
        }
!!!36841655.java!!!	setCountryCode(inout countryCode : String, inout persist : boolean) : boolean
        if (DBG) Log.d(TAG, "Receive set country code request: " + countryCode);
        // Ignore empty country code.
        if (TextUtils.isEmpty(countryCode)) {
            if (DBG) Log.d(TAG, "Ignore empty country code");
            return false;
        }
        if (persist) {
            mDefaultCountryCode = countryCode;
        }
        mTelephonyCountryCode = countryCode.toUpperCase();
        // If wpa_supplicant is ready we set the country code now, otherwise it will be
        // set once wpa_supplicant is ready.
        if (mReady) {
            updateCountryCode();
        }
        return true;
!!!36841783.java!!!	getCurrentCountryCode() : String
        return mCurrentCountryCode;
!!!36841911.java!!!	updateCountryCode() : void
        if (DBG) Log.d(TAG, "Update country code");
        String country = pickCountryCode();
        // We do not check if the country code equals the current one.
        // There are two reasons:
        // 1. Wpa supplicant may silently modify the country code.
        // 2. If Wifi restarted therefoere wpa_supplicant also restarted,
        // the country code counld be reset to '00' by wpa_supplicant.
        if (country.length() != 0) {
            setCountryCodeNative(country);
        }
        // We do not set country code if there is no candidate. This is reasonable
        // because wpa_supplicant usually starts with an international safe country
        // code setting: '00'.
!!!36842039.java!!!	pickCountryCode() : String
        if (mTelephonyCountryCode != null) {
            return mTelephonyCountryCode;
        }
        if (mDefaultCountryCode != null) {
            return mDefaultCountryCode;
        }
        // If there is no candidate country code we will return an empty string.
        return "";
!!!36842167.java!!!	setCountryCodeNative(inout country : String) : boolean
        if (mWifiNative.setCountryCode(country)) {
            Log.d(TAG, "Succeeded to set country code to: " + country);
            mCurrentCountryCode = country;
            return true;
        }
        Log.d(TAG, "Failed to set country code to: " + country);
        return false;
