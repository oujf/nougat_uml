class WifiNetworkScoreCache
!!!36902711.java!!!	WifiNetworkScoreCache(inout context : Context)
        mContext = context;
        mNetworkCache = new HashMap<String, ScoredNetwork>();
!!!36902839.java!!!	updateScores(inout networks : List<android.net.ScoredNetwork>) : void
        if (networks == null) {
            return;
        }
        Log.e(TAG, "updateScores list size=" + networks.size());

        synchronized(mNetworkCache) {
            for (ScoredNetwork network : networks) {
                String networkKey = buildNetworkKey(network);
                if (networkKey == null) continue;
                mNetworkCache.put(networkKey, network);
            }
        }
!!!36902967.java!!!	clearScores() : void
         synchronized (mNetworkCache) {
             mNetworkCache.clear();
         }
!!!36903095.java!!!	isScoredNetwork(inout result : ScanResult) : boolean
        return getScoredNetwork(result) != null;
!!!36903223.java!!!	hasScoreCurve(inout result : ScanResult) : boolean
        ScoredNetwork network = getScoredNetwork(result);
        return network != null && network.rssiCurve != null;
!!!36903351.java!!!	getNetworkScore(inout result : ScanResult) : int

        int score = INVALID_NETWORK_SCORE;

        ScoredNetwork network = getScoredNetwork(result);
        if (network != null && network.rssiCurve != null) {
            score = network.rssiCurve.lookupScore(result.level);
            if (DBG) {
                Log.e(TAG, "getNetworkScore found scored network " + network.networkKey
                        + " score " + Integer.toString(score)
                        + " RSSI " + result.level);
            }
        }
        return score;
!!!36903479.java!!!	getMeteredHint(inout result : ScanResult) : boolean
        ScoredNetwork network = getScoredNetwork(result);
        return network != null && network.meteredHint;
!!!36903607.java!!!	getNetworkScore(inout result : ScanResult, inout isActiveNetwork : boolean) : int

        int score = INVALID_NETWORK_SCORE;

        ScoredNetwork network = getScoredNetwork(result);
        if (network != null && network.rssiCurve != null) {
            score = network.rssiCurve.lookupScore(result.level, isActiveNetwork);
            if (DBG) {
                Log.e(TAG, "getNetworkScore found scored network " + network.networkKey
                        + " score " + Integer.toString(score)
                        + " RSSI " + result.level
                        + " isActiveNetwork " + isActiveNetwork);
            }
        }
        return score;
!!!36903735.java!!!	getScoredNetwork(inout result : ScanResult) : ScoredNetwork
        String key = buildNetworkKey(result);
        if (key == null) return null;

        //find it
        synchronized(mNetworkCache) {
            ScoredNetwork network = mNetworkCache.get(key);
            return network;
        }
!!!36903863.java!!!	buildNetworkKey(inout network : ScoredNetwork) : String
        if (network == null || network.networkKey == null) return null;
        if (network.networkKey.wifiKey == null) return null;
        if (network.networkKey.type == NetworkKey.TYPE_WIFI) {
            String key = network.networkKey.wifiKey.ssid;
            if (key == null) return null;
            if (network.networkKey.wifiKey.bssid != null) {
                key = key + network.networkKey.wifiKey.bssid;
            }
            return key;
        }
        return null;
!!!36903991.java!!!	buildNetworkKey(inout result : ScanResult) : String
        if (result == null || result.SSID == null) {
            return null;
        }
        StringBuilder key = new StringBuilder("\"");
        key.append(result.SSID);
        key.append("\"");
        if (result.BSSID != null) {
            key.append(result.BSSID);
        }
        return key.toString();
!!!36904119.java!!!	dump(inout fd : FileDescriptor, inout writer : PrintWriter, inout args : String) : void
        mContext.enforceCallingOrSelfPermission(permission.DUMP, TAG);
        writer.println("WifiNetworkScoreCache");
        writer.println("  All score curves:");
        for (Map.Entry<String, ScoredNetwork> entry : mNetworkCache.entrySet()) {
            ScoredNetwork scoredNetwork = entry.getValue();
            writer.println("    " + entry.getKey() + ": " + scoredNetwork.rssiCurve
                    + ", meteredHint=" + scoredNetwork.meteredHint);
        }
        writer.println("  Current network scores:");
        WifiManager wifiManager = (WifiManager) mContext.getSystemService(Context.WIFI_SERVICE);
        for (ScanResult scanResult : wifiManager.getScanResults()) {
            writer.println("    " + buildNetworkKey(scanResult) + ": " + getNetworkScore(scanResult));
        }
