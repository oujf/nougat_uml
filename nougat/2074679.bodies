class CivicLocationElement
!!!36965943.java!!!	CivicLocationElement(inout infoID : Constants::ANQPElementType, inout payload : ByteBuffer)
        super(infoID);

        if (payload.remaining() < 6) {
            throw new ProtocolException("Runt civic location:" + payload.remaining());
        }

        int locType = payload.get() & Constants.BYTE_MASK;
        if (locType != RFC4776) {
            throw new ProtocolException("Bad Civic location type: " + locType);
        }

        int locSubType = payload.get() & Constants.BYTE_MASK;
        if (locSubType != GEOCONF_CIVIC4) {
            throw new ProtocolException("Unexpected Civic location sub-type: " + locSubType +
                    " (cannot handle sub elements)");
        }

        int length = payload.get() & Constants.BYTE_MASK;
        if (length > payload.remaining()) {
            throw new ProtocolException("Invalid CA type length: " + length);
        }

        int what = payload.get() & Constants.BYTE_MASK;
        mLocationType = what < LocationType.values().length ? LocationType.values()[what] : null;

        mLocale = Locale.forLanguageTag(Constants.getString(payload, 2, StandardCharsets.US_ASCII));

        mValues = new HashMap<CAType, String>();
        while (payload.hasRemaining()) {
            int caTypeNumber = payload.get() & Constants.BYTE_MASK;
            CAType caType = s_caTypes.get(caTypeNumber);

            int caValLen = payload.get() & Constants.BYTE_MASK;
            if (caValLen > payload.remaining()) {
                throw new ProtocolException("Bad CA value length: " + caValLen);
            }
            byte[] caValOctets = new byte[caValLen];
            payload.get(caValOctets);

            if (caType != null) {
                mValues.put(caType, new String(caValOctets, StandardCharsets.UTF_8));
            }
        }
!!!36966071.java!!!	getLocationType() : CivicLocationElement::LocationType
        return mLocationType;
!!!36966199.java!!!	getLocale() : Locale
        return mLocale;
!!!36966327.java!!!	getValues() : CivicLocationElement::CAType
        return Collections.unmodifiableMap(mValues);
!!!36966455.java!!!	toString() : String
        return "CivicLocation{" +
                "mLocationType=" + mLocationType +
                ", mLocale=" + mLocale +
                ", mValues=" + mValues +
                '}';
