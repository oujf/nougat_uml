class ReverseBitStream
!!!36971319.java!!!	ReverseBitStream(inout octets : ByteBuffer)
            mOctets = new byte[octets.remaining()];
            octets.get(mOctets);
!!!36971447.java!!!	sliceOff(in bits : int) : long
            final int bn = mBitoffset + bits;
            int remaining = bits;
            long value = 0;

            while (mBitoffset < bn) {
                int sbit = mBitoffset & 0x7;        // Bit #0 is MSB, inclusive
                int octet = mBitoffset >>> 3;

                // Copy the minimum of what's to the right of sbit
                // and how much more goes to the target
                int width = Math.min(Byte.SIZE - sbit, remaining);

                value = (value << width) | getBits(mOctets[octet], sbit, width);

                mBitoffset += width;
                remaining -= width;
            }

            return value;
!!!36971575.java!!!	getBits(in b : byte, in b0 : int, in width : int) : int
            int mask = (1 << width) - 1;
            return (b >> (Byte.SIZE - b0 - width)) & mask;
