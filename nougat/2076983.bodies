class I18Name
!!!36976951.java!!!	I18Name(inout payload : ByteBuffer)
        if (payload.remaining() < Constants.LANG_CODE_LENGTH + 1) {
            throw new ProtocolException("Truncated I18Name: " + payload.remaining());
        }
        int nameLength = payload.get() & BYTE_MASK;
        if (nameLength < Constants.LANG_CODE_LENGTH) {
            throw new ProtocolException("Runt I18Name: " + nameLength);
        }
        mLanguage = Constants.getTrimmedString(payload,
                Constants.LANG_CODE_LENGTH, StandardCharsets.US_ASCII);
        mLocale = Locale.forLanguageTag(mLanguage);
        mText = Constants.getString(payload, nameLength -
                Constants.LANG_CODE_LENGTH, StandardCharsets.UTF_8);
!!!36977079.java!!!	I18Name(inout compoundString : String)
        if (compoundString.length() < Constants.LANG_CODE_LENGTH) {
            throw new IOException("I18String too short: '" + compoundString + "'");
        }
        mLanguage = compoundString.substring(0, Constants.LANG_CODE_LENGTH);
        mText = compoundString.substring(Constants.LANG_CODE_LENGTH);
        mLocale = Locale.forLanguageTag(mLanguage);
!!!36977207.java!!!	getLanguage() : String
        return mLanguage;
!!!36977335.java!!!	getLocale() : Locale
        return mLocale;
!!!36977463.java!!!	getText() : String
        return mText;
!!!36977591.java!!!	equals(inout thatObject : Object) : boolean
        if (this == thatObject) {
            return true;
        }
        if (thatObject == null || getClass() != thatObject.getClass()) {
            return false;
        }

        I18Name that = (I18Name) thatObject;
        return mLanguage.equals(that.mLanguage) && mText.equals(that.mText);
!!!36977719.java!!!	hashCode() : int
        int result = mLanguage.hashCode();
        result = 31 * result + mText.hashCode();
        return result;
!!!36977847.java!!!	toString() : String
        return mText + ':' + mLocale.getLanguage();
