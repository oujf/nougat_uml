class HSWanMetricsElement
!!!36975671.java!!!	HSWanMetricsElement(inout infoID : Constants::ANQPElementType, inout payload : ByteBuffer)
        super(infoID);

        if (payload.remaining() != 13) {
            throw new ProtocolException("Bad WAN metrics length: " + payload.remaining());
        }

        int status = payload.get() & BYTE_MASK;
        mStatus = LinkStatus.values()[status & 0x03];
        mSymmetric = (status & 0x04) != 0;
        mCapped = (status & 0x08) != 0;
        mDlSpeed = payload.getInt() & INT_MASK;
        mUlSpeed = payload.getInt() & INT_MASK;
        mDlLoad = payload.get() & BYTE_MASK;
        mUlLoad = payload.get() & BYTE_MASK;
        mLMD = payload.getShort() & SHORT_MASK;
!!!36975799.java!!!	getStatus() : HSWanMetricsElement::LinkStatus
        return mStatus;
!!!36975927.java!!!	isSymmetric() : boolean
        return mSymmetric;
!!!36976055.java!!!	isCapped() : boolean
        return mCapped;
!!!36976183.java!!!	getDlSpeed() : long
        return mDlSpeed;
!!!36976311.java!!!	getUlSpeed() : long
        return mUlSpeed;
!!!36976439.java!!!	getDlLoad() : int
        return mDlLoad;
!!!36976567.java!!!	getUlLoad() : int
        return mUlLoad;
!!!36976695.java!!!	getLMD() : int
        return mLMD;
!!!36976823.java!!!	toString() : String
        return String.format("HSWanMetrics{mStatus=%s, mSymmetric=%s, mCapped=%s, " +
                "mDlSpeed=%d, mUlSpeed=%d, mDlLoad=%f, mUlLoad=%f, mLMD=%d}",
                mStatus, mSymmetric, mCapped,
                mDlSpeed, mUlSpeed,
                (double)mDlLoad * 100.0 / 256.0,
                (double)mUlLoad * 100.0 / 256.0,
                mLMD);
