class NAIRealmElement
!!!36980279.java!!!	NAIRealmElement(inout infoID : Constants::ANQPElementType, inout payload : ByteBuffer)
        super(infoID);

        if (!payload.hasRemaining()) {
            mRealmData = Collections.emptyList();
            return;
        }

        if (payload.remaining() < BYTES_IN_SHORT) {
            throw new ProtocolException("Runt NAI Realm: " + payload.remaining());
        }

        int count = payload.getShort() & SHORT_MASK;
        mRealmData = new ArrayList<>(count);
        while (count > 0) {
            mRealmData.add(new NAIRealmData(payload));
            count--;
        }
!!!36980407.java!!!	getRealmData() : NAIRealmData
        return Collections.unmodifiableList(mRealmData);
!!!36980535.java!!!	match(inout credential : Credential) : int
        if (mRealmData.isEmpty())
            return AuthMatch.Indeterminate;

        List<String> credLabels = Utils.splitDomain(credential.getRealm());
        int best = AuthMatch.None;
        for (NAIRealmData realmData : mRealmData) {
            int match = realmData.match(credLabels, credential);
            if (match > best) {
                best = match;
                if (best == AuthMatch.Exact) {
                    return best;
                }
            }
        }
        return best;
!!!36980663.java!!!	toString() : String
        StringBuilder sb = new StringBuilder();
        sb.append("NAI Realm:\n");
        for (NAIRealmData data : mRealmData) {
            sb.append(data);
        }
        return sb.toString();
