class ClientInfo
!!!37115575.java!!!	ClientInfo(in uid : int, inout messenger : Messenger)
            mUid = uid;
            mMessenger = messenger;
            mWorkSource = new WorkSource(uid);
!!!37115703.java!!!	register() : void
            mClients.put(mMessenger, this);
!!!37115831.java!!!	unregister() : void
            mClients.remove(mMessenger);
!!!37115959.java!!!	cleanup() : void
            mSingleScanStateMachine.removeSingleScanRequests(this);
            mBackgroundScanStateMachine.removeBackgroundScanSettings(this);
            mBackgroundScanStateMachine.removeHotlistSettings(this);
            unregister();
            localLog("Successfully stopped all requests for client " + this);
!!!37116087.java!!!	getUid() : int
            return mUid;
!!!37116215.java!!!	reportEvent(in what : int, in arg1 : int, in arg2 : int) : void
            reportEvent(what, arg1, arg2, null);
!!!37116471.java!!!	reportBatchedScanStart() : void
            if (mUid == 0)
                return;

            int csph = getCsph();

            try {
                mBatteryStats.noteWifiBatchedScanStartedFromSource(mWorkSource, csph);
            } catch (RemoteException e) {
                logw("failed to report scan work: " + e.toString());
            }
!!!37116599.java!!!	reportBatchedScanStop() : void
            if (mUid == 0)
                return;

            try {
                mBatteryStats.noteWifiBatchedScanStoppedFromSource(mWorkSource);
            } catch (RemoteException e) {
                logw("failed to cleanup scan work: " + e.toString());
            }
!!!37116727.java!!!	getCsph() : int
            int totalScanDurationPerHour = 0;
            Collection<ScanSettings> settingsList =
                    mBackgroundScanStateMachine.getBackgroundScanSettings(this);
            for (ScanSettings settings : settingsList) {
                int scanDurationMs = mChannelHelper.estimateScanDuration(settings);
                int scans_per_Hour = settings.periodInMs == 0 ? 1 : (3600 * 1000) /
                        settings.periodInMs;
                totalScanDurationPerHour += scanDurationMs * scans_per_Hour;
            }

            return totalScanDurationPerHour / ChannelHelper.SCAN_PERIOD_PER_CHANNEL_MS;
!!!37116855.java!!!	reportScanWorkUpdate() : void
            if (mScanWorkReported) {
                reportBatchedScanStop();
                mScanWorkReported = false;
            }
            if (mBackgroundScanStateMachine.getBackgroundScanSettings(this).isEmpty()) {
                reportBatchedScanStart();
                mScanWorkReported = true;
            }
!!!37116983.java!!!	toString() : String
            return "ClientInfo[uid=" + mUid + "]";
