class StartedState
!!!37112247.java!!!	enter() : void
                if (DBG) localLog("StartedState");
!!!37112375.java!!!	exit() : void
                sendPnoScanFailedToAllAndClear(
                        WifiScanner.REASON_UNSPECIFIED, "Scan was interrupted");
!!!37112503.java!!!	processMessage(inout msg : Message) : boolean
                ClientInfo ci = mClients.get(msg.replyTo);
                switch (msg.what) {
                    case WifiScanner.CMD_START_PNO_SCAN:
                        Bundle pnoParams = (Bundle) msg.obj;
                        if (pnoParams == null) {
                            replyFailed(msg, WifiScanner.REASON_INVALID_REQUEST, "params null");
                            return HANDLED;
                        }
                        pnoParams.setDefusable(true);
                        PnoSettings pnoSettings =
                                pnoParams.getParcelable(WifiScanner.PNO_PARAMS_PNO_SETTINGS_KEY);
                        // This message is handled after the transition to SwPnoScan/HwPnoScan state
                        deferMessage(msg);
                        if (mScannerImpl.isHwPnoSupported(pnoSettings.isConnected)) {
                            transitionTo(mHwPnoScanState);
                        } else {
                            transitionTo(mSwPnoScanState);
                        }
                        break;
                    case WifiScanner.CMD_STOP_PNO_SCAN:
                        replyFailed(msg, WifiScanner.REASON_UNSPECIFIED, "no scan running");
                        break;
                    default:
                        return NOT_HANDLED;
                }
                return HANDLED;
