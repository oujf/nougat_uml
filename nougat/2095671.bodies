class SwPnoScanState
!!!37113271.java!!!	enter() : void
                if (DBG) localLog("SwPnoScanState");
                mSwPnoFullScanResults.clear();
!!!37113399.java!!!	exit() : void
                removeInternalClient();
!!!37113527.java!!!	processMessage(inout msg : Message) : boolean
                ClientInfo ci = mClients.get(msg.replyTo);
                switch (msg.what) {
                    case WifiScanner.CMD_START_PNO_SCAN:
                        Bundle pnoParams = (Bundle) msg.obj;
                        if (pnoParams == null) {
                            replyFailed(msg, WifiScanner.REASON_INVALID_REQUEST, "params null");
                            return HANDLED;
                        }
                        pnoParams.setDefusable(true);
                        PnoSettings pnoSettings =
                                pnoParams.getParcelable(WifiScanner.PNO_PARAMS_PNO_SETTINGS_KEY);
                        ScanSettings scanSettings =
                                pnoParams.getParcelable(WifiScanner.PNO_PARAMS_SCAN_SETTINGS_KEY);
                        if (addSwPnoScanRequest(ci, msg.arg2, scanSettings, pnoSettings)) {
                            replySucceeded(msg);
                        } else {
                            replyFailed(msg, WifiScanner.REASON_INVALID_REQUEST, "bad request");
                            transitionTo(mStartedState);
                        }
                        break;
                    case WifiScanner.CMD_STOP_PNO_SCAN:
                        removeSwPnoScanRequest(ci, msg.arg2);
                        transitionTo(mStartedState);
                        break;
                    case WifiScanner.CMD_FULL_SCAN_RESULT:
                        // Aggregate full scan results until we get the |CMD_SCAN_RESULT| message
                        mSwPnoFullScanResults.add((ScanResult) msg.obj);
                        break;
                    case WifiScanner.CMD_SCAN_RESULT:
                        ScanResult[] scanResults = mSwPnoFullScanResults.toArray(
                                new ScanResult[mSwPnoFullScanResults.size()]);
                        reportPnoNetworkFound(scanResults);
                        mSwPnoFullScanResults.clear();
                        break;
                    case WifiScanner.CMD_OP_FAILED:
                        sendPnoScanFailedToAllAndClear(
                                WifiScanner.REASON_UNSPECIFIED, "background scan failed");
                        transitionTo(mStartedState);
                        break;
                    default:
                        return NOT_HANDLED;
                }
                return HANDLED;
