class SoftApManagerTest
!!!37158327.java!!!	setUp() : void
        MockitoAnnotations.initMocks(this);
        mLooper = new MockLooper();

        when(mWifiNative.getInterfaceName()).thenReturn(TEST_INTERFACE_NAME);
        when(mNmService.getInterfaceConfig(TEST_INTERFACE_NAME))
                .thenReturn(mInterfaceConfiguration);
        when(mConnectivityManager.getTetherableWifiRegexs())
                .thenReturn(AVAILABLE_DEVICES);

        mSoftApManager = new SoftApManager(mContext,
                                           mLooper.getLooper(),
                                           mWifiNative,
                                           mNmService,
                                           mConnectivityManager,
                                           TEST_COUNTRY_CODE,
                                           mAllowed2GChannels,
                                           mListener);
        ArgumentCaptor<BroadcastReceiver> broadcastReceiverCaptor =
                ArgumentCaptor.forClass(BroadcastReceiver.class);
        verify(mContext).registerReceiver(
                broadcastReceiverCaptor.capture(), any(IntentFilter.class));
        mBroadcastReceiver = broadcastReceiverCaptor.getValue();

        mLooper.dispatchAll();
!!!37158455.java!!!	startSoftApWithoutConfig() : void
        InOrder order = inOrder(mListener);

        mSoftApManager.start(null);
        mLooper.dispatchAll();

        order.verify(mListener).onStateChanged(WifiManager.WIFI_AP_STATE_ENABLING, 0);
        order.verify(mListener).onStateChanged(
                WifiManager.WIFI_AP_STATE_FAILED, WifiManager.SAP_START_FAILURE_GENERAL);
!!!37158583.java!!!	tetheringTimedOut() : void
        startSoftApAndVerifyEnabled();
        announceAvailableForTethering();
        verifyTetheringRequested();

        InOrder order = inOrder(mListener);

        /* Move the time forward to simulate notification timeout. */
        mLooper.moveTimeForward(5000);
        mLooper.dispatchAll();

        /* Verify soft ap is disabled. */
        verify(mNmService).stopAccessPoint(eq(TEST_INTERFACE_NAME));
        order.verify(mListener).onStateChanged(WifiManager.WIFI_AP_STATE_DISABLING, 0);
        order.verify(mListener).onStateChanged(WifiManager.WIFI_AP_STATE_DISABLED, 0);
!!!37158711.java!!!	tetherCompleted() : void
        startSoftApAndVerifyEnabled();
        announceAvailableForTethering();
        verifyTetheringRequested();
        announceTethered();
        verifySoftApNotDisabled();
!!!37158839.java!!!	stopWhenNotStarted() : void
        mSoftApManager.stop();
        mLooper.dispatchAll();
        /* Verify no state changes. */
        verify(mListener, never()).onStateChanged(anyInt(), anyInt());
!!!37158967.java!!!	stopWhenStarted() : void
        startSoftApAndVerifyEnabled();

        InOrder order = inOrder(mListener);

        mSoftApManager.stop();
        mLooper.dispatchAll();

        verify(mNmService).stopAccessPoint(TEST_INTERFACE_NAME);
        order.verify(mListener).onStateChanged(WifiManager.WIFI_AP_STATE_DISABLING, 0);
        order.verify(mListener).onStateChanged(WifiManager.WIFI_AP_STATE_DISABLED, 0);
!!!37159095.java!!!	startSoftApAndVerifyEnabled() : void
        InOrder order = inOrder(mListener);

        /**
         *  Only test the default configuration. Testing for different configurations
         *  are taken care of by ApConfigUtilTest.
         */
        WifiConfiguration config = new WifiConfiguration();
        config.apBand = WifiConfiguration.AP_BAND_2GHZ;
        when(mWifiNative.isHalStarted()).thenReturn(false);
        when(mWifiNative.setCountryCodeHal(TEST_COUNTRY_CODE.toUpperCase(Locale.ROOT)))
                .thenReturn(true);
        mSoftApManager.start(config);
        mLooper.dispatchAll();
        verify(mNmService).startAccessPoint(
                any(WifiConfiguration.class), eq(TEST_INTERFACE_NAME));
        order.verify(mListener).onStateChanged(WifiManager.WIFI_AP_STATE_ENABLING, 0);
        order.verify(mListener).onStateChanged(WifiManager.WIFI_AP_STATE_ENABLED, 0);
!!!37159223.java!!!	verifySoftApNotDisabled() : void
        verify(mListener, never()).onStateChanged(WifiManager.WIFI_AP_STATE_DISABLING, 0);
        verify(mListener, never()).onStateChanged(WifiManager.WIFI_AP_STATE_DISABLED, 0);
!!!37159351.java!!!	announceAvailableForTethering() : void
        when(mConnectivityManager.tether(TEST_INTERFACE_NAME))
                .thenReturn(ConnectivityManager.TETHER_ERROR_NO_ERROR);
        ArrayList<String> availableList =
                new ArrayList<String>(Arrays.asList(AVAILABLE_DEVICES));
        TestUtil.sendTetherStateChanged(
                mBroadcastReceiver, mContext, availableList, new ArrayList<String>());
        mLooper.dispatchAll();
!!!37159479.java!!!	verifyTetheringRequested() : void
        verify(mInterfaceConfiguration).setLinkAddress(any(LinkAddress.class));
        verify(mInterfaceConfiguration).setInterfaceUp();
        verify(mNmService).setInterfaceConfig(eq(TEST_INTERFACE_NAME), eq(mInterfaceConfiguration));
!!!37159607.java!!!	announceTethered() : void
        ArrayList<String> deviceList =
                new ArrayList<String>(Arrays.asList(AVAILABLE_DEVICES));
        TestUtil.sendTetherStateChanged(
                mBroadcastReceiver, mContext, deviceList, deviceList);
        mLooper.dispatchAll();
