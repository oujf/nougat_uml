class ScanDetailUtilTest
!!!37258167.java!!!	convertScanResult() : void
        final String ssid = "SOME SsId";

        ScanResult input = new ScanResult(WifiSsid.createFromAsciiEncoded(ssid), ssid,
                "ab:cd:01:ef:45:89", 1245, 0, "", -78, 2450, 1025, 22, 33, 20, 0, 0, true);

        input.informationElements = new InformationElement[] {
            createIE(InformationElement.EID_SSID, ssid.getBytes(StandardCharsets.UTF_8))
        };

        ScanDetail output = ScanDetailUtil.toScanDetail(input);

        validateScanDetail(input, output);
!!!37258295.java!!!	convertScanResultWithAnqpLines() : void
        final String ssid = "SOME SsId";

        ScanResult input = new ScanResult(WifiSsid.createFromAsciiEncoded(ssid), ssid,
                "ab:cd:01:ef:45:89", 1245, 0, "some caps", -78, 2450, 1025, 22, 33, 20, 0, 0, true);

        input.informationElements = new InformationElement[] {
            createIE(InformationElement.EID_SSID, ssid.getBytes(StandardCharsets.UTF_8))
        };
        input.anqpLines = Arrays.asList("LINE 1", "line 2", "Line 3");

        ScanDetail output = ScanDetailUtil.toScanDetail(input);

        validateScanDetail(input, output);
!!!37258423.java!!!	convertScanResultWithoutWifiSsid() : void
        final String ssid = "Another SSid";
        ScanResult input = new ScanResult(ssid, "ab:cd:01:ef:45:89", 1245, 0, "other caps",
                -78, 2450, 1025, 22, 33, 20, 0, 0, true);
        input.informationElements = new InformationElement[] {
            createIE(InformationElement.EID_SSID, ssid.getBytes(StandardCharsets.UTF_8))
        };

        ScanDetail output = ScanDetailUtil.toScanDetail(input);

        validateScanDetail(input, output);
!!!37258551.java!!!	createIE(in id : int, inout bytes : byte) : ScanResult::InformationElement
        InformationElement ie = new InformationElement();
        ie.id = id;
        ie.bytes = bytes;
        return ie;
!!!37258679.java!!!	validateScanDetail(inout input : ScanResult, inout output : ScanDetail) : void
        assertNotNull("NetworkDetail was null", output.getNetworkDetail());
        assertNotNull("ScanResult was null", output.getScanResult());
        assertEquals("NetworkDetail SSID", input.SSID,
                output.getNetworkDetail().getSSID());
        assertEquals("ScanResult SSID", input.SSID,
                output.getScanResult().SSID);
        assertEquals("ScanResult wifiSsid", input.wifiSsid,
                output.getScanResult().wifiSsid);
        assertEquals("getSSID", input.SSID, output.getSSID());
        assertEquals("NetworkDetail BSSID", input.BSSID,
                output.getNetworkDetail().getBSSIDString());
        assertEquals("getBSSIDString", input.BSSID, output.getBSSIDString());
        assertEquals("ScanResult frequency", input.frequency,
                output.getScanResult().frequency);
        assertEquals("ScanResult level", input.level,
                output.getScanResult().level);
        assertEquals("ScanResult capabilities", input.capabilities,
                output.getScanResult().capabilities);
        assertEquals("ScanResult timestamp", input.timestamp,
                output.getScanResult().timestamp);
        assertArrayEquals("ScanResult information elements", input.informationElements,
                output.getScanResult().informationElements);
        assertEquals("ScanResult anqp lines", input.anqpLines,
                output.getScanResult().anqpLines);
