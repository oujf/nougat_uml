class PhotoPagerAdapter
!!!37303351.java!!!	PhotoPagerAdapter(inout context : Context, inout fm : FragmentManager, inout c : Cursor, in maxScale : float, inout thumbsFullScreen : boolean)
        super(context, fm, c);
        mMaxScale = maxScale;
        mDisplayThumbsFullScreen = thumbsFullScreen;
!!!37303479.java!!!	getItem(inout context : Context, inout cursor : Cursor, in position : int) : Fragment
        final String photoUri = getPhotoUri(cursor);
        final String thumbnailUri = getThumbnailUri(cursor);
        final String contentDescription = getPhotoName(cursor);
        boolean loading = shouldShowLoadingIndicator(cursor);
        boolean onlyShowSpinner = false;
        if(photoUri == null && loading) {
            onlyShowSpinner = true;
        }

        // create new PhotoViewFragment
        final PhotoViewIntentBuilder builder =
                Intents.newPhotoViewFragmentIntentBuilder(mContext, getPhotoViewFragmentClass());
        builder
            .setResolvedPhotoUri(photoUri)
            .setThumbnailUri(thumbnailUri)
            .setContentDescription(contentDescription)
            .setDisplayThumbsFullScreen(mDisplayThumbsFullScreen)
            .setMaxInitialScale(mMaxScale);

        return createPhotoViewFragment(builder.build(), position, onlyShowSpinner);
!!!37303607.java!!!	getPhotoViewFragmentClass() : Class
        return PhotoViewFragment.class;
!!!37303735.java!!!	createPhotoViewFragment(inout intent : Intent, in position : int, inout onlyShowSpinner : boolean) : PhotoViewFragment
        return PhotoViewFragment.newInstance(intent, position, onlyShowSpinner);
!!!37303863.java!!!	swapCursor(inout newCursor : Cursor) : Cursor
        mColumnIndices.clear();

        if (newCursor != null) {
            for(String column : PhotoQuery.PROJECTION) {
                mColumnIndices.put(column, newCursor.getColumnIndexOrThrow(column));
            }

            for(String column : PhotoQuery.OPTIONAL_COLUMNS) {
                int index = newCursor.getColumnIndex(column);
                if (index != -1) {
                    mColumnIndices.put(column, index);
                }
            }
        }

        return super.swapCursor(newCursor);
!!!37303991.java!!!	getPhotoUri(inout cursor : Cursor) : String
        return getString(cursor, PhotoViewColumns.CONTENT_URI);
!!!37304119.java!!!	getThumbnailUri(inout cursor : Cursor) : String
        return getString(cursor, PhotoViewColumns.THUMBNAIL_URI);
!!!37304247.java!!!	getContentType(inout cursor : Cursor) : String
        return getString(cursor, PhotoViewColumns.CONTENT_TYPE);
!!!37304375.java!!!	getPhotoName(inout cursor : Cursor) : String
        return getString(cursor, PhotoViewColumns.NAME);
!!!37304503.java!!!	shouldShowLoadingIndicator(inout cursor : Cursor) : boolean
        String value = getString(cursor, PhotoViewColumns.LOADING_INDICATOR);
        if (value == null) {
            return false;
        } else {
            return Boolean.valueOf(value);
        }
!!!37304631.java!!!	getString(inout cursor : Cursor, inout column : String) : String
        if (mColumnIndices.containsKey(column)) {
            return cursor.getString(mColumnIndices.get(column));
        } else {
            return null;
        }
