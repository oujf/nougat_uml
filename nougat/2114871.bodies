class PhotoBitmapLoader
!!!37315895.java!!!	PhotoBitmapLoader(inout context : Context, inout photoUri : String)
        super(context);
        mPhotoUri = photoUri;
!!!37316023.java!!!	setPhotoUri(inout photoUri : String) : void
        mPhotoUri = photoUri;
!!!37316151.java!!!	loadInBackground() : PhotoBitmapLoaderInterface::BitmapResult
        BitmapResult result = new BitmapResult();
        Context context = getContext();
        if (context != null && mPhotoUri != null) {
            final ContentResolver resolver = context.getContentResolver();
            try {
                result = ImageUtils.createLocalBitmap(resolver, Uri.parse(mPhotoUri),
                        PhotoViewController.sMaxPhotoSize);
                if (result.bitmap != null) {
                    result.bitmap.setDensity(DisplayMetrics.DENSITY_MEDIUM);
                }
            } catch (UnsupportedOperationException ex) {
                // We got image bytes, but unable to decode to a Bitmap
                result.status = BitmapResult.STATUS_EXCEPTION;
            }
        }

        return result;
!!!37316279.java!!!	deliverResult(inout result : PhotoBitmapLoaderInterface::BitmapResult) : void
        Bitmap bitmap = result != null ? result.bitmap : null;
        if (isReset()) {
            // An async query came in while the loader is stopped.  We
            // don't need the result.
            if (bitmap != null) {
                onReleaseResources(bitmap);
            }
            return;
        }
        Bitmap oldBitmap = mBitmap;
        mBitmap = bitmap;

        if (isStarted()) {
            // If the Loader is currently started, we can immediately
            // deliver its results.
            super.deliverResult(result);
        }

        // At this point we can release the resources associated with
        // 'oldBitmap' if needed; now that the new result is delivered we
        // know that it is no longer in use.
        if (oldBitmap != null && oldBitmap != bitmap && !oldBitmap.isRecycled()) {
            onReleaseResources(oldBitmap);
        }
!!!37316407.java!!!	onStartLoading() : void
        if (mBitmap != null) {
            // If we currently have a result available, deliver it
            // immediately.
            BitmapResult result = new BitmapResult();
            result.status = BitmapResult.STATUS_SUCCESS;
            result.bitmap = mBitmap;
            deliverResult(result);
        }

        if (takeContentChanged() || mBitmap == null) {
            // If the data has changed since the last time it was loaded
            // or is not currently available, start a load.
            forceLoad();
        }
!!!37316535.java!!!	onStopLoading() : void
        // Attempt to cancel the current load task if possible.
        cancelLoad();
!!!37316663.java!!!	onCanceled(inout result : PhotoBitmapLoaderInterface::BitmapResult) : void
        super.onCanceled(result);

        // At this point we can release the resources associated with 'bitmap'
        // if needed.
        if (result != null) {
            onReleaseResources(result.bitmap);
        }
!!!37316791.java!!!	onReset() : void
        super.onReset();

        // Ensure the loader is stopped
        onStopLoading();

        // At this point we can release the resources associated with 'bitmap'
        // if needed.
        if (mBitmap != null) {
            onReleaseResources(mBitmap);
            mBitmap = null;
        }
!!!37316919.java!!!	onReleaseResources(inout bitmap : Bitmap) : void
        if (bitmap != null && !bitmap.isRecycled()) {
            bitmap.recycle();
        }
