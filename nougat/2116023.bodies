class CursorLoader
!!!37317047.java!!!	loadInBackground() : Cursor
        synchronized (this) {
            if (isLoadInBackgroundCanceled()) {
                throw new OperationCanceledException();
            }
            mCancellationSignal = new CancellationSignal();
        }
        try {
            Cursor cursor = ContentResolverCompat.query(getContext().getContentResolver(),
                    mUri, mProjection, mSelection, mSelectionArgs, mSortOrder,
                    mCancellationSignal);
            if (cursor != null) {
                try {
                    // Ensure the cursor window is filled.
                    cursor.getCount();
                    cursor.registerContentObserver(mObserver);
                } catch (RuntimeException ex) {
                    cursor.close();
                    throw ex;
                }
            }
            return cursor;
        } finally {
            synchronized (this) {
                mCancellationSignal = null;
            }
        }
!!!37317175.java!!!	cancelLoadInBackground() : void
        super.cancelLoadInBackground();

        synchronized (this) {
            if (mCancellationSignal != null) {
                mCancellationSignal.cancel();
            }
        }
!!!37317303.java!!!	deliverResult(inout cursor : Cursor) : void
        if (isReset()) {
            // An async query came in while the loader is stopped
            if (cursor != null) {
                cursor.close();
            }
            return;
        }
        Cursor oldCursor = mCursor;
        mCursor = cursor;

        if (isStarted()) {
            super.deliverResult(cursor);
        }

        if (oldCursor != null && oldCursor != cursor && !oldCursor.isClosed()) {
            oldCursor.close();
        }
!!!37317431.java!!!	CursorLoader(inout context : Context)
        super(context);
        mObserver = new ForceLoadContentObserver();
!!!37317559.java!!!	CursorLoader(inout context : Context, inout uri : Uri, inout projection : String, inout selection : String, inout selectionArgs : String, inout sortOrder : String)
        super(context);
        mObserver = new ForceLoadContentObserver();
        mUri = uri;
        mProjection = projection;
        mSelection = selection;
        mSelectionArgs = selectionArgs;
        mSortOrder = sortOrder;
!!!37317687.java!!!	onStartLoading() : void
        if (mCursor != null) {
            deliverResult(mCursor);
        }
        if (takeContentChanged() || mCursor == null) {
            forceLoad();
        }
!!!37317815.java!!!	onStopLoading() : void
        // Attempt to cancel the current load task if possible.
        cancelLoad();
!!!37317943.java!!!	onCanceled(inout cursor : Cursor) : void
        if (cursor != null && !cursor.isClosed()) {
            cursor.close();
        }
!!!37318071.java!!!	onReset() : void
        super.onReset();
        
        // Ensure the loader is stopped
        onStopLoading();

        if (mCursor != null && !mCursor.isClosed()) {
            mCursor.close();
        }
        mCursor = null;
!!!37318199.java!!!	getUri() : Uri
        return mUri;
!!!37318327.java!!!	setUri(inout uri : Uri) : void
        mUri = uri;
!!!37318455.java!!!	getProjection() : String
        return mProjection;
!!!37318583.java!!!	setProjection(inout projection : String) : void
        mProjection = projection;
!!!37318711.java!!!	getSelection() : String
        return mSelection;
!!!37318839.java!!!	setSelection(inout selection : String) : void
        mSelection = selection;
!!!37318967.java!!!	getSelectionArgs() : String
        return mSelectionArgs;
!!!37319095.java!!!	setSelectionArgs(inout selectionArgs : String) : void
        mSelectionArgs = selectionArgs;
!!!37319223.java!!!	getSortOrder() : String
        return mSortOrder;
!!!37319351.java!!!	setSortOrder(inout sortOrder : String) : void
        mSortOrder = sortOrder;
!!!37319479.java!!!	dump(inout prefix : String, inout fd : FileDescriptor, inout writer : PrintWriter, inout args : String) : void
        super.dump(prefix, fd, writer, args);
        writer.print(prefix); writer.print("mUri="); writer.println(mUri);
        writer.print(prefix); writer.print("mProjection=");
                writer.println(Arrays.toString(mProjection));
        writer.print(prefix); writer.print("mSelection="); writer.println(mSelection);
        writer.print(prefix); writer.print("mSelectionArgs=");
                writer.println(Arrays.toString(mSelectionArgs));
        writer.print(prefix); writer.print("mSortOrder="); writer.println(mSortOrder);
        writer.print(prefix); writer.print("mCursor="); writer.println(mCursor);
        writer.print(prefix); writer.print("mContentChanged="); writer.println(mContentChanged);
