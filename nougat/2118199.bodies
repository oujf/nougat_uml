class TranslateRunnable
!!!37330743.java!!!	TranslateRunnable(inout header : PhotoView)
            mLastRunTime = NEVER;
            mHeader = header;
!!!37330871.java!!!	start(in velocityX : float, in velocityY : float) : boolean
            if (mRunning) {
                return false;
            }
            mLastRunTime = NEVER;
            mVelocityX = velocityX;
            mVelocityY = velocityY;

            float angle = (float) Math.atan2(mVelocityY, mVelocityX);
            mDecelerationX = (float) (DECELERATION_RATE * Math.cos(angle));
            mDecelerationY = (float) (DECELERATION_RATE * Math.sin(angle));

            mStop = false;
            mRunning = true;
            mHeader.post(this);
            return true;
!!!37330999.java!!!	stop() : void
            mRunning = false;
            mStop = true;
!!!37331127.java!!!	run() : void
            // See if we were told to stop:
            if (mStop) {
                return;
            }

            // Translate according to current velocities and time delta:
            long now = System.currentTimeMillis();
            float delta = (mLastRunTime != NEVER) ? (now - mLastRunTime) / 1000f : 0f;
            final int translateResult = mHeader.translate(mVelocityX * delta, mVelocityY * delta);
            mLastRunTime = now;
            // Slow down:
            float slowDownX = mDecelerationX * delta;
            if (Math.abs(mVelocityX) > Math.abs(slowDownX)) {
                mVelocityX -= slowDownX;
            } else {
                mVelocityX = 0f;
            }
            float slowDownY = mDecelerationY * delta;
            if (Math.abs(mVelocityY) > Math.abs(slowDownY)) {
                mVelocityY -= slowDownY;
            } else {
                mVelocityY = 0f;
            }

            // Stop when done
            if ((mVelocityX == 0f && mVelocityY == 0f)
                    || translateResult == TRANSLATE_NONE) {
                stop();
                mHeader.snap();
            } else if (translateResult == TRANSLATE_X_ONLY) {
                mDecelerationX = (mVelocityX > 0) ? DECELERATION_RATE : -DECELERATION_RATE;
                mDecelerationY = 0;
                mVelocityY = 0f;
            } else if (translateResult == TRANSLATE_Y_ONLY) {
                mDecelerationX = 0;
                mDecelerationY = (mVelocityY > 0) ? DECELERATION_RATE : -DECELERATION_RATE;
                mVelocityX = 0f;
            }

            // See if we need to continue flinging:
            if (mStop) {
                return;
            }
            mHeader.post(this);
