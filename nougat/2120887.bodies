class DividerItemDecoration
!!!37346871.java!!!	getDefault(inout context : Context) : DividerItemDecoration
        final TypedArray a = context.obtainStyledAttributes(R.styleable.SuwDividerItemDecoration);
        final Drawable divider = a.getDrawable(
                R.styleable.SuwDividerItemDecoration_android_listDivider);
        final int dividerHeight = a.getDimensionPixelSize(
                R.styleable.SuwDividerItemDecoration_android_dividerHeight, 0);
        @DividerCondition final int dividerCondition = a.getInt(
                R.styleable.SuwDividerItemDecoration_suwDividerCondition,
                DIVIDER_CONDITION_EITHER);
        a.recycle();

        final DividerItemDecoration decoration = new DividerItemDecoration();
        decoration.setDivider(divider);
        decoration.setDividerHeight(dividerHeight);
        decoration.setDividerCondition(dividerCondition);
        return decoration;
!!!37346999.java!!!	onDraw(inout c : Canvas, inout parent : RecyclerView, inout state : RecyclerView::State) : void
        if (mDivider == null) {
            return;
        }
        final int childCount = parent.getChildCount();
        final int width = parent.getWidth();
        final int dividerHeight = mDividerHeight != 0 ? mDividerHeight : mDividerIntrinsicHeight;
        for (int childViewIndex = 0; childViewIndex < childCount; childViewIndex++) {
            final View view = parent.getChildAt(childViewIndex);
            if (shouldDrawDividerBelow(view, parent)) {
                final int top = (int) ViewCompat.getY(view) + view.getHeight();
                mDivider.setBounds(0, top, width, top + dividerHeight);
                mDivider.draw(c);
            }
        }
!!!37347127.java!!!	getItemOffsets(inout outRect : Rect, inout view : View, inout parent : RecyclerView, inout state : RecyclerView::State) : void
        if (shouldDrawDividerBelow(view, parent)) {
            outRect.bottom = mDividerHeight != 0 ? mDividerHeight : mDividerIntrinsicHeight;
        }
!!!37347255.java!!!	shouldDrawDividerBelow(inout view : View, inout parent : RecyclerView) : boolean
        final RecyclerView.ViewHolder holder = parent.getChildViewHolder(view);
        final int index = holder.getLayoutPosition();
        final int lastItemIndex = parent.getAdapter().getItemCount() - 1;
        if ((holder instanceof DividedViewHolder)) {
            if (((DividedViewHolder) holder).isDividerAllowedBelow()) {
                if (mDividerCondition == DIVIDER_CONDITION_EITHER) {
                    // Draw the divider without consulting the next item if we only
                    // need permission for either above or below.
                    return true;
                }
            } else if (mDividerCondition == DIVIDER_CONDITION_BOTH || index == lastItemIndex) {
                // Don't draw if the current view holder doesn't allow drawing below
                // and the current theme requires permission for both the item below and above.
                // Also, if this is the last item, there is no item below to ask permission
                // for whether to draw a divider above, so don't draw it.
                return false;
            }
        }
        // Require permission from index below to draw the divider.
        if (index < lastItemIndex) {
            final RecyclerView.ViewHolder nextHolder =
                    parent.findViewHolderForLayoutPosition(index + 1);
            if ((nextHolder instanceof DividedViewHolder)
                    && !((DividedViewHolder) nextHolder).isDividerAllowedAbove()) {
                // Don't draw if the next view holder doesn't allow drawing above
                return false;
            }
        }
        return true;
!!!37347383.java!!!	setDivider(inout divider : Drawable) : void
        if (divider != null) {
            mDividerIntrinsicHeight = divider.getIntrinsicHeight();
        } else {
            mDividerIntrinsicHeight = 0;
        }
        mDivider = divider;
!!!37347511.java!!!	getDivider() : Drawable
        return mDivider;
!!!37347639.java!!!	setDividerHeight(in dividerHeight : int) : void
        mDividerHeight = dividerHeight;
!!!37347767.java!!!	getDividerHeight() : int
        return mDividerHeight;
!!!37347895.java!!!	setDividerCondition(in dividerCondition : int) : void
        mDividerCondition = dividerCondition;
!!!37348023.java!!!	getDividerCondition() : int
        return mDividerCondition;
