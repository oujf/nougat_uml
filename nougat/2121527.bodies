class GlifLayout
!!!37349815.java!!!	GlifLayout(inout context : Context)
        this(context, 0, 0);
!!!37349943.java!!!	GlifLayout(inout context : Context, in template : int)
        this(context, template, 0);
!!!37350071.java!!!	GlifLayout(inout context : Context, in template : int, in containerId : int)
        super(context, template, containerId);
        init(null, R.attr.suwLayoutTheme);
!!!37350199.java!!!	GlifLayout(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        init(attrs, R.attr.suwLayoutTheme);
!!!37350327.java!!!	GlifLayout(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int)
        super(context, attrs, defStyleAttr);
        init(attrs, defStyleAttr);
!!!37350455.java!!!	init(inout attrs : AttributeSet, in defStyleAttr : int) : void
        final TypedArray a = getContext().obtainStyledAttributes(attrs,
                R.styleable.SuwGlifLayout, defStyleAttr, 0);

        final Drawable icon = a.getDrawable(R.styleable.SuwGlifLayout_android_icon);
        if (icon != null) {
            setIcon(icon);
        }

        // Set the header color
        final ColorStateList headerColor =
                a.getColorStateList(R.styleable.SuwGlifLayout_suwHeaderColor);
        if (headerColor != null) {
            setHeaderColor(headerColor);
        }


        // Set the header text
        final CharSequence headerText =
                a.getText(R.styleable.SuwGlifLayout_suwHeaderText);
        if (headerText != null) {
            setHeaderText(headerText);
        }

        final ColorStateList primaryColor =
                a.getColorStateList(R.styleable.SuwGlifLayout_android_colorPrimary);
        setPrimaryColor(primaryColor);

        a.recycle();
!!!37350583.java!!!	onInflateTemplate(inout inflater : LayoutInflater, in template : int) : View
        if (template == 0) {
            template = R.layout.suw_glif_template;
        }
        try {
            return super.onInflateTemplate(inflater, template);
        } catch (RuntimeException e) {
            // Versions before M throws RuntimeException for unsuccessful attribute resolution
            // Versions M+ will throw an InflateException (which extends from RuntimeException)
            throw new InflateException("Unable to inflate layout. Are you using "
                    + "@style/SuwThemeGlif (or its descendant) as your theme?", e);
        }
!!!37350711.java!!!	findContainer(in containerId : int) : ViewGroup
        if (containerId == 0) {
            containerId = R.id.suw_layout_content;
        }
        return super.findContainer(containerId);
!!!37350839.java!!!	findManagedViewById(in id : int) : View
        return findViewById(id);
!!!37350967.java!!!	getScrollView() : ScrollView
        final View view = findManagedViewById(R.id.suw_scroll_view);
        return view instanceof ScrollView ? (ScrollView) view : null;
!!!37351095.java!!!	getHeaderTextView() : TextView
        return (TextView) findManagedViewById(R.id.suw_layout_title);
!!!37351223.java!!!	setHeaderText(in title : int) : void
        setHeaderText(getContext().getResources().getText(title));
!!!37351351.java!!!	setHeaderText(inout title : CharSequence) : void
        final TextView titleView = getHeaderTextView();
        if (titleView != null) {
            titleView.setText(title);
        }
!!!37351479.java!!!	getHeaderText() : CharSequence
        final TextView titleView = getHeaderTextView();
        return titleView != null ? titleView.getText() : null;
!!!37351607.java!!!	setHeaderColor(inout color : ColorStateList) : void
        final TextView titleView = getHeaderTextView();
        if (titleView != null) {
            titleView.setTextColor(color);
        }
!!!37351735.java!!!	getHeaderColor() : ColorStateList
        final TextView titleView = getHeaderTextView();
        return titleView != null ? titleView.getTextColors() : null;
!!!37351863.java!!!	setIcon(inout icon : Drawable) : void
        final ImageView iconView = getIconView();
        if (iconView != null) {
            iconView.setImageDrawable(icon);
        }
!!!37351991.java!!!	getIcon() : Drawable
        final ImageView iconView = getIconView();
        return iconView != null ? iconView.getDrawable() : null;
!!!37352119.java!!!	getIconView() : ImageView
        return (ImageView) findManagedViewById(R.id.suw_layout_icon);
!!!37352247.java!!!	setPrimaryColor(inout color : ColorStateList) : void
        mPrimaryColor = color;
        setGlifPatternColor(color);
        setProgressBarColor(color);
!!!37352375.java!!!	getPrimaryColor() : ColorStateList
        return mPrimaryColor;
!!!37352503.java!!!	setGlifPatternColor(inout color : ColorStateList) : void
        if (Build.VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {
            setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
            final View patternBg = findManagedViewById(R.id.suw_pattern_bg);
            if (patternBg != null) {
                final GlifPatternDrawable background =
                        new GlifPatternDrawable(color.getDefaultColor());
                if (patternBg instanceof StatusBarBackgroundLayout) {
                    ((StatusBarBackgroundLayout) patternBg).setStatusBarBackground(background);
                } else {
                    patternBg.setBackground(background);
                }
            }
        }
!!!37352631.java!!!	isProgressBarShown() : boolean
        final View progressBar = findManagedViewById(R.id.suw_layout_progress);
        return progressBar != null && progressBar.getVisibility() == View.VISIBLE;
!!!37352759.java!!!	setProgressBarShown(inout shown : boolean) : void
        final View progressBar = findManagedViewById(R.id.suw_layout_progress);
        if (shown) {
            if (progressBar != null) {
                progressBar.setVisibility(View.VISIBLE);
            } else {
                final ViewStub progressBarStub =
                        (ViewStub) findManagedViewById(R.id.suw_layout_progress_stub);
                if (progressBarStub != null) {
                    progressBarStub.inflate();
                }
            }
            setProgressBarColor(mPrimaryColor);
        } else {
            if (progressBar != null) {
                progressBar.setVisibility(View.GONE);
            }
        }
!!!37352887.java!!!	setProgressBarColor(inout color : ColorStateList) : void
        if (Build.VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {
            final ProgressBar bar = (ProgressBar) findManagedViewById(R.id.suw_layout_progress);
            if (bar != null) {
                bar.setIndeterminateTintList(color);
            }
        }
