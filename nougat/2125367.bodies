class SetupWizardPreferenceLayoutTest
!!!37380407.java!!!	setUp() : void
        super.setUp();
        mContext = new ContextThemeWrapper(getInstrumentation().getContext(),
                R.style.SuwThemeMaterial_Light);
!!!37380535.java!!!	testDefaultTemplate() : void
        SetupWizardPreferenceLayout layout = new TestLayout(mContext);
        assertPreferenceTemplateInflated(layout);
!!!37380663.java!!!	testGetRecyclerView() : void
        SetupWizardPreferenceLayout layout = new TestLayout(mContext);
        assertPreferenceTemplateInflated(layout);
        assertNotNull("getRecyclerView should not be null", layout.getRecyclerView());
!!!37380791.java!!!	testOnCreateRecyclerView() : void
        SetupWizardPreferenceLayout layout = new TestLayout(mContext);
        assertPreferenceTemplateInflated(layout);
        final RecyclerView recyclerView = layout.onCreateRecyclerView(LayoutInflater.from(mContext),
                layout, null /* savedInstanceState */);
        assertNotNull("RecyclerView created should not be null", recyclerView);
!!!37380919.java!!!	testDividerInset() : void
        SetupWizardPreferenceLayout layout = new TestLayout(mContext);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            layout.setLayoutDirection(View.LAYOUT_DIRECTION_LTR);
        }
        assertPreferenceTemplateInflated(layout);

        layout.addView(layout.onCreateRecyclerView(LayoutInflater.from(mContext), layout,
                null /* savedInstanceState */));

        layout.setDividerInset(10);
        assertEquals("Divider inset should be 10", 10, layout.getDividerInset());

        final Drawable divider = layout.getDivider();
        assertTrue("Divider should be instance of InsetDrawable", divider instanceof InsetDrawable);
!!!37381047.java!!!	assertPreferenceTemplateInflated(inout layout : SetupWizardPreferenceLayout) : void
        View contentContainer = layout.findViewById(R.id.suw_layout_content);
        assertTrue("@id/suw_layout_content should be a ViewGroup",
                contentContainer instanceof ViewGroup);

        if (layout instanceof TestLayout) {
            assertNotNull("Header text view should not be null",
                    ((TestLayout) layout).findManagedViewById(R.id.suw_layout_title));
            assertNotNull("Decoration view should not be null",
                    ((TestLayout) layout).findManagedViewById(R.id.suw_layout_decor));
        }
