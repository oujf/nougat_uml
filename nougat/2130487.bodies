class StickyHeaderListView
!!!37411511.java!!!	StickyHeaderListView(inout context : Context)
        super(context);
        init(null, android.R.attr.listViewStyle);
!!!37411639.java!!!	StickyHeaderListView(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        init(attrs, android.R.attr.listViewStyle);
!!!37411767.java!!!	StickyHeaderListView(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int)
        super(context, attrs, defStyleAttr);
        init(attrs, defStyleAttr);
!!!37411895.java!!!	init(inout attrs : AttributeSet, in defStyleAttr : int) : void
        final TypedArray a = getContext().obtainStyledAttributes(attrs,
                R.styleable.SuwStickyHeaderListView, defStyleAttr, 0);
        int headerResId = a.getResourceId(R.styleable.SuwStickyHeaderListView_suwHeader, 0);
        if (headerResId != 0) {
            LayoutInflater inflater = LayoutInflater.from(getContext());
            View header = inflater.inflate(headerResId, this, false);
            addHeaderView(header, null, false);
        }
        a.recycle();
!!!37412023.java!!!	onLayout(inout changed : boolean, in l : int, in t : int, in r : int, in b : int) : void
        super.onLayout(changed, l, t, r, b);
        if (mSticky == null) {
            updateStickyView();
        }
!!!37412151.java!!!	updateStickyView() : void
        mSticky = findViewWithTag("sticky");
        mStickyContainer = findViewWithTag("stickyContainer");
!!!37412279.java!!!	dispatchTouchEvent(inout ev : MotionEvent) : boolean
        if (mStickyRect.contains(ev.getX(), ev.getY())) {
            ev.offsetLocation(-mStickyRect.left, -mStickyRect.top);
            return mStickyContainer.dispatchTouchEvent(ev);
        } else {
            return super.dispatchTouchEvent(ev);
        }
!!!37412407.java!!!	draw(inout canvas : Canvas) : void
        super.draw(canvas);
        if (mSticky != null) {
            final int saveCount = canvas.save();
            // The view to draw when sticking to the top
            final View drawTarget = mStickyContainer != null ? mStickyContainer : mSticky;
            // The offset to draw the view at when sticky
            final int drawOffset = mStickyContainer != null ? mSticky.getTop() : 0;
            // Position of the draw target, relative to the outside of the scrollView
            final int drawTop = drawTarget.getTop();
            if (drawTop + drawOffset < mStatusBarInset || !drawTarget.isShown()) {
                // ListView does not translate the canvas, so we can simply draw at the top
                mStickyRect.set(0, -drawOffset + mStatusBarInset, drawTarget.getWidth(),
                        drawTarget.getHeight() - drawOffset + mStatusBarInset);
                canvas.translate(0, mStickyRect.top);
                canvas.clipRect(0, 0, drawTarget.getWidth(), drawTarget.getHeight());
                drawTarget.draw(canvas);
            } else {
                mStickyRect.setEmpty();
            }
            canvas.restoreToCount(saveCount);
        }
!!!37412535.java!!!	onApplyWindowInsets(inout insets : WindowInsets) : WindowInsets
        if (getFitsSystemWindows()) {
            mStatusBarInset = insets.getSystemWindowInsetTop();
            insets.replaceSystemWindowInsets(
                    insets.getSystemWindowInsetLeft(),
                    0, /* top */
                    insets.getSystemWindowInsetRight(),
                    insets.getSystemWindowInsetBottom()
            );
        }
        return insets;
!!!37412663.java!!!	onInitializeAccessibilityEvent(inout event : AccessibilityEvent) : void
        super.onInitializeAccessibilityEvent(event);

        // Decoration-only headers should not count as an item for accessibility, adjust the
        // accessibility event to account for that.
        final int numberOfHeaders = mSticky != null ? 1 : 0;
        event.setItemCount(event.getItemCount() - numberOfHeaders);
        event.setFromIndex(Math.max(event.getFromIndex() - numberOfHeaders, 0));
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
            event.setToIndex(Math.max(event.getToIndex() - numberOfHeaders, 0));
        }
