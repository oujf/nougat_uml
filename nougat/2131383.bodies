class ButtonItemTest
!!!37416247.java!!!	setUp() : void
        super.setUp();
        mParent = new LinearLayout(getContext());
!!!37416375.java!!!	testDefaultItem() : void
        ButtonItem item = new ButtonItem();

        assertTrue("ButtonItem should be enabled by default", item.isEnabled());
        assertEquals("ButtonItem should return count = 0", 0, item.getCount());
        assertEquals("ButtonItem should return layout resource = 0", 0, item.getLayoutResource());
        assertEquals("Default theme should be @style/SuwButtonItem", R.style.SuwButtonItem,
                item.getTheme());
        assertNull("Default text should be null", item.getText());
!!!37416503.java!!!	testOnBindView() : void
        ButtonItem item = new ButtonItem();

        try {
            item.onBindView(new View(getContext()));
            fail("Calling onBindView on ButtonItem should throw UnsupportedOperationException");
        } catch (UnsupportedOperationException e) {
            // pass
        }
!!!37416631.java!!!	testCreateButton() : void
        TestButtonItem item = new TestButtonItem();
        final Button button = item.createButton(mParent);

        assertTrue("Default button should be enabled", button.isEnabled());
        assertTrue("Default button text should be empty", TextUtils.isEmpty(button.getText()));
!!!37416759.java!!!	testSetEnabledTrue() : void
        TestButtonItem item = new TestButtonItem();
        item.setEnabled(true);

        final Button button = item.createButton(mParent);
        assertTrue("ButtonItem should be enabled", item.isEnabled());
        assertTrue("Button should be enabled", button.isEnabled());
!!!37416887.java!!!	testSetEnabledFalse() : void
        TestButtonItem item = new TestButtonItem();
        item.setEnabled(false);

        final Button button = item.createButton(mParent);
        assertFalse("ButtonItem should be disabled", item.isEnabled());
        assertFalse("Button should be disabled", button.isEnabled());
!!!37417015.java!!!	testSetText() : void
        TestButtonItem item = new TestButtonItem();
        item.setText("lorem ipsum");

        final Button button = item.createButton(mParent);
        assertEquals("ButtonItem text should be \"lorem ipsum\"", "lorem ipsum", item.getText());
        assertEquals("Button text should be \"lorem ipsum\"", "lorem ipsum", button.getText());
!!!37417143.java!!!	testSetTheme() : void
        TestButtonItem item = new TestButtonItem();
        item.setTheme(12345);

        final Button button = item.createButton(mParent);
        assertEquals("ButtonItem theme should be 12345", 12345, item.getTheme());
        button.getContext().getTheme();
!!!37417271.java!!!	testOnClickListener() : void
        TestButtonItem item = new TestButtonItem();
        final TestOnClickListener listener = new TestOnClickListener();
        item.setOnClickListener(listener);

        assertNull("Clicked item should be null before clicking", listener.clickedItem);

        final Button button = item.createButton(mParent);
        button.performClick();

        assertSame("Clicked item should be set", item, listener.clickedItem);
