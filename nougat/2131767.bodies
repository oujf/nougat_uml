class DrawableLayoutDirectionHelperTest
!!!37417655.java!!!	testCreateRelativeInsetDrawableLtr() : void
        final Drawable drawable = new ColorDrawable(Color.RED);
        final InsetDrawable insetDrawable =
                DrawableLayoutDirectionHelper.createRelativeInsetDrawable(drawable,
                        1 /* start */, 2 /* top */, 3 /* end */, 4 /* bottom */,
                        View.LAYOUT_DIRECTION_LTR);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            assertSame("Drawable from getDrawable() should be same as passed in", drawable,
                    insetDrawable.getDrawable());
        }
        Rect outRect = new Rect();
        insetDrawable.getPadding(outRect);
        assertEquals("InsetDrawable padding should be same as inset", new Rect(1, 2, 3, 4),
                outRect);
!!!37417783.java!!!	testCreateRelativeInsetDrawableRtl() : void
        final Drawable drawable = new ColorDrawable(Color.RED);
        final InsetDrawable insetDrawable =
                DrawableLayoutDirectionHelper.createRelativeInsetDrawable(drawable,
                        1 /* start */, 2 /* top */, 3 /* end */, 4 /* bottom */,
                        View.LAYOUT_DIRECTION_RTL);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            assertSame("Drawable from getDrawable() should be same as passed in", drawable,
                    insetDrawable.getDrawable());
        }
        Rect outRect = new Rect();
        insetDrawable.getPadding(outRect);
        assertEquals("InsetDrawable padding should be same as inset", new Rect(3, 2, 1, 4),
                outRect);
!!!37417911.java!!!	testCreateRelativeInsetDrawableViewRtl() : void
        final Drawable drawable = new ColorDrawable(Color.RED);
        final View view = new ForceRtlView(getContext());
        final InsetDrawable insetDrawable =
                DrawableLayoutDirectionHelper.createRelativeInsetDrawable(drawable,
                        1 /* start */, 2 /* top */, 3 /* end */, 4 /* bottom */, view);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            assertSame("Drawable from getDrawable() should be same as passed in", drawable,
                    insetDrawable.getDrawable());
        }
        Rect outRect = new Rect();
        insetDrawable.getPadding(outRect);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
            assertEquals("InsetDrawable padding should be same as inset", new Rect(3, 2, 1, 4),
                    outRect);
        } else {
            assertEquals("InsetDrawable padding should be same as inset", new Rect(1, 2, 3, 4),
                    outRect);
        }
!!!37418039.java!!!	testCreateRelativeInsetDrawableContextRtl() : void
        final Drawable drawable = new ColorDrawable(Color.RED);
        Context context = getContext();
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
            final Configuration config = new Configuration();
            config.setLayoutDirection(new Locale("fa", "IR"));
            context = getContext().createConfigurationContext(config);
        }
        final InsetDrawable insetDrawable =
                DrawableLayoutDirectionHelper.createRelativeInsetDrawable(drawable,
                        1 /* start */, 2 /* top */, 3 /* end */, 4 /* bottom */, context);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            assertSame("Drawable from getDrawable() should be same as passed in", drawable,
                    insetDrawable.getDrawable());
        }
        Rect outRect = new Rect();
        insetDrawable.getPadding(outRect);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
            assertEquals("InsetDrawable padding should be same as inset", new Rect(3, 2, 1, 4),
                    outRect);
        } else {
            assertEquals("InsetDrawable padding should be same as inset", new Rect(1, 2, 3, 4),
                    outRect);
        }
