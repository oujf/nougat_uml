class GlifLayoutTest
!!!37418423.java!!!	setUp() : void
        super.setUp();
        mContext = new ContextThemeWrapper(getInstrumentation().getContext(),
                R.style.SuwThemeGlif_Light);
!!!37418551.java!!!	testDefaultTemplate() : void
        GlifLayout layout = new GlifLayout(mContext);
        assertDefaultTemplateInflated(layout);
!!!37418679.java!!!	testSetHeaderText() : void
        GlifLayout layout = new GlifLayout(mContext);
        TextView title = (TextView) layout.findViewById(R.id.suw_layout_title);
        layout.setHeaderText("Abracadabra");
        assertEquals("Header text should be \"Abracadabra\"", "Abracadabra", title.getText());
!!!37418807.java!!!	testAddView() : void
        GlifLayout layout = new GlifLayout(mContext);
        TextView tv = new TextView(mContext);
        tv.setId(R.id.test_view_id);
        layout.addView(tv);
        assertDefaultTemplateInflated(layout);
        View view = layout.findViewById(R.id.test_view_id);
        assertSame("The view added should be the same text view", tv, view);
!!!37418935.java!!!	testInflateFromXml() : void
        LayoutInflater inflater = LayoutInflater.from(mContext);
        GlifLayout layout = (GlifLayout) inflater.inflate(R.layout.test_glif_layout, null);
        assertDefaultTemplateInflated(layout);
        View content = layout.findViewById(R.id.test_content);
        assertTrue("@id/test_content should be a TextView", content instanceof TextView);
!!!37419063.java!!!	testGetScrollView() : void
        GlifLayout layout = new GlifLayout(mContext);
        assertNotNull("Get scroll view should not be null with default template",
                layout.getScrollView());
!!!37419191.java!!!	testSetPrimaryColor() : void
        GlifLayout layout = new GlifLayout(mContext);
        layout.setProgressBarShown(true);
        layout.setPrimaryColor(ColorStateList.valueOf(Color.RED));
        assertEquals("Primary color should be red",
                ColorStateList.valueOf(Color.RED), layout.getPrimaryColor());

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            ProgressBar progressBar = (ProgressBar) layout.findViewById(R.id.suw_layout_progress);
            assertEquals("Progress bar should be tinted red",
                    ColorStateList.valueOf(Color.RED), progressBar.getIndeterminateTintList());
        }
!!!37419319.java!!!	testWrongTheme() : void
        // Test the error message when using the wrong theme
        mContext = new ContextThemeWrapper(getInstrumentation().getContext(),
                android.R.style.Theme);
        try {
            new GlifLayout(mContext);
            fail("Should have thrown InflateException");
        } catch (InflateException e) {
            assertEquals("Exception message should mention correct theme to use",
                    "Unable to inflate layout. Are you using @style/SuwThemeGlif "
                            + "(or its descendant) as your theme?", e.getMessage());
        }
!!!37419447.java!!!	assertDefaultTemplateInflated(inout layout : GlifLayout) : void
        View title = layout.findViewById(R.id.suw_layout_title);
        assertNotNull("@id/suw_layout_title should not be null", title);

        View icon = layout.findViewById(R.id.suw_layout_icon);
        assertNotNull("@id/suw_layout_icon should not be null", icon);

        View scrollView = layout.findViewById(R.id.suw_scroll_view);
        assertTrue("@id/suw_scroll_view should be a ScrollView", scrollView instanceof ScrollView);
