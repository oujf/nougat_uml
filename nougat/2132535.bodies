class ItemAdapterTest
!!!37421495.java!!!	setUp() : void
        super.setUp();
        for (int i = 0; i < 5; i++) {
            Item item = new Item();
            item.setTitle("TestTitle" + i);
            item.setId(i);
            item.setLayoutResource(((i % 3) + 1) * 10);
            mItems[i] = item;
            mItemGroup.addChild(item);
        }
!!!37421623.java!!!	testAdapter() : void
        ItemAdapter adapter = new ItemAdapter(mItemGroup);
        assertEquals("Adapter should have 5 items", 5, adapter.getCount());
        assertEquals("Adapter should return the first item", mItems[0], adapter.getItem(0));
        assertEquals("ID should be same as position", 2, adapter.getItemId(2));

        // Each test item has its own layout resource, and therefore its own view type
        assertEquals("Should have 3 different view types", 3, adapter.getViewTypeCount());
        HashSet<Integer> viewTypes = new HashSet<>(3);
        viewTypes.add(adapter.getItemViewType(0));
        viewTypes.add(adapter.getItemViewType(1));
        viewTypes.add(adapter.getItemViewType(2));

        assertEquals("View types should be 0, 1, 2",
                new HashSet<>(Arrays.asList(0, 1, 2)), viewTypes);
!!!37421751.java!!!	testGetRootItemHierarchy() : void
        ItemAdapter adapter = new ItemAdapter(mItemGroup);
        ItemHierarchy root = adapter.getRootItemHierarchy();
        assertSame("Root item hierarchy should be mItemGroup", mItemGroup, root);
