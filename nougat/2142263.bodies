class ATResponseParser
!!!37482167.java!!!	ATResponseParser(inout line : String)
        mLine = line;
!!!37482295.java!!!	nextBoolean() : boolean
        // "\s*(\d)(,|$)"
        // \d is '0' or '1'

        nextTok();

        if (mTokEnd - mTokStart > 1) {
            throw new ATParseEx();
        }
        char c = mLine.charAt(mTokStart);

        if (c == '0') return false;
        if (c ==  '1') return true;
        throw new ATParseEx();
!!!37482423.java!!!	nextInt() : int
        // "\s*(\d+)(,|$)"
        int ret = 0;

        nextTok();

        for (int i = mTokStart ; i < mTokEnd ; i++) {
            char c = mLine.charAt(i);

            // Yes, ASCII decimal digits only
            if (c < '0' || c > '9') {
                throw new ATParseEx();
            }

            ret *= 10;
            ret += c - '0';
        }

        return ret;
!!!37482551.java!!!	nextString() : String
        nextTok();

        return mLine.substring(mTokStart, mTokEnd);
!!!37482679.java!!!	hasMore() : boolean
        return mNext < mLine.length();
!!!37482807.java!!!	nextTok() : void
        int len = mLine.length();

        if (mNext == 0) {
            skipPrefix();
        }

        if (mNext >= len) {
            throw new ATParseEx();
        }

        try {
            // \s*("([^"]*)"|(.*)\s*)(,|$)

            char c = mLine.charAt(mNext++);
            boolean hasQuote = false;

            c = skipWhiteSpace(c);

            if (c == '"') {
                if (mNext >= len) {
                    throw new ATParseEx();
                }
                c = mLine.charAt(mNext++);
                mTokStart = mNext - 1;
                while (c != '"' && mNext < len) {
                    c = mLine.charAt(mNext++);
                }
                if (c != '"') {
                    throw new ATParseEx();
                }
                mTokEnd = mNext - 1;
                if (mNext < len && mLine.charAt(mNext++) != ',') {
                    throw new ATParseEx();
                }
            } else {
                mTokStart = mNext - 1;
                mTokEnd = mTokStart;
                while (c != ',') {
                    if (!Character.isWhitespace(c)) {
                        mTokEnd = mNext;
                    }
                    if (mNext == len) {
                        break;
                    }
                    c = mLine.charAt(mNext++);
                }
            }
        } catch (StringIndexOutOfBoundsException ex) {
            throw new ATParseEx();
        }
!!!37482935.java!!!	skipWhiteSpace(in c : char) : char
        int len;
        len = mLine.length();
        while (mNext < len && Character.isWhitespace(c)) {
            c = mLine.charAt(mNext++);
        }

        if (Character.isWhitespace(c)) {
            throw new ATParseEx();
        }
        return c;
!!!37483063.java!!!	skipPrefix() : void
        // consume "^[^:]:"

        mNext = 0;
        int s = mLine.length();
        while (mNext < s){
            char c = mLine.charAt(mNext++);

            if (c == ':') {
                return;
            }
        }

        throw new ATParseEx("missing prefix");
