class ImsPhoneBase
!!!37966775.java!!!	ImsPhoneBase(inout name : String, inout context : Context, inout notifier : PhoneNotifier, inout unitTestMode : boolean)
        super(name, notifier, context, new ImsPhoneCommandInterface(context), unitTestMode);
!!!37966903.java!!!	migrateFrom(inout from : Phone) : void
        super.migrateFrom(from);
        migrate(mRingbackRegistrants, ((ImsPhoneBase)from).mRingbackRegistrants);
!!!37967031.java!!!	registerForRingbackTone(inout h : Handler, in what : int, inout obj : Object) : void
        mRingbackRegistrants.addUnique(h, what, obj);
!!!37967159.java!!!	unregisterForRingbackTone(inout h : Handler) : void
        mRingbackRegistrants.remove(h);
!!!37967287.java!!!	startRingbackTone() : void
        AsyncResult result = new AsyncResult(null, Boolean.TRUE, null);
        mRingbackRegistrants.notifyRegistrants(result);
!!!37967415.java!!!	stopRingbackTone() : void
        AsyncResult result = new AsyncResult(null, Boolean.FALSE, null);
        mRingbackRegistrants.notifyRegistrants(result);
!!!37967543.java!!!	registerForOnHoldTone(inout h : Handler, in what : int, inout obj : Object) : void
        mOnHoldRegistrants.addUnique(h, what, obj);
!!!37967671.java!!!	unregisterForOnHoldTone(inout h : Handler) : void
        mOnHoldRegistrants.remove(h);
!!!37967799.java!!!	startOnHoldTone(inout cn : Connection) : void
        Pair<Connection, Boolean> result = new Pair<Connection, Boolean>(cn, Boolean.TRUE);
        mOnHoldRegistrants.notifyRegistrants(new AsyncResult(null, result, null));
!!!37967927.java!!!	stopOnHoldTone(inout cn : Connection) : void
        Pair<Connection, Boolean> result = new Pair<Connection, Boolean>(cn, Boolean.FALSE);
        mOnHoldRegistrants.notifyRegistrants(new AsyncResult(null, result, null));
!!!37968055.java!!!	registerForTtyModeReceived(inout h : Handler, in what : int, inout obj : Object) : void
        mTtyModeReceivedRegistrants.addUnique(h, what, obj);
!!!37968183.java!!!	unregisterForTtyModeReceived(inout h : Handler) : void
        mTtyModeReceivedRegistrants.remove(h);
!!!37968311.java!!!	onTtyModeReceived(in mode : int) : void
        AsyncResult result = new AsyncResult(null, Integer.valueOf(mode), null);
        mTtyModeReceivedRegistrants.notifyRegistrants(result);
!!!37968439.java!!!	getServiceState() : ServiceState
        // FIXME: we may need to provide this when data connectivity is lost
        // or when server is down
        ServiceState s = new ServiceState();
        s.setVoiceRegState(ServiceState.STATE_IN_SERVICE);
        return s;
!!!37968567.java!!!	getAllCellInfo() : CellInfo
        return getServiceStateTracker().getAllCellInfo();
!!!37968695.java!!!	getCellLocation() : CellLocation
        return null;
!!!37968823.java!!!	getState() : PhoneConstants::State
        return mState;
!!!37968951.java!!!	getPhoneType() : int
        return PhoneConstants.PHONE_TYPE_IMS;
!!!37969079.java!!!	getSignalStrength() : SignalStrength
        return new SignalStrength();
!!!37969207.java!!!	getMessageWaitingIndicator() : boolean
        return false;
!!!37969335.java!!!	getCallForwardingIndicator() : boolean
        return false;
!!!37969463.java!!!	getPendingMmiCodes() : List<? extends MmiCode>
        return new ArrayList<MmiCode>(0);
!!!37969591.java!!!	getDataConnectionState() : PhoneConstants::DataState
        return PhoneConstants.DataState.DISCONNECTED;
!!!37969719.java!!!	getDataConnectionState(inout apnType : String) : PhoneConstants::DataState
        return PhoneConstants.DataState.DISCONNECTED;
!!!37969847.java!!!	getDataActivityState() : PhoneInternalInterface::DataActivityState
        return DataActivityState.NONE;
!!!37969975.java!!!	notifyPhoneStateChanged() : void
        mNotifier.notifyPhoneState(this);
!!!37970103.java!!!	notifyPreciseCallStateChanged() : void
        /* we'd love it if this was package-scoped*/
        super.notifyPreciseCallStateChangedP();
!!!37970231.java!!!	notifyDisconnect(inout cn : Connection) : void
        mDisconnectRegistrants.notifyResult(cn);
!!!37970359.java!!!	notifyUnknownConnection() : void
        mUnknownConnectionRegistrants.notifyResult(this);
!!!37970487.java!!!	notifySuppServiceFailed(inout code : PhoneInternalInterface::SuppService) : void
        mSuppServiceFailedRegistrants.notifyResult(code);
!!!37970615.java!!!	notifyServiceStateChanged(inout ss : ServiceState) : void
        super.notifyServiceStateChangedP(ss);
!!!37970743.java!!!	notifyCallForwardingIndicator() : void
        mNotifier.notifyCallForwardingChanged(this);
!!!37970871.java!!!	canDial() : boolean
        int serviceState = getServiceState().getState();
        Rlog.v(LOG_TAG, "canDial(): serviceState = " + serviceState);
        if (serviceState == ServiceState.STATE_POWER_OFF) return false;

        String disableCall = SystemProperties.get(
                TelephonyProperties.PROPERTY_DISABLE_CALL, "false");
        Rlog.v(LOG_TAG, "canDial(): disableCall = " + disableCall);
        if (disableCall.equals("true")) return false;

        Rlog.v(LOG_TAG, "canDial(): ringingCall: " + getRingingCall().getState());
        Rlog.v(LOG_TAG, "canDial(): foregndCall: " + getForegroundCall().getState());
        Rlog.v(LOG_TAG, "canDial(): backgndCall: " + getBackgroundCall().getState());
        return !getRingingCall().isRinging()
                && (!getForegroundCall().getState().isAlive()
                    || !getBackgroundCall().getState().isAlive());
!!!37970999.java!!!	handleInCallMmiCommands(inout dialString : String) : boolean
        return false;
!!!37971127.java!!!	isInCall() : boolean
        Call.State foregroundCallState = getForegroundCall().getState();
        Call.State backgroundCallState = getBackgroundCall().getState();
        Call.State ringingCallState = getRingingCall().getState();

       return (foregroundCallState.isAlive() || backgroundCallState.isAlive()
               || ringingCallState.isAlive());
!!!37971255.java!!!	handlePinMmi(inout dialString : String) : boolean
        return false;
!!!37971895.java!!!	getVoiceMailNumber() : String
        return null;
!!!37972023.java!!!	getVoiceMailAlphaTag() : String
        return null;
!!!37972151.java!!!	getDeviceId() : String
        return null;
!!!37972279.java!!!	getDeviceSvn() : String
        return null;
!!!37972407.java!!!	getImei() : String
        return null;
!!!37972535.java!!!	getEsn() : String
        Rlog.e(LOG_TAG, "[VoltePhone] getEsn() is a CDMA method");
        return "0";
!!!37972663.java!!!	getMeid() : String
        Rlog.e(LOG_TAG, "[VoltePhone] getMeid() is a CDMA method");
        return "0";
!!!37972791.java!!!	getSubscriberId() : String
        return null;
!!!37972919.java!!!	getGroupIdLevel1() : String
        return null;
!!!37973047.java!!!	getGroupIdLevel2() : String
        return null;
!!!37973175.java!!!	getIccSerialNumber() : String
        return null;
!!!37973303.java!!!	getLine1Number() : String
        return null;
!!!37973431.java!!!	getLine1AlphaTag() : String
        return null;
!!!37973559.java!!!	setLine1Number(inout alphaTag : String, inout number : String, inout onComplete : Message) : boolean
        // FIXME: what to reply for Volte?
        return false;
!!!37973687.java!!!	setVoiceMailNumber(inout alphaTag : String, inout voiceMailNumber : String, inout onComplete : Message) : void
        // FIXME: what to reply for Volte?
        AsyncResult.forMessage(onComplete, null, null);
        onComplete.sendToTarget();
!!!37974071.java!!!	getOutgoingCallerIdDisplay(inout onComplete : Message) : void
        // FIXME: what to reply?
        AsyncResult.forMessage(onComplete, null, null);
        onComplete.sendToTarget();
!!!37974199.java!!!	setOutgoingCallerIdDisplay(in commandInterfaceCLIRMode : int, inout onComplete : Message) : void
        // FIXME: what's this for Volte?
        AsyncResult.forMessage(onComplete, null, null);
        onComplete.sendToTarget();
!!!37974327.java!!!	getCallWaiting(inout onComplete : Message) : void
        AsyncResult.forMessage(onComplete, null, null);
        onComplete.sendToTarget();
!!!37974455.java!!!	setCallWaiting(inout enable : boolean, inout onComplete : Message) : void
        Rlog.e(LOG_TAG, "call waiting not supported");
!!!37974583.java!!!	getIccRecordsLoaded() : boolean
        return false;
!!!37974711.java!!!	getIccCard() : IccCard
        return null;
!!!37975479.java!!!	getCurrentDataConnectionList() : DataConnection
        return null;
!!!37975991.java!!!	getDataRoamingEnabled() : boolean
        return false;
!!!37976247.java!!!	getDataEnabled() : boolean
        return false;
!!!37976503.java!!!	enableDataConnectivity() : boolean
        return false;
!!!37976631.java!!!	disableDataConnectivity() : boolean
        return false;
!!!37976759.java!!!	isDataConnectivityPossible() : boolean
        return false;
!!!37977015.java!!!	getIccPhoneBookInterfaceManager() : IccPhoneBookInterfaceManager
        return null;
!!!37977143.java!!!	getIccFileHandler() : IccFileHandler
        return null;
!!!37977271.java!!!	activateCellBroadcastSms(in activate : int, inout response : Message) : void
        Rlog.e(LOG_TAG, "Error! This functionality is not implemented for Volte.");
!!!37977399.java!!!	getCellBroadcastSmsConfig(inout response : Message) : void
        Rlog.e(LOG_TAG, "Error! This functionality is not implemented for Volte.");
!!!37977527.java!!!	setCellBroadcastSmsConfig(inout configValuesArray : int, inout response : Message) : void
        Rlog.e(LOG_TAG, "Error! This functionality is not implemented for Volte.");
!!!37977655.java!!!	needsOtaServiceProvisioning() : boolean
        // FIXME: what's this for Volte?
        return false;
!!!37977783.java!!!	getLinkProperties(inout apnType : String) : LinkProperties
        // FIXME: what's this for Volte?
        return null;
!!!37978039.java!!!	updatePhoneState() : void
        PhoneConstants.State oldState = mState;

        if (getRingingCall().isRinging()) {
            mState = PhoneConstants.State.RINGING;
        } else if (getForegroundCall().isIdle()
                && getBackgroundCall().isIdle()) {
            mState = PhoneConstants.State.IDLE;
        } else {
            mState = PhoneConstants.State.OFFHOOK;
        }

        if (mState != oldState) {
            Rlog.d(LOG_TAG, " ^^^ new phone state: " + mState);
            notifyPhoneStateChanged();
        }
