class CallInfo
!!!38147895.java!!!	CallInfo(inout isMT : boolean, inout state : CallInfo::State, inout isMpty : boolean, inout number : String)
        mIsMT = isMT;
        mState = state;
        mIsMpty = isMpty;
        mNumber = number;

        if (number.length() > 0 && number.charAt(0) == '+') {
            mTOA = PhoneNumberUtils.TOA_International;
        } else {
            mTOA = PhoneNumberUtils.TOA_Unknown;
        }
!!!38148023.java!!!	createOutgoingCall(inout number : String) : CallInfo
        return new CallInfo (false, State.DIALING, false, number);
!!!38148151.java!!!	createIncomingCall(inout number : String) : CallInfo
        return new CallInfo (true, State.INCOMING, false, number);
!!!38148279.java!!!	toCLCCLine(in index : int) : String
        return
            "+CLCC: "
            + index + "," + (mIsMT ? "1" : "0") +","
            + mState.value() + ",0," + (mIsMpty ? "1" : "0")
            + ",\"" + mNumber + "\"," + mTOA;
!!!38148407.java!!!	toDriverCall(in index : int) : DriverCall
        DriverCall ret;

        ret = new DriverCall();

        ret.index = index;
        ret.isMT = mIsMT;

        try {
            ret.state = DriverCall.stateFromCLCC(mState.value());
        } catch (ATParseEx ex) {
            throw new RuntimeException("should never happen", ex);
        }

        ret.isMpty = mIsMpty;
        ret.number = mNumber;
        ret.TOA = mTOA;
        ret.isVoice = true;
        ret.als = 0;

        return ret;
!!!38148535.java!!!	isActiveOrHeld() : boolean
        return mState == State.ACTIVE || mState == State.HOLDING;
!!!38148663.java!!!	isConnecting() : boolean
        return mState == State.DIALING || mState == State.ALERTING;
!!!38148791.java!!!	isRinging() : boolean
        return mState == State.INCOMING || mState == State.WAITING;
