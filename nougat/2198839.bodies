class ContextFixture
!!!38279863.java!!!	setSystemService(inout name : String, inout service : Object) : void
        synchronized (mSystemServices) {
            mSystemServices.put(name, service);
        }
!!!38283831.java!!!	ContextFixture()
        MockitoAnnotations.initMocks(this);

        doAnswer(new Answer<List<ResolveInfo>>() {
            @Override
            public List<ResolveInfo> answer(InvocationOnMock invocation) throws Throwable {
                return doQueryIntentServices(
                        (Intent) invocation.getArguments()[0],
                        (Integer) invocation.getArguments()[1]);
            }
        }).when(mPackageManager).queryIntentServices((Intent) any(), anyInt());

        doAnswer(new Answer<List<ResolveInfo>>() {
            @Override
            public List<ResolveInfo> answer(InvocationOnMock invocation) throws Throwable {
                return doQueryIntentServices(
                        (Intent) invocation.getArguments()[0],
                        (Integer) invocation.getArguments()[1]);
            }
        }).when(mPackageManager).queryIntentServicesAsUser((Intent) any(), anyInt(), anyInt());

        doReturn(mBundle).when(mCarrierConfigManager).getConfigForSubId(anyInt());

        mConfiguration.locale = Locale.US;
        doReturn(mConfiguration).when(mResources).getConfiguration();

        mContentResolver.addProvider(Settings.AUTHORITY, mContentProvider);
        mPermissionTable.add(PERMISSION_ENABLE_ALL);
!!!38283959.java!!!	getTestDouble() : Context
        return mContext;
!!!38284087.java!!!	putResource(in id : int, in value : String) : void
        when(mResources.getText(eq(id))).thenReturn(value);
        when(mResources.getString(eq(id))).thenReturn(value);
        when(mResources.getString(eq(id), any())).thenAnswer(new Answer<String>() {
            @Override
            public String answer(InvocationOnMock invocation) {
                Object[] args = invocation.getArguments();
                return String.format(value, Arrays.copyOfRange(args, 1, args.length));
            }
        });
!!!38284215.java!!!	putBooleanResource(in id : int, inout value : boolean) : void
        when(mResources.getBoolean(eq(id))).thenReturn(value);
!!!38284343.java!!!	putStringArrayResource(in id : int, inout values : String) : void
        doReturn(values).when(mResources).getStringArray(eq(id));
!!!38284471.java!!!	putIntArrayResource(in id : int, inout values : int) : void
        doReturn(values).when(mResources).getIntArray(eq(id));
!!!38284599.java!!!	getCarrierConfigBundle() : PersistableBundle
        return mBundle;
!!!38284727.java!!!	addService(inout action : String, inout name : ComponentName, inout service : IInterface) : void
        mComponentNamesByAction.put(action, name);
        mServiceByComponentName.put(name, service);
        mComponentNameByService.put(service, name);
!!!38284855.java!!!	doQueryIntentServices(inout intent : Intent, in flags : int) : ResolveInfo
        List<ResolveInfo> result = new ArrayList<ResolveInfo>();
        for (ComponentName componentName : mComponentNamesByAction.get(intent.getAction())) {
            ResolveInfo resolveInfo = new ResolveInfo();
            resolveInfo.serviceInfo = mServiceInfoByComponentName.get(componentName);
            result.add(resolveInfo);
        }
        return result;
!!!38284983.java!!!	sendBroadcastToOrderedBroadcastReceivers() : void
        synchronized (mOrderedBroadcastReceivers) {
            // having a map separate from mOrderedBroadcastReceivers is helpful here as onReceive()
            // call within the loop may lead to sendOrderedBroadcast() which can add to
            // mOrderedBroadcastReceivers
            Collection<Map.Entry<Intent, BroadcastReceiver>> map =
                    mOrderedBroadcastReceivers.entries();
            for (Map.Entry<Intent, BroadcastReceiver> entry : map) {
                entry.getValue().onReceive(mContext, entry.getKey());
                mOrderedBroadcastReceivers.remove(entry.getKey(), entry.getValue());
            }
        }
!!!38285111.java!!!	addCallingOrSelfPermission(inout permission : String) : void
        synchronized (mPermissionTable) {
            if (mPermissionTable != null && permission != null) {
                mPermissionTable.remove(PERMISSION_ENABLE_ALL);
                mPermissionTable.add(permission);
            }
        }
!!!38285239.java!!!	removeCallingOrSelfPermission(inout permission : String) : void
        synchronized (mPermissionTable) {
            if (mPermissionTable != null && permission != null) {
                mPermissionTable.remove(permission);
            }
        }
!!!38285367.java!!!	logd(inout s : String) : void
        Log.d(TAG, s);
