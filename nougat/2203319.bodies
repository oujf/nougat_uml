class TestHandler
!!!38312503.java!!!	TestHandler(inout looper : Looper)
            super(looper);
!!!38312631.java!!!	die() : void
            if(handlerThread != null) {
                handlerThread.quit();
                handlerThread = null;
            }
!!!38312759.java!!!	blockTilIdle() : void
            Object lock = new Object();
            synchronized (lock) {
                Message msg = this.obtainMessage(IN_IDLE, lock);
                msg.sendToTarget();
                try {
                    lock.wait();
                } catch (InterruptedException e) {}
            }
!!!38312887.java!!!	makeHandler() : PhoneSwitcherTest::TestHandler
            final HandlerThread handlerThread = new HandlerThread("TestHandler");
            handlerThread.start();
            final TestHandler result = new TestHandler(handlerThread.getLooper());
            result.handlerThread = handlerThread;
            return result;
!!!38313015.java!!!	objectEquals(inout o1 : Object, inout o2 : Object) : boolean
            if (o1 == null) return (o2 == null);
            return o1.equals(o2);
!!!38313143.java!!!	failAndStack(inout str : String) : void
            SubscriptionMonitorTest.failAndStack(str);
!!!38313271.java!!!	handleMessage(inout msg : Message) : void
            switch (msg.what) {
                case ACTIVE_PHONE_SWITCH: {
                    AsyncResult ar = (AsyncResult)(msg.obj);
                    if (objectEquals(ar.userObj, mActivePhoneSwitchObject.get()) == false) {
                        failAndStack("Active Phone Switch object is incorrect!");
                    }
                    int count = mActivePhoneSwitchCount.incrementAndGet();
                    Rlog.d(LOG_TAG, "ACTIVE_PHONE_SWITCH, inc to " + count);
                    break;
                }
                case IN_IDLE: {
                    Object lock = msg.obj;
                    synchronized (lock) {
                        lock.notify();
                    }
                    break;
                }
            }
!!!38313399.java!!!	reset() : void
            mActivePhoneSwitchCount.set(0);
            mActivePhoneSwitchObject.set(null);
!!!38313527.java!!!	setActivePhoneSwitchObject(inout o : Object) : void
            mActivePhoneSwitchObject.set(o);
!!!38313655.java!!!	getActivePhoneSwitchCount() : int
            return mActivePhoneSwitchCount.get();
