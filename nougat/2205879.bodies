class FakeSubscriptionContentProvider
!!!38325943.java!!!	convertFromContentToCursor(inout initialValues : ContentValues) : MatrixCursor
            MatrixCursor cursor = null;
            ArrayList<Object> values = new ArrayList<Object>();

            if (initialValues != null && mKeyMappingSet.length != 0) {
                cursor = new MatrixCursor(mKeyMappingSet);
                /* push value from contentValues to matrixCursors */
                for (String key : mKeyMappingSet) {
                    if (initialValues.containsKey(key)) {
                        values.add(initialValues.get(key));
                    } else {
                        values.add(null);
                    }
                }
                cursor.addRow(values.toArray());
            }
            return cursor;
!!!38326071.java!!!	delete(inout uri : Uri, inout selection : String, inout selectionArgs : String) : int
            if (mSubscriptionArray.size() > 0) {
                mSubscriptionArray.remove(0);
                return 1;
            }
            return -1;
!!!38326199.java!!!	insert(inout uri : Uri, inout values : ContentValues) : Uri
            values.put(SubscriptionManager.UNIQUE_KEY_SUBSCRIPTION_ID, 0);
            mSubscriptionArray.add(values);
            return uri;
!!!38326327.java!!!	query(inout uri : Uri, inout projection : String, inout selection : String, inout selectionArgs : String, inout sortOrder : String) : Cursor
            if (mSubscriptionArray.size() > 0) {
                return convertFromContentToCursor(mSubscriptionArray.get(0));
            }
            return null;
!!!38326455.java!!!	call(inout method : String, inout request : String, inout args : Bundle) : Bundle
            return null;
!!!38326583.java!!!	update(inout uri : Uri, inout values : ContentValues, inout selection : String, inout selectionArgs : String) : int
            if (mSubscriptionArray.size() > 0) {
                ContentValues val = mSubscriptionArray.get(0);
                for (String key : values.keySet()) {
                    val.put(key, values.getAsString(key));
                    Log.d(TAG, "update the values..." + key + "..." + values.getAsString(key));
                }
                mSubscriptionArray.set(0, val);
                return 1;
            }
            return -1;
