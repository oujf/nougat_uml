class TelephonyEventLogTest
!!!38333495.java!!!	setUp() : void
        logd("setUp start");
        super.setUp(TAG);

        doReturn(mConnectivityMetricsLogger)
                .when(mConnMetLoggerBinder)
                .queryLocalInterface(anyString());

        mEventLog = new TelephonyEventLog(0);
!!!38333623.java!!!	tearDown() : void
        mEventLog = null;
        super.tearDown();
!!!38333751.java!!!	testWriteServiceStateChanged() : void
        ServiceState serviceState = new ServiceState();
        serviceState.setVoiceRegState(ServiceState.STATE_IN_SERVICE);
        serviceState.setDataRegState(ServiceState.STATE_IN_SERVICE);
        serviceState.setVoiceRoamingType(ServiceState.ROAMING_TYPE_NOT_ROAMING);
        serviceState.setDataRoamingType(ServiceState.ROAMING_TYPE_NOT_ROAMING);
        serviceState.setVoiceOperatorName("Test Voice Long", "TestVoice", "12345");
        serviceState.setDataOperatorName("Test Date Long", "TestData", "67890");
        serviceState.setRilVoiceRadioTechnology(ServiceState.RIL_RADIO_TECHNOLOGY_LTE);
        serviceState.setRilDataRadioTechnology(ServiceState.RIL_RADIO_TECHNOLOGY_LTE);

        mEventLog.writeServiceStateChanged(serviceState);

        ArrayMap<String, Object> m = new ArrayMap<>();
        m.put(TelephonyEventLog.SERVICE_STATE_VOICE_REG_STATE, ServiceState.STATE_IN_SERVICE);
        m.put(TelephonyEventLog.SERVICE_STATE_DATA_REG_STATE, ServiceState.STATE_IN_SERVICE);
        m.put(TelephonyEventLog.SERVICE_STATE_VOICE_ROAMING_TYPE,
                ServiceState.ROAMING_TYPE_NOT_ROAMING);
        m.put(TelephonyEventLog.SERVICE_STATE_DATA_ROAMING_TYPE,
                ServiceState.ROAMING_TYPE_NOT_ROAMING);
        //m.put(TelephonyEventLog.SERVICE_STATE_VOICE_ALPHA_LONG, "Test Voice Long");
        m.put(TelephonyEventLog.SERVICE_STATE_VOICE_ALPNA_SHORT, "TestVoice");
        m.put(TelephonyEventLog.SERVICE_STATE_VOICE_NUMERIC, "12345");
        //m.put(TelephonyEventLog.SERVICE_STATE_DATA_ALPHA_LONG, "Test Date Long");
        m.put(TelephonyEventLog.SERVICE_STATE_DATA_ALPNA_SHORT, "TestData");
        m.put(TelephonyEventLog.SERVICE_STATE_DATA_NUMERIC, "67890");
        m.put(TelephonyEventLog.SERVICE_STATE_VOICE_RAT, ServiceState.RIL_RADIO_TECHNOLOGY_LTE);
        m.put(TelephonyEventLog.SERVICE_STATE_DATA_RAT, ServiceState.RIL_RADIO_TECHNOLOGY_LTE);

        m.put(TelephonyEventLog.DATA_KEY_PHONE_ID, 0);
        m.put(TelephonyEventLog.DATA_KEY_PARAM1, -1);
        m.put(TelephonyEventLog.DATA_KEY_PARAM2, -1);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SERVICE_STATE, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }
!!!38333879.java!!!	testWriteSetAirplaneMode() : void
        mEventLog.writeSetAirplaneMode(true);

        ArrayMap<String, Object> m = new ArrayMap<>();
        m.put(TelephonyEventLog.DATA_KEY_PHONE_ID, 0);
        m.put(TelephonyEventLog.DATA_KEY_PARAM1, TelephonyEventLog.SETTING_AIRPLANE_MODE);
        m.put(TelephonyEventLog.DATA_KEY_PARAM2, 1);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }

        mEventLog.writeSetAirplaneMode(false);

        m.put(TelephonyEventLog.DATA_KEY_PARAM2, 0);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }
!!!38334007.java!!!	testWriteSetCellDataEnabled() : void
        mEventLog.writeSetCellDataEnabled(true);

        ArrayMap<String, Object> m = new ArrayMap<>();
        m.put(TelephonyEventLog.DATA_KEY_PHONE_ID, 0);
        m.put(TelephonyEventLog.DATA_KEY_PARAM1, TelephonyEventLog.SETTING_CELL_DATA_ENABLED);
        m.put(TelephonyEventLog.DATA_KEY_PARAM2, 1);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }

        mEventLog.writeSetCellDataEnabled(false);

        m.put(TelephonyEventLog.DATA_KEY_PARAM2, 0);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }
!!!38334135.java!!!	testWriteSetDataRoamingEnabled() : void
        mEventLog.writeSetDataRoamingEnabled(true);

        ArrayMap<String, Object> m = new ArrayMap<>();
        m.put(TelephonyEventLog.DATA_KEY_PHONE_ID, 0);
        m.put(TelephonyEventLog.DATA_KEY_PARAM1, TelephonyEventLog.SETTING_DATA_ROAMING_ENABLED);
        m.put(TelephonyEventLog.DATA_KEY_PARAM2, 1);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }

        mEventLog.writeSetDataRoamingEnabled(false);

        m.put(TelephonyEventLog.DATA_KEY_PARAM2, 0);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }
!!!38334263.java!!!	testWriteSetPreferredNetworkType() : void
        mEventLog.writeSetPreferredNetworkType(RILConstants.NETWORK_MODE_GLOBAL);

        ArrayMap<String, Object> m = new ArrayMap<>();
        m.put(TelephonyEventLog.DATA_KEY_PHONE_ID, 0);
        m.put(TelephonyEventLog.DATA_KEY_PARAM1, TelephonyEventLog.SETTING_PREFERRED_NETWORK_MODE);
        m.put(TelephonyEventLog.DATA_KEY_PARAM2, RILConstants.NETWORK_MODE_GLOBAL);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }
!!!38334391.java!!!	testWriteSetWifiEnabled() : void
        mEventLog.writeSetWifiEnabled(true);

        ArrayMap<String, Object> m = new ArrayMap<>();
        m.put(TelephonyEventLog.DATA_KEY_PHONE_ID, 0);
        m.put(TelephonyEventLog.DATA_KEY_PARAM1, TelephonyEventLog.SETTING_WIFI_ENABLED);
        m.put(TelephonyEventLog.DATA_KEY_PARAM2, 1);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }

        mEventLog.writeSetWifiEnabled(false);

        m.put(TelephonyEventLog.DATA_KEY_PARAM2, 0);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }
!!!38334519.java!!!	testWriteSetWfcMode() : void
        mEventLog.writeSetWfcMode(ImsConfig.WfcModeFeatureValueConstants.CELLULAR_PREFERRED);

        ArrayMap<String, Object> m = new ArrayMap<>();
        m.put(TelephonyEventLog.DATA_KEY_PHONE_ID, 0);
        m.put(TelephonyEventLog.DATA_KEY_PARAM1, TelephonyEventLog.SETTING_WFC_MODE);
        m.put(TelephonyEventLog.DATA_KEY_PARAM2, ImsConfig.WfcModeFeatureValueConstants.CELLULAR_PREFERRED);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }
!!!38334647.java!!!	testWriteImsSetFeatureValue() : void
        mEventLog.writeImsSetFeatureValue(ImsConfig.FeatureConstants.FEATURE_TYPE_VOICE_OVER_LTE,
                TelephonyManager.NETWORK_TYPE_LTE, 1, ImsConfig.OperationStatusConstants.SUCCESS);

        ArrayMap<String, Object> m = new ArrayMap<>();
        m.put(TelephonyEventLog.DATA_KEY_PHONE_ID, 0);
        m.put(TelephonyEventLog.DATA_KEY_PARAM1, TelephonyEventLog.SETTING_VO_LTE_ENABLED);
        m.put(TelephonyEventLog.DATA_KEY_PARAM2, 1);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }

        mEventLog.writeImsSetFeatureValue(ImsConfig.FeatureConstants.FEATURE_TYPE_VOICE_OVER_WIFI,
                TelephonyManager.NETWORK_TYPE_IWLAN, 1, ImsConfig.OperationStatusConstants.SUCCESS);

        m.put(TelephonyEventLog.DATA_KEY_PARAM1, TelephonyEventLog.SETTING_VO_WIFI_ENABLED);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }

        mEventLog.writeImsSetFeatureValue(ImsConfig.FeatureConstants.FEATURE_TYPE_VIDEO_OVER_LTE,
                TelephonyManager.NETWORK_TYPE_LTE, 1, ImsConfig.OperationStatusConstants.SUCCESS);

        m.put(TelephonyEventLog.DATA_KEY_PARAM1, TelephonyEventLog.SETTING_VI_LTE_ENABLED);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }

        mEventLog.writeImsSetFeatureValue(ImsConfig.FeatureConstants.FEATURE_TYPE_VIDEO_OVER_WIFI,
                TelephonyManager.NETWORK_TYPE_IWLAN, 1, ImsConfig.OperationStatusConstants.SUCCESS);

        m.put(TelephonyEventLog.DATA_KEY_PARAM1, TelephonyEventLog.SETTING_VI_WIFI_ENABLED);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(TelephonyEventLog.TAG_SETTINGS, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }
!!!38334775.java!!!	testWriteImsConnectionState() : void
        mEventLog.writeOnImsConnectionState(
                TelephonyEventLog.IMS_CONNECTION_STATE_CONNECTED, null);

        ArrayMap<String, Object> m = new ArrayMap<>();
        m.put(TelephonyEventLog.DATA_KEY_PHONE_ID, 0);
        m.put(TelephonyEventLog.DATA_KEY_PARAM1, TelephonyEventLog.IMS_CONNECTION_STATE_CONNECTED);
        m.put(TelephonyEventLog.DATA_KEY_PARAM2, -1);

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(
                            TelephonyEventLog.TAG_IMS_CONNECTION_STATE, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }

        mEventLog.writeOnImsConnectionState(
                TelephonyEventLog.IMS_CONNECTION_STATE_DISCONNECTED,
                new ImsReasonInfo(1, 2, "test"));

        m.put(TelephonyEventLog.DATA_KEY_PARAM1,
                TelephonyEventLog.IMS_CONNECTION_STATE_DISCONNECTED);
        m.put(TelephonyEventLog.DATA_KEY_REASONINFO_CODE, 1);
        m.put(TelephonyEventLog.DATA_KEY_REASONINFO_EXTRA_CODE, 2);
        m.put(TelephonyEventLog.DATA_KEY_REASONINFO_EXTRA_MESSAGE, "test");

        try {
            verify(mConnectivityMetricsLogger).logEvent(
                    argThat(new TelephonyEventMatcher(
                            TelephonyEventLog.TAG_IMS_CONNECTION_STATE, m)));
        } catch (RemoteException e) {
            fail(e.toString());
        }
