class DataProfileTest
!!!38357815.java!!!	testCreateFromApnSetting() : void
        DataProfile dp = new DataProfile(mApn1, false);
        assertEquals(mApn1.profileId, dp.profileId);
        assertEquals(mApn1.apn, dp.apn);
        assertEquals(mApn1.protocol, dp.protocol);
        assertEquals(mApn1.authType, dp.authType);
        assertEquals(mApn1.user, dp.user);
        assertEquals(mApn1.password, dp.password);
        assertEquals(0, dp.type);
        assertEquals(mApn1.maxConnsTime, dp.maxConnsTime);
        assertEquals(mApn1.maxConns, dp.maxConns);
        assertEquals(mApn1.waitTime, dp.waitTime);
        assertEquals(mApn1.carrierEnabled, dp.enabled);
!!!38357943.java!!!	testParcel() : void
        Parcel p = Parcel.obtain();

        DataProfile[] dps = new DataProfile[]{new DataProfile(mApn1, false),
                new DataProfile(mApn1, false)};

        DataProfile.toParcel(p, dps);
        p.setDataPosition(0);

        assertEquals(dps.length, p.readInt());
        for (int i = 0; i < dps.length; i++) {
            assertEquals("i = " + i, mApn1.profileId, p.readInt());
            assertEquals("i = " + i, mApn1.apn, p.readString());
            assertEquals("i = " + i, mApn1.protocol, p.readString());
            assertEquals("i = " + i, mApn1.authType, p.readInt());
            assertEquals("i = " + i, mApn1.user, p.readString());
            assertEquals("i = " + i, mApn1.password, p.readString());
            assertEquals("i = " + i, 0, p.readInt());
            assertEquals("i = " + i, mApn1.maxConnsTime, p.readInt());
            assertEquals("i = " + i, mApn1.maxConns, p.readInt());
            assertEquals("i = " + i, mApn1.waitTime, p.readInt());
            assertEquals("i = " + i, mApn1.carrierEnabled?1:0, p.readInt());
        }
!!!38358071.java!!!	testEquals() : void
        DataProfile dp1 = new DataProfile(mApn1, false);
        DataProfile dp2 = new DataProfile(mApn1, false);
        assertEquals(dp1, dp2);

        dp2 = new DataProfile(mApn1, true);
        assertFalse(dp1.equals(dp2));

        dp2 = new DataProfile(mApn2, false);
        assertFalse(dp1.equals(dp2));
