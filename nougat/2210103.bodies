class RetryManagerTest
!!!38361527.java!!!	setUp() : void
        super.setUp(getClass().getSimpleName());
        mBundle = mContextFixture.getCarrierConfigBundle();

        replaceInstance(SubscriptionController.class, "sInstance", null, mSubscriptionController);
        replaceInstance(UiccController.class, "mInstance", null, mUiccController);
!!!38361655.java!!!	tearDown() : void
        super.tearDown();
!!!38361783.java!!!	testRetryManagerEmpty() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "2000");

        RetryManager rm = new RetryManager(mPhone, "default");

        long delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn == null);
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38361911.java!!!	testRetryManagerOneApnNoRetry() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        waitingApns.add(new ApnSetting(mApn1));

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38362039.java!!!	testRetryManagerOneApnTwoRetries() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "2000,3000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        waitingApns.add(new ApnSetting(mApn1));

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(2000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(3000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);

        // No matter how many times we call getNextApnSetting, it should always return the next APN
        // with NO_RETRY because we've already reached the maximum retry count.
        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38362167.java!!!	testRetryManagerTwoApnsOneRetry() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "2000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        waitingApns.add(new ApnSetting(mApn1));
        waitingApns.add(new ApnSetting(mApn2));

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(2000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38362295.java!!!	testRetryManagerTwoApnsTwoRetries() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "2000,5000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        waitingApns.add(new ApnSetting(mApn1));
        waitingApns.add(new ApnSetting(mApn2));

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(2000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(5000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38362423.java!!!	testRetryManagerTwoMmsApnsTwoRetries() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_OTHERS_STRING,
                "3000,6000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        waitingApns.add(new ApnSetting(mApn1));
        waitingApns.add(new ApnSetting(mApn2));

        RetryManager rm = new RetryManager(mPhone, "mms");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(3000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(6000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38362551.java!!!	testRetryManagerApnPermanentFailed() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "1000,4000,7000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        ApnSetting apn = new ApnSetting(mApn1);
        waitingApns.add(apn);

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(1000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(4000, delay);

        rm.markApnPermanentFailed(apn);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn == null);
!!!38362679.java!!!	testRetryManagerApnPermanentFailedWithTwoApns() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "1000,4000,7000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        ApnSetting myApn1 = new ApnSetting(mApn1);
        ApnSetting myApn2 = new ApnSetting(mApn2);
        waitingApns.add(myApn1);
        waitingApns.add(myApn2);

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(1000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        rm.markApnPermanentFailed(myApn1);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(4000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(7000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38362807.java!!!	testRetryManagerApnPermanentFailedWithThreeApns() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "1000,4000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        ApnSetting myApn1 = new ApnSetting(mApn1);
        ApnSetting myApn2 = new ApnSetting(mApn2);
        ApnSetting myApn3 = new ApnSetting(mApn3);
        waitingApns.add(myApn1);
        waitingApns.add(myApn2);
        waitingApns.add(myApn3);

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        rm.markApnPermanentFailed(myApn2);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn3));
        delay = rm.getDelayForNextApn(false);
        assertEquals(1000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn3));
        delay = rm.getDelayForNextApn(false);
        assertEquals(4000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn3));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38362935.java!!!	testRetryManagerApnPermanentFailedAll() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "1000,4000,7000,9000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        ApnSetting myApn1 = new ApnSetting(mApn1);
        ApnSetting myApn2 = new ApnSetting(mApn2);
        waitingApns.add(myApn1);
        waitingApns.add(myApn2);

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(1000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        rm.markApnPermanentFailed(myApn1);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(4000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(7000, delay);

        rm.markApnPermanentFailed(myApn2);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn == null);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn == null);
!!!38363063.java!!!	testRetryManagerDelayWithRandomization() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "default_randomization=1000,3000:2000,6000:3000,10000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        waitingApns.add(new ApnSetting(mApn1));

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertTrue(delay >= 3000 && delay < 5000);    // 3s + 2s rand

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertTrue(delay >= 6000 && delay < 9000);    // 6s + 3s rand

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertTrue(delay >= 10000 && delay < 11000);  // 10s + 1s default rand

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38363191.java!!!	testRetryManagerRetryForever() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "max_retries=infinite,1000,2000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        waitingApns.add(new ApnSetting(mApn1));
        waitingApns.add(new ApnSetting(mApn2));

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(1000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(2000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(2000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(2000, delay);
!!!38363319.java!!!	testRetryManagerExplicitMaxRetry() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "max_retries=4,1000,2000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        waitingApns.add(new ApnSetting(mApn1));
        waitingApns.add(new ApnSetting(mApn2));

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(1000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(2000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(2000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(2000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38363447.java!!!	testRetryManagerFailFast() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "1000,5000");

        mBundle.putLong(CarrierConfigManager.KEY_CARRIER_DATA_CALL_APN_DELAY_FASTER_LONG, 2000);

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        waitingApns.add(new ApnSetting(mApn1));
        waitingApns.add(new ApnSetting(mApn2));

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(true);
        assertEquals(2000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(true);
        assertEquals(1000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(true);
        assertEquals(2000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(true);
        assertEquals(2000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(true);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38363575.java!!!	testRetryManagerApnPermanentFailedAllAndThenReset() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "1000,4000,7000,9000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        ApnSetting myApn1 = new ApnSetting(mApn1);
        ApnSetting myApn2 = new ApnSetting(mApn2);
        waitingApns.add(myApn1);
        waitingApns.add(myApn2);

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(1000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        rm.markApnPermanentFailed(myApn1);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(4000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(7000, delay);

        rm.markApnPermanentFailed(myApn2);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn == null);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn == null);

        // reset the retry manager

        ApnSetting myApn3 = new ApnSetting(mApn3);
        waitingApns.clear();
        waitingApns.add(myApn3);

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "3000,8000");

        rm.setWaitingApns(waitingApns);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn3));
        delay = rm.getDelayForNextApn(false);
        assertEquals(3000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn3));
        delay = rm.getDelayForNextApn(false);
        assertEquals(8000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn3));
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38363703.java!!!	testRetryManagerModemSuggestedRetryOnce() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "1000,4000,7000,9000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        ApnSetting myApn1 = new ApnSetting(mApn1);
        ApnSetting myApn2 = new ApnSetting(mApn2);
        waitingApns.add(myApn1);
        waitingApns.add(myApn2);

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(1000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        // Modem suggests retrying the current APN
        rm.setModemSuggestedDelay(2500);
        delay = rm.getDelayForNextApn(false);
        assertEquals(2500, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        rm.setModemSuggestedDelay(RetryManager.NO_SUGGESTED_RETRY_DELAY);
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        // Modem suggests retrying the current APN
        rm.setModemSuggestedDelay(30000);
        delay = rm.getDelayForNextApn(false);
        assertEquals(30000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        rm.setModemSuggestedDelay(RetryManager.NO_SUGGESTED_RETRY_DELAY);
        delay = rm.getDelayForNextApn(false);
        assertEquals(4000, delay);
!!!38363831.java!!!	testRetryManagerModemSuggestedNoRetry() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "1000,4000,7000,9000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        ApnSetting myApn1 = new ApnSetting(mApn1);
        ApnSetting myApn2 = new ApnSetting(mApn2);
        waitingApns.add(myApn1);
        waitingApns.add(myApn2);

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(1000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        // Modem suggests retrying the current APN
        rm.setModemSuggestedDelay(2500);
        delay = rm.getDelayForNextApn(false);
        assertEquals(2500, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        rm.setModemSuggestedDelay(RetryManager.NO_RETRY);
        delay = rm.getDelayForNextApn(false);
        assertEquals(RetryManager.NO_RETRY, delay);
!!!38363959.java!!!	testRetryManagerModemSuggestedRetryTooManyTimes() : void

        mBundle.putString(CarrierConfigManager.KEY_CARRIER_DATA_CALL_RETRY_CONFIG_DEFAULT_STRING,
                "1000,4000,7000,9000");

        ArrayList<ApnSetting> waitingApns = new ArrayList<ApnSetting>();
        ApnSetting myApn1 = new ApnSetting(mApn1);
        ApnSetting myApn2 = new ApnSetting(mApn2);
        waitingApns.add(myApn1);
        waitingApns.add(myApn2);

        RetryManager rm = new RetryManager(mPhone, "default");
        rm.setWaitingApns(waitingApns);

        ApnSetting nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        long delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        delay = rm.getDelayForNextApn(false);
        assertEquals(1000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        rm.setModemSuggestedDelay(2500);
        delay = rm.getDelayForNextApn(false);
        assertEquals(2500, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        rm.setModemSuggestedDelay(2500);
        delay = rm.getDelayForNextApn(false);
        assertEquals(2500, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        rm.setModemSuggestedDelay(2500);
        delay = rm.getDelayForNextApn(false);
        assertEquals(2500, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn1));
        rm.setModemSuggestedDelay(2500);
        delay = rm.getDelayForNextApn(false);
        assertEquals(20000, delay);

        nextApn = rm.getNextApnSetting();
        assertTrue(nextApn.equals(mApn2));
        rm.setModemSuggestedDelay(RetryManager.NO_SUGGESTED_RETRY_DELAY);
        delay = rm.getDelayForNextApn(false);
        assertEquals(4000, delay);
