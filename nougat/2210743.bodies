class SubscriptionControllerMock
!!!38438839.java!!!	init(inout phone : Phone) : SubscriptionController
        throw new RuntimeException("not implemented");
!!!38438967.java!!!	init(inout c : Context, inout ci : CommandsInterface) : SubscriptionController
        throw new RuntimeException("not implemented");
!!!38439095.java!!!	getInstance() : SubscriptionController
        throw new RuntimeException("not implemented");
!!!38439223.java!!!	SubscriptionControllerMock(inout c : Context, inout tr : ITelephonyRegistry.Stub, in phoneCount : int)
        super(c);
        mTelephonyRegistry = tr;
        mSlotIdxToSubId = new int[phoneCount][];
        for (int i = 0; i < phoneCount; i++) {
            mSlotIdxToSubId[i] = new int[1];
            mSlotIdxToSubId[i][0] = INVALID_SUBSCRIPTION_ID;
        }
!!!38439351.java!!!	init(inout c : Context) : void
        mContext = c;
!!!38439479.java!!!	getDefaultDataSubId() : int
        return mDefaultDataSubId.get();
!!!38439607.java!!!	setDefaultDataSubId(in subId : int) : void
        if (subId == DEFAULT_SUBSCRIPTION_ID) {
            throw new RuntimeException("setDefaultDataSubId called with DEFAULT_SUB_ID");
        }

        mDefaultDataSubId.set(subId);
        broadcastDefaultDataSubIdChanged(subId);
!!!38439735.java!!!	broadcastDefaultDataSubIdChanged(in subId : int) : void
        // Broadcast an Intent for default data sub change
        Intent intent = new Intent(TelephonyIntents.ACTION_DEFAULT_DATA_SUBSCRIPTION_CHANGED);
        intent.addFlags(Intent.FLAG_RECEIVER_REPLACE_PENDING);
        intent.putExtra(PhoneConstants.SUBSCRIPTION_KEY, subId);
        mContext.sendStickyBroadcastAsUser(intent, UserHandle.ALL);
!!!38439863.java!!!	getSubIdUsingPhoneId(in phoneId : int) : int
        int[] subIds = getSubId(phoneId);
        if (subIds == null || subIds.length == 0) {
            return INVALID_SUBSCRIPTION_ID;
        }
        return subIds[0];
!!!38439991.java!!!	notifySubscriptionInfoChanged() : void
        try {
            mTelephonyRegistry.notifySubscriptionInfoChanged();
        } catch (RemoteException ex) {}
!!!38440119.java!!!	getActiveSubscriptionInfo(in subId : int, inout callingPackage : String) : SubscriptionInfo
        throw new RuntimeException("not implemented");
!!!38440247.java!!!	getActiveSubscriptionInfoForIccId(inout iccId : String, inout callingPackage : String) : SubscriptionInfo
        throw new RuntimeException("not implemented");
!!!38440375.java!!!	getActiveSubscriptionInfoForSimSlotIndex(in slotIdx : int, inout cp : String) : SubscriptionInfo
        throw new RuntimeException("not implemented");
!!!38440503.java!!!	getAllSubInfoList(inout callingPackage : String) : SubscriptionInfo
        throw new RuntimeException("not implemented");
!!!38440631.java!!!	getActiveSubscriptionInfoList(inout callingPackage : String) : SubscriptionInfo
        throw new RuntimeException("not implemented");
!!!38440759.java!!!	getActiveSubInfoCount(inout callingPackage : String) : int
        throw new RuntimeException("not implemented");
!!!38440887.java!!!	getAllSubInfoCount(inout callingPackage : String) : int
        throw new RuntimeException("not implemented");
!!!38441015.java!!!	getActiveSubInfoCountMax() : int
        throw new RuntimeException("not implemented");
!!!38441143.java!!!	addSubInfoRecord(inout iccId : String, in slotId : int) : int
        throw new RuntimeException("not implemented");
!!!38441271.java!!!	setPlmnSpn(in slotId : int, inout showPlmn : boolean, inout plmn : String, inout showSpn : boolean, inout spn : String) : boolean
        throw new RuntimeException("not implemented");
!!!38441399.java!!!	setIconTint(in tint : int, in subId : int) : int
        throw new RuntimeException("not implemented");
!!!38441527.java!!!	setDisplayName(inout displayName : String, in subId : int) : int
        throw new RuntimeException("not implemented");
!!!38441655.java!!!	setDisplayNameUsingSrc(inout displayName : String, in subId : int, in nameSource : long) : int
        throw new RuntimeException("not implemented");
!!!38441783.java!!!	setDisplayNumber(inout number : String, in subId : int) : int
        throw new RuntimeException("not implemented");
!!!38441911.java!!!	setDataRoaming(in roaming : int, in subId : int) : int
        throw new RuntimeException("not implemented");
!!!38442039.java!!!	setMccMnc(inout mccMnc : String, in subId : int) : int
        throw new RuntimeException("not implemented");
!!!38442167.java!!!	getSlotId(in subId : int) : int
        throw new RuntimeException("not implemented");
!!!38442295.java!!!	isInvalidSlotId(in slotIdx : int) : boolean
        if (slotIdx < 0 || slotIdx >= mSlotIdxToSubId.length) return true;
        return false;
!!!38442423.java!!!	getSubId(in slotIdx : int) : int
        if (isInvalidSlotId(slotIdx)) {
            return null;
        }
        return mSlotIdxToSubId[slotIdx];
!!!38442551.java!!!	setSlotSubId(in slotIdx : int, in subId : int) : void
        if (isInvalidSlotId(slotIdx)) {
            throw new RuntimeException("invalid slot specified" + slotIdx);
        }
        if (mSlotIdxToSubId[slotIdx][0] != subId) {
            mSlotIdxToSubId[slotIdx][0] = subId;
            try {
                mTelephonyRegistry.notifySubscriptionInfoChanged();
            } catch (RemoteException ex) {}
        }
!!!38442679.java!!!	getPhoneId(in subId : int) : int
        if (subId == DEFAULT_SUBSCRIPTION_ID) {
            subId = getDefaultSubId();
        }

        if (subId <= INVALID_SUBSCRIPTION_ID) return INVALID_PHONE_INDEX;

        for (int i = 0; i < mSlotIdxToSubId.length; i++) {
            if (mSlotIdxToSubId[i][0] == subId) return i;
        }
        return INVALID_PHONE_INDEX;
!!!38442807.java!!!	clearSubInfo() : int
        throw new RuntimeException("not implemented");
!!!38442935.java!!!	getDefaultSubId() : int
        throw new RuntimeException("not implemented");
!!!38443063.java!!!	setDefaultSmsSubId(in subId : int) : void
        throw new RuntimeException("not implemented");
!!!38443191.java!!!	getDefaultSmsSubId() : int
        throw new RuntimeException("not implemented");
!!!38443319.java!!!	setDefaultVoiceSubId(in subId : int) : void
        throw new RuntimeException("not implemented");
!!!38443447.java!!!	getDefaultVoiceSubId() : int
        throw new RuntimeException("not implemented");
!!!38443575.java!!!	clearDefaultsForInactiveSubIds() : void
        throw new RuntimeException("not implemented");
!!!38443703.java!!!	getSubIdUsingSlotId(in slotId : int) : int
        return getSubId(slotId);
!!!38443831.java!!!	getSubInfoUsingSlotIdWithCheck(in slotId : int, inout needCheck : boolean, inout callingPackage : String) : SubscriptionInfo
        throw new RuntimeException("not implemented");
!!!38443959.java!!!	updatePhonesAvailability(inout phones : Phone) : void
        throw new RuntimeException("not implemented");
!!!38444087.java!!!	getActiveSubIdList() : int
        throw new RuntimeException("not implemented");
!!!38444215.java!!!	isActiveSubId(in subId : int) : boolean
        throw new RuntimeException("not implemented");
!!!38444343.java!!!	getSimStateForSlotIdx(in slotIdx : int) : int
        throw new RuntimeException("not implemented");
!!!38444471.java!!!	setSubscriptionProperty(in subId : int, inout propKey : String, inout propValue : String) : void
        throw new RuntimeException("not implemented");
!!!38444599.java!!!	getSubscriptionProperty(in subId : int, inout propKey : String, inout callingPackage : String) : String
        throw new RuntimeException("not implemented");
!!!38444727.java!!!	dump(inout fd : FileDescriptor, inout pw : PrintWriter, inout args : String) : void
        throw new RuntimeException("not implemented");
