class SubscriptionMonitorMock
!!!38444855.java!!!	SubscriptionMonitorMock(in numPhones : int)
        super();
        mNumPhones = numPhones;
        mSubscriptionsChangedRegistrants = new RegistrantList[numPhones];
        mDefaultSubscriptionRegistrants = new RegistrantList[numPhones];

        for (int i = 0; i < numPhones; i++) {
            mSubscriptionsChangedRegistrants[i] = new RegistrantList();
            mDefaultSubscriptionRegistrants[i] = new RegistrantList();
        }
!!!38444983.java!!!	registerForSubscriptionChanged(in phoneId : int, inout h : Handler, in what : int, inout o : Object) : void
        validatePhoneId(phoneId);
        Registrant r = new Registrant(h, what, o);
        mSubscriptionsChangedRegistrants[phoneId].add(r);
        r.notifyRegistrant();
!!!38445111.java!!!	unregisterForSubscriptionChanged(in phoneId : int, inout h : Handler) : void
        validatePhoneId(phoneId);
        mSubscriptionsChangedRegistrants[phoneId].remove(h);
!!!38445239.java!!!	registerForDefaultDataSubscriptionChanged(in phoneId : int, inout h : Handler, in what : int, inout o : Object) : void
        validatePhoneId(phoneId);
        Registrant r = new Registrant(h, what, o);
        mDefaultSubscriptionRegistrants[phoneId].add(r);
        r.notifyRegistrant();
!!!38445367.java!!!	unregisterForDefaultDataSubscriptionChanged(in phoneId : int, inout h : Handler) : void
        validatePhoneId(phoneId);
        mDefaultSubscriptionRegistrants[phoneId].remove(h);
!!!38445495.java!!!	notifySubscriptionChanged(in phoneId : int) : void
        validatePhoneId(phoneId);
        mSubscriptionsChangedRegistrants[phoneId].notifyRegistrants();
!!!38445623.java!!!	notifyDefaultSubscriptionChanged(in phoneId : int) : void
        validatePhoneId(phoneId);
        mDefaultSubscriptionRegistrants[phoneId].notifyRegistrants();
!!!38445751.java!!!	validatePhoneId(in phoneId : int) : void
        if (phoneId < 0 || phoneId >= mNumPhones) {
            throw new IllegalArgumentException("Invalid PhoneId");
        }
