class FakeSmsContentProvider
!!!38365879.java!!!	getColumnIndex(inout columnName : String) : int
            int i = 0;
            for (String s : mRawColumns) {
                if (s.equals(columnName)) {
                    break;
                }
                i++;
            }
            return i;
!!!38366007.java!!!	delete(inout uri : Uri, inout selection : String, inout selectionArgs : String) : int
            int count = 0;
            if (mNumRows > 0) {
                // parse selection and selectionArgs
                SelectionParams selectionParams = new SelectionParams();
                selectionParams.parseSelectionParams(selection, selectionArgs);

                List<Integer> deleteRows = new ArrayList<Integer>();
                int i = -1;
                for (ArrayList<Object> row : mListOfRows) {
                    i++;
                    // filter based on selection parameters if needed
                    if (selection != null) {
                        if (!selectionParams.isMatch(row)) {
                            continue;
                        }
                    }
                    if (uri.compareTo(sRawUri) == 0) {
                        row.set(getColumnIndex("deleted"), "1");
                    } else {
                        // save index for removal
                        deleteRows.add(i);
                    }
                    count++;
                }

                if (uri.compareTo(sRawUriPermanentDelete) == 0) {
                    for (i = deleteRows.size() - 1; i >= 0; i--) {
                        mListOfRows.remove(i);
                    }
                }
            }
            return count;
!!!38366135.java!!!	insert(inout uri : Uri, inout values : ContentValues) : Uri
            Uri newUri = null;
            if (uri.compareTo(sRawUri) == 0) {
                if (values != null) {
                    mListOfRows.add(convertRawCVtoArrayList(values));
                    mNumRows++;
                    newUri = Uri.withAppendedPath(uri, "" + mNumRows);
                }
            }
            logd("insert called, new numRows: " + mNumRows);
            return newUri;
!!!38366263.java!!!	convertRawCVtoArrayList(inout values : ContentValues) : Object
            ArrayList<Object> newRow = new ArrayList<>();
            for (String key : mRawColumns) {
                if (values.containsKey(key)) {
                    newRow.add(values.getAsString(key));
                } else if (key.equals("_id")) {
                    newRow.add(mNumRows + 1);
                } else if (key.equals("deleted")) {
                    newRow.add("0");
                } else {
                    newRow.add(null);
                }
            }
            return newRow;
!!!38366647.java!!!	query(inout uri : Uri, inout projection : String, inout selection : String, inout selectionArgs : String, inout sortOrder : String) : Cursor
            logd("query called for: " + selection);
            MatrixCursor cursor = new MatrixCursor(projection);
            if (mNumRows > 0) {
                // parse selection and selectionArgs
                SelectionParams selectionParams = new SelectionParams();
                selectionParams.parseSelectionParams(selection, selectionArgs);

                for (ArrayList<Object> row : mListOfRows) {
                    ArrayList<Object> retRow = new ArrayList<>();
                    // filter based on selection parameters if needed
                    if (selection != null) {
                        if (!selectionParams.isMatch(row)) {
                            continue;
                        }
                    }

                    for (String columnName : projection) {
                        int columnIndex = getColumnIndex(columnName);
                        retRow.add(row.get(columnIndex));
                    }
                    cursor.addRow(retRow);
                }
            }
            if (cursor != null) {
                logd("returning rows: " + cursor.getCount());
            }
            return cursor;
!!!38366775.java!!!	call(inout method : String, inout request : String, inout args : Bundle) : Bundle
            return null;
