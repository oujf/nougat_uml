class SelectionParams
!!!38366391.java!!!	parseSelectionParams(inout selection : String, inout selectionArgs : String) : void
                if (selection != null) {
                    selection = selection.toLowerCase();
                    String[] selectionParams = selection.toLowerCase().split("and");
                    int i = 0;
                    int j = 0;
                    paramName = new String[selectionParams.length];
                    paramValue = new String[selectionParams.length];
                    for (String param : selectionParams) {
                        String[] paramWithArg = param.split("=");
                        paramName[i] = paramWithArg[0].trim();
                        if (param.contains("?")) {
                            paramValue[i] = selectionArgs[j];
                            j++;
                        } else {
                            paramValue[i] = paramWithArg[1].trim();
                        }
                        //logd(paramName[i] + " = " + paramValue[i]);
                        i++;
                    }
                }
!!!38366519.java!!!	isMatch(inout row : ArrayList<Object>) : boolean
                for (int i = 0; i < paramName.length; i++) {
                    int columnIndex = 0;
                    for (String columnName : mRawColumns) {
                        if (columnName.equals(paramName[i])) {
                            if ((paramValue[i] == null && row.get(columnIndex) != null) ||
                                    (paramValue[i] != null &&
                                            !paramValue[i].equals(row.get(columnIndex)))) {
                                logd("Not a match due to " + columnName + ": " + paramValue[i] +
                                        ", " + row.get(columnIndex));
                                return false;
                            } else {
                                // move on to next param
                                break;
                            }
                        }
                        columnIndex++;
                    }
                }
                return true;
