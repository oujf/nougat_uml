class IccPhoneBookInterfaceManagerTest
!!!38451255.java!!!	setUp() : void
        super.setUp(this.getClass().getSimpleName());
        //APP_FAM_3GPP default mPhone is GSM
        doReturn(mSimRecords).when(mPhone).getIccRecords();
        doReturn(mAdnRecordCache).when(mSimRecords).getAdnCache();

        doAnswer(new Answer<Void>() {
            @Override
            public Void answer(InvocationOnMock invocation) throws Throwable {
                Message response = (Message) invocation.getArguments()[2];
                //set result for load ADN EF
                AsyncResult.forMessage(response).result = mAdnList;
                response.sendToTarget();
                return null;
            }
        }).when(mAdnRecordCache).requestLoadAllAdnLike(anyInt(), anyInt(), (Message) anyObject());

        new IccPhoneBookInterfaceManagerHandler(TAG).start();
        waitUntilReady();
!!!38451383.java!!!	tearDown() : void
        super.tearDown();
!!!38451511.java!!!	testAdnEFLoadWithFailure() : void
        List<AdnRecord> adnListResult = mIccPhoneBookInterfaceMgr.getAdnRecordsInEf(
                IccConstants.EF_ADN);
        assertEquals(mAdnList, adnListResult);
        //mock a ADN Ef load failure
        doAnswer(new Answer<Void>() {
            @Override
            public Void answer(InvocationOnMock invocation) throws Throwable {
                Message response = (Message) invocation.getArguments()[2];
                AsyncResult.forMessage(response).exception = new RuntimeException();
                response.sendToTarget();
                return null;
            }
        }).when(mAdnRecordCache).requestLoadAllAdnLike(anyInt(), anyInt(), (Message) anyObject());
        List<AdnRecord> adnListResultNew = mIccPhoneBookInterfaceMgr.getAdnRecordsInEf(
                IccConstants.EF_ADN);
        //the later read return null due to exception
        assertNull(adnListResultNew);
        //verify the previous read is not got affected
        assertEquals(mAdnList, adnListResult);
