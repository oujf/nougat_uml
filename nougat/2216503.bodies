class TimeZonePickerView
!!!38460983.java!!!	TimeZonePickerView(inout context : Context, inout attrs : AttributeSet, inout timeZone : String, in timeMillis : long, inout l : TimeZonePickerView::OnTimeZoneSetListener, inout hideFilterSearch : boolean)
        super(context, attrs);
        mContext = context;
        LayoutInflater inflater = (LayoutInflater) context.getSystemService(
                Context.LAYOUT_INFLATER_SERVICE);
        inflater.inflate(R.layout.timezonepickerview, this, true);

        mHideFilterSearchOnStart = hideFilterSearch;

        TimeZoneData tzd = new TimeZoneData(mContext, timeZone, timeMillis);

        mResultAdapter = new TimeZoneResultAdapter(mContext, tzd, l);
        ListView timeZoneList = (ListView) findViewById(R.id.timezonelist);
        timeZoneList.setAdapter(mResultAdapter);
        timeZoneList.setOnItemClickListener(mResultAdapter);

        mFilterAdapter = new TimeZoneFilterTypeAdapter(mContext, tzd, mResultAdapter);

        mAutoCompleteTextView = (AutoCompleteTextView) findViewById(R.id.searchBox);
        mAutoCompleteTextView.addTextChangedListener(this);
        mAutoCompleteTextView.setOnItemClickListener(this);
        mAutoCompleteTextView.setOnClickListener(this);

        updateHint(R.string.hint_time_zone_search, R.drawable.ic_search_holo_light);
        mClearButton = (ImageButton) findViewById(R.id.clear_search);
        mClearButton.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                mAutoCompleteTextView.getEditableText().clear();
            }
        });
!!!38461111.java!!!	showFilterResults(in type : int, inout string : String, in time : int) : void
        if (mResultAdapter != null) {
            mResultAdapter.onSetFilter(type, string, time);
        }
!!!38461239.java!!!	hasResults() : boolean
        return mResultAdapter != null && mResultAdapter.hasResults();
!!!38461367.java!!!	getLastFilterType() : int
        return mResultAdapter != null ? mResultAdapter.getLastFilterType() : -1;
!!!38461495.java!!!	getLastFilterString() : String
        return mResultAdapter != null ? mResultAdapter.getLastFilterString() : null;
!!!38461623.java!!!	getLastFilterTime() : int
        return mResultAdapter != null ? mResultAdapter.getLastFilterType() : -1;
!!!38461751.java!!!	getHideFilterSearchOnStart() : boolean
        return mHideFilterSearchOnStart;
!!!38461879.java!!!	updateHint(in hintTextId : int, in imageDrawableId : int) : void
        String hintText = getResources().getString(hintTextId);
        Drawable searchIcon = getResources().getDrawable(imageDrawableId);

        SpannableStringBuilder ssb = new SpannableStringBuilder("   "); // for the icon
        ssb.append(hintText);
        int textSize = (int) (mAutoCompleteTextView.getTextSize() * 1.25);
        searchIcon.setBounds(0, 0, textSize, textSize);
        ssb.setSpan(new ImageSpan(searchIcon), 1, 2, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        mAutoCompleteTextView.setHint(ssb);
!!!38462135.java!!!	onTextChanged(inout s : CharSequence, in start : int, in before : int, in count : int) : void
        if (mFirstTime && mHideFilterSearchOnStart) {
            mFirstTime = false;
            return;
        }
        filterOnString(s.toString());
!!!38462263.java!!!	afterTextChanged(inout s : Editable) : void
        if (mClearButton != null) {
            mClearButton.setVisibility(s.length() > 0 ? View.VISIBLE : View.GONE);
        }
!!!38462391.java!!!	onItemClick(inout parent : AdapterView, inout view : View, in position : int, in id : long) : void
        // Hide the keyboard since the user explicitly selected an item.
        InputMethodManager manager =
                (InputMethodManager) getContext().getSystemService(Context.INPUT_METHOD_SERVICE);
        manager.hideSoftInputFromWindow(mAutoCompleteTextView.getWindowToken(), 0);
        // An onClickListener for the view item because I haven't figured out a
        // way to update the AutoCompleteTextView without causing an infinite loop.
        mHideFilterSearchOnStart = true;
        mFilterAdapter.onClick(view);
!!!38462519.java!!!	onClick(inout v : View) : void
        if (mAutoCompleteTextView != null && !mAutoCompleteTextView.isPopupShowing()) {
            filterOnString(mAutoCompleteTextView.getText().toString());
        }
!!!38462647.java!!!	filterOnString(inout string : String) : void
        if (mAutoCompleteTextView.getAdapter() == null) {
            mAutoCompleteTextView.setAdapter(mFilterAdapter);
        }
        mHideFilterSearchOnStart = false;
        mFilterAdapter.getFilter().filter(string);
