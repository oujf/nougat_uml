class NameData
!!!38478903.java!!!	emptyStructuredName() : boolean
            return TextUtils.isEmpty(mFamily) && TextUtils.isEmpty(mGiven)
                    && TextUtils.isEmpty(mMiddle) && TextUtils.isEmpty(mPrefix)
                    && TextUtils.isEmpty(mSuffix);
!!!38479031.java!!!	emptyPhoneticStructuredName() : boolean
            return TextUtils.isEmpty(mPhoneticFamily) && TextUtils.isEmpty(mPhoneticGiven)
                    && TextUtils.isEmpty(mPhoneticMiddle);
!!!38479159.java!!!	constructInsertOperation(inout operationList : List<ContentProviderOperation>, in backReferenceIndex : int) : void
            final ContentProviderOperation.Builder builder = ContentProviderOperation
                    .newInsert(Data.CONTENT_URI);
            builder.withValueBackReference(StructuredName.RAW_CONTACT_ID, backReferenceIndex);
            builder.withValue(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE);

            if (!TextUtils.isEmpty(mGiven)) {
                builder.withValue(StructuredName.GIVEN_NAME, mGiven);
            }
            if (!TextUtils.isEmpty(mFamily)) {
                builder.withValue(StructuredName.FAMILY_NAME, mFamily);
            }
            if (!TextUtils.isEmpty(mMiddle)) {
                builder.withValue(StructuredName.MIDDLE_NAME, mMiddle);
            }
            if (!TextUtils.isEmpty(mPrefix)) {
                builder.withValue(StructuredName.PREFIX, mPrefix);
            }
            if (!TextUtils.isEmpty(mSuffix)) {
                builder.withValue(StructuredName.SUFFIX, mSuffix);
            }

            boolean phoneticNameSpecified = false;

            if (!TextUtils.isEmpty(mPhoneticGiven)) {
                builder.withValue(StructuredName.PHONETIC_GIVEN_NAME, mPhoneticGiven);
                phoneticNameSpecified = true;
            }
            if (!TextUtils.isEmpty(mPhoneticFamily)) {
                builder.withValue(StructuredName.PHONETIC_FAMILY_NAME, mPhoneticFamily);
                phoneticNameSpecified = true;
            }
            if (!TextUtils.isEmpty(mPhoneticMiddle)) {
                builder.withValue(StructuredName.PHONETIC_MIDDLE_NAME, mPhoneticMiddle);
                phoneticNameSpecified = true;
            }

            // SORT-STRING is used only when phonetic names aren't specified in
            // the original vCard.
            if (!phoneticNameSpecified) {
                builder.withValue(StructuredName.PHONETIC_GIVEN_NAME, mSortString);
            }

            builder.withValue(StructuredName.DISPLAY_NAME, displayName);
            operationList.add(builder.build());
!!!38479287.java!!!	isEmpty() : boolean
            return (TextUtils.isEmpty(mFamily) && TextUtils.isEmpty(mMiddle)
                    && TextUtils.isEmpty(mGiven) && TextUtils.isEmpty(mPrefix)
                    && TextUtils.isEmpty(mSuffix) && TextUtils.isEmpty(mFormatted)
                    && TextUtils.isEmpty(mPhoneticFamily) && TextUtils.isEmpty(mPhoneticMiddle)
                    && TextUtils.isEmpty(mPhoneticGiven) && TextUtils.isEmpty(mSortString));
!!!38479415.java!!!	equals(inout obj : Object) : boolean
            if (this == obj) {
                return true;
            }
            if (!(obj instanceof NameData)) {
                return false;
            }
            NameData nameData = (NameData) obj;

            return (TextUtils.equals(mFamily, nameData.mFamily)
                    && TextUtils.equals(mMiddle, nameData.mMiddle)
                    && TextUtils.equals(mGiven, nameData.mGiven)
                    && TextUtils.equals(mPrefix, nameData.mPrefix)
                    && TextUtils.equals(mSuffix, nameData.mSuffix)
                    && TextUtils.equals(mFormatted, nameData.mFormatted)
                    && TextUtils.equals(mPhoneticFamily, nameData.mPhoneticFamily)
                    && TextUtils.equals(mPhoneticMiddle, nameData.mPhoneticMiddle)
                    && TextUtils.equals(mPhoneticGiven, nameData.mPhoneticGiven)
                    && TextUtils.equals(mSortString, nameData.mSortString));
!!!38479543.java!!!	hashCode() : int
            final String[] hashTargets = new String[] {mFamily, mMiddle, mGiven, mPrefix, mSuffix,
                    mFormatted, mPhoneticFamily, mPhoneticMiddle,
                    mPhoneticGiven, mSortString};
            int hash = 0;
            for (String hashTarget : hashTargets) {
                hash = hash * 31 + (hashTarget != null ? hashTarget.hashCode() : 0);
            }
            return hash;
!!!38479671.java!!!	toString() : String
            return String.format("family: %s, given: %s, middle: %s, prefix: %s, suffix: %s",
                    mFamily, mGiven, mMiddle, mPrefix, mSuffix);
!!!38479799.java!!!	getEntryLabel() : VCardEntry::EntryLabel
            return EntryLabel.NAME;
!!!38479927.java!!!	getFamily() : String
            return mFamily;
!!!38480055.java!!!	getMiddle() : String
            return mMiddle;
!!!38480183.java!!!	getGiven() : String
            return mGiven;
!!!38480311.java!!!	getPrefix() : String
            return mPrefix;
!!!38480439.java!!!	getSuffix() : String
            return mSuffix;
!!!38480567.java!!!	getFormatted() : String
            return mFormatted;
!!!38480695.java!!!	getSortString() : String
            return mSortString;
!!!38480823.java!!!	setFamily(inout family : String) : void
 mFamily = family;
!!!38480951.java!!!	setMiddle(inout middle : String) : void
 mMiddle = middle;
!!!38481079.java!!!	setGiven(inout given : String) : void
 mGiven = given;
!!!38481207.java!!!	setPrefix(inout prefix : String) : void
 mPrefix = prefix;
!!!38481335.java!!!	setSuffix(inout suffix : String) : void
 mSuffix = suffix;
