class PostalData
!!!38484279.java!!!	PostalData(inout pobox : String, inout extendedAddress : String, inout street : String, inout localty : String, inout region : String, inout postalCode : String, inout country : String, in type : int, inout label : String, inout isPrimary : boolean, in vcardType : int)
            mType = type;
            mPobox = pobox;
            mExtendedAddress = extendedAddress;
            mStreet = street;
            mLocalty = localty;
            mRegion = region;
            mPostalCode = postalCode;
            mCountry = country;
            mLabel = label;
            mIsPrimary = isPrimary;
            mVCardType = vcardType;
!!!38484407.java!!!	constructPostalData(in propValueList : List<String>, in type : int, in label : String, inout isPrimary : boolean, in vcardType : int) : VCardEntry::PostalData
            final String[] dataArray = new String[ADDR_MAX_DATA_SIZE];

            int size = propValueList.size();
            if (size > ADDR_MAX_DATA_SIZE) {
                size = ADDR_MAX_DATA_SIZE;
            }

            // adr-value = 0*6(text-value ";") text-value
            // ; PO Box, Extended Address, Street, Locality, Region, Postal Code, Country Name
            //
            // Use Iterator assuming List may be LinkedList, though actually it is
            // always ArrayList in the current implementation.
            int i = 0;
            for (String addressElement : propValueList) {
                dataArray[i] = addressElement;
                if (++i >= size) {
                    break;
                }
            }
            while (i < ADDR_MAX_DATA_SIZE) {
                dataArray[i++] = null;
            }

            return new PostalData(dataArray[0], dataArray[1], dataArray[2], dataArray[3],
                    dataArray[4], dataArray[5], dataArray[6], type, label, isPrimary, vcardType);
!!!38484535.java!!!	constructInsertOperation(inout operationList : List<ContentProviderOperation>, in backReferenceIndex : int) : void
            final ContentProviderOperation.Builder builder = ContentProviderOperation
                    .newInsert(Data.CONTENT_URI);
            builder.withValueBackReference(StructuredPostal.RAW_CONTACT_ID, backReferenceIndex);
            builder.withValue(Data.MIMETYPE, StructuredPostal.CONTENT_ITEM_TYPE);

            builder.withValue(StructuredPostal.TYPE, mType);
            if (mType == StructuredPostal.TYPE_CUSTOM) {
                builder.withValue(StructuredPostal.LABEL, mLabel);
            }

            final String streetString;
            if (TextUtils.isEmpty(mStreet)) {
                if (TextUtils.isEmpty(mExtendedAddress)) {
                    streetString = null;
                } else {
                    streetString = mExtendedAddress;
                }
            } else {
                if (TextUtils.isEmpty(mExtendedAddress)) {
                    streetString = mStreet;
                } else {
                    streetString = mStreet + " " + mExtendedAddress;
                }
            }
            builder.withValue(StructuredPostal.POBOX, mPobox);
            builder.withValue(StructuredPostal.STREET, streetString);
            builder.withValue(StructuredPostal.CITY, mLocalty);
            builder.withValue(StructuredPostal.REGION, mRegion);
            builder.withValue(StructuredPostal.POSTCODE, mPostalCode);
            builder.withValue(StructuredPostal.COUNTRY, mCountry);

            builder.withValue(StructuredPostal.FORMATTED_ADDRESS, getFormattedAddress(mVCardType));
            if (mIsPrimary) {
                builder.withValue(Data.IS_PRIMARY, 1);
            }
            operationList.add(builder.build());
!!!38484663.java!!!	getFormattedAddress(in vcardType : int) : String
            StringBuilder builder = new StringBuilder();
            boolean empty = true;
            final String[] dataArray = new String[] {
                    mPobox, mExtendedAddress, mStreet, mLocalty, mRegion, mPostalCode, mCountry
            };
            if (VCardConfig.isJapaneseDevice(vcardType)) {
                // In Japan, the order is reversed.
                for (int i = ADDR_MAX_DATA_SIZE - 1; i >= 0; i--) {
                    String addressPart = dataArray[i];
                    if (!TextUtils.isEmpty(addressPart)) {
                        if (!empty) {
                            builder.append(' ');
                        } else {
                            empty = false;
                        }
                        builder.append(addressPart);
                    }
                }
            } else {
                for (int i = 0; i < ADDR_MAX_DATA_SIZE; i++) {
                    String addressPart = dataArray[i];
                    if (!TextUtils.isEmpty(addressPart)) {
                        if (!empty) {
                            builder.append(' ');
                        } else {
                            empty = false;
                        }
                        builder.append(addressPart);
                    }
                }
            }

            return builder.toString().trim();
!!!38484791.java!!!	isEmpty() : boolean
            return (TextUtils.isEmpty(mPobox)
                    && TextUtils.isEmpty(mExtendedAddress)
                    && TextUtils.isEmpty(mStreet)
                    && TextUtils.isEmpty(mLocalty)
                    && TextUtils.isEmpty(mRegion)
                    && TextUtils.isEmpty(mPostalCode)
                    && TextUtils.isEmpty(mCountry));
!!!38484919.java!!!	equals(inout obj : Object) : boolean
            if (this == obj) {
                return true;
            }
            if (!(obj instanceof PostalData)) {
                return false;
            }
            final PostalData postalData = (PostalData) obj;
            return (mType == postalData.mType)
                    && (mType == StructuredPostal.TYPE_CUSTOM ? TextUtils.equals(mLabel,
                            postalData.mLabel) : true)
                    && (mIsPrimary == postalData.mIsPrimary)
                    && TextUtils.equals(mPobox, postalData.mPobox)
                    && TextUtils.equals(mExtendedAddress, postalData.mExtendedAddress)
                    && TextUtils.equals(mStreet, postalData.mStreet)
                    && TextUtils.equals(mLocalty, postalData.mLocalty)
                    && TextUtils.equals(mRegion, postalData.mRegion)
                    && TextUtils.equals(mPostalCode, postalData.mPostalCode)
                    && TextUtils.equals(mCountry, postalData.mCountry);
!!!38485047.java!!!	hashCode() : int
            int hash = mType;
            hash = hash * 31 + (mLabel != null ? mLabel.hashCode() : 0);
            hash = hash * 31 + (mIsPrimary ? 1231 : 1237);

            final String[] hashTargets = new String[] {mPobox, mExtendedAddress, mStreet,
                    mLocalty, mRegion, mPostalCode, mCountry};
            for (String hashTarget : hashTargets) {
                hash = hash * 31 + (hashTarget != null ? hashTarget.hashCode() : 0);
            }
            return hash;
!!!38485175.java!!!	toString() : String
            return String.format("type: %d, label: %s, isPrimary: %s, pobox: %s, "
                    + "extendedAddress: %s, street: %s, localty: %s, region: %s, postalCode %s, "
                    + "country: %s", mType, mLabel, mIsPrimary, mPobox, mExtendedAddress, mStreet,
                    mLocalty, mRegion, mPostalCode, mCountry);
!!!38485303.java!!!	getEntryLabel() : VCardEntry::EntryLabel
            return EntryLabel.POSTAL_ADDRESS;
!!!38485431.java!!!	getPobox() : String
            return mPobox;
!!!38485559.java!!!	getExtendedAddress() : String
            return mExtendedAddress;
!!!38485687.java!!!	getStreet() : String
            return mStreet;
!!!38485815.java!!!	getLocalty() : String
            return mLocalty;
!!!38485943.java!!!	getRegion() : String
            return mRegion;
!!!38486071.java!!!	getPostalCode() : String
            return mPostalCode;
!!!38486199.java!!!	getCountry() : String
            return mCountry;
!!!38486327.java!!!	getType() : int
            return mType;
!!!38486455.java!!!	getLabel() : String
            return mLabel;
!!!38486583.java!!!	isPrimary() : boolean
            return mIsPrimary;
