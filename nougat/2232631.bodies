class Blur25G
!!!38596663.java!!!	onBar1Setup(inout b : SeekBar, inout t : TextView) : boolean
        t.setText("Radius");
        b.setProgress(100);
        return true;
!!!38596791.java!!!	onBar1Changed(in progress : int) : void
        mRadius = ((float)progress) / 100.0f * MAX_RADIUS;
        if (mRadius <= 0.10f) {
            mRadius = 0.10f;
        }
        mIntrinsic.setRadius(mRadius);
!!!38596919.java!!!	createTest(inout res : Resources) : void
        int width = mInPixelsAllocation.getType().getX();
        int height = mInPixelsAllocation.getType().getY();

        Type.Builder tb = new Type.Builder(mRS, Element.U8(mRS));
        tb.setX(width);
        tb.setY(height);
        mScratchPixelsAllocation1 = Allocation.createTyped(mRS, tb.create());
        mScratchPixelsAllocation2 = Allocation.createTyped(mRS, tb.create());

        mCM = ScriptIntrinsicColorMatrix.create(mRS);
        mCM.forEach(mInPixelsAllocation, mScratchPixelsAllocation1);

        mIntrinsic = ScriptIntrinsicBlur.create(mRS, Element.U8(mRS));
        mIntrinsic.setRadius(MAX_RADIUS);
        mIntrinsic.setInput(mScratchPixelsAllocation1);
!!!38597047.java!!!	runTest() : void
        mIntrinsic.forEach(mScratchPixelsAllocation2);
!!!38597175.java!!!	setupBenchmark() : void
        mIntrinsic.setRadius(MAX_RADIUS);
!!!38597303.java!!!	exitBenchmark() : void
        mIntrinsic.setRadius(mRadius);
!!!38597431.java!!!	updateBitmap(inout b : Bitmap) : void
        Matrix4f m = new Matrix4f();
        m.set(0, 0, 1.f);
        m.set(0, 1, 1.f);
        m.set(0, 2, 1.f);

        m.set(1, 1, 0.f);
        m.set(2, 2, 0.f);
        m.set(3, 3, 0.f);
        mCM.setColorMatrix(m);
        mCM.setAdd(0.f, 0.f, 0.f, 1.f);

        mCM.forEach(mScratchPixelsAllocation2, mOutPixelsAllocation);
        mOutPixelsAllocation.copyTo(b);
