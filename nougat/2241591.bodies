class RGBZ
!!!38677559.java!!!	RGBZ(inout uri : Uri, inout contentResolver : ContentResolver, inout context : Context)
    preview = BitmapFactory.decodeStream(contentResolver.openInputStream(uri));
    if (preview == null) {
      throw new FileNotFoundException(uri.toString());
    }
    this.depthImage = new DepthImage(context, uri);
    this.depthBitmap = depthImage.getDepthBitmap();
    this.bitmap = setAlphaChannel(preview, this.depthBitmap);
    this.depthTransform = depthImage.getDepthTransform();
!!!38677687.java!!!	hasDepthmap() : boolean
    return depthTransform != null;
!!!38677815.java!!!	getBitmap() : Bitmap
    return bitmap;
!!!38677943.java!!!	getDepthTransform() : DepthTransform
    return depthTransform;
!!!38678071.java!!!	getFocusDepth() : double
    return this.depthImage.getFocalDistance();
!!!38678199.java!!!	getDepthOfField() : double
    return this.depthImage.getDepthOfField();
!!!38678327.java!!!	getBlurInfinity() : double
    return this.depthImage.getBlurAtInfinity();
!!!38678455.java!!!	getWidth() : int
    return bitmap.getWidth();
!!!38678583.java!!!	getHeight() : int
    return bitmap.getHeight();
!!!38678711.java!!!	getDepth(in x : int, in y : int) : float
    if (!hasDepthmap()) {
      return 0.0f;
    }
    if (x < 0 || x > depthBitmap.getWidth() ||
            y < 0 || y > depthBitmap.getHeight()) {
      Log.e("RGBZ getDepth", "index out of bound");
      return 0;
    }
    return getDepthTransform().reconstruct(Color.blue(depthBitmap.getPixel(x, y)));
!!!38678839.java!!!	setAlphaChannel(inout bitmap : Bitmap, inout depthBitmap : Bitmap) : Bitmap
    if (bitmap == null) {
      return bitmap;
    }
    Bitmap result = bitmap.copy(Bitmap.Config.ARGB_8888, true);
    // set the alpha channel of depthBitmap to alpha of bitmap
    result = setAlphaChannelFromBitmap(depthBitmap, bitmap, result);
    return result;
!!!38678967.java!!!	setAlphaChannelFromBitmap(inout depth : Bitmap, inout orig : Bitmap, inout dest : Bitmap) : Bitmap
    int w = orig.getWidth();
    int h = orig.getHeight();
    int[] orig_data = new int[w*h];
    int[] depth_data = new int[w*h];

    orig.getPixels(orig_data, 0, w, 0, 0, w, h);
    depth.getPixels(depth_data, 0, w, 0, 0, w, h);
    for (int i = 0; i < orig_data.length; i++) {
      int v = orig_data[i] & 0x00FFFFFF;
      int temp = (depth_data[i] & 0x000000FF) << 24;
      v = v | temp;
      orig_data[i] = v;
    }
    dest.setPixels(orig_data, 0, w, 0, 0, w, h);
    return dest;
