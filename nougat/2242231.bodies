class MainActivity
!!!38673847.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mImgView = (ImageView) findViewById(R.id.image_view);
        mNewImgView = (ImageView) findViewById(R.id.image_view_new);
        mCompareTextView = (TextView) findViewById(R.id.compareTextView);
        mPointerLabelTextView = (TextView) findViewById(R.id.orignialImageLabel);
        mAllocLabelTextView = (TextView) findViewById(R.id.newImageLabel);

        Intent intent = getIntent();
        if (intent != null) {

            String s = intent.getType();
            if (s != null && s.indexOf("image/") != -1) {
                Uri data = (Uri) intent.getParcelableExtra(Intent.EXTRA_STREAM);
                if (data != null) {

                    try {
                      RenderScript renderScript = RenderScript.create(getApplicationContext(), RS_API);
                      renderScript.setPriority(RenderScript.Priority.NORMAL);

                      // Get input uri to RGBZ
                      RGBZ current_rgbz = new RGBZ(data, getContentResolver(), this);
                      DepthOfFieldOptions current_depth_options = new DepthOfFieldOptions(current_rgbz);

                      // Set image focus settings
                      current_depth_options.setFocusPoint(0.7f, 0.5f);
                      current_depth_options.setBokeh(2f);

                      RsTaskParams rsTaskParam = new RsTaskParams(renderScript, current_depth_options);
                      new RsAsyncTaskRunner().execute(rsTaskParam);
                      return;
                    } catch (IOException e) {
                        e.printStackTrace();
                    }

                }
            }
        }


        try {
            //Uri data = getLocalRef();
            Uri data = getResourceRef();
            if (data == null) {
                return;
            }

            RenderScript renderScript = RenderScript.create(getApplicationContext(), RS_API);
            renderScript.setPriority(RenderScript.Priority.NORMAL);

            // Get input uri to RGBZ
            RGBZ current_rgbz = new RGBZ(data, getContentResolver(), this);
            DepthOfFieldOptions current_depth_options = new DepthOfFieldOptions(current_rgbz);

            // Set image focus settings
            current_depth_options.setFocusPoint(0.7f, 0.5f);
            current_depth_options.setBokeh(2f);

            RsTaskParams rsTaskParam = new RsTaskParams(renderScript, current_depth_options);
            new RsAsyncTaskRunner().execute(rsTaskParam);
            return;
        } catch (IOException e) {
            e.printStackTrace();
        }
!!!38674487.java!!!	getLocalRef() : Uri


        File folder = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM);

        Log.v(TAG, "DIRECTORY_DOCUMENTS = " + folder.getAbsolutePath());
        ;
        File f = findJpeg(folder);
        if (f != null) {
            Log.v(TAG, "File = " + f);
            return Uri.fromFile(f);
        }
        return null;
!!!38674615.java!!!	getResourceRef() : Uri
        Context context = getApplicationContext();
        int resID = R.drawable.refocusimage;
        Uri path = Uri.parse(ContentResolver.SCHEME_ANDROID_RESOURCE + "://" +
            context.getResources().getResourcePackageName(resID) + '/' +
            context.getResources().getResourceTypeName(resID) + '/' +
            context.getResources().getResourceEntryName(resID));
        return path;
!!!38674743.java!!!	findJpeg(inout dir : File) : File

        File[] files = dir.listFiles();
        if (files == null) return null;
        for (int i = 0; i < files.length; i++) {
            if (files[i].isDirectory() && !files[i].getName().startsWith(".")) {
                File ret = findJpeg(files[i]);
                if (ret != null) {
                    Log.v(TAG, "returning " + ret.getAbsolutePath());
                    return ret;
                }
                continue;
            }
            if (files[i].getName().toLowerCase().endsWith(".jpg")) {
                Log.v(TAG, "returning " + files[i].getAbsolutePath());
                return files[i];

            }
        }
        return null;
