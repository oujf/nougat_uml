class ImageBuffersForRenderScriptd1new
!!!38681527.java!!!	ImageBuffersForRenderScriptd1new(inout image : Bitmap, in margin : int, inout renderScript : RenderScript, inout scriptC : ScriptC_layered_filter_fast_d1new)
    super(image, margin, renderScript);
    sharpRGBAAllocation = Allocation.createSized(
            renderScript, Element.F32_4(renderScript),
            imageWidthPadded * imageHeightPadded);
    sharpActualDepthAllocation = Allocation.createSized(
            renderScript, Element.U8(renderScript),
            imageWidthPadded * imageHeightPadded);
    sharpDilatedDepthAllocation = Allocation.createSized(
            renderScript, Element.U8(renderScript),
            imageWidthPadded * imageHeightPadded);
    sharpActiveAllocation = Allocation.createSized(
            renderScript, Element.U8(renderScript),
            imageWidthPadded * imageHeightPadded);
    sharpMatteAllocation = Allocation.createSized(
            renderScript, Element.U8(renderScript),
            imageWidthPadded * imageHeightPadded);
    fuzzyRGBAAllocation = Allocation.createSized(
            renderScript, Element.F32_4(renderScript),
            imageWidthPadded * imageHeightPadded);
    integralRGBAAllocation = Allocation.createSized(
            renderScript, Element.F32_4(renderScript),
            imageWidthPadded * imageHeightPadded);

    scriptC.set_g_sharp_RGBA(sharpRGBAAllocation);
    scriptC.set_g_fuzzy_RGBA(fuzzyRGBAAllocation);
    scriptC.set_g_integral_RGBA(integralRGBAAllocation);

    scriptC.set_g_sharp_actual_depth(sharpActualDepthAllocation);
    scriptC.set_g_sharp_active(sharpActiveAllocation);
    scriptC.set_g_sharp_matte(sharpMatteAllocation);
    scriptC.set_g_sharp_dilated_depth(sharpDilatedDepthAllocation);

!!!38681655.java!!!	initializeRenderScript(inout focalLayer : LayerInfo, inout scriptC : ScriptC_layered_filter_fast_d1new) : void
    long startnow;
    long endnow;
    startnow = System.nanoTime();
    scriptC.invoke_InitializeFast(imageWidthPadded, imageHeightPadded,
            paddedMargin, focalLayer.frontDepth, focalLayer.backDepth);
    endnow = System.nanoTime();
    Log.d(myTAG, "Initialize: " + (endnow - startnow) + " ns");
    // At this point, {@code inAllocation} contains input RGBD image in Java.
    // {@code g_sharp_image} is a global pointer that points the focus image in
    // Render Script. The following function copies {@code inAllocation} in
    // Java to {@code g_sharp_image) in Render Script.
    startnow = System.nanoTime();
    scriptC.forEach_UnpackInputImage(inAllocation);
    endnow = System.nanoTime();
    Log.d(myTAG, "UnpackInputImage: " + (endnow - startnow) + " ns");
