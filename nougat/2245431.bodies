class BlasControls
!!!38689975.java!!!	onCreateOptionsMenu(inout menu : Menu) : boolean
        // Inflate the menu items for use in the action bar
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.main_activity_actions, menu);

        return super.onCreateOptionsMenu(menu);
!!!38690103.java!!!	init() : void

        for (int i=0; i < BlasTestList.TestName.values().length; i++) {
            mTestList.add(BlasTestList.TestName.values()[i].toString());
        }

        mTestListView = (ListView) findViewById(R.id.test_list);
        mTestListAdapter = new ArrayAdapter(this,
                android.R.layout.simple_list_item_activated_1,
                mTestList);

        mTestListView.setAdapter(mTestListAdapter);
        mTestListView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
        mTestListAdapter.notifyDataSetChanged();

        mResultView = (TextView) findViewById(R.id.results);
        mResultView.setMovementMethod(new ScrollingMovementMethod());
!!!38690231.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        setContentView(R.layout.controls);
        init();
!!!38690359.java!!!	onPause() : void
        super.onPause();
!!!38690487.java!!!	onResume() : void
        super.onResume();
!!!38690615.java!!!	makeBasicLaunchIntent() : Intent
        Intent intent = new Intent(this, BlasBenchmark.class);
        intent.putExtra("enable long", mSettings[SETTING_LONG_RUN]);
        intent.putExtra("enable pause", mSettings[SETTING_PAUSE]);
        return intent;
!!!38690743.java!!!	btnRun(inout v : View) : void
        BlasTestList.TestName t[] = BlasTestList.TestName.values();
        int count = 0;
        for (int i = 0; i < t.length; i++) {
            if (mTestListView.isItemChecked(i)) {
                count++;
            }
        }
        if (count == 0) {
            return;
        }

        int testList[] = new int[count];
        count = 0;
        for (int i = 0; i < t.length; i++) {
            if (mTestListView.isItemChecked(i)) {
                testList[count++] = i;
            }
        }

        Intent intent = makeBasicLaunchIntent();
        intent.putExtra("tests", testList);
        startActivityForResult(intent, 0);
!!!38690871.java!!!	writeResults() : void
        // write result into a file
        File externalStorage = Environment.getExternalStorageDirectory();
        if (!externalStorage.canWrite()) {
            Log.v(TAG, "sdcard is not writable");
            return;
        }
        File resultFile = new File(externalStorage, RESULT_FILE);
        resultFile.setWritable(true, false);
        try {
            BufferedWriter rsWriter = new BufferedWriter(new FileWriter(resultFile));
            Log.v(TAG, "Saved results in: " + resultFile.getAbsolutePath());
            java.text.DecimalFormat df = new java.text.DecimalFormat("######.####");

            for (int ct=0; ct < BlasTestList.TestName.values().length; ct++) {
                String t = BlasTestList.TestName.values()[ct].toString();
                final float r = mResults[ct];
                String s = new String("" + t + ", " + df.format(r));
                rsWriter.write(s + "\n");
            }
            rsWriter.close();
        } catch (IOException e) {
            Log.v(TAG, "Unable to write result file " + e.getMessage());
        }
!!!38690999.java!!!	onActivityResult(in requestCode : int, in resultCode : int, inout data : Intent) : void
        if (requestCode == 0) {
            if (resultCode == RESULT_OK) {
                java.text.DecimalFormat df = new java.text.DecimalFormat("######.####");
                mResults = new float[BlasTestList.TestName.values().length];
                mInfo = new String[BlasTestList.TestName.values().length];

                float r[] = data.getFloatArrayExtra("results");
                String inf[] = data.getStringArrayExtra("testinfo");
                int id[] = data.getIntArrayExtra("tests");

                String mOutResult = "";
                for (int ct=0; ct < id.length; ct++) {
                    String t = inf[ct];
                    String sl = BlasTestList.TestName.values()[id[ct]].toString() + ":   " + df.format(r[ct]) + "ms";
                    String s = t + ":   " + df.format(r[ct]) + "ms";
                    mTestList.set(id[ct], sl);
                    mTestListAdapter.notifyDataSetChanged();
                    mOutResult += s + '\n';
                    mResults[id[ct]] = r[ct];
                }

                mResultView.setText(mOutResult);
                writeResults();
            }
        }
!!!38691127.java!!!	btnSelAll(inout v : View) : void
        BlasTestList.TestName t[] = BlasTestList.TestName.values();
        for (int i=0; i < t.length; i++) {
            mTestListView.setItemChecked(i, true);
        }
!!!38691255.java!!!	onOptionsItemSelected(inout item : MenuItem) : boolean
        // Handle presses on the action bar items
        switch(item.getItemId()) {
            case R.id.action_settings:
                BlasSettings newFragment = new BlasSettings(mSettings);
                newFragment.show(getFragmentManager(), "settings");
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
!!!38691383.java!!!	btnSelNone(inout v : View) : void
        BlasTestList.TestName t[] = BlasTestList.TestName.values();
        for (int i=0; i < t.length; i++) {
            mTestListView.setItemChecked(i, false);
        }
!!!38691511.java!!!	btnSettings(inout v : View) : void
        BlasSettings newFragment = new BlasSettings(mSettings);
        newFragment.show(getFragmentManager(), "settings");
