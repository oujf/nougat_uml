class AnnotationItem
!!!857271.java!!!	sortByTypeIdIndex(inout array : AnnotationItem) : void
        Arrays.sort(array, TYPE_ID_SORTER);
!!!857399.java!!!	AnnotationItem(inout annotation : Annotation, inout dexFile : DexFile)
        /*
         * The write size isn't known up-front because (the variable-lengthed)
         * leb128 type is used to represent some things.
         */
        super(ALIGNMENT, -1);

        if (annotation == null) {
            throw new NullPointerException("annotation == null");
        }

        this.annotation = annotation;
        this.type = null;
        this.encodedForm = null;
        addContents(dexFile);
!!!857527.java!!!	itemType() : ItemType
        return ItemType.TYPE_ANNOTATION_ITEM;
!!!857655.java!!!	hashCode() : int
        return annotation.hashCode();
!!!857783.java!!!	compareTo0(inout other : OffsettedItem) : int
        AnnotationItem otherAnnotation = (AnnotationItem) other;

        return annotation.compareTo(otherAnnotation.annotation);
!!!857911.java!!!	toHuman() : String
        return annotation.toHuman();
!!!858039.java!!!	addContents(inout file : DexFile) : void
        type = file.getTypeIds().intern(annotation.getType());
        ValueEncoder.addContents(file, annotation);
!!!858167.java!!!	place0(inout addedTo : Section, in offset : int) : void
        // Encode the data and note the size.

        ByteArrayAnnotatedOutput out = new ByteArrayAnnotatedOutput();
        ValueEncoder encoder = new ValueEncoder(addedTo.getFile(), out);

        encoder.writeAnnotation(annotation, false);
        encodedForm = out.toByteArray();

        // Add one for the visibility byte in front of the encoded annotation.
        setWriteSize(encodedForm.length + 1);
!!!858295.java!!!	annotateTo(inout out : AnnotatedOutput, inout prefix : String) : void
        out.annotate(0, prefix + "visibility: " +
                annotation.getVisibility().toHuman());
        out.annotate(0, prefix + "type: " + annotation.getType().toHuman());

        for (NameValuePair pair : annotation.getNameValuePairs()) {
            CstString name = pair.getName();
            Constant value = pair.getValue();

            out.annotate(0, prefix + name.toHuman() + ": " +
                    ValueEncoder.constantToHuman(value));
        }
!!!858423.java!!!	writeTo0(inout file : DexFile, inout out : AnnotatedOutput) : void
        boolean annotates = out.annotates();
        AnnotationVisibility visibility = annotation.getVisibility();

        if (annotates) {
            out.annotate(0, offsetString() + " annotation");
            out.annotate(1, "  visibility: VISBILITY_" + visibility);
        }

        switch (visibility) {
            case BUILD:   out.writeByte(VISIBILITY_BUILD); break;
            case RUNTIME: out.writeByte(VISIBILITY_RUNTIME); break;
            case SYSTEM:  out.writeByte(VISIBILITY_SYSTEM); break;
            default: {
                // EMBEDDED shouldn't appear at the top level.
                throw new RuntimeException("shouldn't happen");
            }
        }

        if (annotates) {
            /*
             * The output is to be annotated, so redo the work previously
             * done by place0(), except this time annotations will actually
             * get emitted.
             */
            ValueEncoder encoder = new ValueEncoder(file, out);
            encoder.writeAnnotation(annotation, true);
        } else {
            out.write(encodedForm);
        }
