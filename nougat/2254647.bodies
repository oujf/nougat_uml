class UT_single_source_alloc
!!!38745783.java!!!	UT_single_source_alloc(inout rstc : RSTestCore, inout res : Resources, inout ctx : Context)
        super(rstc, "SingleSourceAllocation", ctx);
        mRes = res;
!!!38745911.java!!!	initializeGlobals(inout RS : RenderScript, inout s : ScriptC_single_source_alloc, in nDims : int) : void
        s.set_gDimX(dimX);
        s.set_gDimY(nDims > 1? dimY: 0);
        s.set_gDimZ(nDims > 2? dimZ: 0);
        s.set_gStart(start);

        return;
!!!38746039.java!!!	run() : void
        RenderScript pRS = RenderScript.create(mCtx);
        ScriptC_single_source_alloc s = new ScriptC_single_source_alloc(pRS);
        pRS.setMessageHandler(mRsMessage);

        // Test 1-D, 2-D and 3-D Allocations of basic RenderScript types by creating Allocations and
        // invoking a kernel on them.
        for (int dataType: rsDataTypes) {
            for (int vecSize = 1; vecSize <= 4; vecSize ++) {
                for (int nDims = 1; nDims <= 3; nDims ++) {
                    initializeGlobals(pRS, s, nDims);
                    s.invoke_CreateAndTestAlloc(dataType, vecSize);
                }
            }
        }

        // Exhaustively test valid and invalid calls to rs_* creation functions.  (These tests don't
        // walk the created allocations, though.)
        s.invoke_TestAllCases();

        s.invoke_single_source_alloc_test();
        pRS.finish();
        waitForMessage();
        pRS.destroy();
