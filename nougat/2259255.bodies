class VolumeLoader
!!!38798647.java!!!	VolumeLoader(inout dir : String)
        map.put(Mandelbulb.NAME,null);
        map.put(Droid.NAME,null);
        baseDir = new File(dir);
        if (!baseDir.exists()) {
            Log.e(LOGTAG, "Directory: \""+dir+"\" does not exist ");
            return;
        }
        Properties[] prop = getPropertyFiles(baseDir);
        for (int i = 0; i < prop.length; i++) {
            map.put(prop[i].getProperty("name"), prop[i]);
        }

!!!38798775.java!!!	getNames() : String
       String [] ret = map.keySet().toArray(new String[map.size()]);
        Arrays.sort(ret);
        return ret;
!!!38798903.java!!!	getVolume(inout rs : RenderScript, inout name : String) : Volume
        if (name.equals(Mandelbulb.NAME)) {
            return  Mandelbulb.buildRSVolume(rs,mListener);
        }
        if (name.equals(Droid.NAME)) {
            return  Droid.buildRSVolume(rs,mListener);
        }
        Properties p = map.get(name);
        if (p == null) {
            Log.v(LOGTAG,"Could not find "+name);
            return null;
        }
        String dir = p.getProperty("dir");
        Log.v(LOGTAG,"dir ="+dir);

        if ("dicom".equalsIgnoreCase(p.getProperty("format"))) {
            Log.v(LOGTAG,"processing dicom");
            Volume v = LoaderDicom.buildRSVolume(rs, new File(baseDir, dir), mListener);
            String [] looks = p.getProperty("looks").split(",");
            for (int j = 0; j < looks.length; j++) {
                String look_color = p.getProperty(looks[j]+".color");
                String look_opacity = p.getProperty(looks[j]+".opacity");
                v.addLook(looks[j],look_color,look_opacity);
            }
            return v;
        } else if ("raw".equalsIgnoreCase(p.getProperty("format"))) {
            Log.v(LOGTAG,"processing dicom");
            Volume v = LoaderRaw.buildRSVolume(rs, new File(baseDir, dir), p, mListener);
            String [] looks = p.getProperty("looks").split(",");
            for (int j = 0; j < looks.length; j++) {
                String look_color = p.getProperty(looks[j]+".color");
                String look_opacity = p.getProperty(looks[j]+".opacity");
                v.addLook(looks[j],look_color,look_opacity);
            }
            return v;
        }
        Log.v(LOGTAG,"could recognize format");
        return null;
!!!38799031.java!!!	getPropertyFiles(inout dir : File) : Properties

        File[] f = dir.listFiles(new FilenameFilter() {

            @Override
            public boolean accept(File dir, String name) {
                Log.v(LOGTAG, name);
                return name.endsWith(".prop");
            }
        });
        Properties[]ret = new Properties[f.length];
        for (int i = 0; i < f.length; i++) {
            Properties prop = new Properties();
            ret[i] = prop;
            try {
                prop.load(new FileReader(f[i]));

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return ret;
!!!38799159.java!!!	setProgressListener(inout listener : VolumeLoader::ProgressListener) : void
        mListener = listener;
