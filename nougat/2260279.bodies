class TriData
!!!38777911.java!!!	print() : void
        class Fmt extends DecimalFormat {
            public Fmt() {
                super("      ##0.000");
            }

            public String f(double number) {
                String ret = "           "+super.format(number);
                return ret.substring(ret.length() - 7);
            }
        }
        Fmt df = new Fmt();
        for (int i = 0; i < mVert.length; i += 3) {

            String s = (i / 3 + "[ " + df.f(mVert[i]));
            s += (", " + df.f(mVert[i + 1]));
            Log.v(LOGTAG, s + ", " + df.f(mVert[i + 2]) + "]");
        }
!!!38778039.java!!!	TriData(inout clone : TriData)

        mVert = Arrays.copyOf(clone.mVert, clone.mVert.length);
        mIndex = Arrays.copyOf(clone.mIndex, clone.mIndex.length);
!!!38778167.java!!!	scale(inout s : float) : void
        for (int i = 0; i < mVert.length; i += 3) {
            mVert[i] *= s[0];
            mVert[i + 1] *= s[1];
            mVert[i + 2] *= s[2];
        }
!!!38778295.java!!!	scale(inout s : double) : void
        for (int i = 0; i < mVert.length; i += 3) {
            mVert[i] *= s[0];
            mVert[i + 1] *= s[1];
            mVert[i + 2] *= s[2];
        }
!!!38778423.java!!!	transform(inout m : Matrix) : void
        for (int i = 0; i < mVert.length; i += 3) {
            m.mult3(mVert, i, mVert, i);
        }
!!!38778551.java!!!	transform(inout m : Matrix, inout out : TriData) : void

        for (int i = 0; i < mVert.length; i += 3) {
            m.mult3(mVert, i, out.mVert, i);
        }
!!!38778679.java!!!	read(inout fileName : String) : void
        try {
            FileReader fr = new FileReader(fileName);
            LineNumberReader lnr = new LineNumberReader(fr);
            int num_verts = Integer.parseInt(lnr.readLine());
            Log.v(LOGTAG, "verts =" + num_verts);
            mVert = new float[num_verts * 3];
            int k = 0;
            for (int i = 0; i < num_verts; i++) {
                String[] s = lnr.readLine().split("\\s");

                for (int j = 0; j < s.length; j++) {
                    mVert[k++] = Float.parseFloat(s[j]);
                }
            }
            int num_tri = Integer.parseInt(lnr.readLine());
            Log.v(LOGTAG, "tri =" + num_tri);
            mIndex = new int[3 * num_tri];
            k = 0;
            for (int i = 0; i < num_tri; i++) {
                String[] s = lnr.readLine().split("\\s");
                for (int j = 0; j < s.length; j++) {
                    mIndex[k++] = Integer.parseInt(s[j]);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
