class Transform
!!!38786231.java!!!	clone(inout src : Transform) : void
        System.arraycopy(src.mVoxelDim, 0, mVoxelDim, 0, mVoxelDim.length);
        mViewMatrix.clone(src.mViewMatrix);
        updateAllMatrix();
!!!38786359.java!!!	updateAllMatrix() : void
        mViewMatrix.calcMatrix();
        Matrix m = new Matrix();
        m.setToUnit();
        mAllMat[0][0] = m;
        mAllMat[1][1] = m;
        mAllMat[2][2] = m;
        mAllMat[SCREEN_SPACE][WORLD_SPACE] = new Matrix(mViewMatrix);
        mAllMat[WORLD_SPACE][SCREEN_SPACE] = mViewMatrix.invers();
        m = new Matrix();
        m.setToUnit();
        if (mVoxelDim[0] > 0) {
            int min = 0;

            m.m[0] = 1 / mVoxelDim[0];
            m.m[5] = 1 / mVoxelDim[1];
            m.m[10] = 1 / mVoxelDim[2];
        }
        mAllMat[WORLD_SPACE][VOLUME_SPACE] = m;
        mAllMat[VOLUME_SPACE][WORLD_SPACE] = m.invers();
        mAllMat[SCREEN_SPACE][VOLUME_SPACE] = m = m.premult(mViewMatrix);
        mAllMat[VOLUME_SPACE][SCREEN_SPACE] = m.invers();

!!!38786487.java!!!	setVoxelDim(inout volDim : float) : void
        mVoxelDim[0] = volDim[0];
        mVoxelDim[1] = volDim[1];
        mVoxelDim[2] = volDim[2];
!!!38786615.java!!!	getMatrix(in from : char, in to : char) : Matrix
        return mAllMat[from][to];
!!!38786743.java!!!	setScreenDim(in x : int, in y : int) : void
        mViewMatrix.setScreenDim(x, y);
        updateAllMatrix();
!!!38786871.java!!!	getLookPoint() : double
        return mViewMatrix.getLookPoint();
!!!38786999.java!!!	setLookPoint(inout mLookPoint : double) : void
        mViewMatrix.setLookPoint(mLookPoint);
        updateAllMatrix();
!!!38787127.java!!!	getEyePoint() : double
        return mViewMatrix.getEyePoint();
!!!38787255.java!!!	setEyePoint(inout mEyePoint : double) : void
        mViewMatrix.setEyePoint(mEyePoint);
        updateAllMatrix();
!!!38787383.java!!!	getUpVector() : double
        return mViewMatrix.getUpVector();
!!!38787511.java!!!	setUpVector(inout mUpVector : double) : void
        mViewMatrix.setUpVector(mUpVector);
        updateAllMatrix();
!!!38787639.java!!!	getScreenWidth() : double
        return mViewMatrix.getScreenWidth();
!!!38787767.java!!!	setScreenWidth(in screenWidth : double) : void
        mViewMatrix.setScreenWidth(screenWidth);
        updateAllMatrix();
!!!38787895.java!!!	lookAt(inout tri : TriData, in w : int, in h : int) : void
        mViewMatrix.lookAt(tri, mVoxelDim, w, h);
        updateAllMatrix();
!!!38788023.java!!!	look(in dir : char, inout tri : TriData, in w : int, in h : int) : void
        mViewMatrix.look(dir, tri, mVoxelDim, w, h);
        updateAllMatrix();
!!!38788151.java!!!	trackBallUp(in x : float, in y : float) : void
        mViewMatrix.trackBallUP(x, y);
        updateAllMatrix();
!!!38788279.java!!!	trackBallDown(in x : float, in y : float) : void
        mViewMatrix.trackBallDown(x, y);
!!!38788407.java!!!	trackBallMove(in x : float, in y : float) : void
        mViewMatrix.trackBallMove(x, y);
        updateAllMatrix();
!!!38788535.java!!!	trim(in d : double) : String
        String s = df.format(d);
        return s.substring(s.length() - 6);
!!!38788663.java!!!	print(inout d : float) : void
        String s = "";
        for (int i = 0; i < d.length; i++) {
            s += (((i == 0) ? "[ " : " , ") + trim(d[i]));
        }
        Log.v(LOGTAG, s + "]");
!!!38788791.java!!!	main(inout args : String) : void
        int[] voldim = {50, 50, 100};
        double[] mEyePoint = {voldim[0] / 2., -voldim[1] / 2., voldim[2] / 2.};
        double[] mLookPoint = {voldim[0] / 2., voldim[1] / 2., voldim[2] / 2.};
        double[] mUpVector = {0., 0., 1.};

        Transform t = new Transform();
        t.mVoxelDim[0] = 1;
        t.setEyePoint(mEyePoint);
        t.setLookPoint(mLookPoint);
        t.setUpVector(mUpVector);
        t.setScreenDim(256, 256);
        t.setScreenWidth(128);
        t.updateAllMatrix();

        Matrix m = t.getMatrix(SCREEN_SPACE, VOLUME_SPACE);
        float[] orig = {.5f, .5f, 0};
        float[] ret = new float[3];

        m.mult3(orig, ret);
        print(ret);
        float[] look = {0, 0, 1};
        m.mult3v(look, ret);
        print(ret);
        float[] up = {1, 0, 0};
        m.mult3v(up, ret);
        print(ret);
        float[] right = {0, 1, 0};
        m.mult3v(right, ret);
        print(ret);

!!!38788919.java!!!	print() : void
        Log.v(LOGTAG, "==== =========== VIEW ========== ======");

        mViewMatrix.print();
        Log.v(LOGTAG, "==== SCREEN_SPACE to WORLD_SPACE ======");
        mAllMat[SCREEN_SPACE][WORLD_SPACE].print();
        Log.v(LOGTAG, "==== SCREEN_SPACE to VOLUME_SPACE ======");
        mAllMat[SCREEN_SPACE][VOLUME_SPACE].print();
        Log.v(LOGTAG, "==== WORLD_SPACE to VOLUME_SPACE ======");
        mAllMat[WORLD_SPACE][VOLUME_SPACE].print();
        Log.v(LOGTAG, "==== WORLD_SPACE to SCREEN_SPACE ======");
        mAllMat[WORLD_SPACE][SCREEN_SPACE].print();
        Log.v(LOGTAG, "==== VOLUME_SPACE to SCREEN_SPACE ======");
        mAllMat[VOLUME_SPACE][SCREEN_SPACE].print();
        Log.v(LOGTAG, "==== VOLUME_SPACE to WORLD_SPACE ======");
        mAllMat[VOLUME_SPACE][WORLD_SPACE].print();
        Log.v(LOGTAG, "=======================================");
