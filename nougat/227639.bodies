class EncodedField
!!!887991.java!!!	EncodedField(inout field : CstFieldRef, in accessFlags : int)
        super(accessFlags);

        if (field == null) {
            throw new NullPointerException("field == null");
        }

        /*
         * TODO: Maybe check accessFlags, at least for
         * easily-checked stuff?
         */

        this.field = field;
!!!888119.java!!!	hashCode() : int
        return field.hashCode();
!!!888247.java!!!	equals(inout other : Object) : boolean
        if (! (other instanceof EncodedField)) {
            return false;
        }

        return compareTo((EncodedField) other) == 0;
!!!888375.java!!!	compareTo(inout other : EncodedField) : int
        return field.compareTo(other.field);
!!!888503.java!!!	toString() : String
        StringBuffer sb = new StringBuffer(100);

        sb.append(getClass().getName());
        sb.append('{');
        sb.append(Hex.u2(getAccessFlags()));
        sb.append(' ');
        sb.append(field);
        sb.append('}');
        return sb.toString();
!!!888631.java!!!	addContents(inout file : DexFile) : void
        FieldIdsSection fieldIds = file.getFieldIds();
        fieldIds.intern(field);
!!!888759.java!!!	getName() : CstString
        return field.getNat().getName();
!!!888887.java!!!	toHuman() : String
        return field.toHuman();
!!!889015.java!!!	debugPrint(inout out : PrintWriter, inout verbose : boolean) : void
        // TODO: Maybe put something better here?
        out.println(toString());
!!!889143.java!!!	getRef() : CstFieldRef
        return field;
!!!889271.java!!!	encode(inout file : DexFile, inout out : AnnotatedOutput, in lastIndex : int, in dumpSeq : int) : int
        int fieldIdx = file.getFieldIds().indexOf(field);
        int diff = fieldIdx - lastIndex;
        int accessFlags = getAccessFlags();

        if (out.annotates()) {
            out.annotate(0, String.format("  [%x] %s", dumpSeq,
                            field.toHuman()));
            out.annotate(Leb128.unsignedLeb128Size(diff),
                    "    field_idx:    " + Hex.u4(fieldIdx));
            out.annotate(Leb128.unsignedLeb128Size(accessFlags),
                    "    access_flags: " +
                    AccessFlags.fieldString(accessFlags));
        }

        out.writeUleb128(diff);
        out.writeUleb128(accessFlags);

        return fieldIdx;
