class DecodedInstruction
!!!922551.java!!!	decode(inout in : CodeInput) : DecodedInstruction
        int opcodeUnit = in.read();
        int opcode = Opcodes.extractOpcodeFromUnit(opcodeUnit);
        InstructionCodec format = OpcodeInfo.getFormat(opcode);

        return format.decode(opcodeUnit, in);
!!!922679.java!!!	decodeAll(inout encodedInstructions : short) : DecodedInstruction
        int size = encodedInstructions.length;
        DecodedInstruction[] decoded = new DecodedInstruction[size];
        ShortArrayCodeInput in = new ShortArrayCodeInput(encodedInstructions);

        try {
            while (in.hasMore()) {
                decoded[in.cursor()] = DecodedInstruction.decode(in);
            }
        } catch (EOFException ex) {
            throw new DexException(ex);
        }

        return decoded;
!!!922807.java!!!	DecodedInstruction(inout format : InstructionCodec, in opcode : int, in index : int, inout indexType : IndexType, in target : int, in literal : long)
        if (format == null) {
            throw new NullPointerException("format == null");
        }

        if (!Opcodes.isValidShape(opcode)) {
            throw new IllegalArgumentException("invalid opcode");
        }

        this.format = format;
        this.opcode = opcode;
        this.index = index;
        this.indexType = indexType;
        this.target = target;
        this.literal = literal;
!!!922935.java!!!	getFormat() : InstructionCodec
        return format;
!!!923063.java!!!	getOpcode() : int
        return opcode;
!!!923191.java!!!	getOpcodeUnit() : short
        return (short) opcode;
!!!923319.java!!!	getIndex() : int
        return index;
!!!923447.java!!!	getIndexUnit() : short
        return (short) index;
!!!923575.java!!!	getIndexType() : IndexType
        return indexType;
!!!923703.java!!!	getTarget() : int
        return target;
!!!923831.java!!!	getTarget(in baseAddress : int) : int
        return target - baseAddress;
!!!923959.java!!!	getTargetUnit(in baseAddress : int) : short
        int relativeTarget = getTarget(baseAddress);

        if (relativeTarget != (short) relativeTarget) {
            throw new DexException("Target out of range: "
                    + Hex.s4(relativeTarget));
        }

        return (short) relativeTarget;
!!!924087.java!!!	getTargetByte(in baseAddress : int) : int
        int relativeTarget = getTarget(baseAddress);

        if (relativeTarget != (byte) relativeTarget) {
            throw new DexException("Target out of range: "
                    + Hex.s4(relativeTarget));
        }

        return relativeTarget & 0xff;
!!!924215.java!!!	getLiteral() : long
        return literal;
!!!924343.java!!!	getLiteralInt() : int
        if (literal != (int) literal) {
            throw new DexException("Literal out of range: " + Hex.u8(literal));
        }

        return (int) literal;
!!!924471.java!!!	getLiteralUnit() : short
        if (literal != (short) literal) {
            throw new DexException("Literal out of range: " + Hex.u8(literal));
        }

        return (short) literal;
!!!924599.java!!!	getLiteralByte() : int
        if (literal != (byte) literal) {
            throw new DexException("Literal out of range: " + Hex.u8(literal));
        }

        return (int) literal & 0xff;
!!!924727.java!!!	getLiteralNibble() : int
        if ((literal < -8) || (literal > 7)) {
            throw new DexException("Literal out of range: " + Hex.u8(literal));
        }

        return (int) literal & 0xf;
!!!924983.java!!!	getA() : int
        return 0;
!!!925111.java!!!	getB() : int
        return 0;
!!!925239.java!!!	getC() : int
        return 0;
!!!925367.java!!!	getD() : int
        return 0;
!!!925495.java!!!	getE() : int
        return 0;
!!!925623.java!!!	getRegisterCountUnit() : short
        int registerCount = getRegisterCount();

        if ((registerCount & ~0xffff) != 0) {
            throw new DexException("Register count out of range: "
                    + Hex.u8(registerCount));
        }

        return (short) registerCount;
!!!925751.java!!!	getAUnit() : short
        int a = getA();

        if ((a & ~0xffff) != 0) {
            throw new DexException("Register A out of range: " + Hex.u8(a));
        }

        return (short) a;
!!!925879.java!!!	getAByte() : short
        int a = getA();

        if ((a & ~0xff) != 0) {
            throw new DexException("Register A out of range: " + Hex.u8(a));
        }

        return (short) a;
!!!926007.java!!!	getANibble() : short
        int a = getA();

        if ((a & ~0xf) != 0) {
            throw new DexException("Register A out of range: " + Hex.u8(a));
        }

        return (short) a;
!!!926135.java!!!	getBUnit() : short
        int b = getB();

        if ((b & ~0xffff) != 0) {
            throw new DexException("Register B out of range: " + Hex.u8(b));
        }

        return (short) b;
!!!926263.java!!!	getBByte() : short
        int b = getB();

        if ((b & ~0xff) != 0) {
            throw new DexException("Register B out of range: " + Hex.u8(b));
        }

        return (short) b;
!!!926391.java!!!	getBNibble() : short
        int b = getB();

        if ((b & ~0xf) != 0) {
            throw new DexException("Register B out of range: " + Hex.u8(b));
        }

        return (short) b;
!!!926519.java!!!	getCUnit() : short
        int c = getC();

        if ((c & ~0xffff) != 0) {
            throw new DexException("Register C out of range: " + Hex.u8(c));
        }

        return (short) c;
!!!926647.java!!!	getCByte() : short
        int c = getC();

        if ((c & ~0xff) != 0) {
            throw new DexException("Register C out of range: " + Hex.u8(c));
        }

        return (short) c;
!!!926775.java!!!	getCNibble() : short
        int c = getC();

        if ((c & ~0xf) != 0) {
            throw new DexException("Register C out of range: " + Hex.u8(c));
        }

        return (short) c;
!!!926903.java!!!	getDUnit() : short
        int d = getD();

        if ((d & ~0xffff) != 0) {
            throw new DexException("Register D out of range: " + Hex.u8(d));
        }

        return (short) d;
!!!927031.java!!!	getDByte() : short
        int d = getD();

        if ((d & ~0xff) != 0) {
            throw new DexException("Register D out of range: " + Hex.u8(d));
        }

        return (short) d;
!!!927159.java!!!	getDNibble() : short
        int d = getD();

        if ((d & ~0xf) != 0) {
            throw new DexException("Register D out of range: " + Hex.u8(d));
        }

        return (short) d;
!!!927287.java!!!	getENibble() : short
        int e = getE();

        if ((e & ~0xf) != 0) {
            throw new DexException("Register E out of range: " + Hex.u8(e));
        }

        return (short) e;
!!!927415.java!!!	encode(inout out : CodeOutput) : void
        format.encode(this, out);
