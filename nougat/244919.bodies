class LocalVariableInfo
!!!1052727.java!!!	LocalVariableInfo(inout method : SsaMethod)
        if (method == null) {
            throw new NullPointerException("method == null");
        }

        List<SsaBasicBlock> blocks = method.getBlocks();

        this.regCount = method.getRegCount();
        this.emptySet = new RegisterSpecSet(regCount);
        this.blockStarts = new RegisterSpecSet[blocks.size()];
        this.insnAssignments =
            new HashMap<SsaInsn, RegisterSpec>(/*hint here*/);

        emptySet.setImmutable();
!!!1052855.java!!!	setStarts(in index : int, inout specs : RegisterSpecSet) : void
        throwIfImmutable();

        if (specs == null) {
            throw new NullPointerException("specs == null");
        }

        try {
            blockStarts[index] = specs;
        } catch (ArrayIndexOutOfBoundsException ex) {
            // Translate the exception.
            throw new IllegalArgumentException("bogus index");
        }
!!!1052983.java!!!	mergeStarts(in index : int, inout specs : RegisterSpecSet) : boolean
        RegisterSpecSet start = getStarts0(index);
        boolean changed = false;

        if (start == null) {
            setStarts(index, specs);
            return true;
        }

        RegisterSpecSet newStart = start.mutableCopy();
        newStart.intersect(specs, true);

        if (start.equals(newStart)) {
            return false;
        }

        newStart.setImmutable();
        setStarts(index, newStart);

        return true;
!!!1053111.java!!!	getStarts(in index : int) : RegisterSpecSet
        RegisterSpecSet result = getStarts0(index);

        return (result != null) ? result : emptySet;
!!!1053239.java!!!	getStarts(inout block : SsaBasicBlock) : RegisterSpecSet
        return getStarts(block.getIndex());
!!!1053367.java!!!	mutableCopyOfStarts(in index : int) : RegisterSpecSet
        RegisterSpecSet result = getStarts0(index);

        return (result != null) ?
            result.mutableCopy() : new RegisterSpecSet(regCount);
!!!1053495.java!!!	addAssignment(inout insn : SsaInsn, inout spec : RegisterSpec) : void
        throwIfImmutable();

        if (insn == null) {
            throw new NullPointerException("insn == null");
        }

        if (spec == null) {
            throw new NullPointerException("spec == null");
        }

        insnAssignments.put(insn, spec);
!!!1053623.java!!!	getAssignment(inout insn : SsaInsn) : RegisterSpec
        return insnAssignments.get(insn);
!!!1053751.java!!!	getAssignmentCount() : int
        return insnAssignments.size();
!!!1053879.java!!!	debugDump() : void
        for (int index = 0 ; index < blockStarts.length; index++) {
            if (blockStarts[index] == null) {
                continue;
            }

            if (blockStarts[index] == emptySet) {
                System.out.printf("%04x: empty set\n", index);
            } else {
                System.out.printf("%04x: %s\n", index, blockStarts[index]);
            }
        }
!!!1054007.java!!!	getStarts0(in index : int) : RegisterSpecSet
        try {
            return blockStarts[index];
        } catch (ArrayIndexOutOfBoundsException ex) {
            // Translate the exception.
            throw new IllegalArgumentException("bogus index");
        }
