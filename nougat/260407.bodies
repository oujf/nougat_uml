class Leb128UtilsTest
!!!1149495.java!!!	testDecodeUnsignedLeb() : void
        assertEquals(0, Leb128.readUnsignedLeb128(new ByteArrayByteInput((byte) 0)));
        assertEquals(1, Leb128.readUnsignedLeb128(new ByteArrayByteInput((byte) 1)));
        assertEquals(127, Leb128.readUnsignedLeb128(new ByteArrayByteInput((byte) 0x7f)));
        assertEquals(16256, Leb128.readUnsignedLeb128(
                new ByteArrayByteInput((byte) 0x80, (byte) 0x7f)));
!!!1149623.java!!!	testEncodeUnsignedLeb() : void
        assertEquals(new byte[] { 0 }, encodeUnsignedLeb(0));
        assertEquals(new byte[] { 1 }, encodeUnsignedLeb(1));
        assertEquals(new byte[] { 0x7f }, encodeUnsignedLeb(127));
        assertEquals(new byte[] { (byte) 0x80, 0x7f }, encodeUnsignedLeb(16256));
        assertEquals(new byte[] { (byte) 0xb4, 0x07 }, encodeUnsignedLeb(0x3b4));
        assertEquals(new byte[] { (byte) 0x8c, 0x08 }, encodeUnsignedLeb(0x40c));
        assertEquals(new byte[] { (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, 0xf },
                encodeUnsignedLeb(0xffffffff));
!!!1149751.java!!!	testDecodeSignedLeb() : void
        assertEquals(0, Leb128.readSignedLeb128(new ByteArrayByteInput((byte) 0)));
        assertEquals(1, Leb128.readSignedLeb128(new ByteArrayByteInput((byte) 1)));
        assertEquals(-1, Leb128.readSignedLeb128(new ByteArrayByteInput((byte) 0x7f)));
        assertEquals(0x3c, Leb128.readSignedLeb128(new ByteArrayByteInput((byte) 0x3c)));
        assertEquals(-128, Leb128.readSignedLeb128(
                new ByteArrayByteInput((byte) 0x80, (byte) 0x7f)));
!!!1149879.java!!!	testEncodeSignedLeb() : void
        assertEquals(new byte[] { 0 }, encodeSignedLeb(0));
        assertEquals(new byte[] { 1 }, encodeSignedLeb(1));
        assertEquals(new byte[] { 0x7f }, encodeSignedLeb(-1));
        assertEquals(new byte[] { (byte) 0x80, 0x7f }, encodeSignedLeb(-128));
!!!1150007.java!!!	encodeSignedLeb(in value : int) : byte
        ByteArrayAnnotatedOutput out = new ByteArrayAnnotatedOutput(5);
        Leb128.writeSignedLeb128(out, value);
        return out.toByteArray();
!!!1150135.java!!!	encodeUnsignedLeb(in value : int) : byte
        ByteArrayAnnotatedOutput out = new ByteArrayAnnotatedOutput(5);
        Leb128.writeUnsignedLeb128(out, value);
        return out.toByteArray();
!!!1150263.java!!!	assertEquals(inout expected : byte, inout actual : byte) : void
        assertTrue(Arrays.toString(actual), Arrays.equals(expected, actual));
