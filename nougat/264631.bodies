class UsbManager
!!!28149943.java!!!	UsbManager(inout context : Context, inout service : IUsbManager)
        mContext = context;
        mService = service;
!!!28150071.java!!!	getInstance(inout context : Context) : UsbManager
        IBinder b = ServiceManager.getService(Context.USB_SERVICE);
        return new UsbManager(context, IUsbManager.Stub.asInterface(b));
!!!28150199.java!!!	getAccessory(inout intent : Intent) : UsbAccessory
        android.hardware.usb.UsbAccessory accessory =
            intent.getParcelableExtra(android.hardware.usb.UsbManager.EXTRA_ACCESSORY);
        if (accessory == null) {
            return null;
        } else {
            return new UsbAccessory(accessory);
        }
!!!28150327.java!!!	getAccessoryList() : UsbAccessory
        try {
            android.hardware.usb.UsbAccessory accessory = mService.getCurrentAccessory();
            if (accessory == null) {
                return null;
            } else {
                return new UsbAccessory[] { new UsbAccessory(accessory) };
            }
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in getAccessoryList" , e);
            return null;
        }
!!!28150455.java!!!	openAccessory(inout accessory : UsbAccessory) : ParcelFileDescriptor
        try {
            return mService.openAccessory(new android.hardware.usb.UsbAccessory(
                    accessory.getManufacturer(),accessory.getModel(),
                    accessory.getDescription(), accessory.getVersion(),
                    accessory.getUri(), accessory.getSerial()));
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in openAccessory" , e);
            return null;
        }
!!!28150583.java!!!	hasPermission(inout accessory : UsbAccessory) : boolean
        try {
            return mService.hasAccessoryPermission(new android.hardware.usb.UsbAccessory(
                    accessory.getManufacturer(),accessory.getModel(),
                    accessory.getDescription(), accessory.getVersion(),
                    accessory.getUri(), accessory.getSerial()));
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in hasPermission", e);
            return false;
        }
!!!28150711.java!!!	requestPermission(inout accessory : UsbAccessory, inout pi : PendingIntent) : void
        try {
            mService.requestAccessoryPermission(new android.hardware.usb.UsbAccessory(
                    accessory.getManufacturer(),accessory.getModel(),
                    accessory.getDescription(), accessory.getVersion(),
                    accessory.getUri(), accessory.getSerial()),
                    mContext.getPackageName(), pi);
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in requestPermission", e);
        }
