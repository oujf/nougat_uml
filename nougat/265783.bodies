class ColorLEDController
!!!1170231.java!!!	ColorLEDController(inout activity : DemoKitActivity, in number : int, inout res : Resources, inout vertical : boolean)
		mActivity = activity;
		mLEDNumber = number;
		if (vertical) {
			mRed = res.getDrawable(R.drawable.scrubber_vertical_red_holo_dark);
			mGreen = res
					.getDrawable(R.drawable.scrubber_vertical_green_holo_dark);
			mBlue = res
					.getDrawable(R.drawable.scrubber_vertical_blue_holo_dark);
		} else {
			mRed = res
					.getDrawable(R.drawable.scrubber_horizontal_red_holo_dark);
			mGreen = res
					.getDrawable(R.drawable.scrubber_horizontal_green_holo_dark);
			mBlue = res
					.getDrawable(R.drawable.scrubber_horizontal_blue_holo_dark);
		}
!!!1170359.java!!!	attachToView(inout targetView : ViewGroup) : void
		for (int i = 0; i < 3; ++i) {
			ViewGroup g = (ViewGroup) targetView.getChildAt(i);
			TextView label = (TextView) g.getChildAt(0);
			Slider slider = (Slider) g.getChildAt(1);
			TextView valueText = (TextView) g.getChildAt(2);
			SliderPositionListener positionListener = new LedValueUpdater(
					valueText, i);
			slider.setPositionListener(positionListener);
			LabelClickListener leftLabelListener = new LabelClickListener(
					slider, 0);
			label.setOnClickListener(leftLabelListener);
			LabelClickListener rightLabelListener = new LabelClickListener(
					slider, 1);
			valueText.setOnClickListener(rightLabelListener);
			valueText.setText("0");
			if (i == 0) {
				String labelText = "Led";
				SpannableStringBuilder ssb = new SpannableStringBuilder(
						labelText);
				ssb.append(String.valueOf(mLEDNumber));
				int spanStart = labelText.length();
				int spanEnd = spanStart + 1;
				ssb.setSpan(new SubscriptSpan(), spanStart, spanEnd, 0);
				ssb.setSpan(new RelativeSizeSpan(0.7f), spanStart, spanEnd, 0);
				label.setText(ssb);
				slider.setSliderBackground(mRed);
			} else {
				label.setText("");
				if (i == 1) {
					slider.setSliderBackground(mGreen);
				} else {
					slider.setSliderBackground(mBlue);
				}
			}
		}
