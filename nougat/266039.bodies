class Slider
!!!1168695.java!!!	Slider(inout context : Context)
		super(context);
		initSliderView(context, false);
!!!1168823.java!!!	Slider(inout context : Context, inout attrs : AttributeSet)
		super(context, attrs);
		initSliderView(context, false);
!!!1168951.java!!!	setSliderBackground(inout background : Drawable) : void
		mBackground = background;
		invalidate();
!!!1169079.java!!!	setPositionListener(inout listener : Slider::SliderPositionListener) : void
		mListener = listener;
!!!1169207.java!!!	setPosition(in position : double) : void
		if (mPosition != position) {
			invalidate();
			mPosition = position;
			if (mListener != null) {
				mListener.onPositionChange(mPosition);
			}
		}
!!!1169335.java!!!	initSliderView(inout context : Context, inout vertical : boolean) : void
		mPosition = 0;
		mVertical = vertical;
		Resources res = context.getResources();
		if (mVertical) {
			mBackground = res
					.getDrawable(R.drawable.scrubber_vertical_blue_holo_dark);
		} else {
			mBackground = res
					.getDrawable(R.drawable.scrubber_horizontal_holo_dark);
		}
		mIndicator = res.getDrawable(R.drawable.scrubber_control_holo_dark);
		this.setOnTouchListener(mClickListener);
!!!1169463.java!!!	onDraw(inout canvas : Canvas) : void
		Rect r = new Rect();
		getDrawingRect(r);
		if (mVertical) {
			int lineX = r.centerX();
			int bgW = mBackground.getIntrinsicWidth() / 2;
			if (bgW == 0) {
				bgW = 5;
			}
			mBackground.setBounds(lineX - bgW, r.top + 10, lineX + bgW,
					r.bottom - 10);
			mBackground.draw(canvas);
			final int kMargin = 48;
			int indicatorY = (int) (r.bottom - (r.height() - kMargin)
					* mPosition)
					- kMargin / 2;
			Utilities.centerAround(lineX, indicatorY, mIndicator);
			mIndicator.draw(canvas);
		} else {
			int lineY = r.centerY();
			int bgH = mBackground.getIntrinsicHeight() / 2;
			if (bgH == 0) {
				bgH = 5;
			}
			mBackground.setBounds(r.left + 10, lineY - bgH, r.right - 10, lineY
					+ bgH);
			mBackground.draw(canvas);
			final int kMargin = 48;
			int indicatorX = (int) ((r.width() - kMargin) * mPosition) + r.left
					+ kMargin / 2;
			Utilities.centerAround(indicatorX, lineY, mIndicator);
			mIndicator.draw(canvas);
		}
!!!1169591.java!!!	onMeasure(in widthMeasureSpec : int, in heightMeasureSpec : int) : void
		super.onMeasure(widthMeasureSpec, heightMeasureSpec);
		if (mVertical) {
			setMeasuredDimension(mIndicator.getIntrinsicWidth(),
					getMeasuredHeight());
		} else {
			setMeasuredDimension(getMeasuredWidth(),
					mIndicator.getIntrinsicHeight());
		}
