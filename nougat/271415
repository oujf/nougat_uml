format 76
"nan" // nougat_src::frameworks::base::core::java::android::net::wifi::nan
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/wifi/java/android/net/wifi/nan/"
  java_package "android.net.wifi.nan"
  classview 255031 "nan"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1899063 "ConfigRequest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines a request object to configure a Wi-Fi NAN network. Built using
{@link ConfigRequest.Builder}. Configuration is requested using
{@link WifiNanManager#requestConfig(ConfigRequest)}. Note that the actual
achieved configuration may be different from the requested configuration -
since multiple applications may request different configurations.

@hide PROPOSED_NAN_API"
      classrelation 6010167 // <realization>
	relation 6010167 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6010167 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 6423863 "CLUSTER_ID_MIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Lower range of possible cluster ID.

@hide
"
      end

      attribute 6423991 "CLUSTER_ID_MAX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xFFFF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Upper range of possible cluster ID.

@hide
"
      end

      attribute 6424119 "mSupport5gBand"
	const_attribute public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates whether 5G band support is requested.

@hide
"
      end

      attribute 6424247 "mMasterPreference"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specifies the desired master preference.

@hide
"
      end

      attribute 6424375 "mClusterLow"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specifies the desired lower range of the cluster ID. Must be lower then
{@link ConfigRequest#mClusterHigh}.

@hide
"
      end

      attribute 6424503 "mClusterHigh"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specifies the desired higher range of the cluster ID. Must be higher then
{@link ConfigRequest#mClusterLow}.

@hide
"
      end

      operation 35708343 "ConfigRequest"
	private explicit_return_type ""
	nparams 4
	  param inout name "support5gBand" explicit_type "boolean"
	  param in name "masterPreference" explicit_type "int"
	  param in name "clusterLow" explicit_type "int"
	  param in name "clusterHigh" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35708471 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35708599 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35708727 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 6010295 // CREATOR (<unidirectional association>)
	relation 6010295 --->
	  a role_name "CREATOR" init_value " new Creator<ConfigRequest>() {
        @Override
        public ConfigRequest[] newArray(int size) {
            return new ConfigRequest[size];
        }

        @Override
        public ConfigRequest createFromParcel(Parcel in) {
            boolean support5gBand = in.readInt() != 0;
            int masterPreference = in.readInt();
            int clusterLow = in.readInt();
            int clusterHigh = in.readInt();
            return new ConfigRequest(support5gBand, masterPreference, clusterLow, clusterHigh);
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ConfigRequest> ${name}${value};
"
	    classrelation_ref 6010295 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 35708855 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35708983 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 1899191 "Builder"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 6424631 "mSupport5gBand"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6424759 "mMasterPreference"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6424887 "mClusterLow"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6425015 "mClusterHigh"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 35709111 "Builder"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Default constructor for the Builder."
	end

	operation 35709239 "setSupport5gBand"
	  public return_type class_ref 1899191 // Builder
	  nparams 1
	    param inout name "support5gBand" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Specify whether 5G band support is required in this request.

@param support5gBand Support for 5G band is required.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35709367 "setMasterPreference"
	  public return_type class_ref 1899191 // Builder
	  nparams 1
	    param in name "masterPreference" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Specify the Master Preference requested. The permitted range is 0 to
255 with 1 and 255 excluded (reserved).

@param masterPreference The requested master preference
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35709495 "setClusterLow"
	  public return_type class_ref 1899191 // Builder
	  nparams 1
	    param in name "clusterLow" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The Cluster ID is generated randomly for new NAN networks. Specify
the lower range of the cluster ID. The upper range is specified using
the {@link ConfigRequest.Builder#setClusterHigh(int)}. The permitted
range is 0 to the value specified by
{@link ConfigRequest.Builder#setClusterHigh(int)}. Equality is
permitted which restricts the Cluster ID to the specified value.

@param clusterLow The lower range of the generated cluster ID.
@return The builder to facilitate chaining
        {@code builder.setClusterLow(..).setClusterHigh(..)}."
	end

	operation 35709623 "setClusterHigh"
	  public return_type class_ref 1899191 // Builder
	  nparams 1
	    param in name "clusterHigh" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The Cluster ID is generated randomly for new NAN networks. Specify
the lower upper of the cluster ID. The lower range is specified using
the {@link ConfigRequest.Builder#setClusterLow(int)}. The permitted
range is the value specified by
{@link ConfigRequest.Builder#setClusterLow(int)} to 0xFFFF. Equality
is permitted which restricts the Cluster ID to the specified value.

@param clusterHigh The upper range of the generated cluster ID.
@return The builder to facilitate chaining
        {@code builder.setClusterLow(..).setClusterHigh(..)}."
	end

	operation 35709751 "build"
	  public return_type class_ref 1899063 // ConfigRequest
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Build {@link ConfigRequest} given the current requests made on the
builder."
	end
      end
    end

    class 1899319 "PublishData"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the data for a NAN publish session. Built using
{@link PublishData.Builder}. Publish is done using
{@link WifiNanManager#publish(PublishData, PublishSettings, WifiNanSessionListener, int)}
or {@link WifiNanPublishSession#publish(PublishData, PublishSettings)}.
@hide PROPOSED_NAN_API"
      classrelation 6010423 // <realization>
	relation 6010423 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6010423 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 6010551 // mServiceName (<unidirectional association>)
	relation 6010551 --->
	  a role_name "mServiceName" const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6010551 // mServiceName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6425143 "mServiceSpecificInfoLength"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6425271 "mServiceSpecificInfo"
	const_attribute public explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6425399 "mTxFilterLength"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6425527 "mTxFilter"
	const_attribute public explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6425655 "mRxFilterLength"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6425783 "mRxFilter"
	const_attribute public explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      operation 35709879 "PublishData"
	private explicit_return_type ""
	nparams 7
	  param inout name "serviceName" type class_ref 129591 // String
	  param inout name "serviceSpecificInfo" explicit_type "byte"
	  param in name "serviceSpecificInfoLength" explicit_type "int"
	  param inout name "txFilter" explicit_type "byte"
	  param in name "txFilterLength" explicit_type "int"
	  param inout name "rxFilter" explicit_type "byte"
	  param in name "rxFilterLength" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35710007 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35710135 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35710263 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 6010679 // CREATOR (<unidirectional association>)
	relation 6010679 --->
	  a role_name "CREATOR" init_value " new Creator<PublishData>() {
        @Override
        public PublishData[] newArray(int size) {
            return new PublishData[size];
        }

        @Override
        public PublishData createFromParcel(Parcel in) {
            String serviceName = in.readString();
            int ssiLength = in.readInt();
            byte[] ssi = new byte[ssiLength];
            if (ssiLength != 0) {
                in.readByteArray(ssi);
            }
            int txFilterLength = in.readInt();
            byte[] txFilter = new byte[txFilterLength];
            if (txFilterLength != 0) {
                in.readByteArray(txFilter);
            }
            int rxFilterLength = in.readInt();
            byte[] rxFilter = new byte[rxFilterLength];
            if (rxFilterLength != 0) {
                in.readByteArray(rxFilter);
            }

            return new PublishData(serviceName, ssi, ssiLength, txFilter, txFilterLength, rxFilter,
                    rxFilterLength);
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PublishData> ${name}${value};
"
	    classrelation_ref 6010679 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 35710391 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35710519 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 1899447 "Builder"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6010807 // mServiceName (<unidirectional association>)
	  relation 6010807 --->
	    a role_name "mServiceName" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6010807 // mServiceName (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 6425911 "mServiceSpecificInfoLength"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6426039 "mServiceSpecificInfo"
	  private explicit_type "byte"
	  multiplicity "[]"
	  init_value " new byte[0]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6426167 "mTxFilterLength"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6426295 "mTxFilter"
	  private explicit_type "byte"
	  multiplicity "[]"
	  init_value " new byte[0]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6426423 "mRxFilterLength"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6426551 "mRxFilter"
	  private explicit_type "byte"
	  multiplicity "[]"
	  init_value " new byte[0]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 35710647 "setServiceName"
	  public return_type class_ref 1899447 // Builder
	  nparams 1
	    param inout name "serviceName" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Specify the service name of the publish session. The actual on-air
value is a 6 byte hashed representation of this string.

@param serviceName The service name for the publish session.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35710775 "setServiceSpecificInfo"
	  public return_type class_ref 1899447 // Builder
	  nparams 2
	    param inout name "serviceSpecificInfo" explicit_type "byte"
	    param in name "serviceSpecificInfoLength" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Specify service specific information for the publish session. This is
a free-form byte array available to the application to send
additional information as part of the discovery operation - i.e. it
will not be used to determine whether a publish/subscribe match
occurs.

@param serviceSpecificInfo A byte-array for the service-specific
           information field.
@param serviceSpecificInfoLength The length of the byte-array to be
           used.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35710903 "setServiceSpecificInfo"
	  public return_type class_ref 1899447 // Builder
	  nparams 1
	    param inout name "serviceSpecificInfoStr" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Specify service specific information for the publish session - same
as {@link PublishData.Builder#setServiceSpecificInfo(byte[], int)}
but obtaining the data from a String.

@param serviceSpecificInfoStr The service specific information string
           to be included (as a byte array) in the publish
           information.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35711031 "setTxFilter"
	  public return_type class_ref 1899447 // Builder
	  nparams 2
	    param inout name "txFilter" explicit_type "byte"
	    param in name "txFilterLength" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The transmit filter for an active publish session
{@link PublishSettings.Builder#setPublishType(int)} and
{@link PublishSettings#PUBLISH_TYPE_UNSOLICITED}. Included in
transmitted publish packets and used by receivers (subscribers) to
determine whether they match - in addition to just relying on the
service name.
<p>
Format is an LV byte array - the {@link TlvBufferUtils} utility class
is available to form and parse.

@param txFilter The byte-array containing the LV formatted transmit
           filter.
@param txFilterLength The number of bytes in the transmit filter
           argument.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35711159 "setRxFilter"
	  public return_type class_ref 1899447 // Builder
	  nparams 2
	    param inout name "rxFilter" explicit_type "byte"
	    param in name "rxFilterLength" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The transmit filter for a passive publish session
{@link PublishSettings.Builder#setPublishType(int)} and
{@link PublishSettings#PUBLISH_TYPE_SOLICITED}. Used by the publisher
to determine whether they match transmitted subscriber packets
(active subscribers) - in addition to just relying on the service
name.
<p>
Format is an LV byte array - the {@link TlvBufferUtils} utility class
is available to form and parse.

@param rxFilter The byte-array containing the LV formatted receive
           filter.
@param rxFilterLength The number of bytes in the receive filter
           argument.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35711287 "build"
	  public return_type class_ref 1899319 // PublishData
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Build {@link PublishData} given the current requests made on the
builder."
	end
      end
    end

    class 1899575 "PublishSettings"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the settings (configuration) for a NAN publish session. Built using
{@link PublishSettings.Builder}. Publish is done using
{@link WifiNanManager#publish(PublishData, PublishSettings, WifiNanSessionListener, int)}
or {@link WifiNanPublishSession#publish(PublishData, PublishSettings)}.

@hide PROPOSED_NAN_API"
      classrelation 6010935 // <realization>
	relation 6010935 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6010935 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 6426679 "PUBLISH_TYPE_UNSOLICITED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines an unsolicited publish session - i.e. a publish session where
publish packets are transmitted over-the-air. Configuration is done using
{@link PublishSettings.Builder#setPublishType(int)}.
"
      end

      attribute 6426807 "PUBLISH_TYPE_SOLICITED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines a solicited publish session - i.e. a publish session where
publish packets are not transmitted over-the-air and the device listens
and matches to transmitted subscribe packets. Configuration is done using
{@link PublishSettings.Builder#setPublishType(int)}.
"
      end

      attribute 6426935 "mPublishType"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6427063 "mPublishCount"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6427191 "mTtlSec"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      operation 35711415 "PublishSettings"
	private explicit_return_type ""
	nparams 3
	  param in name "publishType" explicit_type "int"
	  param in name "publichCount" explicit_type "int"
	  param in name "ttlSec" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35711543 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35711671 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35711799 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 6011063 // CREATOR (<unidirectional association>)
	relation 6011063 --->
	  a role_name "CREATOR" init_value " new Creator<PublishSettings>() {
        @Override
        public PublishSettings[] newArray(int size) {
            return new PublishSettings[size];
        }

        @Override
        public PublishSettings createFromParcel(Parcel in) {
            int publishType = in.readInt();
            int publishCount = in.readInt();
            int ttlSec = in.readInt();
            return new PublishSettings(publishType, publishCount, ttlSec);
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PublishSettings> ${name}${value};
"
	    classrelation_ref 6011063 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 35711927 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35712055 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 1899703 "Builder"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 6427319 "mPublishType"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6427447 "mPublishCount"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6427575 "mTtlSec"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 35712183 "setPublishType"
	  public return_type class_ref 1899703 // Builder
	  nparams 1
	    param in name "publishType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the type of the publish session: solicited (aka active - publish
packets are transmitted over-the-air), or unsolicited (aka passive -
no publish packets are transmitted, a match is made against an active
subscribe session whose packets are transmitted over-the-air).

@param publishType Publish session type: solicited (
           {@link PublishSettings#PUBLISH_TYPE_SOLICITED}) or
           unsolicited (
           {@link PublishSettings#PUBLISH_TYPE_UNSOLICITED}).
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35712311 "setPublishCount"
	  public return_type class_ref 1899703 // Builder
	  nparams 1
	    param in name "publishCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the number of times a solicited (
{@link PublishSettings.Builder#setPublishType(int)}) publish session
will transmit a packet. When the count is reached an event will be
generated for {@link WifiNanSessionListener#onPublishTerminated(int)}
with reason={@link WifiNanSessionListener#TERMINATE_REASON_DONE}.

@param publishCount Number of publish packets to transmit.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35712439 "setTtlSec"
	  public return_type class_ref 1899703 // Builder
	  nparams 1
	    param in name "ttlSec" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the time interval (in seconds) a solicited (
{@link PublishSettings.Builder#setPublishCount(int)}) publish session
will be alive - i.e. transmitting a packet. When the TTL is reached
an event will be generated for
{@link WifiNanSessionListener#onPublishTerminated(int)} with reason=
{@link WifiNanSessionListener#TERMINATE_REASON_DONE}.

@param ttlSec Lifetime of a publish session in seconds.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35712567 "build"
	  public return_type class_ref 1899575 // PublishSettings
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Build {@link PublishSettings} given the current requests made on the
builder."
	end
      end
    end

    class 1899831 "SubscribeData"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the data for a NAN subscribe session. Built using
{@link SubscribeData.Builder}. Subscribe is done using
{@link WifiNanManager#subscribe(SubscribeData, SubscribeSettings, WifiNanSessionListener, int)}
or
{@link WifiNanSubscribeSession#subscribe(SubscribeData, SubscribeSettings)}.
@hide PROPOSED_NAN_API"
      classrelation 6011191 // <realization>
	relation 6011191 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6011191 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      classrelation 6011319 // mServiceName (<unidirectional association>)
	relation 6011319 --->
	  a role_name "mServiceName" const_relation public
	    comment "
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6011319 // mServiceName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6427703 "mServiceSpecificInfoLength"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6427831 "mServiceSpecificInfo"
	const_attribute public explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6427959 "mTxFilterLength"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6428087 "mTxFilter"
	const_attribute public explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6428215 "mRxFilterLength"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6428343 "mRxFilter"
	const_attribute public explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      operation 35712695 "SubscribeData"
	private explicit_return_type ""
	nparams 7
	  param inout name "serviceName" type class_ref 129591 // String
	  param inout name "serviceSpecificInfo" explicit_type "byte"
	  param in name "serviceSpecificInfoLength" explicit_type "int"
	  param inout name "txFilter" explicit_type "byte"
	  param in name "txFilterLength" explicit_type "int"
	  param inout name "rxFilter" explicit_type "byte"
	  param in name "rxFilterLength" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35712823 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35712951 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35713079 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 6011447 // CREATOR (<unidirectional association>)
	relation 6011447 --->
	  a role_name "CREATOR" init_value " new Creator<SubscribeData>() {
        @Override
        public SubscribeData[] newArray(int size) {
            return new SubscribeData[size];
        }

        @Override
        public SubscribeData createFromParcel(Parcel in) {
            String serviceName = in.readString();
            int ssiLength = in.readInt();
            byte[] ssi = new byte[ssiLength];
            if (ssiLength != 0) {
                in.readByteArray(ssi);
            }
            int txFilterLength = in.readInt();
            byte[] txFilter = new byte[txFilterLength];
            if (txFilterLength != 0) {
                in.readByteArray(txFilter);
            }
            int rxFilterLength = in.readInt();
            byte[] rxFilter = new byte[rxFilterLength];
            if (rxFilterLength != 0) {
                in.readByteArray(rxFilter);
            }

            return new SubscribeData(serviceName, ssi, ssiLength, txFilter, txFilterLength,
                    rxFilter, rxFilterLength);
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SubscribeData> ${name}${value};
"
	    classrelation_ref 6011447 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 35713207 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35713335 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 1899959 "Builder"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6011575 // mServiceName (<unidirectional association>)
	  relation 6011575 --->
	    a role_name "mServiceName" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6011575 // mServiceName (<unidirectional association>)
	    b parent class_ref 129591 // String
	end

	attribute 6428471 "mServiceSpecificInfoLength"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6428599 "mServiceSpecificInfo"
	  private explicit_type "byte"
	  multiplicity "[]"
	  init_value " new byte[0]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6428727 "mTxFilterLength"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6428855 "mTxFilter"
	  private explicit_type "byte"
	  multiplicity "[]"
	  init_value " new byte[0]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6428983 "mRxFilterLength"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6429111 "mRxFilter"
	  private explicit_type "byte"
	  multiplicity "[]"
	  init_value " new byte[0]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 35713463 "setServiceName"
	  public return_type class_ref 1899959 // Builder
	  nparams 1
	    param inout name "serviceName" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Specify the service name of the subscribe session. The actual on-air
value is a 6 byte hashed representation of this string.

@param serviceName The service name for the subscribe session.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35713591 "setServiceSpecificInfo"
	  public return_type class_ref 1899959 // Builder
	  nparams 2
	    param inout name "serviceSpecificInfo" explicit_type "byte"
	    param in name "serviceSpecificInfoLength" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Specify service specific information for the subscribe session. This
is a free-form byte array available to the application to send
additional information as part of the discovery operation - i.e. it
will not be used to determine whether a publish/subscribe match
occurs.

@param serviceSpecificInfo A byte-array for the service-specific
           information field.
@param serviceSpecificInfoLength The length of the byte-array to be
           used.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35713719 "setServiceSpecificInfo"
	  public return_type class_ref 1899959 // Builder
	  nparams 1
	    param inout name "serviceSpecificInfoStr" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Specify service specific information for the subscribe session - same
as {@link SubscribeData.Builder#setServiceSpecificInfo(byte[], int)}
but obtaining the data from a String.

@param serviceSpecificInfoStr The service specific information string
           to be included (as a byte array) in the subscribe
           information.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35713847 "setTxFilter"
	  public return_type class_ref 1899959 // Builder
	  nparams 2
	    param inout name "txFilter" explicit_type "byte"
	    param in name "txFilterLength" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The transmit filter for an active subscribe session
{@link SubscribeSettings.Builder#setSubscribeType(int)} and
{@link SubscribeSettings#SUBSCRIBE_TYPE_ACTIVE}. Included in
transmitted subscribe packets and used by receivers (passive
publishers) to determine whether they match - in addition to just
relying on the service name.
<p>
Format is an LV byte array - the {@link TlvBufferUtils} utility class
is available to form and parse.

@param txFilter The byte-array containing the LV formatted transmit
           filter.
@param txFilterLength The number of bytes in the transmit filter
           argument.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35713975 "setRxFilter"
	  public return_type class_ref 1899959 // Builder
	  nparams 2
	    param inout name "rxFilter" explicit_type "byte"
	    param in name "rxFilterLength" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The transmit filter for a passive subsribe session
{@link SubscribeSettings.Builder#setSubscribeType(int)} and
{@link SubscribeSettings#SUBSCRIBE_TYPE_PASSIVE}. Used by the
subscriber to determine whether they match transmitted publish
packets - in addition to just relying on the service name.
<p>
Format is an LV byte array - the {@link TlvBufferUtils} utility class
is available to form and parse.

@param rxFilter The byte-array containing the LV formatted receive
           filter.
@param rxFilterLength The number of bytes in the receive filter
           argument.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35714103 "build"
	  public return_type class_ref 1899831 // SubscribeData
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Build {@link SubscribeData} given the current requests made on the
builder."
	end
      end
    end

    class 1900087 "SubscribeSettings"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the settings (configuration) for a NAN subscribe session. Built using
{@link SubscribeSettings.Builder}. Subscribe is done using
{@link WifiNanManager#subscribe(SubscribeData, SubscribeSettings, WifiNanSessionListener, int)}
or {@link WifiNanSubscribeSession#subscribe(SubscribeData, SubscribeSettings)}.

@hide PROPOSED_NAN_API"
      classrelation 6011703 // <realization>
	relation 6011703 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6011703 // <realization>
	  b parent class_ref 137399 // Parcelable
      end

      attribute 6429239 "SUBSCRIBE_TYPE_PASSIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines a passive subscribe session - i.e. a subscribe session where
subscribe packets are not transmitted over-the-air and the device listens
and matches to transmitted publish packets. Configuration is done using
{@link SubscribeSettings.Builder#setSubscribeType(int)}.
"
      end

      attribute 6429367 "SUBSCRIBE_TYPE_ACTIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines an active subscribe session - i.e. a subscribe session where
subscribe packets are transmitted over-the-air. Configuration is done
using {@link SubscribeSettings.Builder#setSubscribeType(int)}.
"
      end

      attribute 6429495 "mSubscribeType"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6429623 "mSubscribeCount"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      attribute 6429751 "mTtlSec"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
"
      end

      operation 35714231 "SubscribeSettings"
	private explicit_return_type ""
	nparams 3
	  param in name "subscribeType" explicit_type "int"
	  param in name "publichCount" explicit_type "int"
	  param in name "ttlSec" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 35714359 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35714487 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35714615 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 137527 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 6011831 // CREATOR (<unidirectional association>)
	relation 6011831 --->
	  a role_name "CREATOR" init_value " new Creator<SubscribeSettings>() {
        @Override
        public SubscribeSettings[] newArray(int size) {
            return new SubscribeSettings[size];
        }

        @Override
        public SubscribeSettings createFromParcel(Parcel in) {
            int subscribeType = in.readInt();
            int subscribeCount = in.readInt();
            int ttlSec = in.readInt();
            return new SubscribeSettings(subscribeType, subscribeCount, ttlSec);
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SubscribeSettings> ${name}${value};
"
	    classrelation_ref 6011831 // CREATOR (<unidirectional association>)
	  b parent class_ref 137655 // Creator
      end

      operation 35714743 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 35714871 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      class 1900215 "Builder"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 6429879 "mSubscribeType"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6430007 "mSubscribeCount"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6430135 "mTtlSec"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 35714999 "setSubscribeType"
	  public return_type class_ref 1900215 // Builder
	  nparams 1
	    param in name "subscribeType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the type of the subscribe session: active (subscribe packets are
transmitted over-the-air), or passive (no subscribe packets are
transmitted, a match is made against a solicited/active publish
session whose packets are transmitted over-the-air).

@param subscribeType Subscribe session type: active (
           {@link SubscribeSettings#SUBSCRIBE_TYPE_ACTIVE}) or
           passive ( {@link SubscribeSettings#SUBSCRIBE_TYPE_PASSIVE}
           ).
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35715127 "setSubscribeCount"
	  public return_type class_ref 1900215 // Builder
	  nparams 1
	    param in name "subscribeCount" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the number of times an active (
{@link SubscribeSettings.Builder#setSubscribeType(int)}) subscribe
session will transmit a packet. When the count is reached an event
will be generated for
{@link WifiNanSessionListener#onSubscribeTerminated(int)} with reason=
{@link WifiNanSessionListener#TERMINATE_REASON_DONE}.

@param subscribeCount Number of subscribe packets to transmit.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35715255 "setTtlSec"
	  public return_type class_ref 1900215 // Builder
	  nparams 1
	    param in name "ttlSec" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the time interval (in seconds) an active (
{@link SubscribeSettings.Builder#setSubscribeType(int)}) subscribe
session will be alive - i.e. transmitting a packet. When the TTL is
reached an event will be generated for
{@link WifiNanSessionListener#onSubscribeTerminated(int)} with reason=
{@link WifiNanSessionListener#TERMINATE_REASON_DONE}.

@param ttlSec Lifetime of a subscribe session in seconds.
@return The builder to facilitate chaining
        {@code builder.setXXX(..).setXXX(..)}."
	end

	operation 35715383 "build"
	  public return_type class_ref 1900087 // SubscribeSettings
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Build {@link SubscribeSettings} given the current requests made on
the builder."
	end
      end
    end

    class 1900343 "TlvBufferUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility class to construct and parse byte arrays using the TLV format -
Type/Length/Value format. The utilities accept a configuration of the size of
the Type field and the Length field. A Type field size of 0 is allowed -
allowing usage for LV (no T) array formats.

@hide PROPOSED_NAN_API"
      operation 35715511 "TlvBufferUtils"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1900471 "TlvConstructor"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 6430263 "mTypeSize"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6430391 "mLengthSize"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6430519 "mArray"
	  private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6430647 "mArrayLength"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6430775 "mPosition"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 35715639 "TlvConstructor"
	  public explicit_return_type ""
	  nparams 2
	    param in name "typeSize" explicit_type "int"
	    param in name "lengthSize" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Define a TLV constructor with the specified size of the Type (T) and
Length (L) fields.

@param typeSize Number of bytes used for the Type (T) field. Values
           of 0, 1, or 2 bytes are allowed. A specification of 0
           bytes implies that the field being constructed has the LV
           format rather than the TLV format.
@param lengthSize Number of bytes used for the Length (L) field.
           Values of 1 or 2 bytes are allowed."
	end

	operation 35715767 "wrap"
	  public return_type class_ref 1900471 // TlvConstructor
	  nparams 1
	    param inout name "array" explicit_type "byte"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the byte array to be used to construct the TLV.

@param array Byte array to be formatted.
@return The constructor to facilitate chaining
        {@code ctr.putXXX(..).putXXX(..)}."
	end

	operation 35715895 "allocate"
	  public return_type class_ref 1900471 // TlvConstructor
	  nparams 1
	    param in name "capacity" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Allocates a new byte array to be used ot construct a TLV.

@param capacity The size of the byte array to be allocated.
@return The constructor to facilitate chaining
        {@code ctr.putXXX(..).putXXX(..)}."
	end

	operation 35716023 "putByte"
	  public return_type class_ref 1900471 // TlvConstructor
	  nparams 2
	    param in name "type" explicit_type "int"
	    param in name "b" explicit_type "byte"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Copies a byte into the TLV with the indicated type. For an LV
formatted structure (i.e. typeLength=0 in {@link TlvConstructor
TlvConstructor(int, int)} ) the type field is ignored.

@param type The value to be placed into the Type field.
@param b The byte to be inserted into the structure.
@return The constructor to facilitate chaining
        {@code ctr.putXXX(..).putXXX(..)}."
	end

	operation 35716151 "putByteArray"
	  public return_type class_ref 1900471 // TlvConstructor
	  nparams 4
	    param in name "type" explicit_type "int"
	    param inout name "array" explicit_type "byte"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Copies a byte array into the TLV with the indicated type. For an LV
formatted structure (i.e. typeLength=0 in {@link TlvConstructor
TlvConstructor(int, int)} ) the type field is ignored.

@param type The value to be placed into the Type field.
@param array The array to be copied into the TLV structure.
@param offset Start copying from the array at the specified offset.
@param length Copy the specified number (length) of bytes from the
           array.
@return The constructor to facilitate chaining
        {@code ctr.putXXX(..).putXXX(..)}."
	end

	operation 35716279 "putByteArray"
	  public return_type class_ref 1900471 // TlvConstructor
	  nparams 2
	    param in name "type" explicit_type "int"
	    param inout name "array" explicit_type "byte"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Copies a byte array into the TLV with the indicated type. For an LV
formatted structure (i.e. typeLength=0 in {@link TlvConstructor
TlvConstructor(int, int)} ) the type field is ignored.

@param type The value to be placed into the Type field.
@param array The array to be copied (in full) into the TLV structure.
@return The constructor to facilitate chaining
        {@code ctr.putXXX(..).putXXX(..)}."
	end

	operation 35716407 "putZeroLengthElement"
	  public return_type class_ref 1900471 // TlvConstructor
	  nparams 1
	    param in name "type" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Places a zero length element (i.e. Length field = 0) into the TLV.
For an LV formatted structure (i.e. typeLength=0 in
{@link TlvConstructor TlvConstructor(int, int)} ) the type field is
ignored.

@param type The value to be placed into the Type field.
@return The constructor to facilitate chaining
        {@code ctr.putXXX(..).putXXX(..)}."
	end

	operation 35716535 "putShort"
	  public return_type class_ref 1900471 // TlvConstructor
	  nparams 2
	    param in name "type" explicit_type "int"
	    param in name "data" explicit_type "short"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Copies short into the TLV with the indicated type. For an LV
formatted structure (i.e. typeLength=0 in {@link TlvConstructor
TlvConstructor(int, int)} ) the type field is ignored.

@param type The value to be placed into the Type field.
@param data The short to be inserted into the structure.
@return The constructor to facilitate chaining
        {@code ctr.putXXX(..).putXXX(..)}."
	end

	operation 35716663 "putInt"
	  public return_type class_ref 1900471 // TlvConstructor
	  nparams 2
	    param in name "type" explicit_type "int"
	    param in name "data" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Copies integer into the TLV with the indicated type. For an LV
formatted structure (i.e. typeLength=0 in {@link TlvConstructor
TlvConstructor(int, int)} ) the type field is ignored.

@param type The value to be placed into the Type field.
@param data The integer to be inserted into the structure.
@return The constructor to facilitate chaining
        {@code ctr.putXXX(..).putXXX(..)}."
	end

	operation 35716791 "putString"
	  public return_type class_ref 1900471 // TlvConstructor
	  nparams 2
	    param in name "type" explicit_type "int"
	    param inout name "data" type class_ref 129591 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Copies a String's byte representation into the TLV with the indicated
type. For an LV formatted structure (i.e. typeLength=0 in
{@link TlvConstructor TlvConstructor(int, int)} ) the type field is
ignored.

@param type The value to be placed into the Type field.
@param data The string whose bytes are to be inserted into the
           structure.
@return The constructor to facilitate chaining
        {@code ctr.putXXX(..).putXXX(..)}."
	end

	operation 35716919 "getArray"
	  public explicit_return_type "byte"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the constructed TLV formatted byte-array. Note that the
returned array is the fully wrapped (
{@link TlvConstructor#wrap(byte[])}) or allocated (
{@link TlvConstructor#allocate(int)}) array - which isn't necessarily
the actual size of the formatted data. Use
{@link TlvConstructor#getActualLength()} to obtain the size of the
formatted data.

@return The byte array containing the TLV formatted structure."
	end

	operation 35717047 "getActualLength"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the size of the TLV formatted portion of the wrapped or
allocated byte array. The array itself is returned with
{@link TlvConstructor#getArray()}.

@return The size of the TLV formatted portion of the byte array."
	end

	operation 35717175 "checkLength"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "dataLength" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 35717303 "addHeader"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "type" explicit_type "int"
	    param in name "length" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 1900599 "TlvElement"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 6430903 "mType"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The Type (T) field of the current TLV element. Note that for LV
formatted byte-arrays (i.e. TLV whose Type/T size is 0) the value of
this field is undefined.
"
	end

	attribute 6431031 "mLength"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The Length (L) field of the current TLV element.
"
	end

	attribute 6431159 "mRefArray"
	  public explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The Value (V) field - a raw byte array representing the current TLV
element where the entry starts at {@link TlvElement#mOffset}.
"
	end

	attribute 6431287 "mOffset"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The offset to be used into {@link TlvElement#mRefArray} to access the
raw data representing the current TLV element.
"
	end

	operation 35717431 "TlvElement"
	  private explicit_return_type ""
	  nparams 4
	    param in name "type" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "refArray" explicit_type "byte"
	    param in name "offset" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 35717559 "getByte"
	  public explicit_return_type "byte"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Utility function to return a byte representation of a TLV element of
length 1. Note: an attempt to call this function on a TLV item whose
{@link TlvElement#mLength} is != 1 will result in an exception.

@return byte representation of current TLV element."
	end

	operation 35717687 "getShort"
	  public explicit_return_type "short"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Utility function to return a short representation of a TLV element of
length 2. Note: an attempt to call this function on a TLV item whose
{@link TlvElement#mLength} is != 2 will result in an exception.

@return short representation of current TLV element."
	end

	operation 35717815 "getInt"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Utility function to return an integer representation of a TLV element
of length 4. Note: an attempt to call this function on a TLV item
whose {@link TlvElement#mLength} is != 4 will result in an exception.

@return integer representation of current TLV element."
	end

	operation 35717943 "getString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Utility function to return a String representation of a TLV element.

@return String repersentation of the current TLV element."
	end
      end

      class 1900727 "TlvIterable"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6011959 // <realization>
	  relation 6011959 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}<TlvElement>"
	      classrelation_ref 6011959 // <realization>
	    b parent class_ref 444855 // Iterable
	end

	attribute 6431415 "mTypeSize"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6431543 "mLengthSize"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6431671 "mArray"
	  private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6431799 "mArrayLength"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 35718071 "TlvIterable"
	  public explicit_return_type ""
	  nparams 4
	    param in name "typeSize" explicit_type "int"
	    param in name "lengthSize" explicit_type "int"
	    param inout name "array" explicit_type "byte"
	    param in name "length" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a TlvIterable object - specifying the format of the TLV
(the sizes of the Type and Length fields), and the byte array whose
data is to be parsed.

@param typeSize Number of bytes used for the Type (T) field. Valid
           values are 0 (i.e. indicating the format is LV rather than
           TLV), 1, and 2 bytes.
@param lengthSize Number of bytes sued for the Length (L) field.
           Values values are 1 or 2 bytes.
@param array The TLV formatted byte-array to parse.
@param length The number of bytes of the array to be used in the
           parsing."
	end

	operation 35718199 "toString"
	  public return_type class_ref 129591 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Prints out a parsed representation of the TLV-formatted byte array.
Whenever possible bytes, shorts, and integer are printed out (for
fields whose length is 1, 2, or 4 respectively)."
	end

	operation 35718327 "iterator"
	  public return_type class_ref 1900599 // TlvElement
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Returns an iterator to step through a TLV formatted byte-array. The
individual elements returned by the iterator are {@link TlvElement}."
	end
      end
    end

    class 1900855 "WifiNanEventListener"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for NAN events callbacks. Should be extended by applications
wanting notifications. These are callbacks applying to the NAN connection as
a whole - not to specific publish or subscribe sessions - for that see
{@link WifiNanSessionListener}.
<p>
During registration specify which specific events are desired using a set of
{@code NanEventListener.LISTEN_*} flags OR'd together. Only those events will
be delivered to the registered listener. Override those callbacks
{@code NanEventListener.on*} for the registered events.

@hide PROPOSED_NAN_API"
      classrelation 6012087 // TAG (<unidirectional association>)
	relation 6012087 --->
	  a role_name "TAG" init_value " \"WifiNanEventListener\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6012087 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6431927 "DBG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6432055 "VDBG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " STOPSHIP if true"
      end

      attribute 6432183 "LISTEN_CONFIG_COMPLETED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Configuration completion callback event registration flag. Corresponding
callback is {@link WifiNanEventListener#onConfigCompleted(ConfigRequest)}.
"
      end

      attribute 6432311 "LISTEN_CONFIG_FAILED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Configuration failed callback event registration flag. Corresponding
callback is
{@link WifiNanEventListener#onConfigFailed(ConfigRequest, int)}.
"
      end

      attribute 6432439 "LISTEN_NAN_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "NAN cluster is down callback event registration flag. Corresponding
callback is {@link WifiNanEventListener#onNanDown(int)}.
"
      end

      attribute 6432567 "LISTEN_IDENTITY_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "NAN identity has changed event registration flag. This may be due to
joining a cluster, starting a cluster, or discovery interface change. The
implication is that peers you've been communicating with may no longer
recognize you and you need to re-establish your identity. Corresponding
callback is {@link WifiNanEventListener#onIdentityChanged()}.
"
      end

      classrelation 6012215 // mHandler (<unidirectional association>)
	relation 6012215 --->
	  a role_name "mHandler" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6012215 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      operation 35718455 "WifiNanEventListener"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@link WifiNanEventListener} using the looper of the current
thread. I.e. all callbacks will be delivered on the current thread."
      end

      operation 35718583 "WifiNanEventListener"
	public explicit_return_type ""
	nparams 1
	  param inout name "looper" type class_ref 129335 // Looper
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@link WifiNanEventListener} using the specified looper. I.e.
all callbacks will delivered on the thread of the specified looper.

@param looper The looper on which to execute the callbacks."
      end

      operation 35718711 "onConfigCompleted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "completedConfig" type class_ref 1899063 // ConfigRequest
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when NAN configuration is completed. Event will only be delivered
if registered using {@link WifiNanEventListener#LISTEN_CONFIG_COMPLETED}. A
dummy (empty implementation printing out a warning). Make sure to
override if registered.

@param completedConfig The actual configuration request which was
           completed. Note that it may be different from that requested
           by the application. The service combines configuration
           requests from all applications."
      end

      operation 35718839 "onConfigFailed"
	public explicit_return_type "void"
	nparams 2
	  param inout name "failedConfig" type class_ref 1899063 // ConfigRequest
	  param in name "reason" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when NAN configuration failed. Event will only be delivered if
registered using {@link WifiNanEventListener#LISTEN_CONFIG_FAILED}. A dummy
(empty implementation printing out a warning). Make sure to override if
registered.

@param reason Failure reason code, see {@code NanSessionListener.FAIL_*}."
      end

      operation 35718967 "onNanDown"
	public explicit_return_type "void"
	nparams 1
	  param in name "reason" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when NAN cluster is down. Event will only be delivered if
registered using {@link WifiNanEventListener#LISTEN_NAN_DOWN}. A dummy (empty
implementation printing out a warning). Make sure to override if
registered.

@param reason Reason code for event, see {@code NanSessionListener.FAIL_*}."
      end

      operation 35719095 "onIdentityChanged"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when NAN identity has changed. This may be due to joining a
cluster, starting a cluster, or discovery interface change. The
implication is that peers you've been communicating with may no longer
recognize you and you need to re-establish your identity. Event will only
be delivered if registered using
{@link WifiNanEventListener#LISTEN_IDENTITY_CHANGED}. A dummy (empty
implementation printing out a warning). Make sure to override if
registered."
      end

      attribute 6432695 "callback"
	public explicit_type "IWifiNanEventListener"
	init_value " new IWifiNanEventListener.Stub() {
        @Override
        public void onConfigCompleted(ConfigRequest completedConfig) {
            if (VDBG) Log.v(TAG, \"onConfigCompleted: configRequest=\" + completedConfig);

            Message msg = mHandler.obtainMessage(LISTEN_CONFIG_COMPLETED);
            msg.obj = completedConfig;
            mHandler.sendMessage(msg);
        }

        @Override
        public void onConfigFailed(ConfigRequest failedConfig, int reason) {
            if (VDBG) {
                Log.v(TAG, \"onConfigFailed: failedConfig=\" + failedConfig + \", reason=\" + reason);
            }

            Message msg = mHandler.obtainMessage(LISTEN_CONFIG_FAILED);
            msg.arg1 = reason;
            msg.obj = failedConfig;
            mHandler.sendMessage(msg);
        }

        @Override
        public void onNanDown(int reason) {
            if (VDBG) Log.v(TAG, \"onNanDown: reason=\" + reason);

            Message msg = mHandler.obtainMessage(LISTEN_NAN_DOWN);
            msg.arg1 = reason;
            mHandler.sendMessage(msg);
        }

        @Override
        public void onIdentityChanged() {
            if (VDBG) Log.v(TAG, \"onIdentityChanged\");

            Message msg = mHandler.obtainMessage(LISTEN_IDENTITY_CHANGED);
            mHandler.sendMessage(msg);
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@hide}
"
      end
    end

    class 1900983 "WifiNanManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides the primary API for managing Wi-Fi NAN operation:
including discovery and data-links. Get an instance of this class by calling
{@link android.content.Context#getSystemService(String)
Context.getSystemService(Context.WIFI_NAN_SERVICE)}.
<p>
The class provides access to:
<ul>
<li>Configure a NAN connection and register for events.
<li>Create publish and subscribe sessions.
<li>Create NAN network specifier to be used to create a NAN network.
</ul>

@hide PROPOSED_NAN_API"
      classrelation 6012343 // TAG (<unidirectional association>)
	relation 6012343 --->
	  a role_name "TAG" init_value " \"WifiNanManager\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6012343 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6432823 "DBG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6432951 "VDBG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " STOPSHIP if true"
      end

      classrelation 6012471 // mBinder (<unidirectional association>)
	relation 6012471 --->
	  a role_name "mBinder" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6012471 // mBinder (<unidirectional association>)
	  b parent class_ref 132919 // IBinder
      end

      attribute 6433079 "mService"
	private explicit_type "IWifiNanManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 35719223 "WifiNanManager"
	public explicit_return_type ""
	nparams 1
	  param inout name "service" explicit_type "IWifiNanManager"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 35719351 "connect"
	public explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 1900855 // WifiNanEventListener
	  param in name "events" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Re-connect to the Wi-Fi NAN service - enabling the application to execute
{@link WifiNanManager} APIs. Application don't normally need to call this
API since it is executed in the constructor. However, applications which
have explicitly {@link WifiNanManager#disconnect()} need to call this
function to re-connect.

@param listener A listener extended from {@link WifiNanEventListener}.
@param events The set of events to be delivered to the {@code listener}.
           OR'd event flags from {@link WifiNanEventListener
           NanEventListener.LISTEN*}."
      end

      operation 35719479 "disconnect"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disconnect from the Wi-Fi NAN service and destroy all outstanding
operations - i.e. all publish and subscribes are terminated, any
outstanding data-link is shut-down, and all requested NAN configurations
are cancelled.
<p>
An application may then re-connect using
{@link WifiNanManager#connect(WifiNanEventListener, int)} ."
      end

      operation 35719607 "requestConfig"
	public explicit_return_type "void"
	nparams 1
	  param inout name "configRequest" type class_ref 1899063 // ConfigRequest
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Requests a NAN configuration, specified by {@link ConfigRequest}. Note
that NAN is a shared resource and the device can only be a member of a
single cluster. Thus the service may merge configuration requests from
multiple applications and configure NAN differently from individual
requests.
<p>
The {@link WifiNanEventListener#onConfigCompleted(ConfigRequest)} will be
called when configuration is completed (if a listener is registered for
this specific event).

@param configRequest The requested NAN configuration."
      end

      operation 35719735 "publish"
	public return_type class_ref 1901111 // WifiNanPublishSession
	nparams 4
	  param inout name "publishData" type class_ref 1899319 // PublishData
	  param inout name "publishSettings" type class_ref 1899575 // PublishSettings
	  param inout name "listener" type class_ref 1901239 // WifiNanSessionListener
	  param in name "events" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request a NAN publish session. The results of the publish session
operation will result in callbacks to the indicated listener:
{@link WifiNanSessionListener NanSessionListener.on*}.

@param publishData The {@link PublishData} specifying the contents of the
           publish session.
@param publishSettings The {@link PublishSettings} specifying the
           settings for the publish session.
@param listener The {@link WifiNanSessionListener} derived objects to be used
           for the event callbacks specified by {@code events}.
@param events The list of events to be delivered to the {@code listener}
           object. An OR'd value of {@link WifiNanSessionListener
           NanSessionListener.LISTEN_*}.
@return The {@link WifiNanPublishSession} which can be used to further
        control the publish session."
      end

      operation 35719863 "publishRaw"
	public return_type class_ref 1901111 // WifiNanPublishSession
	nparams 4
	  param inout name "publishData" type class_ref 1899319 // PublishData
	  param inout name "publishSettings" type class_ref 1899575 // PublishSettings
	  param inout name "listener" type class_ref 1901239 // WifiNanSessionListener
	  param in name "events" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as publish(*) but does not modify the event flag

@hide"
      end

      operation 35719991 "publish"
	public explicit_return_type "void"
	nparams 3
	  param in name "sessionId" explicit_type "int"
	  param inout name "publishData" type class_ref 1899319 // PublishData
	  param inout name "publishSettings" type class_ref 1899575 // PublishSettings
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 35720119 "subscribe"
	public return_type class_ref 1901367 // WifiNanSubscribeSession
	nparams 4
	  param inout name "subscribeData" type class_ref 1899831 // SubscribeData
	  param inout name "subscribeSettings" type class_ref 1900087 // SubscribeSettings
	  param inout name "listener" type class_ref 1901239 // WifiNanSessionListener
	  param in name "events" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request a NAN subscribe session. The results of the subscribe session
operation will result in callbacks to the indicated listener:
{@link WifiNanSessionListener NanSessionListener.on*}.

@param subscribeData The {@link SubscribeData} specifying the contents of
           the subscribe session.
@param subscribeSettings The {@link SubscribeSettings} specifying the
           settings for the subscribe session.
@param listener The {@link WifiNanSessionListener} derived objects to be used
           for the event callbacks specified by {@code events}.
@param events The list of events to be delivered to the {@code listener}
           object. An OR'd value of {@link WifiNanSessionListener
           NanSessionListener.LISTEN_*}.
@return The {@link WifiNanSubscribeSession} which can be used to further
        control the subscribe session."
      end

      operation 35720247 "subscribeRaw"
	public return_type class_ref 1901367 // WifiNanSubscribeSession
	nparams 4
	  param inout name "subscribeData" type class_ref 1899831 // SubscribeData
	  param inout name "subscribeSettings" type class_ref 1900087 // SubscribeSettings
	  param inout name "listener" type class_ref 1901239 // WifiNanSessionListener
	  param in name "events" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as subscribe(*) but does not modify the event flag

@hide"
      end

      operation 35720375 "subscribe"
	public explicit_return_type "void"
	nparams 3
	  param in name "sessionId" explicit_type "int"
	  param inout name "subscribeData" type class_ref 1899831 // SubscribeData
	  param inout name "subscribeSettings" type class_ref 1900087 // SubscribeSettings
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 35720503 "stopSession"
	public explicit_return_type "void"
	nparams 1
	  param in name "sessionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 35720631 "destroySession"
	public explicit_return_type "void"
	nparams 1
	  param in name "sessionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 35720759 "sendMessage"
	public explicit_return_type "void"
	nparams 5
	  param in name "sessionId" explicit_type "int"
	  param in name "peerId" explicit_type "int"
	  param inout name "message" explicit_type "byte"
	  param in name "messageLength" explicit_type "int"
	  param in name "messageId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end
    end

    class 1901111 "WifiNanPublishSession"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A representation of a NAN publish session. Created when
{@link WifiNanManager#publish(PublishData, PublishSettings, WifiNanSessionListener, int)}
is executed. The object can be used to stop and re-start (re-configure) the
publish session.

@hide PROPOSED_NAN_API"
      classrelation 6012855 // <generalisation>
	relation 6012855 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6012855 // <generalisation>
	  b parent class_ref 1901495 // WifiNanSession
      end

      operation 35721527 "WifiNanPublishSession"
	public explicit_return_type ""
	nparams 2
	  param inout name "manager" type class_ref 1900983 // WifiNanManager
	  param in name "sessionId" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 35721655 "publish"
	public explicit_return_type "void"
	nparams 2
	  param inout name "publishData" type class_ref 1899319 // PublishData
	  param inout name "publishSettings" type class_ref 1899575 // PublishSettings
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restart/re-configure the publish session. Note that the
{@link WifiNanSessionListener} is not replaced - the same listener used at
creation is still used.

@param publishData The data ({@link PublishData}) to publish.
@param publishSettings The settings ({@link PublishSettings}) of the
           publish session."
      end
    end

    class 1901239 "WifiNanSessionListener"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for NAN session events callbacks. Should be extended by
applications wanting notifications. The callbacks are registered when a
publish or subscribe session is created using
{@link WifiNanManager#publish(PublishData, PublishSettings, WifiNanSessionListener, int)}
or
{@link WifiNanManager#subscribe(SubscribeData, SubscribeSettings, WifiNanSessionListener, int)}
. These are callbacks applying to a specific NAN session. Events
corresponding to the NAN link are delivered using {@link WifiNanEventListener}.
<p>
A single listener is registered at session creation - it cannot be replaced.
<p>
During registration specify which specific events are desired using a set of
{@code NanSessionListener.LISTEN_*} flags OR'd together. Only those events
will be delivered to the registered listener. Override those callbacks
{@code NanSessionListener.on*} for the registered events.

@hide PROPOSED_NAN_API"
      classrelation 6012983 // TAG (<unidirectional association>)
	relation 6012983 --->
	  a role_name "TAG" init_value " \"WifiNanSessionListener\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6012983 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6433719 "DBG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6433847 "VDBG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " STOPSHIP if true"
      end

      attribute 6433975 "LISTEN_PUBLISH_FAIL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Publish fail callback event registration flag. Corresponding callback is
{@link WifiNanSessionListener#onPublishFail(int)}.

@hide
"
      end

      attribute 6434103 "LISTEN_PUBLISH_TERMINATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Publish terminated callback event registration flag. Corresponding
callback is {@link WifiNanSessionListener#onPublishTerminated(int)}.
"
      end

      attribute 6434231 "LISTEN_SUBSCRIBE_FAIL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Subscribe fail callback event registration flag. Corresponding callback
is {@link WifiNanSessionListener#onSubscribeFail(int)}.

@hide
"
      end

      attribute 6434359 "LISTEN_SUBSCRIBE_TERMINATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Subscribe terminated callback event registration flag. Corresponding
callback is {@link WifiNanSessionListener#onSubscribeTerminated(int)}.
"
      end

      attribute 6434487 "LISTEN_MATCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Match (discovery: publish or subscribe) callback event registration flag.
Corresponding callback is
{@link WifiNanSessionListener#onMatch(int, byte[], int, byte[], int)}.

@hide
"
      end

      attribute 6434615 "LISTEN_MESSAGE_SEND_SUCCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Message sent successfully callback event registration flag. Corresponding
callback is {@link WifiNanSessionListener#onMessageSendSuccess()}.

@hide
"
      end

      attribute 6434743 "LISTEN_MESSAGE_SEND_FAIL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Message sending failure callback event registration flag. Corresponding
callback is {@link WifiNanSessionListener#onMessageSendFail(int)}.

@hide
"
      end

      attribute 6434871 "LISTEN_MESSAGE_RECEIVED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1 << 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Message received callback event registration flag. Corresponding callback
is {@link WifiNanSessionListener#onMessageReceived(int, byte[], int)}.

@hide
"
      end

      attribute 6434999 "LISTEN_HIDDEN_FLAGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " LISTEN_PUBLISH_FAIL | LISTEN_SUBSCRIBE_FAIL
            | LISTEN_MATCH | LISTEN_MESSAGE_SEND_SUCCESS | LISTEN_MESSAGE_SEND_FAIL
            | LISTEN_MESSAGE_RECEIVED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "List of hidden events: which are mandatory - i.e. they will be added to
every request.

@hide
"
      end

      attribute 6435127 "FAIL_REASON_NO_RESOURCES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Failure reason flag for {@link WifiNanEventListener} and
{@link WifiNanSessionListener} callbacks. Indicates no resources to execute
the requested operation.
"
      end

      attribute 6435255 "FAIL_REASON_INVALID_ARGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Failure reason flag for {@link WifiNanEventListener} and
{@link WifiNanSessionListener} callbacks. Indicates invalid argument in the
requested operation.
"
      end

      attribute 6435383 "FAIL_REASON_NO_MATCH_SESSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Failure reason flag for {@link WifiNanEventListener} and
{@link WifiNanSessionListener} callbacks. Indicates a message is transmitted
without a match (i.e. a discovery) occurring first.
"
      end

      attribute 6435511 "FAIL_REASON_OTHER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Failure reason flag for {@link WifiNanEventListener} and
{@link WifiNanSessionListener} callbacks. Indicates an unspecified error
occurred during the operation.
"
      end

      attribute 6435639 "TERMINATE_REASON_DONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Failure reason flag for
{@link WifiNanSessionListener#onPublishTerminated(int)} and
{@link WifiNanSessionListener#onSubscribeTerminated(int)} callbacks.
Indicates that publish or subscribe session is done - i.e. all the
requested operations (per {@link PublishSettings} or
{@link SubscribeSettings}) have been executed.
"
      end

      attribute 6435767 "TERMINATE_REASON_FAIL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Failure reason flag for
{@link WifiNanSessionListener#onPublishTerminated(int)} and
{@link WifiNanSessionListener#onSubscribeTerminated(int)} callbacks.
Indicates that publish or subscribe session is terminated due to a
failure.
"
      end

      classrelation 6013111 // MESSAGE_BUNDLE_KEY_PEER_ID (<unidirectional association>)
	relation 6013111 --->
	  a role_name "MESSAGE_BUNDLE_KEY_PEER_ID" init_value " \"peer_id\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6013111 // MESSAGE_BUNDLE_KEY_PEER_ID (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 6013239 // MESSAGE_BUNDLE_KEY_MESSAGE (<unidirectional association>)
	relation 6013239 --->
	  a role_name "MESSAGE_BUNDLE_KEY_MESSAGE" init_value " \"message\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6013239 // MESSAGE_BUNDLE_KEY_MESSAGE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 6013367 // MESSAGE_BUNDLE_KEY_MESSAGE2 (<unidirectional association>)
	relation 6013367 --->
	  a role_name "MESSAGE_BUNDLE_KEY_MESSAGE2" init_value " \"message2\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6013367 // MESSAGE_BUNDLE_KEY_MESSAGE2 (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 6013495 // mHandler (<unidirectional association>)
	relation 6013495 --->
	  a role_name "mHandler" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6013495 // mHandler (<unidirectional association>)
	  b parent class_ref 132023 // Handler
      end

      operation 35721783 "WifiNanSessionListener"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@link WifiNanSessionListener} using the looper of the current
thread. I.e. all callbacks will be delivered on the current thread."
      end

      operation 35721911 "WifiNanSessionListener"
	public explicit_return_type ""
	nparams 1
	  param inout name "looper" type class_ref 129335 // Looper
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a {@link WifiNanSessionListener} using the specified looper. I.e.
all callbacks will delivered on the thread of the specified looper.

@param looper The looper on which to execute the callbacks."
      end

      operation 35722039 "onPublishFail"
	public explicit_return_type "void"
	nparams 1
	  param in name "reason" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a publish operation fails. It is dummy method (empty
implementation printing out a log message). Override to implement your
custom response.

@param reason The failure reason using {@code NanSessionListener.FAIL_*}
           codes."
      end

      operation 35722167 "onPublishTerminated"
	public explicit_return_type "void"
	nparams 1
	  param in name "reason" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a publish operation terminates. Event will only be delivered
if registered using {@link WifiNanSessionListener#LISTEN_PUBLISH_TERMINATED}.
A dummy (empty implementation printing out a warning). Make sure to
override if registered.

@param reason The termination reason using
           {@code NanSessionListener.TERMINATE_*} codes."
      end

      operation 35722295 "onSubscribeFail"
	public explicit_return_type "void"
	nparams 1
	  param in name "reason" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a subscribe operation fails. It is dummy method (empty
implementation printing out a log message). Override to implement your
custom response.

@param reason The failure reason using {@code NanSessionListener.FAIL_*}
           codes."
      end

      operation 35722423 "onSubscribeTerminated"
	public explicit_return_type "void"
	nparams 1
	  param in name "reason" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a subscribe operation terminates. Event will only be
delivered if registered using
{@link WifiNanSessionListener#LISTEN_SUBSCRIBE_TERMINATED}. A dummy (empty
implementation printing out a warning). Make sure to override if
registered.

@param reason The termination reason using
           {@code NanSessionListener.TERMINATE_*} codes."
      end

      operation 35722551 "onMatch"
	public explicit_return_type "void"
	nparams 5
	  param in name "peerId" explicit_type "int"
	  param inout name "serviceSpecificInfo" explicit_type "byte"
	  param in name "serviceSpecificInfoLength" explicit_type "int"
	  param inout name "matchFilter" explicit_type "byte"
	  param in name "matchFilterLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a discovery (publish or subscribe) operation results in a
match - i.e. when a peer is discovered. It is dummy method (empty
implementation printing out a log message). Override to implement your
custom response.

@param peerId The ID of the peer matching our discovery operation.
@param serviceSpecificInfo The service specific information (arbitrary
           byte array) provided by the peer as part of its discovery
           packet.
@param serviceSpecificInfoLength The length of the service specific
           information array.
@param matchFilter The filter (Tx on advertiser and Rx on listener) which
           resulted in this match.
@param matchFilterLength The length of the match filter array."
      end

      operation 35722679 "onMessageSendSuccess"
	public explicit_return_type "void"
	nparams 1
	  param in name "messageId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a message is transmitted successfully - i.e. when we know
that it was received successfully (corresponding to an ACK being
received). It is dummy method (empty implementation printing out a log
message). Override to implement your custom response.
<p>
Note that either this callback or
{@link WifiNanSessionListener#onMessageSendFail(int, int)} will be
received - never both."
      end

      operation 35722807 "onMessageSendFail"
	public explicit_return_type "void"
	nparams 2
	  param in name "messageId" explicit_type "int"
	  param in name "reason" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a message transmission fails - i.e. when no ACK is received.
The hardware will usually attempt to re-transmit several times - this
event is received after all retries are exhausted. There is a possibility
that message was received by the destination successfully but the ACK was
lost. It is dummy method (empty implementation printing out a log
message). Override to implement your custom response.
<p>
Note that either this callback or
{@link WifiNanSessionListener#onMessageSendSuccess(int)} will be received
- never both

@param reason The failure reason using {@code NanSessionListener.FAIL_*}
           codes."
      end

      operation 35722935 "onMessageReceived"
	public explicit_return_type "void"
	nparams 3
	  param in name "peerId" explicit_type "int"
	  param inout name "message" explicit_type "byte"
	  param in name "messageLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a message is received from a discovery session peer. It is
dummy method (empty implementation printing out a log message). Override
to implement your custom response.

@param peerId The ID of the peer sending the message.
@param message A byte array containing the message.
@param messageLength The length of the byte array containing the relevant
           message bytes."
      end

      attribute 6435895 "callback"
	public explicit_type "IWifiNanSessionListener"
	init_value " new IWifiNanSessionListener.Stub() {
        @Override
        public void onPublishFail(int reason) {
            if (VDBG) Log.v(TAG, \"onPublishFail: reason=\" + reason);

            Message msg = mHandler.obtainMessage(LISTEN_PUBLISH_FAIL);
            msg.arg1 = reason;
            mHandler.sendMessage(msg);
        }

        @Override
        public void onPublishTerminated(int reason) {
            if (VDBG) Log.v(TAG, \"onPublishResponse: reason=\" + reason);

            Message msg = mHandler.obtainMessage(LISTEN_PUBLISH_TERMINATED);
            msg.arg1 = reason;
            mHandler.sendMessage(msg);
        }

        @Override
        public void onSubscribeFail(int reason) {
            if (VDBG) Log.v(TAG, \"onSubscribeFail: reason=\" + reason);

            Message msg = mHandler.obtainMessage(LISTEN_SUBSCRIBE_FAIL);
            msg.arg1 = reason;
            mHandler.sendMessage(msg);
        }

        @Override
        public void onSubscribeTerminated(int reason) {
            if (VDBG) Log.v(TAG, \"onSubscribeTerminated: reason=\" + reason);

            Message msg = mHandler.obtainMessage(LISTEN_SUBSCRIBE_TERMINATED);
            msg.arg1 = reason;
            mHandler.sendMessage(msg);
        }

        @Override
        public void onMatch(int peerId, byte[] serviceSpecificInfo,
                int serviceSpecificInfoLength, byte[] matchFilter, int matchFilterLength) {
            if (VDBG) Log.v(TAG, \"onMatch: peerId=\" + peerId);

            Bundle data = new Bundle();
            data.putInt(MESSAGE_BUNDLE_KEY_PEER_ID, peerId);
            data.putByteArray(MESSAGE_BUNDLE_KEY_MESSAGE, serviceSpecificInfo);
            data.putByteArray(MESSAGE_BUNDLE_KEY_MESSAGE2, matchFilter);

            Message msg = mHandler.obtainMessage(LISTEN_MATCH);
            msg.arg1 = serviceSpecificInfoLength;
            msg.arg2 = matchFilterLength;
            msg.setData(data);
            mHandler.sendMessage(msg);
        }

        @Override
        public void onMessageSendSuccess(int messageId) {
            if (VDBG) Log.v(TAG, \"onMessageSendSuccess\");

            Message msg = mHandler.obtainMessage(LISTEN_MESSAGE_SEND_SUCCESS);
            msg.arg1 = messageId;
            mHandler.sendMessage(msg);
        }

        @Override
        public void onMessageSendFail(int messageId, int reason) {
            if (VDBG) Log.v(TAG, \"onMessageSendFail: reason=\" + reason);

            Message msg = mHandler.obtainMessage(LISTEN_MESSAGE_SEND_FAIL);
            msg.arg1 = messageId;
            msg.arg2 = reason;
            mHandler.sendMessage(msg);
        }

        @Override
        public void onMessageReceived(int peerId, byte[] message, int messageLength) {
            if (VDBG) {
                Log.v(TAG, \"onMessageReceived: peerId='\" + peerId + \"', messageLength=\"
                        + messageLength);
            }

            Bundle data = new Bundle();
            data.putByteArray(MESSAGE_BUNDLE_KEY_MESSAGE, message);

            Message msg = mHandler.obtainMessage(LISTEN_MESSAGE_RECEIVED);
            msg.arg1 = messageLength;
            msg.arg2 = peerId;
            msg.setData(data);
            mHandler.sendMessage(msg);
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@hide}
"
      end
    end

    class 1901367 "WifiNanSubscribeSession"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A representation of a NAN subscribe session. Created when
{@link WifiNanManager#subscribe(SubscribeData, SubscribeSettings, WifiNanSessionListener, int)}
is executed. The object can be used to stop and re-start (re-configure) the
subscribe session.

@hide PROPOSED_NAN_API"
      classrelation 6013623 // <generalisation>
	relation 6013623 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6013623 // <generalisation>
	  b parent class_ref 1901495 // WifiNanSession
      end

      operation 35723063 "WifiNanSubscribeSession"
	public explicit_return_type ""
	nparams 2
	  param inout name "manager" type class_ref 1900983 // WifiNanManager
	  param in name "sessionId" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 35723191 "subscribe"
	public explicit_return_type "void"
	nparams 2
	  param inout name "subscribeData" type class_ref 1899831 // SubscribeData
	  param inout name "subscribeSettings" type class_ref 1900087 // SubscribeSettings
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restart/re-configure the subscribe session. Note that the
{@link WifiNanSessionListener} is not replaced - the same listener used at
creation is still used.

@param subscribeData The data ({@link SubscribeData}) to subscribe.
@param subscribeSettings The settings ({@link SubscribeSettings}) of the
           subscribe session."
      end
    end

    class 1901495 "WifiNanSession"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A representation of a single publish or subscribe NAN session. This object
will not be created directly - only its child classes are available:
{@link WifiNanPublishSession} and {@link WifiNanSubscribeSession}.

@hide PROPOSED_NAN_API"
      classrelation 6012599 // TAG (<unidirectional association>)
	relation 6012599 --->
	  a role_name "TAG" init_value " \"WifiNanSession\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6012599 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 6433207 "DBG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6433335 "VDBG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " STOPSHIP if true"
      end

      classrelation 6012727 // mManager (<unidirectional association>)
	relation 6012727 --->
	  a role_name "mManager" protected
	    comment "
{@hide}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6012727 // mManager (<unidirectional association>)
	  b parent class_ref 1900983 // WifiNanManager
      end

      attribute 6433463 "mSessionId"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@hide}
"
      end

      attribute 6433591 "mDestroyed"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@hide}
"
      end

      operation 35720887 "WifiNanSession"
	public explicit_return_type ""
	nparams 2
	  param inout name "manager" type class_ref 1900983 // WifiNanManager
	  param in name "sessionId" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 35721015 "stop"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Terminate the current publish or subscribe session - i.e. stop
transmitting packet on-air (for an active session) or listening for
matches (for a passive session). Note that the session may still receive
incoming messages and may be re-configured/re-started at a later time."
      end

      operation 35721143 "destroy"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroy the current publish or subscribe session. Performs a
{@link WifiNanSession#stop()} function but in addition destroys the session -
it will not be able to receive any messages or to be restarted at a later
time."
      end

      operation 35721271 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@hide}"
      end

      operation 35721399 "sendMessage"
	public explicit_return_type "void"
	nparams 4
	  param in name "peerId" explicit_type "int"
	  param inout name "message" explicit_type "byte"
	  param in name "messageLength" explicit_type "int"
	  param in name "messageId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a message to the specified destination. Message transmission is
part of the current discovery session - i.e. executed subsequent to a
publish/subscribe
{@link WifiNanSessionListener#onMatch(int, byte[], int, byte[], int)}
event.

@param peerId The peer's ID for the message. Must be a result of an
           {@link WifiNanSessionListener#onMatch(int, byte[], int, byte[], int)}
           event.
@param message The message to be transmitted.
@param messageLength The number of bytes from the {@code message} to be
           transmitted.
@param messageId An arbitrary integer used by the caller to identify the
           message. The same integer ID will be returned in the callbacks
           indicated message send success or failure."
      end
    end
  end

  deploymentview 221751 "nan"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1060791 "ConfigRequest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 1899063 // ConfigRequest
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1060919 "PublishData"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 1899319 // PublishData
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1061047 "PublishSettings"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 1899575 // PublishSettings
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1061175 "SubscribeData"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 1899831 // SubscribeData
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1061303 "SubscribeSettings"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 1900087 // SubscribeSettings
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1061431 "TlvBufferUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import libcore.io.Memory;
import java.nio.BufferOverflowException;
import java.nio.ByteOrder;
import java.util.Iterator;
${definition}"
      associated_classes
	class_ref 1900343 // TlvBufferUtils
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1061559 "WifiNanEventListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1900855 // WifiNanEventListener
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1061687 "WifiNanManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Binder;
import android.os.IBinder;
import android.os.RemoteException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1900983 // WifiNanManager
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1061815 "WifiNanSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1901495 // WifiNanSession
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1061943 "WifiNanPublishSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1901111 // WifiNanPublishSession
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1062071 "WifiNanSessionListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1901239 // WifiNanSessionListener
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1062199 "WifiNanSubscribeSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 1901367 // WifiNanSubscribeSession
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
