class ClockWidgetProvider
!!!1283895.java!!!	onReceive(inout context : Context, inout intent : Intent) : void
        String intentAction = intent.getAction();

        if (INET_CONDITION_ACTION.equals(intentAction) ||
                ConnectivityManager.CONNECTIVITY_ACTION.equals(intentAction)) {

            if (INET_CONDITION_ACTION.equals(intentAction)) {
                // a broadcast with this intent action is only fired when we are actually connected
                // (i.e connectionStatus = 100).  So, clearing connectivity status when changing
                // networks is required
                int connectionStatus = intent.getIntExtra(EXTRA_INET_CONDITION, -551);
                writeConnectivity(context, connectionStatus > INET_CONDITION_THRESHOLD);
            }

            update(context);
        }

        super.onReceive(context, intent);
!!!1284023.java!!!	onAppWidgetOptionsChanged(inout context : Context, inout appWidgetManager : AppWidgetManager, in appWidgetId : int, inout newOptions : Bundle) : void
        update(context);
!!!1284151.java!!!	onUpdate(inout context : Context, inout appWidgetManager : AppWidgetManager, inout appWidgetIds : int) : void
        update(context);
        super.onUpdate(context, appWidgetManager, appWidgetIds);
!!!1284279.java!!!	update(inout context : Context) : void
        AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);
        ComponentName thisWidget = new ComponentName(context, ClockWidgetProvider.class);
        appWidgetManager.updateAppWidget(thisWidget, getRemoteViews(context));
!!!1284407.java!!!	getRemoteViews(inout context : Context) : RemoteViews
        RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.clock_widget);
        remoteViews.setImageViewResource(R.id.connectivity_indicator, getConnectedResId(context));

        return remoteViews;
!!!1284535.java!!!	getConnectedResId(inout context : Context) : int
        ConnectivityManager cm = (ConnectivityManager) context
                .getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo info = cm.getActiveNetworkInfo();

        int resId = 0;
        if (info == null || !info.isAvailable() || !info.isConnected()) {
            // can't have Internet access with no network
            writeConnectivity(context, false);
            resId = R.drawable.ic_widget_wifi_not_connected;
        } else if (!readConnectivity(context)) {
            resId = R.drawable.ic_widget_wifi_no_internet;
        } else {
            // internet is connected and working, show nothing
            resId = android.R.color.transparent;
        }

        return resId;
!!!1284663.java!!!	writeConnectivity(inout context : Context, inout inetConnected : boolean) : void
        context.getSharedPreferences(SHARED_PREFS, Context.MODE_PRIVATE).edit()
                .putBoolean(EXTRA_INET_CONDITION, inetConnected).apply();
!!!1284791.java!!!	readConnectivity(inout context : Context) : boolean
        return context.getSharedPreferences(SHARED_PREFS, Context.MODE_PRIVATE).getBoolean(
                EXTRA_INET_CONDITION, true);
