format 76
"rtp" // nougat_src::frameworks::base::core::java::android::net::rtp
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/opt/net/voip/src/java/android/net/rtp/"
  java_package "android.net.rtp"
  classview 267063 "rtp"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 2045623 "AudioCodec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class defines a collection of audio codecs to be used with
{@link AudioStream}s. Their parameters are designed to be exchanged using
Session Description Protocol (SDP). Most of the values listed here can be
found in RFC 3551, while others are described in separated standards.

<p>Few simple configurations are defined as public static instances for the
convenience of direct uses. More complicated ones could be obtained using
{@link #getCodec(int, String, String)}. For example, one can use the
following snippet to create a mode-1-only AMR codec.</p>
<pre>
AudioCodec codec = AudioCodec.getCodec(100, \"AMR/8000\", \"mode-set=1\");
</pre>

@see AudioStream"
      attribute 6728503 "type"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The RTP payload type of the encoding.
"
      end

      classrelation 6340535 // rtpmap (<unidirectional association>)
	relation 6340535 --->
	  a role_name "rtpmap" const_relation public
	    comment "
The encoding parameters to be used in the corresponding SDP attribute.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6340535 // rtpmap (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 6340663 // fmtp (<unidirectional association>)
	relation 6340663 --->
	  a role_name "fmtp" const_relation public
	    comment "
The format parameters to be used in the corresponding SDP attribute.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6340663 // fmtp (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 6340791 // PCMU (<unidirectional association>)
	relation 6340791 --->
	  a role_name "PCMU" init_value " new AudioCodec(0, \"PCMU/8000\", null)" class_relation const_relation public
	    comment "
G.711 u-law audio codec.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6340791 // PCMU (<unidirectional association>)
	  b parent class_ref 2045623 // AudioCodec
      end

      classrelation 6340919 // PCMA (<unidirectional association>)
	relation 6340919 --->
	  a role_name "PCMA" init_value " new AudioCodec(8, \"PCMA/8000\", null)" class_relation const_relation public
	    comment "
G.711 a-law audio codec.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6340919 // PCMA (<unidirectional association>)
	  b parent class_ref 2045623 // AudioCodec
      end

      classrelation 6341047 // GSM (<unidirectional association>)
	relation 6341047 --->
	  a role_name "GSM" init_value " new AudioCodec(3, \"GSM/8000\", null)" class_relation const_relation public
	    comment "
GSM Full-Rate audio codec, also known as GSM-FR, GSM 06.10, GSM, or
simply FR.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6341047 // GSM (<unidirectional association>)
	  b parent class_ref 2045623 // AudioCodec
      end

      classrelation 6341175 // GSM_EFR (<unidirectional association>)
	relation 6341175 --->
	  a role_name "GSM_EFR" init_value " new AudioCodec(96, \"GSM-EFR/8000\", null)" class_relation const_relation public
	    comment "
GSM Enhanced Full-Rate audio codec, also known as GSM-EFR, GSM 06.60, or
simply EFR.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6341175 // GSM_EFR (<unidirectional association>)
	  b parent class_ref 2045623 // AudioCodec
      end

      classrelation 6341303 // AMR (<unidirectional association>)
	relation 6341303 --->
	  a role_name "AMR" init_value " new AudioCodec(97, \"AMR/8000\", null)" class_relation const_relation public
	    comment "
Adaptive Multi-Rate narrowband audio codec, also known as AMR or AMR-NB.
Currently CRC, robust sorting, and interleaving are not supported. See
more details about these features in RFC 4867.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6341303 // AMR (<unidirectional association>)
	  b parent class_ref 2045623 // AudioCodec
      end

      classrelation 6341431 // sCodecs (<unidirectional association>)
	relation 6341431 --->
	  a role_name "sCodecs" multiplicity "[]" init_value " {GSM_EFR, AMR, GSM, PCMU, PCMA}" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6341431 // sCodecs (<unidirectional association>)
	  b parent class_ref 2045623 // AudioCodec
      end

      operation 36700215 "AudioCodec"
	private explicit_return_type ""
	nparams 3
	  param in name "type" explicit_type "int"
	  param inout name "rtpmap" type class_ref 129591 // String
	  param inout name "fmtp" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 36700343 "getCodecs"
	class_operation public return_type class_ref 2045623 // AudioCodec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns system supported audio codecs."
      end

      operation 36700471 "getCodec"
	class_operation public return_type class_ref 2045623 // AudioCodec
	nparams 3
	  param in name "type" explicit_type "int"
	  param inout name "rtpmap" type class_ref 129591 // String
	  param inout name "fmtp" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an AudioCodec according to the given configuration.

@param type The payload type of the encoding defined in RTP/AVP.
@param rtpmap The encoding parameters specified in the corresponding SDP
    attribute, or null if it is not available.
@param fmtp The format parameters specified in the corresponding SDP
    attribute, or null if it is not available.
@return The configured AudioCodec or {@code null} if it is not supported."
      end
    end

    class 2045751 "AudioGroup"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An AudioGroup is an audio hub for the speaker, the microphone, and
{@link AudioStream}s. Each of these components can be logically turned on
or off by calling {@link #setMode(int)} or {@link RtpStream#setMode(int)}.
The AudioGroup will go through these components and process them one by one
within its execution loop. The loop consists of four steps. First, for each
AudioStream not in {@link RtpStream#MODE_SEND_ONLY}, decodes its incoming
packets and stores in its buffer. Then, if the microphone is enabled,
processes the recorded audio and stores in its buffer. Third, if the speaker
is enabled, mixes all AudioStream buffers and plays back. Finally, for each
AudioStream not in {@link RtpStream#MODE_RECEIVE_ONLY}, mixes all other
buffers and sends back the encoded packets. An AudioGroup does nothing if
there is no AudioStream in it.

<p>Few things must be noticed before using these classes. The performance is
highly related to the system load and the network bandwidth. Usually a
simpler {@link AudioCodec} costs fewer CPU cycles but requires more network
bandwidth, and vise versa. Using two AudioStreams at the same time doubles
not only the load but also the bandwidth. The condition varies from one
device to another, and developers should choose the right combination in
order to get the best result.</p>

<p>It is sometimes useful to keep multiple AudioGroups at the same time. For
example, a Voice over IP (VoIP) application might want to put a conference
call on hold in order to make a new call but still allow people in the
conference call talking to each other. This can be done easily using two
AudioGroups, but there are some limitations. Since the speaker and the
microphone are globally shared resources, only one AudioGroup at a time is
allowed to run in a mode other than {@link #MODE_ON_HOLD}. The others will
be unable to acquire these resources and fail silently.</p>

<p class=\"note\">Using this class requires
{@link android.Manifest.permission#RECORD_AUDIO} permission. Developers
should set the audio mode to {@link AudioManager#MODE_IN_COMMUNICATION}
using {@link AudioManager#setMode(int)} and change it back when none of
the AudioGroups is in use.</p>

@see AudioStream"
      attribute 6728631 "MODE_ON_HOLD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This mode is similar to {@link #MODE_NORMAL} except the speaker and
the microphone are both disabled.
"
      end

      attribute 6728759 "MODE_MUTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This mode is similar to {@link #MODE_NORMAL} except the microphone is
disabled.
"
      end

      attribute 6728887 "MODE_NORMAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This mode indicates that the speaker, the microphone, and all
{@link AudioStream}s in the group are enabled. First, the packets
received from the streams are decoded and mixed with the audio recorded
from the microphone. Then, the results are played back to the speaker,
encoded and sent back to each stream.
"
      end

      attribute 6729015 "MODE_ECHO_SUPPRESSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This mode is similar to {@link #MODE_NORMAL} except the echo suppression
is enabled. It should be only used when the speaker phone is on.
"
      end

      attribute 6729143 "MODE_LAST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6341559 // mStreams (<unidirectional association>)
	relation 6341559 --->
	  stereotype "Map"
	  a role_name "mStreams" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Long> ${name}${value};
"
	    classrelation_ref 6341559 // mStreams (<unidirectional association>)
	  b parent class_ref 2045879 // AudioStream
      end

      attribute 6729271 "mMode"
	private explicit_type "int"
	init_value " MODE_ON_HOLD"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6729399 "mNative"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 164919 "initialization"
	
	cpp "" ""
	java "  static {
        System.loadLibrary(\"rtp_jni\");
    }"
	php ""
	python ""
	idl ""
      end

      operation 36700599 "AudioGroup"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty AudioGroup."
      end

      operation 36700727 "getStreams"
	public return_type class_ref 2045879 // AudioStream
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link AudioStream}s in this group."
      end

      operation 36700855 "getMode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current mode."
      end

      operation 36700983 "setMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the current mode. It must be one of {@link #MODE_ON_HOLD},
{@link #MODE_MUTED}, {@link #MODE_NORMAL}, and
{@link #MODE_ECHO_SUPPRESSION}.

@param mode The mode to change to.
@throws IllegalArgumentException if the mode is invalid."
      end

      operation 36701111 "nativeSetMode"
	private explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 36701239 "add"
	package explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 2045879 // AudioStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Package-private method used by AudioStream.join()."
      end

      operation 36701367 "nativeAdd"
	private explicit_return_type "long"
	nparams 7
	  param in name "mode" explicit_type "int"
	  param in name "socket" explicit_type "int"
	  param inout name "remoteAddress" type class_ref 129591 // String
	  param in name "remotePort" explicit_type "int"
	  param inout name "codecSpec" type class_ref 129591 // String
	  param in name "dtmfType" explicit_type "int"
	  param inout name "opPackageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws};
"
	
	
	
      end

      operation 36701495 "remove"
	package explicit_return_type "void"
	nparams 1
	  param inout name "stream" type class_ref 2045879 // AudioStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Package-private method used by AudioStream.join()."
      end

      operation 36701623 "nativeRemove"
	private explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 36701751 "sendDtmf"
	public explicit_return_type "void"
	nparams 1
	  param in name "event" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a DTMF digit to every {@link AudioStream} in this group. Currently
only event {@code 0} to {@code 15} are supported.

@throws IllegalArgumentException if the event is invalid."
      end

      operation 36701879 "nativeSendDtmf"
	private explicit_return_type "void"
	nparams 1
	  param in name "event" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 36702007 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes every {@link AudioStream} in this group."
      end

      operation 36702135 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 2045879 "AudioStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An AudioStream is a {@link RtpStream} which carrys audio payloads over
Real-time Transport Protocol (RTP). Two different classes are developed in
order to support various usages such as audio conferencing. An AudioStream
represents a remote endpoint which consists of a network mapping and a
configured {@link AudioCodec}. On the other side, An {@link AudioGroup}
represents a local endpoint which mixes all the AudioStreams and optionally
interacts with the speaker and the microphone at the same time. The simplest
usage includes one for each endpoints. For other combinations, developers
should be aware of the limitations described in {@link AudioGroup}.

<p>An AudioStream becomes busy when it joins an AudioGroup. In this case most
of the setter methods are disabled. This is designed to ease the task of
managing native resources. One can always make an AudioStream leave its
AudioGroup by calling {@link #join(AudioGroup)} with {@code null} and put it
back after the modification is done.</p>

<p class=\"note\">Using this class requires
{@link android.Manifest.permission#INTERNET} permission.</p>

@see RtpStream
@see AudioGroup"
      classrelation 6341687 // <generalisation>
	relation 6341687 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6341687 // <generalisation>
	  b parent class_ref 2046007 // RtpStream
      end

      classrelation 6341815 // mCodec (<unidirectional association>)
	relation 6341815 --->
	  a role_name "mCodec" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6341815 // mCodec (<unidirectional association>)
	  b parent class_ref 2045623 // AudioCodec
      end

      attribute 6730807 "mDtmfType"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6341943 // mGroup (<unidirectional association>)
	relation 6341943 --->
	  a role_name "mGroup" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6341943 // mGroup (<unidirectional association>)
	  b parent class_ref 2045751 // AudioGroup
      end

      operation 36704055 "AudioStream"
	public explicit_return_type ""
	nparams 1
	  param inout name "address" explicit_type "InetAddress"
	nexceptions 1
	  explicit_exception "SocketException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an AudioStream on the given local address. Note that the local
port is assigned automatically to conform with RFC 3550.

@param address The network address of the local host to bind to.
@throws SocketException if the address cannot be bound or a problem
    occurs during binding."
      end

      operation 36704183 "isBusy"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns {@code true} if the stream has already joined an
{@link AudioGroup}."
      end

      operation 36704311 "getGroup"
	public return_type class_ref 2045751 // AudioGroup
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the joined {@link AudioGroup}."
      end

      operation 36704439 "join"
	public explicit_return_type "void"
	nparams 1
	  param inout name "group" type class_ref 2045751 // AudioGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Joins an {@link AudioGroup}. Each stream can join only one group at a
time. The group can be changed by passing a different one or removed
by calling this method with {@code null}.

@param group The AudioGroup to join or {@code null} to leave.
@throws IllegalStateException if the stream is not properly configured.
@see AudioGroup"
      end

      operation 36704567 "getCodec"
	public return_type class_ref 2045623 // AudioCodec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link AudioCodec}, or {@code null} if it is not set.

@see #setCodec(AudioCodec)"
      end

      operation 36704695 "setCodec"
	public explicit_return_type "void"
	nparams 1
	  param inout name "codec" type class_ref 2045623 // AudioCodec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link AudioCodec}.

@param codec The AudioCodec to be used.
@throws IllegalArgumentException if its type is used by DTMF.
@throws IllegalStateException if the stream is busy."
      end

      operation 36704823 "getDtmfType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the RTP payload type for dual-tone multi-frequency (DTMF) digits,
or {@code -1} if it is not enabled.

@see #setDtmfType(int)"
      end

      operation 36704951 "setDtmfType"
	public explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the RTP payload type for dual-tone multi-frequency (DTMF) digits.
The primary usage is to send digits to the remote gateway to perform
certain tasks, such as second-stage dialing. According to RFC 2833, the
RTP payload type for DTMF is assigned dynamically, so it must be in the
range of 96 and 127. One can use {@code -1} to disable DTMF and free up
the previous assigned type. This method cannot be called when the stream
already joined an {@link AudioGroup}.

@param type The RTP payload type to be used or {@code -1} to disable it.
@throws IllegalArgumentException if the type is invalid or used by codec.
@throws IllegalStateException if the stream is busy.
@see AudioGroup#sendDtmf(int)"
      end
    end

    class 2046007 "RtpStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "RtpStream represents the base class of streams which send and receive network
packets with media payloads over Real-time Transport Protocol (RTP).

<p class=\"note\">Using this class requires
{@link android.Manifest.permission#INTERNET} permission.</p>"
      attribute 6729527 "MODE_NORMAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This mode indicates that the stream sends and receives packets at the
same time. This is the initial mode for new streams.
"
      end

      attribute 6729655 "MODE_SEND_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This mode indicates that the stream only sends packets.
"
      end

      attribute 6729783 "MODE_RECEIVE_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This mode indicates that the stream only receives packets.
"
      end

      attribute 6729911 "MODE_LAST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6730039 "mLocalAddress"
	const_attribute private explicit_type "InetAddress"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6730167 "mLocalPort"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6730295 "mRemoteAddress"
	private explicit_type "InetAddress"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6730423 "mRemotePort"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6730551 "mMode"
	private explicit_type "int"
	init_value " MODE_NORMAL"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6730679 "mSocket"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 165047 "initialization"
	
	cpp "" ""
	java "  static {
        System.loadLibrary(\"rtp_jni\");
    }"
	php ""
	python ""
	idl ""
      end

      operation 36702263 "RtpStream"
	package explicit_return_type ""
	nparams 1
	  param inout name "address" explicit_type "InetAddress"
	nexceptions 1
	  explicit_exception "SocketException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a RtpStream on the given local address. Note that the local
port is assigned automatically to conform with RFC 3550.

@param address The network address of the local host to bind to.
@throws SocketException if the address cannot be bound or a problem
    occurs during binding."
      end

      operation 36702391 "create"
	private explicit_return_type "int"
	nparams 1
	  param inout name "address" type class_ref 129591 // String
	nexceptions 1
	  explicit_exception "SocketException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 36702519 "getLocalAddress"
	public explicit_return_type "InetAddress"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the network address of the local host."
      end

      operation 36702647 "getLocalPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the network port of the local host."
      end

      operation 36702775 "getRemoteAddress"
	public explicit_return_type "InetAddress"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the network address of the remote host or {@code null} if the
stream is not associated."
      end

      operation 36702903 "getRemotePort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the network port of the remote host or {@code -1} if the stream
is not associated."
      end

      operation 36703031 "isBusy"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if the stream is busy. In this case most of the
setter methods are disabled. This method is intended to be overridden
by subclasses."
      end

      operation 36703159 "getMode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current mode."
      end

      operation 36703287 "setMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the current mode. It must be one of {@link #MODE_NORMAL},
{@link #MODE_SEND_ONLY}, and {@link #MODE_RECEIVE_ONLY}.

@param mode The mode to change to.
@throws IllegalArgumentException if the mode is invalid.
@throws IllegalStateException if the stream is busy.
@see #isBusy()"
      end

      operation 36703415 "associate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "address" explicit_type "InetAddress"
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Associates with a remote host. This defines the destination of the
outgoing packets.

@param address The network address of the remote host.
@param port The network port of the remote host.
@throws IllegalArgumentException if the address is not supported or the
    port is invalid.
@throws IllegalStateException if the stream is busy.
@see #isBusy()"
      end

      operation 36703543 "getSocket"
	package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 36703671 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases allocated resources. The stream becomes inoperable after calling
this method.

@throws IllegalStateException if the stream is busy.
@see #isBusy()"
      end

      operation 36703799 "close"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 36703927 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end
  end

  deploymentview 232503 "rtp"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1142967 "AudioCodec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 2045623 // AudioCodec
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1143095 "AudioGroup"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.ActivityThread;
import android.media.AudioManager;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 2045751 // AudioGroup
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1143223 "RtpStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import java.net.Inet4Address;
import java.net.Inet6Address;
import java.net.SocketException;
${definition}"
      associated_classes
	class_ref 2046007 // RtpStream
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1143351 "AudioStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import java.net.SocketException;
${definition}"
      associated_classes
	class_ref 2045879 // AudioStream
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
