class PackageInstaller
!!!2739511.java!!!	PackageInstaller(inout context : Context, inout pm : PackageManager, inout installer : IPackageInstaller, inout installerPackageName : String, in userId : int)
        mContext = context;
        mPm = pm;
        mInstaller = installer;
        mInstallerPackageName = installerPackageName;
        mUserId = userId;
!!!2739639.java!!!	createSession(inout params : PackageInstaller::SessionParams) : int
        try {
            return mInstaller.createSession(params, mInstallerPackageName, mUserId);
        } catch (RuntimeException e) {
            ExceptionUtils.maybeUnwrapIOException(e);
            throw e;
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!2739767.java!!!	openSession(in sessionId : int) : PackageInstaller::Session
        try {
            return new Session(mInstaller.openSession(sessionId));
        } catch (RuntimeException e) {
            ExceptionUtils.maybeUnwrapIOException(e);
            throw e;
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!2739895.java!!!	updateSessionAppIcon(in sessionId : int, inout appIcon : Bitmap) : void
        try {
            mInstaller.updateSessionAppIcon(sessionId, appIcon);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!2740023.java!!!	updateSessionAppLabel(in sessionId : int, inout appLabel : CharSequence) : void
        try {
            final String val = (appLabel != null) ? appLabel.toString() : null;
            mInstaller.updateSessionAppLabel(sessionId, val);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!2740151.java!!!	abandonSession(in sessionId : int) : void
        try {
            mInstaller.abandonSession(sessionId);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!2740279.java!!!	getSessionInfo(in sessionId : int) : PackageInstaller::SessionInfo
        try {
            return mInstaller.getSessionInfo(sessionId);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!2740407.java!!!	getAllSessions() : PackageInstaller::SessionInfo
        try {
            return mInstaller.getAllSessions(mUserId).getList();
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!2740535.java!!!	getMySessions() : PackageInstaller::SessionInfo
        try {
            return mInstaller.getMySessions(mInstallerPackageName, mUserId).getList();
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!2740663.java!!!	uninstall(inout packageName : String, inout statusReceiver : IntentSender) : void
        try {
            mInstaller.uninstall(packageName, mInstallerPackageName, 0, statusReceiver, mUserId);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!2740791.java!!!	setPermissionsResult(in sessionId : int, inout accepted : boolean) : void
        try {
            mInstaller.setPermissionsResult(sessionId, accepted);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!2742455.java!!!	addSessionCallback(inout callback : PackageInstaller::SessionCallback) : void
        registerSessionCallback(callback);
!!!2742583.java!!!	registerSessionCallback(inout callback : PackageInstaller::SessionCallback) : void
        registerSessionCallback(callback, new Handler());
!!!2742711.java!!!	addSessionCallback(inout callback : PackageInstaller::SessionCallback, inout handler : Handler) : void
        registerSessionCallback(callback, handler);
!!!2742839.java!!!	registerSessionCallback(inout callback : PackageInstaller::SessionCallback, inout handler : Handler) : void
        synchronized (mDelegates) {
            final SessionCallbackDelegate delegate = new SessionCallbackDelegate(callback,
                    handler.getLooper());
            try {
                mInstaller.registerCallback(delegate, mUserId);
            } catch (RemoteException e) {
                throw e.rethrowFromSystemServer();
            }
            mDelegates.add(delegate);
        }
!!!2742967.java!!!	removeSessionCallback(inout callback : PackageInstaller::SessionCallback) : void
        unregisterSessionCallback(callback);
!!!2743095.java!!!	unregisterSessionCallback(inout callback : PackageInstaller::SessionCallback) : void
        synchronized (mDelegates) {
            for (Iterator<SessionCallbackDelegate> i = mDelegates.iterator(); i.hasNext();) {
                final SessionCallbackDelegate delegate = i.next();
                if (delegate.mCallback == callback) {
                    try {
                        mInstaller.unregisterCallback(delegate);
                    } catch (RemoteException e) {
                        throw e.rethrowFromSystemServer();
                    }
                    i.remove();
                }
            }
        }
