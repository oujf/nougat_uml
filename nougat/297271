format 76
"customtabs" // nougat_src::frameworks::base::core::java::android::support::customtabs
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/support/customtabs/src/android/support/customtabs/"
  java_package "android.support.customtabs"
  classview 278199 "customtabs"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 2268727 "CustomTabsCallback"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A callback class for custom tabs client to get messages regarding events in their custom tabs."
      attribute 7624375 "NAVIGATION_STARTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sent when the tab has started loading a page.
"
      end

      attribute 7624503 "NAVIGATION_FINISHED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sent when the tab has finished loading a page.
"
      end

      attribute 7624631 "NAVIGATION_FAILED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sent when the tab couldn't finish loading due to a failure.
"
      end

      attribute 7624759 "NAVIGATION_ABORTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sent when loading was aborted by a user action before it finishes like clicking on a link
or refreshing the page.
"
      end

      attribute 7624887 "TAB_SHOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sent when the tab becomes visible.
"
      end

      attribute 7625015 "TAB_HIDDEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sent when the tab becomes hidden.
"
      end

      operation 38804919 "onNavigationEvent"
	public explicit_return_type "void"
	nparams 2
	  param in name "navigationEvent" explicit_type "int"
	  param inout name "extras" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To be called when a navigation event happens.

@param navigationEvent The code corresponding to the navigation event.
@param extras Reserved for future use."
      end

      operation 38805047 "extraCallback"
	public explicit_return_type "void"
	nparams 2
	  param inout name "callbackName" type class_ref 129591 // String
	  param inout name "args" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unsupported callbacks that may be provided by the implementation.

<p>
<strong>Note:</strong>Clients should <strong>never</strong> rely on this callback to be
called and/or to have a defined behavior, as it is entirely implementation-defined and not
supported.

<p> This can be used by implementations to add extra callbacks, for testing or experimental
purposes.

@param callbackName Name of the extra callback.
@param args Arguments for the calback"
      end
    end

    class 2268855 "CustomTabsClient"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class to communicate with a {@link CustomTabsService} and create
{@link CustomTabsSession} from it."
      attribute 7625143 "mService"
	const_attribute private explicit_type "ICustomTabsService"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7163831 // mServiceComponentName (<unidirectional association>)
	relation 7163831 --->
	  a role_name "mServiceComponentName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7163831 // mServiceComponentName (<unidirectional association>)
	  b parent class_ref 132279 // ComponentName
      end

      operation 38805175 "CustomTabsClient"
	package explicit_return_type ""
	nparams 2
	  param inout name "service" explicit_type "ICustomTabsService"
	  param inout name "componentName" type class_ref 132279 // ComponentName
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 38805303 "bindCustomTabsService"
	class_operation public explicit_return_type "boolean"
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "packageName" type class_ref 129591 // String
	  param inout name "connection" type class_ref 2268983 // CustomTabsServiceConnection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Bind to a {@link CustomTabsService} using the given package name and
{@link ServiceConnection}.
@param context     {@link Context} to use while calling
                   {@link Context#bindService(Intent, ServiceConnection, int)}
@param packageName Package name to set on the {@link Intent} for binding.
@param connection  {@link CustomTabsServiceConnection} to use when binding. This will
                   return a {@link CustomTabsClient} on
                   {@link CustomTabsServiceConnection
                   #onCustomTabsServiceConnected(ComponentName, CustomTabsClient)}
@return Whether the binding was successful."
      end

      operation 38805431 "getPackageName"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "packages" explicit_type "List<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred package to use for Custom Tabs, preferring the default VIEW handler.

@see {@link #getPackageName(Context, List<String>, boolean)}."
      end

      operation 38805559 "getPackageName"
	class_operation public return_type class_ref 129591 // String
	nparams 3
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "packages" explicit_type "List<String>"
	  param inout name "ignoreDefault" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @Nullable ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the preferred package to use for Custom Tabs.

The preferred package name is the default VIEW intent handler as long as it supports Custom
Tabs. To modify this preferred behavior, set <code>ignoreDefault</code> to true and give a
non empty list of package names in <code>packages</code>.

@param context       {@link Context} to use for querying the packages.
@param packages      Ordered list of packages to test for Custom Tabs support, in
                     decreasing order of priority.
@param ignoreDefault If set, the default VIEW handler won't get priority over other browsers.
@return The preferred package name for handling Custom Tabs, or <code>null</code>."
      end

      operation 38805687 "connectAndInitialize"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "context" type class_ref 128567 // Context
	  param inout name "packageName" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects to the Custom Tabs warmup service, and initializes the browser.

This convenience method connects to the service, and immediately warms up the Custom Tabs
implementation. Since service connection is asynchronous, the return code is not the return
code of warmup.
This call is optional, and clients are encouraged to connect to the service, call
<code>warmup()</code> and create a session. In this case, calling this method is not
necessary.

@param context     {@link Context} to use to connect to the remote service.
@param packageName Package name of the target implamentation.
@return Whether the binding was successful."
      end

      operation 38805815 "warmup"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Warm up the browser process.

Allows the browser application to pre-initialize itself in the background. Significantly
speeds up URL opening in the browser. This is asynchronous and can be called several times.

@param flags Reserved for future use.
@return      Whether the warmup was successful."
      end

      operation 38805943 "newSession"
	public return_type class_ref 2269111 // CustomTabsSession
	nparams 1
	  param in name "callback" type class_ref 2268727 // CustomTabsCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new session through an ICustomTabsService with the optional callback. This session
can be used to associate any related communication through the service with an intent and
then later with a Custom Tab. The client can then send later service calls or intents to
through same session-intent-Custom Tab association.
@param callback The callback through which the client will receive updates about the created
                session. Can be null.
@return The session object that was created as a result of the transaction. The client can
        use this to relay {@link CustomTabsSession#mayLaunchUrl(Uri, Bundle, List)} calls.
        Null on error."
      end

      operation 38806071 "extraCommand"
	public return_type class_ref 131511 // Bundle
	nparams 2
	  param inout name "commandName" type class_ref 129591 // String
	  param inout name "args" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 2268983 "CustomTabsServiceConnection"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract {@link ServiceConnection} to use while binding to a {@link CustomTabsService}. Any
client implementing this is responsible for handling changes related with the lifetime of the
connection like rebinding on disconnect."
      classrelation 7167927 // <realization>
	relation 7167927 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7167927 // <realization>
	  b parent class_ref 132407 // ServiceConnection
      end

      operation 38809527 "onServiceConnected"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 132279 // ComponentName
	  param inout name "service" type class_ref 132919 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38809655 "onCustomTabsServiceConnected"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 132279 // ComponentName
	  param inout name "client" type class_ref 2268855 // CustomTabsClient
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a connection to the {@link CustomTabsService} has been established.
@param name   The concrete component name of the service that has been connected.
@param client {@link CustomTabsClient} that contains the {@link IBinder} with which the
              connection have been established. All further communication should be initiated
              using this client."
      end
    end

    class 2269111 "CustomTabsSession"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class to be used for Custom Tabs related communication. Clients that want to launch Custom Tabs
can use this class exclusively to handle all related communication."
      classrelation 7168055 // TAG (<unidirectional association>)
	relation 7168055 --->
	  a role_name "TAG" init_value " \"CustomTabsSession\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7168055 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 7625911 "mService"
	const_attribute private explicit_type "ICustomTabsService"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 7626039 "mCallback"
	const_attribute private explicit_type "ICustomTabsCallback"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7168183 // mComponentName (<unidirectional association>)
	relation 7168183 --->
	  a role_name "mComponentName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7168183 // mComponentName (<unidirectional association>)
	  b parent class_ref 132279 // ComponentName
      end

      operation 38809783 "CustomTabsSession"
	package explicit_return_type ""
	nparams 3
	  param inout name "service" explicit_type "ICustomTabsService"
	  param inout name "callback" explicit_type "ICustomTabsCallback"
	  param inout name "componentName" type class_ref 132279 // ComponentName
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package "
      end

      operation 38809911 "mayLaunchUrl"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "url" type class_ref 133047 // Uri
	  param inout name "extras" type class_ref 131511 // Bundle
	  param inout name "otherLikelyBundles" explicit_type "List<Bundle>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the browser of a likely future navigation to a URL.
The most likely URL has to be specified first. Optionally, a list of
other likely URLs can be provided. They are treated as less likely than
the first one, and have to be sorted in decreasing priority order. These
additional URLs may be ignored.
All previous calls to this method will be deprioritized.

@param url                Most likely URL.
@param extras             Reserved for future use.
@param otherLikelyBundles Other likely destinations, sorted in decreasing
                          likelihood order. Inside each Bundle, the client should provide a
                          {@link Uri} using {@link CustomTabsService#KEY_URL} with
                          {@link Bundle#putParcelable(String, android.os.Parcelable)}.
@return                   true for success."
      end

      operation 38810039 "setActionButton"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "icon" type class_ref 131127 // Bitmap
	  param inout name "description" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This sets the action button on the toolbar with ID
{@link CustomTabsIntent#TOOLBAR_ACTION_BUTTON_ID}.

@param icon          The new icon of the action button.
@param description   Content description of the action button.

@see {@link CustomTabsSession#setToolbarItem(int, Bitmap, String)}"
      end

      operation 38810167 "setToolbarItem"
	public explicit_return_type "boolean"
	nparams 3
	  param in name "id" explicit_type "int"
	  param inout name "icon" type class_ref 131127 // Bitmap
	  param inout name "description" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @NonNull ${t1} ${p1}, @NonNull ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the visuals for toolbar items. Will only succeed if a custom tab created using this
session is in the foreground in browser and the given id is valid.
@param id            The id for the item to update.
@param icon          The new icon of the toolbar item.
@param description   Content description of the toolbar item.
@return              Whether the update succeeded."
      end

      operation 38810295 "getBinder"
	package return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package "
      end

      operation 38810423 "getComponentName"
	package return_type class_ref 132279 // ComponentName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " package "
      end
    end

    class 2269239 "CustomTabsIntent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class holding the {@link Intent} and start bundle for a Custom Tabs Activity.

<p>
<strong>Note:</strong> The constants below are public for the browser implementation's benefit.
You are strongly encouraged to use {@link CustomTabsIntent.Builder}.</p>"
      classrelation 7163959 // EXTRA_SESSION (<unidirectional association>)
	relation 7163959 --->
	  a role_name "EXTRA_SESSION" init_value " \"android.support.customtabs.extra.SESSION\"" class_relation const_relation public
	    comment "
Extra used to match the session. This has to be included in the intent to open in
a custom tab. This is the same IBinder that gets passed to ICustomTabsService#newSession.
Null if there is no need to match any service side sessions with the intent.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7163959 // EXTRA_SESSION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7164087 // EXTRA_TOOLBAR_COLOR (<unidirectional association>)
	relation 7164087 --->
	  a role_name "EXTRA_TOOLBAR_COLOR" init_value "
            \"android.support.customtabs.extra.TOOLBAR_COLOR\"" class_relation const_relation public
	    comment "
Extra that changes the background color for the toolbar. colorRes is an int that specifies a
{@link Color}, not a resource id.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7164087 // EXTRA_TOOLBAR_COLOR (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7164215 // EXTRA_ENABLE_URLBAR_HIDING (<unidirectional association>)
	relation 7164215 --->
	  a role_name "EXTRA_ENABLE_URLBAR_HIDING" init_value "
            \"android.support.customtabs.extra.ENABLE_URLBAR_HIDING\"" class_relation const_relation public
	    comment "
Boolean extra that enables the url bar to hide as the user scrolls down the page

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7164215 // EXTRA_ENABLE_URLBAR_HIDING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7164343 // EXTRA_CLOSE_BUTTON_ICON (<unidirectional association>)
	relation 7164343 --->
	  a role_name "EXTRA_CLOSE_BUTTON_ICON" init_value "
            \"android.support.customtabs.extra.CLOSE_BUTTON_ICON\"" class_relation const_relation public
	    comment "
Extra bitmap that specifies the icon of the back button on the toolbar. If the client chooses
not to customize it, a default close button will be used.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7164343 // EXTRA_CLOSE_BUTTON_ICON (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7164471 // EXTRA_TITLE_VISIBILITY_STATE (<unidirectional association>)
	relation 7164471 --->
	  a role_name "EXTRA_TITLE_VISIBILITY_STATE" init_value "
            \"android.support.customtabs.extra.TITLE_VISIBILITY\"" class_relation const_relation public
	    comment "
Extra (int) that specifies state for showing the page title. Default is {@link #NO_TITLE}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7164471 // EXTRA_TITLE_VISIBILITY_STATE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 7625271 "NO_TITLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Don't show any title. Shows only the domain.
"
      end

      attribute 7625399 "SHOW_PAGE_TITLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Shows the page title and the domain.
"
      end

      classrelation 7164599 // EXTRA_ACTION_BUTTON_BUNDLE (<unidirectional association>)
	relation 7164599 --->
	  a role_name "EXTRA_ACTION_BUTTON_BUNDLE" init_value "
            \"android.support.customtabs.extra.ACTION_BUTTON_BUNDLE\"" class_relation const_relation public
	    comment "
Bundle used for adding a custom action button to the custom tab toolbar. The client should
provide a description, an icon {@link Bitmap} and a {@link PendingIntent} for the button.
All three keys must be present.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7164599 // EXTRA_ACTION_BUTTON_BUNDLE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7164727 // EXTRA_TOOLBAR_ITEMS (<unidirectional association>)
	relation 7164727 --->
	  a role_name "EXTRA_TOOLBAR_ITEMS" init_value "
            \"android.support.customtabs.extra.TOOLBAR_ITEMS\"" class_relation const_relation public
	    comment "
List<Bundle> used for adding items to the top and bottom toolbars. The client should
provide an ID, a description, an icon {@link Bitmap} for each item. They may also provide a
{@link PendingIntent} if the item is a button.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7164727 // EXTRA_TOOLBAR_ITEMS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7164855 // EXTRA_SECONDARY_TOOLBAR_COLOR (<unidirectional association>)
	relation 7164855 --->
	  a role_name "EXTRA_SECONDARY_TOOLBAR_COLOR" init_value "
            \"android.support.customtabs.extra.SECONDARY_TOOLBAR_COLOR\"" class_relation const_relation public
	    comment "
Extra that changes the background color for the secondary toolbar. The value should be an
int that specifies a {@link Color}, not a resource id.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7164855 // EXTRA_SECONDARY_TOOLBAR_COLOR (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7164983 // KEY_ICON (<unidirectional association>)
	relation 7164983 --->
	  a role_name "KEY_ICON" init_value " \"android.support.customtabs.customaction.ICON\"" class_relation const_relation public
	    comment "
Key that specifies the {@link Bitmap} to be used as the image source for the action button.
 The icon should't be more than 24dp in height (No padding needed. The button itself will be
 48dp in height) and have a width/height ratio of less than 2.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7164983 // KEY_ICON (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7165111 // KEY_DESCRIPTION (<unidirectional association>)
	relation 7165111 --->
	  a role_name "KEY_DESCRIPTION" init_value "
            \"android.support.customtabs.customaction.DESCRIPTION\"" class_relation const_relation public
	    comment "
Key that specifies the content description for the custom action button.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7165111 // KEY_DESCRIPTION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7165239 // KEY_PENDING_INTENT (<unidirectional association>)
	relation 7165239 --->
	  a role_name "KEY_PENDING_INTENT" init_value "
            \"android.support.customtabs.customaction.PENDING_INTENT\"" class_relation const_relation public
	    comment "
Key that specifies the PendingIntent to launch when the action button or menu item was
clicked. The custom tab will be calling {@link PendingIntent#send()} on clicks after adding
the url as data. The client app can call {@link Intent#getDataString()} to get the url.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7165239 // KEY_PENDING_INTENT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7165367 // EXTRA_TINT_ACTION_BUTTON (<unidirectional association>)
	relation 7165367 --->
	  a role_name "EXTRA_TINT_ACTION_BUTTON" init_value "
            \"android.support.customtabs.extra.TINT_ACTION_BUTTON\"" class_relation const_relation public
	    comment "
Extra boolean that specifies whether the custom action button should be tinted. Default is
false and the action button will not be tinted.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7165367 // EXTRA_TINT_ACTION_BUTTON (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7165495 // EXTRA_MENU_ITEMS (<unidirectional association>)
	relation 7165495 --->
	  a role_name "EXTRA_MENU_ITEMS" init_value " \"android.support.customtabs.extra.MENU_ITEMS\"" class_relation const_relation public
	    comment "
Use an {@code ArrayList<Bundle>} for specifying menu related params. There should be a
separate {@link Bundle} for each custom menu item.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7165495 // EXTRA_MENU_ITEMS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7165623 // KEY_MENU_ITEM_TITLE (<unidirectional association>)
	relation 7165623 --->
	  a role_name "KEY_MENU_ITEM_TITLE" init_value "
            \"android.support.customtabs.customaction.MENU_ITEM_TITLE\"" class_relation const_relation public
	    comment "
Key for specifying the title of a menu item.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7165623 // KEY_MENU_ITEM_TITLE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7165751 // EXTRA_EXIT_ANIMATION_BUNDLE (<unidirectional association>)
	relation 7165751 --->
	  a role_name "EXTRA_EXIT_ANIMATION_BUNDLE" init_value "
            \"android.support.customtabs.extra.EXIT_ANIMATION_BUNDLE\"" class_relation const_relation public
	    comment "
Bundle constructed out of {@link ActivityOptionsCompat} that will be running when the
{@link Activity} that holds the custom tab gets finished. A similar ActivityOptions
for creation should be constructed and given to the startActivity() call that
launches the custom tab.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7165751 // EXTRA_EXIT_ANIMATION_BUNDLE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7165879 // EXTRA_DEFAULT_SHARE_MENU_ITEM (<unidirectional association>)
	relation 7165879 --->
	  a role_name "EXTRA_DEFAULT_SHARE_MENU_ITEM" init_value "
            \"android.support.customtabs.extra.SHARE_MENU_ITEM\"" class_relation const_relation public
	    comment "
Boolean extra that specifies whether a default share button will be shown in the menu.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7165879 // EXTRA_DEFAULT_SHARE_MENU_ITEM (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7166007 // EXTRA_REMOTEVIEWS (<unidirectional association>)
	relation 7166007 --->
	  a role_name "EXTRA_REMOTEVIEWS" init_value "
            \"android.support.customtabs.extra.EXTRA_REMOTEVIEWS\"" class_relation const_relation public
	    comment "
Extra that specifies the {@link RemoteViews} showing on the secondary toolbar. If this extra
is set, the other secondary toolbar configurations will be overriden. The height of the
{@link RemoteViews} should not exceed 56dp.
@see CustomTabsIntent.Builder#setSecondaryToolbarViews(RemoteViews, int[], PendingIntent).

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7166007 // EXTRA_REMOTEVIEWS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7166135 // EXTRA_REMOTEVIEWS_VIEW_IDS (<unidirectional association>)
	relation 7166135 --->
	  a role_name "EXTRA_REMOTEVIEWS_VIEW_IDS" init_value "
            \"android.support.customtabs.extra.EXTRA_REMOTEVIEWS_VIEW_IDS\"" class_relation const_relation public
	    comment "
Extra that specifies an array of {@link View} ids. When these {@link View}s are clicked, a
{@link PendingIntent} will be sent, carrying the current url of the custom tab as data.
<p>
Note that Custom Tabs will override the default onClick behavior of the listed {@link View}s.
If you do not care about the current url, you can safely ignore this extra and use
{@link RemoteViews#setOnClickPendingIntent(int, PendingIntent)} instead.
@see CustomTabsIntent.Builder#setSecondaryToolbarViews(RemoteViews, int[], PendingIntent).

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7166135 // EXTRA_REMOTEVIEWS_VIEW_IDS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7166263 // EXTRA_REMOTEVIEWS_PENDINGINTENT (<unidirectional association>)
	relation 7166263 --->
	  a role_name "EXTRA_REMOTEVIEWS_PENDINGINTENT" init_value "
            \"android.support.customtabs.extra.EXTRA_REMOTEVIEWS_PENDINGINTENT\"" class_relation const_relation public
	    comment "
Extra that specifies the {@link PendingIntent} to be sent when the user clicks on the
{@link View}s that is listed by {@link #EXTRA_REMOTEVIEWS_VIEW_IDS}.
<p>
Note when this {@link PendingIntent} is triggered, it will have the current url as data
field, also the id of the clicked {@link View}, specified by
{@link #EXTRA_REMOTEVIEWS_CLICKED_ID}.
@see CustomTabsIntent.Builder#setSecondaryToolbarViews(RemoteViews, int[], PendingIntent).

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7166263 // EXTRA_REMOTEVIEWS_PENDINGINTENT (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7166391 // EXTRA_REMOTEVIEWS_CLICKED_ID (<unidirectional association>)
	relation 7166391 --->
	  a role_name "EXTRA_REMOTEVIEWS_CLICKED_ID" init_value "
            \"android.support.customtabs.extra.EXTRA_REMOTEVIEWS_CLICKED_ID\"" class_relation const_relation public
	    comment "
Extra that specifies which {@link View} has been clicked. This extra will be put to the
{@link PendingIntent} sent from Custom Tabs when a view in the {@link RemoteViews} is clicked
@see CustomTabsIntent.Builder#setSecondaryToolbarViews(RemoteViews, int[], PendingIntent).

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7166391 // EXTRA_REMOTEVIEWS_CLICKED_ID (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7166519 // KEY_ID (<unidirectional association>)
	relation 7166519 --->
	  a role_name "KEY_ID" init_value " \"android.support.customtabs.customaction.ID\"" class_relation const_relation public
	    comment "
Key that specifies the unique ID for an action button. To make a button to show on the
toolbar, use {@link #TOOLBAR_ACTION_BUTTON_ID} as its ID.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7166519 // KEY_ID (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 7625527 "TOOLBAR_ACTION_BUTTON_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The ID allocated to the custom action button that is shown on the toolbar.
"
      end

      attribute 7625655 "MAX_TOOLBAR_ITEMS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The maximum allowed number of toolbar items.
"
      end

      classrelation 7166647 // intent (<unidirectional association>)
	relation 7166647 --->
	  a role_name "intent" const_relation public
	    comment "
An {@link Intent} used to start the Custom Tabs Activity.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@NonNull
"
	    classrelation_ref 7166647 // intent (<unidirectional association>)
	  b parent class_ref 131255 // Intent
      end

      classrelation 7166775 // startAnimationBundle (<unidirectional association>)
	relation 7166775 --->
	  a role_name "startAnimationBundle" const_relation public
	    comment "
A {@link Bundle} containing the start animation for the Custom Tabs Activity.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@Nullable
"
	    classrelation_ref 7166775 // startAnimationBundle (<unidirectional association>)
	  b parent class_ref 131511 // Bundle
      end

      operation 38806199 "launchUrl"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 128183 // Activity
	  param inout name "url" type class_ref 133047 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to launch a Custom Tabs Activity.
@param context The source Activity.
@param url The URL to load in the Custom Tab."
      end

      operation 38806327 "CustomTabsIntent"
	private explicit_return_type ""
	nparams 2
	  param inout name "intent" type class_ref 131255 // Intent
	  param inout name "startAnimationBundle" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 2269367 "Builder"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 7166903 // mIntent (<unidirectional association>)
	  relation 7166903 --->
	    a role_name "mIntent" init_value " new Intent(Intent.ACTION_VIEW)" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7166903 // mIntent (<unidirectional association>)
	    b parent class_ref 131255 // Intent
	end

	classrelation 7167031 // mMenuItems (<unidirectional association>)
	  relation 7167031 --->
	    stereotype "ArrayList"
	    a role_name "mMenuItems" init_value " null" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 7167031 // mMenuItems (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	classrelation 7167159 // mStartAnimationBundle (<unidirectional association>)
	  relation 7167159 --->
	    a role_name "mStartAnimationBundle" init_value " null" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 7167159 // mStartAnimationBundle (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	classrelation 7167287 // mActionButtons (<unidirectional association>)
	  relation 7167287 --->
	    stereotype "ArrayList"
	    a role_name "mActionButtons" init_value " null" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 7167287 // mActionButtons (<unidirectional association>)
	    b parent class_ref 131511 // Bundle
	end

	operation 38806455 "Builder"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a {@link CustomTabsIntent.Builder} object associated with no
{@link CustomTabsSession}."
	end

	operation 38806583 "Builder"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "session" type class_ref 2269111 // CustomTabsSession
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}@Nullable ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a {@link CustomTabsIntent.Builder} object associated with a given
{@link CustomTabsSession}.

Guarantees that the {@link Intent} will be sent to the same component as the one the
session is associated with.

@param session The session to associate this Builder with."
	end

	operation 38806711 "setToolbarColor"
	  public return_type class_ref 2269367 // Builder
	  nparams 1
	    param in name "color" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the toolbar color.

@param color {@link Color}"
	end

	operation 38806839 "enableUrlBarHiding"
	  public return_type class_ref 2269367 // Builder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Enables the url bar to hide as the user scrolls down on the page."
	end

	operation 38806967 "setCloseButtonIcon"
	  public return_type class_ref 2269367 // Builder
	  nparams 1
	    param inout name "icon" type class_ref 131127 // Bitmap
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the Close button icon for the custom tab.

@param icon The icon {@link Bitmap}"
	end

	operation 38807095 "setShowTitle"
	  public return_type class_ref 2269367 // Builder
	  nparams 1
	    param inout name "showTitle" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets whether the title should be shown in the custom tab.

@param showTitle Whether the title should be shown."
	end

	operation 38807223 "addMenuItem"
	  public return_type class_ref 2269367 // Builder
	  nparams 2
	    param inout name "label" type class_ref 129591 // String
	    param inout name "pendingIntent" type class_ref 159287 // PendingIntent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a menu item.

@param label Menu label.
@param pendingIntent Pending intent delivered when the menu item is clicked."
	end

	operation 38807351 "addDefaultShareMenuItem"
	  public return_type class_ref 2269367 // Builder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a default share item to the menu."
	end

	operation 38807479 "setActionButton"
	  public return_type class_ref 2269367 // Builder
	  nparams 4
	    param inout name "icon" type class_ref 131127 // Bitmap
	    param inout name "description" type class_ref 129591 // String
	    param inout name "pendingIntent" type class_ref 159287 // PendingIntent
	    param inout name "shouldTint" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @NonNull ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the action button that is displayed in the Toolbar.
<p>
This is equivalent to calling
{@link CustomTabsIntent.Builder#addToolbarItem(int, Bitmap, String, PendingIntent)}
with {@link #TOOLBAR_ACTION_BUTTON_ID} as id.

@param icon The icon.
@param description The description for the button. To be used for accessibility.
@param pendingIntent pending intent delivered when the button is clicked.
@param shouldTint Whether the action button should be tinted.

@see CustomTabsIntent.Builder#addToolbarItem(int, Bitmap, String, PendingIntent)"
	end

	operation 38807607 "setActionButton"
	  public return_type class_ref 2269367 // Builder
	  nparams 3
	    param inout name "icon" type class_ref 131127 // Bitmap
	    param inout name "description" type class_ref 129591 // String
	    param inout name "pendingIntent" type class_ref 159287 // PendingIntent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @NonNull ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the action button that is displayed in the Toolbar with default tinting behavior.

@see {@link CustomTabsIntent.Builder#setActionButton(
Bitmap, String, PendingIntent, boolean)}"
	end

	operation 38807735 "addToolbarItem"
	  public return_type class_ref 2269367 // Builder
	  nparams 4
	    param in name "id" explicit_type "int"
	    param inout name "icon" type class_ref 131127 // Bitmap
	    param inout name "description" type class_ref 129591 // String
	    param inout name "pendingIntent" type class_ref 159287 // PendingIntent
	  nexceptions 1
	    exception class_ref 1052215 // IllegalStateException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @NonNull ${t1} ${p1}, @NonNull ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	  comment "Adds an action button to the custom tab. Multiple buttons can be added via this method.
If the given id equals {@link #TOOLBAR_ACTION_BUTTON_ID}, the button will be placed on
the toolbar; if the bitmap is too wide, it will be put to the bottom bar instead. If
the id is not {@link #TOOLBAR_ACTION_BUTTON_ID}, it will be directly put on secondary
toolbar. The maximum number of allowed toolbar items in a single intent is
{@link CustomTabsIntent#getMaxToolbarItems()}. Throws an
{@link IllegalStateException} when that number is exceeded per intent.

@param id The unique id of the action button. This should be non-negative.
@param icon The icon.
@param description The description for the button. To be used for accessibility.
@param pendingIntent The pending intent delivered when the button is clicked.

@see CustomTabsIntent#getMaxToolbarItems()
@deprecated Use
CustomTabsIntent.Builder#setSecondaryToolbarViews(RemoteViews, int[], PendingIntent)."
	end

	operation 38807863 "setSecondaryToolbarColor"
	  public return_type class_ref 2269367 // Builder
	  nparams 1
	    param in name "color" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the color of the secondary toolbar.
@param color The color for the secondary toolbar."
	end

	operation 38807991 "setSecondaryToolbarViews"
	  public return_type class_ref 2269367 // Builder
	  nparams 3
	    param inout name "remoteViews" type class_ref 281527 // RemoteViews
	    param inout name "clickableIDs" explicit_type "int"
	    param inout name "pendingIntent" type class_ref 159287 // PendingIntent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @Nullable ${t1}[] ${p1}, @Nullable ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the remote views displayed in the secondary toolbar in a custom tab.

@param remoteViews   The {@link RemoteViews} that will be shown on the secondary toolbar.
@param clickableIDs  The IDs of clickable views. The onClick event of these views will be
                     handled by custom tabs.
@param pendingIntent The {@link PendingIntent} that will be sent when the user clicks on
                     one of the {@link View}s in clickableIDs. When the
                     {@link PendingIntent} is sent, it will have the current URL as its
                     intent data.
@see CustomTabsIntent#EXTRA_REMOTEVIEWS
@see CustomTabsIntent#EXTRA_REMOTEVIEWS_VIEW_IDS
@see CustomTabsIntent#EXTRA_REMOTEVIEWS_PENDINGINTENT
@see CustomTabsIntent#EXTRA_REMOTEVIEWS_CLICKED_ID"
	end

	operation 38808119 "setStartAnimations"
	  public return_type class_ref 2269367 // Builder
	  nparams 3
	    param inout name "context" type class_ref 128567 // Context
	    param in name "enterResId" explicit_type "int"
	    param in name "exitResId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @AnimRes ${t1} ${p1}, @AnimRes ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the start animations.

@param context Application context.
@param enterResId Resource ID of the \"enter\" animation for the browser.
@param exitResId Resource ID of the \"exit\" animation for the application."
	end

	operation 38808247 "setExitAnimations"
	  public return_type class_ref 2269367 // Builder
	  nparams 3
	    param inout name "context" type class_ref 128567 // Context
	    param in name "enterResId" explicit_type "int"
	    param in name "exitResId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @AnimRes ${t1} ${p1}, @AnimRes ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the exit animations.

@param context Application context.
@param enterResId Resource ID of the \"enter\" animation for the application.
@param exitResId Resource ID of the \"exit\" animation for the browser."
	end

	operation 38808375 "build"
	  public return_type class_ref 2269239 // CustomTabsIntent
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Combines all the options that have been set and returns a new {@link CustomTabsIntent}
object."
	end
      end

      operation 38808503 "getMaxToolbarItems"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The maximum number of allowed toolbar items for
{@link CustomTabsIntent.Builder#addToolbarItem(int, Bitmap, String, PendingIntent)} and
{@link CustomTabsIntent#EXTRA_TOOLBAR_ITEMS}."
      end
    end

    class 2269495 "CustomTabsService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract service class for implementing Custom Tabs related functionality. The service should
be responding to the action ACTION_CUSTOM_TABS_CONNECTION. This class should be used by
implementers that want to provide Custom Tabs functionality, not by clients that want to launch
Custom Tabs."
      classrelation 7167415 // <generalisation>
	relation 7167415 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7167415 // <generalisation>
	  b parent class_ref 300343 // Service
      end

      classrelation 7167543 // ACTION_CUSTOM_TABS_CONNECTION (<unidirectional association>)
	relation 7167543 --->
	  a role_name "ACTION_CUSTOM_TABS_CONNECTION" init_value "
             \"android.support.customtabs.action.CustomTabsService\"" class_relation const_relation public
	    comment "
The Intent action that a CustomTabsService must respond to.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7167543 // ACTION_CUSTOM_TABS_CONNECTION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7167671 // KEY_URL (<unidirectional association>)
	relation 7167671 --->
	  a role_name "KEY_URL" init_value "
             \"android.support.customtabs.otherurls.URL\"" class_relation const_relation public
	    comment "
For {@link CustomTabsService#mayLaunchUrl} calls that wants to specify more than one url,
this key can be used with {@link Bundle#putParcelable(String, android.os.Parcelable)}
to insert a new url to each bundle inside list of bundles.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7167671 // KEY_URL (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 7167799 // mDeathRecipientMap (<unidirectional association>)
	relation 7167799 --->
	  stereotype "Map"
	  a role_name "mDeathRecipientMap" init_value " new ArrayMap<>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, DeathRecipient> ${name}${value};
"
	    classrelation_ref 7167799 // mDeathRecipientMap (<unidirectional association>)
	  b parent class_ref 132919 // IBinder
      end

      attribute 7625783 "mBinder"
	private explicit_type "ICustomTabsService.Stub"
	init_value " new ICustomTabsService.Stub() {

         @Override
         public boolean warmup(long flags) {
             return CustomTabsService.this.warmup(flags);
         }

         @Override
         public boolean newSession(ICustomTabsCallback callback) {
             final CustomTabsSessionToken sessionToken = new CustomTabsSessionToken(callback);
             try {
                 DeathRecipient deathRecipient = new IBinder.DeathRecipient() {
                     @Override
                     public void binderDied() {
                         cleanUpSession(sessionToken);
                     }
                 };
                 synchronized (mDeathRecipientMap) {
                     callback.asBinder().linkToDeath(deathRecipient, 0);
                     mDeathRecipientMap.put(callback.asBinder(), deathRecipient);
                 }
                 return CustomTabsService.this.newSession(sessionToken);
             } catch (RemoteException e) {
                 return false;
             }
         }

         @Override
         public boolean mayLaunchUrl(ICustomTabsCallback callback, Uri url,
                         Bundle extras, List<Bundle> otherLikelyBundles) {
             return CustomTabsService.this.mayLaunchUrl(
                     new CustomTabsSessionToken(callback), url, extras, otherLikelyBundles);
         }

         @Override
         public Bundle extraCommand(String commandName, Bundle args) {
             return CustomTabsService.this.extraCommand(commandName, args);
         }

         @Override
         public boolean updateVisuals(ICustomTabsCallback callback, Bundle bundle) {
             return CustomTabsService.this.updateVisuals(
                     new CustomTabsSessionToken(callback), bundle);
         }
     }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 38808631 "onBind"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38808759 "cleanUpSession"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "sessionToken" type class_ref 2269623 // CustomTabsSessionToken
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the client side {@link IBinder} for this {@link CustomTabsSessionToken} is dead.
Can also be used to clean up {@link DeathRecipient} instances allocated for the given token.
@param sessionToken The session token for which the {@link DeathRecipient} call has been
                    received.
@return Whether the clean up was successful. Multiple calls with two tokens holdings the
        same binder will return false."
      end

      operation 38808887 "warmup"
	abstract protected explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Warms up the browser process asynchronously.

@param flags Reserved for future use.
@return      Whether warmup was/had been completed successfully. Multiple successful
             calls will return true."
      end

      operation 38809015 "newSession"
	abstract protected explicit_return_type "boolean"
	nparams 1
	  param inout name "sessionToken" type class_ref 2269623 // CustomTabsSessionToken
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new session through an ICustomTabsService with the optional callback. This session
can be used to associate any related communication through the service with an intent and
then later with a Custom Tab. The client can then send later service calls or intents to
through same session-intent-Custom Tab association.
@param sessionToken Session token to be used as a unique identifier. This also has access
                    to the {@link CustomTabsCallback} passed from the client side through
                    {@link CustomTabsSessionToken#getCallback()}.
@return             Whether a new session was successfully created."
      end

      operation 38809143 "mayLaunchUrl"
	abstract protected explicit_return_type "boolean"
	nparams 4
	  param inout name "sessionToken" type class_ref 2269623 // CustomTabsSessionToken
	  param inout name "url" type class_ref 133047 // Uri
	  param inout name "extras" type class_ref 131511 // Bundle
	  param inout name "otherLikelyBundles" explicit_type "List<Bundle>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tells the browser of a likely future navigation to a URL.

The method {@link CustomTabsService#warmup(long)} has to be called beforehand.
The most likely URL has to be specified explicitly. Optionally, a list of
other likely URLs can be provided. They are treated as less likely than
the first one, and have to be sorted in decreasing priority order. These
additional URLs may be ignored.
All previous calls to this method will be deprioritized.

@param sessionToken       The unique identifier for the session. Can not be null.
@param url                Most likely URL.
@param extras             Reserved for future use.
@param otherLikelyBundles Other likely destinations, sorted in decreasing
                          likelihood order. Each Bundle has to provide a url.
@return                   Whether the call was successful."
      end

      operation 38809271 "extraCommand"
	abstract protected return_type class_ref 131511 // Bundle
	nparams 2
	  param inout name "commandName" type class_ref 129591 // String
	  param inout name "args" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unsupported commands that may be provided by the implementation.

<p>
<strong>Note:</strong>Clients should <strong>never</strong> rely on this method to have a
defined behavior, as it is entirely implementation-defined and not supported.

<p> This call can be used by implementations to add extra commands, for testing or
experimental purposes.

@param commandName Name of the extra command to execute.
@param args Arguments for the command
@return The result {@link Bundle}, or null."
      end

      operation 38809399 "updateVisuals"
	abstract protected explicit_return_type "boolean"
	nparams 2
	  param inout name "sessionToken" type class_ref 2269623 // CustomTabsSessionToken
	  param inout name "bundle" type class_ref 131511 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the visuals of custom tabs for the given session. Will only succeed if the given
session matches the currently active one.
@param sessionToken The currently active session that the custom tab belongs to.
@param bundle       The action button configuration bundle. This bundle should be constructed
                    with the same structure in {@link CustomTabsIntent.Builder}.
@return Whether the operation was successful."
      end
    end

    class 2269623 "CustomTabsSessionToken"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Wrapper class that can be used as a unique identifier for a session. Also contains an accessor
for the {@link CustomTabsCallback} for the session if there was any."
      classrelation 7168311 // TAG (<unidirectional association>)
	relation 7168311 --->
	  a role_name "TAG" init_value " \"CustomTabsSessionToken\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7168311 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 7626167 "mCallbackBinder"
	const_attribute private explicit_type "ICustomTabsCallback"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7168439 // mCallback (<unidirectional association>)
	relation 7168439 --->
	  a role_name "mCallback" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7168439 // mCallback (<unidirectional association>)
	  b parent class_ref 2268727 // CustomTabsCallback
      end

      operation 38810551 "getSessionTokenFromIntent"
	class_operation public return_type class_ref 2269623 // CustomTabsSessionToken
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a {@link CustomTabsSessionToken} from an intent. See {@link CustomTabsIntent.Builder}
for ways to generate an intent for custom tabs.
@param intent The intent to generate the token from. This has to include an extra for
              {@link CustomTabsIntent#EXTRA_SESSION}.
@return The token that was generated."
      end

      operation 38810679 "CustomTabsSessionToken"
	package explicit_return_type ""
	nparams 1
	  param inout name "callbackBinder" explicit_type "ICustomTabsCallback"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 38810807 "getCallbackBinder"
	package return_type class_ref 132919 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 38810935 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38811063 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 38811191 "getCallback"
	public return_type class_ref 2268727 // CustomTabsCallback
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@link CustomTabsCallback} corresponding to this session if there was any non-null
        callbacks passed by the client."
      end
    end

    class 2269751 "CustomTabsIntentTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@RunWith(AndroidJUnit4.class)
@SmallTest
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Tests for CustomTabsIntent."
      operation 38811319 "testBareboneCustomTabIntent"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
      end

      operation 38811447 "testToolbarColor"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
      end

      operation 38811575 "testToolbarColorIsNotAResource"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Test
"
	
	
	
      end
    end
  end

  deploymentview 241719 "customtabs"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1266743 "CustomTabsCallback"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Bundle;
${definition}"
      associated_classes
	class_ref 2268727 // CustomTabsCallback
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1266871 "CustomTabsClient"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.net.Uri;
import android.os.Bundle;
import android.os.RemoteException;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 2268855 // CustomTabsClient
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1266999 "CustomTabsIntent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.net.Uri;
import android.os.Bundle;
import android.support.annotation.AnimRes;
import android.support.annotation.ColorInt;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.ActivityOptionsCompat;
import android.support.v4.app.BundleCompat;
import android.view.View;
import android.widget.RemoteViews;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 2269239 // CustomTabsIntent
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1267127 "CustomTabsService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Service;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.IBinder;
import android.os.IBinder.DeathRecipient;
import android.os.RemoteException;
import android.support.v4.util.ArrayMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
${definition}"
      associated_classes
	class_ref 2269495 // CustomTabsService
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1267255 "CustomTabsServiceConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.content.ServiceConnection;
import android.os.IBinder;
${definition}"
      associated_classes
	class_ref 2268983 // CustomTabsServiceConnection
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1267383 "CustomTabsSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.os.IBinder;
import android.os.RemoteException;
import android.support.annotation.NonNull;
import java.util.List;
${definition}"
      associated_classes
	class_ref 2269111 // CustomTabsSession
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1267511 "CustomTabsSessionToken"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Intent;
import android.os.Bundle;
import android.os.IBinder;
import android.os.RemoteException;
import android.support.v4.app.BundleCompat;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 2269623 // CustomTabsSessionToken
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1267639 "CustomTabsIntentTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Intent;
import android.graphics.Color;
import android.os.Build;
import android.support.annotation.ColorRes;
import android.support.test.InstrumentationRegistry;
import android.support.test.runner.AndroidJUnit4;
import android.test.suitebuilder.annotation.SmallTest;
import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
${definition}"
      associated_classes
	class_ref 2269751 // CustomTabsIntentTest
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
