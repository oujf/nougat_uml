class AmsTask
!!!1467063.java!!!	AmsTask(inout activity : Activity, inout handler : Handler, inout callback : AccountManagerCallback)
            super(new Callable<Bundle>() {
                @Override
                public Bundle call() throws Exception {
                    throw new IllegalStateException("this should never be called");
                }
            });

            mHandler = handler;
            mCallback = callback;
            mActivity = activity;
            mResponse = new Response();
!!!1467191.java!!!	start() : AccountManagerFuture
            try {
                doWork();
            } catch (RemoteException e) {
                setException(e);
            }
            return this;
!!!1467319.java!!!	set(inout bundle : Bundle) : void
            // TODO: somehow a null is being set as the result of the Future. Log this
            // case to help debug where this is occurring. When this bug is fixed this
            // condition statement should be removed.
            if (bundle == null) {
                Log.e(TAG, "the bundle must not be null", new Exception());
            }
            super.set(bundle);
!!!1467575.java!!!	internalGetResult(inout timeout : Long, inout unit : TimeUnit) : Bundle
            if (!isDone()) {
                ensureNotOnMainThread();
            }
            try {
                if (timeout == null) {
                    return get();
                } else {
                    return get(timeout, unit);
                }
            } catch (CancellationException e) {
                throw new OperationCanceledException();
            } catch (TimeoutException e) {
                // fall through and cancel
            } catch (InterruptedException e) {
                // fall through and cancel
            } catch (ExecutionException e) {
                final Throwable cause = e.getCause();
                if (cause instanceof IOException) {
                    throw (IOException) cause;
                } else if (cause instanceof UnsupportedOperationException) {
                    throw new AuthenticatorException(cause);
                } else if (cause instanceof AuthenticatorException) {
                    throw (AuthenticatorException) cause;
                } else if (cause instanceof RuntimeException) {
                    throw (RuntimeException) cause;
                } else if (cause instanceof Error) {
                    throw (Error) cause;
                } else {
                    throw new IllegalStateException(cause);
                }
            } finally {
                cancel(true /* interrupt if running */);
            }
            throw new OperationCanceledException();
!!!1467703.java!!!	getResult() : Bundle
            return internalGetResult(null, null);
!!!1467831.java!!!	getResult(in timeout : long, inout unit : TimeUnit) : Bundle
            return internalGetResult(timeout, unit);
!!!1467959.java!!!	done() : void
            if (mCallback != null) {
                postToHandler(mHandler, mCallback, this);
            }
