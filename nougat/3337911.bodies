class JNIDeviceCallback
!!!39511607.cpp!!!	JNIDeviceCallback(inout env : JNIEnv, in thiz : jobject, in weak_thiz : jobject, in postEventFromNative : jmethodID)

    // Hold onto the AudioTrack/AudioRecord class for use in calling the static method
    // that posts events to the application thread.
    jclass clazz = env->GetObjectClass(thiz);
    if (clazz == NULL) {
        return;
    }
    mClass = (jclass)env->NewGlobalRef(clazz);

    // We use a weak reference so the AudioTrack/AudioRecord object can be garbage collected.
    // The reference is only used as a proxy for callbacks.
    mObject  = env->NewGlobalRef(weak_thiz);

    mPostEventFromNative = postEventFromNative;
!!!39511735.cpp!!!	~JNIDeviceCallback()
    // remove global references
    JNIEnv *env = AndroidRuntime::getJNIEnv();
    if (env == NULL) {
        return;
    }
    env->DeleteGlobalRef(mObject);
    env->DeleteGlobalRef(mClass);
!!!39511863.cpp!!!	onAudioDeviceUpdate(in audioIo : audio_io_handle_t, in deviceId : audio_port_handle_t) : void
    JNIEnv *env = AndroidRuntime::getJNIEnv();
    if (env == NULL) {
        return;
    }

    ALOGV("%s audioIo %d deviceId %d", __FUNCTION__, audioIo, deviceId);
    env->CallStaticVoidMethod(mClass,
                              mPostEventFromNative,
                              mObject,
                              AUDIO_NATIVE_EVENT_ROUTING_CHANGE, deviceId, 0, NULL);
    if (env->ExceptionCheck()) {
        ALOGW("An exception occurred while notifying an event.");
        env->ExceptionClear();
    }
