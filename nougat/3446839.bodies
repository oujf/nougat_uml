class AudioShelvingFilter
!!!39751991.cpp!!!	AudioShelvingFilter(in type : AudioShelvingFilter::ShelfType, in nChannels : int, in sampleRate : int)
    configure(nChannels, sampleRate);
!!!39752119.cpp!!!	configure(in nChannels : int, in sampleRate : int) : void
    mNiquistFreq = sampleRate * 500;
    mFrequencyFactor = ((1ull) << 42) / mNiquistFreq;
    mBiquad.configure(nChannels, sampleRate);
    setFrequency(mNominalFrequency);
    commit(true);
!!!39752247.cpp!!!	reset() : void
    setGain(0);
    setFrequency(mType == kLowShelf ? 0 : mNiquistFreq);
    commit(true);
!!!39752503.cpp!!!	setGain(in millibel : int32_t) : void
    mGain = millibel + 9600;
!!!39752759.cpp!!!	setFrequency(in millihertz : uint32_t) : void
    mNominalFrequency = millihertz;
    if (CC_UNLIKELY(millihertz > mNiquistFreq / 2)) {
        millihertz = mNiquistFreq / 2;
    }
    uint32_t normFreq = static_cast<uint32_t>(
            (static_cast<uint64_t>(millihertz) * mFrequencyFactor) >> 10);
    uint32_t log2minFreq = (mType == kLowShelf ? (32-10) : (32-2));
    if (CC_LIKELY(normFreq > (1U << log2minFreq))) {
        mFrequency = (Effects_log2(normFreq) - (log2minFreq << 15)) << (FREQ_PRECISION_BITS - 15);
    } else {
        mFrequency = 0;
    }
!!!39753015.cpp!!!	commit(in immediate : bool = false) : void
    audio_coef_t coefs[5];
    int intCoord[2] = {
        mFrequency >> FREQ_PRECISION_BITS,
        mGain >> GAIN_PRECISION_BITS
    };
    uint32_t fracCoord[2] = {
        mFrequency << (32 - FREQ_PRECISION_BITS),
        static_cast<uint32_t>(mGain) << (32 - GAIN_PRECISION_BITS)
    };
    if (mType == kHighShelf) {
        mHiCoefInterp.getCoef(intCoord, fracCoord, coefs);
    } else {
        mLoCoefInterp.getCoef(intCoord, fracCoord, coefs);
    }
    mBiquad.setCoefs(coefs, immediate);
