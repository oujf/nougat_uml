class PackageItemInfo
!!!2709047.java!!!	PackageItemInfo()
        showUserIcon = UserHandle.USER_NULL;
!!!2709175.java!!!	PackageItemInfo(inout orig : PackageItemInfo)
        name = orig.name;
        if (name != null) name = name.trim();
        packageName = orig.packageName;
        labelRes = orig.labelRes;
        nonLocalizedLabel = orig.nonLocalizedLabel;
        if (nonLocalizedLabel != null) nonLocalizedLabel = nonLocalizedLabel.toString().trim();
        icon = orig.icon;
        banner = orig.banner;
        logo = orig.logo;
        metaData = orig.metaData;
        showUserIcon = orig.showUserIcon;
!!!2709303.java!!!	loadLabel(inout pm : PackageManager) : CharSequence
        if (nonLocalizedLabel != null) {
            return nonLocalizedLabel;
        }
        if (labelRes != 0) {
            CharSequence label = pm.getText(packageName, labelRes, getApplicationInfo());
            if (label != null) {
                return label.toString().trim();
            }
        }
        if (name != null) {
            return name;
        }
        return packageName;
!!!2709431.java!!!	loadSafeLabel(inout pm : PackageManager) : CharSequence
        // loadLabel() always returns non-null
        String label = loadLabel(pm).toString();
        // strip HTML tags to avoid <br> and other tags overwriting original message
        String labelStr = Html.fromHtml(label).toString();

        // If the label contains new line characters it may push the UI
        // down to hide a part of it. Labels shouldn't have new line
        // characters, so just truncate at the first time one is seen.
        final int labelLength = labelStr.length();
        int offset = 0;
        while (offset < labelLength) {
            final int codePoint = labelStr.codePointAt(offset);
            final int type = Character.getType(codePoint);
            if (type == Character.LINE_SEPARATOR
                    || type == Character.CONTROL
                    || type == Character.PARAGRAPH_SEPARATOR) {
                labelStr = labelStr.substring(0, offset);
                break;
            }
            // replace all non-break space to " " in order to be trimmed
            if (type == Character.SPACE_SEPARATOR) {
                labelStr = labelStr.substring(0, offset) + " " + labelStr.substring(offset +
                        Character.charCount(codePoint));
            }
            offset += Character.charCount(codePoint);
        }

        labelStr = labelStr.trim();
        if (labelStr.isEmpty()) {
            return packageName;
        }
        TextPaint paint = new TextPaint();
        paint.setTextSize(42);

        return TextUtils.ellipsize(labelStr, paint, MAX_LABEL_SIZE_PX,
                TextUtils.TruncateAt.END);
!!!2709559.java!!!	loadIcon(inout pm : PackageManager) : Drawable
        return pm.loadItemIcon(this, getApplicationInfo());
!!!2709687.java!!!	loadUnbadgedIcon(inout pm : PackageManager) : Drawable
        return pm.loadUnbadgedItemIcon(this, getApplicationInfo());
!!!2709815.java!!!	loadBanner(inout pm : PackageManager) : Drawable
        if (banner != 0) {
            Drawable dr = pm.getDrawable(packageName, banner, getApplicationInfo());
            if (dr != null) {
                return dr;
            }
        }
        return loadDefaultBanner(pm);
!!!2709943.java!!!	loadDefaultIcon(inout pm : PackageManager) : Drawable
        return pm.getDefaultActivityIcon();
!!!2710071.java!!!	loadDefaultBanner(inout pm : PackageManager) : Drawable
        return null;
!!!2710199.java!!!	loadLogo(inout pm : PackageManager) : Drawable
        if (logo != 0) {
            Drawable d = pm.getDrawable(packageName, logo, getApplicationInfo());
            if (d != null) {
                return d;
            }
        }
        return loadDefaultLogo(pm);
!!!2710327.java!!!	loadDefaultLogo(inout pm : PackageManager) : Drawable
        return null;
!!!2710455.java!!!	loadXmlMetaData(inout pm : PackageManager, inout name : String) : XmlResourceParser
        if (metaData != null) {
            int resid = metaData.getInt(name);
            if (resid != 0) {
                return pm.getXml(packageName, resid, getApplicationInfo());
            }
        }
        return null;
!!!2710583.java!!!	dumpFront(inout pw : Printer, inout prefix : String) : void
        if (name != null) {
            pw.println(prefix + "name=" + name);
        }
        pw.println(prefix + "packageName=" + packageName);
        if (labelRes != 0 || nonLocalizedLabel != null || icon != 0 || banner != 0) {
            pw.println(prefix + "labelRes=0x" + Integer.toHexString(labelRes)
                    + " nonLocalizedLabel=" + nonLocalizedLabel
                    + " icon=0x" + Integer.toHexString(icon)
                    + " banner=0x" + Integer.toHexString(banner));
        }
!!!2710711.java!!!	dumpBack(inout pw : Printer, inout prefix : String) : void
        // no back here
!!!2710839.java!!!	writeToParcel(inout dest : Parcel, in parcelableFlags : int) : void
        dest.writeString(name);
        dest.writeString(packageName);
        dest.writeInt(labelRes);
        TextUtils.writeToParcel(nonLocalizedLabel, dest, parcelableFlags);
        dest.writeInt(icon);
        dest.writeInt(logo);
        dest.writeBundle(metaData);
        dest.writeInt(banner);
        dest.writeInt(showUserIcon);
!!!2710967.java!!!	PackageItemInfo(inout source : Parcel)
        name = source.readString();
        packageName = source.readString();
        labelRes = source.readInt();
        nonLocalizedLabel
                = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(source);
        icon = source.readInt();
        logo = source.readInt();
        metaData = source.readBundle();
        banner = source.readInt();
        showUserIcon = source.readInt();
!!!2711095.java!!!	getApplicationInfo() : ApplicationInfo
        return null;
