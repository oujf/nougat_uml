class IntrinsicBlurFilter
!!!39879863.cpp!!!	configure(in msg : sp<AMessage>) : status_t
    status_t err = SimpleFilter::configure(msg);
    if (err != OK) {
        return err;
    }

    if (!msg->findString("cacheDir", &mCacheDir)) {
        ALOGE("Failed to find cache directory in config message.");
        return NAME_NOT_FOUND;
    }

    return OK;
!!!39879991.cpp!!!	start() : status_t
    // TODO: use a single RS context object for entire application
    mRS = new RSC::RS();

    if (!mRS->init(mCacheDir.c_str())) {
        ALOGE("Failed to initialize RenderScript context.");
        return NO_INIT;
    }

    // 32-bit elements for ARGB8888
    RSC::sp<const RSC::Element> e = RSC::Element::U8_4(mRS);

    RSC::Type::Builder tb(mRS, e);
    tb.setX(mWidth);
    tb.setY(mHeight);
    RSC::sp<const RSC::Type> t = tb.create();

    mAllocIn = RSC::Allocation::createTyped(mRS, t);
    mAllocOut = RSC::Allocation::createTyped(mRS, t);

    mBlur = RSC::ScriptIntrinsicBlur::create(mRS, e);
    mBlur->setRadius(mBlurRadius);
    mBlur->setInput(mAllocIn);

    return OK;
!!!39880119.cpp!!!	reset() : void
    mBlur.clear();
    mAllocOut.clear();
    mAllocIn.clear();
    mRS.clear();
!!!39880247.cpp!!!	setParameters(in msg : sp<AMessage>) : status_t
    sp<AMessage> params;
    CHECK(msg->findMessage("params", &params));

    float blurRadius;
    if (params->findFloat("blur-radius", &blurRadius)) {
        mBlurRadius = blurRadius;
    }

    return OK;
!!!39880375.cpp!!!	processBuffers(in srcBuffer : sp<ABuffer>, in outBuffer : sp<ABuffer>) : status_t
    mAllocIn->copy1DRangeFrom(0, mWidth * mHeight, srcBuffer->data());
    mBlur->forEach(mAllocOut);
    mAllocOut->copy1DRangeTo(0, mWidth * mHeight, outBuffer->data());

    return OK;
