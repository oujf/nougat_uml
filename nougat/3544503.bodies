class AMPEG2TSAssembler
!!!39996855.cpp!!!	assembleMore(in source : sp<ARTPSource>) : AssemblyStatus
    return addPacket(source);
!!!39996983.cpp!!!	onByeReceived() : void
    sp<AMessage> msg = mNotifyMsg->dup();
    msg->setInt32("eos", true);
    msg->post();
!!!39997111.cpp!!!	packetLost() : void
    CHECK(mNextExpectedSeqNoValid);
    ++mNextExpectedSeqNo;
!!!39997239.cpp!!!	addPacket(in source : sp<ARTPSource>) : AssemblyStatus
    List<sp<ABuffer> > *queue = source->queue();

    if (queue->empty()) {
        return NOT_ENOUGH_DATA;
    }

    if (mNextExpectedSeqNoValid) {
        List<sp<ABuffer> >::iterator it = queue->begin();
        while (it != queue->end()) {
            if ((uint32_t)(*it)->int32Data() >= mNextExpectedSeqNo) {
                break;
            }

            it = queue->erase(it);
        }

        if (queue->empty()) {
            return NOT_ENOUGH_DATA;
        }
    }

    sp<ABuffer> buffer = *queue->begin();

    if (!mNextExpectedSeqNoValid) {
        mNextExpectedSeqNoValid = true;
        mNextExpectedSeqNo = (uint32_t)buffer->int32Data();
    } else if ((uint32_t)buffer->int32Data() != mNextExpectedSeqNo) {
        ALOGV("Not the sequence number I expected");

        return WRONG_SEQUENCE_NUMBER;
    }

    // hexdump(buffer->data(), buffer->size());

    if ((buffer->size() % 188) > 0) {
        queue->erase(queue->begin());
        ++mNextExpectedSeqNo;

        ALOGV("Not a multiple of transport packet size.");

        return MALFORMED_PACKET;
    }

    sp<AMessage> msg = mNotifyMsg->dup();
    msg->setBuffer("access-unit", buffer);
    msg->post();

    queue->erase(queue->begin());
    ++mNextExpectedSeqNo;

    return OK;
