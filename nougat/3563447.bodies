class MtpEventPacket
!!!40072759.cpp!!!	write(in fd : int) : int
    struct mtp_event    event;

    putUInt32(MTP_CONTAINER_LENGTH_OFFSET, mPacketSize);
    putUInt16(MTP_CONTAINER_TYPE_OFFSET, MTP_CONTAINER_TYPE_EVENT);

    event.data = mBuffer;
    event.length = mPacketSize;
    int ret = ::ioctl(fd, MTP_SEND_EVENT, (unsigned long)&event);
    return (ret < 0 ? ret : 0);
!!!40072887.cpp!!!	sendRequest(inout request : usb_request) : int
    request->buffer = mBuffer;
    request->buffer_length = mBufferSize;
    mPacketSize = 0;
    if (usb_request_queue(request)) {
        ALOGE("usb_endpoint_queue failed, errno: %d", errno);
        return -1;
    }
    return 0;
!!!40073015.cpp!!!	readResponse(inout device : usb_device) : int
    struct usb_request* const req = usb_request_wait(device);
    if (req) {
        mPacketSize = req->actual_length;
        return req->actual_length;
    } else {
        return -1;
    }
