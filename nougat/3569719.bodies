class MtpRequestPacket
!!!40085559.cpp!!!	read(in fd : int) : int
    int ret = ::read(fd, mBuffer, mBufferSize);
    if (ret < 0) {
        // file read error
        return ret;
    }

    // request packet should have 12 byte header followed by 0 to 5 32-bit arguments
    const size_t read_size = static_cast<size_t>(ret);
    if (read_size >= MTP_CONTAINER_HEADER_SIZE
            && read_size <= MTP_CONTAINER_HEADER_SIZE + 5 * sizeof(uint32_t)
            && ((read_size - MTP_CONTAINER_HEADER_SIZE) & 3) == 0) {
        mPacketSize = read_size;
        mParameterCount = (read_size - MTP_CONTAINER_HEADER_SIZE) / sizeof(uint32_t);
    } else {
        ALOGE("Malformed MTP request packet");
        ret = -1;
    }
    return ret;
!!!40085687.cpp!!!	write(inout request : usb_request) : int
    putUInt32(MTP_CONTAINER_LENGTH_OFFSET, mPacketSize);
    putUInt16(MTP_CONTAINER_TYPE_OFFSET, MTP_CONTAINER_TYPE_COMMAND);
    request->buffer = mBuffer;
    request->buffer_length = mPacketSize;
    return transfer(request);
