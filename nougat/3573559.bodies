class BatteryNotifier
!!!40102583.cpp!!!	~BatteryNotifier()
    Mutex::Autolock _l(mLock);
    if (mDeathNotifier != nullptr) {
        IInterface::asBinder(mBatteryStatService)->unlinkToDeath(mDeathNotifier);
    }
!!!40102711.cpp!!!	noteStartVideo() : void
    Mutex::Autolock _l(mLock);
    sp<IBatteryStats> batteryService = getBatteryService_l();
    if (mVideoRefCount == 0 && batteryService != nullptr) {
        batteryService->noteStartVideo(AID_MEDIA);
    }
    mVideoRefCount++;
!!!40102839.cpp!!!	noteStopVideo() : void
    Mutex::Autolock _l(mLock);
    if (mVideoRefCount == 0) {
        ALOGW("%s: video refcount is broken.", __FUNCTION__);
        return;
    }

    sp<IBatteryStats> batteryService = getBatteryService_l();

    mVideoRefCount--;
    if (mVideoRefCount == 0 && batteryService != nullptr) {
        batteryService->noteStopVideo(AID_MEDIA);
    }
!!!40102967.cpp!!!	noteResetVideo() : void
    Mutex::Autolock _l(mLock);
    sp<IBatteryStats> batteryService = getBatteryService_l();
    mVideoRefCount = 0;
    if (batteryService != nullptr) {
        batteryService->noteResetVideo();
    }
!!!40103095.cpp!!!	noteStartAudio() : void
    Mutex::Autolock _l(mLock);
    sp<IBatteryStats> batteryService = getBatteryService_l();
    if (mAudioRefCount == 0 && batteryService != nullptr) {
        batteryService->noteStartAudio(AID_AUDIOSERVER);
    }
    mAudioRefCount++;
!!!40103223.cpp!!!	noteStopAudio() : void
    Mutex::Autolock _l(mLock);
    if (mAudioRefCount == 0) {
        ALOGW("%s: audio refcount is broken.", __FUNCTION__);
        return;
    }

    sp<IBatteryStats> batteryService = getBatteryService_l();

    mAudioRefCount--;
    if (mAudioRefCount == 0 && batteryService != nullptr) {
        batteryService->noteStopAudio(AID_AUDIOSERVER);
    }
!!!40103351.cpp!!!	noteResetAudio() : void
    Mutex::Autolock _l(mLock);
    sp<IBatteryStats> batteryService = getBatteryService_l();
    mAudioRefCount = 0;
    if (batteryService != nullptr) {
        batteryService->noteResetAudio();
    }
!!!40103479.cpp!!!	noteFlashlightOn(in id : String8, in uid : int) : void
    Mutex::Autolock _l(mLock);
    sp<IBatteryStats> batteryService = getBatteryService_l();

    std::pair<String8, int> k = std::make_pair(id, uid);
    if (!mFlashlightState[k]) {
        mFlashlightState[k] = true;
        if (batteryService != nullptr) {
            batteryService->noteFlashlightOn(uid);
        }
    }
!!!40103607.cpp!!!	noteFlashlightOff(in id : String8, in uid : int) : void
    Mutex::Autolock _l(mLock);
    sp<IBatteryStats> batteryService = getBatteryService_l();

    std::pair<String8, int> k = std::make_pair(id, uid);
    if (mFlashlightState[k]) {
        mFlashlightState[k] = false;
        if (batteryService != nullptr) {
            batteryService->noteFlashlightOff(uid);
        }
    }
!!!40103735.cpp!!!	noteResetFlashlight() : void
    Mutex::Autolock _l(mLock);
    sp<IBatteryStats> batteryService = getBatteryService_l();
    mFlashlightState.clear();
    if (batteryService != nullptr) {
        batteryService->noteResetFlashlight();
    }
!!!40103863.cpp!!!	noteStartCamera(in id : String8, in uid : int) : void
    Mutex::Autolock _l(mLock);
    sp<IBatteryStats> batteryService = getBatteryService_l();
    std::pair<String8, int> k = std::make_pair(id, uid);
    if (!mCameraState[k]) {
        mCameraState[k] = true;
        if (batteryService != nullptr) {
            batteryService->noteStartCamera(uid);
        }
    }
!!!40103991.cpp!!!	noteStopCamera(in id : String8, in uid : int) : void
    Mutex::Autolock _l(mLock);
    sp<IBatteryStats> batteryService = getBatteryService_l();
    std::pair<String8, int> k = std::make_pair(id, uid);
    if (mCameraState[k]) {
        mCameraState[k] = false;
        if (batteryService != nullptr) {
            batteryService->noteStopCamera(uid);
        }
    }
!!!40104119.cpp!!!	noteResetCamera() : void
    Mutex::Autolock _l(mLock);
    sp<IBatteryStats> batteryService = getBatteryService_l();
    mCameraState.clear();
    if (batteryService != nullptr) {
        batteryService->noteResetCamera();
    }
!!!40104247.cpp!!!	onBatteryStatServiceDied() : void
    Mutex::Autolock _l(mLock);
    mBatteryStatService.clear();
    mDeathNotifier.clear();
    // Do not reset mVideoRefCount and mAudioRefCount here. The ref
    // counting is independent of the battery service availability.
    // We need this if battery service becomes available after media
    // started.

!!!40104503.cpp!!!	getBatteryService_l() : sp<IBatteryStats>
    if (mBatteryStatService != nullptr) {
        return mBatteryStatService;
    }
    // Get battery service from service manager
    const sp<IServiceManager> sm(defaultServiceManager());
    if (sm != nullptr) {
        const String16 name("batterystats");
        mBatteryStatService = interface_cast<IBatteryStats>(sm->checkService(name));
        if (mBatteryStatService == nullptr) {
            // this may occur normally during the init sequence as mediaserver
            // and audioserver start before the batterystats service is available.
            ALOGW("batterystats service unavailable!");
            return nullptr;
        }

        mDeathNotifier = new DeathNotifier();
        IInterface::asBinder(mBatteryStatService)->linkToDeath(mDeathNotifier);

        // Notify start now if mediaserver or audioserver is already started.
        // 1) mediaserver and audioserver is started before batterystats service
        // 2) batterystats server may have crashed.
        if (mVideoRefCount > 0) {
            mBatteryStatService->noteStartVideo(AID_MEDIA);
        }
        if (mAudioRefCount > 0) {
            mBatteryStatService->noteStartAudio(AID_AUDIOSERVER);
        }
        // TODO: Notify for camera and flashlight state as well?
    }
    return mBatteryStatService;
