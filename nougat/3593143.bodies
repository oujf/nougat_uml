class RemoteDataSource
!!!40175671.cpp!!!	wrap(in source : sp<DataSource>) : sp<IDataSource>
    return new RemoteDataSource(source);
!!!40175799.cpp!!!	~RemoteDataSource()
    close();
!!!40175927.cpp!!!	getIMemory() : sp<IMemory>
    return mMemory;
!!!40176055.cpp!!!	readAt(in offset : off64_t, in size : size_t) : ssize_t
    ALOGV("readAt(%" PRId64 ", %zu)", offset, size);
    return mSource->readAt(offset, mMemory->pointer(), size);
!!!40176183.cpp!!!	getSize(inout size : off64_t) : status_t
    return mSource->getSize(size);
!!!40176311.cpp!!!	close() : void
    mSource = NULL;
!!!40176439.cpp!!!	getFlags() : uint32_t
    return mSource->flags();
!!!40176567.cpp!!!	toString() : String8
    return mName;
!!!40176695.cpp!!!	DrmInitialization(in mime : char) : sp<DecryptHandle>
    return mSource->DrmInitialization(mime);
!!!40176823.cpp!!!	RemoteDataSource(in source : sp<DataSource>)
    mSource = source;
    sp<MemoryDealer> memoryDealer = new MemoryDealer(kBufferSize, "RemoteDataSource");
    mMemory = memoryDealer->allocate(kBufferSize);
    if (mMemory == NULL) {
        ALOGE("Failed to allocate memory!");
    }
    mName = String8::format("RemoteDataSource(%s)", mSource->toString().string());
