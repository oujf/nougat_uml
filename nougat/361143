format 76
"include" // nougat_src::frameworks::av::drm::libdrmframework::plugins::forward-lock::FwdLockEngine::include
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/av/drm/libdrmframework/plugins/forward-lock/FwdLockEngine/include/"
  cpp_src_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/av/drm/libdrmframework/plugins/forward-lock/FwdLockEngine/include/"
  cpp_namespace "android"
  classview 317367 "include"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3406135 "FwdLockEngine"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Forward Lock Engine class."
      classrelation 9713975 // <generalisation>
	relation 9713975 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 9713975 // <generalisation>
	  b parent class_ref 3405751 // DrmEngineBase
      end

      operation 39705911 "FwdLockEngine"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 39706039 "~FwdLockEngine"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 39706167 "onGetConstraints"
	protected return_type class_ref 3399991 // DrmConstraints
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" explicit_type "String8"
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get constraint information associated with input content.

@param uniqueId Unique identifier for a session
@param path Path of the protected content
@param action Actions defined such as,
    Action::DEFAULT, Action::PLAY, etc
@return DrmConstraints
    key-value pairs of constraint are embedded in it
@note
    In case of error, return NULL"
      end

      operation 39706295 "onGetMetadata"
	protected return_type class_ref 3400119 // DrmMetadata
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get metadata information associated with input content.

@param uniqueId Unique identifier for a session
@param path Path of the protected content
@return DrmMetadata
     For Forward Lock engine, it returns an empty object
@note
    In case of error, returns NULL"
      end

      operation 39706423 "onInitialize"
	protected explicit_return_type "status_t"
	nparams 1
	  param in name "uniqueId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize plug-in.

@param uniqueId Unique identifier for a session
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure"
      end

      operation 39706551 "onSetOnInfoListener"
	protected explicit_return_type "status_t"
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "infoListener" type class_ref 3399863 // OnInfoListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a callback to be invoked when the caller required to
receive necessary information.

@param uniqueId Unique identifier for a session
@param infoListener Listener
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure"
      end

      operation 39706679 "onTerminate"
	protected explicit_return_type "status_t"
	nparams 1
	  param in name "uniqueId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Terminate the plug-in and release resources bound to it.

@param uniqueId Unique identifier for a session
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure"
      end

      operation 39706807 "onCanHandle"
	protected explicit_return_type "bool"
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get whether the given content can be handled by this plugin or not.

@param uniqueId Unique identifier for a session
@param path Path to the protected object
@return bool
     Returns true if this plugin can handle , false in case of not able to handle"
      end

      operation 39706935 "onProcessDrmInfo"
	protected return_type class_ref 3400247 // DrmInfoStatus
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "drmInfo" type class_ref 3400375 // DrmInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes the given DRM information as appropriate for its type.
Not used for Forward Lock Engine.

@param uniqueId Unique identifier for a session
@param drmInfo Information that needs to be processed
@return DrmInfoStatus
     instance as a result of processing given input"
      end

      operation 39707063 "onSaveRights"
	protected explicit_return_type "status_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param in name "drmRights" type class_ref 3400631 // DrmRights
	  param in name "rightsPath" explicit_type "String8"
	  param in name "contentPath" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Save DRM rights to specified rights path
and make association with content path.

@param uniqueId Unique identifier for a session
@param drmRights DrmRights to be saved
@param rightsPath File path where rights to be saved
@param contentPath File path where content was saved
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure"
      end

      operation 39707191 "onAcquireDrmInfo"
	protected return_type class_ref 3400375 // DrmInfo
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "drmInfoRequest" type class_ref 3400503 // DrmInfoRequest
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves necessary information for registration, unregistration or rights
acquisition information.

@param uniqueId Unique identifier for a session
@param drmInfoRequest Request information to retrieve drmInfo
@return DrmInfo
     instance as a result of processing given input"
      end

      operation 39707319 "onGetOriginalMimeType"
	protected explicit_return_type "String8"
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" explicit_type "String8"
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the mime type embedded inside the original content.

@param uniqueId Unique identifier for a session
@param path Path of the conent or null.
@param fd descriptor of the protected content as a file source
@return String8
      Returns mime-type of the original content, such as \"video/mpeg\""
      end

      operation 39707447 "onGetDrmObjectType"
	protected explicit_return_type "int"
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" explicit_type "String8"
	  param in name "mimeType" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the type of the protected object (content, rights, etc..)
using specified path or mimetype. At least one parameter should be non null
to retrieve DRM object type.

@param uniqueId Unique identifier for a session
@param path Path of the content or null.
@param mimeType Mime type of the content or null.
@return type of the DRM content,
    such as DrmObjectType::CONTENT, DrmObjectType::RIGHTS_OBJECT"
      end

      operation 39707575 "onCheckRightsStatus"
	protected explicit_return_type "int"
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" explicit_type "String8"
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the given content has valid rights or not.

@param uniqueId Unique identifier for a session
@param path Path of the protected content
@param action Action to perform (Action::DEFAULT, Action::PLAY, etc)
@return the status of the rights for the protected content,
    such as RightsStatus::RIGHTS_VALID, RightsStatus::RIGHTS_EXPIRED, etc."
      end

      operation 39707703 "onConsumeRights"
	protected explicit_return_type "status_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "action" explicit_type "int"
	  param in name "reserve" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consumes the rights for a content.
If the reserve parameter is true the rights are reserved until the same
application calls this api again with the reserve parameter set to false.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@param action Action to perform. (Action::DEFAULT, Action::PLAY, etc)
@param reserve True if the rights should be reserved.
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure"
      end

      operation 39707831 "onSetPlaybackStatus"
	protected explicit_return_type "status_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "playbackStatus" explicit_type "int"
	  param in name "position" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39707959 "onSetPlaybackStatus"
	protected explicit_return_type "status_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "playbackStatus" explicit_type "int"
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39708087 "onValidateAction"
	protected explicit_return_type "bool"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" explicit_type "String8"
	  param in name "action" explicit_type "int"
	  param in name "description" type class_ref 3400887 // ActionDescription
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Validates whether an action on the DRM content is allowed or not.

@param uniqueId Unique identifier for a session
@param path Path of the protected content
@param action Action to validate (Action::PLAY, Action::TRANSFER, etc)
@param description Detailed description of the action
@return true if the action is allowed."
      end

      operation 39708215 "onRemoveRights"
	protected explicit_return_type "status_t"
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "path" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the rights associated with the given protected content.
Not used for Forward Lock Engine.

@param uniqueId Unique identifier for a session
@param path Path of the protected content
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure"
      end

      operation 39708343 "onRemoveAllRights"
	protected explicit_return_type "status_t"
	nparams 1
	  param in name "uniqueId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all the rights information of each plug-in associated with
DRM framework. Will be used in master reset but does nothing for
Forward Lock Engine.

@param uniqueId Unique identifier for a session
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure"
      end

      operation 39708471 "onOpenConvertSession"
	protected explicit_return_type "status_t"
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "convertId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the Forward Lock file conversion session.
Each time the application tries to download a new DRM file
which needs to be converted, then the application has to
begin with calling this API. The convertId is used as the conversion session key
and must not be the same for different convert sessions.

@param uniqueId Unique identifier for a session
@param convertId Handle for the convert session
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure"
      end

      operation 39708599 "onConvertData"
	protected return_type class_ref 3401015 // DrmConvertedStatus
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param in name "convertId" explicit_type "int"
	  param in name "inputData" type class_ref 3401143 // DrmBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Accepts and converts the input data which is part of DRM file.
The resultant converted data and the status is returned in the DrmConvertedInfo
object. This method will be called each time there is a new block
of data received by the application.

@param uniqueId Unique identifier for a session
@param convertId Handle for the convert session
@param inputData Input Data which need to be converted
@return Return object contains the status of the data conversion,
      the output converted data and offset. In this case the
     application will ignore the offset information."
      end

      operation 39708727 "onCloseConvertSession"
	protected return_type class_ref 3401015 // DrmConvertedStatus
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param in name "convertId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the convert session in case of data supply completed or error occurred.
Upon successful conversion of the complete data, it returns signature calculated over
the entire data used over a conversion session. This signature must be copied to the offset
mentioned in the DrmConvertedStatus. Signature is used for data integrity protection.

@param uniqueId Unique identifier for a session
@param convertId Handle for the convert session
@return Return object contains the status of the data conversion,
     the header and body signature data. It also informs
     the application about the file offset at which this
     signature data should be written."
      end

      operation 39708855 "onGetSupportInfo"
	protected return_type class_ref 3401271 // DrmSupportInfo
	nparams 1
	  param in name "uniqueId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the information about the Drm Engine capabilities which includes
supported MimeTypes and file suffixes.

@param uniqueId Unique identifier for a session
@return DrmSupportInfo
     instance which holds the capabilities of a plug-in"
      end

      operation 39708983 "onOpenDecryptSession"
	protected explicit_return_type "status_t"
	nparams 5
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "fd" explicit_type "int"
	  param in name "offset" explicit_type "off64_t"
	  param in name "length" explicit_type "off64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39709111 "onOpenDecryptSession"
	protected explicit_return_type "status_t"
	nparams 5
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "fd" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39709239 "onOpenDecryptSession"
	protected explicit_return_type "status_t"
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "uri" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, const ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open the decrypt session to decrypt the given protected content.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the current decryption session
@param uri Path of the protected content to be decrypted
@return
    DRM_ERROR_CANNOT_HANDLE for failure and DRM_NO_ERROR for success"
      end

      operation 39709367 "onCloseDecryptSession"
	protected explicit_return_type "status_t"
	nparams 2
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Close the decrypt session for the given handle.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@return status_t
    Returns DRM_NO_ERROR for success, DRM_ERROR_UNKNOWN for failure"
      end

      operation 39709495 "onInitializeDecryptUnit"
	protected explicit_return_type "status_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "decryptUnitId" explicit_type "int"
	  param in name "headerInfo" type class_ref 3401143 // DrmBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, const ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize decryption for the given unit of the protected content.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@param decryptUnitId ID which specifies decryption unit, such as track ID
@param headerInfo Information for initializing decryption of this decrypUnit
@return
    DRM_ERROR_CANNOT_HANDLE for failure and DRM_NO_ERROR for success"
      end

      operation 39709623 "onDecrypt"
	protected explicit_return_type "status_t"
	nparams 5
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "decryptUnitId" explicit_type "int"
	  param in name "encBuffer" type class_ref 3401143 // DrmBuffer
	  param inout name "decBuffer" type class_ref 3401143 // DrmBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} * * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, const ${t3} * ${p3}, ${t4} * * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decrypt the protected content buffers for the given unit.
This method will be called any number of times, based on number of
encrypted streams received from application.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@param decryptUnitId ID which specifies decryption unit, such as track ID
@param encBuffer Encrypted data block
@param decBuffer Decrypted data block
@return status_t
    Returns the error code for this API
    DRM_NO_ERROR for success, and one of DRM_ERROR_UNKNOWN, DRM_ERROR_LICENSE_EXPIRED
    DRM_ERROR_SESSION_NOT_OPENED, DRM_ERROR_DECRYPT_UNIT_NOT_INITIALIZED,
    DRM_ERROR_DECRYPT for failure."
      end

      operation 39709751 "onDecrypt"
	protected explicit_return_type "status_t"
	nparams 6
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "decryptUnitId" explicit_type "int"
	  param in name "encBuffer" type class_ref 3401143 // DrmBuffer
	  param inout name "decBuffer" type class_ref 3401143 // DrmBuffer
	  param inout name "IV" type class_ref 3401143 // DrmBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} * * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, const ${t3} * ${p3}, ${t4} * * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decrypt the protected content buffers for the given unit.
This method will be called any number of times, based on number of
encrypted streams received from application.

@param uniqueId Unique identifier for a session
@param decryptId Handle for the decryption session
@param decryptUnitId ID Specifies decryption unit, such as track ID
@param encBuffer Encrypted data block
@param decBuffer Decrypted data block
@param IV Optional buffer
@return status_t
    Returns the error code for this API
    DRM_NO_ERROR for success, and one of DRM_ERROR_UNKNOWN, DRM_ERROR_LICENSE_EXPIRED
    DRM_ERROR_SESSION_NOT_OPENED, DRM_ERROR_DECRYPT_UNIT_NOT_INITIALIZED,
    DRM_ERROR_DECRYPT for failure."
      end

      operation 39709879 "onFinalizeDecryptUnit"
	protected explicit_return_type "status_t"
	nparams 3
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "decryptUnitId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finalize decryption for the given unit of the protected content.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@param decryptUnitId ID Specifies decryption unit, such as track ID
@return
    DRM_ERROR_CANNOT_HANDLE for failure and DRM_NO_ERROR for success"
      end

      operation 39710007 "onRead"
	protected explicit_return_type "ssize_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param inout name "pBuffer" explicit_type "void"
	  param in name "numBytes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the specified number of bytes from an open DRM file.

@param uniqueId Unique identifier for a session
@param decryptHandle Handle for the decryption session
@param buffer Reference to the buffer that should receive the read data.
@param numBytes Number of bytes to read.

@return Number of bytes read.
@retval -1 Failure."
      end

      operation 39710135 "onLseek"
	protected explicit_return_type "off64_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "offset" explicit_type "off64_t"
	  param in name "whence" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39710263 "onLseek"
	protected explicit_return_type "off_t"
	nparams 4
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param in name "offset" explicit_type "off_t"
	  param in name "whence" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39710391 "onPread"
	protected explicit_return_type "ssize_t"
	nparams 5
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param inout name "buffer" explicit_type "void"
	  param in name "numBytes" explicit_type "ssize_t"
	  param in name "offset" explicit_type "off64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39710519 "onPread"
	protected explicit_return_type "ssize_t"
	nparams 5
	  param in name "uniqueId" explicit_type "int"
	  param inout name "decryptHandle" type class_ref 3400759 // DecryptHandle
	  param inout name "buffer" explicit_type "void"
	  param in name "numBytes" explicit_type "ssize_t"
	  param in name "offset" explicit_type "off_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 10599991 "Description"
	class_attribute const_attribute private explicit_type "String8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10600119 "FileSuffixes"
	class_attribute const_attribute private explicit_type "String8"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10600247 "MimeTypes"
	class_attribute const_attribute private explicit_type "String8"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 39710647 "IsFileSuffixSupported"
	class_operation private explicit_return_type "bool"
	nparams 1
	  param in name "suffix" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39710775 "IsMimeTypeSupported"
	class_operation private explicit_return_type "bool"
	nparams 1
	  param in name "mime" explicit_type "String8"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39710903 "AddSupportedMimeTypes"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 3401271 // DrmSupportInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 39711031 "AddSupportedFileSuffixes"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 3401271 // DrmSupportInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3406263 "ConvertSession"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 10600375 "uniqueId"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 9714103 // output (<directional composition>)
	  relation 9714103 *-->
	    a role_name "output" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 9714103 // output (<directional composition>)
	    b parent class_ref 3406391 // FwdLockConv_Output_t
	end

	operation 39711159 "ConvertSession"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
            uniqueId = 0;
            memset(&output, 0, sizeof(FwdLockConv_Output_t));
        };
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 39711287 "~ConvertSession"
	  cpp_virtual cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	  
	  
	  
	  
	end
      end

      class 3406519 "DecodeSession"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 10600503 "fileDesc"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 10600631 "offset"
	  public explicit_type "off_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 39711415 "DecodeSession"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
            fileDesc = -1;
            offset = 0;
        };
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 39711543 "DecodeSession"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param in name "fd" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} {
            fileDesc = fd;
            offset = 0;
        };
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  
	end

	operation 39711671 "~DecodeSession"
	  cpp_virtual cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	  
	  
	  
	  
	end
      end

      classrelation 9714231 // convertSessionMap (<unidirectional association>)
	relation 9714231 --->
	  stereotype "SessionMap"
	  a role_name "convertSessionMap" private
	    comment "Session Map Tables for Conversion and Decoding of forward lock files.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 9714231 // convertSessionMap (<unidirectional association>)
	  b parent class_ref 3406263 // ConvertSession
      end

      classrelation 9714359 // decodeSessionMap (<unidirectional association>)
	relation 9714359 --->
	  stereotype "SessionMap"
	  a role_name "decodeSessionMap" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 9714359 // decodeSessionMap (<unidirectional association>)
	  b parent class_ref 3406519 // DecodeSession
      end

      operation 39711799 "getConvertedStatus"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "status" type class_ref 3406647 // FwdLockConv_Status_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the error code from Forward Lock Converter to DrmConvertStatus error code.

@param Forward Lock Converter error code

@return Status code from DrmConvertStatus."
      end
    end
  end

  deploymentview 273463 "include"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1469111 "FwdLockEngine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3406135 // FwdLockEngine
      end
    end
  end
end
