class AudioProfileVector
!!!41003575.cpp!!!	checkExactProfile(in samplingRate : uint32_t, in channelMask : audio_channel_mask_t, in format : audio_format_t) : status_t
    if (isEmpty()) {
        return NO_ERROR;
    }

    for (size_t i = 0; i < size(); i++) {
        const sp<AudioProfile> profile = itemAt(i);
        if (profile->checkExact(samplingRate, channelMask, format) == NO_ERROR) {
            return NO_ERROR;
        }
    }
    return BAD_VALUE;
!!!41003703.cpp!!!	checkCompatibleProfile(inout samplingRate : uint32_t, inout channelMask : audio_channel_mask_t, inout format : audio_format_t, in portType : audio_port_type_t, in portRole : audio_port_role_t) : status_t
    if (isEmpty()) {
        return NO_ERROR;
    }

    const bool checkInexact = // when port is input and format is linear pcm
            portType == AUDIO_PORT_TYPE_MIX && portRole == AUDIO_PORT_ROLE_SINK
            && audio_is_linear_pcm(format);

    // iterate from best format to worst format (reverse order)
    for (ssize_t i = size() - 1; i >= 0 ; --i) {
        const sp<AudioProfile> profile = itemAt(i);
        audio_format_t formatToCompare = profile->getFormat();
        if (formatToCompare == format ||
                (checkInexact
                        && formatToCompare != AUDIO_FORMAT_DEFAULT
                        && audio_is_linear_pcm(formatToCompare))) {
            // Compatible profile has been found, checks if this profile has compatible
            // rate and channels as well
            audio_channel_mask_t updatedChannels;
            uint32_t updatedRate;
            if (profile->checkCompatibleChannelMask(channelMask, updatedChannels,
                                                    portType, portRole) == NO_ERROR &&
                    profile->checkCompatibleSamplingRate(samplingRate, updatedRate) == NO_ERROR) {
                // for inexact checks we take the first linear pcm format due to sorting.
                format = formatToCompare;
                channelMask = updatedChannels;
                samplingRate = updatedRate;
                return NO_ERROR;
            }
        }
    }
    return BAD_VALUE;
!!!41005239.cpp!!!	compareFormats(in profile1 : sp<AudioProfile>, in profile2 : sp<AudioProfile>) : int
    return AudioPort::compareFormats((*profile1)->getFormat(), (*profile2)->getFormat());
