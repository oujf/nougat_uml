class ReceiverDispatcher
!!!2139959.java!!!	ReceiverDispatcher(inout receiver : BroadcastReceiver, inout context : Context, inout activityThread : Handler, inout instrumentation : Instrumentation, inout registered : boolean)
            if (activityThread == null) {
                throw new NullPointerException("Handler must not be null");
            }

            mIIntentReceiver = new InnerReceiver(this, !registered);
            mReceiver = receiver;
            mContext = context;
            mActivityThread = activityThread;
            mInstrumentation = instrumentation;
            mRegistered = registered;
            mLocation = new IntentReceiverLeaked(null);
            mLocation.fillInStackTrace();
!!!2140087.java!!!	validate(inout context : Context, inout activityThread : Handler) : void
            if (mContext != context) {
                throw new IllegalStateException(
                    "Receiver " + mReceiver +
                    " registered with differing Context (was " +
                    mContext + " now " + context + ")");
            }
            if (mActivityThread != activityThread) {
                throw new IllegalStateException(
                    "Receiver " + mReceiver +
                    " registered with differing handler (was " +
                    mActivityThread + " now " + activityThread + ")");
            }
!!!2140215.java!!!	getLocation() : IntentReceiverLeaked
            return mLocation;
!!!2140343.java!!!	getIntentReceiver() : BroadcastReceiver
            return mReceiver;
!!!2140471.java!!!	getIIntentReceiver() : IIntentReceiver
            return mIIntentReceiver;
!!!2140599.java!!!	setUnregisterLocation(inout ex : RuntimeException) : void
            mUnregisterLocation = ex;
!!!2140727.java!!!	getUnregisterLocation() : RuntimeException
            return mUnregisterLocation;
!!!2140855.java!!!	performReceive(inout intent : Intent, in resultCode : int, inout data : String, inout extras : Bundle, inout ordered : boolean, inout sticky : boolean, in sendingUser : int) : void
            final Args args = new Args(intent, resultCode, data, extras, ordered,
                    sticky, sendingUser);
            if (intent == null) {
                Log.wtf(TAG, "Null intent received");
            } else {
                if (ActivityThread.DEBUG_BROADCAST) {
                    int seq = intent.getIntExtra("seq", -1);
                    Slog.i(ActivityThread.TAG, "Enqueueing broadcast " + intent.getAction()
                            + " seq=" + seq + " to " + mReceiver);
                }
            }
            if (intent == null || !mActivityThread.post(args)) {
                if (mRegistered && ordered) {
                    IActivityManager mgr = ActivityManagerNative.getDefault();
                    if (ActivityThread.DEBUG_BROADCAST) Slog.i(ActivityThread.TAG,
                            "Finishing sync broadcast to " + mReceiver);
                    args.sendFinished(mgr);
                }
            }
