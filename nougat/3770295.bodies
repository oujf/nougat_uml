class StreamDescriptorCollection
!!!41029175.cpp!!!	StreamDescriptorCollection()
    for (size_t stream = 0 ; stream < AUDIO_STREAM_CNT; stream++) {
        add(static_cast<audio_stream_type_t>(stream), StreamDescriptor());
    }
!!!41029303.cpp!!!	clearCurrentVolumeIndex(in stream : audio_stream_type_t) : void
    editValueAt(stream).clearCurrentVolumeIndex();
!!!41029431.cpp!!!	addCurrentVolumeIndex(in stream : audio_stream_type_t, in device : audio_devices_t, in index : int) : void
    editValueAt(stream).addCurrentVolumeIndex(device, index);
!!!41029559.cpp!!!	canBeMuted(in stream : audio_stream_type_t) : bool
    return valueAt(stream).canBeMuted();
!!!41030071.cpp!!!	volIndexToDb(in stream : audio_stream_type_t, in category : device_category, in indexInUi : int) : float
    const StreamDescriptor &streamDesc = valueAt(stream);
    return Gains::volIndexToDb(streamDesc.getVolumeCurvePoint(category),
                               streamDesc.getVolumeIndexMin(), streamDesc.getVolumeIndexMax(),
                               indexInUi);
!!!41030199.cpp!!!	initStreamVolume(in stream : audio_stream_type_t, in indexMin : int, in indexMax : int) : status_t
    ALOGV("initStreamVolume() stream %d, min %d, max %d", stream , indexMin, indexMax);
    if (indexMin < 0 || indexMin >= indexMax) {
        ALOGW("initStreamVolume() invalid index limits for stream %d, min %d, max %d",
              stream , indexMin, indexMax);
        return BAD_VALUE;
    }
    setVolumeIndexMin(stream, indexMin);
    setVolumeIndexMax(stream, indexMax);
    return NO_ERROR;
!!!41030327.cpp!!!	initializeVolumeCurves(in isSpeakerDrcEnabled : bool) : void
    for (int i = 0; i < AUDIO_STREAM_CNT; i++) {
        for (int j = 0; j < DEVICE_CATEGORY_CNT; j++) {
            setVolumeCurvePoint(static_cast<audio_stream_type_t>(i),
                                static_cast<device_category>(j),
                                Gains::sVolumeProfiles[i][j]);
        }
    }

    // Check availability of DRC on speaker path: if available, override some of the speaker curves
    if (isSpeakerDrcEnabled) {
        setVolumeCurvePoint(AUDIO_STREAM_SYSTEM, DEVICE_CATEGORY_SPEAKER,
                            Gains::sDefaultSystemVolumeCurveDrc);
        setVolumeCurvePoint(AUDIO_STREAM_RING, DEVICE_CATEGORY_SPEAKER,
                            Gains::sSpeakerSonificationVolumeCurveDrc);
        setVolumeCurvePoint(AUDIO_STREAM_ALARM, DEVICE_CATEGORY_SPEAKER,
                            Gains::sSpeakerSonificationVolumeCurveDrc);
        setVolumeCurvePoint(AUDIO_STREAM_NOTIFICATION, DEVICE_CATEGORY_SPEAKER,
                            Gains::sSpeakerSonificationVolumeCurveDrc);
        setVolumeCurvePoint(AUDIO_STREAM_MUSIC, DEVICE_CATEGORY_SPEAKER,
                            Gains::sSpeakerMediaVolumeCurveDrc);
        setVolumeCurvePoint(AUDIO_STREAM_ACCESSIBILITY, DEVICE_CATEGORY_SPEAKER,
                            Gains::sSpeakerMediaVolumeCurveDrc);
    }
!!!41030455.cpp!!!	switchVolumeCurve(in streamSrc : audio_stream_type_t, in streamDst : audio_stream_type_t) : void
    for (int j = 0; j < DEVICE_CATEGORY_CNT; j++) {
        setVolumeCurvePoint(streamDst, static_cast<device_category>(j),
                            Gains::sVolumeProfiles[streamSrc][j]);
    }
!!!41030711.cpp!!!	dump(in fd : int) : status_t
    const size_t SIZE = 256;
    char buffer[SIZE];

    snprintf(buffer, SIZE, "\nStreams dump:\n");
    write(fd, buffer, strlen(buffer));
    snprintf(buffer, SIZE,
             " Stream  Can be muted  Index Min  Index Max  Index Cur [device : index]...\n");
    write(fd, buffer, strlen(buffer));
    for (size_t i = 0; i < size(); i++) {
        snprintf(buffer, SIZE, " %02zu      ", i);
        write(fd, buffer, strlen(buffer));
        valueAt(i).dump(fd);
    }

    return NO_ERROR;
!!!41030839.cpp!!!	setVolumeCurvePoint(in stream : audio_stream_type_t, in deviceCategory : device_category, in point : VolumeCurvePoint) : void
    editValueAt(stream).setVolumeCurvePoint(deviceCategory, point);
!!!41030967.cpp!!!	getVolumeCurvePoint(in stream : audio_stream_type_t, in deviceCategory : device_category) : VolumeCurvePoint
    return valueAt(stream).getVolumeCurvePoint(deviceCategory);
!!!41031095.cpp!!!	setVolumeIndexMin(in stream : audio_stream_type_t, in volIndexMin : int) : void
    return editValueAt(stream).setVolumeIndexMin(volIndexMin);
!!!41031223.cpp!!!	setVolumeIndexMax(in stream : audio_stream_type_t, in volIndexMax : int) : void
    return editValueAt(stream).setVolumeIndexMax(volIndexMax);
