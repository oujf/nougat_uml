class TypeConverter
!!!41031351.cpp!!!	toString(in value : Traits::Type, inout str : std::string) : bool
    for (size_t i = 0; i < mSize; i++) {
        if (mTable[i].value == value) {
            str = mTable[i].literal;
            return true;
        }
    }
    return false;
!!!41031479.cpp!!!	fromString(in str : std::string, inout result : Traits::Type) : bool
    for (size_t i = 0; i < mSize; i++) {
        if (strcmp(mTable[i].literal, str.c_str()) == 0) {
            ALOGV("stringToEnum() found %s", mTable[i].literal);
            result = mTable[i].value;
            return true;
        }
    }
    return false;
!!!41031607.cpp!!!	collectionFromString(in str : std::string, inout collection : Traits::Collection, in del : char = "|") : void
    char *literal = strdup(str.c_str());

    for (const char *cstr = strtok(literal, del); cstr != NULL; cstr = strtok(NULL, del)) {
        typename Traits::Type value;
        if (fromString(cstr, value)) {
            collection.add(value);
        }
    }
    free(literal);
!!!41031735.cpp!!!	maskFromString(in str : std::string, in del : char = "|") : uint32_t
    char *literal = strdup(str.c_str());
    uint32_t value = 0;
    for (const char *cstr = strtok(literal, del); cstr != NULL; cstr = strtok(NULL, del)) {
        typename Traits::Type type;
        if (fromString(cstr, type)) {
            value |= static_cast<uint32_t>(type);
        }
    }
    free(literal);
    return value;
