class PolicySubsystem
!!!41042103.cpp!!!	PolicySubsystem(in name : std::string, inout logger : core::log::Logger)
    // Try to connect a Plugin Interface from Audio Policy Engine
    EngineInstance *engineInstance = EngineInstance::getInstance();

    ALOG_ASSERT(engineInstance != NULL, "NULL Plugin Interface");

    // Retrieve the Route Interface
    mPluginInterface = engineInstance->queryInterface<android::AudioPolicyPluginInterface>();
    ALOG_ASSERT(mPluginInterface != NULL, "NULL Plugin Interface");

    // Provide mapping keys to the core, necessary when parsing the XML Structure files.
    addContextMappingKey(mKeyName);
    addContextMappingKey(mKeyCategory);
    addContextMappingKey(mKeyIdentifier);
    addContextMappingKey(mKeyAmend1);
    addContextMappingKey(mKeyAmend2);
    addContextMappingKey(mKeyAmend3);

    // Provide creators to upper layer
    addSubsystemObjectFactory(
        new TSubsystemObjectFactory<Stream>(
            mStreamComponentName,
            (1 << MappingKeyIdentifier))
        );
    addSubsystemObjectFactory(
        new TSubsystemObjectFactory<Strategy>(
            mStrategyComponentName,
            (1 << MappingKeyAmend1) | (1 << MappingKeyIdentifier))
        );
    addSubsystemObjectFactory(
        new TSubsystemObjectFactory<Usage>(
            mUsageComponentName,
            (1 << MappingKeyAmend1) | (1 << MappingKeyIdentifier))
        );
    addSubsystemObjectFactory(
        new TSubsystemObjectFactory<InputSource>(
            mInputSourceComponentName,
            (1 << MappingKeyAmend1) | (1 << MappingKeyIdentifier))
        );
!!!41042231.cpp!!!	getPolicyPluginInterface() : AudioPolicyPluginInterface
    ALOG_ASSERT(mPluginInterface != NULL, "NULL Plugin Interface");
    return mPluginInterface;
