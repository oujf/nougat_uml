class MediaProjection
!!!28646327.java!!!	MediaProjection(inout context : Context, inout impl : IMediaProjection)
        mCallbacks = new ArrayMap<Callback, CallbackRecord>();
        mContext = context;
        mImpl = impl;
        try {
            mImpl.start(new MediaProjectionCallback());
        } catch (RemoteException e) {
            throw new RuntimeException("Failed to start media projection", e);
        }
!!!28646455.java!!!	registerCallback(inout callback : MediaProjection::Callback, inout handler : Handler) : void
        if (callback == null) {
            throw new IllegalArgumentException("callback should not be null");
        }
        if (handler == null) {
            handler = new Handler();
        }
        mCallbacks.put(callback, new CallbackRecord(callback, handler));
!!!28646583.java!!!	unregisterCallback(inout callback : MediaProjection::Callback) : void
        if (callback == null) {
            throw new IllegalArgumentException("callback should not be null");
        }
        mCallbacks.remove(callback);
!!!28646711.java!!!	createVirtualDisplay(inout name : String, in width : int, in height : int, in dpi : int, inout isSecure : boolean, inout surface : Surface, inout callback : VirtualDisplay::Callback, inout handler : Handler) : VirtualDisplay
        DisplayManager dm = (DisplayManager) mContext.getSystemService(Context.DISPLAY_SERVICE);
        int flags = isSecure ? DisplayManager.VIRTUAL_DISPLAY_FLAG_SECURE : 0;
        return dm.createVirtualDisplay(this, name, width, height, dpi, surface,
                    flags | DisplayManager.VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR |
                    DisplayManager.VIRTUAL_DISPLAY_FLAG_PRESENTATION, callback, handler);
!!!28646839.java!!!	createVirtualDisplay(inout name : String, in width : int, in height : int, in dpi : int, in flags : int, inout surface : Surface, inout callback : VirtualDisplay::Callback, inout handler : Handler) : VirtualDisplay
        DisplayManager dm = (DisplayManager) mContext.getSystemService(Context.DISPLAY_SERVICE);
        return dm.createVirtualDisplay(
                    this, name, width, height, dpi, surface, flags, callback, handler);
!!!28646967.java!!!	createAudioRecord(in sampleRateInHz : int, in channelConfig : int, in audioFormat : int, in bufferSizeInBytes : int) : AudioRecord
        return null;
!!!28647095.java!!!	stop() : void
        try {
            mImpl.stop();
        } catch (RemoteException e) {
            Log.e(TAG, "Unable to stop projection", e);
        }
!!!28647223.java!!!	getProjection() : IMediaProjection
        return mImpl;
