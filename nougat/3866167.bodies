class MountServiceInternalImpl
!!!41552439.java!!!	addExternalStoragePolicy(inout policy : MountServiceInternal::ExternalStorageMountPolicy) : void
            // No locking - CopyOnWriteArrayList
            mPolicies.add(policy);
!!!41552567.java!!!	onExternalStoragePolicyChanged(in uid : int, inout packageName : String) : void
            final int mountMode = getExternalStorageMountMode(uid, packageName);
            remountUidExternalStorage(uid, mountMode);
!!!41552695.java!!!	getExternalStorageMountMode(in uid : int, inout packageName : String) : int
            // No locking - CopyOnWriteArrayList
            int mountMode = Integer.MAX_VALUE;
            for (ExternalStorageMountPolicy policy : mPolicies) {
                final int policyMode = policy.getMountMode(uid, packageName);
                if (policyMode == Zygote.MOUNT_EXTERNAL_NONE) {
                    return Zygote.MOUNT_EXTERNAL_NONE;
                }
                mountMode = Math.min(mountMode, policyMode);
            }
            if (mountMode == Integer.MAX_VALUE) {
                return Zygote.MOUNT_EXTERNAL_NONE;
            }
            return mountMode;
!!!41552823.java!!!	hasExternalStorage(in uid : int, inout packageName : String) : boolean
            // No need to check for system uid. This avoids a deadlock between
            // PackageManagerService and AppOpsService.
            if (uid == Process.SYSTEM_UID) {
                return true;
            }
            // No locking - CopyOnWriteArrayList
            for (ExternalStorageMountPolicy policy : mPolicies) {
                final boolean policyHasStorage = policy.hasExternalStorage(uid, packageName);
                if (!policyHasStorage) {
                    return false;
                }
            }
            return true;
