class BigTextStyle
!!!2229559.java!!!	BigTextStyle(inout builder : Notification::Builder)
            setBuilder(builder);
!!!2229687.java!!!	setBigContentTitle(inout title : CharSequence) : Notification::BigTextStyle
            internalSetBigContentTitle(safeCharSequence(title));
            return this;
!!!2229815.java!!!	setSummaryText(inout cs : CharSequence) : Notification::BigTextStyle
            internalSetSummaryText(safeCharSequence(cs));
            return this;
!!!2229943.java!!!	bigText(inout cs : CharSequence) : Notification::BigTextStyle
            mBigText = safeCharSequence(cs);
            return this;
!!!2230071.java!!!	addExtras(inout extras : Bundle) : void
            super.addExtras(extras);

            extras.putCharSequence(EXTRA_BIG_TEXT, mBigText);
!!!2230199.java!!!	restoreFromExtras(inout extras : Bundle) : void
            super.restoreFromExtras(extras);

            mBigText = extras.getCharSequence(EXTRA_BIG_TEXT);
!!!2230327.java!!!	makeBigContentView() : RemoteViews

            // Nasty
            CharSequence text = mBuilder.getAllExtras().getCharSequence(EXTRA_TEXT);
            mBuilder.getAllExtras().putCharSequence(EXTRA_TEXT, null);

            RemoteViews contentView = getStandardView(mBuilder.getBigTextLayoutResource());

            mBuilder.getAllExtras().putCharSequence(EXTRA_TEXT, text);

            CharSequence bigTextText = mBuilder.processLegacyText(mBigText);
            if (TextUtils.isEmpty(bigTextText)) {
                // In case the bigtext is null / empty fall back to the normal text to avoid a weird
                // experience
                bigTextText = mBuilder.processLegacyText(text);
            }
            applyBigTextContentView(mBuilder, contentView, bigTextText);

            return contentView;
!!!2230455.java!!!	applyBigTextContentView(inout builder : Notification::Builder, inout contentView : RemoteViews, inout bigTextText : CharSequence) : void
            contentView.setTextViewText(R.id.big_text, bigTextText);
            contentView.setViewVisibility(R.id.big_text,
                    TextUtils.isEmpty(bigTextText) ? View.GONE : View.VISIBLE);
            contentView.setInt(R.id.big_text, "setMaxLines", calculateMaxLines(builder));
            contentView.setBoolean(R.id.big_text, "setHasImage", builder.mN.hasLargeIcon());
!!!2230583.java!!!	calculateMaxLines(inout builder : Notification::Builder) : int
            int lineCount = MAX_LINES;
            boolean hasActions = builder.mActions.size() > 0;
            if (hasActions) {
                lineCount -= LINES_CONSUMED_BY_ACTIONS;
            }
            return lineCount;
