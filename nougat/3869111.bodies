class NetworkScorerPackageMonitor
!!!41577911.java!!!	NetworkScorerPackageMonitor(inout mRegisteredPackage : String)
            this.mRegisteredPackage = mRegisteredPackage;
!!!41578039.java!!!	onPackageAdded(inout packageName : String, in uid : int) : void
            evaluateBinding(packageName, true /* forceUnbind */);
!!!41578167.java!!!	onPackageRemoved(inout packageName : String, in uid : int) : void
            evaluateBinding(packageName, true /* forceUnbind */);
!!!41578295.java!!!	onPackageModified(inout packageName : String) : void
            evaluateBinding(packageName, false /* forceUnbind */);
!!!41578423.java!!!	onHandleForceStop(inout intent : Intent, inout packages : String, in uid : int, inout doit : boolean) : boolean
            if (doit) { // "doit" means the force stop happened instead of just being queried for.
                for (String packageName : packages) {
                    evaluateBinding(packageName, true /* forceUnbind */);
                }
            }
            return super.onHandleForceStop(intent, packages, uid, doit);
!!!41578551.java!!!	onPackageUpdateFinished(inout packageName : String, in uid : int) : void
            evaluateBinding(packageName, true /* forceUnbind */);
!!!41578679.java!!!	evaluateBinding(inout scorerPackageName : String, inout forceUnbind : boolean) : void
            if (mRegisteredPackage.equals(scorerPackageName)) {
                if (DBG) {
                    Log.d(TAG, "Evaluating binding for: " + scorerPackageName
                            + ", forceUnbind=" + forceUnbind);
                }
                final NetworkScorerAppData activeScorer =
                        NetworkScorerAppManager.getActiveScorer(mContext);
                if (activeScorer == null) {
                    // Package change has invalidated a scorer, this will also unbind any service
                    // connection.
                    Log.i(TAG, "Package " + mRegisteredPackage +
                            " is no longer valid, disabling scoring.");
                    setScorerInternal(null);
                } else if (activeScorer.mScoringServiceClassName == null) {
                    // The scoring service is not available, make sure it's unbound.
                    unbindFromScoringServiceIfNeeded();
                } else { // The scoring service changed in some way.
                    if (forceUnbind) {
                        unbindFromScoringServiceIfNeeded();
                    }
                    bindToScoringServiceIfNeeded(activeScorer);
                }
            }
