class OneTouchPlayAction
!!!42256695.java!!!	create(inout source : HdmiCecLocalDevicePlayback, in targetAddress : int, inout callback : IHdmiControlCallback) : OneTouchPlayAction
        if (source == null || callback == null) {
            Slog.e(TAG, "Wrong arguments");
            return null;
        }
        return new OneTouchPlayAction(source, targetAddress,
                callback);
!!!42256823.java!!!	OneTouchPlayAction(inout localDevice : HdmiCecLocalDevice, in targetAddress : int, inout callback : IHdmiControlCallback)
        super(localDevice);
        mTargetAddress = targetAddress;
        addCallback(callback);
!!!42256951.java!!!	start() : boolean
        sendCommand(HdmiCecMessageBuilder.buildTextViewOn(getSourceAddress(), mTargetAddress));
        broadcastActiveSource();
        queryDevicePowerStatus();
        mState = STATE_WAITING_FOR_REPORT_POWER_STATUS;
        addTimer(mState, HdmiConfig.TIMEOUT_MS);
        return true;
!!!42257079.java!!!	broadcastActiveSource() : void
        sendCommand(HdmiCecMessageBuilder.buildActiveSource(getSourceAddress(), getSourcePath()));
        // Because only playback device can create this action, it's safe to cast.
        playback().setActiveSource(true);
!!!42257207.java!!!	queryDevicePowerStatus() : void
        sendCommand(HdmiCecMessageBuilder.buildGiveDevicePowerStatus(getSourceAddress(),
                mTargetAddress));
!!!42257335.java!!!	processCommand(inout cmd : HdmiCecMessage) : boolean
        if (mState != STATE_WAITING_FOR_REPORT_POWER_STATUS
                || mTargetAddress != cmd.getSource()) {
            return false;
        }
        if (cmd.getOpcode() == Constants.MESSAGE_REPORT_POWER_STATUS) {
            int status = cmd.getParams()[0];
            if (status == HdmiControlManager.POWER_STATUS_ON) {
                broadcastActiveSource();
                invokeCallback(HdmiControlManager.RESULT_SUCCESS);
                finish();
            }
            return true;
        }
        return false;
!!!42257463.java!!!	handleTimerEvent(in state : int) : void
        if (mState != state) {
            return;
        }
        if (state == STATE_WAITING_FOR_REPORT_POWER_STATUS) {
            if (mPowerStatusCounter++ < LOOP_COUNTER_MAX) {
                queryDevicePowerStatus();
                addTimer(mState, HdmiConfig.TIMEOUT_MS);
            } else {
                // Couldn't wake up the TV for whatever reason. Report failure.
                invokeCallback(HdmiControlManager.RESULT_TIMEOUT);
                finish();
            }
        }
!!!42257591.java!!!	addCallback(inout callback : IHdmiControlCallback) : void
        mCallbacks.add(callback);
!!!42257719.java!!!	invokeCallback(in result : int) : void
        try {
            for (IHdmiControlCallback callback : mCallbacks) {
                callback.onComplete(result);
            }
        } catch (RemoteException e) {
            Slog.e(TAG, "Callback failed:" + e);
        }
