format 76
"interface" // nougat_src::frameworks::av::services::audiopolicy::engineconfigurable::interface
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/av/services/audiopolicy/engineconfigurable/interface/"
  cpp_src_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/av/services/audiopolicy/engineconfigurable/interface/"
  cpp_namespace "android"
  classview 342327 "interface"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3777463 "AudioPolicyPluginInterface"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * This interface allows the parameter plugin to:
 *  - instantiate all the members of the policy engine (strategies, input sources, usages, profiles)
 *  - keep up to date the attributes of these policy members ( i.e. devices to be used for a
 *    strategy, strategy to be followed by a usage or a stream, ...)"
      operation 41040567 "addStrategy"
	abstract cpp_virtual public explicit_return_type "android::status_t"
	nparams 2
	  param in name "name" explicit_type "std::string"
	  param in name "id" type class_ref 3754807 // routing_strategy
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Add a strategy to the engine
     *
     * @param[in] name of the strategy to add
     * @param[in] identifier: the numerical value associated to this member. It MUST match either
     *            system/audio.h or system/audio_policy.h enumration value in order to link the
     *            parameter controled by the PFW and the policy manager component.
     *
     * @return NO_ERROR if the strategy has been added successfully, error code otherwise.
     *"
      end

      operation 41040695 "addStream"
	abstract cpp_virtual public explicit_return_type "android::status_t"
	nparams 2
	  param in name "name" explicit_type "std::string"
	  param in name "id" explicit_type "audio_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Add a streams to the engine.
     *
     * @param[in] name of the stream to add
     * @param[in] identifier: the numerical value associated to this member. It MUST match either
     *            system/audio.h or system/audio_policy.h enumration value in order to link the
     *            parameter controled by the PFW and the policy manager component.
     *
     * @return NO_ERROR if the stream has been added successfully, error code otherwise.
     *"
      end

      operation 41040823 "addUsage"
	abstract cpp_virtual public explicit_return_type "android::status_t"
	nparams 2
	  param in name "name" explicit_type "std::string"
	  param in name "id" explicit_type "audio_usage_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Add a usage to the engine
     *
     * @param[in] name of the usage to add
     * @param[in] identifier: the numerical value associated to this member. It MUST match either
     *            system/audio.h or system/audio_policy.h enumration value in order to link the
     *            parameter controled by the PFW and the policy manager component.
     *
     * @return NO_ERROR if the usage has been added successfully, error code otherwise.
     *"
      end

      operation 41040951 "addInputSource"
	abstract cpp_virtual public explicit_return_type "android::status_t"
	nparams 2
	  param in name "name" explicit_type "std::string"
	  param in name "id" explicit_type "audio_source_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Add an input source to the engine
     *
     * @param[in] name of the input source to add
     * @param[in] identifier: the numerical value associated to this member. It MUST match either
     *            system/audio.h or system/audio_policy.h enumration value in order to link the
     *            parameter controled by the PFW and the policy manager component.
     *
     * @return NO_ERROR if the input source has been added successfully, error code otherwise.
     *"
      end

      operation 41041079 "setDeviceForStrategy"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "strategy" type class_ref 3754807 // routing_strategy
	  param in name "devices" explicit_type "audio_devices_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Set the device to be used by a strategy.
     *
     * @param[in] strategy: name of the strategy for which the device to use has to be set
     * @param[in] devices; mask of devices to be used for the given strategy.
     *
     * @return true if the devices were set correclty for this strategy, false otherwise."
      end

      operation 41041207 "setStrategyForStream"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "stream" explicit_type "audio_stream_type_t"
	  param in name "strategy" type class_ref 3754807 // routing_strategy
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Set the strategy to be followed by a stream.
     *
     * @param[in] stream: name of the stream for which the strategy to use has to be set
     * @param[in] strategy to follow for the given stream.
     *
     * @return true if the strategy were set correclty for this stream, false otherwise."
      end

      operation 41041335 "setVolumeProfileForStream"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "stream" explicit_type "audio_stream_type_t"
	  param in name "volumeProfile" explicit_type "audio_stream_type_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Set the strategy to be followed by a stream.
     *
     * @param[in] stream: name of the stream for which the strategy to use has to be set
     * @param[in] volumeProfile to follow for the given stream.
     *
     * @return true if the profile was set correclty for this stream, false otherwise."
      end

      operation 41041463 "setStrategyForUsage"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "usage" explicit_type "audio_usage_t"
	  param in name "strategy" type class_ref 3754807 // routing_strategy
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Set the strategy to be followed by a usage.
     *
     * @param[in] usage: name of the usage for which the strategy to use has to be set
     * @param[in] strategy to follow for the given usage.
     *
     * @return true if the strategy were set correclty for this usage, false otherwise."
      end

      operation 41041591 "setDeviceForInputSource"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "inputSource" explicit_type "audio_source_t"
	  param in name "device" explicit_type "audio_devices_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Set the input device to be used by an input source.
     *
     * @param[in] inputSource: name of the input source for which the device to use has to be set
     * @param[in] devices; mask of devices to be used for the given input source.
     *
     * @return true if the devices were set correclty for this input source, false otherwise."
      end

      operation 41041719 "~AudioPolicyPluginInterface"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end
    end
  end

  deploymentview 298807 "interface"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1606711 "AudioPolicyPluginInterface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3777463 // AudioPolicyPluginInterface
      end
    end
  end
end
