class NetworkUsageRequestInfo
!!!42461495.java!!!	NetworkUsageRequestInfo(inout statsObserver : NetworkStatsObservers, inout request : DataUsageRequest, inout messenger : Messenger, inout binder : IBinder, in callingUid : int, in accessLevel : int)
            super(statsObserver, request, messenger, binder, callingUid, accessLevel);
!!!42461623.java!!!	checkStats() : boolean
            long bytesSoFar = getTotalBytesForNetwork(mRequest.template);
            if (LOGV) {
                Slog.v(TAG, bytesSoFar + " bytes so far since notification for "
                        + mRequest.template);
            }
            if (bytesSoFar > mRequest.thresholdInBytes) {
                return true;
            }
            return false;
!!!42461751.java!!!	recordSample(inout statsContext : NetworkStatsObservers::StatsContext) : void
            // Recorder does not need to be locked in this context since only the handler
            // thread will update it. We pass a null VPN array because usage is aggregated by uid
            // for this snapshot, so VPN traffic can't be reattributed to responsible apps.
            mRecorder.recordSnapshotLocked(statsContext.mXtSnapshot, statsContext.mActiveIfaces,
                    null /* vpnArray */, statsContext.mCurrentTime);
!!!42461879.java!!!	getTotalBytesForNetwork(inout template : NetworkTemplate) : long
            NetworkStats stats = mCollection.getSummary(template,
                    Long.MIN_VALUE /* start */, Long.MAX_VALUE /* end */,
                    mAccessLevel, mCallingUid);
            return stats.getTotalBytes();
