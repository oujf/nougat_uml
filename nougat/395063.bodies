class TimePickerDialog
!!!2316087.java!!!	TimePickerDialog(inout context : Context, inout listener : TimePickerDialog::OnTimeSetListener, in hourOfDay : int, in minute : int, inout is24HourView : boolean)
        this(context, 0, listener, hourOfDay, minute, is24HourView);
!!!2316215.java!!!	resolveDialogTheme(inout context : Context, in resId : int) : int
        if (resId == 0) {
            final TypedValue outValue = new TypedValue();
            context.getTheme().resolveAttribute(R.attr.timePickerDialogTheme, outValue, true);
            return outValue.resourceId;
        } else {
            return resId;
        }
!!!2316343.java!!!	TimePickerDialog(inout context : Context, in themeResId : int, inout listener : TimePickerDialog::OnTimeSetListener, in hourOfDay : int, in minute : int, inout is24HourView : boolean)
        super(context, resolveDialogTheme(context, themeResId));

        mTimeSetListener = listener;
        mInitialHourOfDay = hourOfDay;
        mInitialMinute = minute;
        mIs24HourView = is24HourView;

        final Context themeContext = getContext();


        final TypedValue outValue = new TypedValue();
        context.getTheme().resolveAttribute(R.attr.timePickerDialogTheme, outValue, true);

        final LayoutInflater inflater = LayoutInflater.from(themeContext);
        final View view = inflater.inflate(R.layout.time_picker_dialog, null);
        setView(view);
        setButton(BUTTON_POSITIVE, themeContext.getString(R.string.ok), this);
        setButton(BUTTON_NEGATIVE, themeContext.getString(R.string.cancel), this);
        setButtonPanelLayoutHint(LAYOUT_HINT_SIDE);

        mTimePicker = (TimePicker) view.findViewById(R.id.timePicker);
        mTimePicker.setIs24HourView(mIs24HourView);
        mTimePicker.setCurrentHour(mInitialHourOfDay);
        mTimePicker.setCurrentMinute(mInitialMinute);
        mTimePicker.setOnTimeChangedListener(this);
!!!2316471.java!!!	onTimeChanged(inout view : TimePicker, in hourOfDay : int, in minute : int) : void
        /* do nothing */
!!!2316599.java!!!	onClick(inout dialog : DialogInterface, in which : int) : void
        switch (which) {
            case BUTTON_POSITIVE:
                if (mTimeSetListener != null) {
                    mTimeSetListener.onTimeSet(mTimePicker, mTimePicker.getCurrentHour(),
                            mTimePicker.getCurrentMinute());
                }
                break;
            case BUTTON_NEGATIVE:
                cancel();
                break;
        }
!!!2316727.java!!!	updateTime(in hourOfDay : int, in minuteOfHour : int) : void
        mTimePicker.setCurrentHour(hourOfDay);
        mTimePicker.setCurrentMinute(minuteOfHour);
!!!2316855.java!!!	onSaveInstanceState() : Bundle
        final Bundle state = super.onSaveInstanceState();
        state.putInt(HOUR, mTimePicker.getCurrentHour());
        state.putInt(MINUTE, mTimePicker.getCurrentMinute());
        state.putBoolean(IS_24_HOUR, mTimePicker.is24HourView());
        return state;
!!!2316983.java!!!	onRestoreInstanceState(inout savedInstanceState : Bundle) : void
        super.onRestoreInstanceState(savedInstanceState);
        final int hour = savedInstanceState.getInt(HOUR);
        final int minute = savedInstanceState.getInt(MINUTE);
        mTimePicker.setIs24HourView(savedInstanceState.getBoolean(IS_24_HOUR));
        mTimePicker.setCurrentHour(hour);
        mTimePicker.setCurrentMinute(minute);
