class RateEstimator
!!!42537143.java!!!	RateEstimator()
        // assume something generous if we have no information
        mInterarrivalTime = 1000.0;
!!!42537271.java!!!	update(in now : long) : float
        float rate;
        if (mLastEventTime == null) {
            // No last event time, rate is zero.
            rate = 0f;
        } else {
            // Calculate the new inter-arrival time based on last event time.
            mInterarrivalTime = getInterarrivalEstimate(now);
            rate = (float) (1.0 / mInterarrivalTime);
        }
        mLastEventTime = now;
        return rate;
!!!42537399.java!!!	getRate(in now : long) : float
        if (mLastEventTime == null) {
            return 0f;
        }
        return (float) (1.0 / getInterarrivalEstimate(now));
!!!42537527.java!!!	getInterarrivalEstimate(in now : long) : double
        double dt = ((double) (now - mLastEventTime)) / 1000.0;
        dt = Math.max(dt, MINIMUM_DT);
        // a*iat_old + (1-a)*(t_now-t_last)
        return (RATE_ALPHA * mInterarrivalTime + (1.0 - RATE_ALPHA) * dt);
