class PackageKeySetData
!!!42610999.java!!!	PackageKeySetData()
        mProperSigningKeySet = KEYSET_UNASSIGNED;
!!!42611127.java!!!	PackageKeySetData(inout original : PackageKeySetData)
        mProperSigningKeySet = original.mProperSigningKeySet;
        mUpgradeKeySets = ArrayUtils.cloneOrNull(original.mUpgradeKeySets);
        mKeySetAliases.putAll(original.mKeySetAliases);
!!!42611255.java!!!	setProperSigningKeySet(in ks : long) : void
        mProperSigningKeySet = ks;
        return;
!!!42611383.java!!!	getProperSigningKeySet() : long
        return mProperSigningKeySet;
!!!42611511.java!!!	addUpgradeKeySet(inout alias : String) : void
        if (alias == null) {
            return;
        }

        /* must have previously been defined */
        Long ks = mKeySetAliases.get(alias);
        if (ks != null) {
            mUpgradeKeySets = ArrayUtils.appendLong(mUpgradeKeySets, ks);
        } else {
            throw new IllegalArgumentException("Upgrade keyset alias " + alias
                    + "does not refer to a defined keyset alias!");
        }
!!!42611639.java!!!	addUpgradeKeySetById(in ks : long) : void
        mUpgradeKeySets = ArrayUtils.appendLong(mUpgradeKeySets, ks);
!!!42611767.java!!!	removeAllUpgradeKeySets() : void
        mUpgradeKeySets = null;
        return;
!!!42611895.java!!!	getUpgradeKeySets() : long
        return mUpgradeKeySets;
!!!42612023.java!!!	getAliases() : ArrayMap
        return mKeySetAliases;
!!!42612151.java!!!	setAliases(inout newAliases : ArrayMap) : void

        /* remove old aliases */
        removeAllDefinedKeySets();

        /* add new ones */
        final int newAliasSize = newAliases.size();
        for (int i = 0; i < newAliasSize; i++) {
            mKeySetAliases.put(newAliases.keyAt(i), newAliases.valueAt(i));;
        }
!!!42612279.java!!!	addDefinedKeySet(in ks : long, inout alias : String) : void
        mKeySetAliases.put(alias, ks);
!!!42612407.java!!!	removeAllDefinedKeySets() : void
        final int aliasSize = mKeySetAliases.size();
        for (int i = 0; i < aliasSize; i++) {
            mKeySetAliases.removeAt(i);
        }
!!!42612535.java!!!	isUsingDefinedKeySets() : boolean

        /* should never be the case that mUpgradeKeySets.length == 0 */
        return (mKeySetAliases.size() > 0);
!!!42612663.java!!!	isUsingUpgradeKeySets() : boolean

        /* should never be the case that mUpgradeKeySets.length == 0 */
        return (mUpgradeKeySets != null && mUpgradeKeySets.length > 0);
