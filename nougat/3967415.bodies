class PendingPackageBroadcasts
!!!42615095.java!!!	PendingPackageBroadcasts()
            mUidMap = new SparseArray<ArrayMap<String, ArrayList<String>>>(2);
!!!42615223.java!!!	get(in userId : int, inout packageName : String) : String
            ArrayMap<String, ArrayList<String>> packages = getOrAllocate(userId);
            return packages.get(packageName);
!!!42615351.java!!!	put(in userId : int, inout packageName : String, inout components : ArrayList<String>) : void
            ArrayMap<String, ArrayList<String>> packages = getOrAllocate(userId);
            packages.put(packageName, components);
!!!42615479.java!!!	remove(in userId : int, inout packageName : String) : void
            ArrayMap<String, ArrayList<String>> packages = mUidMap.get(userId);
            if (packages != null) {
                packages.remove(packageName);
            }
!!!42615607.java!!!	remove(in userId : int) : void
            mUidMap.remove(userId);
!!!42615735.java!!!	userIdCount() : int
            return mUidMap.size();
!!!42615863.java!!!	userIdAt(in n : int) : int
            return mUidMap.keyAt(n);
!!!42615991.java!!!	packagesForUserId(in userId : int) : ArrayMap
            return mUidMap.get(userId);
!!!42616119.java!!!	size() : int
            // total number of pending broadcast entries across all userIds
            int num = 0;
            for (int i = 0; i< mUidMap.size(); i++) {
                num += mUidMap.valueAt(i).size();
            }
            return num;
!!!42616247.java!!!	clear() : void
            mUidMap.clear();
!!!42616375.java!!!	getOrAllocate(in userId : int) : ArrayMap
            ArrayMap<String, ArrayList<String>> map = mUidMap.get(userId);
            if (map == null) {
                map = new ArrayMap<String, ArrayList<String>>();
                mUidMap.put(userId, map);
            }
            return map;
