class ViewNodeBuilder
!!!2399031.java!!!	ViewNodeBuilder(inout assist : AssistStructure, inout node : AssistStructure::ViewNode, inout async : boolean)
            mAssist = assist;
            mNode = node;
            mAsync = async;
!!!2399159.java!!!	setId(in id : int, inout packageName : String, inout typeName : String, inout entryName : String) : void
            mNode.mId = id;
            mNode.mIdPackage = packageName;
            mNode.mIdType = typeName;
            mNode.mIdEntry = entryName;
!!!2399287.java!!!	setDimens(in left : int, in top : int, in scrollX : int, in scrollY : int, in width : int, in height : int) : void
            mNode.mX = left;
            mNode.mY = top;
            mNode.mScrollX = scrollX;
            mNode.mScrollY = scrollY;
            mNode.mWidth = width;
            mNode.mHeight = height;
!!!2399415.java!!!	setTransformation(inout matrix : Matrix) : void
            if (matrix == null) {
                mNode.mMatrix = null;
            } else {
                mNode.mMatrix = new Matrix(matrix);
            }
!!!2399543.java!!!	setElevation(in elevation : float) : void
            mNode.mElevation = elevation;
!!!2399671.java!!!	setAlpha(in alpha : float) : void
            mNode.mAlpha = alpha;
!!!2399799.java!!!	setVisibility(in visibility : int) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_VISIBILITY_MASK) | visibility;
!!!2399927.java!!!	setAssistBlocked(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_ASSIST_BLOCKED)
                    | (state ? ViewNode.FLAGS_ASSIST_BLOCKED : 0);
!!!2400055.java!!!	setEnabled(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_DISABLED)
                    | (state ? 0 : ViewNode.FLAGS_DISABLED);
!!!2400183.java!!!	setClickable(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_CLICKABLE)
                    | (state ? ViewNode.FLAGS_CLICKABLE : 0);
!!!2400311.java!!!	setLongClickable(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_LONG_CLICKABLE)
                    | (state ? ViewNode.FLAGS_LONG_CLICKABLE : 0);
!!!2400439.java!!!	setContextClickable(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_CONTEXT_CLICKABLE)
                    | (state ? ViewNode.FLAGS_CONTEXT_CLICKABLE : 0);
!!!2400567.java!!!	setFocusable(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_FOCUSABLE)
                    | (state ? ViewNode.FLAGS_FOCUSABLE : 0);
!!!2400695.java!!!	setFocused(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_FOCUSED)
                    | (state ? ViewNode.FLAGS_FOCUSED : 0);
!!!2400823.java!!!	setAccessibilityFocused(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_ACCESSIBILITY_FOCUSED)
                    | (state ? ViewNode.FLAGS_ACCESSIBILITY_FOCUSED : 0);
!!!2400951.java!!!	setCheckable(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_CHECKABLE)
                    | (state ? ViewNode.FLAGS_CHECKABLE : 0);
!!!2401079.java!!!	setChecked(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_CHECKED)
                    | (state ? ViewNode.FLAGS_CHECKED : 0);
!!!2401207.java!!!	setSelected(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_SELECTED)
                    | (state ? ViewNode.FLAGS_SELECTED : 0);
!!!2401335.java!!!	setActivated(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_ACTIVATED)
                    | (state ? ViewNode.FLAGS_ACTIVATED : 0);
!!!2401463.java!!!	setClassName(inout className : String) : void
            mNode.mClassName = className;
!!!2401591.java!!!	setContentDescription(inout contentDescription : CharSequence) : void
            mNode.mContentDescription = contentDescription;
!!!2401719.java!!!	getNodeText() : AssistStructure::ViewNodeText
            if (mNode.mText != null) {
                return mNode.mText;
            }
            mNode.mText = new ViewNodeText();
            return mNode.mText;
!!!2401847.java!!!	setText(inout text : CharSequence) : void
            ViewNodeText t = getNodeText();
            t.mText = text;
            t.mTextSelectionStart = t.mTextSelectionEnd = -1;
!!!2401975.java!!!	setText(inout text : CharSequence, in selectionStart : int, in selectionEnd : int) : void
            ViewNodeText t = getNodeText();
            t.mText = text;
            t.mTextSelectionStart = selectionStart;
            t.mTextSelectionEnd = selectionEnd;
!!!2402103.java!!!	setTextStyle(in size : float, in fgColor : int, in bgColor : int, in style : int) : void
            ViewNodeText t = getNodeText();
            t.mTextColor = fgColor;
            t.mTextBackgroundColor = bgColor;
            t.mTextSize = size;
            t.mTextStyle = style;
!!!2402231.java!!!	setTextLines(inout charOffsets : int, inout baselines : int) : void
            ViewNodeText t = getNodeText();
            t.mLineCharOffsets = charOffsets;
            t.mLineBaselines = baselines;
!!!2402359.java!!!	setHint(inout hint : CharSequence) : void
            getNodeText().mHint = hint != null ? hint.toString() : null;
!!!2402487.java!!!	getText() : CharSequence
            return mNode.mText != null ? mNode.mText.mText : null;
!!!2402615.java!!!	getTextSelectionStart() : int
            return mNode.mText != null ? mNode.mText.mTextSelectionStart : -1;
!!!2402743.java!!!	getTextSelectionEnd() : int
            return mNode.mText != null ? mNode.mText.mTextSelectionEnd : -1;
!!!2402871.java!!!	getHint() : CharSequence
            return mNode.mText != null ? mNode.mText.mHint : null;
!!!2402999.java!!!	getExtras() : Bundle
            if (mNode.mExtras != null) {
                return mNode.mExtras;
            }
            mNode.mExtras = new Bundle();
            return mNode.mExtras;
!!!2403127.java!!!	hasExtras() : boolean
            return mNode.mExtras != null;
!!!2403255.java!!!	setChildCount(in num : int) : void
            mNode.mChildren = new ViewNode[num];
!!!2403383.java!!!	addChildCount(in num : int) : int
            if (mNode.mChildren == null) {
                setChildCount(num);
                return 0;
            }
            final int start = mNode.mChildren.length;
            ViewNode[] newArray = new ViewNode[start + num];
            System.arraycopy(mNode.mChildren, 0, newArray, 0, start);
            mNode.mChildren = newArray;
            return start;
!!!2403511.java!!!	getChildCount() : int
            return mNode.mChildren != null ? mNode.mChildren.length : 0;
!!!2403639.java!!!	newChild(in index : int) : ViewStructure
            ViewNode node = new ViewNode();
            mNode.mChildren[index] = node;
            return new ViewNodeBuilder(mAssist, node, false);
!!!2403767.java!!!	asyncNewChild(in index : int) : ViewStructure
            synchronized (mAssist) {
                ViewNode node = new ViewNode();
                mNode.mChildren[index] = node;
                ViewNodeBuilder builder = new ViewNodeBuilder(mAssist, node, true);
                mAssist.mPendingAsyncChildren.add(builder);
                return builder;
            }
!!!2403895.java!!!	asyncCommit() : void
            synchronized (mAssist) {
                if (!mAsync) {
                    throw new IllegalStateException("Child " + this
                            + " was not created with ViewStructure.asyncNewChild");
                }
                if (!mAssist.mPendingAsyncChildren.remove(this)) {
                    throw new IllegalStateException("Child " + this + " already committed");
                }
                mAssist.notifyAll();
            }
!!!2404023.java!!!	getTempRect() : Rect
            return mAssist.mTmpRect;
