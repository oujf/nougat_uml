class ClipRectTBAnimation
!!!43207991.java!!!	ClipRectTBAnimation(in fromT : int, in fromB : int, in toT : int, in toB : int, in fromTranslateY : int, in toTranslateY : int, inout translateInterpolator : Interpolator)
        super(0, fromT, 0, fromB, 0, toT, 0, toB);
        mFromTranslateY = fromTranslateY;
        mToTranslateY = toTranslateY;
        mTranslateInterpolator = translateInterpolator;
!!!43208119.java!!!	getTransformation(in currentTime : long, inout outTransformation : Transformation) : boolean

        // Hack: Because translation animation has a different interpolator, we need to duplicate
        // code from Animation here and use it to calculate/store the uninterpolated normalized
        // time.
        final long startOffset = getStartOffset();
        final long duration = getDuration();
        float normalizedTime;
        if (duration != 0) {
            normalizedTime = ((float) (currentTime - (getStartTime() + startOffset))) /
                    (float) duration;
        } else {
            // time is a step-change with a zero duration
            normalizedTime = currentTime < getStartTime() ? 0.0f : 1.0f;
        }
        mNormalizedTime = normalizedTime;
        return super.getTransformation(currentTime, outTransformation);
!!!43208247.java!!!	applyTransformation(in it : float, inout tr : Transformation) : void
        float translationT = mTranslateInterpolator.getInterpolation(mNormalizedTime);
        int translation =
                (int) (mFromTranslateY + (mToTranslateY - mFromTranslateY) * translationT);
        Rect oldClipRect = tr.getClipRect();
        tr.setClipRect(oldClipRect.left,
                mFromRect.top - translation + (int) ((mToRect.top - mFromRect.top) * it),
                oldClipRect.right,
                mFromRect.bottom - translation + (int) ((mToRect.bottom - mFromRect.bottom) * it));
