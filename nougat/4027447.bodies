class TestCountryDetector
!!!43401911.java!!!	TestCountryDetector(inout country : String, inout provider : String)
            this(country, provider, 1000 * 60 * 5);
!!!43402039.java!!!	TestCountryDetector(inout country : String, inout provider : String, in queryLocationTimeout : long)
            super(getContext());
            mCountry = country;
            mLocation = new Location(provider);
            mQueryLocationTimeout = queryLocationTimeout;
            mListeners = new HashMap<String, LocationListener>();
!!!43402167.java!!!	getCountryFromLocation(inout location : Location) : String
            synchronized (countryFoundLocker) {
                if (!notifyCountry) {
                    try {
                        countryFoundLocker.wait();
                    } catch (InterruptedException e) {
                    }
                }
            }
            if (mLocation.getProvider().endsWith(location.getProvider())) {
                return mCountry;
            } else {
                return null;
            }
!!!43402295.java!!!	getLastKnownLocation() : Location
            return mLocation;
!!!43402423.java!!!	setAcceptableProvider(inout acceptableProviders : Set<String>) : void
            mAcceptableProviders = acceptableProviders;
!!!43402551.java!!!	isAcceptableProvider(inout provider : String) : boolean
            if (mAcceptableProviders != null) {
                return mAcceptableProviders.contains(provider);
            } else {
                return true;
            }
!!!43402679.java!!!	registerListener(inout provider : String, inout listener : LocationListener) : void
            assertNotNull(provider);
            mListeners.put(provider, listener);
!!!43402807.java!!!	unregisterListener(inout listener : LocationListener) : void
            for (Entry<String, LocationListener> entry : mListeners.entrySet()) {
                if (entry.getValue().equals(listener)) {
                    mListeners.remove(entry.getKey());
                    return;
                }
            }
            fail("Not registered");
!!!43402935.java!!!	getListeners() : String
            return mListeners;
!!!43403063.java!!!	getQueryLocationTimeout() : long
            return mQueryLocationTimeout;
!!!43403191.java!!!	getEnabledProviders() : String
            return sEnabledProviders;
!!!43403319.java!!!	notifyLocationFound() : void
            // Listener could be removed in the notification.
            LocationListener[] listeners = new LocationListener[mListeners.size()];
            mLocationListeners.toArray(listeners);
            for (LocationListener listener :listeners) {
                listener.onLocationChanged(mLocation);
            }
!!!43403447.java!!!	getListenersCount() : int
            return mListeners.size();
!!!43403575.java!!!	notifyCountryFound() : void
            synchronized (countryFoundLocker) {
                notifyCountry = true;
                countryFoundLocker.notify();
            }
!!!43403703.java!!!	getTimer() : Timer
            return mTimer;
!!!43403831.java!!!	getQueryThread() : Thread
            return mQueryThread;
