class DocumentStack
!!!43715383.java!!!	getTitle() : String
        if (size() == 1 && root != null) {
            return root.title;
        } else if (size() > 1) {
            return peek().displayName;
        } else {
            return null;
        }
!!!43715511.java!!!	isRecents() : boolean
        return size() == 0;
!!!43715639.java!!!	updateRoot(inout matchingRoots : Collection<RootInfo>) : void
        for (RootInfo root : matchingRoots) {
            if (root.equals(this.root)) {
                this.root = root;
                return;
            }
        }
        throw new FileNotFoundException("Failed to find matching root for " + root);
!!!43715767.java!!!	updateDocuments(inout resolver : ContentResolver) : void
        for (DocumentInfo info : this) {
            info.updateSelf(resolver);
        }
!!!43715895.java!!!	buildKey() : String
        final StringBuilder builder = new StringBuilder();
        if (root != null) {
            builder.append(root.authority).append('#');
            builder.append(root.rootId).append('#');
        } else {
            builder.append("[null]").append('#');
        }
        for (DocumentInfo doc : this) {
            builder.append(doc.documentId).append('#');
        }
        return builder.toString();
!!!43716023.java!!!	reset() : void
        clear();
        root = null;
!!!43716151.java!!!	read(inout in : DataInputStream) : void
        final int version = in.readInt();
        switch (version) {
            case VERSION_INIT:
                throw new ProtocolException("Ignored upgrade");
            case VERSION_ADD_ROOT:
                if (in.readBoolean()) {
                    root = new RootInfo();
                    root.read(in);
                }
                final int size = in.readInt();
                for (int i = 0; i < size; i++) {
                    final DocumentInfo doc = new DocumentInfo();
                    doc.read(in);
                    add(doc);
                }
                break;
            default:
                throw new ProtocolException("Unknown version " + version);
        }
!!!43716279.java!!!	write(inout out : DataOutputStream) : void
        out.writeInt(VERSION_ADD_ROOT);
        if (root != null) {
            out.writeBoolean(true);
            root.write(out);
        } else {
            out.writeBoolean(false);
        }
        final int size = size();
        out.writeInt(size);
        for (int i = 0; i < size; i++) {
            final DocumentInfo doc = get(i);
            doc.write(out);
        }
!!!43716407.java!!!	describeContents() : int
        return 0;
!!!43716535.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        DurableUtils.writeToParcel(dest, this);
