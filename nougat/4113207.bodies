class MainActivity
!!!43944631.java!!!	MainActivity()

!!!43944759.java!!!	onResume() : void
        super.onResume();
        if (message != null) {
            showDialog(message);
            message = null;
        }
!!!43944887.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);

        Intent intent = getIntent();
        Bundle bundle = intent.getExtras();

        if (bundle == null) {   // User interaction
            if (sOsuService == null) {
                Intent serviceIntent = new Intent(this, OSUService.class);
                serviceIntent.putExtra(ACTION_KEY, "dummy-key");
                startService(serviceIntent);
                return;
            }

            List<OSUInfo> osuInfos = sOsuService.getOsuInfos();

            setContentView(R.layout.activity_main);
            Log.d("osu", "osu count:" + osuInfos.size());
            View noOsuView = findViewById(R.id.no_osu);
            if (osuInfos.size() > 0) {
                noOsuView.setVisibility(View.GONE);
                osuListAdapter = new OsuListAdapter2(this, osuInfos);
                osuListView = (ListView) findViewById(R.id.profile_list);
                osuListView.setAdapter(osuListAdapter);
                osuListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                    @Override
                    public void onItemClick(AdapterView<?> adapterView, View view, int position, long id) {
                        OSUInfo osuData = (OSUInfo) adapterView.getAdapter().getItem(position);
                        Log.d("osu", "launch osu:" + osuData.getName(LOCALE)
                                + " id:" + osuData.getOsuID());
                        sOsuService.selectOsu(osuData.getOsuID());
                        finish();
                    }
                });
            } else {
                noOsuView.setVisibility(View.VISIBLE);
            }
        } else if (intent.getAction().equals(AppBridge.ACTION_OSU_NOTIFICATION)) {
            if (bundle.containsKey(AppBridge.OSU_COUNT)) {
                showOsuCount(bundle.getInt("osu-count", 0), Collections.<OSUInfo>emptyList());
            } else if (bundle.containsKey(AppBridge.PROV_SUCCESS)) {
                showStatus(bundle.getBoolean(AppBridge.PROV_SUCCESS),
                        bundle.getString(AppBridge.SP_NAME),
                        bundle.getString(AppBridge.PROV_MESSAGE),
                        null);
            } else if (bundle.containsKey(AppBridge.DEAUTH)) {
                showDeauth(bundle.getString(AppBridge.SP_NAME),
                        bundle.getBoolean(AppBridge.DEAUTH),
                        bundle.getInt(AppBridge.DEAUTH_DELAY),
                        bundle.getString(AppBridge.DEAUTH_URL));
            }
            /*
            else if (bundle.containsKey(AppBridge.OSU_INFO)) {
                List<OsuData> osus = printOsuDataList(bundle.getParcelableArray(AppBridge.OSU_INFO));
                showOsuList(osus);
            }
            */
        }
!!!43945015.java!!!	showOsuCount(in osuCount : int, inout osus : List<OSUInfo>) : void
        if (osuCount > 0) {
            printOsuDataList(osus);
            sendNotification(osuCount);
        } else {
            cancelNotification();
        }
        finish();
!!!43945143.java!!!	showStatus(inout provSuccess : boolean, inout spName : String, inout provMessage : String, inout remoteStatus : String) : void
        if (provSuccess) {
            sendDialogMessage(
                    String.format("Credentials for %s was successfully installed", spName));
        } else {
            if (spName != null) {
                if (remoteStatus != null) {
                    sendDialogMessage(
                            String.format("Failed to install credentials for %s: %s: %s",
                                    spName, provMessage, remoteStatus));
                } else {
                    sendDialogMessage(
                            String.format("Failed to install credentials for %s: %s",
                                    spName, provMessage));
                }
            } else {
                sendDialogMessage(
                        String.format("Failed to contact OSU: %s", provMessage));
            }
        }
!!!43945271.java!!!	showDeauth(inout spName : String, inout ess : boolean, in delay : int, inout url : String) : void
        String delayReadable = getReadableTimeInSeconds(delay);
        if (ess) {
            if (delay > 60) {
                sendDialogMessage(
                        String.format("There is an issue connecting to %s [for the next %s]. " +
                                "Please visit %s for details", spName, delayReadable, url));
            } else {
                sendDialogMessage(
                        String.format("There is an issue connecting to %s. " +
                                "Please visit %s for details", spName, url));
            }
        } else {
            sendDialogMessage(
                    String.format("There is an issue with the closest Access Point for %s. " +
                                    "You may wait %s or move to another Access Point to " +
                                    "regain access. Please visit %s for details.",
                            spName, delayReadable, url));
        }
!!!43946551.java!!!	getReadableTimeInSeconds(in timeSeconds : int) : String
        long hours = TimeUnit.SECONDS.toHours(timeSeconds);
        long minutes = TimeUnit.SECONDS.toMinutes(timeSeconds) - TimeUnit.HOURS.toMinutes(hours);
        long seconds =
                timeSeconds - TimeUnit.HOURS.toSeconds(hours) - TimeUnit.MINUTES.toSeconds(minutes);
        if (hours > 0) {
            return String.format("%02d:%02d:%02d", hours, minutes, seconds);
        } else {
            return String.format("%ds", seconds);
        }
!!!43946679.java!!!	sendNotification(in count : int) : void
        Notification.Builder builder =
                new Notification.Builder(this)
                        .setContentTitle(String.format("%s OSU available", count))
                        .setContentText("Choose one to connect")
                        .setSmallIcon(android.R.drawable.ic_dialog_info)
                        .setAutoCancel(false);
        Intent resultIntent = new Intent(this, MainActivity.class);

        TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);
        stackBuilder.addParentStack(MainActivity.class);
        stackBuilder.addNextIntent(resultIntent);
        PendingIntent resultPendingIntent =
                stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);
        builder.setContentIntent(resultPendingIntent);
        NotificationManager notificationManager =
                (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        notificationManager.notify(NOTIFICATION_ID, builder.build());
!!!43946807.java!!!	cancelNotification() : void
        NotificationManager notificationManager =
                (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        notificationManager.cancel(NOTIFICATION_ID);
!!!43946935.java!!!	sendDialogMessage(inout message : String) : void
//        sendNotificationMessage(message);
        this.message = message;
!!!43947063.java!!!	showDialog(inout message : String) : void
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setMessage(message)
                .setTitle("OSU");
        builder.setOnCancelListener(new DialogInterface.OnCancelListener() {
            @Override
            public void onCancel(DialogInterface dialogInterface) {
                dialogInterface.cancel();
                finish();
            }
        });
        AlertDialog dialog = builder.create();
        dialog.show();
!!!43947191.java!!!	sendNotificationMessage(inout title : String) : void
        Notification.Builder builder =
                new Notification.Builder(this)
                        .setContentTitle(title)
                        .setContentText("Click to dismiss.")
                        .setSmallIcon(android.R.drawable.ic_dialog_info)
                        .setAutoCancel(true);
        NotificationManager notificationManager =
                (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        notificationManager.notify(NOTIFICATION_MESSAGE_ID, builder.build());
!!!43947575.java!!!	printOsuDataList(inout osuDataList : List<OSUInfo>) : void
        for (OSUInfo osuData : osuDataList) {
            Log.d("osu", String.format("OSUData:[%s][%s][%d]",
                    osuData.getName(LOCALE), osuData.getServiceDescription(LOCALE),
                    osuData.getOsuID()));
        }
