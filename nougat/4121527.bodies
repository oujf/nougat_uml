class MultiValueMap
!!!43995959.java!!!	put(inout key : String, inout value : T) : void
        key = key.toLowerCase();
        ArrayList<T> values = mMap.get(key);
        if (values == null) {
            values = new ArrayList<>();
            mMap.put(key, values);
        }
        values.add(value);
!!!43996087.java!!!	get(inout key : String) : T
        key = key.toLowerCase();
        List<T> values = mMap.get(key);
        if (values == null) {
            return null;
        } else if (values.size() == 1) {
            return values.get(0);
        } else {
            throw new IllegalArgumentException("Cannot do get on multi-value");
        }
!!!43996215.java!!!	replace(inout key : String, inout oldValue : T, inout newValue : T) : T
        key = key.toLowerCase();
        List<T> values = mMap.get(key);
        if (values == null) {
            return null;
        }

        for (int n = 0; n < values.size(); n++) {
            T value = values.get(n);
            if (value == oldValue) {
                values.set(n, newValue);
                return value;
            }
        }
        return null;
!!!43996343.java!!!	remove(inout key : String, inout value : T) : T
        key = key.toLowerCase();
        List<T> values = mMap.get(key);
        if (values == null) {
            return null;
        }

        T result = null;
        Iterator<T> valueIterator = values.iterator();
        while (valueIterator.hasNext()) {
            if (valueIterator.next() == value) {
                valueIterator.remove();
                result = value;
                break;
            }
        }
        if (values.isEmpty()) {
            mMap.remove(key);
        }
        return result;
!!!43996471.java!!!	remove(inout value : T) : T
        T result = null;
        Iterator<Map.Entry<String, ArrayList<T>>> iterator = mMap.entrySet().iterator();
        while (iterator.hasNext()) {
            ArrayList<T> values = iterator.next().getValue();
            Iterator<T> valueIterator = values.iterator();
            while (valueIterator.hasNext()) {
                if (valueIterator.next() == value) {
                    valueIterator.remove();
                    result = value;
                    break;
                }
            }
            if (result != null) {
                if (values.isEmpty()) {
                    iterator.remove();
                }
                break;
            }
        }
        return result;
!!!43996599.java!!!	values() : Collection<T>
        List<T> allValues = new ArrayList<>(mMap.size());
        for (List<T> values : mMap.values()) {
            for (T value : values) {
                allValues.add(value);
            }
        }
        return allValues;
!!!43996727.java!!!	getSingletonValue() : T
        if (mMap.size() != 1) {
            throw new IllegalArgumentException("Map is not a single entry map");
        }
        List<T> values = mMap.values().iterator().next();
        if (values.size() != 1) {
            throw new IllegalArgumentException("Map is not a single entry map");
        }
        return values.iterator().next();
