class BluetoothServerSocket
!!!2553143.java!!!	BluetoothServerSocket(in type : int, inout auth : boolean, inout encrypt : boolean, in port : int)
        mChannel = port;
        mSocket = new BluetoothSocket(type, -1, auth, encrypt, null, port, null);
        if (port == BluetoothAdapter.SOCKET_CHANNEL_AUTO_STATIC_NO_SDP) {
            mSocket.setExcludeSdp(true);
        }
!!!2553271.java!!!	BluetoothServerSocket(in type : int, inout auth : boolean, inout encrypt : boolean, in port : int, inout mitm : boolean, inout min16DigitPin : boolean)
        mChannel = port;
        mSocket = new BluetoothSocket(type, -1, auth, encrypt, null, port, null, mitm,
                min16DigitPin);
        if(port == BluetoothAdapter.SOCKET_CHANNEL_AUTO_STATIC_NO_SDP) {
            mSocket.setExcludeSdp(true);
        }
!!!2553399.java!!!	BluetoothServerSocket(in type : int, inout auth : boolean, inout encrypt : boolean, inout uuid : ParcelUuid)
        mSocket = new BluetoothSocket(type, -1, auth, encrypt, null, -1, uuid);
        // TODO: This is the same as mChannel = -1 - is this intentional?
        mChannel = mSocket.getPort();
!!!2553527.java!!!	accept() : BluetoothSocket
        return accept(-1);
!!!2553655.java!!!	accept(in timeout : int) : BluetoothSocket
        return mSocket.accept(timeout);
!!!2553783.java!!!	close() : void
        synchronized (this) {
            if (mHandler != null) {
                mHandler.obtainMessage(mMessage).sendToTarget();
            }
        }
        mSocket.close();
!!!2553911.java!!!	setCloseHandler(inout handler : Handler, in message : int) : void
        mHandler = handler;
        mMessage = message;
!!!2554039.java!!!	setServiceName(inout ServiceName : String) : void
        mSocket.setServiceName(ServiceName);
!!!2554167.java!!!	getChannel() : int
        return mChannel;
!!!2554295.java!!!	setChannel(in newChannel : int) : void
        /* TODO: From a design/architecture perspective this is wrong.
         *       The bind operation should be conducted through this class
         *       and the resulting port should be kept in mChannel, and
         *       not set from BluetoothAdapter. */
        if(mSocket != null) {
            if(mSocket.getPort() != newChannel) {
                Log.w(TAG,"The port set is different that the underlying port. mSocket.getPort(): "
                            + mSocket.getPort() + " requested newChannel: " + newChannel);
            }
        }
        mChannel = newChannel;
!!!2554423.java!!!	toString() : String
        StringBuilder sb = new StringBuilder();
        sb.append("ServerSocket: Type: ");
        switch(mSocket.getConnectionType()) {
            case BluetoothSocket.TYPE_RFCOMM:
            {
                sb.append("TYPE_RFCOMM");
                break;
            }
            case BluetoothSocket.TYPE_L2CAP:
            {
                sb.append("TYPE_L2CAP");
                break;
            }
            case BluetoothSocket.TYPE_SCO:
            {
                sb.append("TYPE_SCO");
                break;
            }
        }
        sb.append(" Channel: ").append(mChannel);
        return sb.toString();
