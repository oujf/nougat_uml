class OSUThread
!!!44018615.java!!!	OSUThread(inout osuInfo : OSUInfo, inout osuManager : OSUManager, inout km : KeyManager)
            mOSUClient = new OSUClient(osuInfo, osuManager.getKeyStore());
            mOSUManager = osuManager;
            mHomeSP = null;
            mSpName = osuInfo.getName(LOCALE);
            mFlowType = FLOW_PROVISIONING;
            mKeyManager = km;
            mLaunchTime = System.currentTimeMillis();

            setDaemon(true);
            setName("OSU Client Thread");
!!!44018743.java!!!	OSUThread(inout osuURL : String, inout osuManager : OSUManager, inout km : KeyManager, inout homeSP : HomeSP, in flowType : int)
            mOSUClient = new OSUClient(osuURL, osuManager.getKeyStore());
            mOSUManager = osuManager;
            mHomeSP = homeSP;
            mSpName = homeSP.getFriendlyName();
            mFlowType = flowType;
            mKeyManager = km;
            mLaunchTime = System.currentTimeMillis();

            setDaemon(true);
            setName("OSU Client Thread");
!!!44018871.java!!!	getLaunchTime() : long
            return mLaunchTime;
!!!44018999.java!!!	connect(inout network : Network) : void
            synchronized (mLock) {
                mNetwork = network;
                mLocalAddressSet = true;
                mLock.notifyAll();
            }
            Log.d(TAG, "Client notified...");
!!!44019127.java!!!	run() : void
            Log.d(TAG, mFlowType + "-" + getName() + " running.");
            Network network;
            synchronized (mLock) {
                while (!mLocalAddressSet) {
                    try {
                        mLock.wait();
                    } catch (InterruptedException ie) {
                        /**/
                    }
                    Log.d(TAG, "OSU Thread running...");
                }
                network = mNetwork;
            }

            if (network == null) {
                Log.d(TAG, "Association failed, exiting OSU flow");
                mOSUManager.provisioningFailed(mSpName, "Network cannot be reached",
                        mHomeSP, mFlowType);
                return;
            }

            Log.d(TAG, "OSU SSID Associated at " + network.toString());
            try {
                if (mFlowType == FLOW_PROVISIONING) {
                    mOSUClient.provision(mOSUManager, network, mKeyManager);
                } else {
                    mOSUClient.remediate(mOSUManager, network, mKeyManager, mHomeSP, mFlowType);
                }
            } catch (Throwable t) {
                Log.w(TAG, "OSU flow failed: " + t, t);
                mOSUManager.provisioningFailed(mSpName, t.getMessage(), mHomeSP, mFlowType);
            }
