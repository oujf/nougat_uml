class HPRecommendationPlugin
!!!44056887.java!!!	isPrintSupported(inout printerModel : String) : boolean
        boolean isSupported;
        if (!TextUtils.isEmpty(printerModel)) {
            String modelToUpper = printerModel.toUpperCase(Locale.US);
            if (modelToUpper.contains(TAG_DESIGNJET)) {
                isSupported = isSupportedDesignjet(printerModel);
            } else
                isSupported = !(modelToUpper.contains(TAG_LATEX) || modelToUpper.contains(TAG_SCITEX)) && !(modelToUpper.contains(TAG_PAGEWIDE) && modelToUpper.contains(TAG_XL));
        } else {
            isSupported = false;
        }

        return isSupported;
!!!44057015.java!!!	isSupportedDesignjet(inout printerModel : String) : boolean
        boolean isSupported = false;
        if (!TextUtils.isEmpty(printerModel)) {
            String modelToUpper = printerModel.toUpperCase(Locale.US);
            for (String supportedPrinter : mSupportedDesignJet) {
                if (modelToUpper.contains(supportedPrinter)) {
                    isSupported = true;
                }
            }
        }
        return isSupported;
!!!44057143.java!!!	HPRecommendationPlugin(inout context : Context)
        super(context, R.string.plugin_vendor_hp, new VendorInfo(context.getResources(), R.array.known_print_vendor_info_for_hp), new String[]{"_pdl-datastream._tcp","_ipp._tcp", "_ipps._tcp"});
!!!44057271.java!!!	matchesCriteria(inout vendor : String, inout nsdServiceInfo : NsdServiceInfo) : boolean
        if (!TextUtils.equals(vendor, mVendorInfo.mVendorID)) return false;

        String pdls = MDnsUtils.getString(nsdServiceInfo.getAttributes().get(PDL_ATTRIBUTE));
        boolean hasMobileSupport = TextUtils.equals(ATTRIBUTE_VALUE__TRUE, MDnsUtils.getString(nsdServiceInfo.getAttributes().get(MDNS_ATTRIBUTE__HPLFMOBILEPRINTER)));

        return (((hasMobileSupport || isPrintSupported(MDnsUtils.getString(nsdServiceInfo.getAttributes().get(MDNS_ATTRIBUTE__TY))))
                    &&!TextUtils.isEmpty(pdls))
                && (pdls.contains(PDL__PCL)
                || pdls.contains(PDL__PDF)
                || pdls.contains(PDL__PCLM)
                || pdls.contains(PDL__PWG_RASTER)));
