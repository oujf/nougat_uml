class PageContentRepository
!!!44076983.java!!!	PageContentRepository(inout context : Context)
        mRenderer = new AsyncRenderer(context);
        mState = STATE_CLOSED;
        if (DEBUG) {
            Log.i(LOG_TAG, "STATE_CLOSED");
        }
        mCloseGuard.open("destroy");
!!!44077111.java!!!	open(inout source : ParcelFileDescriptor, in callback : OpenDocumentCallback) : void
        throwIfNotClosed();
        mState = STATE_OPENED;
        if (DEBUG) {
            Log.i(LOG_TAG, "STATE_OPENED");
        }
        mRenderer.open(source, callback);
!!!44077239.java!!!	close(inout callback : Runnable) : void
        throwIfNotOpened();
        mState = STATE_CLOSED;
        if (DEBUG) {
            Log.i(LOG_TAG, "STATE_CLOSED");
        }

        mRenderer.close(callback);
!!!44077367.java!!!	destroy(in callback : Runnable) : void
        if (mState == STATE_OPENED) {
            close(new Runnable() {
                @Override
                public void run() {
                    destroy(callback);
                }
            });
            return;
        }
        mCloseGuard.close();

        mState = STATE_DESTROYED;
        if (DEBUG) {
            Log.i(LOG_TAG, "STATE_DESTROYED");
        }
        mRenderer.destroy();

        if (callback != null) {
            callback.run();
        }
!!!44077495.java!!!	startPreload(in firstShownPage : int, in lastShownPage : int) : void
        // If we do not have a render spec we have no clue what size the
        // preloaded bitmaps should be, so just take a note for what to do.
        if (mLastRenderSpec == null) {
            mScheduledPreloadFirstShownPage = firstShownPage;
            mScheduledPreloadLastShownPage = lastShownPage;
        } else if (mState == STATE_OPENED) {
            mRenderer.startPreload(firstShownPage, lastShownPage, mLastRenderSpec);
        }
!!!44077623.java!!!	stopPreload() : void
        mRenderer.stopPreload();
!!!44077751.java!!!	getFilePageCount() : int
        return mRenderer.getPageCount();
!!!44077879.java!!!	acquirePageContentProvider(in pageIndex : int, inout owner : View) : PageContentRepository::PageContentProvider
        throwIfDestroyed();

        if (DEBUG) {
            Log.i(LOG_TAG, "Acquiring provider for page: " + pageIndex);
        }

        return new PageContentProvider(pageIndex, owner);
!!!44078007.java!!!	releasePageContentProvider(inout provider : PageContentRepository::PageContentProvider) : void
        throwIfDestroyed();

        if (DEBUG) {
            Log.i(LOG_TAG, "Releasing provider for page: " + provider.mPageIndex);
        }

        provider.cancelLoad();
!!!44078135.java!!!	finalize() : void
        try {
            if (mState != STATE_DESTROYED) {
                mCloseGuard.warnIfOpen();
                destroy(null);
            }
        } finally {
            super.finalize();
        }
!!!44078263.java!!!	throwIfNotOpened() : void
        if (mState != STATE_OPENED) {
            throw new IllegalStateException("Not opened");
        }
!!!44078391.java!!!	throwIfNotClosed() : void
        if (mState != STATE_CLOSED) {
            throw new IllegalStateException("Not closed");
        }
!!!44078519.java!!!	throwIfDestroyed() : void
        if (mState == STATE_DESTROYED) {
            throw new IllegalStateException("Destroyed");
        }
