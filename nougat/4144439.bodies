class DragCallbacks
!!!44126775.java!!!	tryCaptureView(inout child : View, in pointerId : int) : boolean
            if (isOptionsOpened() && !mOptionsStateController.canCloseOptions()
                    || isOptionsClosed() && !mOptionsStateController.canOpenOptions()) {
                return false;
            }
            return child == mDynamicContent && pointerId == FIRST_POINTER_ID;
!!!44126903.java!!!	onViewPositionChanged(inout changedView : View, in left : int, in top : int, in dx : int, in dy : int) : void
            if ((isOptionsClosed() || isOptionsClosed()) && dy <= 0) {
                return;
            }

            mCurrentOptionsOffsetY += dy;
            final float progress = ((float) top - getOpenedOptionsY())
                    / (getClosedOptionsY() - getOpenedOptionsY());

            mPrintButton.offsetTopAndBottom(dy);

            mDraggableContent.notifySubtreeAccessibilityStateChangedIfNeeded();

            onDragProgress(progress);
!!!44127031.java!!!	onViewReleased(inout child : View, in velocityX : float, in velocityY : float) : void
            final int childTop = child.getTop();

            final int openedOptionsY = getOpenedOptionsY();
            final int closedOptionsY = getClosedOptionsY();

            if (childTop == openedOptionsY || childTop == closedOptionsY) {
                return;
            }

            final int halfRange = closedOptionsY + (openedOptionsY - closedOptionsY) / 2;
            if (childTop < halfRange) {
                mDragger.smoothSlideViewTo(child, child.getLeft(), closedOptionsY);
            } else {
                mDragger.smoothSlideViewTo(child, child.getLeft(), openedOptionsY);
            }

            invalidate();
!!!44127159.java!!!	getOrderedChildIndex(in index : int) : int
            return getChildCount() - index - 1;
!!!44127287.java!!!	getViewVerticalDragRange(inout child : View) : int
            return mDraggableContent.getHeight();
!!!44127415.java!!!	clampViewPositionVertical(inout child : View, in top : int, in dy : int) : int
            final int staticOptionBottom = mStaticContent.getBottom();
            return Math.max(Math.min(top, getOpenedOptionsY()), getClosedOptionsY());
