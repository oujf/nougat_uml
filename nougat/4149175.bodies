class ProxyServer
!!!44162999.java!!!	ProxyServer()
        threadExecutor = Executors.newCachedThreadPool();
        mPort = -1;
        mCallback = null;
!!!44163127.java!!!	run() : void
        try {
            serverSocket = new ServerSocket(0);

            setPort(serverSocket.getLocalPort());

            while (mIsRunning) {
                try {
                    Socket socket = serverSocket.accept();
                    // Only receive local connections.
                    if (socket.getInetAddress().isLoopbackAddress()) {
                        ProxyConnection parser = new ProxyConnection(socket);

                        threadExecutor.execute(parser);
                    } else {
                        socket.close();
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        } catch (SocketException e) {
            Log.e(TAG, "Failed to start proxy server", e);
        } catch (IOException e1) {
            Log.e(TAG, "Failed to start proxy server", e1);
        }

        mIsRunning = false;
!!!44163255.java!!!	setPort(in port : int) : void
        if (mCallback != null) {
            try {
                mCallback.setProxyPort(port);
            } catch (RemoteException e) {
                Log.w(TAG, "Proxy failed to report port to PacManager", e);
            }
        }
        mPort = port;
!!!44163383.java!!!	setCallback(inout callback : IProxyPortListener) : void
        if (mPort != -1) {
            try {
                callback.setProxyPort(mPort);
            } catch (RemoteException e) {
                Log.w(TAG, "Proxy failed to report port to PacManager", e);
            }
        }
        mCallback = callback;
!!!44163511.java!!!	startServer() : void
        mIsRunning = true;
        start();
!!!44163639.java!!!	stopServer() : void
        mIsRunning = false;
        if (serverSocket != null) {
            try {
                serverSocket.close();
                serverSocket = null;
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
!!!44163767.java!!!	isBound() : boolean
        return (mPort != -1);
!!!44163895.java!!!	getPort() : int
        return mPort;
