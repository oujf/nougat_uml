class DirectStatementService
!!!44364727.java!!!	onCreate() : void
        mThread = new HandlerThread("DirectStatementService thread",
                android.os.Process.THREAD_PRIORITY_BACKGROUND);
        mThread.start();
        onCreate(AbstractStatementRetriever.createDirectRetriever(this), mThread.getLooper(),
                getCacheDir());
!!!44364855.java!!!	onCreate(inout statementRetriever : AbstractStatementRetriever, inout looper : Looper, inout cacheDir : File) : void
        super.onCreate();
        mStatementRetriever = statementRetriever;
        mHandler = new Handler(looper);

        try {
            File httpCacheDir = new File(cacheDir, CACHE_FILENAME);
            mHttpResponseCache = HttpResponseCache.install(httpCacheDir, HTTP_CACHE_SIZE_IN_BYTES);
        } catch (IOException e) {
            Log.i(TAG, "HTTPS response cache installation failed:" + e);
        }
!!!44364983.java!!!	onDestroy() : void
        super.onDestroy();
        if (mThread != null) {
            mThread.quit();
        }

        try {
            if (mHttpResponseCache != null) {
                mHttpResponseCache.delete();
            }
        } catch (IOException e) {
            Log.i(TAG, "HTTP(S) response cache deletion failed:" + e);
        }
!!!44365111.java!!!	onBind(inout intent : Intent) : IBinder
        return null;
!!!44365239.java!!!	onStartCommand(inout intent : Intent, in flags : int, in startId : int) : int
        super.onStartCommand(intent, flags, startId);

        if (intent == null) {
            Log.e(TAG, "onStartCommand called with null intent");
            return START_STICKY;
        }

        if (intent.getAction().equals(CHECK_ALL_ACTION)) {

            Bundle extras = intent.getExtras();
            List<String> sources = extras.getStringArrayList(EXTRA_SOURCE_ASSET_DESCRIPTORS);
            String target = extras.getString(EXTRA_TARGET_ASSET_DESCRIPTOR);
            String relation = extras.getString(EXTRA_RELATION);
            ResultReceiver resultReceiver = extras.getParcelable(EXTRA_RESULT_RECEIVER);

            if (resultReceiver == null) {
                Log.e(TAG, " Intent does not have extra " + EXTRA_RESULT_RECEIVER);
                return START_STICKY;
            }
            if (sources == null) {
                Log.e(TAG, " Intent does not have extra " + EXTRA_SOURCE_ASSET_DESCRIPTORS);
                resultReceiver.send(RESULT_FAIL, Bundle.EMPTY);
                return START_STICKY;
            }
            if (target == null) {
                Log.e(TAG, " Intent does not have extra " + EXTRA_TARGET_ASSET_DESCRIPTOR);
                resultReceiver.send(RESULT_FAIL, Bundle.EMPTY);
                return START_STICKY;
            }
            if (relation == null) {
                Log.e(TAG, " Intent does not have extra " + EXTRA_RELATION);
                resultReceiver.send(RESULT_FAIL, Bundle.EMPTY);
                return START_STICKY;
            }

            mHandler.post(new ExceptionLoggingFutureTask<Void>(
                    new IsAssociatedCallable(sources, target, relation, resultReceiver), TAG));
        } else {
            Log.e(TAG, "onStartCommand called with unsupported action: " + intent.getAction());
        }
        return START_STICKY;
