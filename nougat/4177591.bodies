class StatementParser
!!!44374839.java!!!	parseStatementList(inout statementList : String, inout source : AbstractAsset) : ParsedStatement
        List<Statement> statements = new ArrayList<Statement>();
        List<String> delegates = new ArrayList<String>();

        JsonReader reader = new JsonReader(new StringReader(statementList));
        reader.setLenient(false);

        reader.beginArray();
        while (reader.hasNext()) {
            ParsedStatement result;
            try {
                result = parseStatement(reader, source);
            } catch (AssociationServiceException e) {
                // The element in the array is well formatted Json but not a well-formed Statement.
                continue;
            }
            statements.addAll(result.getStatements());
            delegates.addAll(result.getDelegates());
        }
        reader.endArray();

        return new ParsedStatement(statements, delegates);
!!!44374967.java!!!	parseStatement(inout statementString : String, inout source : AbstractAsset) : ParsedStatement
        JsonReader reader = new JsonReader(new StringReader(statementString));
        reader.setLenient(false);
        return parseStatement(reader, source);
!!!44375095.java!!!	parseStatement(inout reader : JsonReader, inout source : AbstractAsset) : ParsedStatement
        List<Statement> statements = new ArrayList<Statement>();
        List<String> delegates = new ArrayList<String>();

        JSONObject statement = JsonParser.parse(reader);

        if (statement.optString(Utils.DELEGATE_FIELD_DELEGATE, null) != null) {
            delegates.add(statement.optString(Utils.DELEGATE_FIELD_DELEGATE));
        } else {
            JSONObject targetObject = statement.optJSONObject(Utils.ASSET_DESCRIPTOR_FIELD_TARGET);
            if (targetObject == null) {
                throw new AssociationServiceException(String.format(
                        FIELD_NOT_STRING_FORMAT_STRING, Utils.ASSET_DESCRIPTOR_FIELD_TARGET));
            }

            JSONArray relations = statement.optJSONArray(Utils.ASSET_DESCRIPTOR_FIELD_RELATION);
            if (relations == null) {
                throw new AssociationServiceException(String.format(
                        FIELD_NOT_ARRAY_FORMAT_STRING, Utils.ASSET_DESCRIPTOR_FIELD_RELATION));
            }

            AbstractAsset target = AssetFactory.create(targetObject);
            for (int i = 0; i < relations.length(); i++) {
                statements.add(Statement
                        .create(source, target, Relation.create(relations.getString(i))));
            }
        }

        return new ParsedStatement(statements, delegates);
