class BluetoothPan
!!!2545847.java!!!	BluetoothPan(inout context : Context, inout l : BluetoothProfile::ServiceListener)
        mContext = context;
        mServiceListener = l;
        mAdapter = BluetoothAdapter.getDefaultAdapter();
        try {
            mAdapter.getBluetoothManager().registerStateChangeCallback(mStateChangeCallback);
        } catch (RemoteException re) {
            Log.w(TAG,"Unable to register BluetoothStateChangeCallback",re);
        }
        if (VDBG) Log.d(TAG, "BluetoothPan() call bindService");
        doBind();
!!!2545975.java!!!	doBind() : boolean
        Intent intent = new Intent(IBluetoothPan.class.getName());
        ComponentName comp = intent.resolveSystemService(mContext.getPackageManager(), 0);
        intent.setComponent(comp);
        if (comp == null || !mContext.bindServiceAsUser(intent, mConnection, 0,
                android.os.Process.myUserHandle())) {
            Log.e(TAG, "Could not bind to Bluetooth Pan Service with " + intent);
            return false;
        }
        return true;
!!!2546103.java!!!	close() : void
        if (VDBG) log("close()");

        IBluetoothManager mgr = mAdapter.getBluetoothManager();
        if (mgr != null) {
            try {
                mgr.unregisterStateChangeCallback(mStateChangeCallback);
            } catch (RemoteException re) {
                Log.w(TAG,"Unable to unregister BluetoothStateChangeCallback",re);
            }
        }

        synchronized (mConnection) {
            if (mPanService != null) {
                try {
                    mPanService = null;
                    mContext.unbindService(mConnection);
                } catch (Exception re) {
                    Log.e(TAG,"",re);
                }
            }
        }
        mServiceListener = null;
!!!2546231.java!!!	finalize() : void
        close();
!!!2546359.java!!!	connect(inout device : BluetoothDevice) : boolean
        if (DBG) log("connect(" + device + ")");
        if (mPanService != null && isEnabled() &&
            isValidDevice(device)) {
            try {
                return mPanService.connect(device);
            } catch (RemoteException e) {
                Log.e(TAG, "Stack:" + Log.getStackTraceString(new Throwable()));
                return false;
            }
        }
        if (mPanService == null) Log.w(TAG, "Proxy not attached to service");
        return false;
!!!2546487.java!!!	disconnect(inout device : BluetoothDevice) : boolean
        if (DBG) log("disconnect(" + device + ")");
        if (mPanService != null && isEnabled() &&
            isValidDevice(device)) {
            try {
                return mPanService.disconnect(device);
            } catch (RemoteException e) {
                Log.e(TAG, "Stack:" + Log.getStackTraceString(new Throwable()));
                return false;
            }
        }
        if (mPanService == null) Log.w(TAG, "Proxy not attached to service");
        return false;
!!!2546615.java!!!	getConnectedDevices() : BluetoothDevice
        if (VDBG) log("getConnectedDevices()");
        if (mPanService != null && isEnabled()) {
            try {
                return mPanService.getConnectedDevices();
            } catch (RemoteException e) {
                Log.e(TAG, "Stack:" + Log.getStackTraceString(new Throwable()));
                return new ArrayList<BluetoothDevice>();
            }
        }
        if (mPanService == null) Log.w(TAG, "Proxy not attached to service");
        return new ArrayList<BluetoothDevice>();
!!!2546743.java!!!	getDevicesMatchingConnectionStates(inout states : int) : BluetoothDevice
        if (VDBG) log("getDevicesMatchingStates()");
        if (mPanService != null && isEnabled()) {
            try {
                return mPanService.getDevicesMatchingConnectionStates(states);
            } catch (RemoteException e) {
                Log.e(TAG, "Stack:" + Log.getStackTraceString(new Throwable()));
                return new ArrayList<BluetoothDevice>();
            }
        }
        if (mPanService == null) Log.w(TAG, "Proxy not attached to service");
        return new ArrayList<BluetoothDevice>();
!!!2546871.java!!!	getConnectionState(inout device : BluetoothDevice) : int
        if (VDBG) log("getState(" + device + ")");
        if (mPanService != null && isEnabled()
            && isValidDevice(device)) {
            try {
                return mPanService.getConnectionState(device);
            } catch (RemoteException e) {
                Log.e(TAG, "Stack:" + Log.getStackTraceString(new Throwable()));
                return BluetoothProfile.STATE_DISCONNECTED;
            }
        }
        if (mPanService == null) Log.w(TAG, "Proxy not attached to service");
        return BluetoothProfile.STATE_DISCONNECTED;
!!!2546999.java!!!	setBluetoothTethering(inout value : boolean) : void
        if (DBG) log("setBluetoothTethering(" + value + ")");

        if (mPanService != null && isEnabled()) {
            try {
                mPanService.setBluetoothTethering(value);
            } catch (RemoteException e) {
                Log.e(TAG, "Stack:" + Log.getStackTraceString(new Throwable()));
            }
        }
!!!2547127.java!!!	isTetheringOn() : boolean
        if (VDBG) log("isTetheringOn()");

        if (mPanService != null && isEnabled()) {
            try {
                return mPanService.isTetheringOn();
            } catch (RemoteException e) {
                Log.e(TAG, "Stack:" + Log.getStackTraceString(new Throwable()));
            }
        }
        return false;
!!!2547255.java!!!	isEnabled() : boolean
       if (mAdapter.getState() == BluetoothAdapter.STATE_ON) return true;
       return false;
!!!2547383.java!!!	isValidDevice(inout device : BluetoothDevice) : boolean
       if (device == null) return false;

       if (BluetoothAdapter.checkBluetoothAddress(device.getAddress())) return true;
       return false;
!!!2547511.java!!!	log(inout msg : String) : void
      Log.d(TAG, msg);
