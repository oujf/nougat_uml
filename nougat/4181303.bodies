class ExpandableView
!!!44798391.java!!!	ExpandableView(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
!!!44798519.java!!!	onMeasure(in widthMeasureSpec : int, in heightMeasureSpec : int) : void
        final int givenSize = MeasureSpec.getSize(heightMeasureSpec);
        int ownMaxHeight = Integer.MAX_VALUE;
        int heightMode = MeasureSpec.getMode(heightMeasureSpec);
        if (heightMode != MeasureSpec.UNSPECIFIED && givenSize != 0) {
            ownMaxHeight = Math.min(givenSize, ownMaxHeight);
        }
        int newHeightSpec = MeasureSpec.makeMeasureSpec(ownMaxHeight, MeasureSpec.AT_MOST);
        int maxChildHeight = 0;
        int childCount = getChildCount();
        for (int i = 0; i < childCount; i++) {
            View child = getChildAt(i);
            if (child.getVisibility() == GONE) {
                continue;
            }
            int childHeightSpec = newHeightSpec;
            ViewGroup.LayoutParams layoutParams = child.getLayoutParams();
            if (layoutParams.height != ViewGroup.LayoutParams.MATCH_PARENT) {
                if (layoutParams.height >= 0) {
                    // An actual height is set
                    childHeightSpec = layoutParams.height > ownMaxHeight
                        ? MeasureSpec.makeMeasureSpec(ownMaxHeight, MeasureSpec.EXACTLY)
                        : MeasureSpec.makeMeasureSpec(layoutParams.height, MeasureSpec.EXACTLY);
                }
                child.measure(
                        getChildMeasureSpec(widthMeasureSpec, 0 /* padding */, layoutParams.width),
                        childHeightSpec);
                int childHeight = child.getMeasuredHeight();
                maxChildHeight = Math.max(maxChildHeight, childHeight);
            } else {
                mMatchParentViews.add(child);
            }
        }
        int ownHeight = heightMode == MeasureSpec.EXACTLY
                ? givenSize : Math.min(ownMaxHeight, maxChildHeight);
        newHeightSpec = MeasureSpec.makeMeasureSpec(ownHeight, MeasureSpec.EXACTLY);
        for (View child : mMatchParentViews) {
            child.measure(getChildMeasureSpec(
                    widthMeasureSpec, 0 /* padding */, child.getLayoutParams().width),
                    newHeightSpec);
        }
        mMatchParentViews.clear();
        int width = MeasureSpec.getSize(widthMeasureSpec);
        setMeasuredDimension(width, ownHeight);
!!!44798647.java!!!	onLayout(inout changed : boolean, in left : int, in top : int, in right : int, in bottom : int) : void
        super.onLayout(changed, left, top, right, bottom);
        updateClipping();
!!!44798775.java!!!	pointInView(in localX : float, in localY : float, in slop : float) : boolean
        float top = mClipTopAmount;
        float bottom = mActualHeight;
        return localX >= -slop && localY >= top - slop && localX < ((mRight - mLeft) + slop) &&
                localY < (bottom + slop);
!!!44798903.java!!!	setActualHeight(in actualHeight : int, inout notifyListeners : boolean) : void
        mActualHeight = actualHeight;
        updateClipping();
        if (notifyListeners) {
            notifyHeightChanged(false  /* needsAnimation */);
        }
!!!44799031.java!!!	setActualHeight(in actualHeight : int) : void
        setActualHeight(actualHeight, true /* notifyListeners */);
!!!44799159.java!!!	getActualHeight() : int
        return mActualHeight;
!!!44799287.java!!!	getMaxContentHeight() : int
        return getHeight();
!!!44799415.java!!!	getMinHeight() : int
        return getHeight();
!!!44799543.java!!!	getCollapsedHeight() : int
        return getHeight();
!!!44799799.java!!!	setDark(inout dark : boolean, inout fade : boolean, in delay : long) : void
        mDark = dark;
!!!44799927.java!!!	isDark() : boolean
        return mDark;
!!!44800311.java!!!	getIntrinsicHeight() : int
        return getHeight();
!!!44800439.java!!!	setClipTopAmount(in clipTopAmount : int) : void
        mClipTopAmount = clipTopAmount;
        updateClipping();
!!!44800567.java!!!	getClipTopAmount() : int
        return mClipTopAmount;
!!!44800695.java!!!	setOnHeightChangedListener(inout listener : ExpandableView::OnHeightChangedListener) : void
        mOnHeightChangedListener = listener;
!!!44800823.java!!!	isContentExpandable() : boolean
        return false;
!!!44800951.java!!!	notifyHeightChanged(inout needsAnimation : boolean) : void
        if (mOnHeightChangedListener != null) {
            mOnHeightChangedListener.onHeightChanged(this, needsAnimation);
        }
!!!44801079.java!!!	isTransparent() : boolean
        return false;
!!!44801591.java!!!	setTranslation(in translation : float) : void
        setTranslationX(translation);
!!!44801719.java!!!	getTranslation() : float
        return getTranslationX();
!!!44801847.java!!!	onHeightReset() : void
        if (mOnHeightChangedListener != null) {
            mOnHeightChangedListener.onReset(this);
        }
!!!44801975.java!!!	getDrawingRect(inout outRect : Rect) : void
        super.getDrawingRect(outRect);
        outRect.left += getTranslationX();
        outRect.right += getTranslationX();
        outRect.bottom = (int) (outRect.top + getTranslationY() + getActualHeight());
        outRect.top += getTranslationY() + getClipTopAmount();
!!!44802103.java!!!	getBoundsOnScreen(inout outRect : Rect, inout clipToParent : boolean) : void
        super.getBoundsOnScreen(outRect, clipToParent);
        if (getTop() + getTranslationY() < 0) {
            // We got clipped to the parent here - make sure we undo that.
            outRect.top += getTop() + getTranslationY();
        }
        outRect.bottom = outRect.top + getActualHeight();
        outRect.top += getClipTopAmount();
!!!44802231.java!!!	isSummaryWithChildren() : boolean
        return false;
!!!44802359.java!!!	areChildrenExpanded() : boolean
        return false;
!!!44802487.java!!!	updateClipping() : void
        if (mClipToActualHeight) {
            int top = getClipTopAmount();
            if (top >= getActualHeight()) {
                top = getActualHeight() - 1;
            }
            mClipRect.set(0, top, getWidth(), getActualHeight() + getExtraBottomPadding());
            setClipBounds(mClipRect);
        } else {
            setClipBounds(null);
        }
!!!44802615.java!!!	setClipToActualHeight(inout clipToActualHeight : boolean) : void
        mClipToActualHeight = clipToActualHeight;
        updateClipping();
!!!44802743.java!!!	willBeGone() : boolean
        return mWillBeGone;
!!!44802871.java!!!	setWillBeGone(inout willBeGone : boolean) : void
        mWillBeGone = willBeGone;
!!!44802999.java!!!	getMinClipTopAmount() : int
        return mMinClipTopAmount;
!!!44803127.java!!!	setMinClipTopAmount(in minClipTopAmount : int) : void
        mMinClipTopAmount = minClipTopAmount;
!!!44803255.java!!!	setLayerType(in layerType : int, inout paint : Paint) : void
        if (hasOverlappingRendering()) {
            super.setLayerType(layerType, paint);
        }
!!!44803383.java!!!	hasOverlappingRendering() : boolean
        // Otherwise it will be clipped
        return super.hasOverlappingRendering() && getActualHeight() <= getHeight();
!!!44803511.java!!!	getShadowAlpha() : float
        return 0.0f;
!!!44803767.java!!!	getIncreasedPaddingAmount() : float
        return 0.0f;
!!!44803895.java!!!	mustStayOnScreen() : boolean
        return false;
!!!44804151.java!!!	getOutlineAlpha() : float
        return 0.0f;
!!!44804279.java!!!	getOutlineTranslation() : int
        return 0;
!!!44804407.java!!!	setChangingPosition(inout changingPosition : boolean) : void
        mChangingPosition = changingPosition;
!!!44804535.java!!!	isChangingPosition() : boolean
        return mChangingPosition;
!!!44804663.java!!!	setTransientContainer(inout transientContainer : ViewGroup) : void
        mTransientContainer = transientContainer;
!!!44804791.java!!!	getTransientContainer() : ViewGroup
        return mTransientContainer;
!!!44804919.java!!!	getExtraBottomPadding() : int
        return 0;
!!!44805047.java!!!	isGroupExpansionChanging() : boolean
        return false;
!!!44805175.java!!!	isGroupExpanded() : boolean
        return false;
!!!44805303.java!!!	isChildInGroup() : boolean
        return false;
