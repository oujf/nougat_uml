class BluetoothPbapClient
!!!2549175.java!!!	BluetoothPbapClient(inout context : Context, inout l : BluetoothProfile::ServiceListener)
        if (DBG) {
            Log.d(TAG, "Create BluetoothPbapClient proxy object");
        }
        mContext = context;
        mServiceListener = l;
        mAdapter = BluetoothAdapter.getDefaultAdapter();
        IBluetoothManager mgr = mAdapter.getBluetoothManager();
        if (mgr != null) {
            try {
                mgr.registerStateChangeCallback(mBluetoothStateChangeCallback);
            } catch (RemoteException e) {
                Log.e(TAG,"",e);
            }
        }
        doBind();
!!!2549303.java!!!	doBind() : boolean
        Intent intent = new Intent(IBluetoothPbapClient.class.getName());
        ComponentName comp = intent.resolveSystemService(mContext.getPackageManager(), 0);
        intent.setComponent(comp);
        if (comp == null || !mContext.bindServiceAsUser(intent, mConnection, 0,
                android.os.Process.myUserHandle())) {
            Log.e(TAG, "Could not bind to Bluetooth PBAP Client Service with " + intent);
            return false;
        }
        return true;
!!!2549431.java!!!	finalize() : void
        try {
            close();
        } finally {
            super.finalize();
        }
!!!2549559.java!!!	close() : void
        IBluetoothManager mgr = mAdapter.getBluetoothManager();
        if (mgr != null) {
            try {
                mgr.unregisterStateChangeCallback(mBluetoothStateChangeCallback);
            } catch (Exception e) {
                Log.e(TAG,"",e);
            }
        }

        synchronized (mConnection) {
            if (mService != null) {
                try {
                    mService = null;
                    mContext.unbindService(mConnection);
                } catch (Exception re) {
                    Log.e(TAG,"",re);
                }
            }
        }
        mServiceListener = null;
!!!2549687.java!!!	connect(inout device : BluetoothDevice) : boolean
        if (DBG) {
            log("connect(" + device + ") for PBAP Client.");
        }
        if (mService != null && isEnabled() && isValidDevice(device)) {
            try {
                return mService.connect(device);
            } catch (RemoteException e) {
                Log.e(TAG, Log.getStackTraceString(new Throwable()));
                return false;
            }
        }
        if (mService == null) {
            Log.w(TAG, "Proxy not attached to service");
        }
        return false;
!!!2549815.java!!!	disconnect(inout device : BluetoothDevice) : boolean
        if (DBG) {
            log("disconnect(" + device + ")" + new Exception() );
        }
        if (mService != null && isEnabled() && isValidDevice(device)) {
            try {
                mService.disconnect(device);
                return true;
            } catch (RemoteException e) {
              Log.e(TAG, Log.getStackTraceString(new Throwable()));
              return false;
            }
        }
        if (mService == null) {
            Log.w(TAG, "Proxy not attached to service");
        }
        return false;
!!!2549943.java!!!	getConnectedDevices() : BluetoothDevice
        if (DBG) {
            log("getConnectedDevices()");
        }
        if (mService != null && isEnabled()) {
            try {
                return mService.getConnectedDevices();
            } catch (RemoteException e) {
                Log.e(TAG, Log.getStackTraceString(new Throwable()));
                return new ArrayList<BluetoothDevice>();
            }
        }
        if (mService == null) {
            Log.w(TAG, "Proxy not attached to service");
        }
        return new ArrayList<BluetoothDevice>();
!!!2550071.java!!!	getDevicesMatchingConnectionStates(inout states : int) : BluetoothDevice
        if (DBG) {
            log("getDevicesMatchingStates()");
        }
        if (mService != null && isEnabled()) {
            try {
                return mService.getDevicesMatchingConnectionStates(states);
            } catch (RemoteException e) {
                Log.e(TAG, Log.getStackTraceString(new Throwable()));
                return new ArrayList<BluetoothDevice>();
            }
        }
        if (mService == null) {
            Log.w(TAG, "Proxy not attached to service");
        }
        return new ArrayList<BluetoothDevice>();
!!!2550199.java!!!	getConnectionState(inout device : BluetoothDevice) : int
        if (DBG) {
            log("getConnectionState(" + device + ")");
        }
        if (mService != null && isEnabled() && isValidDevice(device)) {
            try {
                return mService.getConnectionState(device);
            } catch (RemoteException e) {
                Log.e(TAG, Log.getStackTraceString(new Throwable()));
                return BluetoothProfile.STATE_DISCONNECTED;
            }
        }
        if (mService == null) {
            Log.w(TAG, "Proxy not attached to service");
        }
        return BluetoothProfile.STATE_DISCONNECTED;
!!!2550327.java!!!	log(inout msg : String) : void
        Log.d(TAG, msg);
!!!2550455.java!!!	isEnabled() : boolean
        BluetoothAdapter adapter = BluetoothAdapter.getDefaultAdapter();
        if (adapter != null && adapter.getState() == BluetoothAdapter.STATE_ON) {
            return true;
        }
        log("Bluetooth is Not enabled");
        return false;
!!!2550583.java!!!	isValidDevice(inout device : BluetoothDevice) : boolean
       if (device == null) {
           return false;
       }
       if (BluetoothAdapter.checkBluetoothAddress(device.getAddress())) {
           return true;
       }
       return false;
!!!2550711.java!!!	setPriority(inout device : BluetoothDevice, in priority : int) : boolean
        if (DBG) {
            log("setPriority(" + device + ", " + priority + ")");
        }
        if (mService != null && isEnabled() &&
            isValidDevice(device)) {
            if (priority != BluetoothProfile.PRIORITY_OFF &&
                priority != BluetoothProfile.PRIORITY_ON) {
              return false;
            }
            try {
                return mService.setPriority(device, priority);
            } catch (RemoteException e) {
                Log.e(TAG, Log.getStackTraceString(new Throwable()));
                return false;
            }
        }
        if (mService == null) {
            Log.w(TAG, "Proxy not attached to service");
        }
        return false;
!!!2550839.java!!!	getPriority(inout device : BluetoothDevice) : int
        if (VDBG) {
            log("getPriority(" + device + ")");
        }
        if (mService != null && isEnabled() && isValidDevice(device)) {
            try {
                return mService.getPriority(device);
            } catch (RemoteException e) {
                Log.e(TAG, Log.getStackTraceString(new Throwable()));
                return PRIORITY_OFF;
            }
        }
        if (mService == null) {
            Log.w(TAG, "Proxy not attached to service");
        }
        return PRIORITY_OFF;
