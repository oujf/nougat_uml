class QSPanel
!!!44517175.java!!!	QSPanel(inout context : Context)
        this(context, null);
!!!44517303.java!!!	QSPanel(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        mContext = context;

        setOrientation(VERTICAL);

        mBrightnessView = LayoutInflater.from(context).inflate(
                R.layout.quick_settings_brightness_dialog, this, false);
        addView(mBrightnessView);

        setupTileLayout();

        mFooter = new QSFooter(this, context);
        addView(mFooter.getView());

        updateResources();

        mBrightnessController = new BrightnessController(getContext(),
                (ImageView) findViewById(R.id.brightness_icon),
                (ToggleSlider) findViewById(R.id.brightness_slider));

!!!44517431.java!!!	setupTileLayout() : void
        mTileLayout = (QSTileLayout) LayoutInflater.from(mContext).inflate(
                R.layout.qs_paged_tile_layout, this, false);
        mTileLayout.setListening(mListening);
        addView((View) mTileLayout);
        findViewById(android.R.id.edit).setOnClickListener(view ->
                mHost.startRunnableDismissingKeyguard(() -> showEdit(view)));
!!!44517559.java!!!	isShowingCustomize() : boolean
        return mCustomizePanel != null && mCustomizePanel.isCustomizing();
!!!44517687.java!!!	onAttachedToWindow() : void
        super.onAttachedToWindow();
        TunerService.get(mContext).addTunable(this, QS_SHOW_BRIGHTNESS);
        if (mHost != null) {
            setTiles(mHost.getTiles());
        }
!!!44517815.java!!!	onDetachedFromWindow() : void
        TunerService.get(mContext).removeTunable(this);
        mHost.removeCallback(this);
        for (TileRecord record : mRecords) {
            record.tile.removeCallbacks();
        }
        super.onDetachedFromWindow();
!!!44517943.java!!!	onTilesChanged() : void
        setTiles(mHost.getTiles());
!!!44518071.java!!!	onTuningChanged(inout key : String, inout newValue : String) : void
        if (QS_SHOW_BRIGHTNESS.equals(key)) {
            mBrightnessView.setVisibility(newValue == null || Integer.parseInt(newValue) != 0
                    ? VISIBLE : GONE);
        }
!!!44518199.java!!!	openDetails(inout subPanel : String) : void
        QSTile<?> tile = getTile(subPanel);
        showDetailAdapter(true, tile.getDetailAdapter(), new int[] {getWidth() / 2, 0});
!!!44518327.java!!!	getTile(inout subPanel : String) : QSTile
        for (int i = 0; i < mRecords.size(); i++) {
            if (subPanel.equals(mRecords.get(i).tile.getTileSpec())) {
                return mRecords.get(i).tile;
            }
        }
        return mHost.createTile(subPanel);
!!!44518455.java!!!	setBrightnessMirror(inout c : BrightnessMirrorController) : void
        mBrightnessMirrorController = c;
        ToggleSlider brightnessSlider = (ToggleSlider) findViewById(R.id.brightness_slider);
        ToggleSlider mirror = (ToggleSlider) c.getMirror().findViewById(R.id.brightness_slider);
        brightnessSlider.setMirror(mirror);
        brightnessSlider.setMirrorController(c);
!!!44518583.java!!!	setCallback(inout callback : QSTile::Callback) : void
        mCallback = callback;
!!!44518711.java!!!	setHost(inout host : QSTileHost, inout customizer : QSCustomizer) : void
        mHost = host;
        mHost.addCallback(this);
        setTiles(mHost.getTiles());
        mFooter.setHost(host);
        mCustomizePanel = customizer;
        if (mCustomizePanel != null) {
            mCustomizePanel.setHost(mHost);
        }
!!!44518839.java!!!	getHost() : QSTileHost
        return mHost;
!!!44518967.java!!!	updateResources() : void
        final Resources res = mContext.getResources();
        mPanelPaddingBottom = res.getDimensionPixelSize(R.dimen.qs_panel_padding_bottom);
        mBrightnessPaddingTop = res.getDimensionPixelSize(R.dimen.qs_brightness_padding_top);
        setPadding(0, mBrightnessPaddingTop, 0, mPanelPaddingBottom);
        for (TileRecord r : mRecords) {
            r.tile.clearState();
        }
        if (mListening) {
            refreshAllTiles();
        }
        if (mTileLayout != null) {
            mTileLayout.updateResources();
        }
!!!44519095.java!!!	onConfigurationChanged(inout newConfig : Configuration) : void
        super.onConfigurationChanged(newConfig);
        mFooter.onConfigurationChanged();

        if (mBrightnessMirrorController != null) {
            // Reload the mirror in case it got reinflated but we didn't.
            setBrightnessMirror(mBrightnessMirrorController);
        }
!!!44519223.java!!!	onCollapse() : void
        if (mCustomizePanel != null && mCustomizePanel.isCustomizing()) {
            mCustomizePanel.hide(mCustomizePanel.getWidth() / 2, mCustomizePanel.getHeight() / 2);
        }
!!!44519351.java!!!	setExpanded(inout expanded : boolean) : void
        if (mExpanded == expanded) return;
        mExpanded = expanded;
        if (!mExpanded && mTileLayout instanceof PagedTileLayout) {
            ((PagedTileLayout) mTileLayout).setCurrentItem(0, false);
        }
        MetricsLogger.visibility(mContext, MetricsEvent.QS_PANEL, mExpanded);
        if (!mExpanded) {
            closeDetail();
        } else {
            logTiles();
        }
!!!44519479.java!!!	setListening(inout listening : boolean) : void
        if (mListening == listening) return;
        mListening = listening;
        if (mTileLayout != null) {
            mTileLayout.setListening(listening);
        }
        mFooter.setListening(mListening);
        if (mListening) {
            refreshAllTiles();
        }
        if (listening) {
            mBrightnessController.registerCallbacks();
        } else {
            mBrightnessController.unregisterCallbacks();
        }
!!!44519607.java!!!	refreshAllTiles() : void
        for (TileRecord r : mRecords) {
            r.tile.refreshState();
        }
        mFooter.refreshState();
!!!44519735.java!!!	showDetailAdapter(inout show : boolean, inout adapter : QSTile::DetailAdapter, inout locationInWindow : int) : void
        int xInWindow = locationInWindow[0];
        int yInWindow = locationInWindow[1];
        ((View) getParent()).getLocationInWindow(locationInWindow);

        Record r = new Record();
        r.detailAdapter = adapter;
        r.x = xInWindow - locationInWindow[0];
        r.y = yInWindow - locationInWindow[1];

        locationInWindow[0] = xInWindow;
        locationInWindow[1] = yInWindow;

        showDetail(show, r);
!!!44519863.java!!!	showDetail(inout show : boolean, inout r : QSPanel::Record) : void
        mHandler.obtainMessage(H.SHOW_DETAIL, show ? 1 : 0, 0, r).sendToTarget();
!!!44519991.java!!!	setTiles(inout tiles : Collection<QSTile<?>>) : void
        setTiles(tiles, false);
!!!44520119.java!!!	setTiles(inout tiles : Collection<QSTile<?>>, inout collapsedView : boolean) : void
        for (TileRecord record : mRecords) {
            mTileLayout.removeTile(record);
            record.tile.removeCallback(record.callback);
        }
        mRecords.clear();
        for (QSTile<?> tile : tiles) {
            addTile(tile, collapsedView);
        }
!!!44520247.java!!!	drawTile(inout r : QSPanel::TileRecord, inout state : QSTile::State) : void
        r.tileView.onStateChanged(state);
!!!44520375.java!!!	createTileView(inout tile : QSTile, inout collapsedView : boolean) : QSTileBaseView
        return new QSTileView(mContext, tile.createTileView(mContext), collapsedView);
!!!44520503.java!!!	shouldShowDetail() : boolean
        return mExpanded;
!!!44520631.java!!!	addTile(in tile : QSTile, inout collapsedView : boolean) : void
        final TileRecord r = new TileRecord();
        r.tile = tile;
        r.tileView = createTileView(tile, collapsedView);
        final QSTile.Callback callback = new QSTile.Callback() {
            @Override
            public void onStateChanged(QSTile.State state) {
                drawTile(r, state);
            }

            @Override
            public void onShowDetail(boolean show) {
                // Both the collapsed and full QS panels get this callback, this check determines
                // which one should handle showing the detail.
                if (shouldShowDetail()) {
                    QSPanel.this.showDetail(show, r);
                }
            }

            @Override
            public void onToggleStateChanged(boolean state) {
                if (mDetailRecord == r) {
                    fireToggleStateChanged(state);
                }
            }

            @Override
            public void onScanStateChanged(boolean state) {
                r.scanState = state;
                if (mDetailRecord == r) {
                    fireScanStateChanged(r.scanState);
                }
            }

            @Override
            public void onAnnouncementRequested(CharSequence announcement) {
                announceForAccessibility(announcement);
            }
        };
        r.tile.addCallback(callback);
        r.callback = callback;
        final View.OnClickListener click = new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                onTileClick(r.tile);
            }
        };
        final View.OnLongClickListener longClick = new View.OnLongClickListener() {
            @Override
            public boolean onLongClick(View v) {
                r.tile.longClick();
                return true;
            }
        };
        r.tileView.init(click, longClick);
        r.tile.refreshState();
        mRecords.add(r);

        if (mTileLayout != null) {
            mTileLayout.addTile(r);
        }
!!!44520759.java!!!	showEdit(in v : View) : void
        v.post(new Runnable() {
            @Override
            public void run() {
                if (mCustomizePanel != null) {
                    if (!mCustomizePanel.isCustomizing()) {
                        int[] loc = new int[2];
                        v.getLocationInWindow(loc);
                        int x = loc[0];
                        int y = loc[1];
                        mCustomizePanel.show(x, y);
                    }
                }

            }
        });
!!!44520887.java!!!	onTileClick(inout tile : QSTile) : void
        tile.click();
!!!44521015.java!!!	closeDetail() : void
        if (mCustomizePanel != null && mCustomizePanel.isCustomizing()) {
            // Treat this as a detail panel for now, to make things easy.
            mCustomizePanel.hide(mCustomizePanel.getWidth() / 2, mCustomizePanel.getHeight() / 2);
            return;
        }
        showDetail(false, mDetailRecord);
!!!44521143.java!!!	getGridHeight() : int
        return getMeasuredHeight();
!!!44521271.java!!!	handleShowDetail(inout r : QSPanel::Record, inout show : boolean) : void
        if (r instanceof TileRecord) {
            handleShowDetailTile((TileRecord) r, show);
        } else {
            int x = 0;
            int y = 0;
            if (r != null) {
                x = r.x;
                y = r.y;
            }
            handleShowDetailImpl(r, show, x, y);
        }
!!!44521399.java!!!	handleShowDetailTile(inout r : QSPanel::TileRecord, inout show : boolean) : void
        if ((mDetailRecord != null) == show && mDetailRecord == r) return;

        if (show) {
            r.detailAdapter = r.tile.getDetailAdapter();
            if (r.detailAdapter == null) return;
        }
        r.tile.setDetailListening(show);
        int x = r.tileView.getLeft() + r.tileView.getWidth() / 2;
        int y = r.tileView.getTop() + mTileLayout.getOffsetTop(r) + r.tileView.getHeight() / 2
                + getTop();
        handleShowDetailImpl(r, show, x, y);
!!!44521527.java!!!	handleShowDetailImpl(inout r : QSPanel::Record, inout show : boolean, in x : int, in y : int) : void
        setDetailRecord(show ? r : null);
        fireShowingDetail(show ? r.detailAdapter : null, x, y);
!!!44521655.java!!!	setDetailRecord(inout r : QSPanel::Record) : void
        if (r == mDetailRecord) return;
        mDetailRecord = r;
        final boolean scanState = mDetailRecord instanceof TileRecord
                && ((TileRecord) mDetailRecord).scanState;
        fireScanStateChanged(scanState);
!!!44521783.java!!!	setGridContentVisibility(inout visible : boolean) : void
        int newVis = visible ? VISIBLE : INVISIBLE;
        setVisibility(newVis);
        if (mGridContentVisible != visible) {
            MetricsLogger.visibility(mContext, MetricsEvent.QS_PANEL, newVis);
        }
        mGridContentVisible = visible;
!!!44521911.java!!!	logTiles() : void
        for (int i = 0; i < mRecords.size(); i++) {
            TileRecord tileRecord = mRecords.get(i);
            MetricsLogger.visible(mContext, tileRecord.tile.getMetricsCategory());
        }
!!!44522039.java!!!	fireShowingDetail(inout detail : QSTile::DetailAdapter, in x : int, in y : int) : void
        if (mCallback != null) {
            mCallback.onShowingDetail(detail, x, y);
        }
!!!44522167.java!!!	fireToggleStateChanged(inout state : boolean) : void
        if (mCallback != null) {
            mCallback.onToggleStateChanged(state);
        }
!!!44522295.java!!!	fireScanStateChanged(inout state : boolean) : void
        if (mCallback != null) {
            mCallback.onScanStateChanged(state);
        }
!!!44522423.java!!!	clickTile(inout tile : ComponentName) : void
        final String spec = CustomTile.toSpec(tile);
        final int N = mRecords.size();
        for (int i = 0; i < N; i++) {
            if (mRecords.get(i).tile.getTileSpec().equals(spec)) {
                mRecords.get(i).tile.click();
                break;
            }
        }
!!!44522551.java!!!	getTileLayout() : QSPanel::QSTileLayout
        return mTileLayout;
!!!44522679.java!!!	getTileView(inout tile : QSTile) : QSTileBaseView
        for (TileRecord r : mRecords) {
            if (r.tile == tile) {
                return r.tileView;
            }
        }
        return null;
