class AirplaneModeTile
!!!44580407.java!!!	AirplaneModeTile(inout host : QSTile::Host)
        super(host);

        mSetting = new GlobalSetting(mContext, mHandler, Global.AIRPLANE_MODE_ON) {
            @Override
            protected void handleValueChanged(int value) {
                handleRefreshState(value);
            }
        };
!!!44580535.java!!!	newTileState() : QSTile::BooleanState
        return new BooleanState();
!!!44580663.java!!!	handleClick() : void
        MetricsLogger.action(mContext, getMetricsCategory(), !mState.value);
        setEnabled(!mState.value);
!!!44580791.java!!!	setEnabled(inout enabled : boolean) : void
        final ConnectivityManager mgr =
                (ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE);
        mgr.setAirplaneMode(enabled);
!!!44580919.java!!!	getLongClickIntent() : Intent
        return new Intent(Settings.ACTION_AIRPLANE_MODE_SETTINGS);
!!!44581047.java!!!	getTileLabel() : CharSequence
        return mContext.getString(R.string.airplane_mode);
!!!44581175.java!!!	handleUpdateState(inout state : QSTile::BooleanState, inout arg : Object) : void
        final int value = arg instanceof Integer ? (Integer)arg : mSetting.getValue();
        final boolean airplaneMode = value != 0;
        state.value = airplaneMode;
        state.label = mContext.getString(R.string.airplane_mode);
        if (airplaneMode) {
            state.icon = mEnable;
        } else {
            state.icon = mDisable;
        }
        state.contentDescription = state.label;
        state.minimalAccessibilityClassName = state.expandedAccessibilityClassName
                = Switch.class.getName();
!!!44581303.java!!!	getMetricsCategory() : int
        return MetricsEvent.QS_AIRPLANEMODE;
!!!44581431.java!!!	composeChangeAnnouncement() : String
        if (mState.value) {
            return mContext.getString(R.string.accessibility_quick_settings_airplane_changed_on);
        } else {
            return mContext.getString(R.string.accessibility_quick_settings_airplane_changed_off);
        }
!!!44581559.java!!!	setListening(inout listening : boolean) : void
        if (mListening == listening) return;
        mListening = listening;
        if (listening) {
            final IntentFilter filter = new IntentFilter();
            filter.addAction(Intent.ACTION_AIRPLANE_MODE_CHANGED);
            mContext.registerReceiver(mReceiver, filter);
        } else {
            mContext.unregisterReceiver(mReceiver);
        }
        mSetting.setListening(listening);
