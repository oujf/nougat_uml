class CellularTile
!!!44589111.java!!!	CellularTile(inout host : QSTile::Host)
        super(host);
        mController = host.getNetworkController();
        mDataController = mController.getMobileDataController();
        mDetailAdapter = new CellularDetailAdapter();
!!!44589239.java!!!	newTileState() : QSTile::SignalState
        return new SignalState();
!!!44589367.java!!!	getDetailAdapter() : QSTile::DetailAdapter
        return mDetailAdapter;
!!!44589495.java!!!	setListening(inout listening : boolean) : void
        if (listening) {
            mController.addSignalCallback(mSignalCallback);
        } else {
            mController.removeSignalCallback(mSignalCallback);
        }
!!!44589623.java!!!	createTileView(inout context : Context) : QSIconView
        return new SignalTileView(context);
!!!44589751.java!!!	getLongClickIntent() : Intent
        return CELLULAR_SETTINGS;
!!!44589879.java!!!	handleClick() : void
        MetricsLogger.action(mContext, getMetricsCategory());
        if (mDataController.isMobileDataSupported()) {
            showDetail(true);
        } else {
            mHost.startActivityDismissingKeyguard(CELLULAR_SETTINGS);
        }
!!!44590007.java!!!	getTileLabel() : CharSequence
        return mContext.getString(R.string.quick_settings_cellular_detail_title);
!!!44590135.java!!!	handleUpdateState(inout state : QSTile::SignalState, inout arg : Object) : void
        CallbackInfo cb = (CallbackInfo) arg;
        if (cb == null) {
            cb = mSignalCallback.mInfo;
        }

        final Resources r = mContext.getResources();
        final int iconId = cb.noSim ? R.drawable.ic_qs_no_sim
                : !cb.enabled || cb.airplaneModeEnabled ? R.drawable.ic_qs_signal_disabled
                : cb.mobileSignalIconId > 0 ? cb.mobileSignalIconId
                : R.drawable.ic_qs_signal_no_signal;
        state.icon = ResourceIcon.get(iconId);
        state.isOverlayIconWide = cb.isDataTypeIconWide;
        state.autoMirrorDrawable = !cb.noSim;
        state.overlayIconId = cb.enabled && (cb.dataTypeIconId > 0) ? cb.dataTypeIconId : 0;
        state.filter = iconId != R.drawable.ic_qs_no_sim;
        state.activityIn = cb.enabled && cb.activityIn;
        state.activityOut = cb.enabled && cb.activityOut;

        state.label = cb.enabled
                ? removeTrailingPeriod(cb.enabledDesc)
                : r.getString(R.string.quick_settings_rssi_emergency_only);

        final String signalContentDesc = cb.enabled && (cb.mobileSignalIconId > 0)
                ? cb.signalContentDescription
                : r.getString(R.string.accessibility_no_signal);

        if (cb.noSim) {
            state.contentDescription = state.label;
        } else {
            String enabledDesc = cb.enabled ? r.getString(R.string.accessibility_cell_data_on)
                    : r.getString(R.string.accessibility_cell_data_off);

            state.contentDescription = r.getString(
                    R.string.accessibility_quick_settings_mobile,
                    enabledDesc, signalContentDesc,
                    state.label);
            state.minimalContentDescription = r.getString(
                    R.string.accessibility_quick_settings_mobile,
                    r.getString(R.string.accessibility_cell_data), signalContentDesc,
                    state.label);
        }
        state.contentDescription = state.contentDescription + "," + r.getString(
                R.string.accessibility_quick_settings_open_settings, getTileLabel());
        state.minimalAccessibilityClassName = state.expandedAccessibilityClassName
                = Button.class.getName();
        state.value = mDataController.isMobileDataSupported()
                && mDataController.isMobileDataEnabled();
!!!44590263.java!!!	getMetricsCategory() : int
        return MetricsEvent.QS_CELLULAR;
!!!44590391.java!!!	isAvailable() : boolean
        return mController.hasMobileDataFeature();
!!!44590519.java!!!	removeTrailingPeriod(inout string : String) : String
        if (string == null) return null;
        final int length = string.length();
        if (string.endsWith(".")) {
            return string.substring(0, length - 1);
        }
        return string;
