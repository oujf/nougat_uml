class LocationTile
!!!44612279.java!!!	LocationTile(inout host : QSTile::Host)
        super(host);
        mController = host.getLocationController();
        mKeyguard = host.getKeyguardMonitor();
!!!44612407.java!!!	newTileState() : QSTile::BooleanState
        return new BooleanState();
!!!44612535.java!!!	setListening(inout listening : boolean) : void
        if (listening) {
            mController.addSettingsChangedCallback(mCallback);
            mKeyguard.addCallback(mCallback);
        } else {
            mController.removeSettingsChangedCallback(mCallback);
            mKeyguard.removeCallback(mCallback);
        }
!!!44612663.java!!!	getLongClickIntent() : Intent
        return new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
!!!44612791.java!!!	handleClick() : void
        if (mKeyguard.isSecure() && mKeyguard.isShowing()) {
            mHost.startRunnableDismissingKeyguard(new Runnable() {
                @Override
                public void run() {
                    final boolean wasEnabled = (Boolean) mState.value;
                    mHost.openPanels();
                    MetricsLogger.action(mContext, getMetricsCategory(), !wasEnabled);
                    mController.setLocationEnabled(!wasEnabled);
                }
            });
            return;
        }
        final boolean wasEnabled = (Boolean) mState.value;
        MetricsLogger.action(mContext, getMetricsCategory(), !wasEnabled);
        mController.setLocationEnabled(!wasEnabled);
!!!44612919.java!!!	getTileLabel() : CharSequence
        return mContext.getString(R.string.quick_settings_location_label);
!!!44613047.java!!!	handleUpdateState(inout state : QSTile::BooleanState, inout arg : Object) : void
        final boolean locationEnabled =  mController.isLocationEnabled();

        // Work around for bug 15916487: don't show location tile on top of lock screen. After the
        // bug is fixed, this should be reverted to only hiding it on secure lock screens:
        // state.visible = !(mKeyguard.isSecure() && mKeyguard.isShowing());
        state.value = locationEnabled;
        checkIfRestrictionEnforcedByAdminOnly(state, UserManager.DISALLOW_SHARE_LOCATION);
        if (locationEnabled) {
            state.icon = mEnable;
            state.label = mContext.getString(R.string.quick_settings_location_label);
            state.contentDescription = mContext.getString(
                    R.string.accessibility_quick_settings_location_on);
        } else {
            state.icon = mDisable;
            state.label = mContext.getString(R.string.quick_settings_location_label);
            state.contentDescription = mContext.getString(
                    R.string.accessibility_quick_settings_location_off);
        }
        state.minimalAccessibilityClassName = state.expandedAccessibilityClassName
                = Switch.class.getName();
!!!44613175.java!!!	getMetricsCategory() : int
        return MetricsEvent.QS_LOCATION;
!!!44613303.java!!!	composeChangeAnnouncement() : String
        if (mState.value) {
            return mContext.getString(R.string.accessibility_quick_settings_location_changed_on);
        } else {
            return mContext.getString(R.string.accessibility_quick_settings_location_changed_off);
        }
