class WifiDetailAdapter
!!!44626999.java!!!	getTitle() : CharSequence
            return mContext.getString(R.string.quick_settings_wifi_label);
!!!44627127.java!!!	getSettingsIntent() : Intent
            return WIFI_SETTINGS;
!!!44627255.java!!!	getToggleState() : Boolean
            return mState.value;
!!!44627383.java!!!	setToggleState(inout state : boolean) : void
            if (DEBUG) Log.d(TAG, "setToggleState " + state);
            MetricsLogger.action(mContext, MetricsEvent.QS_WIFI_TOGGLE, state);
            mController.setWifiEnabled(state);
            showDetail(false);
!!!44627511.java!!!	getMetricsCategory() : int
            return MetricsEvent.QS_WIFI_DETAILS;
!!!44627639.java!!!	createDetailView(inout context : Context, inout convertView : View, inout parent : ViewGroup) : View
            if (DEBUG) Log.d(TAG, "createDetailView convertView=" + (convertView != null));
            mAccessPoints = null;
            mWifiController.scanForAccessPoints();
            fireScanStateChanged(true);
            mItems = QSDetailItems.convertOrInflate(context, convertView, parent);
            mItems.setTagSuffix("Wifi");
            mItems.setCallback(this);
            mItems.setEmptyState(R.drawable.ic_qs_wifi_detail_empty,
                    R.string.quick_settings_wifi_detail_empty_text);
            updateItems();
            setItemsVisible(mState.value);
            return mItems;
!!!44627767.java!!!	onAccessPointsChanged(in accessPoints : List<AccessPoint>) : void
            mAccessPoints = accessPoints.toArray(new AccessPoint[accessPoints.size()]);
            updateItems();
            if (accessPoints != null && accessPoints.size() > 0) {
                fireScanStateChanged(false);
            }
!!!44627895.java!!!	onSettingsActivityTriggered(inout settingsIntent : Intent) : void
            mHost.startActivityDismissingKeyguard(settingsIntent);
!!!44628023.java!!!	onDetailItemClick(inout item : QSDetailItems::Item) : void
            if (item == null || item.tag == null) return;
            final AccessPoint ap = (AccessPoint) item.tag;
            if (!ap.isActive()) {
                if (mWifiController.connect(ap)) {
                    mHost.collapsePanels();
                }
            }
            showDetail(false);
!!!44628151.java!!!	onDetailItemDisconnect(inout item : QSDetailItems::Item) : void
            // noop
!!!44628279.java!!!	setItemsVisible(inout visible : boolean) : void
            if (mItems == null) return;
            mItems.setItemsVisible(visible);
!!!44628407.java!!!	updateItems() : void
            if (mItems == null) return;
            Item[] items = null;
            if (mAccessPoints != null) {
                items = new Item[mAccessPoints.length];
                for (int i = 0; i < mAccessPoints.length; i++) {
                    final AccessPoint ap = mAccessPoints[i];
                    final Item item = new Item();
                    item.tag = ap;
                    item.icon = mWifiController.getIcon(ap);
                    item.line1 = ap.getSsid();
                    item.line2 = ap.isActive() ? ap.getSummary() : null;
                    item.overlay = ap.getSecurity() != AccessPoint.SECURITY_NONE
                            ? mContext.getDrawable(R.drawable.qs_ic_wifi_lock)
                            : null;
                    items[i] = item;
                }
            }
            mItems.setItems(items);
