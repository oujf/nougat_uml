class DockState
!!!44689463.java!!!	acceptsDrop(in x : int, in y : int, in width : int, in height : int, inout isCurrentTarget : boolean) : boolean
            return isCurrentTarget
                    ? areaContainsPoint(expandedTouchDockArea, width, height, x, y)
                    : areaContainsPoint(touchArea, width, height, x, y);
!!!44690103.java!!!	DockState(in dockSide : int, in createMode : int, in dockAreaAlpha : int, in hintTextAlpha : int, in hintTextOrientation : int, inout touchArea : RectF, inout dockArea : RectF, inout expandedTouchDockArea : RectF)
            this.dockSide = dockSide;
            this.createMode = createMode;
            this.viewState = new ViewState(dockAreaAlpha, hintTextAlpha, hintTextOrientation,
                    R.string.recents_drag_hint_message);
            this.dockArea = dockArea;
            this.touchArea = touchArea;
            this.expandedTouchDockArea = expandedTouchDockArea;
!!!44690231.java!!!	update(inout context : Context) : void
            viewState.update(context);
!!!44690359.java!!!	areaContainsPoint(inout area : RectF, in width : int, in height : int, in x : float, in y : float) : boolean
            int left = (int) (area.left * width);
            int top = (int) (area.top * height);
            int right = (int) (area.right * width);
            int bottom = (int) (area.bottom * height);
            return x >= left && y >= top && x <= right && y <= bottom;
!!!44690487.java!!!	getPreDockedBounds(in width : int, in height : int) : Rect
            return new Rect((int) (dockArea.left * width), (int) (dockArea.top * height),
                    (int) (dockArea.right * width), (int) (dockArea.bottom * height));
!!!44690615.java!!!	getDockedBounds(in width : int, in height : int, in dividerSize : int, inout insets : Rect, inout res : Resources) : Rect
            // Calculate the docked task bounds
            boolean isHorizontalDivision =
                    res.getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT;
            int position = DockedDividerUtils.calculateMiddlePosition(isHorizontalDivision,
                    insets, width, height, dividerSize);
            Rect newWindowBounds = new Rect();
            DockedDividerUtils.calculateBoundsForPosition(position, dockSide, newWindowBounds,
                    width, height, dividerSize);
            return newWindowBounds;
!!!44690743.java!!!	getDockedTaskStackBounds(inout displayRect : Rect, in width : int, in height : int, in dividerSize : int, inout insets : Rect, inout layoutAlgorithm : TaskStackLayoutAlgorithm, inout res : Resources, inout windowRectOut : Rect) : Rect
            // Calculate the inverse docked task bounds
            boolean isHorizontalDivision =
                    res.getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT;
            int position = DockedDividerUtils.calculateMiddlePosition(isHorizontalDivision,
                    insets, width, height, dividerSize);
            DockedDividerUtils.calculateBoundsForPosition(position,
                    DockedDividerUtils.invertDockSide(dockSide), windowRectOut, width, height,
                    dividerSize);

            // Calculate the task stack bounds from the new window bounds
            Rect taskStackBounds = new Rect();
            // If the task stack bounds is specifically under the dock area, then ignore the top
            // inset
            int top = dockArea.bottom < 1f
                    ? 0
                    : insets.top;
            layoutAlgorithm.getTaskStackBounds(displayRect, windowRectOut, top, insets.right,
                    taskStackBounds);
            return taskStackBounds;
