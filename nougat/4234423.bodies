class PipRecentsOverlayManager
!!!45309879.java!!!	PipRecentsOverlayManager(inout context : Context)
        mWindowManager = (WindowManager) context.getSystemService(WindowManager.class);
        mSystemServicesProxy = SystemServicesProxy.getInstance(context);
        initViews(context);
!!!45310007.java!!!	initViews(inout context : Context) : void
        LayoutInflater inflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        mOverlayView = inflater.inflate(R.layout.tv_pip_recents_overlay, null);
        mPipControlsView = (PipRecentsControlsView) mOverlayView.findViewById(R.id.pip_controls);
        mRecentsView = mOverlayView.findViewById(R.id.recents);
        mRecentsView.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (hasFocus) {
                    clearFocus();
                }
            }
        });

        mOverlayView.measure(UNSPECIFIED, UNSPECIFIED);
        mPipRecentsControlsViewLayoutParams = new WindowManager.LayoutParams(
                mOverlayView.getMeasuredWidth(), mOverlayView.getMeasuredHeight(),
                LayoutParams.TYPE_SYSTEM_DIALOG,
                LayoutParams.FLAG_NOT_FOCUSABLE | LayoutParams.FLAG_NOT_TOUCHABLE,
                PixelFormat.TRANSLUCENT);
        mPipRecentsControlsViewLayoutParams.gravity = TOP | CENTER_HORIZONTAL;
        mPipRecentsControlsViewFocusedLayoutParams = new WindowManager.LayoutParams(
                mOverlayView.getMeasuredWidth(), mOverlayView.getMeasuredHeight(),
                LayoutParams.TYPE_SYSTEM_DIALOG,
                0,
                PixelFormat.TRANSLUCENT);
        mPipRecentsControlsViewFocusedLayoutParams.gravity = TOP | CENTER_HORIZONTAL;
!!!45310135.java!!!	addPipRecentsOverlayView() : void
        if (mIsPipRecentsOverlayShown) {
            return;
        }
        mTalkBackEnabled = mSystemServicesProxy.isTouchExplorationEnabled();
        mRecentsView.setVisibility(mTalkBackEnabled ? View.VISIBLE : View.GONE);
        mIsPipRecentsOverlayShown = true;
        mIsPipFocusedInRecent = true;
        mWindowManager.addView(mOverlayView, mPipRecentsControlsViewFocusedLayoutParams);
!!!45310263.java!!!	removePipRecentsOverlayView() : void
        if (!mIsPipRecentsOverlayShown) {
            return;
        }
        mWindowManager.removeView(mOverlayView);
        // Resets the controls view when its removed.
        // If not, changing focus in reset will be show animation when Recents is resumed.
        mPipControlsView.reset();
        mIsPipRecentsOverlayShown = false;
!!!45310391.java!!!	requestFocus(inout hasFocusableInRecents : boolean) : void
        mHasFocusableInRecents = hasFocusableInRecents;
        if (!mIsPipRecentsOverlayShown || !mIsRecentsShown || mIsPipFocusedInRecent
                || !mPipManager.isPipShown()) {
            return;
        }
        mIsPipFocusedInRecent = true;
        mPipControlsView.startFocusGainAnimation();
        mWindowManager.updateViewLayout(mOverlayView, mPipRecentsControlsViewFocusedLayoutParams);
        mPipManager.resizePinnedStack(STATE_PIP_RECENTS_FOCUSED);
        if (mTalkBackEnabled) {
            mPipControlsView.requestFocus();
            mPipControlsView.sendAccessibilityEvent(
                    AccessibilityEvent.TYPE_VIEW_FOCUSED);
        }
!!!45310519.java!!!	clearFocus() : void
        if (!mIsPipRecentsOverlayShown || !mIsRecentsShown || !mIsPipFocusedInRecent
                || !mPipManager.isPipShown() || !mHasFocusableInRecents) {
            return;
        }
        mIsPipFocusedInRecent = false;
        mPipControlsView.startFocusLossAnimation();
        mWindowManager.updateViewLayout(mOverlayView, mPipRecentsControlsViewLayoutParams);
        mPipManager.resizePinnedStack(STATE_PIP_RECENTS);
        if (mCallback != null) {
            mCallback.onRecentsFocused();
        }
!!!45310647.java!!!	setCallback(inout listener : PipRecentsOverlayManager::Callback) : void
        mCallback = listener;
        mPipControlsView.setListener(mCallback != null ? mPipControlsViewListener : null);
!!!45310775.java!!!	onRecentsResumed() : void
        if (!mPipManager.isPipShown()) {
            return;
        }
        mIsRecentsShown = true;
        mIsPipFocusedInRecent = true;
        mPipManager.resizePinnedStack(STATE_PIP_RECENTS_FOCUSED);
        // Overlay view will be added after the resize animation ends, if any.
!!!45310903.java!!!	onRecentsPaused() : void
        mIsRecentsShown = false;
        mIsPipFocusedInRecent = false;
        removePipRecentsOverlayView();

        if (mPipManager.isPipShown()) {
            mPipManager.resizePinnedStack(STATE_PIP_OVERLAY);
        }
!!!45311031.java!!!	isRecentsShown() : boolean
        return mIsRecentsShown;
!!!45311159.java!!!	onConfigurationChanged(inout context : Context) : void
        if (mIsRecentsShown) {
            Log.w(TAG, "Configuration is changed while Recents is shown");
        }
        initViews(context);
