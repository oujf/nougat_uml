class AnimateableViewBounds
!!!44710455.java!!!	AnimateableViewBounds(inout source : View, in cornerRadius : int)
        mSourceView = source;
        mCornerRadius = cornerRadius;
!!!44710583.java!!!	reset() : void
        mClipRect.set(-1, -1, -1, -1);
        updateClipBounds();
!!!44710711.java!!!	getOutline(inout view : View, inout outline : Outline) : void
        outline.setAlpha(Utilities.mapRange(mAlpha, MIN_ALPHA, MAX_ALPHA));
        if (mCornerRadius > 0) {
            outline.setRoundRect(mClipRect.left, mClipRect.top,
                    mSourceView.getWidth() - mClipRect.right,
                    mSourceView.getHeight() - mClipRect.bottom,
                    mCornerRadius);
        } else {
            outline.setRect(mClipRect.left, mClipRect.top,
                    mSourceView.getWidth() - mClipRect.right,
                    mSourceView.getHeight() - mClipRect.bottom);
        }
!!!44710839.java!!!	setAlpha(in alpha : float) : void
        if (Float.compare(alpha, mAlpha) != 0) {
            mAlpha = alpha;
            // TODO, If both clip and alpha change in the same frame, only invalidate once
            mSourceView.invalidateOutline();
        }
!!!44710967.java!!!	getAlpha() : float
        return mAlpha;
!!!44711095.java!!!	setClipTop(in top : int) : void
        mClipRect.top = top;
        updateClipBounds();
!!!44711223.java!!!	getClipTop() : int
        return mClipRect.top;
!!!44711351.java!!!	setClipBottom(in bottom : int) : void
        mClipRect.bottom = bottom;
        updateClipBounds();
!!!44711479.java!!!	getClipBottom() : int
        return mClipRect.bottom;
!!!44711607.java!!!	updateClipBounds() : void
        mClipBounds.set(Math.max(0, mClipRect.left), Math.max(0, mClipRect.top),
                mSourceView.getWidth() - Math.max(0, mClipRect.right),
                mSourceView.getHeight() - Math.max(0, mClipRect.bottom));
        if (!mLastClipBounds.equals(mClipBounds)) {
            mSourceView.setClipBounds(mClipBounds);
            // TODO, If both clip and alpha change in the same frame, only invalidate once
            mSourceView.invalidateOutline();
            mLastClipBounds.set(mClipBounds);
        }
