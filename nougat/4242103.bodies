class ForcedResizableInfoActivityController
!!!44795063.java!!!	ForcedResizableInfoActivityController(inout context : Context)
        mContext = context;
        EventBus.getDefault().register(this);
        SystemServicesProxy.getInstance(context).registerTaskStackListener(
                new TaskStackListener() {
                    @Override
                    public void onActivityForcedResizable(String packageName, int taskId) {
                        activityForcedResizable(packageName, taskId);
                    }

                    @Override
                    public void onActivityDismissingDockedStack() {
                        activityDismissingDockedStack();
                    }
                });
!!!44795191.java!!!	notifyDockedStackExistsChanged(inout exists : boolean) : void
        if (!exists) {
            mPackagesShownInSession.clear();
        }
!!!44795319.java!!!	onBusEvent(inout event : AppTransitionFinishedEvent) : void
        if (!mDividerDraging) {
            showPending();
        }
!!!44795447.java!!!	onBusEvent(inout event : StartedDragingEvent) : void
        mDividerDraging = true;
        mHandler.removeCallbacks(mTimeoutRunnable);
!!!44795575.java!!!	onBusEvent(inout event : StoppedDragingEvent) : void
        mDividerDraging = false;
        showPending();
!!!44795703.java!!!	activityForcedResizable(inout packageName : String, in taskId : int) : void
        if (debounce(packageName)) {
            return;
        }
        mPendingTaskIds.add(taskId);
        postTimeout();
!!!44795831.java!!!	activityDismissingDockedStack() : void
        Toast toast = Toast.makeText(mContext, R.string.dock_non_resizeble_failed_to_dock_text,
                Toast.LENGTH_SHORT);
        toast.show();
!!!44795959.java!!!	showPending() : void
        mHandler.removeCallbacks(mTimeoutRunnable);
        for (int i = mPendingTaskIds.size() - 1; i >= 0; i--) {
            Intent intent = new Intent(mContext, ForcedResizableInfoActivity.class);
            ActivityOptions options = ActivityOptions.makeBasic();
            options.setLaunchTaskId(mPendingTaskIds.valueAt(i));
            options.setTaskOverlay(true);
            mContext.startActivity(intent, options.toBundle());
        }
        mPendingTaskIds.clear();
!!!44796087.java!!!	postTimeout() : void
        mHandler.removeCallbacks(mTimeoutRunnable);
        mHandler.postDelayed(mTimeoutRunnable, TIMEOUT);
!!!44796215.java!!!	debounce(inout packageName : String) : boolean
        if (packageName == null) {
            return false;
        }

        // We launch ForcedResizableInfoActivity into a task that was forced resizable, so that
        // triggers another notification. So ignore our own activity.
        if (SELF_PACKAGE_NAME.equals(packageName)) {
            return true;
        }
        boolean debounce = mPackagesShownInSession.contains(packageName);
        mPackagesShownInSession.add(packageName);
        return debounce;
