class BluetoothControllerImpl
!!!45185847.java!!!	BluetoothControllerImpl(inout context : Context, inout bgLooper : Looper)
        mLocalBluetoothManager = LocalBluetoothManager.getInstance(context, null);
        if (mLocalBluetoothManager != null) {
            mLocalBluetoothManager.getEventManager().setReceiverHandler(new Handler(bgLooper));
            mLocalBluetoothManager.getEventManager().registerCallback(this);
            onBluetoothStateChanged(
                    mLocalBluetoothManager.getBluetoothAdapter().getBluetoothState());
        }
        mUserManager = (UserManager) context.getSystemService(Context.USER_SERVICE);
        mCurrentUser = ActivityManager.getCurrentUser();
!!!45185975.java!!!	canConfigBluetooth() : boolean
        return !mUserManager.hasUserRestriction(UserManager.DISALLOW_CONFIG_BLUETOOTH,
                UserHandle.of(mCurrentUser));
!!!45186103.java!!!	dump(inout fd : FileDescriptor, inout pw : PrintWriter, inout args : String) : void
        pw.println("BluetoothController state:");
        pw.print("  mLocalBluetoothManager="); pw.println(mLocalBluetoothManager);
        if (mLocalBluetoothManager == null) {
            return;
        }
        pw.print("  mEnabled="); pw.println(mEnabled);
        pw.print("  mConnectionState="); pw.println(stateToString(mConnectionState));
        pw.print("  mLastDevice="); pw.println(mLastDevice);
        pw.print("  mCallbacks.size="); pw.println(mHandler.mCallbacks.size());
        pw.println("  Bluetooth Devices:");
        for (CachedBluetoothDevice device :
                mLocalBluetoothManager.getCachedDeviceManager().getCachedDevicesCopy()) {
            pw.println("    " + getDeviceString(device));
        }
!!!45186231.java!!!	stateToString(in state : int) : String
        switch (state) {
            case BluetoothAdapter.STATE_CONNECTED:
                return "CONNECTED";
            case BluetoothAdapter.STATE_CONNECTING:
                return "CONNECTING";
            case BluetoothAdapter.STATE_DISCONNECTED:
                return "DISCONNECTED";
            case BluetoothAdapter.STATE_DISCONNECTING:
                return "DISCONNECTING";
        }
        return "UNKNOWN(" + state + ")";
!!!45186359.java!!!	getDeviceString(inout device : CachedBluetoothDevice) : String
        return device.getName() + " " + device.getBondState() + " " + device.isConnected();
!!!45186487.java!!!	addStateChangedCallback(inout cb : BluetoothController::Callback) : void
        mHandler.obtainMessage(H.MSG_ADD_CALLBACK, cb).sendToTarget();
        mHandler.sendEmptyMessage(H.MSG_STATE_CHANGED);
!!!45186615.java!!!	removeStateChangedCallback(inout cb : BluetoothController::Callback) : void
        mHandler.obtainMessage(H.MSG_REMOVE_CALLBACK, cb).sendToTarget();
!!!45186743.java!!!	isBluetoothEnabled() : boolean
        return mEnabled;
!!!45186871.java!!!	isBluetoothConnected() : boolean
        return mConnectionState == BluetoothAdapter.STATE_CONNECTED;
!!!45186999.java!!!	isBluetoothConnecting() : boolean
        return mConnectionState == BluetoothAdapter.STATE_CONNECTING;
!!!45187127.java!!!	setBluetoothEnabled(inout enabled : boolean) : void
        if (mLocalBluetoothManager != null) {
            mLocalBluetoothManager.getBluetoothAdapter().setBluetoothEnabled(enabled);
        }
!!!45187255.java!!!	isBluetoothSupported() : boolean
        return mLocalBluetoothManager != null;
!!!45187383.java!!!	connect(in device : CachedBluetoothDevice) : void
        if (mLocalBluetoothManager == null || device == null) return;
        device.connect(true);
!!!45187511.java!!!	disconnect(inout device : CachedBluetoothDevice) : void
        if (mLocalBluetoothManager == null || device == null) return;
        device.disconnect();
!!!45187639.java!!!	getLastDeviceName() : String
        return mLastDevice != null ? mLastDevice.getName() : null;
!!!45187767.java!!!	getDevices() : CachedBluetoothDevice
        return mLocalBluetoothManager != null
                ? mLocalBluetoothManager.getCachedDeviceManager().getCachedDevicesCopy()
                : null;
!!!45187895.java!!!	updateConnected() : void
        // Make sure our connection state is up to date.
        int state = mLocalBluetoothManager.getBluetoothAdapter().getConnectionState();
        if (state != mConnectionState) {
            mConnectionState = state;
            mHandler.sendEmptyMessage(H.MSG_STATE_CHANGED);
        }
        if (mLastDevice != null && mLastDevice.isConnected()) {
            // Our current device is still valid.
            return;
        }
        mLastDevice = null;
        for (CachedBluetoothDevice device : getDevices()) {
            if (device.isConnected()) {
                mLastDevice = device;
            }
        }
        if (mLastDevice == null && mConnectionState == BluetoothAdapter.STATE_CONNECTED) {
            // If somehow we think we are connected, but have no connected devices, we aren't
            // connected.
            mConnectionState = BluetoothAdapter.STATE_DISCONNECTED;
            mHandler.sendEmptyMessage(H.MSG_STATE_CHANGED);
        }
!!!45188023.java!!!	onBluetoothStateChanged(in bluetoothState : int) : void
        mEnabled = bluetoothState == BluetoothAdapter.STATE_ON;
        mHandler.sendEmptyMessage(H.MSG_STATE_CHANGED);
!!!45188151.java!!!	onScanningStateChanged(inout started : boolean) : void
        // Don't care.
!!!45188279.java!!!	onDeviceAdded(inout cachedDevice : CachedBluetoothDevice) : void
        cachedDevice.registerCallback(this);
        updateConnected();
        mHandler.sendEmptyMessage(H.MSG_PAIRED_DEVICES_CHANGED);
!!!45188407.java!!!	onDeviceDeleted(inout cachedDevice : CachedBluetoothDevice) : void
        updateConnected();
        mHandler.sendEmptyMessage(H.MSG_PAIRED_DEVICES_CHANGED);
!!!45188535.java!!!	onDeviceBondStateChanged(inout cachedDevice : CachedBluetoothDevice, in bondState : int) : void
        updateConnected();
        mHandler.sendEmptyMessage(H.MSG_PAIRED_DEVICES_CHANGED);
!!!45188663.java!!!	onDeviceAttributesChanged() : void
        updateConnected();
        mHandler.sendEmptyMessage(H.MSG_PAIRED_DEVICES_CHANGED);
!!!45188791.java!!!	onConnectionStateChanged(inout cachedDevice : CachedBluetoothDevice, in state : int) : void
        mLastDevice = cachedDevice;
        updateConnected();
        mConnectionState = state;
        mHandler.sendEmptyMessage(H.MSG_STATE_CHANGED);
