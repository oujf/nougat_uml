class NotificationCustomViewWrapper
!!!44981303.java!!!	NotificationCustomViewWrapper(inout view : View, inout row : ExpandableNotificationRow)
        super(view, row);
        mInvertHelper = new ViewInvertHelper(view, NotificationPanelView.DOZE_ANIMATION_DURATION);
!!!44981431.java!!!	setDark(inout dark : boolean, inout fade : boolean, in delay : long) : void
        if (dark == mDark && mDarkInitialized) {
            return;
        }
        super.setDark(dark, fade, delay);
        if (!mShowingLegacyBackground && mShouldInvertDark) {
            if (fade) {
                mInvertHelper.fade(dark, delay);
            } else {
                mInvertHelper.update(dark);
            }
        } else {
            mView.setLayerType(dark ? View.LAYER_TYPE_HARDWARE : View.LAYER_TYPE_NONE, null);
            if (fade) {
                fadeGrayscale(dark, delay);
            } else {
                updateGrayscale(dark);
            }
        }
!!!44981559.java!!!	fadeGrayscale(in dark : boolean, in delay : long) : void
        startIntensityAnimation(new ValueAnimator.AnimatorUpdateListener() {
            @Override
            public void onAnimationUpdate(ValueAnimator animation) {
                updateGrayscaleMatrix((float) animation.getAnimatedValue());
                mGreyPaint.setColorFilter(new ColorMatrixColorFilter(mGrayscaleColorMatrix));
                mView.setLayerPaint(mGreyPaint);
            }
        }, dark, delay, new AnimatorListenerAdapter() {
            @Override
            public void onAnimationEnd(Animator animation) {
                if (!dark) {
                    mView.setLayerType(View.LAYER_TYPE_NONE, null);
                }
            }
        });
!!!44981687.java!!!	updateGrayscale(inout dark : boolean) : void
        if (dark) {
            updateGrayscaleMatrix(1f);
            mGreyPaint.setColorFilter(
                    new ColorMatrixColorFilter(mGrayscaleColorMatrix));
            mView.setLayerPaint(mGreyPaint);
        }
!!!44981815.java!!!	setVisible(inout visible : boolean) : void
        super.setVisible(visible);
        mView.setAlpha(visible ? 1.0f : 0.0f);
!!!44981943.java!!!	notifyContentUpdated(inout notification : StatusBarNotification) : void
        super.notifyContentUpdated(notification);
        Drawable background = mView.getBackground();
        mBackgroundColor = 0;
        if (background instanceof ColorDrawable) {
            mBackgroundColor = ((ColorDrawable) background).getColor();
            mView.setBackground(null);
            mView.setTag(CUSTOM_BACKGROUND_TAG, mBackgroundColor);
        } else if (mView.getTag(CUSTOM_BACKGROUND_TAG) != null) {
            mBackgroundColor = (int) mView.getTag(CUSTOM_BACKGROUND_TAG);
        }
        mShouldInvertDark = mBackgroundColor == 0 || isColorLight(mBackgroundColor);
!!!44982071.java!!!	isColorLight(in backgroundColor : int) : boolean
        return Color.alpha(backgroundColor) == 0
                || ColorUtils.calculateLuminance(backgroundColor) > 0.5;
!!!44982199.java!!!	getCustomBackgroundColor() : int
        // Parent notifications should always use the normal background color
        return mRow.isSummaryWithChildren() ? 0 : mBackgroundColor;
!!!44982327.java!!!	setShowingLegacyBackground(inout showing : boolean) : void
        super.setShowingLegacyBackground(showing);
        mShowingLegacyBackground = showing;
