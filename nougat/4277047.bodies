class NavBarAdapter
!!!45284279.java!!!	NavBarAdapter(inout context : Context)
            TypedArray attrs = context.getTheme().obtainStyledAttributes(null,
                    android.R.styleable.Preference, android.R.attr.preferenceStyle, 0);
            mButtonLayout = attrs.getResourceId(android.R.styleable.Preference_layout, 0);
            attrs = context.getTheme().obtainStyledAttributes(null,
                    android.R.styleable.Preference, android.R.attr.preferenceCategoryStyle, 0);
            mCategoryLayout = attrs.getResourceId(android.R.styleable.Preference_layout, 0);
!!!45284407.java!!!	setTouchHelper(inout itemTouchHelper : ItemTouchHelper) : void
            mTouchHelper = itemTouchHelper;
!!!45284535.java!!!	clear() : void
            mButtons.clear();
            mLabels.clear();
            notifyDataSetChanged();
!!!45284663.java!!!	addButton(inout button : String, inout label : CharSequence) : void
            mButtons.add(button);
            mLabels.add(label);
            notifyItemInserted(mLabels.size() - 1);
            notifyChanged();
!!!45284791.java!!!	hasHomeButton() : boolean
            final int N = mButtons.size();
            for (int i = 0; i < N; i++) {
                if (mButtons.get(i).startsWith(HOME)) {
                    return true;
                }
            }
            return false;
!!!45284919.java!!!	getNavString() : String
            StringBuilder builder = new StringBuilder();
            for (int i = 1; i < mButtons.size() - 1; i++) {
                String button = mButtons.get(i);
                if (button.equals(CENTER) || button.equals(END)) {
                    if (builder.length() == 0 || builder.toString().endsWith(GRAVITY_SEPARATOR)) {
                        // No start or center buttons, fill with a space.
                        builder.append(NAVSPACE);
                    }
                    builder.append(GRAVITY_SEPARATOR);
                    continue;
                } else if (builder.length() != 0 && !builder.toString().endsWith(
                        GRAVITY_SEPARATOR)) {
                    builder.append(BUTTON_SEPARATOR);
                }
                builder.append(button);
            }
            if (builder.toString().endsWith(GRAVITY_SEPARATOR)) {
                // No end buttons, fill with space.
                builder.append(NAVSPACE);
            }
            return builder.toString();
!!!45285047.java!!!	getItemViewType(in position : int) : int
            String button = mButtons.get(position);
            if (button.equals(START) || button.equals(CENTER) || button.equals(END)) {
                return CATEGORY_ID;
            }
            if (button.equals(ADD)) {
                return ADD_ID;
            }
            return BUTTON_ID;
!!!45285175.java!!!	onCreateViewHolder(inout parent : ViewGroup, in viewType : int) : NavBarTuner::Holder
            final Context context = parent.getContext();
            final LayoutInflater inflater = LayoutInflater.from(context);
            final View view = inflater.inflate(getLayoutId(viewType), parent, false);
            if (viewType == BUTTON_ID) {
                inflater.inflate(R.layout.nav_control_widget,
                        (ViewGroup) view.findViewById(android.R.id.widget_frame));
            }
            return new Holder(view);
!!!45285303.java!!!	getLayoutId(in viewType : int) : int
            if (viewType == CATEGORY_ID) {
                return mCategoryLayout;
            }
            return mButtonLayout;
!!!45285431.java!!!	onBindViewHolder(inout holder : NavBarTuner::Holder, in position : int) : void
            holder.title.setText(mLabels.get(position));
            if (holder.getItemViewType() == BUTTON_ID) {
                bindButton(holder, position);
            } else if (holder.getItemViewType() == ADD_ID) {
                bindAdd(holder);
            }
!!!45285559.java!!!	bindAdd(inout holder : NavBarTuner::Holder) : void
            TypedValue value = new TypedValue();
            final Context context = holder.itemView.getContext();
            context.getTheme().resolveAttribute(android.R.attr.colorAccent, value, true);
            final ImageView icon = (ImageView) holder.itemView.findViewById(android.R.id.icon);
            icon.setImageResource(R.drawable.ic_add);
            icon.setImageTintList(ColorStateList.valueOf(context.getColor(value.resourceId)));
            holder.itemView.findViewById(android.R.id.summary).setVisibility(View.GONE);
            holder.itemView.setClickable(true);
            holder.itemView.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    showAddDialog(v.getContext());
                }
            });
!!!45285687.java!!!	bindButton(in holder : NavBarTuner::Holder, in position : int) : void
            holder.itemView.findViewById(android.R.id.icon_frame).setVisibility(View.GONE);
            holder.itemView.findViewById(android.R.id.summary).setVisibility(View.GONE);
            bindClick(holder.itemView.findViewById(R.id.close), holder);
            bindClick(holder.itemView.findViewById(R.id.width), holder);
            holder.itemView.findViewById(R.id.drag).setOnTouchListener(new View.OnTouchListener() {
                @Override
                public boolean onTouch(View v, MotionEvent event) {
                    mTouchHelper.startDrag(holder);
                    return true;
                }
            });
!!!45285815.java!!!	showAddDialog(in context : Context) : void
            final String[] options = new String[] {
                    BACK, HOME, RECENT, MENU_IME, NAVSPACE, CLIPBOARD, KEY,
            };
            final CharSequence[] labels = new CharSequence[options.length];
            for (int i = 0; i < options.length; i++) {
                labels[i] = getLabel(options[i], context);
            }
            new AlertDialog.Builder(context)
                    .setTitle(R.string.select_button)
                    .setItems(labels, new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            if (KEY.equals(options[which])) {
                                showKeyDialogs(context);
                            } else {
                                int index = mButtons.size() - 1;
                                showAddedMessage(context, options[which]);
                                mButtons.add(index, options[which]);
                                mLabels.add(index, labels[which]);

                                notifyItemInserted(index);
                                notifyChanged();
                            }
                        }
                    }).setNegativeButton(android.R.string.cancel, null)
                    .show();
!!!45285943.java!!!	onImageSelected(inout uri : Uri) : void
            int index = mButtons.size() - 1;
            mButtons.add(index, KEY + KEY_CODE_START + mKeycode + KEY_IMAGE_DELIM + uri.toString()
                    + KEY_CODE_END);
            mLabels.add(index, getLabel(KEY, getContext()));

            notifyItemInserted(index);
            notifyChanged();
!!!45286071.java!!!	showKeyDialogs(in context : Context) : void
            final KeycodeSelectionHelper.OnSelectionComplete listener =
                    new KeycodeSelectionHelper.OnSelectionComplete() {
                        @Override
                        public void onSelectionComplete(int code) {
                            mKeycode = code;
                            selectImage();
                        }
                    };
            new AlertDialog.Builder(context)
                    .setTitle(R.string.keycode)
                    .setMessage(R.string.keycode_description)
                    .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            KeycodeSelectionHelper.showKeycodeSelect(context, listener);
                        }
                    }).show();
!!!45286199.java!!!	showAddedMessage(inout context : Context, inout button : String) : void
            if (CLIPBOARD.equals(button)) {
                new AlertDialog.Builder(context)
                        .setTitle(R.string.clipboard)
                        .setMessage(R.string.clipboard_description)
                        .setPositiveButton(android.R.string.ok, null)
                        .show();
            }
!!!45286327.java!!!	bindClick(inout view : View, inout holder : NavBarTuner::Holder) : void
            view.setOnClickListener(this);
            view.setTag(holder);
!!!45286455.java!!!	onClick(inout v : View) : void
            Holder holder = (Holder) v.getTag();
            if (v.getId() == R.id.width) {
                showWidthDialog(holder, v.getContext());
            } else if (v.getId() == R.id.close) {
                int position = holder.getAdapterPosition();
                mButtons.remove(position);
                mLabels.remove(position);
                notifyItemRemoved(position);
                notifyChanged();
            }
!!!45286583.java!!!	showWidthDialog(in holder : NavBarTuner::Holder, inout context : Context) : void
            final String buttonSpec = mButtons.get(holder.getAdapterPosition());
            float amount = extractSize(buttonSpec);
            final AlertDialog dialog = new AlertDialog.Builder(context)
                    .setTitle(R.string.adjust_button_width)
                    .setView(R.layout.nav_width_view)
                    .setNegativeButton(android.R.string.cancel, null).create();
            dialog.setButton(DialogInterface.BUTTON_POSITIVE,
                    context.getString(android.R.string.ok),
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface d, int which) {
                            final String button = extractButton(buttonSpec);
                            SeekBar seekBar = (SeekBar) dialog.findViewById(R.id.seekbar);
                            if (seekBar.getProgress() == 75) {
                                mButtons.set(holder.getAdapterPosition(), button);
                            } else {
                                float amount = (seekBar.getProgress() + 25) / 100f;
                                mButtons.set(holder.getAdapterPosition(), button
                                        + SIZE_MOD_START + amount + SIZE_MOD_END);
                            }
                            notifyChanged();
                        }
                    });
            dialog.show();
            SeekBar seekBar = (SeekBar) dialog.findViewById(R.id.seekbar);
            // Range is .25 - 1.75.
            seekBar.setMax(150);
            seekBar.setProgress((int) ((amount - .25f) * 100));
!!!45286711.java!!!	getItemCount() : int
            return mButtons.size();
