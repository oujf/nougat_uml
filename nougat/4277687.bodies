class NightModeTile
!!!45288375.java!!!	NightModeTile(inout host : QSTile::Host)
        super(host);
        mNightModeController = host.getNightModeController();
!!!45288503.java!!!	isAvailable() : boolean
        return Prefs.getBoolean(mContext, Key.QS_NIGHT_ADDED, false)
                && TunerService.isTunerEnabled(mContext);
!!!45288631.java!!!	setListening(inout listening : boolean) : void
        if (listening) {
            mNightModeController.addListener(this);
            refreshState();
        } else {
            mNightModeController.removeListener(this);
        }
!!!45288759.java!!!	newTileState() : QSTile::State
        return new State();
!!!45288887.java!!!	getLongClickIntent() : Intent
        return new Intent(mContext, TunerActivity.class)
                .putExtra(NightModeFragment.EXTRA_SHOW_NIGHT_MODE, true);
!!!45289015.java!!!	handleClick() : void
        mNightModeController.setNightMode(!mNightModeController.isEnabled());
        refreshState();
!!!45289143.java!!!	getTileLabel() : CharSequence
        return mContext.getString(R.string.night_mode);
!!!45289271.java!!!	handleUpdateState(inout state : QSTile::State, inout arg : Object) : void
        // TODO: Right now this is just a dropper, needs an actual night icon.
        boolean enabled = mNightModeController.isEnabled();
        state.icon = ResourceIcon.get(enabled ? R.drawable.ic_night_mode
                : R.drawable.ic_night_mode_disabled);
        state.label = mContext.getString(R.string.night_mode);
        state.contentDescription = mContext.getString(R.string.night_mode);
!!!45289399.java!!!	onNightModeChanged() : void
        refreshState();
!!!45289527.java!!!	onTwilightAutoChanged() : void
        // Don't care.
!!!45289655.java!!!	getMetricsCategory() : int
        return MetricsEvent.QS_COLOR_MATRIX;
