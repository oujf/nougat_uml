class VolumeDialogComponent
!!!45336887.java!!!	VolumeDialogComponent(inout sysui : SystemUI, inout context : Context, inout handler : Handler, inout zen : ZenModeController)
        mSysui = sysui;
        mContext = context;
        mController = new VolumeDialogController(context, null) {
            @Override
            protected void onUserActivityW() {
                sendUserActivity();
            }
        };
        mZenModeController = zen;
        mDialog = new VolumeDialog(context, WindowManager.LayoutParams.TYPE_VOLUME_OVERLAY,
                mController, zen, mVolumeDialogCallback);
        applyConfiguration();
        TunerService.get(mContext).addTunable(this, VOLUME_DOWN_SILENT, VOLUME_UP_SILENT,
                VOLUME_SILENT_DO_NOT_DISTURB);
!!!45337015.java!!!	onTuningChanged(inout key : String, inout newValue : String) : void
        if (VOLUME_DOWN_SILENT.equals(key)) {
            final boolean volumeDownToEnterSilent = newValue != null
                    ? Integer.parseInt(newValue) != 0
                    : DEFAULT_VOLUME_DOWN_TO_ENTER_SILENT;
            setVolumePolicy(volumeDownToEnterSilent,
                    mVolumePolicy.volumeUpToExitSilent, mVolumePolicy.doNotDisturbWhenSilent,
                    mVolumePolicy.vibrateToSilentDebounce);
        } else if (VOLUME_UP_SILENT.equals(key)) {
            final boolean volumeUpToExitSilent = newValue != null
                    ? Integer.parseInt(newValue) != 0
                    : DEFAULT_VOLUME_UP_TO_EXIT_SILENT;
            setVolumePolicy(mVolumePolicy.volumeDownToEnterSilent,
                    volumeUpToExitSilent, mVolumePolicy.doNotDisturbWhenSilent,
                    mVolumePolicy.vibrateToSilentDebounce);
        } else if (VOLUME_SILENT_DO_NOT_DISTURB.equals(key)) {
            final boolean doNotDisturbWhenSilent = newValue != null
                    ? Integer.parseInt(newValue) != 0
                    : DEFAULT_DO_NOT_DISTURB_WHEN_SILENT;
            setVolumePolicy(mVolumePolicy.volumeDownToEnterSilent,
                    mVolumePolicy.volumeUpToExitSilent, doNotDisturbWhenSilent,
                    mVolumePolicy.vibrateToSilentDebounce);
        }
!!!45337143.java!!!	setVolumePolicy(inout volumeDownToEnterSilent : boolean, inout volumeUpToExitSilent : boolean, inout doNotDisturbWhenSilent : boolean, in vibrateToSilentDebounce : int) : void
        mVolumePolicy = new VolumePolicy(volumeDownToEnterSilent, volumeUpToExitSilent,
                doNotDisturbWhenSilent, vibrateToSilentDebounce);
        mController.setVolumePolicy(mVolumePolicy);
!!!45337271.java!!!	sendUserActivity() : void
        final KeyguardViewMediator kvm = mSysui.getComponent(KeyguardViewMediator.class);
        if (kvm != null) {
            kvm.userActivity();
        }
!!!45337399.java!!!	applyConfiguration() : void
        mDialog.setStreamImportant(AudioManager.STREAM_ALARM, true);
        mDialog.setStreamImportant(AudioManager.STREAM_SYSTEM, false);
        mDialog.setShowHeaders(false);
        mDialog.setAutomute(true);
        mDialog.setSilentMode(false);
        mController.setVolumePolicy(mVolumePolicy);
        mController.showDndTile(true);
!!!45337527.java!!!	getZenController() : ZenModeController
        return mZenModeController;
!!!45337655.java!!!	onConfigurationChanged(inout newConfig : Configuration) : void
        // noop
!!!45337783.java!!!	dismissNow() : void
        mController.dismiss();
!!!45337911.java!!!	dispatchDemoCommand(inout command : String, inout args : Bundle) : void
        // noop
!!!45338039.java!!!	register() : void
        mController.register();
        DndTile.setCombinedIcon(mContext, true);
!!!45338167.java!!!	dump(inout fd : FileDescriptor, inout pw : PrintWriter, inout args : String) : void
        mController.dump(fd, pw, args);
        mDialog.dump(pw);
!!!45338295.java!!!	startSettings(inout intent : Intent) : void
        mSysui.getComponent(PhoneStatusBar.class).startActivityDismissingKeyguard(intent,
                true /* onlyProvisioned */, true /* dismissShade */);
