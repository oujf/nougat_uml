class TileLifecycleManagerTests
!!!45367095.java!!!	setUp() : void
        super.setUp();
        mThread = new HandlerThread("TestThread");
        mThread.start();
        mHandler = new Handler(mThread.getLooper());
        ComponentName component = new ComponentName(mContext, FakeTileService.class);
        mStateManager = new TileLifecycleManager(mHandler, getContext(),
                Mockito.mock(IQSService.class), new Tile(component),
                new Intent().setComponent(component),
                new UserHandle(UserHandle.myUserId()));
        mCallbacks.clear();
        getContext().registerReceiver(mReceiver, new IntentFilter(TILE_UPDATE_BROADCAST));
!!!45367223.java!!!	tearDown() : void
        super.tearDown();
        if (mBound) {
            unbindService();
        }
        mThread.quit();
        getContext().unregisterReceiver(mReceiver);
!!!45367351.java!!!	testSync() : void
        syncWithHandler();
!!!45367479.java!!!	testBind() : void
        bindService();
        waitForCallback("onCreate");
!!!45367607.java!!!	testUnbind() : void
        bindService();
        waitForCallback("onCreate");
        unbindService();
        waitForCallback("onDestroy");
!!!45367735.java!!!	testTileServiceCallbacks() : void
        bindService();
        waitForCallback("onCreate");

        mStateManager.onTileAdded();
        waitForCallback("onTileAdded");
        mStateManager.onStartListening();
        waitForCallback("onStartListening");
        mStateManager.onClick(null);
        waitForCallback("onClick");
        mStateManager.onStopListening();
        waitForCallback("onStopListening");
        mStateManager.onTileRemoved();
        waitForCallback("onTileRemoved");

        unbindService();
!!!45367863.java!!!	testAddedBeforeBind() : void
        mStateManager.onTileAdded();

        bindService();
        waitForCallback("onCreate");
        waitForCallback("onTileAdded");
!!!45367991.java!!!	testListeningBeforeBind() : void
        mStateManager.onTileAdded();
        mStateManager.onStartListening();

        bindService();
        waitForCallback("onCreate");
        waitForCallback("onTileAdded");
        waitForCallback("onStartListening");
!!!45368119.java!!!	testClickBeforeBind() : void
        mStateManager.onTileAdded();
        mStateManager.onStartListening();
        mStateManager.onClick(null);

        bindService();
        waitForCallback("onCreate");
        waitForCallback("onTileAdded");
        waitForCallback("onStartListening");
        waitForCallback("onClick");
!!!45368247.java!!!	testListeningNotListeningBeforeBind() : void
        mStateManager.onTileAdded();
        mStateManager.onStartListening();
        mStateManager.onStopListening();

        bindService();
        waitForCallback("onCreate");
        unbindService();
        waitForCallback("onDestroy");
        assertFalse(mCallbacks.contains("onStartListening"));
!!!45368375.java!!!	testNoClickOfNotListeningAnymore() : void
        mStateManager.onTileAdded();
        mStateManager.onStartListening();
        mStateManager.onClick(null);
        mStateManager.onStopListening();

        bindService();
        waitForCallback("onCreate");
        unbindService();
        waitForCallback("onDestroy");
        assertFalse(mCallbacks.contains("onClick"));
!!!45368503.java!!!	testComponentEnabling() : void
        mStateManager.onTileAdded();
        mStateManager.onStartListening();

        PackageManager pm = getContext().getPackageManager();
        pm.setComponentEnabledSetting(new ComponentName(getContext(), FakeTileService.class),
                PackageManager.COMPONENT_ENABLED_STATE_DISABLED, PackageManager.DONT_KILL_APP);

        bindService();
        assertTrue(mStateManager.mReceiverRegistered);

        pm.setComponentEnabledSetting(new ComponentName(getContext(), FakeTileService.class),
                PackageManager.COMPONENT_ENABLED_STATE_ENABLED, PackageManager.DONT_KILL_APP);
        waitForCallback("onCreate");
!!!45368631.java!!!	testKillProcess() : void
        mStateManager.onStartListening();
        bindService();
        waitForCallback("onCreate");
        waitForCallback("onStartListening");

        getContext().sendBroadcast(new Intent(FakeTileService.ACTION_KILL));

        waitForCallback("onCreate");
        waitForCallback("onStartListening");
!!!45368759.java!!!	bindService() : void
        mBound = true;
        mStateManager.setBindService(true);
!!!45368887.java!!!	unbindService() : void
        mBound = false;
        mStateManager.setBindService(false);
!!!45369015.java!!!	waitForCallback(inout callback : String) : void
        for (int i = 0; i < 50; i++) {
            if (mCallbacks.contains(callback)) {
                mCallbacks.remove(callback);
                return;
            }
            synchronized (mBroadcastLock) {
                try {
                    mBroadcastLock.wait(500);
                } catch (InterruptedException e) {
                }
            }
        }
        if (mCallbacks.contains(callback)) {
            mCallbacks.remove(callback);
            return;
        }
        fail("Didn't receive callback: " + callback);
!!!45369143.java!!!	syncWithHandler() : void
        final Object lock = new Object();
        synchronized (lock) {
            mHandler.post(new Runnable() {
                @Override
                public void run() {
                    synchronized (lock) {
                        lock.notify();
                    }
                }
            });
            try {
                lock.wait(10000);
            } catch (InterruptedException e) {
            }
        }
