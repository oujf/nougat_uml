class ExifTag
!!!45420087.java!!!	isValidIfd(in ifdId : int) : boolean
        return ifdId == IfdId.TYPE_IFD_0 || ifdId == IfdId.TYPE_IFD_1
                || ifdId == IfdId.TYPE_IFD_EXIF || ifdId == IfdId.TYPE_IFD_INTEROPERABILITY
                || ifdId == IfdId.TYPE_IFD_GPS;
!!!45420215.java!!!	isValidType(in type : short) : boolean
        return type == TYPE_UNSIGNED_BYTE || type == TYPE_ASCII ||
                type == TYPE_UNSIGNED_SHORT || type == TYPE_UNSIGNED_LONG ||
                type == TYPE_UNSIGNED_RATIONAL || type == TYPE_UNDEFINED ||
                type == TYPE_LONG || type == TYPE_RATIONAL;
!!!45420343.java!!!	ExifTag(in tagId : short, in type : short, in componentCount : int, in ifd : int, inout hasDefinedComponentCount : boolean)
        mTagId = tagId;
        mDataType = type;
        mComponentCountActual = componentCount;
        mHasDefinedDefaultComponentCount = hasDefinedComponentCount;
        mIfd = ifd;
        mValue = null;
!!!45420471.java!!!	getElementSize(in type : short) : int
        return TYPE_TO_SIZE_MAP[type];
!!!45420599.java!!!	getIfd() : int
        return mIfd;
!!!45420727.java!!!	setIfd(in ifdId : int) : void
        mIfd = ifdId;
!!!45420855.java!!!	getTagId() : short
        return mTagId;
!!!45420983.java!!!	getDataType() : short
        return mDataType;
!!!45421111.java!!!	getDataSize() : int
        return getComponentCount() * getElementSize(getDataType());
!!!45421239.java!!!	getComponentCount() : int
        return mComponentCountActual;
!!!45421367.java!!!	forceSetComponentCount(in count : int) : void
        mComponentCountActual = count;
!!!45421495.java!!!	hasValue() : boolean
        return mValue != null;
!!!45421623.java!!!	setValue(inout value : int) : boolean
        if (checkBadComponentCount(value.length)) {
            return false;
        }
        if (mDataType != TYPE_UNSIGNED_SHORT && mDataType != TYPE_LONG &&
                mDataType != TYPE_UNSIGNED_LONG) {
            return false;
        }
        if (mDataType == TYPE_UNSIGNED_SHORT && checkOverflowForUnsignedShort(value)) {
            return false;
        } else if (mDataType == TYPE_UNSIGNED_LONG && checkOverflowForUnsignedLong(value)) {
            return false;
        }

        long[] data = new long[value.length];
        for (int i = 0; i < value.length; i++) {
            data[i] = value[i];
        }
        mValue = data;
        mComponentCountActual = value.length;
        return true;
!!!45421751.java!!!	setValue(in value : int) : boolean
        return setValue(new int[] {
                value
        });
!!!45421879.java!!!	setValue(inout value : long) : boolean
        if (checkBadComponentCount(value.length) || mDataType != TYPE_UNSIGNED_LONG) {
            return false;
        }
        if (checkOverflowForUnsignedLong(value)) {
            return false;
        }
        mValue = value;
        mComponentCountActual = value.length;
        return true;
!!!45422007.java!!!	setValue(in value : long) : boolean
        return setValue(new long[] {
                value
        });
!!!45422135.java!!!	setValue(inout value : String) : boolean
        if (mDataType != TYPE_ASCII && mDataType != TYPE_UNDEFINED) {
            return false;
        }

        byte[] buf = value.getBytes(US_ASCII);
        byte[] finalBuf = buf;
        if (buf.length > 0) {
            finalBuf = (buf[buf.length - 1] == 0 || mDataType == TYPE_UNDEFINED) ? buf : Arrays
                .copyOf(buf, buf.length + 1);
        } else if (mDataType == TYPE_ASCII && mComponentCountActual == 1) {
            finalBuf = new byte[] { 0 };
        }
        int count = finalBuf.length;
        if (checkBadComponentCount(count)) {
            return false;
        }
        mComponentCountActual = count;
        mValue = finalBuf;
        return true;
!!!45422263.java!!!	setValue(inout value : Rational) : boolean
        if (checkBadComponentCount(value.length)) {
            return false;
        }
        if (mDataType != TYPE_UNSIGNED_RATIONAL && mDataType != TYPE_RATIONAL) {
            return false;
        }
        if (mDataType == TYPE_UNSIGNED_RATIONAL && checkOverflowForUnsignedRational(value)) {
            return false;
        } else if (mDataType == TYPE_RATIONAL && checkOverflowForRational(value)) {
            return false;
        }

        mValue = value;
        mComponentCountActual = value.length;
        return true;
!!!45422391.java!!!	setValue(inout value : Rational) : boolean
        return setValue(new Rational[] {
                value
        });
!!!45422519.java!!!	setValue(inout value : byte, in offset : int, in length : int) : boolean
        if (checkBadComponentCount(length)) {
            return false;
        }
        if (mDataType != TYPE_UNSIGNED_BYTE && mDataType != TYPE_UNDEFINED) {
            return false;
        }
        mValue = new byte[length];
        System.arraycopy(value, offset, mValue, 0, length);
        mComponentCountActual = length;
        return true;
!!!45422647.java!!!	setValue(inout value : byte) : boolean
        return setValue(value, 0, value.length);
!!!45422775.java!!!	setValue(in value : byte) : boolean
        return setValue(new byte[] {
                value
        });
!!!45422903.java!!!	setValue(inout obj : Object) : boolean
        if (obj == null) {
            return false;
        } else if (obj instanceof Short) {
            return setValue(((Short) obj).shortValue() & 0x0ffff);
        } else if (obj instanceof String) {
            return setValue((String) obj);
        } else if (obj instanceof int[]) {
            return setValue((int[]) obj);
        } else if (obj instanceof long[]) {
            return setValue((long[]) obj);
        } else if (obj instanceof Rational) {
            return setValue((Rational) obj);
        } else if (obj instanceof Rational[]) {
            return setValue((Rational[]) obj);
        } else if (obj instanceof byte[]) {
            return setValue((byte[]) obj);
        } else if (obj instanceof Integer) {
            return setValue(((Integer) obj).intValue());
        } else if (obj instanceof Long) {
            return setValue(((Long) obj).longValue());
        } else if (obj instanceof Byte) {
            return setValue(((Byte) obj).byteValue());
        } else if (obj instanceof Short[]) {
            // Nulls in this array are treated as zeroes.
            Short[] arr = (Short[]) obj;
            int[] fin = new int[arr.length];
            for (int i = 0; i < arr.length; i++) {
                fin[i] = (arr[i] == null) ? 0 : arr[i].shortValue() & 0x0ffff;
            }
            return setValue(fin);
        } else if (obj instanceof Integer[]) {
            // Nulls in this array are treated as zeroes.
            Integer[] arr = (Integer[]) obj;
            int[] fin = new int[arr.length];
            for (int i = 0; i < arr.length; i++) {
                fin[i] = (arr[i] == null) ? 0 : arr[i].intValue();
            }
            return setValue(fin);
        } else if (obj instanceof Long[]) {
            // Nulls in this array are treated as zeroes.
            Long[] arr = (Long[]) obj;
            long[] fin = new long[arr.length];
            for (int i = 0; i < arr.length; i++) {
                fin[i] = (arr[i] == null) ? 0 : arr[i].longValue();
            }
            return setValue(fin);
        } else if (obj instanceof Byte[]) {
            // Nulls in this array are treated as zeroes.
            Byte[] arr = (Byte[]) obj;
            byte[] fin = new byte[arr.length];
            for (int i = 0; i < arr.length; i++) {
                fin[i] = (arr[i] == null) ? 0 : arr[i].byteValue();
            }
            return setValue(fin);
        } else {
            return false;
        }
!!!45423031.java!!!	setTimeValue(in time : long) : boolean
        // synchronized on TIME_FORMAT as SimpleDateFormat is not thread safe
        synchronized (TIME_FORMAT) {
            return setValue(TIME_FORMAT.format(new Date(time)));
        }
!!!45423159.java!!!	getValueAsString() : String
        if (mValue == null) {
            return null;
        } else if (mValue instanceof String) {
            return (String) mValue;
        } else if (mValue instanceof byte[]) {
            return new String((byte[]) mValue, US_ASCII);
        }
        return null;
!!!45423287.java!!!	getValueAsString(inout defaultValue : String) : String
        String s = getValueAsString();
        if (s == null) {
            return defaultValue;
        }
        return s;
!!!45423415.java!!!	getValueAsBytes() : byte
        if (mValue instanceof byte[]) {
            return (byte[]) mValue;
        }
        return null;
!!!45423543.java!!!	getValueAsByte(in defaultValue : byte) : byte
        byte[] b = getValueAsBytes();
        if (b == null || b.length < 1) {
            return defaultValue;
        }
        return b[0];
!!!45423671.java!!!	getValueAsRationals() : Rational
        if (mValue instanceof Rational[]) {
            return (Rational[]) mValue;
        }
        return null;
!!!45423799.java!!!	getValueAsRational(inout defaultValue : Rational) : Rational
        Rational[] r = getValueAsRationals();
        if (r == null || r.length < 1) {
            return defaultValue;
        }
        return r[0];
!!!45423927.java!!!	getValueAsRational(in defaultValue : long) : Rational
        Rational defaultVal = new Rational(defaultValue, 1);
        return getValueAsRational(defaultVal);
!!!45424055.java!!!	getValueAsInts() : int
        if (mValue == null) {
            return null;
        } else if (mValue instanceof long[]) {
            long[] val = (long[]) mValue;
            int[] arr = new int[val.length];
            for (int i = 0; i < val.length; i++) {
                arr[i] = (int) val[i]; // Truncates
            }
            return arr;
        }
        return null;
!!!45424183.java!!!	getValueAsInt(in defaultValue : int) : int
        int[] i = getValueAsInts();
        if (i == null || i.length < 1) {
            return defaultValue;
        }
        return i[0];
!!!45424311.java!!!	getValueAsLongs() : long
        if (mValue instanceof long[]) {
            return (long[]) mValue;
        }
        return null;
!!!45424439.java!!!	getValueAsLong(in defaultValue : long) : long
        long[] l = getValueAsLongs();
        if (l == null || l.length < 1) {
            return defaultValue;
        }
        return l[0];
!!!45424567.java!!!	getValue() : Object
        return mValue;
!!!45424695.java!!!	forceGetValueAsLong(in defaultValue : long) : long
        long[] l = getValueAsLongs();
        if (l != null && l.length >= 1) {
            return l[0];
        }
        byte[] b = getValueAsBytes();
        if (b != null && b.length >= 1) {
            return b[0];
        }
        Rational[] r = getValueAsRationals();
        if (r != null && r.length >= 1 && r[0].getDenominator() != 0) {
            return (long) r[0].toDouble();
        }
        return defaultValue;
!!!45424823.java!!!	forceGetValueAsString() : String
        if (mValue == null) {
            return "";
        } else if (mValue instanceof byte[]) {
            if (mDataType == TYPE_ASCII) {
                return new String((byte[]) mValue, US_ASCII);
            } else {
                return Arrays.toString((byte[]) mValue);
            }
        } else if (mValue instanceof long[]) {
            if (((long[]) mValue).length == 1) {
                return String.valueOf(((long[]) mValue)[0]);
            } else {
                return Arrays.toString((long[]) mValue);
            }
        } else if (mValue instanceof Object[]) {
            if (((Object[]) mValue).length == 1) {
                Object val = ((Object[]) mValue)[0];
                if (val == null) {
                    return "";
                } else {
                    return val.toString();
                }
            } else {
                return Arrays.toString((Object[]) mValue);
            }
        } else {
            return mValue.toString();
        }
!!!45424951.java!!!	getValueAt(in index : int) : long
        if (mValue instanceof long[]) {
            return ((long[]) mValue)[index];
        } else if (mValue instanceof byte[]) {
            return ((byte[]) mValue)[index];
        }
        throw new IllegalArgumentException("Cannot get integer value from "
                + convertTypeToString(mDataType));
!!!45425079.java!!!	getString() : String
        if (mDataType != TYPE_ASCII) {
            throw new IllegalArgumentException("Cannot get ASCII value from "
                    + convertTypeToString(mDataType));
        }
        return new String((byte[]) mValue, US_ASCII);
!!!45425207.java!!!	getStringByte() : byte
        return (byte[]) mValue;
!!!45425335.java!!!	getRational(in index : int) : Rational
        if ((mDataType != TYPE_RATIONAL) && (mDataType != TYPE_UNSIGNED_RATIONAL)) {
            throw new IllegalArgumentException("Cannot get RATIONAL value from "
                    + convertTypeToString(mDataType));
        }
        return ((Rational[]) mValue)[index];
!!!45425463.java!!!	getBytes(inout buf : byte) : void
        getBytes(buf, 0, buf.length);
!!!45425591.java!!!	getBytes(inout buf : byte, in offset : int, in length : int) : void
        if ((mDataType != TYPE_UNDEFINED) && (mDataType != TYPE_UNSIGNED_BYTE)) {
            throw new IllegalArgumentException("Cannot get BYTE value from "
                    + convertTypeToString(mDataType));
        }
        System.arraycopy(mValue, 0, buf, offset,
                (length > mComponentCountActual) ? mComponentCountActual : length);
!!!45425719.java!!!	getOffset() : int
        return mOffset;
!!!45425847.java!!!	setOffset(in offset : int) : void
        mOffset = offset;
!!!45425975.java!!!	setHasDefinedCount(inout d : boolean) : void
        mHasDefinedDefaultComponentCount = d;
!!!45426103.java!!!	hasDefinedCount() : boolean
        return mHasDefinedDefaultComponentCount;
!!!45426231.java!!!	checkBadComponentCount(in count : int) : boolean
        if (mHasDefinedDefaultComponentCount && (mComponentCountActual != count)) {
            return true;
        }
        return false;
!!!45426359.java!!!	convertTypeToString(in type : short) : String
        switch (type) {
            case TYPE_UNSIGNED_BYTE:
                return "UNSIGNED_BYTE";
            case TYPE_ASCII:
                return "ASCII";
            case TYPE_UNSIGNED_SHORT:
                return "UNSIGNED_SHORT";
            case TYPE_UNSIGNED_LONG:
                return "UNSIGNED_LONG";
            case TYPE_UNSIGNED_RATIONAL:
                return "UNSIGNED_RATIONAL";
            case TYPE_UNDEFINED:
                return "UNDEFINED";
            case TYPE_LONG:
                return "LONG";
            case TYPE_RATIONAL:
                return "RATIONAL";
            default:
                return "";
        }
!!!45426487.java!!!	checkOverflowForUnsignedShort(inout value : int) : boolean
        for (int v : value) {
            if (v > UNSIGNED_SHORT_MAX || v < 0) {
                return true;
            }
        }
        return false;
!!!45426615.java!!!	checkOverflowForUnsignedLong(inout value : long) : boolean
        for (long v : value) {
            if (v < 0 || v > UNSIGNED_LONG_MAX) {
                return true;
            }
        }
        return false;
!!!45426743.java!!!	checkOverflowForUnsignedLong(inout value : int) : boolean
        for (int v : value) {
            if (v < 0) {
                return true;
            }
        }
        return false;
!!!45426871.java!!!	checkOverflowForUnsignedRational(inout value : Rational) : boolean
        for (Rational v : value) {
            if (v.getNumerator() < 0 || v.getDenominator() < 0
                    || v.getNumerator() > UNSIGNED_LONG_MAX
                    || v.getDenominator() > UNSIGNED_LONG_MAX) {
                return true;
            }
        }
        return false;
!!!45426999.java!!!	checkOverflowForRational(inout value : Rational) : boolean
        for (Rational v : value) {
            if (v.getNumerator() < LONG_MIN || v.getDenominator() < LONG_MIN
                    || v.getNumerator() > LONG_MAX
                    || v.getDenominator() > LONG_MAX) {
                return true;
            }
        }
        return false;
!!!45427127.java!!!	equals(inout obj : Object) : boolean
        if (obj == null) {
            return false;
        }
        if (obj instanceof ExifTag) {
            ExifTag tag = (ExifTag) obj;
            if (tag.mTagId != this.mTagId
                    || tag.mComponentCountActual != this.mComponentCountActual
                    || tag.mDataType != this.mDataType) {
                return false;
            }
            if (mValue != null) {
                if (tag.mValue == null) {
                    return false;
                } else if (mValue instanceof long[]) {
                    if (!(tag.mValue instanceof long[])) {
                        return false;
                    }
                    return Arrays.equals((long[]) mValue, (long[]) tag.mValue);
                } else if (mValue instanceof Rational[]) {
                    if (!(tag.mValue instanceof Rational[])) {
                        return false;
                    }
                    return Arrays.equals((Rational[]) mValue, (Rational[]) tag.mValue);
                } else if (mValue instanceof byte[]) {
                    if (!(tag.mValue instanceof byte[])) {
                        return false;
                    }
                    return Arrays.equals((byte[]) mValue, (byte[]) tag.mValue);
                } else {
                    return mValue.equals(tag.mValue);
                }
            } else {
                return tag.mValue == null;
            }
        }
        return false;
!!!45427255.java!!!	toString() : String
        return String.format("tag id: %04X\n", mTagId) + "ifd id: " + mIfd + "\ntype: "
                + convertTypeToString(mDataType) + "\ncount: " + mComponentCountActual
                + "\noffset: " + mOffset + "\nvalue: " + forceGetValueAsString() + "\n";
