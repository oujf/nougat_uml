class BasicTexture
!!!45431223.java!!!	BasicTexture(inout canvas : GLCanvas, in id : int, in state : int)
        setAssociatedCanvas(canvas);
        mId = id;
        mState = state;
        synchronized (sAllTextures) {
            sAllTextures.put(this, null);
        }
!!!45431351.java!!!	BasicTexture()
        this(null, 0, STATE_UNLOADED);
!!!45431479.java!!!	setAssociatedCanvas(inout canvas : GLCanvas) : void
        mCanvasRef = canvas;
!!!45431607.java!!!	setSize(in width : int, in height : int) : void
        mWidth = width;
        mHeight = height;
        mTextureWidth = width > 0 ? Utils.nextPowerOf2(width) : 0;
        mTextureHeight = height > 0 ? Utils.nextPowerOf2(height) : 0;
        if (mTextureWidth > MAX_TEXTURE_SIZE || mTextureHeight > MAX_TEXTURE_SIZE) {
            Log.w(TAG, String.format("texture is too large: %d x %d",
                    mTextureWidth, mTextureHeight), new Exception());
        }
!!!45431735.java!!!	isFlippedVertically() : boolean
      return false;
!!!45431863.java!!!	getId() : int
        return mId;
!!!45431991.java!!!	getWidth() : int
        return mWidth;
!!!45432119.java!!!	getHeight() : int
        return mHeight;
!!!45432247.java!!!	getTextureWidth() : int
        return mTextureWidth;
!!!45432375.java!!!	getTextureHeight() : int
        return mTextureHeight;
!!!45432503.java!!!	hasBorder() : boolean
        return mHasBorder;
!!!45432631.java!!!	setBorder(inout hasBorder : boolean) : void
        mHasBorder = hasBorder;
!!!45432759.java!!!	draw(inout canvas : GLCanvas, in x : int, in y : int) : void
        canvas.drawTexture(this, x, y, getWidth(), getHeight());
!!!45432887.java!!!	draw(inout canvas : GLCanvas, in x : int, in y : int, in w : int, in h : int) : void
        canvas.drawTexture(this, x, y, w, h);
!!!45433271.java!!!	isLoaded() : boolean
        return mState == STATE_LOADED;
!!!45433399.java!!!	recycle() : void
        freeResource();
!!!45433527.java!!!	yield() : void
        freeResource();
!!!45433655.java!!!	freeResource() : void
        GLCanvas canvas = mCanvasRef;
        if (canvas != null && mId != -1) {
            canvas.unloadTexture(this);
            mId = -1; // Don't free it again.
        }
        mState = STATE_UNLOADED;
        setAssociatedCanvas(null);
!!!45433783.java!!!	finalize() : void
        sInFinalizer.set(BasicTexture.class);
        recycle();
        sInFinalizer.set(null);
!!!45433911.java!!!	inFinalizer() : boolean
        return sInFinalizer.get() != null;
!!!45434039.java!!!	yieldAllTextures() : void
        synchronized (sAllTextures) {
            for (BasicTexture t : sAllTextures.keySet()) {
                t.yield();
            }
        }
!!!45434167.java!!!	invalidateAllTextures() : void
        synchronized (sAllTextures) {
            for (BasicTexture t : sAllTextures.keySet()) {
                t.mState = STATE_UNLOADED;
                t.setAssociatedCanvas(null);
            }
        }
