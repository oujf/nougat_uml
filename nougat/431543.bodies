class CallbackMessageHandler
!!!2735031.java!!!	CallbackMessageHandler(inout looper : Looper, inout callback : LauncherApps::Callback)
            super(looper, null, true);
            mCallback = callback;
!!!2735159.java!!!	handleMessage(inout msg : Message) : void
            if (mCallback == null || !(msg.obj instanceof CallbackInfo)) {
                return;
            }
            CallbackInfo info = (CallbackInfo) msg.obj;
            switch (msg.what) {
                case MSG_ADDED:
                    mCallback.onPackageAdded(info.packageName, info.user);
                    break;
                case MSG_REMOVED:
                    mCallback.onPackageRemoved(info.packageName, info.user);
                    break;
                case MSG_CHANGED:
                    mCallback.onPackageChanged(info.packageName, info.user);
                    break;
                case MSG_AVAILABLE:
                    mCallback.onPackagesAvailable(info.packageNames, info.user, info.replacing);
                    break;
                case MSG_UNAVAILABLE:
                    mCallback.onPackagesUnavailable(info.packageNames, info.user, info.replacing);
                    break;
                case MSG_SUSPENDED:
                    mCallback.onPackagesSuspended(info.packageNames, info.user);
                    break;
                case MSG_UNSUSPENDED:
                    mCallback.onPackagesUnsuspended(info.packageNames, info.user);
                    break;
                case MSG_SHORTCUT_CHANGED:
                    mCallback.onShortcutsChanged(info.packageName, info.shortcuts, info.user);
                    break;
            }
!!!2735287.java!!!	postOnPackageAdded(inout packageName : String, inout user : UserHandle) : void
            CallbackInfo info = new CallbackInfo();
            info.packageName = packageName;
            info.user = user;
            obtainMessage(MSG_ADDED, info).sendToTarget();
!!!2735415.java!!!	postOnPackageRemoved(inout packageName : String, inout user : UserHandle) : void
            CallbackInfo info = new CallbackInfo();
            info.packageName = packageName;
            info.user = user;
            obtainMessage(MSG_REMOVED, info).sendToTarget();
!!!2735543.java!!!	postOnPackageChanged(inout packageName : String, inout user : UserHandle) : void
            CallbackInfo info = new CallbackInfo();
            info.packageName = packageName;
            info.user = user;
            obtainMessage(MSG_CHANGED, info).sendToTarget();
!!!2735671.java!!!	postOnPackagesAvailable(inout packageNames : String, inout user : UserHandle, inout replacing : boolean) : void
            CallbackInfo info = new CallbackInfo();
            info.packageNames = packageNames;
            info.replacing = replacing;
            info.user = user;
            obtainMessage(MSG_AVAILABLE, info).sendToTarget();
!!!2735799.java!!!	postOnPackagesUnavailable(inout packageNames : String, inout user : UserHandle, inout replacing : boolean) : void
            CallbackInfo info = new CallbackInfo();
            info.packageNames = packageNames;
            info.replacing = replacing;
            info.user = user;
            obtainMessage(MSG_UNAVAILABLE, info).sendToTarget();
!!!2735927.java!!!	postOnPackagesSuspended(inout packageNames : String, inout user : UserHandle) : void
            CallbackInfo info = new CallbackInfo();
            info.packageNames = packageNames;
            info.user = user;
            obtainMessage(MSG_SUSPENDED, info).sendToTarget();
!!!2736055.java!!!	postOnPackagesUnsuspended(inout packageNames : String, inout user : UserHandle) : void
            CallbackInfo info = new CallbackInfo();
            info.packageNames = packageNames;
            info.user = user;
            obtainMessage(MSG_UNSUSPENDED, info).sendToTarget();
!!!2736183.java!!!	postOnShortcutChanged(inout packageName : String, inout user : UserHandle, inout shortcuts : List<ShortcutInfo>) : void
            CallbackInfo info = new CallbackInfo();
            info.packageName = packageName;
            info.user = user;
            info.shortcuts = shortcuts;
            obtainMessage(MSG_SHORTCUT_CHANGED, info).sendToTarget();
