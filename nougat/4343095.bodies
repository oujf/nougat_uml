class ObjectManager
!!!45548599.cpp!!!	~ObjectManager()
    kill();
!!!45548727.cpp!!!	attach(in objectID : void, inout object : void, inout cleanupCookie : void, in func : IBinder::object_cleanup_func) : void
    entry_t e;
    e.object = object;
    e.cleanupCookie = cleanupCookie;
    e.func = func;

    if (mObjects.indexOfKey(objectID) >= 0) {
        ALOGE("Trying to attach object ID %p to binder ObjectManager %p with object %p, but object ID already in use",
                objectID, this,  object);
        return;
    }

    mObjects.add(objectID, e);
!!!45548855.cpp!!!	find(in objectID : void) : void
    const ssize_t i = mObjects.indexOfKey(objectID);
    if (i < 0) return NULL;
    return mObjects.valueAt(i).object;
!!!45548983.cpp!!!	detach(in objectID : void) : void
    mObjects.removeItem(objectID);
!!!45549111.cpp!!!	kill() : void
    const size_t N = mObjects.size();
    ALOGV("Killing %zu objects in manager %p", N, this);
    for (size_t i=0; i<N; i++) {
        const entry_t& e = mObjects.valueAt(i);
        if (e.func != NULL) {
            e.func(mObjects.keyAt(i), e.object, e.cleanupCookie);
        }
    }

    mObjects.clear();
