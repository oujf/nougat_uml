format 76
"sharedstoragebackup" // nougat_src::frameworks::base::packages::BackupRestoreConfirmation::src::com::android::sharedstoragebackup
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/packages/SharedStorageBackup/src/com/android/sharedstoragebackup/"
  java_package "com.android.sharedstoragebackup"
  classview 381367 "sharedstoragebackup"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 4172087 "ObbBackupService"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Service that the Backup Manager Services delegates OBB backup/restore operations to,
because those require accessing external storage.

{@hide}"
      classrelation 11711031 // <generalisation>
	relation 11710263 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 11711031 // <generalisation>
	  b parent class_ref 300343 // Service
      end

      classrelation 11711159 // TAG (<unidirectional association>)
	relation 11710391 --->
	  a role_name "TAG" init_value " \"ObbBackupService\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11711159 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 13142455 "DEBUG"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13142583 "mService"
	package explicit_type "IObbBackupService"
	init_value " new IObbBackupService.Stub() {
        /*
         * Back up a package's OBB directory tree
         */
        @Override
        public void backupObbs(String packageName, ParcelFileDescriptor data,
                int token, IBackupManager callbackBinder) {
            final FileDescriptor outFd = data.getFileDescriptor();
            try {
                File obbDir = Environment.buildExternalStorageAppObbDirs(packageName)[0];
                if (obbDir != null) {
                    if (obbDir.exists()) {
                        ArrayList<File> obbList = allFileContents(obbDir);
                        if (obbList != null) {
                            // okay, there's at least something there
                            if (DEBUG) {
                                Log.i(TAG, obbList.size() + \" files to back up\");
                            }
                            final String rootPath = obbDir.getCanonicalPath();
                            final FullBackupDataOutput out = new FullBackupDataOutput(data);
                            for (File f : obbList) {
                                final String filePath = f.getCanonicalPath();
                                if (DEBUG) {
                                    Log.i(TAG, \"storing: \" + filePath);
                                }
                                FullBackup.backupToTar(packageName, FullBackup.OBB_TREE_TOKEN, null,
                                        rootPath, filePath, out);
                            }
                        }
                    }
                }
            } catch (IOException e) {
                Log.w(TAG, \"Exception backing up OBBs for \" + packageName, e);
            } finally {
                // Send the EOD marker indicating that there is no more data
                try {
                    FileOutputStream out = new FileOutputStream(outFd);
                    byte[] buf = new byte[4];
                    out.write(buf);
                } catch (IOException e) {
                    Log.e(TAG, \"Unable to finalize obb backup stream!\");
                }

                try {
                    callbackBinder.opComplete(token, 0);
                } catch (RemoteException e) {
                }
            }
        }

        /*
         * Restore an OBB file for the given package from the incoming stream
         */
        @Override
        public void restoreObbFile(String packageName, ParcelFileDescriptor data,
                long fileSize, int type, String path, long mode, long mtime,
                int token, IBackupManager callbackBinder) {
            try {
                File outFile = Environment.buildExternalStorageAppObbDirs(packageName)[0];
                if (outFile != null) {
                    outFile = new File(outFile, path);
                }
                // outFile is null here if we couldn't get access to external storage,
                // in which case restoreFile() will discard the data cleanly and let
                // us proceed with the next file segment in the stream.  We pass -1
                // for the file mode to suppress attempts to chmod() on shared storage.
                FullBackup.restoreFile(data, fileSize, type, -1, mtime, outFile);
            } catch (IOException e) {
                Log.i(TAG, \"Exception restoring OBB \" + path, e);
            } finally {
                try {
                    callbackBinder.opComplete(token, 0);
                } catch (RemoteException e) {
                }
            }
        }

        ArrayList<File> allFileContents(File rootDir) {
            final ArrayList<File> files = new ArrayList<File>();
            final ArrayList<File> dirs = new ArrayList<File>();

            dirs.add(rootDir);
            while (!dirs.isEmpty()) {
                File dir = dirs.remove(0);
                File[] contents = dir.listFiles();
                if (contents != null) {
                    for (File f : contents) {
                        if (f.isDirectory()) dirs.add(f);
                        else if (f.isFile()) files.add(f);
                    }
                }
            }
            return files;
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "IObbBackupService interface implementation
"
      end

      operation 44342583 "onBind"
	public return_type class_ref 132919 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 131255 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 4172215 "SharedStorageAgent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 11711287 // <generalisation>
	relation 11710519 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 11711287 // <generalisation>
	  b parent class_ref 405431 // FullBackupAgent
      end

      classrelation 11711415 // TAG (<unidirectional association>)
	relation 11710647 --->
	  a role_name "TAG" init_value " \"SharedStorageAgent\"" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11711415 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 13142711 "DEBUG"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 11711543 // mVolumes (<unidirectional association>)
	relation 11710775 --->
	  a role_name "mVolumes" multiplicity "[]" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 11711543 // mVolumes (<unidirectional association>)
	  b parent class_ref 555831 // StorageVolume
      end

      operation 44342711 "onCreate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44342839 "onFullBackup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "output" type class_ref 402743 // FullBackupDataOutput
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Full backup of the shared-storage filesystem"
      end

      operation 44342967 "onRestoreFile"
	public explicit_return_type "void"
	nparams 7
	  param inout name "data" type class_ref 264887 // ParcelFileDescriptor
	  param in name "size" explicit_type "long"
	  param in name "type" explicit_type "int"
	  param inout name "domain" type class_ref 129591 // String
	  param inout name "relpath" type class_ref 129591 // String
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Full restore of one file to shared storage"
      end
    end
  end

  deploymentview 337463 "sharedstoragebackup"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1776823 "ObbBackupService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Service;
import android.app.backup.FullBackup;
import android.app.backup.FullBackupDataOutput;
import android.app.backup.IBackupManager;
import android.content.Intent;
import android.os.Environment;
import android.os.IBinder;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import android.util.Log;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import com.android.internal.backup.IObbBackupService;
${definition}"
      associated_classes
	class_ref 4172087 // ObbBackupService
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1776951 "SharedStorageAgent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.backup.FullBackupAgent;
import android.app.backup.FullBackup;
import android.app.backup.FullBackupDataOutput;
import android.content.Context;
import android.os.Environment;
import android.os.ParcelFileDescriptor;
import android.os.storage.StorageManager;
import android.os.storage.StorageVolume;
import android.util.ArraySet;
import android.util.Slog;
import java.io.File;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 4172215 // SharedStorageAgent
      end
    end
  end
end
