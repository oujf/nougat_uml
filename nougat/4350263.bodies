class ProcessInfoService
!!!45583671.cpp!!!	ProcessInfoService()
    updateBinderLocked();
!!!45583799.cpp!!!	getProcessStatesImpl(in length : size_t, inout pids : int32_t, inout states : int32_t) : status_t
    status_t err = NO_ERROR;
    sp<IProcessInfoService> pis;
    mProcessInfoLock.lock();
    pis = mProcessInfoService;
    mProcessInfoLock.unlock();

    for (int i = 0; i < BINDER_ATTEMPT_LIMIT; i++) {

        if (pis != NULL) {
            err = pis->getProcessStatesFromPids(length, /*in*/ pids, /*out*/ states);
            if (err == NO_ERROR) return NO_ERROR; // success
            if (IInterface::asBinder(pis)->isBinderAlive()) return err;
        }
        sleep(1);

        mProcessInfoLock.lock();
        if (pis == mProcessInfoService) {
            updateBinderLocked();
        }
        pis = mProcessInfoService;
        mProcessInfoLock.unlock();
    }

    ALOGW("%s: Could not retrieve process states from ProcessInfoService after %d retries.",
            __FUNCTION__, BINDER_ATTEMPT_LIMIT);

    return TIMED_OUT;
!!!45583927.cpp!!!	updateBinderLocked() : void
    const sp<IServiceManager> sm(defaultServiceManager());
    if (sm != NULL) {
        const String16 name("processinfo");
        mProcessInfoService = interface_cast<IProcessInfoService>(sm->checkService(name));
    }
