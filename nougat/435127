format 76
"retriever" // nougat_src::frameworks::base::packages::BackupRestoreConfirmation::src::com::android::statementservice::retriever
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "d:/Workspace/Android Source Code/nougat_src/frameworks/base/packages/StatementService/src/com/android/statementservice/retriever/"
  java_package "com.android.statementservice.retriever"
  classview 381751 "retriever"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 4174647 "AbstractStatementRetriever"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Retrieves the statements made by assets. This class is the entry point of the package.
<p>
An asset is an identifiable and addressable online entity that typically
provides some service or content. Examples of assets are websites, Android
apps, Twitter feeds, and Plus Pages.
<p>
Ownership of an asset is defined by being able to control it and speak for it.
An asset owner may establish a relationship between the asset and another
asset by making a statement about an intended relationship between the two.
An example of a relationship is permission delegation. For example, the owner
of a website (the webmaster) may delegate the ability the handle URLs to a
particular mobile app. Relationships are considered public information.
<p>
A particular kind of relationship (like permission delegation) defines a binary
relation on assets. The relation is not symmetric or transitive, nor is it
antisymmetric or anti-transitive.
<p>
A statement S(r, a, b) is an assertion that the relation r holds for the
ordered pair of assets (a, b). For example, taking r = \"delegates permission
to view user's location\", a = New York Times mobile app,
b = nytimes.com website, S(r, a, b) would be an assertion that \"the New York
Times mobile app delegates its ability to use the user's location to the
nytimes.com website\".
<p>
A statement S(r, a, b) is considered <b>reliable</b> if we have confidence that
the statement is true; the exact criterion depends on the kind of statement,
since some kinds of statements may be true on their face whereas others may
require multiple parties to agree.
<p>
For example, to get the statements made by www.example.com use:
<pre>
result = retrieveStatements(AssetFactory.create(
    \"{\\\"namespace\\\": \\\"web\\\", \\\"site\\\": \\\"https://www.google.com\\\"}\"))
</pre>
{@code result} will contain the statements and the expiration time of this result. The statements
are considered reliable until the expiration time."
      class 4176055 "Result"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 44367927 "getStatements"
	  public return_type class_ref 4176183 // Statement
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@NonNull
"
	  
	  
	  
	  comment "@return the retrieved statements."
	end

	operation 44368055 "getExpireMillis"
	  public explicit_return_type "long"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the expiration time in millisecond."
	end
      end

      operation 44367799 "retrieveStatements"
	abstract public return_type class_ref 4176055 // Result
	nparams 1
	  param inout name "source" type class_ref 4175031 // AbstractAsset
	nexceptions 1
	  exception class_ref 4175415 // AssociationServiceException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the statements made by the {@code source} asset with ttl.

@throws AssociationServiceException if the asset namespace is not supported."
      end

      operation 44368183 "createDirectRetriever"
	class_operation public return_type class_ref 4174647 // AbstractStatementRetriever
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new StatementRetriever that directly retrieves statements from the asset.

<p> For web assets, {@link AbstractStatementRetriever} will try to retrieve the statement
file from URL: {@code [webAsset.site]/.well-known/assetlinks.json\"} where {@code
[webAsset.site]} is in the form {@code http{s}://[hostname]:[optional_port]}. The file
should contain one JSON array of statements.

<p> For Android assets, {@link AbstractStatementRetriever} will try to retrieve the statement
from the AndroidManifest.xml. The developer should add a {@code meta-data} tag under
{@code application} tag where attribute {@code android:name} equals \"associated_assets\"
and {@code android:recourse} points to a string array resource. Each entry in the string
array should contain exactly one statement in JSON format. Note that this implementation
can only return statements made by installed apps."
      end
    end

    class 4175031 "AbstractAsset"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A handle representing the identity and address of some digital asset. An asset is an online
entity that typically provides some service or content. Examples of assets are websites, Android
apps, Twitter feeds, and Plus Pages.

<p> Asset can be represented by a JSON string. For example, the web site https://www.google.com
can be represented by
<pre>
{\"namespace\": \"web\", \"site\": \"https://www.google.com\"}
</pre>

<p> The Android app with package name com.google.test that is signed by a certificate with sha256
fingerprint 11:22:33 can be represented by
<pre>
{\"namespace\": \"android_app\",
 \"package_name\": \"com.google.test\",
 \"sha256_cert_fingerprints\": [\"11:22:33\"]}
</pre>

<p>Given a signed APK, Java 7's commandline keytool can compute the fingerprint using:
{@code keytool -list -printcert -jarfile signed_app.apk}"
      operation 44366903 "toJson"
	abstract public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a JSON string representation of this asset. The strings returned by this function are
normalized -- they can be used for equality testing."
      end

      operation 44367031 "lookupKey"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a key that can be used by {@link AbstractAssetMatcher} to lookup the asset.

<p> An asset will match an {@code AssetMatcher} only if the value of this method is equal to
{@code AssetMatcher.getMatchedLookupKey()}."
      end

      operation 44367159 "create"
	class_operation public return_type class_ref 4175031 // AbstractAsset
	nparams 1
	  param inout name "assetJson" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 4175415 // AssociationServiceException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new Asset from its JSON string representation.

@throws AssociationServiceException if the assetJson is not well formatted."
      end

      operation 44367287 "followInsecureInclude"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If this is the source asset of a statement file, should the retriever follow
any insecure (non-HTTPS) include statements made by the asset."
      end
    end

    class 4175159 "AbstractAssetMatcher"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An asset matcher that can match asset with the given query."
      operation 44367415 "matches"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "asset" type class_ref 4175031 // AbstractAsset
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this AssetMatcher matches the asset."
      end

      operation 44367543 "getMatchedLookupKey"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This AssetMatcher will only match Asset with {@code lookupKey()} equal to the value returned
by this method."
      end

      operation 44367671 "createMatcher"
	class_operation public return_type class_ref 4175159 // AbstractAssetMatcher
	nparams 1
	  param inout name "query" type class_ref 129591 // String
	nexceptions 2
	  exception class_ref 4175415 // AssociationServiceException
	  explicit_exception "JSONException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AssetMatcher from its JSON string representation.

<p> For web namespace, {@code query} will match assets that have the same 'site' field.

<p> For Android namespace, {@code query} will match assets that have the same
'package_name' field and have at least one common certificate fingerprint in
'sha256_cert_fingerprints' field."
      end
    end

    class 4175287 "Relation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An immutable value type representing a statement relation with \"kind\" and \"detail\".

<p> The set of kinds is enumerated by the API: <ul> <li> <b>delegate_permission</b>: The detail
field specifies which permission to delegate. A statement involving this relation does not
constitute a requirement to do the delegation, just a permission to do so. </ul>

<p> We may add other kinds in the future.

<p> The detail field is a lowercase alphanumeric string with underscores and periods allowed
(matching the regex [a-z0-9_.]+), but otherwise unstructured."
      attribute 13151799 "KIND_PATTERN"
	class_attribute const_attribute private explicit_type "Pattern"
	init_value " Pattern.compile(\"^[a-z0-9_.]+$\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13151927 "DETAIL_PATTERN"
	class_attribute const_attribute private explicit_type "Pattern"
	init_value " Pattern.compile(\"^([a-z0-9_.]+)$\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 11731767 // mKind (<unidirectional association>)
	relation 11730999 --->
	  a role_name "mKind" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11731767 // mKind (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11731895 // mDetail (<unidirectional association>)
	relation 11731127 --->
	  a role_name "mDetail" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11731895 // mDetail (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 44372663 "Relation"
	private explicit_return_type ""
	nparams 2
	  param inout name "kind" type class_ref 129591 // String
	  param inout name "detail" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44372791 "getKind"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Returns the relation's kind."
      end

      operation 44372919 "getDetail"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Returns the relation's detail."
      end

      operation 44373047 "create"
	class_operation public return_type class_ref 4175287 // Relation
	nparams 2
	  param inout name "kind" type class_ref 129591 // String
	  param inout name "detail" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 4175415 // AssociationServiceException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new Relation object for the specified {@code kind} and {@code detail}.

@throws AssociationServiceException if {@code kind} or {@code detail} is not well formatted."
      end

      operation 44373175 "create"
	class_operation public return_type class_ref 4175287 // Relation
	nparams 1
	  param inout name "relation" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 4175415 // AssociationServiceException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new Relation object from its string representation.

@throws AssociationServiceException if the relation is not well formatted."
      end

      operation 44373303 "matches"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "relation" type class_ref 4175287 // Relation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code relation} has the same kind and detail."
      end

      operation 44373431 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string representation of this relation."
      end

      operation 44373559 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " equals() and hashCode() are generated by Android Studio."
      end

      operation 44373687 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 4175415 "AssociationServiceException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an error occurs in the Association Service."
      classrelation 11730871 // <generalisation>
	relation 11730103 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 11730871 // <generalisation>
	  b parent class_ref 2223927 // Exception
      end

      operation 44371511 "AssociationServiceException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 129591 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44371639 "AssociationServiceException"
	public explicit_return_type ""
	nparams 2
	  param inout name "msg" type class_ref 129591 // String
	  param inout name "e" type class_ref 2223927 // Exception
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44371767 "AssociationServiceException"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 2223927 // Exception
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 4176183 "Statement"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An immutable value type representing a statement, consisting of a source, target, and relation.
This reflects an assertion that the relation holds for the source, target pair. For example, if a
web site has the following in its assetlinks.json file:

<pre>
{
\"relation\": [\"delegate_permission/common.handle_all_urls\"],
\"target\"  : {\"namespace\": \"android_app\", \"package_name\": \"com.example.app\",
             \"sha256_cert_fingerprints\": [\"00:11:22:33\"] }
}
</pre>

Then invoking {@link AbstractStatementRetriever#retrieveStatements(AbstractAsset)} will return a
{@link Statement} with {@link #getSource} equal to the input parameter, {@link #getRelation}
equal to

<pre>Relation.create(\"delegate_permission\", \"common.get_login_creds\");</pre>

and with {@link #getTarget} equal to

<pre>AbstractAsset.create(\"{\\\"namespace\\\" : \\\"android_app\\\",\"
                          + \"\\\"package_name\\\": \\\"com.example.app\\\"}\"
                          + \"\\\"sha256_cert_fingerprints\\\": \\\"[\\\"00:11:22:33\\\"]\\\"}\");
</pre>"
      classrelation 11732023 // mTarget (<unidirectional association>)
	relation 11731255 --->
	  a role_name "mTarget" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11732023 // mTarget (<unidirectional association>)
	  b parent class_ref 4175031 // AbstractAsset
      end

      classrelation 11732151 // mRelation (<unidirectional association>)
	relation 11731383 --->
	  a role_name "mRelation" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11732151 // mRelation (<unidirectional association>)
	  b parent class_ref 4175287 // Relation
      end

      classrelation 11732279 // mSource (<unidirectional association>)
	relation 11731511 --->
	  a role_name "mSource" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11732279 // mSource (<unidirectional association>)
	  b parent class_ref 4175031 // AbstractAsset
      end

      operation 44373815 "Statement"
	private explicit_return_type ""
	nparams 3
	  param inout name "source" type class_ref 4175031 // AbstractAsset
	  param inout name "target" type class_ref 4175031 // AbstractAsset
	  param inout name "relation" type class_ref 4175287 // Relation
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44373943 "getSource"
	public return_type class_ref 4175031 // AbstractAsset
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Returns the source asset of the statement."
      end

      operation 44374071 "getTarget"
	public return_type class_ref 4175031 // AbstractAsset
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Returns the target asset of the statement."
      end

      operation 44374199 "getRelation"
	public return_type class_ref 4175287 // Relation
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	
	comment "Returns the relation of the statement."
      end

      operation 44374327 "create"
	class_operation public return_type class_ref 4176183 // Statement
	nparams 3
	  param inout name "source" type class_ref 4175031 // AbstractAsset
	  param inout name "target" type class_ref 4175031 // AbstractAsset
	  param inout name "relation" type class_ref 4175287 // Relation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0} ${p0}, @NonNull ${t1} ${p1}, @NonNull ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new Statement object for the specified target asset and relation. For example:
<pre>
  Asset asset = Asset.Factory.create(
      \"{\\\"namespace\\\" : \\\"web\\\",\\\"site\\\": \\\"https://www.test.com\\\"}\");
  Relation relation = Relation.create(\"delegate_permission\", \"common.get_login_creds\");
  Statement statement = Statement.create(asset, relation);
</pre>"
      end

      operation 44374455 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44374583 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44374711 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 4176311 "AndroidAppAsset"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Immutable value type that names an Android app asset.

<p>An Android app can be named by its package name and certificate fingerprints using this JSON
string: { \"namespace\": \"android_app\", \"package_name\": \"[Java package name]\",
\"sha256_cert_fingerprints\": [\"[SHA256 fingerprint of signing cert]\", \"[additional cert]\", ...] }

<p>For example, { \"namespace\": \"android_app\", \"package_name\": \"com.test.mytestapp\",
\"sha256_cert_fingerprints\": [\"24:D9:B4:57:A6:42:FB:E6:E5:B8:D6:9E:7B:2D:C2:D1:CB:D1:77:17:1D:7F:D4:A9:16:10:11:AB:92:B9:8F:3F\"]
}

<p>Given a signed APK, Java 7's commandline keytool can compute the fingerprint using:
{@code keytool -list -printcert -jarfile signed_app.apk}

<p>Each entry in \"sha256_cert_fingerprints\" is a colon-separated hex string (e.g. 14:6D:E9:...)
representing the certificate SHA-256 fingerprint.

 package private "
      classrelation 11729079 // <generalisation>
	relation 11728311 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 11729079 // <generalisation>
	  b parent class_ref 4175031 // AbstractAsset
      end

      classrelation 11729207 // MISSING_FIELD_FORMAT_STRING (<unidirectional association>)
	relation 11728439 --->
	  a role_name "MISSING_FIELD_FORMAT_STRING" init_value " \"Expected %s to be set.\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11729207 // MISSING_FIELD_FORMAT_STRING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11729335 // MISSING_APPCERTS_FORMAT_STRING (<unidirectional association>)
	relation 11728567 --->
	  a role_name "MISSING_APPCERTS_FORMAT_STRING" init_value "
            \"Expected %s to be non-empty array.\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11729335 // MISSING_APPCERTS_FORMAT_STRING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11729463 // APPCERT_NOT_STRING_FORMAT_STRING (<unidirectional association>)
	relation 11728695 --->
	  a role_name "APPCERT_NOT_STRING_FORMAT_STRING" init_value " \"Expected all %s to be strings.\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11729463 // APPCERT_NOT_STRING_FORMAT_STRING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11729591 // mCertFingerprints (<unidirectional association>)
	relation 11728823 --->
	  stereotype "List"
	  a role_name "mCertFingerprints" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 11729591 // mCertFingerprints (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11729719 // mPackageName (<unidirectional association>)
	relation 11728951 --->
	  a role_name "mPackageName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11729719 // mPackageName (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 44368311 "getCertFingerprints"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44368439 "getPackageName"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44368567 "toJson"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44368695 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44368823 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44368951 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44369079 "lookupKey"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44369207 "followInsecureInclude"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44369335 "create"
	class_operation public return_type class_ref 4176311 // AndroidAppAsset
	nparams 1
	  param inout name "asset" explicit_type "JSONObject"
	nexceptions 1
	  exception class_ref 4175415 // AssociationServiceException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the input is a valid Android app asset.

@param asset a JSONObject that has \"namespace\", \"package_name\", and
             \"sha256_cert_fingerprints\" fields.
@throws AssociationServiceException if the asset is not well formatted."
      end

      operation 44369463 "create"
	class_operation public return_type class_ref 4176311 // AndroidAppAsset
	nparams 2
	  param inout name "packageName" type class_ref 129591 // String
	  param inout name "certFingerprints" explicit_type "List<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new AndroidAppAsset.

@param packageName the package name of the Android app.
@param certFingerprints at least one of the Android app signing certificate sha-256
                        fingerprint."
      end

      operation 44369591 "AndroidAppAsset"
	private explicit_return_type ""
	nparams 2
	  param inout name "packageName" type class_ref 129591 // String
	  param inout name "certFingerprints" explicit_type "List<String>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44369719 "sortAndDeDuplicate"
	private return_type class_ref 129591 // String
	nparams 1
	  param inout name "certs" explicit_type "List<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an ASCII-sorted copy of the list of certs with all duplicates removed."
      end
    end

    class 4176439 "AndroidAppAssetMatcher"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Match assets that have the same 'package_name' field and have at least one common certificate
fingerprint in 'sha256_cert_fingerprints' field.

 package private "
      classrelation 11729847 // <generalisation>
	relation 11729079 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 11729847 // <generalisation>
	  b parent class_ref 4175159 // AbstractAssetMatcher
      end

      classrelation 11729975 // mQuery (<unidirectional association>)
	relation 11729207 --->
	  a role_name "mQuery" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11729975 // mQuery (<unidirectional association>)
	  b parent class_ref 4176311 // AndroidAppAsset
      end

      operation 44369847 "AndroidAppAssetMatcher"
	public explicit_return_type ""
	nparams 1
	  param inout name "query" type class_ref 4176311 // AndroidAppAsset
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44369975 "matches"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "asset" type class_ref 4175031 // AbstractAsset
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44370103 "getMatchedLookupKey"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 4176567 "AndroidPackageInfoFetcher"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class that provides information about an android app from {@link PackageManager}.

Visible for testing.

@hide"
      classrelation 11730103 // ASSOCIATED_ASSETS_KEY (<unidirectional association>)
	relation 11729335 --->
	  a role_name "ASSOCIATED_ASSETS_KEY" init_value " \"associated_assets\"" class_relation const_relation private
	    comment "
The name of the metadata tag in AndroidManifest.xml that stores the associated asset array
ID. The metadata tag should use the android:resource attribute to point to an array resource
that contains the associated assets.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11730103 // ASSOCIATED_ASSETS_KEY (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11730231 // mContext (<unidirectional association>)
	relation 11729463 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11730231 // mContext (<unidirectional association>)
	  b parent class_ref 128567 // Context
      end

      operation 44370231 "AndroidPackageInfoFetcher"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 128567 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44370359 "getCertFingerprints"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 133303 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Sha-256 fingerprints of all certificates from the specified package as a list of
upper case HEX Strings with bytes separated by colons. Given an app {@link
android.content.pm.Signature}, the fingerprint can be computed as {@link
Utils#computeNormalizedSha256Fingerprint} {@code(signature.toByteArray())}.

<p>Given a signed APK, Java 7's commandline keytool can compute the fingerprint using: {@code
keytool -list -printcert -jarfile signed_app.apk}

<p>Example: \"10:39:38:EE:45:37:E5:9E:8E:E7:92:F6:54:50:4F:B8:34:6F:C6:B3:46:D0:BB:C4:41:5F:C3:39:FC:FC:8E:C1\"

@throws NameNotFoundException if an app with packageName is not installed on the device."
      end

      operation 44370487 "getStatements"
	public return_type class_ref 129591 // String
	nparams 1
	  param inout name "packageName" type class_ref 129591 // String
	nexceptions 1
	  exception class_ref 133303 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all statements that the specified package makes in its AndroidManifest.xml.

@throws NameNotFoundException if the app is not installed on the device."
      end
    end

    class 4176695 "AssetFactory"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Factory to create asset from JSON string.

 package private "
      classrelation 11730359 // FIELD_NOT_STRING_FORMAT_STRING (<unidirectional association>)
	relation 11729591 --->
	  a role_name "FIELD_NOT_STRING_FORMAT_STRING" init_value " \"Expected %s to be string.\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11730359 // FIELD_NOT_STRING_FORMAT_STRING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 44370615 "AssetFactory"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44370743 "create"
	class_operation public return_type class_ref 4175031 // AbstractAsset
	nparams 1
	  param inout name "asset" explicit_type "JSONObject"
	nexceptions 1
	  exception class_ref 4175415 // AssociationServiceException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the input is a valid asset with purposes.

@throws AssociationServiceException if the asset is not well formatted."
      end
    end

    class 4176823 "AssetJsonWriter"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Creates a Json string where the order of the fields can be specified.

 package private "
      attribute 13150775 "mStringWriter"
	private explicit_type "StringWriter"
	init_value " new StringWriter()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 11730487 // mWriter (<unidirectional association>)
	relation 11729719 --->
	  a role_name "mWriter" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11730487 // mWriter (<unidirectional association>)
	  b parent class_ref 663479 // JsonWriter
      end

      attribute 13150903 "mClosed"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 44370871 "AssetJsonWriter"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44370999 "writeFieldLower"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "value" type class_ref 129591 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a field to the output, putting both the key and value in lowercase. Null values are
not written."
      end

      operation 44371127 "writeArrayUpper"
	public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 129591 // String
	  param inout name "values" explicit_type "List<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends an array to the output, putting both the key and values in lowercase. If {@code
values} is null, this field will not be written. Individual values in the list must not be
null."
      end

      operation 44371255 "closeAndGetString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of the constructed json. After calling this method, {@link
#writeFieldLower} can no longer be called."
      end
    end

    class 4176951 "AssetMatcherFactory"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Factory to create asset matcher from JSON string.

 package private "
      classrelation 11730615 // FIELD_NOT_STRING_FORMAT_STRING (<unidirectional association>)
	relation 11729847 --->
	  a role_name "FIELD_NOT_STRING_FORMAT_STRING" init_value " \"Expected %s to be string.\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11730615 // FIELD_NOT_STRING_FORMAT_STRING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11730743 // NAMESPACE_NOT_SUPPORTED_STRING (<unidirectional association>)
	relation 11729975 --->
	  a role_name "NAMESPACE_NOT_SUPPORTED_STRING" init_value " \"Namespace %s is not supported.\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11730743 // NAMESPACE_NOT_SUPPORTED_STRING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 44371383 "create"
	class_operation public return_type class_ref 4175159 // AbstractAssetMatcher
	nparams 1
	  param inout name "query" type class_ref 129591 // String
	nexceptions 2
	  exception class_ref 4175415 // AssociationServiceException
	  explicit_exception "JSONException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 4177079 "DirectStatementRetriever"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An implementation of {@link AbstractStatementRetriever} that directly retrieves statements from
the asset.

 package private "
      classrelation 11730999 // <generalisation>
	relation 11730231 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 11730999 // <generalisation>
	  b parent class_ref 4174647 // AbstractStatementRetriever
      end

      attribute 13151031 "DO_NOT_CACHE_RESULT"
	class_attribute const_attribute private explicit_type "long"
	init_value " 0L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13151159 "HTTP_CONNECTION_TIMEOUT_MILLIS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13151287 "HTTP_CONNECTION_BACKOFF_MILLIS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13151415 "HTTP_CONNECTION_RETRY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13151543 "HTTP_CONTENT_SIZE_LIMIT_IN_BYTES"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1024 * 1024"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13151671 "MAX_INCLUDE_LEVEL"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 11731127 // WELL_KNOWN_STATEMENT_PATH (<unidirectional association>)
	relation 11730359 --->
	  a role_name "WELL_KNOWN_STATEMENT_PATH" init_value " \"/.well-known/assetlinks.json\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11731127 // WELL_KNOWN_STATEMENT_PATH (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11731255 // mUrlFetcher (<unidirectional association>)
	relation 11730487 --->
	  a role_name "mUrlFetcher" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11731255 // mUrlFetcher (<unidirectional association>)
	  b parent class_ref 4177207 // URLFetcher
      end

      classrelation 11731383 // mAndroidFetcher (<unidirectional association>)
	relation 11730615 --->
	  a role_name "mAndroidFetcher" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11731383 // mAndroidFetcher (<unidirectional association>)
	  b parent class_ref 4176567 // AndroidPackageInfoFetcher
      end
    end

    class 4177207 "URLFetcher"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Helper class for fetching HTTP or HTTPS URL.

Visible for testing.

@hide"
      classrelation 11732663 // TAG (<unidirectional association>)
	relation 11731895 --->
	  a role_name "TAG" init_value " URLFetcher.class.getSimpleName()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11732663 // TAG (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 13152055 "DO_NOT_CACHE_RESULT"
	class_attribute const_attribute private explicit_type "long"
	init_value " 0L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13152183 "INPUT_BUFFER_SIZE_IN_BYTES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1024"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 44375223 "getWebContentFromUrlWithRetry"
	public return_type class_ref 4177719 // WebContent
	nparams 5
	  param inout name "url" explicit_type "URL"
	  param in name "fileSizeLimit" explicit_type "long"
	  param in name "connectionTimeoutMillis" explicit_type "int"
	  param in name "backoffMillis" explicit_type "int"
	  param in name "retry" explicit_type "int"
	nexceptions 3
	  exception class_ref 4175415 // AssociationServiceException
	  explicit_exception "IOException"
	  explicit_exception "InterruptedException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the specified url and returns the content and ttl.

<p>
Retry {@code retry} times if the connection failed or timed out for any reason.
HTTP error code (e.g. 404/500) won't be retried.

@throws IOException if it can't retrieve the content due to a network problem.
@throws AssociationServiceException if the URL scheme is not http or https or the content
length exceeds {code fileSizeLimit}."
      end

      operation 44375351 "getWebContentFromUrl"
	public return_type class_ref 4177719 // WebContent
	nparams 3
	  param inout name "url" explicit_type "URL"
	  param in name "fileSizeLimit" explicit_type "long"
	  param in name "connectionTimeoutMillis" explicit_type "int"
	nexceptions 2
	  exception class_ref 4175415 // AssociationServiceException
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Fetches the specified url and returns the content and ttl.

@throws IOException if it can't retrieve the content due to a network problem.
@throws AssociationServiceException if the URL scheme is not http or https or the content
length exceeds {code fileSizeLimit}."
      end

      operation 44375479 "inputStreamToString"
	class_operation public return_type class_ref 129591 // String
	nparams 3
	  param inout name "inputStream" explicit_type "InputStream"
	  param in name "length" explicit_type "int"
	  param in name "sizeLimit" explicit_type "long"
	nexceptions 2
	  explicit_exception "IOException"
	  exception class_ref 4175415 // AssociationServiceException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visible for testing.
@hide"
      end

      operation 44375607 "getExpirationTimeMillisFromHTTPHeader"
	private explicit_return_type "Long"
	nparams 1
	  param inout name "headers" explicit_type "Map<String, List<String>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the HTTP headers to compute the ttl.

@param headers a map that map the header key to the header values. Can be null.
@return the ttl in millisecond or null if the ttl is not specified in the header."
      end

      operation 44375735 "joinHttpHeaders"
	private return_type class_ref 129591 // String
	nparams 1
	  param inout name "headers" explicit_type "Map<String, List<String>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<${type}, String> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts an HTTP header map of the format provided by {@linkHttpUrlConnection} to a map of
the format accepted by {@link HttpHeaderParser}. It does this by joining all the entries for
a given header key with \", \"."
      end
    end

    class 4177335 "JsonParser"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A helper class that creates a {@link JSONObject} from a {@link JsonReader}."
      operation 44371895 "JsonParser"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44372023 "parse"
	class_operation public explicit_return_type "JSONObject"
	nparams 1
	  param inout name "reader" type class_ref 288311 // JsonReader
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "JSONException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consumes and parses exactly one JSON object from the {@link JsonReader}.
The object's fields can only be objects, strings or arrays of strings."
      end

      operation 44372151 "parseArray"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "reader" type class_ref 288311 // JsonReader
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses one string array from the {@link JsonReader}."
      end
    end

    class 4177463 "ParsedStatement"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class that stores a list of statement and/or a list of delegate url.

 package private "
      classrelation 11731511 // mStatements (<unidirectional association>)
	relation 11730743 --->
	  stereotype "List"
	  a role_name "mStatements" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 11731511 // mStatements (<unidirectional association>)
	  b parent class_ref 4176183 // Statement
      end

      classrelation 11731639 // mDelegates (<unidirectional association>)
	relation 11730871 --->
	  stereotype "List"
	  a role_name "mDelegates" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 11731639 // mDelegates (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 44372279 "ParsedStatement"
	public explicit_return_type ""
	nparams 2
	  param inout name "statements" explicit_type "List<Statement>"
	  param inout name "delegates" explicit_type "List<String>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44372407 "getStatements"
	public return_type class_ref 4176183 // Statement
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44372535 "getDelegates"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 4177591 "StatementParser"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility class that parses JSON-formatted statements.

 package private "
      classrelation 11732407 // FIELD_NOT_STRING_FORMAT_STRING (<unidirectional association>)
	relation 11731639 --->
	  a role_name "FIELD_NOT_STRING_FORMAT_STRING" init_value " \"Expected %s to be string.\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11732407 // FIELD_NOT_STRING_FORMAT_STRING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11732535 // FIELD_NOT_ARRAY_FORMAT_STRING (<unidirectional association>)
	relation 11731767 --->
	  a role_name "FIELD_NOT_ARRAY_FORMAT_STRING" init_value " \"Expected %s to be array.\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11732535 // FIELD_NOT_ARRAY_FORMAT_STRING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      operation 44374839 "parseStatementList"
	class_operation package return_type class_ref 4177463 // ParsedStatement
	nparams 2
	  param inout name "statementList" type class_ref 129591 // String
	  param inout name "source" type class_ref 4175031 // AbstractAsset
	nexceptions 2
	  explicit_exception "JSONException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a JSON array of statements."
      end

      operation 44374967 "parseStatement"
	class_operation package return_type class_ref 4177463 // ParsedStatement
	nparams 2
	  param inout name "statementString" type class_ref 129591 // String
	  param inout name "source" type class_ref 4175031 // AbstractAsset
	nexceptions 3
	  exception class_ref 4175415 // AssociationServiceException
	  explicit_exception "IOException"
	  explicit_exception "JSONException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a single JSON statement."
      end

      operation 44375095 "parseStatement"
	class_operation package return_type class_ref 4177463 // ParsedStatement
	nparams 2
	  param inout name "reader" type class_ref 288311 // JsonReader
	  param inout name "source" type class_ref 4175031 // AbstractAsset
	nexceptions 3
	  explicit_exception "JSONException"
	  exception class_ref 4175415 // AssociationServiceException
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses a single JSON statement. This method guarantees that exactly one JSON object
will be consumed."
      end
    end

    class 4177719 "WebContent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An immutable value type representing the response from a web server.

Visible for testing.

@hide"
      classrelation 11734583 // mContent (<unidirectional association>)
	relation 11733815 --->
	  a role_name "mContent" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11734583 // mContent (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 13152567 "mExpireTimeMillis"
	const_attribute private explicit_type "Long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 44378551 "WebContent"
	public explicit_return_type ""
	nparams 2
	  param inout name "content" type class_ref 129591 // String
	  param inout name "expireTimeMillis" explicit_type "Long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44378679 "getExpireTimeMillis"
	public explicit_return_type "Long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the expiration time of the content as specified in the HTTP header."
      end

      operation 44378807 "getContent"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns content of the HTTP message body."
      end
    end

    class 4177847 "Utils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility library for computing certificate fingerprints. Also includes fields name used by
Statement JSON string."
      operation 44375863 "Utils"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 11732791 // NAMESPACE_FIELD (<unidirectional association>)
	relation 11732023 --->
	  a role_name "NAMESPACE_FIELD" init_value " \"namespace\"" class_relation const_relation public
	    comment "
Field name for namespace.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11732791 // NAMESPACE_FIELD (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11732919 // NAMESPACE_WEB (<unidirectional association>)
	relation 11732151 --->
	  a role_name "NAMESPACE_WEB" init_value " \"web\"" class_relation const_relation public
	    comment "
Supported asset namespaces.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11732919 // NAMESPACE_WEB (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11733047 // NAMESPACE_ANDROID_APP (<unidirectional association>)
	relation 11732279 --->
	  a role_name "NAMESPACE_ANDROID_APP" init_value " \"android_app\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11733047 // NAMESPACE_ANDROID_APP (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11733175 // WEB_ASSET_FIELD_SITE (<unidirectional association>)
	relation 11732407 --->
	  a role_name "WEB_ASSET_FIELD_SITE" init_value " \"site\"" class_relation const_relation public
	    comment "
Field names in a web asset descriptor.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11733175 // WEB_ASSET_FIELD_SITE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11733303 // ANDROID_APP_ASSET_FIELD_PACKAGE_NAME (<unidirectional association>)
	relation 11732535 --->
	  a role_name "ANDROID_APP_ASSET_FIELD_PACKAGE_NAME" init_value " \"package_name\"" class_relation const_relation public
	    comment "
Field names in a Android app asset descriptor.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11733303 // ANDROID_APP_ASSET_FIELD_PACKAGE_NAME (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11733431 // ANDROID_APP_ASSET_FIELD_CERT_FPS (<unidirectional association>)
	relation 11732663 --->
	  a role_name "ANDROID_APP_ASSET_FIELD_CERT_FPS" init_value " \"sha256_cert_fingerprints\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11733431 // ANDROID_APP_ASSET_FIELD_CERT_FPS (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11733559 // ASSET_DESCRIPTOR_FIELD_RELATION (<unidirectional association>)
	relation 11732791 --->
	  a role_name "ASSET_DESCRIPTOR_FIELD_RELATION" init_value " \"relation\"" class_relation const_relation public
	    comment "
Field names in a statement.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11733559 // ASSET_DESCRIPTOR_FIELD_RELATION (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11733687 // ASSET_DESCRIPTOR_FIELD_TARGET (<unidirectional association>)
	relation 11732919 --->
	  a role_name "ASSET_DESCRIPTOR_FIELD_TARGET" init_value " \"target\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11733687 // ASSET_DESCRIPTOR_FIELD_TARGET (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11733815 // DELEGATE_FIELD_DELEGATE (<unidirectional association>)
	relation 11733047 --->
	  a role_name "DELEGATE_FIELD_DELEGATE" init_value " \"include\"" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11733815 // DELEGATE_FIELD_DELEGATE (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 13152311 "HEX_DIGITS"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
            'A', 'B', 'C', 'D', 'E', 'F' }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 44375991 "joinStrings"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "separator" type class_ref 129591 // String
	  param inout name "strings" explicit_type "List<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Joins a list of strings, by placing separator between each string. For example,
{@code joinStrings(\"; \", Arrays.asList(new String[]{\"a\", \"b\", \"c\"}))} returns
\"{@code a; b; c}\"."
      end

      operation 44376119 "getCertFingerprintsFromPackageManager"
	class_operation public return_type class_ref 129591 // String
	nparams 2
	  param inout name "packageName" type class_ref 129591 // String
	  param inout name "context" type class_ref 128567 // Context
	nexceptions 1
	  exception class_ref 133303 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the normalized sha-256 fingerprints of a given package according to the Android
package manager."
      end

      operation 44376247 "computeNormalizedSha256Fingerprint"
	class_operation public return_type class_ref 129591 // String
	nparams 1
	  param inout name "signature" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the hash of the byte array using the specified algorithm, returning a hex string
with a colon between each byte."
      end

      operation 44376375 "hasCommonString"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "list1" explicit_type "List<String>"
	  param inout name "list2" explicit_type "List<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there is at least one common string between the two lists of string."
      end

      operation 44376503 "byteArrayToHexString"
	class_operation private return_type class_ref 129591 // String
	nparams 1
	  param inout name "array" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the byte array to an lowercase hexadecimal digits String with a colon character (:)
between each byte."
      end
    end

    class 4177975 "WebAsset"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Immutable value type that names a web asset.

<p>A web asset can be named by its protocol, domain, and port using this JSON string:
    { \"namespace\": \"web\",
      \"site\": \"[protocol]://[fully-qualified domain]{:[optional port]}\" }

<p>For example, a website hosted on a https server at www.test.com can be named using
    { \"namespace\": \"web\",
      \"site\": \"https://www.test.com\" }

<p>The only protocol supported now are https and http. If the optional port is not specified,
the default for each protocol will be used (i.e. 80 for http and 443 for https).

 package private "
      classrelation 11733943 // <generalisation>
	relation 11733175 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 11733943 // <generalisation>
	  b parent class_ref 4175031 // AbstractAsset
      end

      classrelation 11734071 // MISSING_FIELD_FORMAT_STRING (<unidirectional association>)
	relation 11733303 --->
	  a role_name "MISSING_FIELD_FORMAT_STRING" init_value " \"Expected %s to be set.\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11734071 // MISSING_FIELD_FORMAT_STRING (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      classrelation 11734199 // SCHEME_HTTP (<unidirectional association>)
	relation 11733431 --->
	  a role_name "SCHEME_HTTP" init_value " \"http\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11734199 // SCHEME_HTTP (<unidirectional association>)
	  b parent class_ref 129591 // String
      end

      attribute 13152439 "mUrl"
	const_attribute private explicit_type "URL"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 44376631 "WebAsset"
	private explicit_return_type ""
	nparams 1
	  param inout name "url" explicit_type "URL"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44376759 "getDomain"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44376887 "getPath"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44377015 "getScheme"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44377143 "getPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44377271 "toJson"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44377399 "toString"
	public return_type class_ref 129591 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44377527 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 132663 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44377655 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44377783 "lookupKey"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44377911 "followInsecureInclude"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44378039 "create"
	class_operation protected return_type class_ref 4177975 // WebAsset
	nparams 1
	  param inout name "asset" explicit_type "JSONObject"
	nexceptions 1
	  exception class_ref 4175415 // AssociationServiceException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that the input is a valid web asset.

@throws AssociationServiceException if the asset is not well formatted."
      end
    end

    class 4178103 "WebAssetMatcher"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Match assets that have the same 'site' field.

 package private "
      classrelation 11734327 // <generalisation>
	relation 11733559 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 11734327 // <generalisation>
	  b parent class_ref 4175159 // AbstractAssetMatcher
      end

      classrelation 11734455 // mQuery (<unidirectional association>)
	relation 11733687 --->
	  a role_name "mQuery" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 11734455 // mQuery (<unidirectional association>)
	  b parent class_ref 4177975 // WebAsset
      end

      operation 44378167 "WebAssetMatcher"
	public explicit_return_type ""
	nparams 1
	  param inout name "query" type class_ref 4177975 // WebAsset
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 44378295 "matches"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "asset" type class_ref 4175031 // AbstractAsset
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 44378423 "getMatchedLookupKey"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end
  end

  deploymentview 337847 "retriever"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1778743 "AbstractAsset"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.JsonReader;
import org.json.JSONException;
import java.io.IOException;
import java.io.StringReader;
${definition}"
      associated_classes
	class_ref 4175031 // AbstractAsset
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1778871 "AbstractAssetMatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.json.JSONException;
${definition}"
      associated_classes
	class_ref 4175159 // AbstractAssetMatcher
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1778999 "AbstractStatementRetriever"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.annotation.NonNull;
import java.util.List;
${definition}"
      associated_classes
	class_ref 4174647 // AbstractStatementRetriever
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1779127 "AndroidAppAsset"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
${definition}"
      associated_classes
	class_ref 4176311 // AndroidAppAsset
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1779255 "AndroidAppAssetMatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.HashSet;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 4176439 // AndroidAppAssetMatcher
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1779383 "AndroidPackageInfoFetcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.Resources.NotFoundException;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
${definition}"
      associated_classes
	class_ref 4176567 // AndroidPackageInfoFetcher
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1779511 "AssetFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.json.JSONObject;
${definition}"
      associated_classes
	class_ref 4176695 // AssetFactory
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1779639 "AssetJsonWriter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.JsonWriter;
import java.io.IOException;
import java.io.StringWriter;
import java.util.List;
import java.util.Locale;
${definition}"
      associated_classes
	class_ref 4176823 // AssetJsonWriter
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1779767 "AssetMatcherFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.json.JSONException;
import org.json.JSONObject;
${definition}"
      associated_classes
	class_ref 4176951 // AssetMatcherFactory
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1779895 "AssociationServiceException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 4175415 // AssociationServiceException
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1780023 "JsonParser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.JsonReader;
import android.util.JsonToken;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 4177335 // JsonParser
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1780151 "ParsedStatement"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.List;
${definition}"
      associated_classes
	class_ref 4177463 // ParsedStatement
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1780279 "Relation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
import java.util.regex.Pattern;
${definition}"
      associated_classes
	class_ref 4175287 // Relation
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1780407 "Statement"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.NonNull;
${definition}"
      associated_classes
	class_ref 4176183 // Statement
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1780535 "StatementParser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.JsonReader;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 4177591 // StatementParser
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1780663 "URLFetcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import com.android.volley.Cache;
import com.android.volley.NetworkResponse;
import com.android.volley.toolbox.HttpHeaderParser;
import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 4177207 // URLFetcher
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1780791 "Utils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.Signature;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
${definition}"
      associated_classes
	class_ref 4177847 // Utils
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1780919 "WebAsset"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.json.JSONObject;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Locale;
${definition}"
      associated_classes
	class_ref 4177975 // WebAsset
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1781047 "WebAssetMatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 4178103 // WebAssetMatcher
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1781175 "WebContent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 4177719 // WebContent
      end
      comment "Copyright (C) 2015 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
