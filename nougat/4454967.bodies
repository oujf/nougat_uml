class InputMapper
!!!45848503.cpp!!!	populateDeviceInfo(inout info : InputDeviceInfo) : void
    info->addSource(getSources());
!!!45849271.cpp!!!	getKeyCodeState(in sourceMask : uint32_t, in keyCode : int32_t) : int32_t
    return AKEY_STATE_UNKNOWN;
!!!45849399.cpp!!!	getScanCodeState(in sourceMask : uint32_t, in scanCode : int32_t) : int32_t
    return AKEY_STATE_UNKNOWN;
!!!45849527.cpp!!!	getSwitchState(in sourceMask : uint32_t, in switchCode : int32_t) : int32_t
    return AKEY_STATE_UNKNOWN;
!!!45849655.cpp!!!	markSupportedKeyCodes(in sourceMask : uint32_t, in numCodes : size_t, in keyCodes : int32_t, inout outFlags : uint8_t) : bool
    return false;
!!!45850167.cpp!!!	getMetaState() : int32_t
    return 0;
!!!45850423.cpp!!!	updateExternalStylusState(in state : StylusState) : void

!!!45850679.cpp!!!	getAbsoluteAxisInfo(in axis : int32_t, inout axisInfo : RawAbsoluteAxisInfo) : status_t
    return getEventHub()->getAbsoluteAxisInfo(getDeviceId(), axis, axisInfo);
!!!45850807.cpp!!!	bumpGeneration() : void
    mDevice->bumpGeneration();
!!!45850935.cpp!!!	dumpRawAbsoluteAxisInfo(inout dump : String8, in axis : RawAbsoluteAxisInfo, in name : char) : void
    if (axis.valid) {
        dump.appendFormat(INDENT4 "%s: min=%d, max=%d, flat=%d, fuzz=%d, resolution=%d\n",
                name, axis.minValue, axis.maxValue, axis.flat, axis.fuzz, axis.resolution);
    } else {
        dump.appendFormat(INDENT4 "%s: unknown range\n", name);
    }
!!!45851063.cpp!!!	dumpStylusState(inout dump : String8, in state : StylusState) : void
    dump.appendFormat(INDENT4 "When: %" PRId64 "\n", state.when);
    dump.appendFormat(INDENT4 "Pressure: %f\n", state.pressure);
    dump.appendFormat(INDENT4 "Button State: 0x%08x\n", state.buttons);
    dump.appendFormat(INDENT4 "Tool Type: %" PRId32 "\n", state.toolType);
