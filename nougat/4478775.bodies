class EventControlThread
!!!45923767.cpp!!!	setVsyncEnabled(in enabled : bool) : void
    Mutex::Autolock lock(mMutex);
    mVsyncEnabled = enabled;
    mCond.signal();
!!!45923895.cpp!!!	threadLoop() : bool
    Mutex::Autolock lock(mMutex);

    bool vsyncEnabled = mVsyncEnabled;

#ifdef USE_HWC2
    mFlinger->setVsyncEnabled(HWC_DISPLAY_PRIMARY, mVsyncEnabled);
#else
    mFlinger->eventControl(HWC_DISPLAY_PRIMARY, SurfaceFlinger::EVENT_VSYNC,
            mVsyncEnabled);
#endif

    while (true) {
        status_t err = mCond.wait(mMutex);
        if (err != NO_ERROR) {
            ALOGE("error waiting for new events: %s (%d)",
                strerror(-err), err);
            return false;
        }

        if (vsyncEnabled != mVsyncEnabled) {
#ifdef USE_HWC2
            mFlinger->setVsyncEnabled(HWC_DISPLAY_PRIMARY, mVsyncEnabled);
#else
            mFlinger->eventControl(HWC_DISPLAY_PRIMARY,
                    SurfaceFlinger::EVENT_VSYNC, mVsyncEnabled);
#endif
            vsyncEnabled = mVsyncEnabled;
        }
    }

    return false;
