class SQLiteDatabaseConfiguration
!!!2961975.java!!!	SQLiteDatabaseConfiguration(inout path : String, in openFlags : int)
        if (path == null) {
            throw new IllegalArgumentException("path must not be null.");
        }

        this.path = path;
        label = stripPathForLogs(path);
        this.openFlags = openFlags;

        // Set default values for optional parameters.
        maxSqlCacheSize = 25;
        locale = Locale.getDefault();
!!!2962103.java!!!	SQLiteDatabaseConfiguration(inout other : SQLiteDatabaseConfiguration)
        if (other == null) {
            throw new IllegalArgumentException("other must not be null.");
        }

        this.path = other.path;
        this.label = other.label;
        updateParametersFrom(other);
!!!2962231.java!!!	updateParametersFrom(inout other : SQLiteDatabaseConfiguration) : void
        if (other == null) {
            throw new IllegalArgumentException("other must not be null.");
        }
        if (!path.equals(other.path)) {
            throw new IllegalArgumentException("other configuration must refer to "
                    + "the same database.");
        }

        openFlags = other.openFlags;
        maxSqlCacheSize = other.maxSqlCacheSize;
        locale = other.locale;
        foreignKeyConstraintsEnabled = other.foreignKeyConstraintsEnabled;
        customFunctions.clear();
        customFunctions.addAll(other.customFunctions);
!!!2962359.java!!!	isInMemoryDb() : boolean
        return path.equalsIgnoreCase(MEMORY_DB_PATH);
!!!2962487.java!!!	stripPathForLogs(inout path : String) : String
        if (path.indexOf('@') == -1) {
            return path;
        }
        return EMAIL_IN_DB_PATTERN.matcher(path).replaceAll("XX@YY");
