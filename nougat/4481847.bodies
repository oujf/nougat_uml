class Mesh
!!!45985207.cpp!!!	Mesh(in primitive : Mesh::Primitive, in vertexCount : size_t, in vertexSize : size_t, in texCoordSize : size_t = 0)
    if (vertexCount == 0) {
        mVertices = new float[1];
        mVertices[0] = 0.0f;
        mStride = 0;
        return;
    }

    size_t stride = vertexSize + texCoordSize;
    size_t remainder = (stride * vertexCount) / vertexCount;
    // Since all of the input parameters are unsigned, if stride is less than
    // either vertexSize or texCoordSize, it must have overflowed. remainder
    // will be equal to stride as long as stride * vertexCount doesn't overflow.
    if ((stride < vertexSize) || (remainder != stride)) {
        ALOGE("Overflow in Mesh(..., %zu, %zu, %zu)", vertexCount, vertexSize,
                texCoordSize);
        mVertices = new float[1];
        mVertices[0] = 0.0f;
        mVertexCount = 0;
        mVertexSize = 0;
        mTexCoordsSize = 0;
        mStride = 0;
        return;
    }

    mVertices = new float[stride * vertexCount];
    mStride = stride;
!!!45985335.cpp!!!	~Mesh()
    delete [] mVertices;
!!!45986103.cpp!!!	getPrimitive() : Mesh::Primitive
    return mPrimitive;
!!!45986231.cpp!!!	getPositions() : float
    return mVertices;
!!!45986359.cpp!!!	getTexCoords() : float
    return mVertices + mVertexSize;
!!!45986487.cpp!!!	getVertexCount() : size_t
    return mVertexCount;
!!!45986615.cpp!!!	getVertexSize() : size_t
    return mVertexSize;
!!!45986743.cpp!!!	getTexCoordsSize() : size_t
    return mTexCoordsSize;
!!!45986871.cpp!!!	getByteStride() : size_t
    return mStride*sizeof(float);
!!!45986999.cpp!!!	getStride() : size_t
    return mStride;
!!!45987511.cpp!!!	getPositions() : float
    return mVertices;
!!!45987639.cpp!!!	getTexCoords() : float
    return mVertices + mVertexSize;
