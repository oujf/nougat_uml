format 76
"editor" // nougat_src::frameworks::include::media::editor
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "d:/Workspace/AndroidSourceCode/nougat_src/frameworks/native/include/media/editor/"
  cpp_src_dir "d:/Workspace/AndroidSourceCode/nougat_src/frameworks/native/include/media/editor/"
  classview 411575 "editor"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 4376119 "II420ColorConverter"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 13824183 "getDecoderOutputFormat"
	public explicit_type "/* * getDecoderOutputFormat * Returns the color format (OMX_COLOR_FORMATTYPE) of the decoder output. * If it is I420 (OMX_COLOR_FormatYUV420Planar), no conversion is needed, * and convertDecoderOutputToI420() can be a no-op. */ int (*)()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}

    /*
     * getDecoderOutputFormat
     * Returns the color format (OMX_COLOR_FORMATTYPE) of the decoder output.
     * If it is I420 (OMX_COLOR_FormatYUV420Planar), no conversion is needed,
     * and convertDecoderOutputToI420() can be a no-op.
     */
    int (*${name})()${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "getDecoderOutputFormat
Returns the color format (OMX_COLOR_FORMATTYPE) of the decoder output.
If it is I420 (OMX_COLOR_FormatYUV420Planar), no conversion is needed,
and convertDecoderOutputToI420() can be a no-op.
"
      end

      attribute 13824311 "convertDecoderOutputToI420"
	public explicit_type "/* * convertDecoderOutputToI420 * @Desc Converts from the decoder output format to I420 format. * @note Caller (e.g. VideoEditor) owns the buffers * @param decoderBits (IN) Pointer to the buffer contains decoder output * @param decoderWidth (IN) Buffer width, as reported by the decoder * metadata (kKeyWidth) * @param decoderHeight (IN) Buffer height, as reported by the decoder * metadata (kKeyHeight) * @param decoderRect (IN) The rectangle of the actual frame, as * reported by decoder metadata (kKeyCropRect) * @param dstBits (OUT) Pointer to the output I420 buffer * @return -1 Any error * @return 0 No Error */ int (*)( void* decoderBits, int decoderWidth, int decoderHeight, ARect decoderRect, void* dstBits)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
    /*
     * convertDecoderOutputToI420
     * @Desc     Converts from the decoder output format to I420 format.
     * @note     Caller (e.g. VideoEditor) owns the buffers
     * @param    decoderBits   (IN) Pointer to the buffer contains decoder output
     * @param    decoderWidth  (IN) Buffer width, as reported by the decoder
     *                              metadata (kKeyWidth)
     * @param    decoderHeight (IN) Buffer height, as reported by the decoder
     *                              metadata (kKeyHeight)
     * @param    decoderRect   (IN) The rectangle of the actual frame, as
     *                              reported by decoder metadata (kKeyCropRect)
     * @param    dstBits      (OUT) Pointer to the output I420 buffer
     * @return   -1 Any error
     * @return   0  No Error
     */
    int (*${name})(
        void* decoderBits, int decoderWidth, int decoderHeight,
        ARect decoderRect, void* dstBits)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "convertDecoderOutputToI420
@Desc     Converts from the decoder output format to I420 format.
@note     Caller (e.g. VideoEditor) owns the buffers
@param    decoderBits   (IN) Pointer to the buffer contains decoder output
@param    decoderWidth  (IN) Buffer width, as reported by the decoder
                             metadata (kKeyWidth)
@param    decoderHeight (IN) Buffer height, as reported by the decoder
                             metadata (kKeyHeight)
@param    decoderRect   (IN) The rectangle of the actual frame, as
                             reported by decoder metadata (kKeyCropRect)
@param    dstBits      (OUT) Pointer to the output I420 buffer
@return   -1 Any error
@return   0  No Error
"
      end

      attribute 13824439 "getEncoderInputFormat"
	public explicit_type "/* * getEncoderIntputFormat * Returns the color format (OMX_COLOR_FORMATTYPE) of the encoder input. * If it is I420 (OMX_COLOR_FormatYUV420Planar), no conversion is needed, * and convertI420ToEncoderInput() and getEncoderInputBufferInfo() can * be no-ops. */ int (*)()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
    /*
     * getEncoderIntputFormat
     * Returns the color format (OMX_COLOR_FORMATTYPE) of the encoder input.
     * If it is I420 (OMX_COLOR_FormatYUV420Planar), no conversion is needed,
     * and convertI420ToEncoderInput() and getEncoderInputBufferInfo() can
     * be no-ops.
     */
    int (*${name})()${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "getEncoderIntputFormat
Returns the color format (OMX_COLOR_FORMATTYPE) of the encoder input.
If it is I420 (OMX_COLOR_FormatYUV420Planar), no conversion is needed,
and convertI420ToEncoderInput() and getEncoderInputBufferInfo() can
be no-ops.
"
      end

      attribute 13824567 "convertI420ToEncoderInput"
	public explicit_type "/* convertI420ToEncoderInput * @Desc This function converts from I420 to the encoder input format * @note Caller (e.g. VideoEditor) owns the buffers * @param srcBits (IN) Pointer to the input I420 buffer * @param srcWidth (IN) Width of the I420 frame * @param srcHeight (IN) Height of the I420 frame * @param encoderWidth (IN) Encoder buffer width, as calculated by * getEncoderBufferInfo() * @param encoderHeight (IN) Encoder buffer height, as calculated by * getEncoderBufferInfo() * @param encoderRect (IN) Rect coordinates of the actual frame inside * the encoder buffer, as calculated by * getEncoderBufferInfo(). * @param encoderBits (OUT) Pointer to the output buffer. The size of * this buffer is calculated by * getEncoderBufferInfo() * @return -1 Any error * @return 0 No Error */ int (*)( void* srcBits, int srcWidth, int srcHeight, int encoderWidth, int encoderHeight, ARect encoderRect, void* encoderBits)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
    /* convertI420ToEncoderInput
     * @Desc     This function converts from I420 to the encoder input format
     * @note     Caller (e.g. VideoEditor) owns the buffers
     * @param    srcBits       (IN) Pointer to the input I420 buffer
     * @param    srcWidth      (IN) Width of the I420 frame
     * @param    srcHeight     (IN) Height of the I420 frame
     * @param    encoderWidth  (IN) Encoder buffer width, as calculated by
     *                              getEncoderBufferInfo()
     * @param    encoderHeight (IN) Encoder buffer height, as calculated by
     *                              getEncoderBufferInfo()
     * @param    encoderRect   (IN) Rect coordinates of the actual frame inside
     *                              the encoder buffer, as calculated by
     *                              getEncoderBufferInfo().
     * @param    encoderBits  (OUT) Pointer to the output buffer. The size of
     *                              this buffer is calculated by
     *                              getEncoderBufferInfo()
     * @return   -1 Any error
     * @return   0  No Error
     */
    int (*${name})(
        void* srcBits, int srcWidth, int srcHeight,
        int encoderWidth, int encoderHeight, ARect encoderRect,
        void* encoderBits)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " convertI420ToEncoderInput
@Desc     This function converts from I420 to the encoder input format
@note     Caller (e.g. VideoEditor) owns the buffers
@param    srcBits       (IN) Pointer to the input I420 buffer
@param    srcWidth      (IN) Width of the I420 frame
@param    srcHeight     (IN) Height of the I420 frame
@param    encoderWidth  (IN) Encoder buffer width, as calculated by
                             getEncoderBufferInfo()
@param    encoderHeight (IN) Encoder buffer height, as calculated by
                             getEncoderBufferInfo()
@param    encoderRect   (IN) Rect coordinates of the actual frame inside
                             the encoder buffer, as calculated by
                             getEncoderBufferInfo().
@param    encoderBits  (OUT) Pointer to the output buffer. The size of
                             this buffer is calculated by
                             getEncoderBufferInfo()
@return   -1 Any error
@return   0  No Error
"
      end

      attribute 13824695 "getEncoderInputBufferInfo"
	public explicit_type "/* getEncoderInputBufferInfo * @Desc This function returns metadata for the encoder input buffer * based on the actual I420 frame width and height. * @note This API should be be used to obtain the necessary information * before calling convertI420ToEncoderInput(). * VideoEditor knows only the width and height of the I420 buffer, * but it also needs know the width, height, and size of the * encoder input buffer. The encoder input buffer width and height * are used to set the metadata for the encoder. * @param srcWidth (IN) Width of the I420 frame * @param srcHeight (IN) Height of the I420 frame * @param encoderWidth (OUT) Encoder buffer width needed * @param encoderHeight (OUT) Encoder buffer height needed * @param encoderRect (OUT) Rect coordinates of the actual frame inside * the encoder buffer * @param encoderBufferSize (OUT) The size of the buffer that need to be * allocated by the caller before invoking * convertI420ToEncoderInput(). * @return -1 Any error * @return 0 No Error */ int (*)( int srcWidth, int srcHeight, int* encoderWidth, int* encoderHeight, ARect* encoderRect, int* encoderBufferSize)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
    /* getEncoderInputBufferInfo
     * @Desc     This function returns metadata for the encoder input buffer
     *           based on the actual I420 frame width and height.
     * @note     This API should be be used to obtain the necessary information
     *           before calling convertI420ToEncoderInput().
     *           VideoEditor knows only the width and height of the I420 buffer,
     *           but it also needs know the width, height, and size of the
     *           encoder input buffer. The encoder input buffer width and height
     *           are used to set the metadata for the encoder.
     * @param    srcWidth      (IN) Width of the I420 frame
     * @param    srcHeight     (IN) Height of the I420 frame
     * @param    encoderWidth  (OUT) Encoder buffer width needed
     * @param    encoderHeight (OUT) Encoder buffer height needed
     * @param    encoderRect   (OUT) Rect coordinates of the actual frame inside
     *                               the encoder buffer
     * @param    encoderBufferSize  (OUT) The size of the buffer that need to be
     *                              allocated by the caller before invoking
     *                              convertI420ToEncoderInput().
     * @return   -1 Any error
     * @return   0  No Error
     */
    int (*${name})(
        int srcWidth, int srcHeight,
        int* encoderWidth, int* encoderHeight,
        ARect* encoderRect, int* encoderBufferSize)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " getEncoderInputBufferInfo
@Desc     This function returns metadata for the encoder input buffer
          based on the actual I420 frame width and height.
@note     This API should be be used to obtain the necessary information
          before calling convertI420ToEncoderInput().
          VideoEditor knows only the width and height of the I420 buffer,
          but it also needs know the width, height, and size of the
          encoder input buffer. The encoder input buffer width and height
          are used to set the metadata for the encoder.
@param    srcWidth      (IN) Width of the I420 frame
@param    srcHeight     (IN) Height of the I420 frame
@param    encoderWidth  (OUT) Encoder buffer width needed
@param    encoderHeight (OUT) Encoder buffer height needed
@param    encoderRect   (OUT) Rect coordinates of the actual frame inside
                              the encoder buffer
@param    encoderBufferSize  (OUT) The size of the buffer that need to be
                             allocated by the caller before invoking
                             convertI420ToEncoderInput().
@return   -1 Any error
@return   0  No Error
"
      end
    end
  end

  deploymentview 353975 "editor"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1877559 "II420ColorConverter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 4376119 // II420ColorConverter
      end
    end
  end
end
